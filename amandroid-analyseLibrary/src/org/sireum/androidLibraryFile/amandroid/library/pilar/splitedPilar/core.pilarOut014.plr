record [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:RejectedExecutionHandler|] {
   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy.<init>|] ([|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$AbortPolicy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1415f8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1415fe.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy.rejectedExecution|] ([|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|] v3 @type (this), [|java:lang:Runnable|] v4 @type (object), [|java:util:concurrent:ThreadPoolExecutor|] v5 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$AbortPolicy;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L141610.   v0:= new [|java:util:concurrent:RejectedExecutionException|];
#L141614.   v1:= new [|java:lang:StringBuilder|];
#L141618.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14161e.   v2:= "Task " @type (object, string);
#L141622.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L141628.   v1:= temp  @type object;
#L14162a.   call temp:=  [|java:lang:Object.toString|](v4) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L141630.   v2:= temp  @type object;
#L141632.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L141638.   v1:= temp  @type object;
#L14163a.   v2:= " rejected from " @type (object, string);
#L14163e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L141644.   v1:= temp  @type object;
#L141646.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.toString|](v5) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.toString:()Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L14164c.   v2:= temp  @type object;
#L14164e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L141654.   v1:= temp  @type object;
#L141656.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14165c.   v1:= temp  @type object;
#L14165e.   call temp:=  [|java:util:concurrent:RejectedExecutionException.<init>|](v0, v1) @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:RejectedExecutionException|] @type direct;
#L141664.   throw v0;

   }
record [|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:RejectedExecutionHandler|] {
   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy.<init>|] ([|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L141678.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14167e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy.rejectedExecution|] ([|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:util:concurrent:ThreadPoolExecutor|] v3 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor$CallerRunsPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141690.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isShutdown|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L141696.   v0:= temp;
#L141698.   if v0 != 0 then goto L1416a2;
#L14169c.   call temp:=  [|java:lang:Runnable.run|](v2) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L1416a2.   return @void ;

   }
record [|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:RejectedExecutionHandler|] {
   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy.<init>|] ([|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1416b4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1416ba.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy.rejectedExecution|] ([|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:util:concurrent:ThreadPoolExecutor|] v3 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor$DiscardOldestPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1416cc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isShutdown|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L1416d2.   v0:= temp;
#L1416d4.   if v0 != 0 then goto L1416ec;
#L1416d8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L1416de.   v0:= temp  @type object;
#L1416e0.   call temp:=  [|java:util:concurrent:BlockingQueue.poll|](v0) @signature [|Ljava/util/concurrent/BlockingQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L1416e6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.execute|](v3, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L1416ec.   return @void ;

   }
record [|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:RejectedExecutionHandler|] {
   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy.<init>|] ([|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$DiscardPolicy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L141700.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L141706.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy.rejectedExecution|] ([|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy|] v0 @type (this), [|java:lang:Runnable|] v1 @type (object), [|java:util:concurrent:ThreadPoolExecutor|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor$DiscardPolicy|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$DiscardPolicy;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @Access PUBLIC {
      local temp ;
      
#L141718.   return @void ;

   }
record [|java:util:concurrent:ThreadPoolExecutor$Worker|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:AbstractQueuedSynchronizer|], [|java:lang:Runnable|] {
      [|long|] [|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]    @AccessFlag VOLATILE;
      [|java:lang:Runnable|] [|java:util:concurrent:ThreadPoolExecutor$Worker.firstTask|]    @AccessFlag ;
      [|java:util:concurrent:ThreadPoolExecutor|] [|java:util:concurrent:ThreadPoolExecutor$Worker.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:lang:Thread|] [|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]    @AccessFlag FINAL;
   }
      global [|long|] @@[|java:util:concurrent:ThreadPoolExecutor$Worker.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$Worker.<init>|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this), [|java:util:concurrent:ThreadPoolExecutor|] v2 @type (object), [|java:lang:Runnable|] v3 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.<init>:(Ljava/util/concurrent/ThreadPoolExecutor;Ljava/lang/Runnable;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L14172c.   v1.[|java:util:concurrent:ThreadPoolExecutor$Worker.this$0|]  := v2 @type object;
#L141730.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L141736.   v1.[|java:util:concurrent:ThreadPoolExecutor$Worker.firstTask|]  := v3 @type object;
#L14173a.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getThreadFactory|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L141740.   v0:= temp  @type object;
#L141742.   call temp:=  [|java:util:concurrent:ThreadFactory.newThread|](v0, v1) @signature [|Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:ThreadFactory|] @type interface;
#L141748.   v0:= temp  @type object;
#L14174a.   v1.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]  := v0 @type object;
#L14174e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor$Worker.isHeldExclusively|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isHeldExclusively:()Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L141760.   v0:= 1  @length 4;
#L141762.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.getState|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.getState:()I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L141768.   v1:= temp;
#L14176a.   if v1 != v0 then goto L141770;
#L14176e.   return v0;
#L141770.   v0:= 0  @length 4;
#L141772.   goto L14176e;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor$Worker.isLocked|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isLocked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141784.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L14178a.   v0:= temp;
#L14178c.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$Worker.lock|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.lock:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1417a0.   v0:= 1  @length 4;
#L1417a2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.acquire|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.acquire:(I)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L1417a8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$Worker.run|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1417bc.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor$Worker.this$0|]   @type object;
#L1417c0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runWorker|](v0, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runWorker:(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L1417c6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor$Worker.tryAcquire|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.tryAcquire:(I)Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1417d8.   v0:= 1  @length 4;
#L1417da.   v1:= 0  @length 4;
#L1417dc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.compareAndSetState|](v3, v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L1417e2.   v2:= temp;
#L1417e4.   if v2 == 0 then goto L1417f8;
#L1417e8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1417ee.   v1:= temp  @type object;
#L1417f0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.setExclusiveOwnerThread|](v3, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L1417f6.   return v0;
#L1417f8.   v0:= v1;
#L1417fa.   goto L1417f6;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor$Worker.tryLock|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.tryLock:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14180c.   v0:= 1  @length 4;
#L14180e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.tryAcquire|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L141814.   v0:= temp;
#L141816.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor$Worker.tryRelease|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.tryRelease:(I)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L141828.   v0:= 0  @length 4;
#L14182a.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.setExclusiveOwnerThread|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L141830.   v0:= 0  @length 4;
#L141832.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.setState|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.setState:(I)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L141838.   v0:= 1  @length 4;
#L14183a.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|] ([|java:util:concurrent:ThreadPoolExecutor$Worker|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor$Worker|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14184c.   v0:= 1  @length 4;
#L14184e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.release|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.release:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L141854.   return @void ;

   }
record [|java:util:concurrent:TimeUnit|]  @type class @AccessFlag PUBLIC_ABSTRACT_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:util:concurrent:TimeUnit|][] @@[|java:util:concurrent:TimeUnit.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C0|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C1|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C2|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C3|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C4|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C5|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:TimeUnit.C6|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.DAYS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.HOURS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|long|] @@[|java:util:concurrent:TimeUnit.MAX|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.MICROSECONDS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.MINUTES|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:concurrent:TimeUnit|] @@[|java:util:concurrent:TimeUnit.SECONDS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:util:concurrent:TimeUnit.<clinit>|] () @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L141868.   v7:= 4  @length 4;
#L14186a.   v6:= 3  @length 4;
#L14186c.   v5:= 2  @length 4;
#L14186e.   v4:= 1  @length 4;
#L141870.   v3:= 0  @length 4;
#L141872.   v0:= new [|java:util:concurrent:TimeUnit$1|];
#L141876.   v1:= "NANOSECONDS" @type (object, string);
#L14187a.   call temp:=  [|java:util:concurrent:TimeUnit$1.<init>|](v0, v1, v3) @signature [|Ljava/util/concurrent/TimeUnit$1;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$1|] @type direct;
#L141880.   @@[|java:util:concurrent:TimeUnit.NANOSECONDS|] := v0  @type object;
#L141884.   v0:= new [|java:util:concurrent:TimeUnit$2|];
#L141888.   v1:= "MICROSECONDS" @type (object, string);
#L14188c.   call temp:=  [|java:util:concurrent:TimeUnit$2.<init>|](v0, v1, v4) @signature [|Ljava/util/concurrent/TimeUnit$2;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$2|] @type direct;
#L141892.   @@[|java:util:concurrent:TimeUnit.MICROSECONDS|] := v0  @type object;
#L141896.   v0:= new [|java:util:concurrent:TimeUnit$3|];
#L14189a.   v1:= "MILLISECONDS" @type (object, string);
#L14189e.   call temp:=  [|java:util:concurrent:TimeUnit$3.<init>|](v0, v1, v5) @signature [|Ljava/util/concurrent/TimeUnit$3;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$3|] @type direct;
#L1418a4.   @@[|java:util:concurrent:TimeUnit.MILLISECONDS|] := v0  @type object;
#L1418a8.   v0:= new [|java:util:concurrent:TimeUnit$4|];
#L1418ac.   v1:= "SECONDS" @type (object, string);
#L1418b0.   call temp:=  [|java:util:concurrent:TimeUnit$4.<init>|](v0, v1, v6) @signature [|Ljava/util/concurrent/TimeUnit$4;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$4|] @type direct;
#L1418b6.   @@[|java:util:concurrent:TimeUnit.SECONDS|] := v0  @type object;
#L1418ba.   v0:= new [|java:util:concurrent:TimeUnit$5|];
#L1418be.   v1:= "MINUTES" @type (object, string);
#L1418c2.   call temp:=  [|java:util:concurrent:TimeUnit$5.<init>|](v0, v1, v7) @signature [|Ljava/util/concurrent/TimeUnit$5;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$5|] @type direct;
#L1418c8.   @@[|java:util:concurrent:TimeUnit.MINUTES|] := v0  @type object;
#L1418cc.   v0:= new [|java:util:concurrent:TimeUnit$6|];
#L1418d0.   v1:= "HOURS" @type (object, string);
#L1418d4.   v2:= 5  @length 4;
#L1418d6.   call temp:=  [|java:util:concurrent:TimeUnit$6.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit$6;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type direct;
#L1418dc.   @@[|java:util:concurrent:TimeUnit.HOURS|] := v0  @type object;
#L1418e0.   v0:= new [|java:util:concurrent:TimeUnit$7|];
#L1418e4.   v1:= "DAYS" @type (object, string);
#L1418e8.   v2:= 6  @length 4;
#L1418ea.   call temp:=  [|java:util:concurrent:TimeUnit$7.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit$7;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type direct;
#L1418f0.   @@[|java:util:concurrent:TimeUnit.DAYS|] := v0  @type object;
#L1418f4.   v0:= 7  @length 4;
#L1418f6.   v0:= new [|java:util:concurrent:TimeUnit|][v0];
#L1418fa.   v1:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L1418fe.   v0[v3]:= v1  @type object;
#L141902.   v1:= @@[|java:util:concurrent:TimeUnit.MICROSECONDS|]   @type object;
#L141906.   v0[v4]:= v1  @type object;
#L14190a.   v1:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L14190e.   v0[v5]:= v1  @type object;
#L141912.   v1:= @@[|java:util:concurrent:TimeUnit.SECONDS|]   @type object;
#L141916.   v0[v6]:= v1  @type object;
#L14191a.   v1:= @@[|java:util:concurrent:TimeUnit.MINUTES|]   @type object;
#L14191e.   v0[v7]:= v1  @type object;
#L141922.   v1:= 5  @length 4;
#L141924.   v2:= @@[|java:util:concurrent:TimeUnit.HOURS|]   @type object;
#L141928.   v0[v1]:= v2  @type object;
#L14192c.   v1:= 6  @length 4;
#L14192e.   v2:= @@[|java:util:concurrent:TimeUnit.DAYS|]   @type object;
#L141932.   v0[v1]:= v2  @type object;
#L141936.   @@[|java:util:concurrent:TimeUnit.$VALUES|] := v0  @type object;
#L14193a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:TimeUnit.<init>|] ([|java:util:concurrent:TimeUnit|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L14194c.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L141952.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:TimeUnit.<init>|] ([|java:util:concurrent:TimeUnit|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2, [|java:util:concurrent:TimeUnit$1|] v3 @type (object)) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L141964.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L14196a.   return @void ;

   }
    procedure [|java:util:concurrent:TimeUnit|] [|java:util:concurrent:TimeUnit.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.valueOf:(Ljava/lang/String;)Ljava/util/concurrent/TimeUnit;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L14197c.   v0:= new [|java:util:concurrent:TimeUnit|];
#L141980.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L141986.   v0:= temp  @type object;
#L141988.   v0:= ([|java:util:concurrent:TimeUnit|])v0;
#L14198c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:TimeUnit|][] [|java:util:concurrent:TimeUnit.values|] () @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.values:()[Ljava/util/concurrent/TimeUnit;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1419a0.   v0:= @@[|java:util:concurrent:TimeUnit.$VALUES|]   @type object;
#L1419a4.   call temp:=  [|java:util:concurrent:TimeUnit[].clone|](v0) @signature [|[Ljava/util/concurrent/TimeUnit;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:TimeUnit[]|] @type virtual;
#L1419aa.   v0:= temp  @type object;
#L1419ac.   v0:= ([|java:util:concurrent:TimeUnit|][])v0;
#L1419b0.   return v0  @type object;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.x|] ([|long|] v2, [|long|] v4, [|long|] v6) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.x:(JJJ)J|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L1419c4.   v0:= cmp(v2,v6);
#L1419c8.   if v0 <= 0 then goto L1419d8;
#L1419cc.   v0:= nanL  @length wide;
#L1419d6.   return v0  @type wide;
#L1419d8.   v0:= -v6  @type long;
#L1419da.   v0:= cmp(v2,v0);
#L1419de.   if v0 >= 0 then goto L1419e8;
#L1419e2.   v0:= -9223372036854775808L  @length wide_high16;
#L1419e6.   goto L1419d6;
#L1419e8.   v0:= v2 * v4  @type long;
#L1419ec.   goto L1419d6;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.convert|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141a00.   v0:= new [|java:lang:AbstractMethodError|];
#L141a04.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141a0a.   throw v0;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit.excessNanos|] ([|long|] v0, [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.excessNanos:(JJ)I|] @Access ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit.sleep|] ([|java:util:concurrent:TimeUnit|] v5 @type (this), [|long|] v6) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.sleep:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L141a1c.   v3:= 0  @length wide16;
#L141a20.   v3:= cmp(v6,v3);
#L141a24.   if v3 <= 0 then goto L141a3e;
#L141a28.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v5, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a2e.   v0:= temp  @type wide;
#L141a30.   call temp:=  [|java:util:concurrent:TimeUnit.excessNanos|](v5, v6, v7, v0, v1) @signature [|Ljava/util/concurrent/TimeUnit;.excessNanos:(JJ)I|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a36.   v2:= temp;
#L141a38.   call temp:=  [|java:lang:Thread.sleep|](v0, v1, v2) @signature [|Ljava/lang/Thread;.sleep:(JI)V|] @classDescriptor [|java:lang:Thread|] @type static;
#L141a3e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:TimeUnit.timedJoin|] ([|java:util:concurrent:TimeUnit|] v5 @type (this), [|java:lang:Thread|] v6 @type (object), [|long|] v7) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.timedJoin:(Ljava/lang/Thread;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L141a50.   v3:= 0  @length wide16;
#L141a54.   v3:= cmp(v7,v3);
#L141a58.   if v3 <= 0 then goto L141a72;
#L141a5c.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v5, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a62.   v0:= temp  @type wide;
#L141a64.   call temp:=  [|java:util:concurrent:TimeUnit.excessNanos|](v5, v7, v8, v0, v1) @signature [|Ljava/util/concurrent/TimeUnit;.excessNanos:(JJ)I|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a6a.   v2:= temp;
#L141a6c.   call temp:=  [|java:lang:Thread.join|](v6, v0, v1, v2) @signature [|Ljava/lang/Thread;.join:(JI)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L141a72.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:TimeUnit.timedWait|] ([|java:util:concurrent:TimeUnit|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|long|] v7) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.timedWait:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L141a84.   v3:= 0  @length wide16;
#L141a88.   v3:= cmp(v7,v3);
#L141a8c.   if v3 <= 0 then goto L141aa6;
#L141a90.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v5, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a96.   v0:= temp  @type wide;
#L141a98.   call temp:=  [|java:util:concurrent:TimeUnit.excessNanos|](v5, v7, v8, v0, v1) @signature [|Ljava/util/concurrent/TimeUnit;.excessNanos:(JJ)I|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141a9e.   v2:= temp;
#L141aa0.   call temp:=  [|java:lang:Object.wait|](v6, v0, v1, v2) @signature [|Ljava/lang/Object;.wait:(JI)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L141aa6.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toDays|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141ab8.   v0:= new [|java:lang:AbstractMethodError|];
#L141abc.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141ac2.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toHours|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141ad4.   v0:= new [|java:lang:AbstractMethodError|];
#L141ad8.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141ade.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toMicros|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141af0.   v0:= new [|java:lang:AbstractMethodError|];
#L141af4.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141afa.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toMillis|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141b0c.   v0:= new [|java:lang:AbstractMethodError|];
#L141b10.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141b16.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toMinutes|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141b28.   v0:= new [|java:lang:AbstractMethodError|];
#L141b2c.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141b32.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toNanos|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141b44.   v0:= new [|java:lang:AbstractMethodError|];
#L141b48.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141b4e.   throw v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit.toSeconds|] ([|java:util:concurrent:TimeUnit|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:TimeUnit|] @signature [|Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L141b60.   v0:= new [|java:lang:AbstractMethodError|];
#L141b64.   call temp:=  [|java:lang:AbstractMethodError.<init>|](v0) @signature [|Ljava/lang/AbstractMethodError;.<init>:()V|] @classDescriptor [|java:lang:AbstractMethodError|] @type direct;
#L141b6a.   throw v0;

   }
record [|java:util:concurrent:TimeUnit$1|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$1.<init>|] ([|java:util:concurrent:TimeUnit$1|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L141b7c.   v0:= 0  @length 4;
#L141b7e.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L141b84.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.convert|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141b98.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141b9e.   v0:= temp  @type wide;
#L141ba0.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$1.excessNanos|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3, [|long|] v5) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
        v1;
      
#L141bb4.    v0:= 0.000000  @length wide32;
#L141bba.   v0:= v0 * v5  @type long;
#L141bbc.   v0:= v3 - v0  @type long;
#L141bc0.   v0:= (int)v0  @type l2i;
#L141bc2.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toDays|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141bd4.   v0:= 0.000000L  @length wide;
#L141bde.   v0:= v3 / v0  @type long;
#L141be2.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toHours|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141bf4.   v0:= 0.000000L  @length wide;
#L141bfe.   v0:= v3 / v0  @type long;
#L141c02.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toMicros|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141c14.   v0:= 1000  @length wide16;
#L141c18.   v0:= v3 / v0  @type long;
#L141c1c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toMillis|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141c30.    v0:= 0.000000  @length wide32;
#L141c36.   v0:= v3 / v0  @type long;
#L141c3a.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toMinutes|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141c4c.   v0:= 0.000000L  @length wide;
#L141c56.   v0:= v3 / v0  @type long;
#L141c5a.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toNanos|] ([|java:util:concurrent:TimeUnit$1|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
      
#L141c6c.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$1.toSeconds|] ([|java:util:concurrent:TimeUnit$1|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$1|] @signature [|Ljava/util/concurrent/TimeUnit$1;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141c80.    v0:= 0.004724  @length wide32;
#L141c86.   v0:= v3 / v0  @type long;
#L141c8a.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeUnit$2|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$2.<init>|] ([|java:util:concurrent:TimeUnit$2|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L141c9c.   v0:= 0  @length 4;
#L141c9e.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L141ca4.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.convert|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141cb8.   call temp:=  [|java:util:concurrent:TimeUnit.toMicros|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toMicros:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141cbe.   v0:= temp  @type wide;
#L141cc0.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$2.excessNanos|] ([|java:util:concurrent:TimeUnit$2|] v4 @type (this), [|long|] v5, [|long|] v7) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L141cd4.   v0:= 1000  @length wide16;
#L141cd8.   v0:= v0 * v5  @type long;
#L141cda.    v2:= 0.000000  @length wide32;
#L141ce0.   v2:= v2 * v7  @type long;
#L141ce2.   v0:= v0 - v2  @type long;
#L141ce4.   v0:= (int)v0  @type l2i;
#L141ce6.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toDays|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141cf8.   v0:= 0.000000L  @length wide;
#L141d02.   v0:= v3 / v0  @type long;
#L141d06.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toHours|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141d18.   v0:= 0.000000L  @length wide;
#L141d22.   v0:= v3 / v0  @type long;
#L141d26.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toMicros|] ([|java:util:concurrent:TimeUnit$2|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
      
#L141d38.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toMillis|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141d4c.   v0:= 1000  @length wide16;
#L141d50.   v0:= v3 / v0  @type long;
#L141d54.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toMinutes|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141d68.    v0:= 0.000000  @length wide32;
#L141d6e.   v0:= v3 / v0  @type long;
#L141d72.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toNanos|] ([|java:util:concurrent:TimeUnit$2|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141d84.   v2:= 1000  @length wide16;
#L141d88.   v4:= 0.000000L  @length wide;
#L141d92.   v0:= v7  @type wide;
#L141d94.   call temp:=  [|java:util:concurrent:TimeUnit$2.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$2;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$2|] @type static;
#L141d9a.   v0:= temp  @type wide;
#L141d9c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$2.toSeconds|] ([|java:util:concurrent:TimeUnit$2|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$2|] @signature [|Ljava/util/concurrent/TimeUnit$2;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141db0.    v0:= 0.000000  @length wide32;
#L141db6.   v0:= v3 / v0  @type long;
#L141dba.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeUnit$3|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$3.<init>|] ([|java:util:concurrent:TimeUnit$3|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L141dcc.   v0:= 0  @length 4;
#L141dce.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L141dd4.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.convert|] ([|java:util:concurrent:TimeUnit$3|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141de8.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141dee.   v0:= temp  @type wide;
#L141df0.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$3.excessNanos|] ([|java:util:concurrent:TimeUnit$3|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
      
#L141e04.   v0:= 0  @length 4;
#L141e06.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toDays|] ([|java:util:concurrent:TimeUnit$3|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141e18.    v0:= 0.000000  @length wide32;
#L141e1e.   v0:= v3 / v0  @type long;
#L141e22.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toHours|] ([|java:util:concurrent:TimeUnit$3|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141e34.    v0:= 0.000000  @length wide32;
#L141e3a.   v0:= v3 / v0  @type long;
#L141e3e.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toMicros|] ([|java:util:concurrent:TimeUnit$3|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141e50.   v2:= 1000  @length wide16;
#L141e54.   v4:= 0.000000L  @length wide;
#L141e5e.   v0:= v7  @type wide;
#L141e60.   call temp:=  [|java:util:concurrent:TimeUnit$3.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$3;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$3|] @type static;
#L141e66.   v0:= temp  @type wide;
#L141e68.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toMillis|] ([|java:util:concurrent:TimeUnit$3|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
      
#L141e7c.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toMinutes|] ([|java:util:concurrent:TimeUnit$3|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141e90.    v0:= 0.000000  @length wide32;
#L141e96.   v0:= v3 / v0  @type long;
#L141e9a.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toNanos|] ([|java:util:concurrent:TimeUnit$3|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141eac.    v2:= 0.000000  @length wide32;
#L141eb2.   v4:= 0.000000L  @length wide;
#L141ebc.   v0:= v7  @type wide;
#L141ebe.   call temp:=  [|java:util:concurrent:TimeUnit$3.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$3;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$3|] @type static;
#L141ec4.   v0:= temp  @type wide;
#L141ec6.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$3.toSeconds|] ([|java:util:concurrent:TimeUnit$3|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$3|] @signature [|Ljava/util/concurrent/TimeUnit$3;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141ed8.   v0:= 1000  @length wide16;
#L141edc.   v0:= v3 / v0  @type long;
#L141ee0.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeUnit$4|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$4.<init>|] ([|java:util:concurrent:TimeUnit$4|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L141ef4.   v0:= 0  @length 4;
#L141ef6.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L141efc.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.convert|] ([|java:util:concurrent:TimeUnit$4|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141f10.   call temp:=  [|java:util:concurrent:TimeUnit.toSeconds|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141f16.   v0:= temp  @type wide;
#L141f18.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$4.excessNanos|] ([|java:util:concurrent:TimeUnit$4|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
      
#L141f2c.   v0:= 0  @length 4;
#L141f2e.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toDays|] ([|java:util:concurrent:TimeUnit$4|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141f40.    v0:= 0.000000  @length wide32;
#L141f46.   v0:= v3 / v0  @type long;
#L141f4a.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toHours|] ([|java:util:concurrent:TimeUnit$4|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141f5c.   v0:= 3600  @length wide16;
#L141f60.   v0:= v3 / v0  @type long;
#L141f64.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toMicros|] ([|java:util:concurrent:TimeUnit$4|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141f78.    v2:= 0.000000  @length wide32;
#L141f7e.   v4:= 0.000000L  @length wide;
#L141f88.   v0:= v7  @type wide;
#L141f8a.   call temp:=  [|java:util:concurrent:TimeUnit$4.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$4;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$4|] @type static;
#L141f90.   v0:= temp  @type wide;
#L141f92.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toMillis|] ([|java:util:concurrent:TimeUnit$4|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141fa4.   v2:= 1000  @length wide16;
#L141fa8.   v4:= 0.000000L  @length wide;
#L141fb2.   v0:= v7  @type wide;
#L141fb4.   call temp:=  [|java:util:concurrent:TimeUnit$4.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$4;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$4|] @type static;
#L141fba.   v0:= temp  @type wide;
#L141fbc.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toMinutes|] ([|java:util:concurrent:TimeUnit$4|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L141fd0.   v0:= 60  @length wide16;
#L141fd4.   v0:= v3 / v0  @type long;
#L141fd8.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toNanos|] ([|java:util:concurrent:TimeUnit$4|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L141fec.    v2:= 0.004724  @length wide32;
#L141ff2.   v4:= 0.000000L  @length wide;
#L141ffc.   v0:= v7  @type wide;
#L141ffe.   call temp:=  [|java:util:concurrent:TimeUnit$4.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$4;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$4|] @type static;
#L142004.   v0:= temp  @type wide;
#L142006.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$4.toSeconds|] ([|java:util:concurrent:TimeUnit$4|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$4|] @signature [|Ljava/util/concurrent/TimeUnit$4;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
      
#L142018.   return v1  @type wide;

   }
record [|java:util:concurrent:TimeUnit$5|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$5.<init>|] ([|java:util:concurrent:TimeUnit$5|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L14202c.   v0:= 0  @length 4;
#L14202e.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L142034.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.convert|] ([|java:util:concurrent:TimeUnit$5|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142048.   call temp:=  [|java:util:concurrent:TimeUnit.toMinutes|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toMinutes:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L14204e.   v0:= temp  @type wide;
#L142050.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$5.excessNanos|] ([|java:util:concurrent:TimeUnit$5|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
      
#L142064.   v0:= 0  @length 4;
#L142066.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toDays|] ([|java:util:concurrent:TimeUnit$5|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142078.   v0:= 1440  @length wide16;
#L14207c.   v0:= v3 / v0  @type long;
#L142080.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toHours|] ([|java:util:concurrent:TimeUnit$5|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142094.   v0:= 60  @length wide16;
#L142098.   v0:= v3 / v0  @type long;
#L14209c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toMicros|] ([|java:util:concurrent:TimeUnit$5|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1420b0.    v2:= 0.000000  @length wide32;
#L1420b6.   v4:= 0.000000L  @length wide;
#L1420c0.   v0:= v7  @type wide;
#L1420c2.   call temp:=  [|java:util:concurrent:TimeUnit$5.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$5;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$5|] @type static;
#L1420c8.   v0:= temp  @type wide;
#L1420ca.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toMillis|] ([|java:util:concurrent:TimeUnit$5|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1420dc.    v2:= 0.000000  @length wide32;
#L1420e2.   v4:= 0.000000L  @length wide;
#L1420ec.   v0:= v7  @type wide;
#L1420ee.   call temp:=  [|java:util:concurrent:TimeUnit$5.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$5;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$5|] @type static;
#L1420f4.   v0:= temp  @type wide;
#L1420f6.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toMinutes|] ([|java:util:concurrent:TimeUnit$5|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
      
#L142108.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toNanos|] ([|java:util:concurrent:TimeUnit$5|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14211c.   v2:= 0.000000L  @length wide;
#L142126.    v4:= 0.000000  @length wide32;
#L14212c.   v0:= v7  @type wide;
#L14212e.   call temp:=  [|java:util:concurrent:TimeUnit$5.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$5;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$5|] @type static;
#L142134.   v0:= temp  @type wide;
#L142136.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$5.toSeconds|] ([|java:util:concurrent:TimeUnit$5|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$5|] @signature [|Ljava/util/concurrent/TimeUnit$5;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142148.   v2:= 60  @length wide16;
#L14214c.   v4:= 0.000000L  @length wide;
#L142156.   v0:= v7  @type wide;
#L142158.   call temp:=  [|java:util:concurrent:TimeUnit$5.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$5;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$5|] @type static;
#L14215e.   v0:= temp  @type wide;
#L142160.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeUnit$6|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$6.<init>|] ([|java:util:concurrent:TimeUnit$6|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L142174.   v0:= 0  @length 4;
#L142176.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L14217c.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.convert|] ([|java:util:concurrent:TimeUnit$6|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142190.   call temp:=  [|java:util:concurrent:TimeUnit.toHours|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toHours:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L142196.   v0:= temp  @type wide;
#L142198.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$6.excessNanos|] ([|java:util:concurrent:TimeUnit$6|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
      
#L1421ac.   v0:= 0  @length 4;
#L1421ae.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toDays|] ([|java:util:concurrent:TimeUnit$6|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1421c0.   v0:= 24  @length wide16;
#L1421c4.   v0:= v3 / v0  @type long;
#L1421c8.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toHours|] ([|java:util:concurrent:TimeUnit$6|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
      
#L1421dc.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toMicros|] ([|java:util:concurrent:TimeUnit$6|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1421f0.   v2:= 0.000000L  @length wide;
#L1421fa.   v4:= 0.000000L  @length wide;
#L142204.   v0:= v7  @type wide;
#L142206.   call temp:=  [|java:util:concurrent:TimeUnit$6.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$6;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type static;
#L14220c.   v0:= temp  @type wide;
#L14220e.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toMillis|] ([|java:util:concurrent:TimeUnit$6|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142220.    v2:= 0.000000  @length wide32;
#L142226.   v4:= 0.000000L  @length wide;
#L142230.   v0:= v7  @type wide;
#L142232.   call temp:=  [|java:util:concurrent:TimeUnit$6.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$6;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type static;
#L142238.   v0:= temp  @type wide;
#L14223a.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toMinutes|] ([|java:util:concurrent:TimeUnit$6|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14224c.   v2:= 60  @length wide16;
#L142250.   v4:= 0.000000L  @length wide;
#L14225a.   v0:= v7  @type wide;
#L14225c.   call temp:=  [|java:util:concurrent:TimeUnit$6.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$6;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type static;
#L142262.   v0:= temp  @type wide;
#L142264.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toNanos|] ([|java:util:concurrent:TimeUnit$6|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142278.   v2:= 0.000000L  @length wide;
#L142282.    v4:= 0.000000  @length wide32;
#L142288.   v0:= v7  @type wide;
#L14228a.   call temp:=  [|java:util:concurrent:TimeUnit$6.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$6;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type static;
#L142290.   v0:= temp  @type wide;
#L142292.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$6.toSeconds|] ([|java:util:concurrent:TimeUnit$6|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$6|] @signature [|Ljava/util/concurrent/TimeUnit$6;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1422a4.   v2:= 3600  @length wide16;
#L1422a8.   v4:= 0.000000L  @length wide;
#L1422b2.   v0:= v7  @type wide;
#L1422b4.   call temp:=  [|java:util:concurrent:TimeUnit$6.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$6;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$6|] @type static;
#L1422ba.   v0:= temp  @type wide;
#L1422bc.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeUnit$7|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:concurrent:TimeUnit|] {
   }
    procedure [|void|] [|java:util:concurrent:TimeUnit$7.<init>|] ([|java:util:concurrent:TimeUnit$7|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1422d0.   v0:= 0  @length 4;
#L1422d2.   call temp:=  [|java:util:concurrent:TimeUnit.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/TimeUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit$1;)V|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type direct;
#L1422d8.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.convert|] ([|java:util:concurrent:TimeUnit$7|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1422ec.   call temp:=  [|java:util:concurrent:TimeUnit.toDays|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toDays:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1422f2.   v0:= temp  @type wide;
#L1422f4.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:TimeUnit$7.excessNanos|] ([|java:util:concurrent:TimeUnit$7|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.excessNanos:(JJ)I|] @Access  {
      local temp ;
        v0;
      
#L142308.   v0:= 0  @length 4;
#L14230a.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toDays|] ([|java:util:concurrent:TimeUnit$7|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toDays:(J)J|] @Access PUBLIC {
      local temp ;
      
#L14231c.   return v1  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toHours|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toHours:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142330.   v2:= 24  @length wide16;
#L142334.   v4:= 0.000000L  @length wide;
#L14233e.   v0:= v7  @type wide;
#L142340.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L142346.   v0:= temp  @type wide;
#L142348.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toMicros|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toMicros:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14235c.   v2:= 0.000000L  @length wide;
#L142366.    v4:= 0.000000  @length wide32;
#L14236c.   v0:= v7  @type wide;
#L14236e.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L142374.   v0:= temp  @type wide;
#L142376.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toMillis|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toMillis:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142388.    v2:= 0.000000  @length wide32;
#L14238e.   v4:= 0.000000L  @length wide;
#L142398.   v0:= v7  @type wide;
#L14239a.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L1423a0.   v0:= temp  @type wide;
#L1423a2.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toMinutes|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toMinutes:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1423b4.   v2:= 1440  @length wide16;
#L1423b8.   v4:= 0.000000L  @length wide;
#L1423c2.   v0:= v7  @type wide;
#L1423c4.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L1423ca.   v0:= temp  @type wide;
#L1423cc.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toNanos|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toNanos:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1423e0.   v2:= 0.000000L  @length wide;
#L1423ea.    v4:= 0.000000  @length wide32;
#L1423f0.   v0:= v7  @type wide;
#L1423f2.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L1423f8.   v0:= temp  @type wide;
#L1423fa.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:TimeUnit$7.toSeconds|] ([|java:util:concurrent:TimeUnit$7|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:TimeUnit$7|] @signature [|Ljava/util/concurrent/TimeUnit$7;.toSeconds:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14240c.    v2:= 0.000000  @length wide32;
#L142412.   v4:= 0.000000L  @length wide;
#L14241c.   v0:= v7  @type wide;
#L14241e.   call temp:=  [|java:util:concurrent:TimeUnit$7.x|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit$7;.x:(JJJ)J|] @classDescriptor [|java:util:concurrent:TimeUnit$7|] @type static;
#L142424.   v0:= temp  @type wide;
#L142426.   return v0  @type wide;

   }
record [|java:util:concurrent:TimeoutException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:concurrent:TimeoutException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:TimeoutException.<init>|] ([|java:util:concurrent:TimeoutException|] v0 @type (this)) @owner [|java:util:concurrent:TimeoutException|] @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L142438.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L14243e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:TimeoutException.<init>|] ([|java:util:concurrent:TimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:TimeoutException|] @signature [|Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L142450.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L142456.   return @void ;

   }
record [|java:util:concurrent:atomic:AtomicBoolean|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:atomic:AtomicBoolean.value|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|long|] @@[|java:util:concurrent:atomic:AtomicBoolean.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicBoolean.valueOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicBoolean.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142468.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L14246e.   v1:= temp  @type object;
#L142470.   @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|] := v1  @type object;
#L142474.   v1:= @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|]   @type object;
#L142478.   v2:= new [|java:util:concurrent:atomic:AtomicBoolean|];
#L14247c.   v3:= "value" @type (object, string);
#L142480.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142486.   v2:= temp  @type object;
#L142488.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14248e.   v1:= temp  @type wide;
#L142490.   @@[|java:util:concurrent:atomic:AtomicBoolean.valueOffset|] := v1  @wide;
#L142494.   return @void ;
#L142496.   v0:= Exception  @type object;
#L142498.   v1:= new [|java:lang:Error|];
#L14249c.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1424a2.   throw v1;
  catch  [|java:lang:Exception|] @[L142474..L142494] goto L142496;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicBoolean.<init>|] ([|java:util:concurrent:atomic:AtomicBoolean|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1424c4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1424ca.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicBoolean.<init>|] ([|java:util:concurrent:atomic:AtomicBoolean|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1424dc.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1424e2.   if v2 == 0 then goto L1424ee;
#L1424e6.   v0:= 1  @length 4;
#L1424e8.   v1.[|java:util:concurrent:atomic:AtomicBoolean.value|]  := v0;
#L1424ec.   return @void ;
#L1424ee.   v0:= 0  @length 4;
#L1424f0.   goto L1424e8;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicBoolean.compareAndSet|] ([|java:util:concurrent:atomic:AtomicBoolean|] v6 @type (this), [|boolean|] v7, [|boolean|] v8) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142504.   v5:= 1  @length 4;
#L142506.   v0:= 0  @length 4;
#L142508.   if v7 == 0 then goto L142526;
#L14250c.   v4:= v5;
#L14250e.   if v8 == 0 then goto L14252a;
#L142512.   v0:= @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|]   @type object;
#L142516.   v2:= @@[|java:util:concurrent:atomic:AtomicBoolean.valueOffset|]   @wide;
#L14251a.   v1:= v6  @type object;
#L14251c.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142522.   v0:= temp;
#L142524.   return v0;
#L142526.   v4:= v0;
#L142528.   goto L14250e;
#L14252a.   v5:= v0;
#L14252c.   goto L142512;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicBoolean.get|] ([|java:util:concurrent:atomic:AtomicBoolean|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142540.   v0:= v1.[|java:util:concurrent:atomic:AtomicBoolean.value|] ;
#L142544.   if v0 == 0 then goto L14254c;
#L142548.   v0:= 1  @length 4;
#L14254a.   return v0;
#L14254c.   v0:= 0  @length 4;
#L14254e.   goto L14254a;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicBoolean.getAndSet|] ([|java:util:concurrent:atomic:AtomicBoolean|] v2 @type (this), [|boolean|] v3) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.getAndSet:(Z)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L142560.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type virtual;
#L142566.   v0:= temp;
#L142568.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.compareAndSet|](v2, v0, v3) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type virtual;
#L14256e.   v1:= temp;
#L142570.   if v1 == 0 then goto L142560;
#L142574.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicBoolean.lazySet|] ([|java:util:concurrent:atomic:AtomicBoolean|] v4 @type (this), [|boolean|] v5) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.lazySet:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142588.   if v5 == 0 then goto L14259e;
#L14258c.   v0:= 1  @length 4;
#L14258e.   v1:= @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|]   @type object;
#L142592.   v2:= @@[|java:util:concurrent:atomic:AtomicBoolean.valueOffset|]   @wide;
#L142596.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v1, v4, v2, v3, v0) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14259c.   return @void ;
#L14259e.   v0:= 0  @length 4;
#L1425a0.   goto L14258e;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicBoolean.set|] ([|java:util:concurrent:atomic:AtomicBoolean|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1425b4.   if v2 == 0 then goto L1425c0;
#L1425b8.   v0:= 1  @length 4;
#L1425ba.   v1.[|java:util:concurrent:atomic:AtomicBoolean.value|]  := v0;
#L1425be.   return @void ;
#L1425c0.   v0:= 0  @length 4;
#L1425c2.   goto L1425ba;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicBoolean.toString|] ([|java:util:concurrent:atomic:AtomicBoolean|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1425d4.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type virtual;
#L1425da.   v0:= temp;
#L1425dc.   call temp:=  [|java:lang:Boolean.toString|](v0) @signature [|Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L1425e2.   v0:= temp  @type object;
#L1425e4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicBoolean.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicBoolean|] v6 @type (this), [|boolean|] v7, [|boolean|] v8) @owner [|java:util:concurrent:atomic:AtomicBoolean|] @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.weakCompareAndSet:(ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1425f8.   v5:= 1  @length 4;
#L1425fa.   v0:= 0  @length 4;
#L1425fc.   if v7 == 0 then goto L14261a;
#L142600.   v4:= v5;
#L142602.   if v8 == 0 then goto L14261e;
#L142606.   v0:= @@[|java:util:concurrent:atomic:AtomicBoolean.unsafe|]   @type object;
#L14260a.   v2:= @@[|java:util:concurrent:atomic:AtomicBoolean.valueOffset|]   @wide;
#L14260e.   v1:= v6  @type object;
#L142610.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142616.   v0:= temp;
#L142618.   return v0;
#L14261a.   v4:= v0;
#L14261c.   goto L142602;
#L14261e.   v5:= v0;
#L142620.   goto L142606;

   }
record [|java:util:concurrent:atomic:AtomicInteger|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Number|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:atomic:AtomicInteger.value|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|long|] @@[|java:util:concurrent:atomic:AtomicInteger.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicInteger.valueOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicInteger.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142634.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L14263a.   v1:= temp  @type object;
#L14263c.   @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|] := v1  @type object;
#L142640.   v1:= @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|]   @type object;
#L142644.   v2:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L142648.   v3:= "value" @type (object, string);
#L14264c.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142652.   v2:= temp  @type object;
#L142654.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14265a.   v1:= temp  @type wide;
#L14265c.   @@[|java:util:concurrent:atomic:AtomicInteger.valueOffset|] := v1  @wide;
#L142660.   return @void ;
#L142662.   v0:= Exception  @type object;
#L142664.   v1:= new [|java:lang:Error|];
#L142668.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14266e.   throw v1;
  catch  [|java:lang:Exception|] @[L142640..L142660] goto L142662;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicInteger.<init>|] ([|java:util:concurrent:atomic:AtomicInteger|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L142690.   call temp:=  [|java:lang:Number.<init>|](v0) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L142696.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicInteger.<init>|] ([|java:util:concurrent:atomic:AtomicInteger|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1426a8.   call temp:=  [|java:lang:Number.<init>|](v0) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L1426ae.   v0.[|java:util:concurrent:atomic:AtomicInteger.value|]  := v1;
#L1426b2.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.addAndGet|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1426c4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1426ca.   v0:= temp;
#L1426cc.   v1:= v0 + v4  @type int;
#L1426d0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1426d6.   v2:= temp;
#L1426d8.   if v2 == 0 then goto L1426c4;
#L1426dc.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|] ([|java:util:concurrent:atomic:AtomicInteger|] v6 @type (this), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1426f0.   v0:= @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|]   @type object;
#L1426f4.   v2:= @@[|java:util:concurrent:atomic:AtomicInteger.valueOffset|]   @wide;
#L1426f8.   v1:= v6  @type object;
#L1426fa.   v4:= v7;
#L1426fc.   v5:= v8;
#L1426fe.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142704.   v0:= temp;
#L142706.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L142718.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L14271e.   v0:= temp;
#L142720.   v1:= v0 + -1;
#L142724.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L14272a.   v2:= temp;
#L14272c.   if v2 == 0 then goto L142718;
#L142730.   return v1;

   }
    procedure [|double|] [|java:util:concurrent:atomic:AtomicInteger.doubleValue|] ([|java:util:concurrent:atomic:AtomicInteger|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.doubleValue:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142744.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L14274a.   v0:= temp;
#L14274c.   v0:= (double)v0  @type i2d;
#L14274e.   return v0  @type wide;

   }
    procedure [|float|] [|java:util:concurrent:atomic:AtomicInteger.floatValue|] ([|java:util:concurrent:atomic:AtomicInteger|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.floatValue:()F|] @Access PUBLIC {
      local temp ;
        v0;
      
#L142760.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L142766.   v0:= temp;
#L142768.   v0:= (float)v0  @type i2f;
#L14276a.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.get|] ([|java:util:concurrent:atomic:AtomicInteger|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L14277c.   v0:= v1.[|java:util:concurrent:atomic:AtomicInteger.value|] ;
#L142780.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.getAndAdd|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndAdd:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L142794.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L14279a.   v0:= temp;
#L14279c.   v1:= v0 + v4  @type int;
#L1427a0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1427a6.   v2:= temp;
#L1427a8.   if v2 == 0 then goto L142794;
#L1427ac.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndDecrement:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1427c0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1427c6.   v0:= temp;
#L1427c8.   v1:= v0 + -1;
#L1427cc.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1427d2.   v2:= temp;
#L1427d4.   if v2 == 0 then goto L1427c0;
#L1427d8.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1427ec.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1427f2.   v0:= temp;
#L1427f4.   v1:= v0 + 1;
#L1427f8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1427fe.   v2:= temp;
#L142800.   if v2 == 0 then goto L1427ec;
#L142804.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.getAndSet|] ([|java:util:concurrent:atomic:AtomicInteger|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L142818.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L14281e.   v0:= temp;
#L142820.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v2, v0, v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L142826.   v1:= temp;
#L142828.   if v1 == 0 then goto L142818;
#L14282c.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L142840.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L142846.   v0:= temp;
#L142848.   v1:= v0 + 1;
#L14284c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L142852.   v2:= temp;
#L142854.   if v2 == 0 then goto L142840;
#L142858.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicInteger.intValue|] ([|java:util:concurrent:atomic:AtomicInteger|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.intValue:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14286c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L142872.   v0:= temp;
#L142874.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicInteger.lazySet|] ([|java:util:concurrent:atomic:AtomicInteger|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L142888.   v0:= @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|]   @type object;
#L14288c.   v1:= @@[|java:util:concurrent:atomic:AtomicInteger.valueOffset|]   @wide;
#L142890.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142896.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicInteger.longValue|] ([|java:util:concurrent:atomic:AtomicInteger|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.longValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1428a8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1428ae.   v0:= temp;
#L1428b0.   v0:= (long)v0  @type i2l;
#L1428b2.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicInteger.set|] ([|java:util:concurrent:atomic:AtomicInteger|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L1428c4.   v0.[|java:util:concurrent:atomic:AtomicInteger.value|]  := v1;
#L1428c8.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicInteger.toString|] ([|java:util:concurrent:atomic:AtomicInteger|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1428dc.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1428e2.   v0:= temp;
#L1428e4.   call temp:=  [|java:lang:Integer.toString|](v0) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1428ea.   v0:= temp  @type object;
#L1428ec.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicInteger.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicInteger|] v6 @type (this), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:atomic:AtomicInteger|] @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.weakCompareAndSet:(II)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142900.   v0:= @@[|java:util:concurrent:atomic:AtomicInteger.unsafe|]   @type object;
#L142904.   v2:= @@[|java:util:concurrent:atomic:AtomicInteger.valueOffset|]   @wide;
#L142908.   v1:= v6  @type object;
#L14290a.   v4:= v7;
#L14290c.   v5:= v8;
#L14290e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142914.   v0:= temp;
#L142916.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicIntegerArray|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|int|][] [|java:util:concurrent:atomic:AtomicIntegerArray.array|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:util:concurrent:atomic:AtomicIntegerArray.base|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicIntegerArray.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:atomic:AtomicIntegerArray.shift|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerArray.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L142928.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L14292e.   v1:= temp  @type object;
#L142930.   @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|] := v1  @type object;
#L142934.   v1:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L142938.   v2:= new [|int|][];
#L14293c.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142942.   v1:= temp;
#L142944.   @@[|java:util:concurrent:atomic:AtomicIntegerArray.base|] := v1;
#L142948.   v1:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L14294c.   v2:= new [|int|][];
#L142950.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v1, v2) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142956.   v0:= temp;
#L142958.   v1:= v0 + -1;
#L14295c.   v1:= v1 ^& v0  @type int;
#L14295e.   if v1 == 0 then goto L142972;
#L142962.   v1:= new [|java:lang:Error|];
#L142966.   v2:= "data type scale not a power of two" @type (object, string);
#L14296a.   call temp:=  [|java:lang:Error.<init>|](v1, v2) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L142970.   throw v1;
#L142972.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v0) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L142978.   v1:= temp;
#L14297a.   v1:= v1 - 31;
#L14297e.   @@[|java:util:concurrent:atomic:AtomicIntegerArray.shift|] := v1;
#L142982.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerArray.<init>|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L142994.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14299a.   v0:= new [|int|][v2];
#L14299e.   v1.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]  := v0 @type object;
#L1429a2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerArray.<init>|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|][] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.<init>:([I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1429b4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1429ba.   call temp:=  [|int[].clone|](v2) @signature [|[I.clone:()Ljava/lang/Object;|] @classDescriptor [|int[]|] @type virtual;
#L1429c0.   v0:= temp  @type object;
#L1429c2.   v0:= ([|int|][])v0;
#L1429c6.   v1.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]  := v0 @type object;
#L1429ca.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicIntegerArray.byteOffset|] ([|int|] v4) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.byteOffset:(I)J|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1429dc.   v0:= (long)v4  @type i2l;
#L1429de.   v2:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.shift|] ;
#L1429e2.   v0:= v0 ^< v2  @type long;
#L1429e4.   v2:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.base|] ;
#L1429e8.   v2:= (long)v2  @type i2l;
#L1429ea.   v0:= v0 + v2  @type long;
#L1429ec.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L142a00.   if v4 < 0 then goto L142a0e;
#L142a04.   v0:= v3.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142a08.   v0:= v0.length;
#L142a0a.   if v4 < v0 then goto L142a40;
#L142a0e.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L142a12.   v1:= new [|java:lang:StringBuilder|];
#L142a16.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L142a1c.   v2:= "index " @type (object, string);
#L142a20.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142a26.   v1:= temp  @type object;
#L142a28.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142a2e.   v1:= temp  @type object;
#L142a30.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142a36.   v1:= temp  @type object;
#L142a38.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L142a3e.   throw v0;
#L142a40.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.byteOffset|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type static;
#L142a46.   v0:= temp  @type wide;
#L142a48.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSetRaw|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v6 @type (this), [|long|] v7, [|int|] v9, [|int|] v10) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSetRaw:(JII)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L142a5c.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L142a60.   v1:= v6.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142a64.   v2:= v7  @type wide;
#L142a66.   v4:= v9;
#L142a68.   v5:= v10;
#L142a6a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142a70.   v0:= temp;
#L142a72.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L142a84.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L142a88.   v1:= v2.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142a8c.   call temp:=  [|sun:misc:Unsafe.getIntVolatile|](v0, v1, v3, v4) @signature [|Lsun/misc/Unsafe;.getIntVolatile:(Ljava/lang/Object;J)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142a92.   v0:= temp;
#L142a94.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.addAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v5 @type (this), [|int|] v6, [|int|] v7) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.addAndGet:(II)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L142aa8.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142aae.   v2:= temp  @type wide;
#L142ab0.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|](v5, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142ab6.   v0:= temp;
#L142ab8.   v1:= v0 + v7  @type int;
#L142abc.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSetRaw|](v5, v2, v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSetRaw:(JII)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142ac2.   v4:= temp;
#L142ac4.   if v4 == 0 then goto L142ab0;
#L142ac8.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v2 @type (this), [|int|] v3, [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSet:(III)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L142adc.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142ae2.   v0:= temp  @type wide;
#L142ae4.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSetRaw|](v2, v0, v1, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSetRaw:(JII)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142aea.   v0:= temp;
#L142aec.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.decrementAndGet:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142b00.   v0:= -1  @length 4;
#L142b02.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.addAndGet|](v1, v2, v0) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.addAndGet:(II)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type virtual;
#L142b08.   v0:= temp;
#L142b0a.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.get|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.get:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L142b1c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142b22.   v0:= temp  @type wide;
#L142b24.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142b2a.   v0:= temp;
#L142b2c.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.getAndAdd|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndAdd:(II)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142b40.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142b46.   v1:= temp  @type wide;
#L142b48.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|](v4, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142b4e.   v0:= temp;
#L142b50.   v3:= v0 + v6  @type int;
#L142b54.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSetRaw|](v4, v1, v2, v0, v3) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSetRaw:(JII)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142b5a.   v3:= temp;
#L142b5c.   if v3 == 0 then goto L142b48;
#L142b60.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndDecrement:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142b74.   v0:= -1  @length 4;
#L142b76.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getAndAdd|](v1, v2, v0) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndAdd:(II)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type virtual;
#L142b7c.   v0:= temp;
#L142b7e.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndIncrement:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142b90.   v0:= 1  @length 4;
#L142b92.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getAndAdd|](v1, v2, v0) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndAdd:(II)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type virtual;
#L142b98.   v0:= temp;
#L142b9a.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.getAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getAndSet:(II)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142bac.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142bb2.   v1:= temp  @type wide;
#L142bb4.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|](v4, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142bba.   v0:= temp;
#L142bbc.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSetRaw|](v4, v1, v2, v0, v6) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSetRaw:(JII)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142bc2.   v3:= temp;
#L142bc4.   if v3 == 0 then goto L142bb4;
#L142bc8.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.incrementAndGet:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142bdc.   v0:= 1  @length 4;
#L142bde.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.addAndGet|](v1, v2, v0) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.addAndGet:(II)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type virtual;
#L142be4.   v0:= temp;
#L142be6.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerArray.lazySet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.lazySet:(II)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142bf8.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L142bfc.   v1:= v4.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142c00.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142c06.   v2:= temp  @type wide;
#L142c08.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v1, v2, v3, v6) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142c0e.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerArray.length|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.length:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142c20.   v0:= v1.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142c24.   v0:= v0.length;
#L142c26.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerArray.set|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.set:(II)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142c38.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerArray.unsafe|]   @type object;
#L142c3c.   v1:= v4.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142c40.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142c46.   v2:= temp  @type wide;
#L142c48.   call temp:=  [|sun:misc:Unsafe.putIntVolatile|](v0, v1, v2, v3, v6) @signature [|Lsun/misc/Unsafe;.putIntVolatile:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142c4e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicIntegerArray.toString|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v5 @type (this)) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L142c60.   v3:= v5.[|java:util:concurrent:atomic:AtomicIntegerArray.array|]   @type object;
#L142c64.   v3:= v3.length;
#L142c66.   v2:= v3 + -1;
#L142c6a.   v3:= -1  @length 4;
#L142c6c.   if v2 != v3 then goto L142c76;
#L142c70.   v3:= "[]" @type (object, string);
#L142c74.   return v3  @type object;
#L142c76.   v0:= new [|java:lang:StringBuilder|];
#L142c7a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L142c80.   v3:= 91  @length 16;
#L142c84.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142c8a.   v1:= 0  @length 4;
#L142c8c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.byteOffset|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type static;
#L142c92.   v3:= temp  @type wide;
#L142c94.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.getRaw|](v5, v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.getRaw:(J)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type direct;
#L142c9a.   v3:= temp;
#L142c9c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142ca2.   if v1 != v2 then goto L142cbc;
#L142ca6.   v3:= 93  @length 16;
#L142caa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142cb0.   v3:= temp  @type object;
#L142cb2.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142cb8.   v3:= temp  @type object;
#L142cba.   goto L142c74;
#L142cbc.   v3:= 44  @length 16;
#L142cc0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142cc6.   v3:= temp  @type object;
#L142cc8.   v4:= 32  @length 16;
#L142ccc.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142cd2.   v1:= v1 + 1;
#L142cd6.   goto L142c8c;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerArray.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerArray|] v1 @type (this), [|int|] v2, [|int|] v3, [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicIntegerArray|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.weakCompareAndSet:(III)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L142ce8.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerArray.compareAndSet|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerArray;.compareAndSet:(III)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerArray|] @type virtual;
#L142cee.   v0:= temp;
#L142cf0.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.<init>|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L142d04.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L142d0a.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.newUpdater|] ([|java:lang:Class|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L142d1c.   v0:= new [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|];
#L142d20.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L142d26.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.addAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.addAndGet:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142d38.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142d3e.   v0:= temp;
#L142d40.   v1:= v0 + v5  @type int;
#L142d44.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142d4a.   v2:= temp;
#L142d4c.   if v2 == 0 then goto L142d38;
#L142d50.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|] ([|java:lang:Object|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.decrementAndGet:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142d64.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142d6a.   v0:= temp;
#L142d6c.   v1:= v0 + -1;
#L142d70.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142d76.   v2:= temp;
#L142d78.   if v2 == 0 then goto L142d64;
#L142d7c.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.getAndAdd|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndAdd:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142d90.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142d96.   v0:= temp;
#L142d98.   v1:= v0 + v5  @type int;
#L142d9c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142da2.   v2:= temp;
#L142da4.   if v2 == 0 then goto L142d90;
#L142da8.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndDecrement:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142dbc.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142dc2.   v0:= temp;
#L142dc4.   v1:= v0 + -1;
#L142dc8.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142dce.   v2:= temp;
#L142dd0.   if v2 == 0 then goto L142dbc;
#L142dd4.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndIncrement:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142de8.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142dee.   v0:= temp;
#L142df0.   v1:= v0 + 1;
#L142df4.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142dfa.   v2:= temp;
#L142dfc.   if v2 == 0 then goto L142de8;
#L142e00.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.getAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndSet:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L142e14.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142e1a.   v0:= temp;
#L142e1c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v2, v3, v0, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142e22.   v1:= temp;
#L142e24.   if v1 == 0 then goto L142e14;
#L142e28.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L142e3c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.get|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142e42.   v0:= temp;
#L142e44.   v1:= v0 + 1;
#L142e48.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.compareAndSet|](v3, v4, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type virtual;
#L142e4e.   v2:= temp;
#L142e50.   if v2 == 0 then goto L142e3c;
#L142e54.   return v1;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.lazySet|] ([|java:lang:Object|] v0 @type (object), [|int|] v1) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.lazySet:(Ljava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.set|] ([|java:lang:Object|] v0 @type (object), [|int|] v1) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.set:(Ljava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.weakCompareAndSet|] ([|java:lang:Object|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.weakCompareAndSet:(Ljava/lang/Object;II)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|]  @type class @AccessFlag   extends [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] {
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L142e68.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L142e6e.   v0:= temp  @type object;
#L142e70.   @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|] := v0  @type object;
#L142e74.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.<init>|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v7 @type (this), [|java:lang:Class|] v8 @type (object), [|java:lang:String|] v9 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L142e88.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater.<init>|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater|] @type direct;
#L142e8e.   v2:= 0  @length 4;
#L142e90.   v0:= 0  @length 4;
#L142e92.   v4:= 0  @length 4;
#L142e94.   call temp:=  [|java:lang:Class.getDeclaredField|](v8, v9) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142e9a.   v2:= temp  @type object;
#L142e9c.   call temp:=  [|dalvik:system:VMStack.getStackClass2|]() @signature [|Ldalvik/system/VMStack;.getStackClass2:()Ljava/lang/Class;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L142ea2.   v0:= temp  @type object;
#L142ea4.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v2) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L142eaa.   v4:= temp;
#L142eac.   call temp:=  [|java:lang:reflect:Field.getType|](v2) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L142eb2.   v3:= temp  @type object;
#L142eb4.   v5:= @@[|java:lang:Integer.TYPE|]   @type object;
#L142eb8.   if v3 == v5 then goto L142eda;
#L142ebc.   v5:= new [|java:lang:IllegalArgumentException|];
#L142ec0.   v6:= "Must be integer type" @type (object, string);
#L142ec4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L142eca.   throw v5;
#L142ecc.   v1:= Exception  @type object;
#L142ece.   v5:= new [|java:lang:RuntimeException|];
#L142ed2.   call temp:=  [|java:lang:RuntimeException.<init>|](v5, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L142ed8.   throw v5;
#L142eda.   call temp:=  [|java:lang:reflect:Modifier.isVolatile|](v4) @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L142ee0.   v5:= temp;
#L142ee2.   if v5 != 0 then goto L142ef6;
#L142ee6.   v5:= new [|java:lang:IllegalArgumentException|];
#L142eea.   v6:= "Must be volatile type" @type (object, string);
#L142eee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L142ef4.   throw v5;
#L142ef6.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v4) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L142efc.   v5:= temp;
#L142efe.   if v5 == 0 then goto L142f20;
#L142f02.   if v0 == v8 then goto L142f20;
#L142f06.   v7.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]  := v0 @type object;
#L142f0a.   v7.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]  := v8 @type object;
#L142f0e.   v5:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L142f12.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v5, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L142f18.   v5:= temp  @type wide;
#L142f1a.   v7.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]  := v5 @wide;
#L142f1e.   return @void ;
#L142f20.   v0:= 0  @length 4;
#L142f22.   goto L142f06;
  catch  [|java:lang:Exception|] @[L142e94..L142eaa] goto L142ecc;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.ensureProtectedAccess|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L142f44.   v0:= v4.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L142f48.   call temp:=  [|java:lang:Class.isInstance|](v0, v5) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142f4e.   v0:= temp;
#L142f50.   if v0 == 0 then goto L142f56;
#L142f54.   return @void ;
#L142f56.   v0:= new [|java:lang:RuntimeException|];
#L142f5a.   v1:= new [|java:lang:IllegalAccessException|];
#L142f5e.   v2:= new [|java:lang:StringBuilder|];
#L142f62.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L142f68.   v3:= "Class " @type (object, string);
#L142f6c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142f72.   v2:= temp  @type object;
#L142f74.   v3:= v4.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L142f78.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142f7e.   v3:= temp  @type object;
#L142f80.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142f86.   v2:= temp  @type object;
#L142f88.   v3:= " can not access a protected member of class " @type (object, string);
#L142f8c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142f92.   v2:= temp  @type object;
#L142f94.   v3:= v4.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L142f98.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142f9e.   v3:= temp  @type object;
#L142fa0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142fa6.   v2:= temp  @type object;
#L142fa8.   v3:= " using an instance of " @type (object, string);
#L142fac.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142fb2.   v2:= temp  @type object;
#L142fb4.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L142fba.   v3:= temp  @type object;
#L142fbc.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142fc2.   v3:= temp  @type object;
#L142fc4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142fca.   v2:= temp  @type object;
#L142fcc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L142fd2.   v2:= temp  @type object;
#L142fd4.   call temp:=  [|java:lang:IllegalAccessException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalAccessException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessException|] @type direct;
#L142fda.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L142fe0.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L142ff4.   v0:= v1.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L142ff8.   call temp:=  [|java:lang:Class.isInstance|](v0, v2) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L142ffe.   v0:= temp;
#L143000.   if v0 != 0 then goto L143010;
#L143004.   v0:= new [|java:lang:ClassCastException|];
#L143008.   call temp:=  [|java:lang:ClassCastException.<init>|](v0) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L14300e.   throw v0;
#L143010.   v0:= v1.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L143014.   if v0 == 0 then goto L14301e;
#L143018.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.ensureProtectedAccess|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L14301e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|int|] v8, [|int|] v9) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.compareAndSet:(Ljava/lang/Object;II)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143030.   if v7 == 0 then goto L14304c;
#L143034.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14303a.   v0:= temp  @type object;
#L14303c.   v1:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L143040.   if v0 != v1 then goto L14304c;
#L143044.   v0:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L143048.   if v0 == 0 then goto L143052;
#L14304c.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L143052.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L143056.   v2:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]   @wide;
#L14305a.   v1:= v7  @type object;
#L14305c.   v4:= v8;
#L14305e.   v5:= v9;
#L143060.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143066.   v0:= temp;
#L143068.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.get|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.get:(Ljava/lang/Object;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L14307c.   if v4 == 0 then goto L143098;
#L143080.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143086.   v0:= temp  @type object;
#L143088.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L14308c.   if v0 != v1 then goto L143098;
#L143090.   v0:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L143094.   if v0 == 0 then goto L14309e;
#L143098.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L14309e.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L1430a2.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]   @wide;
#L1430a6.   call temp:=  [|sun:misc:Unsafe.getIntVolatile|](v0, v4, v1, v2) @signature [|Lsun/misc/Unsafe;.getIntVolatile:(Ljava/lang/Object;J)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1430ac.   v0:= temp;
#L1430ae.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.lazySet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.lazySet:(Ljava/lang/Object;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1430c0.   if v4 == 0 then goto L1430dc;
#L1430c4.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1430ca.   v0:= temp  @type object;
#L1430cc.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L1430d0.   if v0 != v1 then goto L1430dc;
#L1430d4.   v0:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L1430d8.   if v0 == 0 then goto L1430e2;
#L1430dc.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L1430e2.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L1430e6.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]   @wide;
#L1430ea.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v4, v1, v2, v5) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1430f0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.set:(Ljava/lang/Object;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L143104.   if v4 == 0 then goto L143120;
#L143108.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14310e.   v0:= temp  @type object;
#L143110.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L143114.   if v0 != v1 then goto L143120;
#L143118.   v0:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L14311c.   if v0 == 0 then goto L143126;
#L143120.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L143126.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L14312a.   v1:= v3.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]   @wide;
#L14312e.   call temp:=  [|sun:misc:Unsafe.putIntVolatile|](v0, v4, v1, v2, v5) @signature [|Lsun/misc/Unsafe;.putIntVolatile:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143134.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|int|] v8, [|int|] v9) @owner [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.weakCompareAndSet:(Ljava/lang/Object;II)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143148.   if v7 == 0 then goto L143164;
#L14314c.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143152.   v0:= temp  @type object;
#L143154.   v1:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.tclass|]   @type object;
#L143158.   if v0 != v1 then goto L143164;
#L14315c.   v0:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.cclass|]   @type object;
#L143160.   if v0 == 0 then goto L14316a;
#L143164.   call temp:=  [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.fullCheck|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl|] @type direct;
#L14316a.   v0:= @@[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe|]   @type object;
#L14316e.   v2:= v6.[|java:util:concurrent:atomic:AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.offset|]   @wide;
#L143172.   v1:= v7  @type object;
#L143174.   v4:= v8;
#L143176.   v5:= v9;
#L143178.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14317e.   v0:= temp;
#L143180.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicLong|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Number|], [|java:io:Serializable|] {
      [|long|] [|java:util:concurrent:atomic:AtomicLong.value|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|boolean|] @@[|java:util:concurrent:atomic:AtomicLong.VM_SUPPORTS_LONG_CAS|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicLong.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicLong.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicLong.valueOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLong.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L143194.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L14319a.   v1:= temp  @type object;
#L14319c.   @@[|java:util:concurrent:atomic:AtomicLong.unsafe|] := v1  @type object;
#L1431a0.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.VMSupportsCS8|]() @signature [|Ljava/util/concurrent/atomic/AtomicLong;.VMSupportsCS8:()Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type static;
#L1431a6.   v1:= temp;
#L1431a8.   @@[|java:util:concurrent:atomic:AtomicLong.VM_SUPPORTS_LONG_CAS|] := v1  @boolean;
#L1431ac.   v1:= @@[|java:util:concurrent:atomic:AtomicLong.unsafe|]   @type object;
#L1431b0.   v2:= new [|java:util:concurrent:atomic:AtomicLong|];
#L1431b4.   v3:= "value" @type (object, string);
#L1431b8.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1431be.   v2:= temp  @type object;
#L1431c0.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1431c6.   v1:= temp  @type wide;
#L1431c8.   @@[|java:util:concurrent:atomic:AtomicLong.valueOffset|] := v1  @wide;
#L1431cc.   return @void ;
#L1431ce.   v0:= Exception  @type object;
#L1431d0.   v1:= new [|java:lang:Error|];
#L1431d4.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1431da.   throw v1;
  catch  [|java:lang:Exception|] @[L1431ac..L1431cc] goto L1431ce;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLong.<init>|] ([|java:util:concurrent:atomic:AtomicLong|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1431fc.   call temp:=  [|java:lang:Number.<init>|](v0) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L143202.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLong.<init>|] ([|java:util:concurrent:atomic:AtomicLong|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L143214.   call temp:=  [|java:lang:Number.<init>|](v0) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L14321a.   v0.[|java:util:concurrent:atomic:AtomicLong.value|]  := v1 @wide;
#L14321e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLong.VMSupportsCS8|] () @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.VMSupportsCS8:()Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.addAndGet|] ([|java:util:concurrent:atomic:AtomicLong|] v5 @type (this), [|long|] v6) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L143230.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v5) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143236.   v0:= temp  @type wide;
#L143238.   v2:= v0 + v6  @type long;
#L14323c.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v5, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143242.   v4:= temp;
#L143244.   if v4 == 0 then goto L143230;
#L143248.   return v2  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLong.compareAndSet|] ([|java:util:concurrent:atomic:AtomicLong|] v8 @type (this), [|long|] v9, [|long|] v11) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14325c.   v0:= @@[|java:util:concurrent:atomic:AtomicLong.unsafe|]   @type object;
#L143260.   v2:= @@[|java:util:concurrent:atomic:AtomicLong.valueOffset|]   @wide;
#L143264.   v1:= v8  @type object;
#L143266.   v4:= v9  @type wide;
#L143268.   v6:= v11  @type wide;
#L14326a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143270.   v0:= temp;
#L143272.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicLong|] v6 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.decrementAndGet:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143284.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v6) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L14328a.   v0:= temp  @type wide;
#L14328c.   v4:= 1  @length wide16;
#L143290.   v2:= v0 - v4  @type long;
#L143294.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v6, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L14329a.   v4:= temp;
#L14329c.   if v4 == 0 then goto L143284;
#L1432a0.   return v2  @type wide;

   }
    procedure [|double|] [|java:util:concurrent:atomic:AtomicLong.doubleValue|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.doubleValue:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1432b4.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L1432ba.   v0:= temp  @type wide;
#L1432bc.   v0:= (double)v0  @type l2d;
#L1432be.   return v0  @type wide;

   }
    procedure [|float|] [|java:util:concurrent:atomic:AtomicLong.floatValue|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.floatValue:()F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1432d0.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L1432d6.   v0:= temp  @type wide;
#L1432d8.   v0:= (float)v0  @type l2f;
#L1432da.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.get|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1432ec.   v0:= v2.[|java:util:concurrent:atomic:AtomicLong.value|]   @wide;
#L1432f0.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.getAndAdd|] ([|java:util:concurrent:atomic:AtomicLong|] v5 @type (this), [|long|] v6) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndAdd:(J)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L143304.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v5) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L14330a.   v0:= temp  @type wide;
#L14330c.   v2:= v0 + v6  @type long;
#L143310.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v5, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143316.   v4:= temp;
#L143318.   if v4 == 0 then goto L143304;
#L14331c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicLong|] v6 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndDecrement:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143330.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v6) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143336.   v0:= temp  @type wide;
#L143338.   v4:= 1  @length wide16;
#L14333c.   v2:= v0 - v4  @type long;
#L143340.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v6, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143346.   v4:= temp;
#L143348.   if v4 == 0 then goto L143330;
#L14334c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicLong|] v6 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143360.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v6) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143366.   v0:= temp  @type wide;
#L143368.   v4:= 1  @length wide16;
#L14336c.   v2:= v0 + v4  @type long;
#L143370.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v6, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143376.   v4:= temp;
#L143378.   if v4 == 0 then goto L143360;
#L14337c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.getAndSet|] ([|java:util:concurrent:atomic:AtomicLong|] v3 @type (this), [|long|] v4) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L143390.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143396.   v0:= temp  @type wide;
#L143398.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v3, v0, v1, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L14339e.   v2:= temp;
#L1433a0.   if v2 == 0 then goto L143390;
#L1433a4.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicLong|] v6 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1433b8.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v6) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L1433be.   v0:= temp  @type wide;
#L1433c0.   v4:= 1  @length wide16;
#L1433c4.   v2:= v0 + v4  @type long;
#L1433c8.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.compareAndSet|](v6, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L1433ce.   v4:= temp;
#L1433d0.   if v4 == 0 then goto L1433b8;
#L1433d4.   return v2  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicLong.intValue|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.intValue:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1433e8.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L1433ee.   v0:= temp  @type wide;
#L1433f0.   v0:= (int)v0  @type l2i;
#L1433f2.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLong.lazySet|] ([|java:util:concurrent:atomic:AtomicLong|] v6 @type (this), [|long|] v7) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.lazySet:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143404.   v0:= @@[|java:util:concurrent:atomic:AtomicLong.unsafe|]   @type object;
#L143408.   v2:= @@[|java:util:concurrent:atomic:AtomicLong.valueOffset|]   @wide;
#L14340c.   v1:= v6  @type object;
#L14340e.   v4:= v7  @type wide;
#L143410.   call temp:=  [|sun:misc:Unsafe.putOrderedLong|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putOrderedLong:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143416.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLong.longValue|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.longValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L143428.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L14342e.   v0:= temp  @type wide;
#L143430.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLong.set|] ([|java:util:concurrent:atomic:AtomicLong|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.set:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L143444.   v0.[|java:util:concurrent:atomic:AtomicLong.value|]  := v1 @wide;
#L143448.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicLong.toString|] ([|java:util:concurrent:atomic:AtomicLong|] v2 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14345c.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.get:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L143462.   v0:= temp  @type wide;
#L143464.   call temp:=  [|java:lang:Long.toString|](v0, v1) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L14346a.   v0:= temp  @type object;
#L14346c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLong.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicLong|] v8 @type (this), [|long|] v9, [|long|] v11) @owner [|java:util:concurrent:atomic:AtomicLong|] @signature [|Ljava/util/concurrent/atomic/AtomicLong;.weakCompareAndSet:(JJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L143480.   v0:= @@[|java:util:concurrent:atomic:AtomicLong.unsafe|]   @type object;
#L143484.   v2:= @@[|java:util:concurrent:atomic:AtomicLong.valueOffset|]   @wide;
#L143488.   v1:= v8  @type object;
#L14348a.   v4:= v9  @type wide;
#L14348c.   v6:= v11  @type wide;
#L14348e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143494.   v0:= temp;
#L143496.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicLongArray|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|long|][] [|java:util:concurrent:atomic:AtomicLongArray.array|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:util:concurrent:atomic:AtomicLongArray.base|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicLongArray.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:atomic:AtomicLongArray.shift|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongArray.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1434a8.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1434ae.   v1:= temp  @type object;
#L1434b0.   @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|] := v1  @type object;
#L1434b4.   v1:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L1434b8.   v2:= new [|long|][];
#L1434bc.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1434c2.   v1:= temp;
#L1434c4.   @@[|java:util:concurrent:atomic:AtomicLongArray.base|] := v1;
#L1434c8.   v1:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L1434cc.   v2:= new [|long|][];
#L1434d0.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v1, v2) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1434d6.   v0:= temp;
#L1434d8.   v1:= v0 + -1;
#L1434dc.   v1:= v1 ^& v0  @type int;
#L1434de.   if v1 == 0 then goto L1434f2;
#L1434e2.   v1:= new [|java:lang:Error|];
#L1434e6.   v2:= "data type scale not a power of two" @type (object, string);
#L1434ea.   call temp:=  [|java:lang:Error.<init>|](v1, v2) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1434f0.   throw v1;
#L1434f2.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v0) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L1434f8.   v1:= temp;
#L1434fa.   v1:= v1 - 31;
#L1434fe.   @@[|java:util:concurrent:atomic:AtomicLongArray.shift|] := v1;
#L143502.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongArray.<init>|] ([|java:util:concurrent:atomic:AtomicLongArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L143514.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14351a.   v0:= new [|long|][v2];
#L14351e.   v1.[|java:util:concurrent:atomic:AtomicLongArray.array|]  := v0 @type object;
#L143522.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongArray.<init>|] ([|java:util:concurrent:atomic:AtomicLongArray|] v1 @type (this), [|long|][] v2) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.<init>:([J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L143534.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14353a.   call temp:=  [|long[].clone|](v2) @signature [|[J.clone:()Ljava/lang/Object;|] @classDescriptor [|long[]|] @type virtual;
#L143540.   v0:= temp  @type object;
#L143542.   v0:= ([|long|][])v0;
#L143546.   v1.[|java:util:concurrent:atomic:AtomicLongArray.array|]  := v0 @type object;
#L14354a.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.byteOffset|] ([|int|] v4) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.byteOffset:(I)J|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14355c.   v0:= (long)v4  @type i2l;
#L14355e.   v2:= @@[|java:util:concurrent:atomic:AtomicLongArray.shift|] ;
#L143562.   v0:= v0 ^< v2  @type long;
#L143564.   v2:= @@[|java:util:concurrent:atomic:AtomicLongArray.base|] ;
#L143568.   v2:= (long)v2  @type i2l;
#L14356a.   v0:= v0 + v2  @type long;
#L14356c.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|] ([|java:util:concurrent:atomic:AtomicLongArray|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L143580.   if v4 < 0 then goto L14358e;
#L143584.   v0:= v3.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L143588.   v0:= v0.length;
#L14358a.   if v4 < v0 then goto L1435c0;
#L14358e.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L143592.   v1:= new [|java:lang:StringBuilder|];
#L143596.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14359c.   v2:= "index " @type (object, string);
#L1435a0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1435a6.   v1:= temp  @type object;
#L1435a8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1435ae.   v1:= temp  @type object;
#L1435b0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1435b6.   v1:= temp  @type object;
#L1435b8.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L1435be.   throw v0;
#L1435c0.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.byteOffset|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type static;
#L1435c6.   v0:= temp  @type wide;
#L1435c8.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongArray.compareAndSetRaw|] ([|java:util:concurrent:atomic:AtomicLongArray|] v8 @type (this), [|long|] v9, [|long|] v11, [|long|] v13) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSetRaw:(JJJ)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1435dc.   v0:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L1435e0.   v1:= v8.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L1435e4.   v2:= v9  @type wide;
#L1435e6.   v4:= v11  @type wide;
#L1435e8.   v6:= v13  @type wide;
#L1435ea.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1435f0.   v0:= temp;
#L1435f2.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.getRaw|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L143604.   v0:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L143608.   v1:= v2.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L14360c.   call temp:=  [|sun:misc:Unsafe.getLongVolatile|](v0, v1, v3, v4) @signature [|Lsun/misc/Unsafe;.getLongVolatile:(Ljava/lang/Object;J)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143612.   v0:= temp  @type wide;
#L143614.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.addAndGet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v7 @type (this), [|int|] v8, [|long|] v9) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.addAndGet:(IJ)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L143628.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v7, v8) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L14362e.   v1:= temp  @type wide;
#L143630.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getRaw|](v7, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143636.   v3:= temp  @type wide;
#L143638.   v5:= v3 + v9  @type long;
#L14363c.   v0:= v7  @type object;
#L14363e.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.compareAndSetRaw|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSetRaw:(JJJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143644.   v0:= temp;
#L143646.   if v0 == 0 then goto L143630;
#L14364a.   return v5  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongArray.compareAndSet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v7 @type (this), [|int|] v8, [|long|] v9, [|long|] v11) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSet:(IJJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L14365c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v7, v8) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143662.   v1:= temp  @type wide;
#L143664.   v0:= v7  @type object;
#L143666.   v3:= v9  @type wide;
#L143668.   v5:= v11  @type wide;
#L14366a.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.compareAndSetRaw|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSetRaw:(JJJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143670.   v0:= temp;
#L143672.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.decrementAndGet:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L143684.   v0:= -1  @length wide16;
#L143688.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.addAndGet|](v2, v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.addAndGet:(IJ)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type virtual;
#L14368e.   v0:= temp  @type wide;
#L143690.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.get|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.get:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1436a4.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1436aa.   v0:= temp  @type wide;
#L1436ac.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getRaw|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1436b2.   v0:= temp  @type wide;
#L1436b4.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.getAndAdd|] ([|java:util:concurrent:atomic:AtomicLongArray|] v7 @type (this), [|int|] v8, [|long|] v9) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndAdd:(IJ)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1436c8.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v7, v8) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1436ce.   v1:= temp  @type wide;
#L1436d0.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getRaw|](v7, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1436d6.   v3:= temp  @type wide;
#L1436d8.   v5:= v3 + v9  @type long;
#L1436dc.   v0:= v7  @type object;
#L1436de.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.compareAndSetRaw|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSetRaw:(JJJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1436e4.   v0:= temp;
#L1436e6.   if v0 == 0 then goto L1436d0;
#L1436ea.   return v3  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndDecrement:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1436fc.   v0:= -1  @length wide16;
#L143700.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getAndAdd|](v2, v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndAdd:(IJ)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type virtual;
#L143706.   v0:= temp  @type wide;
#L143708.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndIncrement:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L14371c.   v0:= 1  @length wide16;
#L143720.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getAndAdd|](v2, v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndAdd:(IJ)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type virtual;
#L143726.   v0:= temp  @type wide;
#L143728.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.getAndSet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v7 @type (this), [|int|] v8, [|long|] v9) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getAndSet:(IJ)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L14373c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v7, v8) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143742.   v1:= temp  @type wide;
#L143744.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getRaw|](v7, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L14374a.   v3:= temp  @type wide;
#L14374c.   v0:= v7  @type object;
#L14374e.   v5:= v9  @type wide;
#L143750.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.compareAndSetRaw|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSetRaw:(JJJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L143756.   v0:= temp;
#L143758.   if v0 == 0 then goto L143744;
#L14375c.   return v3  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongArray.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.incrementAndGet:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L143770.   v0:= 1  @length wide16;
#L143774.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.addAndGet|](v2, v3, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.addAndGet:(IJ)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type virtual;
#L14377a.   v0:= temp  @type wide;
#L14377c.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongArray.lazySet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v6 @type (this), [|int|] v7, [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.lazySet:(IJ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143790.   v0:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L143794.   v1:= v6.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L143798.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L14379e.   v2:= temp  @type wide;
#L1437a0.   v4:= v8  @type wide;
#L1437a2.   call temp:=  [|sun:misc:Unsafe.putOrderedLong|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putOrderedLong:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1437a8.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicLongArray.length|] ([|java:util:concurrent:atomic:AtomicLongArray|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.length:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1437bc.   v0:= v1.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L1437c0.   v0:= v0.length;
#L1437c2.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongArray.set|] ([|java:util:concurrent:atomic:AtomicLongArray|] v6 @type (this), [|int|] v7, [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.set:(IJ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1437d4.   v0:= @@[|java:util:concurrent:atomic:AtomicLongArray.unsafe|]   @type object;
#L1437d8.   v1:= v6.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L1437dc.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.checkedByteOffset|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L1437e2.   v2:= temp  @type wide;
#L1437e4.   v4:= v8  @type wide;
#L1437e6.   call temp:=  [|sun:misc:Unsafe.putLongVolatile|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putLongVolatile:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1437ec.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicLongArray.toString|] ([|java:util:concurrent:atomic:AtomicLongArray|] v5 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L143800.   v3:= v5.[|java:util:concurrent:atomic:AtomicLongArray.array|]   @type object;
#L143804.   v3:= v3.length;
#L143806.   v2:= v3 + -1;
#L14380a.   v3:= -1  @length 4;
#L14380c.   if v2 != v3 then goto L143816;
#L143810.   v3:= "[]" @type (object, string);
#L143814.   return v3  @type object;
#L143816.   v0:= new [|java:lang:StringBuilder|];
#L14381a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L143820.   v3:= 91  @length 16;
#L143824.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14382a.   v1:= 0  @length 4;
#L14382c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.byteOffset|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type static;
#L143832.   v3:= temp  @type wide;
#L143834.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.getRaw|](v5, v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.getRaw:(J)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type direct;
#L14383a.   v3:= temp  @type wide;
#L14383c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143842.   if v1 != v2 then goto L14385c;
#L143846.   v3:= 93  @length 16;
#L14384a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143850.   v3:= temp  @type object;
#L143852.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143858.   v3:= temp  @type object;
#L14385a.   goto L143814;
#L14385c.   v3:= 44  @length 16;
#L143860.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143866.   v3:= temp  @type object;
#L143868.   v4:= 32  @length 16;
#L14386c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143872.   v1:= v1 + 1;
#L143876.   goto L14382c;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongArray.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicLongArray|] v1 @type (this), [|int|] v2, [|long|] v3, [|long|] v5) @owner [|java:util:concurrent:atomic:AtomicLongArray|] @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.weakCompareAndSet:(IJJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L143888.   call temp:=  [|java:util:concurrent:atomic:AtomicLongArray.compareAndSet|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongArray;.compareAndSet:(IJJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongArray|] @type virtual;
#L14388e.   v0:= temp;
#L143890.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicLongFieldUpdater|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.<init>|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1438a4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1438aa.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.newUpdater|] ([|java:lang:Class|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1438bc.   v0:= @@[|java:util:concurrent:atomic:AtomicLong.VM_SUPPORTS_LONG_CAS|]   @boolean;
#L1438c0.   if v0 == 0 then goto L1438d0;
#L1438c4.   v0:= new [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|];
#L1438c8.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L1438ce.   return v0  @type object;
#L1438d0.   v0:= new [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|];
#L1438d4.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type direct;
#L1438da.   goto L1438ce;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.addAndGet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.addAndGet:(Ljava/lang/Object;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1438ec.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L1438f2.   v2:= temp  @type wide;
#L1438f4.   v4:= v2 + v8  @type long;
#L1438f8.   v0:= v6  @type object;
#L1438fa.   v1:= v7  @type object;
#L1438fc.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143902.   v0:= temp;
#L143904.   if v0 == 0 then goto L1438ec;
#L143908.   return v4  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|long|] v3) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.decrementAndGet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.decrementAndGet:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14391c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143922.   v2:= temp  @type wide;
#L143924.   v0:= 1  @length wide16;
#L143928.   v4:= v2 - v0  @type long;
#L14392c.   v0:= v6  @type object;
#L14392e.   v1:= v7  @type object;
#L143930.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143936.   v0:= temp;
#L143938.   if v0 == 0 then goto L14391c;
#L14393c.   return v4  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.getAndAdd|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.getAndAdd:(Ljava/lang/Object;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143950.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143956.   v2:= temp  @type wide;
#L143958.   v4:= v2 + v8  @type long;
#L14395c.   v0:= v6  @type object;
#L14395e.   v1:= v7  @type object;
#L143960.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143966.   v0:= temp;
#L143968.   if v0 == 0 then goto L143950;
#L14396c.   return v2  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.getAndDecrement|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.getAndDecrement:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143980.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143986.   v2:= temp  @type wide;
#L143988.   v0:= 1  @length wide16;
#L14398c.   v4:= v2 - v0  @type long;
#L143990.   v0:= v6  @type object;
#L143992.   v1:= v7  @type object;
#L143994.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L14399a.   v0:= temp;
#L14399c.   if v0 == 0 then goto L143980;
#L1439a0.   return v2  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.getAndIncrement|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.getAndIncrement:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1439b4.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L1439ba.   v2:= temp  @type wide;
#L1439bc.   v0:= 1  @length wide16;
#L1439c0.   v4:= v2 + v0  @type long;
#L1439c4.   v0:= v6  @type object;
#L1439c6.   v1:= v7  @type object;
#L1439c8.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L1439ce.   v0:= temp;
#L1439d0.   if v0 == 0 then goto L1439b4;
#L1439d4.   return v2  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.getAndSet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.getAndSet:(Ljava/lang/Object;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1439e8.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L1439ee.   v2:= temp  @type wide;
#L1439f0.   v0:= v6  @type object;
#L1439f2.   v1:= v7  @type object;
#L1439f4.   v4:= v8  @type wide;
#L1439f6.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L1439fc.   v0:= temp;
#L1439fe.   if v0 == 0 then goto L1439e8;
#L143a02.   return v2  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.incrementAndGet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143a14.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.get|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.get:(Ljava/lang/Object;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143a1a.   v2:= temp  @type wide;
#L143a1c.   v0:= 1  @length wide16;
#L143a20.   v4:= v2 + v0  @type long;
#L143a24.   v0:= v6  @type object;
#L143a26.   v1:= v7  @type object;
#L143a28.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.compareAndSet|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type virtual;
#L143a2e.   v0:= temp;
#L143a30.   if v0 == 0 then goto L143a14;
#L143a34.   return v4  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.lazySet|] ([|java:lang:Object|] v0 @type (object), [|long|] v1) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.lazySet:(Ljava/lang/Object;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.set|] ([|java:lang:Object|] v0 @type (object), [|long|] v1) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.set:(Ljava/lang/Object;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater.weakCompareAndSet|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|long|] v3) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.weakCompareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|]  @type class @AccessFlag   extends [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] {
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L143a48.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L143a4e.   v0:= temp  @type object;
#L143a50.   @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|] := v0  @type object;
#L143a54.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.<init>|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v7 @type (this), [|java:lang:Class|] v8 @type (object), [|java:lang:String|] v9 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L143a68.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.<init>|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type direct;
#L143a6e.   v2:= 0  @length 4;
#L143a70.   v0:= 0  @length 4;
#L143a72.   v4:= 0  @length 4;
#L143a74.   call temp:=  [|java:lang:Class.getDeclaredField|](v8, v9) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143a7a.   v2:= temp  @type object;
#L143a7c.   call temp:=  [|dalvik:system:VMStack.getStackClass2|]() @signature [|Ldalvik/system/VMStack;.getStackClass2:()Ljava/lang/Class;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L143a82.   v0:= temp  @type object;
#L143a84.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v2) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L143a8a.   v4:= temp;
#L143a8c.   call temp:=  [|java:lang:reflect:Field.getType|](v2) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L143a92.   v3:= temp  @type object;
#L143a94.   v5:= @@[|java:lang:Long.TYPE|]   @type object;
#L143a98.   if v3 == v5 then goto L143aba;
#L143a9c.   v5:= new [|java:lang:IllegalArgumentException|];
#L143aa0.   v6:= "Must be long type" @type (object, string);
#L143aa4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L143aaa.   throw v5;
#L143aac.   v1:= Exception  @type object;
#L143aae.   v5:= new [|java:lang:RuntimeException|];
#L143ab2.   call temp:=  [|java:lang:RuntimeException.<init>|](v5, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L143ab8.   throw v5;
#L143aba.   call temp:=  [|java:lang:reflect:Modifier.isVolatile|](v4) @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L143ac0.   v5:= temp;
#L143ac2.   if v5 != 0 then goto L143ad6;
#L143ac6.   v5:= new [|java:lang:IllegalArgumentException|];
#L143aca.   v6:= "Must be volatile type" @type (object, string);
#L143ace.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L143ad4.   throw v5;
#L143ad6.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v4) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L143adc.   v5:= temp;
#L143ade.   if v5 == 0 then goto L143b00;
#L143ae2.   if v0 == v8 then goto L143b00;
#L143ae6.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]  := v0 @type object;
#L143aea.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]  := v8 @type object;
#L143aee.   v5:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143af2.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v5, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143af8.   v5:= temp  @type wide;
#L143afa.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]  := v5 @wide;
#L143afe.   return @void ;
#L143b00.   v0:= 0  @length 4;
#L143b02.   goto L143ae6;
  catch  [|java:lang:Exception|] @[L143a74..L143a8a] goto L143aac;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.ensureProtectedAccess|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L143b24.   v0:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143b28.   call temp:=  [|java:lang:Class.isInstance|](v0, v5) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143b2e.   v0:= temp;
#L143b30.   if v0 == 0 then goto L143b36;
#L143b34.   return @void ;
#L143b36.   v0:= new [|java:lang:RuntimeException|];
#L143b3a.   v1:= new [|java:lang:IllegalAccessException|];
#L143b3e.   v2:= new [|java:lang:StringBuilder|];
#L143b42.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L143b48.   v3:= "Class " @type (object, string);
#L143b4c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143b52.   v2:= temp  @type object;
#L143b54.   v3:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143b58.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143b5e.   v3:= temp  @type object;
#L143b60.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143b66.   v2:= temp  @type object;
#L143b68.   v3:= " can not access a protected member of class " @type (object, string);
#L143b6c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143b72.   v2:= temp  @type object;
#L143b74.   v3:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143b78.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143b7e.   v3:= temp  @type object;
#L143b80.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143b86.   v2:= temp  @type object;
#L143b88.   v3:= " using an instance of " @type (object, string);
#L143b8c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143b92.   v2:= temp  @type object;
#L143b94.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143b9a.   v3:= temp  @type object;
#L143b9c.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143ba2.   v3:= temp  @type object;
#L143ba4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143baa.   v2:= temp  @type object;
#L143bac.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143bb2.   v2:= temp  @type object;
#L143bb4.   call temp:=  [|java:lang:IllegalAccessException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalAccessException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessException|] @type direct;
#L143bba.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L143bc0.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L143bd4.   v0:= v1.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143bd8.   call temp:=  [|java:lang:Class.isInstance|](v0, v2) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143bde.   v0:= temp;
#L143be0.   if v0 != 0 then goto L143bf0;
#L143be4.   v0:= new [|java:lang:ClassCastException|];
#L143be8.   call temp:=  [|java:lang:ClassCastException.<init>|](v0) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L143bee.   throw v0;
#L143bf0.   v0:= v1.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143bf4.   if v0 == 0 then goto L143bfe;
#L143bf8.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.ensureProtectedAccess|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143bfe.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.compareAndSet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|long|] v10, [|long|] v12) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L143c10.   if v9 == 0 then goto L143c2c;
#L143c14.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143c1a.   v0:= temp  @type object;
#L143c1c.   v1:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143c20.   if v0 != v1 then goto L143c2c;
#L143c24.   v0:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143c28.   if v0 == 0 then goto L143c32;
#L143c2c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|](v8, v9) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143c32.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143c36.   v2:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]   @wide;
#L143c3a.   v1:= v9  @type object;
#L143c3c.   v4:= v10  @type wide;
#L143c3e.   v6:= v12  @type wide;
#L143c40.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143c46.   v0:= temp;
#L143c48.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.get|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.get:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L143c5c.   if v4 == 0 then goto L143c78;
#L143c60.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143c66.   v0:= temp  @type object;
#L143c68.   v1:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143c6c.   if v0 != v1 then goto L143c78;
#L143c70.   v0:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143c74.   if v0 == 0 then goto L143c7e;
#L143c78.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143c7e.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143c82.   v1:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]   @wide;
#L143c86.   call temp:=  [|sun:misc:Unsafe.getLongVolatile|](v0, v4, v1, v2) @signature [|Lsun/misc/Unsafe;.getLongVolatile:(Ljava/lang/Object;J)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143c8c.   v0:= temp  @type wide;
#L143c8e.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.lazySet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.lazySet:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143ca0.   if v7 == 0 then goto L143cbc;
#L143ca4.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143caa.   v0:= temp  @type object;
#L143cac.   v1:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143cb0.   if v0 != v1 then goto L143cbc;
#L143cb4.   v0:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143cb8.   if v0 == 0 then goto L143cc2;
#L143cbc.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143cc2.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143cc6.   v2:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]   @wide;
#L143cca.   v1:= v7  @type object;
#L143ccc.   v4:= v8  @type wide;
#L143cce.   call temp:=  [|sun:misc:Unsafe.putOrderedLong|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putOrderedLong:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143cd4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.set|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.set:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L143ce8.   if v7 == 0 then goto L143d04;
#L143cec.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143cf2.   v0:= temp  @type object;
#L143cf4.   v1:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143cf8.   if v0 != v1 then goto L143d04;
#L143cfc.   v0:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143d00.   if v0 == 0 then goto L143d0a;
#L143d04.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143d0a.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143d0e.   v2:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]   @wide;
#L143d12.   v1:= v7  @type object;
#L143d14.   v4:= v8  @type wide;
#L143d16.   call temp:=  [|sun:misc:Unsafe.putLongVolatile|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putLongVolatile:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143d1c.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|long|] v10, [|long|] v12) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.weakCompareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L143d30.   if v9 == 0 then goto L143d4c;
#L143d34.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143d3a.   v0:= temp  @type object;
#L143d3c.   v1:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.tclass|]   @type object;
#L143d40.   if v0 != v1 then goto L143d4c;
#L143d44.   v0:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.cclass|]   @type object;
#L143d48.   if v0 == 0 then goto L143d52;
#L143d4c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.fullCheck|](v8, v9) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater|] @type direct;
#L143d52.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.unsafe|]   @type object;
#L143d56.   v2:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$CASUpdater.offset|]   @wide;
#L143d5a.   v1:= v9  @type object;
#L143d5c.   v4:= v10  @type wide;
#L143d5e.   v6:= v12  @type wide;
#L143d60.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143d66.   v0:= temp;
#L143d68.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|]  @type class @AccessFlag   extends [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] {
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L143d7c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L143d82.   v0:= temp  @type object;
#L143d84.   @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|] := v0  @type object;
#L143d88.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.<init>|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v7 @type (this), [|java:lang:Class|] v8 @type (object), [|java:lang:String|] v9 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L143d9c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater.<init>|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater|] @type direct;
#L143da2.   v2:= 0  @length 4;
#L143da4.   v0:= 0  @length 4;
#L143da6.   v4:= 0  @length 4;
#L143da8.   call temp:=  [|java:lang:Class.getDeclaredField|](v8, v9) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143dae.   v2:= temp  @type object;
#L143db0.   call temp:=  [|dalvik:system:VMStack.getStackClass2|]() @signature [|Ldalvik/system/VMStack;.getStackClass2:()Ljava/lang/Class;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L143db6.   v0:= temp  @type object;
#L143db8.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v2) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L143dbe.   v4:= temp;
#L143dc0.   call temp:=  [|java:lang:reflect:Field.getType|](v2) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L143dc6.   v3:= temp  @type object;
#L143dc8.   v5:= @@[|java:lang:Long.TYPE|]   @type object;
#L143dcc.   if v3 == v5 then goto L143dee;
#L143dd0.   v5:= new [|java:lang:IllegalArgumentException|];
#L143dd4.   v6:= "Must be long type" @type (object, string);
#L143dd8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L143dde.   throw v5;
#L143de0.   v1:= Exception  @type object;
#L143de2.   v5:= new [|java:lang:RuntimeException|];
#L143de6.   call temp:=  [|java:lang:RuntimeException.<init>|](v5, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L143dec.   throw v5;
#L143dee.   call temp:=  [|java:lang:reflect:Modifier.isVolatile|](v4) @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L143df4.   v5:= temp;
#L143df6.   if v5 != 0 then goto L143e0a;
#L143dfa.   v5:= new [|java:lang:IllegalArgumentException|];
#L143dfe.   v6:= "Must be volatile type" @type (object, string);
#L143e02.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L143e08.   throw v5;
#L143e0a.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v4) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L143e10.   v5:= temp;
#L143e12.   if v5 == 0 then goto L143e34;
#L143e16.   if v0 == v8 then goto L143e34;
#L143e1a.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]  := v0 @type object;
#L143e1e.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]  := v8 @type object;
#L143e22.   v5:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]   @type object;
#L143e26.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v5, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143e2c.   v5:= temp  @type wide;
#L143e2e.   v7.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]  := v5 @wide;
#L143e32.   return @void ;
#L143e34.   v0:= 0  @length 4;
#L143e36.   goto L143e1a;
  catch  [|java:lang:Exception|] @[L143da8..L143dbe] goto L143de0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.ensureProtectedAccess|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L143e58.   v0:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L143e5c.   call temp:=  [|java:lang:Class.isInstance|](v0, v5) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143e62.   v0:= temp;
#L143e64.   if v0 == 0 then goto L143e6a;
#L143e68.   return @void ;
#L143e6a.   v0:= new [|java:lang:RuntimeException|];
#L143e6e.   v1:= new [|java:lang:IllegalAccessException|];
#L143e72.   v2:= new [|java:lang:StringBuilder|];
#L143e76.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L143e7c.   v3:= "Class " @type (object, string);
#L143e80.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143e86.   v2:= temp  @type object;
#L143e88.   v3:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L143e8c.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143e92.   v3:= temp  @type object;
#L143e94.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143e9a.   v2:= temp  @type object;
#L143e9c.   v3:= " can not access a protected member of class " @type (object, string);
#L143ea0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143ea6.   v2:= temp  @type object;
#L143ea8.   v3:= v4.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]   @type object;
#L143eac.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143eb2.   v3:= temp  @type object;
#L143eb4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143eba.   v2:= temp  @type object;
#L143ebc.   v3:= " using an instance of " @type (object, string);
#L143ec0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143ec6.   v2:= temp  @type object;
#L143ec8.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143ece.   v3:= temp  @type object;
#L143ed0.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143ed6.   v3:= temp  @type object;
#L143ed8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143ede.   v2:= temp  @type object;
#L143ee0.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L143ee6.   v2:= temp  @type object;
#L143ee8.   call temp:=  [|java:lang:IllegalAccessException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalAccessException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessException|] @type direct;
#L143eee.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L143ef4.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.fullCheck|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.fullCheck:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L143f08.   v0:= v1.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]   @type object;
#L143f0c.   call temp:=  [|java:lang:Class.isInstance|](v0, v2) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L143f12.   v0:= temp;
#L143f14.   if v0 != 0 then goto L143f24;
#L143f18.   v0:= new [|java:lang:ClassCastException|];
#L143f1c.   call temp:=  [|java:lang:ClassCastException.<init>|](v0) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L143f22.   throw v0;
#L143f24.   v0:= v1.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L143f28.   if v0 == 0 then goto L143f32;
#L143f2c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.ensureProtectedAccess|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type direct;
#L143f32.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.compareAndSet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|long|] v10, [|long|] v12) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L143f44.   if v9 == 0 then goto L143f60;
#L143f48.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143f4e.   v0:= temp  @type object;
#L143f50.   v1:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]   @type object;
#L143f54.   if v0 != v1 then goto L143f60;
#L143f58.   v0:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L143f5c.   if v0 == 0 then goto L143f66;
#L143f60.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.fullCheck|](v8, v9) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type direct;
#L143f66.   (@monitorenter v8)
#L143f68.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]   @type object;
#L143f6c.   v1:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]   @wide;
#L143f70.   call temp:=  [|sun:misc:Unsafe.getLong|](v0, v9, v1, v2) @signature [|Lsun/misc/Unsafe;.getLong:(Ljava/lang/Object;J)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143f76.   v6:= temp  @type wide;
#L143f78.   v0:= cmp(v6,v10);
#L143f7c.   if v0 == 0 then goto L143f86;
#L143f80.   v0:= 0  @length 4;
#L143f82.   (@monitorexit v8)
#L143f84.   return v0;
#L143f86.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]   @type object;
#L143f8a.   v2:= v8.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]   @wide;
#L143f8e.   v1:= v9  @type object;
#L143f90.   v4:= v12  @type wide;
#L143f92.   call temp:=  [|sun:misc:Unsafe.putLong|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putLong:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143f98.   v0:= 1  @length 4;
#L143f9a.   (@monitorexit v8)
#L143f9c.   goto L143f84;
#L143f9e.   v0:= Exception  @type object;
#L143fa0.   (@monitorexit v8)
#L143fa2.   throw v0;
  catch  [|any|] @[L143f68..L143fa2] goto L143f9e;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.get|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.get:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L143fc0.   if v4 == 0 then goto L143fdc;
#L143fc4.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L143fca.   v0:= temp  @type object;
#L143fcc.   v1:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]   @type object;
#L143fd0.   if v0 != v1 then goto L143fdc;
#L143fd4.   v0:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L143fd8.   if v0 == 0 then goto L143fe2;
#L143fdc.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.fullCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type direct;
#L143fe2.   (@monitorenter v3)
#L143fe4.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]   @type object;
#L143fe8.   v1:= v3.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]   @wide;
#L143fec.   call temp:=  [|sun:misc:Unsafe.getLong|](v0, v4, v1, v2) @signature [|Lsun/misc/Unsafe;.getLong:(Ljava/lang/Object;J)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L143ff2.   v0:= temp  @type wide;
#L143ff4.   (@monitorexit v3)
#L143ff6.   return v0  @type wide;
#L143ff8.   v0:= Exception  @type object;
#L143ffa.   (@monitorexit v3)
#L143ffc.   throw v0;
  catch  [|any|] @[L143fe4..L143ffc] goto L143ff8;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.lazySet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|long|] v2) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.lazySet:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
      
#L14401c.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.set|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.set:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type virtual;
#L144022.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.set|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.set:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L144034.   if v7 == 0 then goto L144050;
#L144038.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14403e.   v0:= temp  @type object;
#L144040.   v1:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.tclass|]   @type object;
#L144044.   if v0 != v1 then goto L144050;
#L144048.   v0:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.cclass|]   @type object;
#L14404c.   if v0 == 0 then goto L144056;
#L144050.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.fullCheck|](v6, v7) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.fullCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type direct;
#L144056.   (@monitorenter v6)
#L144058.   v0:= @@[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.unsafe|]   @type object;
#L14405c.   v2:= v6.[|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.offset|]   @wide;
#L144060.   v1:= v7  @type object;
#L144062.   v4:= v8  @type wide;
#L144064.   call temp:=  [|sun:misc:Unsafe.putLong|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.putLong:(Ljava/lang/Object;JJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14406a.   (@monitorexit v6)
#L14406c.   return @void ;
#L14406e.   v0:= Exception  @type object;
#L144070.   (@monitorexit v6)
#L144072.   throw v0;
  catch  [|any|] @[L144058..L144072] goto L14406e;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|long|] v3, [|long|] v5) @owner [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.weakCompareAndSet:(Ljava/lang/Object;JJ)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144090.   call temp:=  [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater.compareAndSet|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicLongFieldUpdater$LockedUpdater|] @type virtual;
#L144096.   v0:= temp;
#L144098.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|]  @type class @AccessFlag   {
      [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.<init>|] ([|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|boolean|] v2) @owner [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.<init>:(Ljava/lang/Object;Z)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1440ac.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1440b2.   v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]  := v1 @type object;
#L1440b6.   v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]  := v2 @boolean;
#L1440ba.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.of|] ([|java:lang:Object|] v1 @type (object), [|boolean|] v2) @owner [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.of:(Ljava/lang/Object;Z)Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;|] @Access STATIC {
      local temp ;
        v0;
      
#L1440cc.   v0:= new [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|];
#L1440d0.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.<init>:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @type direct;
#L1440d6.   return v0  @type object;

   }
record [|java:util:concurrent:atomic:AtomicMarkableReference|]  @type class @AccessFlag PUBLIC  {
      [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] [|java:util:concurrent:atomic:AtomicMarkableReference.pair|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicMarkableReference.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicMarkableReference.pairOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicMarkableReference.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1440e8.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1440ee.   v0:= temp  @type object;
#L1440f0.   @@[|java:util:concurrent:atomic:AtomicMarkableReference.UNSAFE|] := v0  @type object;
#L1440f4.   v0:= @@[|java:util:concurrent:atomic:AtomicMarkableReference.UNSAFE|]   @type object;
#L1440f8.   v1:= "pair" @type (object, string);
#L1440fc.   v2:= new [|java:util:concurrent:atomic:AtomicMarkableReference|];
#L144100.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference.objectFieldOffset|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.objectFieldOffset:(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference|] @type static;
#L144106.   v0:= temp  @type wide;
#L144108.   @@[|java:util:concurrent:atomic:AtomicMarkableReference.pairOffset|] := v0  @wide;
#L14410c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicMarkableReference.<init>|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.<init>:(Ljava/lang/Object;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L144120.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L144126.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.of|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.of:(Ljava/lang/Object;Z)Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @type static;
#L14412c.   v0:= temp  @type object;
#L14412e.   v1.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]  := v0 @type object;
#L144132.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference.casPair|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v6 @type (this), [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] v7 @type (object), [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] v8 @type (object)) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.casPair:(Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L144144.   v0:= @@[|java:util:concurrent:atomic:AtomicMarkableReference.UNSAFE|]   @type object;
#L144148.   v2:= @@[|java:util:concurrent:atomic:AtomicMarkableReference.pairOffset|]   @wide;
#L14414c.   v1:= v6  @type object;
#L14414e.   v4:= v7  @type object;
#L144150.   v5:= v8  @type object;
#L144152.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144158.   v0:= temp;
#L14415a.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicMarkableReference.objectFieldOffset|] ([|sun:misc:Unsafe|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Class|] v6 @type (object)) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.objectFieldOffset:(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14416c.   call temp:=  [|java:lang:Class.getDeclaredField|](v6, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144172.   v2:= temp  @type object;
#L144174.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14417a.   v2:= temp  @type wide;
#L14417c.   return v2  @type wide;
#L14417e.   v0:= Exception  @type object;
#L144180.   v1:= new [|java:lang:NoSuchFieldError|];
#L144184.   call temp:=  [|java:lang:NoSuchFieldError.<init>|](v1, v5) @signature [|Ljava/lang/NoSuchFieldError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NoSuchFieldError|] @type direct;
#L14418a.   call temp:=  [|java:lang:NoSuchFieldError.initCause|](v1, v0) @signature [|Ljava/lang/NoSuchFieldError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:NoSuchFieldError|] @type virtual;
#L144190.   throw v1;
  catch  [|java:lang:NoSuchFieldException|] @[L14416c..L14417a] goto L14417e;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference.attemptMark|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.attemptMark:(Ljava/lang/Object;Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1441b4.   v0:= v2.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L1441b8.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L1441bc.   if v3 != v1 then goto L1441e0;
#L1441c0.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L1441c4.   if v4 == v1 then goto L1441dc;
#L1441c8.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.of|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.of:(Ljava/lang/Object;Z)Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @type static;
#L1441ce.   v1:= temp  @type object;
#L1441d0.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference.casPair|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.casPair:(Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference|] @type direct;
#L1441d6.   v1:= temp;
#L1441d8.   if v1 == 0 then goto L1441e0;
#L1441dc.   v1:= 1  @length 4;
#L1441de.   return v1;
#L1441e0.   v1:= 0  @length 4;
#L1441e2.   goto L1441de;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference.compareAndSet|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|boolean|] v5, [|boolean|] v6) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1441f4.   v0:= v2.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L1441f8.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L1441fc.   if v3 != v1 then goto L144230;
#L144200.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L144204.   if v5 != v1 then goto L144230;
#L144208.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L14420c.   if v4 != v1 then goto L144218;
#L144210.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L144214.   if v6 == v1 then goto L14422c;
#L144218.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.of|](v4, v6) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.of:(Ljava/lang/Object;Z)Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @type static;
#L14421e.   v1:= temp  @type object;
#L144220.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference.casPair|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.casPair:(Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference|] @type direct;
#L144226.   v1:= temp;
#L144228.   if v1 == 0 then goto L144230;
#L14422c.   v1:= 1  @length 4;
#L14422e.   return v1;
#L144230.   v1:= 0  @length 4;
#L144232.   goto L14422e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicMarkableReference.get|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v3 @type (this), [|boolean|][] v4) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.get:([Z)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L144244.   v0:= v3.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L144248.   v1:= 0  @length 4;
#L14424a.   v2:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L14424e.   v4[v1]:= v2  @boolean;
#L144252.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L144256.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicMarkableReference.getReference|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.getReference:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144268.   v0:= v1.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L14426c.   v0:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L144270.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference.isMarked|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.isMarked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144284.   v0:= v1.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L144288.   v0:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L14428c.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicMarkableReference.set|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.set:(Ljava/lang/Object;Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1442a0.   v0:= v2.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]   @type object;
#L1442a4.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.reference|]   @type object;
#L1442a8.   if v3 != v1 then goto L1442b4;
#L1442ac.   v1:= v0.[|java:util:concurrent:atomic:AtomicMarkableReference$Pair.mark|]   @boolean;
#L1442b0.   if v4 == v1 then goto L1442c0;
#L1442b4.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference$Pair.of|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;.of:(Ljava/lang/Object;Z)Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference$Pair|] @type static;
#L1442ba.   v1:= temp  @type object;
#L1442bc.   v2.[|java:util:concurrent:atomic:AtomicMarkableReference.pair|]  := v1 @type object;
#L1442c0.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicMarkableReference.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicMarkableReference|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|boolean|] v4, [|boolean|] v5) @owner [|java:util:concurrent:atomic:AtomicMarkableReference|] @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1442d4.   call temp:=  [|java:util:concurrent:atomic:AtomicMarkableReference.compareAndSet|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicMarkableReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicMarkableReference|] @type virtual;
#L1442da.   v0:= temp;
#L1442dc.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicReferenceArray|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:lang:Object|][] [|java:util:concurrent:atomic:AtomicReferenceArray.array|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:atomic:AtomicReferenceArray.arrayFieldOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:atomic:AtomicReferenceArray.base|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicReferenceArray.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:atomic:AtomicReferenceArray.shift|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1442f0.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1442f6.   v2:= temp  @type object;
#L1442f8.   @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|] := v2  @type object;
#L1442fc.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L144300.   v3:= new [|java:util:concurrent:atomic:AtomicReferenceArray|];
#L144304.   v4:= "array" @type (object, string);
#L144308.   call temp:=  [|java:lang:Class.getDeclaredField|](v3, v4) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14430e.   v3:= temp  @type object;
#L144310.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144316.   v2:= temp  @type wide;
#L144318.   @@[|java:util:concurrent:atomic:AtomicReferenceArray.arrayFieldOffset|] := v2  @wide;
#L14431c.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L144320.   v3:= new [|java:lang:Object|][];
#L144324.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14432a.   v2:= temp;
#L14432c.   @@[|java:util:concurrent:atomic:AtomicReferenceArray.base|] := v2;
#L144330.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L144334.   v3:= new [|java:lang:Object|][];
#L144338.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v2, v3) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14433e.   v1:= temp;
#L144340.   v2:= v1 + -1;
#L144344.   v2:= v2 ^& v1  @type int;
#L144346.   if v2 == 0 then goto L144368;
#L14434a.   v2:= new [|java:lang:Error|];
#L14434e.   v3:= "data type scale not a power of two" @type (object, string);
#L144352.   call temp:=  [|java:lang:Error.<init>|](v2, v3) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L144358.   throw v2;
#L14435a.   v0:= Exception  @type object;
#L14435c.   v2:= new [|java:lang:Error|];
#L144360.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L144366.   throw v2;
#L144368.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v1) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L14436e.   v2:= temp;
#L144370.   v2:= v2 - 31;
#L144374.   @@[|java:util:concurrent:atomic:AtomicReferenceArray.shift|] := v2;
#L144378.   return @void ;
  catch  [|java:lang:Exception|] @[L1442f0..L14433e] goto L14435a;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.<init>|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14439c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1443a2.   v0:= new [|java:lang:Object|][v2];
#L1443a6.   v1.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]  := v0 @type object;
#L1443aa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.<init>|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v2 @type (this), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:([Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1443bc.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1443c2.   v0:= v3.length;
#L1443c4.   v1:= new [|java:lang:Object|][];
#L1443c8.   call temp:=  [|java:util:Arrays.copyOf|](v3, v0, v1) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L1443ce.   v0:= temp  @type object;
#L1443d0.   v2.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]  := v0 @type object;
#L1443d4.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicReferenceArray.byteOffset|] ([|int|] v4) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.byteOffset:(I)J|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1443e8.   v0:= (long)v4  @type i2l;
#L1443ea.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.shift|] ;
#L1443ee.   v0:= v0 ^< v2  @type long;
#L1443f0.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.base|] ;
#L1443f4.   v2:= (long)v2  @type i2l;
#L1443f6.   v0:= v0 + v2  @type long;
#L1443f8.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14440c.   if v4 < 0 then goto L14441a;
#L144410.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L144414.   v0:= v0.length;
#L144416.   if v4 < v0 then goto L14444c;
#L14441a.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L14441e.   v1:= new [|java:lang:StringBuilder|];
#L144422.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L144428.   v2:= "index " @type (object, string);
#L14442c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144432.   v1:= temp  @type object;
#L144434.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14443a.   v1:= temp  @type object;
#L14443c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144442.   v1:= temp  @type object;
#L144444.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L14444a.   throw v0;
#L14444c.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.byteOffset|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type static;
#L144452.   v0:= temp  @type wide;
#L144454.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceArray.compareAndSetRaw|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v6 @type (this), [|long|] v7, [|java:lang:Object|] v9 @type (object), [|java:lang:Object|] v10 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSetRaw:(JLjava/lang/Object;Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L144468.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L14446c.   v1:= v6.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L144470.   v2:= v7  @type wide;
#L144472.   v4:= v9  @type object;
#L144474.   v5:= v10  @type object;
#L144476.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14447c.   v0:= temp;
#L14447e.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceArray.getRaw|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.getRaw:(J)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L144490.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L144494.   v1:= v2.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L144498.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v0, v1, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14449e.   v0:= temp  @type object;
#L1444a0.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.readObject|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v4 @type (this), [|java:io:ObjectInputStream|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1444b4.   call temp:=  [|java:io:ObjectInputStream.readFields|](v5) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1444ba.   v1:= temp  @type object;
#L1444bc.   v2:= "array" @type (object, string);
#L1444c0.   v3:= 0  @length 4;
#L1444c2.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v2, v3) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L1444c8.   v0:= temp  @type object;
#L1444ca.   if v0 == 0 then goto L1444e2;
#L1444ce.   call temp:=  [|java:lang:Object.getClass|](v0) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1444d4.   v1:= temp  @type object;
#L1444d6.   call temp:=  [|java:lang:Class.isArray|](v1) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1444dc.   v1:= temp;
#L1444de.   if v1 != 0 then goto L1444f2;
#L1444e2.   v1:= new [|java:io:InvalidObjectException|];
#L1444e6.   v2:= "Not array type" @type (object, string);
#L1444ea.   call temp:=  [|java:io:InvalidObjectException.<init>|](v1, v2) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L1444f0.   throw v1;
#L1444f2.   call temp:=  [|java:lang:Object.getClass|](v0) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1444f8.   v1:= temp  @type object;
#L1444fa.   v2:= new [|java:lang:Object|][];
#L1444fe.   if v1 == v2 then goto L144520;
#L144502.   v1:= v0  @type object;
#L144504.   v1:= ([|java:lang:Object|][])v1;
#L144508.   v1:= ([|java:lang:Object|][])v1;
#L14450c.   call temp:=  [|java:lang:reflect:Array.getLength|](v0) @signature [|Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L144512.   v2:= temp;
#L144514.   v3:= new [|java:lang:Object|][];
#L144518.   call temp:=  [|java:util:Arrays.copyOf|](v1, v2, v3) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L14451e.   v0:= temp  @type object;
#L144520.   v1:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L144524.   v2:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.arrayFieldOffset|]   @wide;
#L144528.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v1, v4, v2, v3, v0) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14452e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceArray.compareAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v2 @type (this), [|int|] v3, [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L144540.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L144546.   v0:= temp  @type wide;
#L144548.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.compareAndSetRaw|](v2, v0, v1, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSetRaw:(JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L14454e.   v0:= temp;
#L144550.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceArray.get|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L144564.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L14456a.   v0:= temp  @type wide;
#L14456c.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.getRaw|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.getRaw:(J)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L144572.   v0:= temp  @type object;
#L144574.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceArray.getAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v4 @type (this), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L144588.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L14458e.   v1:= temp  @type wide;
#L144590.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.getRaw|](v4, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.getRaw:(J)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L144596.   v0:= temp  @type object;
#L144598.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.compareAndSetRaw|](v4, v1, v2, v0, v6) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSetRaw:(JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L14459e.   v3:= temp;
#L1445a0.   if v3 == 0 then goto L144590;
#L1445a4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.lazySet|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v4 @type (this), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1445b8.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L1445bc.   v1:= v4.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L1445c0.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L1445c6.   v2:= temp  @type wide;
#L1445c8.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v1, v2, v3, v6) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1445ce.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicReferenceArray.length|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1445e0.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L1445e4.   v0:= v0.length;
#L1445e6.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceArray.set|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v4 @type (this), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1445f8.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceArray.unsafe|]   @type object;
#L1445fc.   v1:= v4.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L144600.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.checkedByteOffset|](v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.checkedByteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L144606.   v2:= temp  @type wide;
#L144608.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v0, v1, v2, v3, v6) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14460e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicReferenceArray.toString|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v5 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L144620.   v3:= v5.[|java:util:concurrent:atomic:AtomicReferenceArray.array|]   @type object;
#L144624.   v3:= v3.length;
#L144626.   v2:= v3 + -1;
#L14462a.   v3:= -1  @length 4;
#L14462c.   if v2 != v3 then goto L144636;
#L144630.   v3:= "[]" @type (object, string);
#L144634.   return v3  @type object;
#L144636.   v0:= new [|java:lang:StringBuilder|];
#L14463a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L144640.   v3:= 91  @length 16;
#L144644.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14464a.   v1:= 0  @length 4;
#L14464c.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.byteOffset|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.byteOffset:(I)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type static;
#L144652.   v3:= temp  @type wide;
#L144654.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.getRaw|](v5, v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.getRaw:(J)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type direct;
#L14465a.   v3:= temp  @type object;
#L14465c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144662.   if v1 != v2 then goto L14467c;
#L144666.   v3:= 93  @length 16;
#L14466a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144670.   v3:= temp  @type object;
#L144672.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144678.   v3:= temp  @type object;
#L14467a.   goto L144634;
#L14467c.   v3:= 44  @length 16;
#L144680.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144686.   v3:= temp  @type object;
#L144688.   v4:= 32  @length 16;
#L14468c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144692.   v1:= v1 + 1;
#L144696.   goto L14464c;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceArray.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceArray|] v1 @type (this), [|int|] v2, [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceArray|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.weakCompareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1446a8.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceArray.compareAndSet|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceArray|] @type virtual;
#L1446ae.   v0:= temp;
#L1446b0.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.<init>|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1446c4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1446ca.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.newUpdater|] ([|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1446dc.   v0:= new [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|];
#L1446e0.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type direct;
#L1446e6.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.compareAndSet|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.get|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.getAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1446f8.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.get|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @type virtual;
#L1446fe.   v0:= temp  @type object;
#L144700.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.compareAndSet|](v2, v3, v0, v4) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @type virtual;
#L144706.   v1:= temp;
#L144708.   if v1 == 0 then goto L1446f8;
#L14470c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.lazySet|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.set|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.set:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.weakCompareAndSet|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] {
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Class|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L144720.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L144726.   v0:= temp  @type object;
#L144728.   @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|] := v0  @type object;
#L14472c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.<init>|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v7 @type (this), [|java:lang:Class|] v8 @type (object), [|java:lang:Class|] v9 @type (object), [|java:lang:String|] v10 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L144740.   v5:= 0  @length 4;
#L144742.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater.<init>|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater|] @type direct;
#L144748.   v2:= 0  @length 4;
#L14474a.   v3:= 0  @length 4;
#L14474c.   v0:= 0  @length 4;
#L14474e.   v4:= 0  @length 4;
#L144750.   call temp:=  [|java:lang:Class.getDeclaredField|](v8, v10) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144756.   v2:= temp  @type object;
#L144758.   call temp:=  [|dalvik:system:VMStack.getStackClass2|]() @signature [|Ldalvik/system/VMStack;.getStackClass2:()Ljava/lang/Class;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L14475e.   v0:= temp  @type object;
#L144760.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v2) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L144766.   v4:= temp;
#L144768.   call temp:=  [|java:lang:reflect:Field.getType|](v2) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L14476e.   v3:= temp  @type object;
#L144770.   if v9 == v3 then goto L14478e;
#L144774.   v5:= new [|java:lang:ClassCastException|];
#L144778.   call temp:=  [|java:lang:ClassCastException.<init>|](v5) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L14477e.   throw v5;
#L144780.   v1:= Exception  @type object;
#L144782.   v5:= new [|java:lang:RuntimeException|];
#L144786.   call temp:=  [|java:lang:RuntimeException.<init>|](v5, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L14478c.   throw v5;
#L14478e.   call temp:=  [|java:lang:reflect:Modifier.isVolatile|](v4) @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L144794.   v6:= temp;
#L144796.   if v6 != 0 then goto L1447aa;
#L14479a.   v5:= new [|java:lang:IllegalArgumentException|];
#L14479e.   v6:= "Must be volatile type" @type (object, string);
#L1447a2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1447a8.   throw v5;
#L1447aa.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v4) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L1447b0.   v6:= temp;
#L1447b2.   if v6 == 0 then goto L1447e0;
#L1447b6.   if v0 == v8 then goto L1447e0;
#L1447ba.   v7.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]  := v0 @type object;
#L1447be.   v7.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]  := v8 @type object;
#L1447c2.   v6:= new [|java:lang:Object|];
#L1447c6.   if v9 != v6 then goto L1447e4;
#L1447ca.   v7.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]  := v5 @type object;
#L1447ce.   v5:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L1447d2.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v5, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1447d8.   v5:= temp  @type wide;
#L1447da.   v7.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]  := v5 @wide;
#L1447de.   return @void ;
#L1447e0.   v0:= v5  @type object;
#L1447e2.   goto L1447ba;
#L1447e4.   v7.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]  := v9 @type object;
#L1447e8.   goto L1447ce;
  catch  [|java:lang:Exception|] @[L144750..L14476e] goto L144780;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.ensureProtectedAccess|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14480c.   v0:= v4.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144810.   call temp:=  [|java:lang:Class.isInstance|](v0, v5) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144816.   v0:= temp;
#L144818.   if v0 == 0 then goto L14481e;
#L14481c.   return @void ;
#L14481e.   v0:= new [|java:lang:RuntimeException|];
#L144822.   v1:= new [|java:lang:IllegalAccessException|];
#L144826.   v2:= new [|java:lang:StringBuilder|];
#L14482a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L144830.   v3:= "Class " @type (object, string);
#L144834.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14483a.   v2:= temp  @type object;
#L14483c.   v3:= v4.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144840.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144846.   v3:= temp  @type object;
#L144848.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14484e.   v2:= temp  @type object;
#L144850.   v3:= " can not access a protected member of class " @type (object, string);
#L144854.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14485a.   v2:= temp  @type object;
#L14485c.   v3:= v4.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144860.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144866.   v3:= temp  @type object;
#L144868.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14486e.   v2:= temp  @type object;
#L144870.   v3:= " using an instance of " @type (object, string);
#L144874.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14487a.   v2:= temp  @type object;
#L14487c.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L144882.   v3:= temp  @type object;
#L144884.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14488a.   v3:= temp  @type object;
#L14488c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L144892.   v2:= temp  @type object;
#L144894.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14489a.   v2:= temp  @type object;
#L14489c.   call temp:=  [|java:lang:IllegalAccessException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalAccessException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessException|] @type direct;
#L1448a2.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1448a8.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1448bc.   if v7 == 0 then goto L1448f4;
#L1448c0.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1448c6.   v0:= temp  @type object;
#L1448c8.   v1:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L1448cc.   if v0 != v1 then goto L1448f4;
#L1448d0.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L1448d4.   if v0 != 0 then goto L1448f4;
#L1448d8.   if v9 == 0 then goto L1448fa;
#L1448dc.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L1448e0.   if v0 == 0 then goto L1448fa;
#L1448e4.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L1448e8.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1448ee.   v1:= temp  @type object;
#L1448f0.   if v0 == v1 then goto L1448fa;
#L1448f4.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.updateCheck|](v6, v7, v9) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type virtual;
#L1448fa.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L1448fe.   v2:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]   @wide;
#L144902.   v1:= v7  @type object;
#L144904.   v4:= v8  @type object;
#L144906.   v5:= v9  @type object;
#L144908.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14490e.   v0:= temp;
#L144910.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.get|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L144924.   if v4 == 0 then goto L144940;
#L144928.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14492e.   v0:= temp  @type object;
#L144930.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144934.   if v0 != v1 then goto L144940;
#L144938.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L14493c.   if v0 == 0 then goto L144946;
#L144940.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.targetCheck|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.targetCheck:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type virtual;
#L144946.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L14494a.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]   @wide;
#L14494e.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v0, v4, v1, v2) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144954.   v0:= temp  @type object;
#L144956.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.lazySet|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L144968.   if v4 == 0 then goto L1449a0;
#L14496c.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L144972.   v0:= temp  @type object;
#L144974.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144978.   if v0 != v1 then goto L1449a0;
#L14497c.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144980.   if v0 != 0 then goto L1449a0;
#L144984.   if v5 == 0 then goto L1449a6;
#L144988.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L14498c.   if v0 == 0 then goto L1449a6;
#L144990.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L144994.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14499a.   v1:= temp  @type object;
#L14499c.   if v0 == v1 then goto L1449a6;
#L1449a0.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.updateCheck|](v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type virtual;
#L1449a6.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L1449aa.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]   @wide;
#L1449ae.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v4, v1, v2, v5) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1449b4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.set|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.set:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1449c8.   if v4 == 0 then goto L144a00;
#L1449cc.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1449d2.   v0:= temp  @type object;
#L1449d4.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L1449d8.   if v0 != v1 then goto L144a00;
#L1449dc.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L1449e0.   if v0 != 0 then goto L144a00;
#L1449e4.   if v5 == 0 then goto L144a06;
#L1449e8.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L1449ec.   if v0 == 0 then goto L144a06;
#L1449f0.   v0:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L1449f4.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1449fa.   v1:= temp  @type object;
#L1449fc.   if v0 == v1 then goto L144a06;
#L144a00.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.updateCheck|](v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type virtual;
#L144a06.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L144a0a.   v1:= v3.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]   @wide;
#L144a0e.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v0, v4, v1, v2, v5) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144a14.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.targetCheck|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.targetCheck:(Ljava/lang/Object;)V|] @Access  {
      local temp ;
        v0;
      
#L144a28.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144a2c.   call temp:=  [|java:lang:Class.isInstance|](v0, v2) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144a32.   v0:= temp;
#L144a34.   if v0 != 0 then goto L144a44;
#L144a38.   v0:= new [|java:lang:ClassCastException|];
#L144a3c.   call temp:=  [|java:lang:ClassCastException.<init>|](v0) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L144a42.   throw v0;
#L144a44.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144a48.   if v0 == 0 then goto L144a52;
#L144a4c.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.ensureProtectedAccess|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type direct;
#L144a52.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.updateCheck|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access  {
      local temp ;
        v0;
      
#L144a64.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144a68.   call temp:=  [|java:lang:Class.isInstance|](v0, v2) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144a6e.   v0:= temp;
#L144a70.   if v0 == 0 then goto L144a90;
#L144a74.   if v3 == 0 then goto L144a9c;
#L144a78.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L144a7c.   if v0 == 0 then goto L144a9c;
#L144a80.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L144a84.   call temp:=  [|java:lang:Class.isInstance|](v0, v3) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144a8a.   v0:= temp;
#L144a8c.   if v0 != 0 then goto L144a9c;
#L144a90.   v0:= new [|java:lang:ClassCastException|];
#L144a94.   call temp:=  [|java:lang:ClassCastException.<init>|](v0) @signature [|Ljava/lang/ClassCastException;.<init>:()V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L144a9a.   throw v0;
#L144a9c.   v0:= v1.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144aa0.   if v0 == 0 then goto L144aaa;
#L144aa4.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.ensureProtectedAccess|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.ensureProtectedAccess:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type direct;
#L144aaa.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L144abc.   if v7 == 0 then goto L144af4;
#L144ac0.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L144ac6.   v0:= temp  @type object;
#L144ac8.   v1:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.tclass|]   @type object;
#L144acc.   if v0 != v1 then goto L144af4;
#L144ad0.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.cclass|]   @type object;
#L144ad4.   if v0 != 0 then goto L144af4;
#L144ad8.   if v9 == 0 then goto L144afa;
#L144adc.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L144ae0.   if v0 == 0 then goto L144afa;
#L144ae4.   v0:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.vclass|]   @type object;
#L144ae8.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L144aee.   v1:= temp  @type object;
#L144af0.   if v0 == v1 then goto L144afa;
#L144af4.   call temp:=  [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.updateCheck|](v6, v7, v9) @signature [|Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl|] @type virtual;
#L144afa.   v0:= @@[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.unsafe|]   @type object;
#L144afe.   v2:= v6.[|java:util:concurrent:atomic:AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.offset|]   @wide;
#L144b02.   v1:= v7  @type object;
#L144b04.   v4:= v8  @type object;
#L144b06.   v5:= v9  @type object;
#L144b08.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144b0e.   v0:= temp;
#L144b10.   return v0;

   }
record [|java:util:concurrent:atomic:AtomicStampedReference$Pair|]  @type class @AccessFlag   {
      [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicStampedReference$Pair.<init>|] ([|java:util:concurrent:atomic:AtomicStampedReference$Pair|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.<init>:(Ljava/lang/Object;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L144b24.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L144b2a.   v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]  := v1 @type object;
#L144b2e.   v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|]  := v2;
#L144b32.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] [|java:util:concurrent:atomic:AtomicStampedReference$Pair.of|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.of:(Ljava/lang/Object;I)Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;|] @Access STATIC {
      local temp ;
        v0;
      
#L144b44.   v0:= new [|java:util:concurrent:atomic:AtomicStampedReference$Pair|];
#L144b48.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference$Pair.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.<init>:(Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @type direct;
#L144b4e.   return v0  @type object;

   }
record [|java:util:concurrent:atomic:AtomicStampedReference|]  @type class @AccessFlag PUBLIC  {
      [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] [|java:util:concurrent:atomic:AtomicStampedReference.pair|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicStampedReference.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicStampedReference.pairOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicStampedReference.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L144b60.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L144b66.   v0:= temp  @type object;
#L144b68.   @@[|java:util:concurrent:atomic:AtomicStampedReference.UNSAFE|] := v0  @type object;
#L144b6c.   v0:= @@[|java:util:concurrent:atomic:AtomicStampedReference.UNSAFE|]   @type object;
#L144b70.   v1:= "pair" @type (object, string);
#L144b74.   v2:= new [|java:util:concurrent:atomic:AtomicStampedReference|];
#L144b78.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference.objectFieldOffset|](v0, v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.objectFieldOffset:(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference|] @type static;
#L144b7e.   v0:= temp  @type wide;
#L144b80.   @@[|java:util:concurrent:atomic:AtomicStampedReference.pairOffset|] := v0  @wide;
#L144b84.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicStampedReference.<init>|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.<init>:(Ljava/lang/Object;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L144b98.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L144b9e.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference$Pair.of|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.of:(Ljava/lang/Object;I)Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @type static;
#L144ba4.   v0:= temp  @type object;
#L144ba6.   v1.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]  := v0 @type object;
#L144baa.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicStampedReference.casPair|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v6 @type (this), [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] v7 @type (object), [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] v8 @type (object)) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.casPair:(Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L144bbc.   v0:= @@[|java:util:concurrent:atomic:AtomicStampedReference.UNSAFE|]   @type object;
#L144bc0.   v2:= @@[|java:util:concurrent:atomic:AtomicStampedReference.pairOffset|]   @wide;
#L144bc4.   v1:= v6  @type object;
#L144bc6.   v4:= v7  @type object;
#L144bc8.   v5:= v8  @type object;
#L144bca.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144bd0.   v0:= temp;
#L144bd2.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:atomic:AtomicStampedReference.objectFieldOffset|] ([|sun:misc:Unsafe|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Class|] v6 @type (object)) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.objectFieldOffset:(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L144be4.   call temp:=  [|java:lang:Class.getDeclaredField|](v6, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L144bea.   v2:= temp  @type object;
#L144bec.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L144bf2.   v2:= temp  @type wide;
#L144bf4.   return v2  @type wide;
#L144bf6.   v0:= Exception  @type object;
#L144bf8.   v1:= new [|java:lang:NoSuchFieldError|];
#L144bfc.   call temp:=  [|java:lang:NoSuchFieldError.<init>|](v1, v5) @signature [|Ljava/lang/NoSuchFieldError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NoSuchFieldError|] @type direct;
#L144c02.   call temp:=  [|java:lang:NoSuchFieldError.initCause|](v1, v0) @signature [|Ljava/lang/NoSuchFieldError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:NoSuchFieldError|] @type virtual;
#L144c08.   throw v1;
  catch  [|java:lang:NoSuchFieldException|] @[L144be4..L144bf2] goto L144bf6;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicStampedReference.attemptStamp|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.attemptStamp:(Ljava/lang/Object;I)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L144c2c.   v0:= v2.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144c30.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144c34.   if v3 != v1 then goto L144c58;
#L144c38.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144c3c.   if v4 == v1 then goto L144c54;
#L144c40.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference$Pair.of|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.of:(Ljava/lang/Object;I)Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @type static;
#L144c46.   v1:= temp  @type object;
#L144c48.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference.casPair|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.casPair:(Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference|] @type direct;
#L144c4e.   v1:= temp;
#L144c50.   if v1 == 0 then goto L144c58;
#L144c54.   v1:= 1  @length 4;
#L144c56.   return v1;
#L144c58.   v1:= 0  @length 4;
#L144c5a.   goto L144c56;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicStampedReference.compareAndSet|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;II)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L144c6c.   v0:= v2.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144c70.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144c74.   if v3 != v1 then goto L144ca8;
#L144c78.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144c7c.   if v5 != v1 then goto L144ca8;
#L144c80.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144c84.   if v4 != v1 then goto L144c90;
#L144c88.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144c8c.   if v6 == v1 then goto L144ca4;
#L144c90.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference$Pair.of|](v4, v6) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.of:(Ljava/lang/Object;I)Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @type static;
#L144c96.   v1:= temp  @type object;
#L144c98.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference.casPair|](v2, v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.casPair:(Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference|] @type direct;
#L144c9e.   v1:= temp;
#L144ca0.   if v1 == 0 then goto L144ca8;
#L144ca4.   v1:= 1  @length 4;
#L144ca6.   return v1;
#L144ca8.   v1:= 0  @length 4;
#L144caa.   goto L144ca6;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicStampedReference.get|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v3 @type (this), [|int|][] v4) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.get:([I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L144cbc.   v0:= v3.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144cc0.   v1:= 0  @length 4;
#L144cc2.   v2:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144cc6.   v4[v1]:= v2;
#L144cca.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144cce.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicStampedReference.getReference|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.getReference:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144ce0.   v0:= v1.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144ce4.   v0:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144ce8.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:atomic:AtomicStampedReference.getStamp|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.getStamp:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144cfc.   v0:= v1.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144d00.   v0:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144d04.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicStampedReference.set|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.set:(Ljava/lang/Object;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L144d18.   v0:= v2.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]   @type object;
#L144d1c.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.reference|]   @type object;
#L144d20.   if v3 != v1 then goto L144d2c;
#L144d24.   v1:= v0.[|java:util:concurrent:atomic:AtomicStampedReference$Pair.stamp|] ;
#L144d28.   if v4 == v1 then goto L144d38;
#L144d2c.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference$Pair.of|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;.of:(Ljava/lang/Object;I)Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference$Pair|] @type static;
#L144d32.   v1:= temp  @type object;
#L144d34.   v2.[|java:util:concurrent:atomic:AtomicStampedReference.pair|]  := v1 @type object;
#L144d38.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicStampedReference.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicStampedReference|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:atomic:AtomicStampedReference|] @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;II)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L144d4c.   call temp:=  [|java:util:concurrent:atomic:AtomicStampedReference.compareAndSet|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/atomic/AtomicStampedReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicStampedReference|] @type virtual;
#L144d52.   v0:= temp;
#L144d54.   return v0;

   }
record [|java:util:concurrent:atomic:Fences|]  @type class @AccessFlag PUBLIC  {
   }
      global [|int|] @@[|java:util:concurrent:atomic:Fences.theVolatile|]    @AccessFlag PRIVATE_STATIC_VOLATILE;
    procedure [|void|] [|java:util:concurrent:atomic:Fences.<init>|] ([|java:util:concurrent:atomic:Fences|] v0 @type (this)) @owner [|java:util:concurrent:atomic:Fences|] @signature [|Ljava/util/concurrent/atomic/Fences;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L144d68.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L144d6e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:Fences.orderAccesses|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:Fences|] @signature [|Ljava/util/concurrent/atomic/Fences;.orderAccesses:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L144d80.   v0:= 0  @length 4;
#L144d82.   @@[|java:util:concurrent:atomic:Fences.theVolatile|] := v0;
#L144d86.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:Fences.orderReads|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:Fences|] @signature [|Ljava/util/concurrent/atomic/Fences;.orderReads:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L144d98.   v0:= @@[|java:util:concurrent:atomic:Fences.theVolatile|] ;
#L144d9c.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:Fences.orderWrites|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:Fences|] @signature [|Ljava/util/concurrent/atomic/Fences;.orderWrites:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L144db0.   v0:= 0  @length 4;
#L144db2.   @@[|java:util:concurrent:atomic:Fences.theVolatile|] := v0;
#L144db6.   return v1  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:Fences.reachabilityFence|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:Fences|] @signature [|Ljava/util/concurrent/atomic/Fences;.reachabilityFence:(Ljava/lang/Object;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L144dc8.   if v1 == 0 then goto L144dd0;
#L144dcc.   (@monitorenter v1)
#L144dce.   (@monitorexit v1)
#L144dd0.   return @void ;
#L144dd2.   v0:= Exception  @type object;
#L144dd4.   (@monitorexit v1)
#L144dd6.   throw v0;
  catch  [|any|] @[L144dce..L144dd6] goto L144dd2;

   }
record [|java:util:concurrent:locks:Condition|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:locks:Condition.await|] () @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:locks:Condition.await|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.await:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:util:concurrent:locks:Condition.awaitNanos|] ([|long|] v0) @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:locks:Condition.awaitUninterruptibly|] () @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.awaitUninterruptibly:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:locks:Condition.awaitUntil|] ([|java:util:Date|] v0 @type (object)) @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.awaitUntil:(Ljava/util/Date;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:locks:Condition.signal|] () @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:locks:Condition.signalAll|] () @owner [|java:util:concurrent:locks:Condition|] @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:Condition|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.REINTERRUPT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.THROW_IE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.<init>|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v0 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.<init>:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L144df4.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]  := v1 @type object;
#L144df8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L144dfe.   return @void ;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L144e10.   v3:= -2  @length 4;
#L144e12.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]   @type object;
#L144e16.   if v1 == 0 then goto L144e2c;
#L144e1a.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L144e1e.   if v2 == v3 then goto L144e2c;
#L144e22.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L144e28.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]   @type object;
#L144e2c.   v0:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L144e30.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L144e36.   v2:= temp  @type object;
#L144e38.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|](v0, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:(Ljava/lang/Thread;I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type direct;
#L144e3e.   if v1 != 0 then goto L144e4c;
#L144e42.   v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L144e46.   v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]  := v0 @type object;
#L144e4a.   return v0  @type object;
#L144e4c.   v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v0 @type object;
#L144e50.   goto L144e46;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.checkInterruptWhileWaiting|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L144e64.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L144e6a.   v0:= temp;
#L144e6c.   if v0 == 0 then goto L144e88;
#L144e70.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144e74.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferAfterCancelledWait|](v0, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144e7a.   v0:= temp;
#L144e7c.   if v0 == 0 then goto L144e84;
#L144e80.   v0:= -1  @length 4;
#L144e82.   return v0;
#L144e84.   v0:= 1  @length 4;
#L144e86.   goto L144e82;
#L144e88.   v0:= 0  @length 4;
#L144e8a.   goto L144e82;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.doSignal|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.doSignal:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L144e9c.   v1:= 0  @length 4;
#L144e9e.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L144ea2.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L144ea6.   if v0 != 0 then goto L144eae;
#L144eaa.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]  := v1 @type object;
#L144eae.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v1 @type object;
#L144eb2.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144eb6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferForSignal|](v0, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144ebc.   v0:= temp;
#L144ebe.   if v0 != 0 then goto L144eca;
#L144ec2.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L144ec6.   if v3 != 0 then goto L144e9e;
#L144eca.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.doSignalAll|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v3 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v4 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.doSignalAll:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L144edc.   v2:= 0  @length 4;
#L144ede.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]  := v2 @type object;
#L144ee2.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]  := v2 @type object;
#L144ee6.   v0:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L144eea.   v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v2 @type object;
#L144eee.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144ef2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferForSignal|](v1, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144ef8.   v4:= v0  @type object;
#L144efa.   if v4 != 0 then goto L144ee6;
#L144efe.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.reportInterruptAfterWait|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L144f10.   v0:= -1  @length 4;
#L144f12.   if v2 != v0 then goto L144f22;
#L144f16.   v0:= new [|java:lang:InterruptedException|];
#L144f1a.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L144f20.   throw v0;
#L144f22.   v0:= 1  @length 4;
#L144f24.   if v2 != v0 then goto L144f2e;
#L144f28.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L144f2e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L144f40.   v1:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L144f44.   v2:= 0  @length 4;
#L144f46.   if v1 == 0 then goto L144f7c;
#L144f4a.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L144f4e.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L144f52.   v4:= -2  @length 4;
#L144f54.   if v3 == v4 then goto L144f78;
#L144f58.   v3:= 0  @length 4;
#L144f5a.   v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v3 @type object;
#L144f5e.   if v2 != 0 then goto L144f72;
#L144f62.   v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L144f66.   if v0 != 0 then goto L144f6e;
#L144f6a.   v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.lastWaiter|]  := v2 @type object;
#L144f6e.   v1:= v0  @type object;
#L144f70.   goto L144f46;
#L144f72.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v0 @type object;
#L144f76.   goto L144f66;
#L144f78.   v2:= v1  @type object;
#L144f7a.   goto L144f6e;
#L144f7c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.await|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.await:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L144f90.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L144f96.   v4:= temp;
#L144f98.   if v4 == 0 then goto L144fa8;
#L144f9c.   v4:= new [|java:lang:InterruptedException|];
#L144fa0.   call temp:=  [|java:lang:InterruptedException.<init>|](v4) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L144fa6.   throw v4;
#L144fa8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L144fae.   v1:= temp  @type object;
#L144fb0.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144fb4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144fba.   v2:= temp  @type wide;
#L144fbc.   v0:= 0  @length 4;
#L144fbe.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144fc2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144fc8.   v4:= temp;
#L144fca.   if v4 != 0 then goto L144fe0;
#L144fce.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v5) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L144fd4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v5, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L144fda.   v0:= temp;
#L144fdc.   if v0 == 0 then goto L144fbe;
#L144fe0.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L144fe4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v4, v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L144fea.   v4:= temp;
#L144fec.   if v4 == 0 then goto L144ff8;
#L144ff0.   v4:= -1  @length 4;
#L144ff2.   if v0 == v4 then goto L144ff8;
#L144ff6.   v0:= 1  @length 4;
#L144ff8.   v4:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L144ffc.   if v4 == 0 then goto L145006;
#L145000.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145006.   if v0 == 0 then goto L145010;
#L14500a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.reportInterruptAfterWait|](v5, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145010.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.await|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v16 @type (this), [|long|] v17, [|java:util:concurrent:TimeUnit|] v19 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.await:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L145024.   if v19 != 0 then goto L145034;
#L145028.   v14:= new [|java:lang:NullPointerException|];
#L14502c.   call temp:=  [|java:lang:NullPointerException.<init>|](v14) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L145032.   throw v14;
#L145034.   v0:= v19  @type object;
#L145038.   v1:= v17  @type wide;
#L14503c.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L145042.   v6:= temp  @type wide;
#L145044.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14504a.   v14:= temp;
#L14504c.   if v14 == 0 then goto L14505c;
#L145050.   v14:= new [|java:lang:InterruptedException|];
#L145054.   call temp:=  [|java:lang:InterruptedException.<init>|](v14) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14505a.   throw v14;
#L14505c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|](v16) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145062.   v8:= temp  @type object;
#L145064.   v0:= v16  @type object;
#L145068.   v14:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L14506c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|](v14, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145072.   v11:= temp  @type wide;
#L145074.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14507a.   v4:= temp  @type wide;
#L14507c.   v13:= 0  @length 4;
#L14507e.   v3:= 0  @length 4;
#L145080.   v0:= v16  @type object;
#L145084.   v14:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145088.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v14, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14508e.   v14:= temp;
#L145090.   if v14 != 0 then goto L1450b0;
#L145094.   v14:= 0  @length wide16;
#L145098.   v14:= cmp(v6,v14);
#L14509c.   if v14 > 0 then goto L1450f0;
#L1450a0.   v0:= v16  @type object;
#L1450a4.   v14:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1450a8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferAfterCancelledWait|](v14, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1450ae.   v13:= temp;
#L1450b0.   v0:= v16  @type object;
#L1450b4.   v14:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1450b8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v14, v8, v11, v12) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1450be.   v14:= temp;
#L1450c0.   if v14 == 0 then goto L1450cc;
#L1450c4.   v14:= -1  @length 4;
#L1450c6.   if v3 == v14 then goto L1450cc;
#L1450ca.   v3:= 1  @length 4;
#L1450cc.   v14:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L1450d0.   if v14 == 0 then goto L1450da;
#L1450d4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|](v16) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1450da.   if v3 == 0 then goto L1450e8;
#L1450de.   v0:= v16  @type object;
#L1450e2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.reportInterruptAfterWait|](v0, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1450e8.   if v13 != 0 then goto L145128;
#L1450ec.   v14:= 1  @length 4;
#L1450ee.   return v14;
#L1450f0.   v14:= 1000  @length wide16;
#L1450f4.   v14:= cmp(v6,v14);
#L1450f8.   if v14 < 0 then goto L145106;
#L1450fc.   v0:= v16  @type object;
#L145100.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v0, v6, v7) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145106.   v0:= v16  @type object;
#L14510a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v0, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145110.   v3:= temp;
#L145112.   if v3 != 0 then goto L1450b0;
#L145116.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14511c.   v9:= temp  @type wide;
#L14511e.   v14:= v9 - v4  @type long;
#L145122.   v6:= v6 - v14  @type long;
#L145124.   v4:= v9  @type wide;
#L145126.   goto L145080;
#L145128.   v14:= 0  @length 4;
#L14512a.   goto L1450ee;

   }
    procedure [|long|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.awaitNanos|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v10 @type (this), [|long|] v11) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.awaitNanos:(J)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14513c.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145142.   v8:= temp;
#L145144.   if v8 == 0 then goto L145154;
#L145148.   v8:= new [|java:lang:InterruptedException|];
#L14514c.   call temp:=  [|java:lang:InterruptedException.<init>|](v8) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L145152.   throw v8;
#L145154.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|](v10) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L14515a.   v3:= temp  @type object;
#L14515c.   v8:= v10.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145160.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|](v8, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145166.   v6:= temp  @type wide;
#L145168.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14516e.   v1:= temp  @type wide;
#L145170.   v0:= 0  @length 4;
#L145172.   v8:= v10.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145176.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v8, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14517c.   v8:= temp;
#L14517e.   if v8 != 0 then goto L145198;
#L145182.   v8:= 0  @length wide16;
#L145186.   v8:= cmp(v11,v8);
#L14518a.   if v8 > 0 then goto L1451d8;
#L14518e.   v8:= v10.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145192.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferAfterCancelledWait|](v8, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145198.   v8:= v10.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L14519c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v8, v3, v6, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1451a2.   v8:= temp;
#L1451a4.   if v8 == 0 then goto L1451b0;
#L1451a8.   v8:= -1  @length 4;
#L1451aa.   if v0 == v8 then goto L1451b0;
#L1451ae.   v0:= 1  @length 4;
#L1451b0.   v8:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L1451b4.   if v8 == 0 then goto L1451be;
#L1451b8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|](v10) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1451be.   if v0 == 0 then goto L1451c8;
#L1451c2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.reportInterruptAfterWait|](v10, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1451c8.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1451ce.   v8:= temp  @type wide;
#L1451d0.   v8:= v8 - v1  @type long;
#L1451d2.   v8:= v11 - v8  @type long;
#L1451d6.   return v8  @type wide;
#L1451d8.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v10, v11, v12) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1451de.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v10, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1451e4.   v0:= temp;
#L1451e6.   if v0 != 0 then goto L145198;
#L1451ea.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1451f0.   v4:= temp  @type wide;
#L1451f2.   v8:= v4 - v1  @type long;
#L1451f6.   v11:= v11 - v8  @type long;
#L1451f8.   v1:= v4  @type wide;
#L1451fa.   goto L145172;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.awaitUninterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.awaitUninterruptibly:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14520c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145212.   v1:= temp  @type object;
#L145214.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145218.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14521e.   v2:= temp  @type wide;
#L145220.   v0:= 0  @length 4;
#L145222.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145226.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14522c.   v4:= temp;
#L14522e.   if v4 != 0 then goto L145248;
#L145232.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v5) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145238.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14523e.   v4:= temp;
#L145240.   if v4 == 0 then goto L145222;
#L145244.   v0:= 1  @length 4;
#L145246.   goto L145222;
#L145248.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L14524c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v4, v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145252.   v4:= temp;
#L145254.   if v4 != 0 then goto L14525c;
#L145258.   if v0 == 0 then goto L145262;
#L14525c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145262.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.awaitUntil|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v9 @type (this), [|java:util:Date|] v10 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.awaitUntil:(Ljava/util/Date;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L145274.   if v10 != 0 then goto L145284;
#L145278.   v7:= new [|java:lang:NullPointerException|];
#L14527c.   call temp:=  [|java:lang:NullPointerException.<init>|](v7) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L145282.   throw v7;
#L145284.   call temp:=  [|java:util:Date.getTime|](v10) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L14528a.   v0:= temp  @type wide;
#L14528c.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145292.   v7:= temp;
#L145294.   if v7 == 0 then goto L1452a4;
#L145298.   v7:= new [|java:lang:InterruptedException|];
#L14529c.   call temp:=  [|java:lang:InterruptedException.<init>|](v7) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1452a2.   throw v7;
#L1452a4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.addConditionWaiter|](v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1452aa.   v3:= temp  @type object;
#L1452ac.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1452b0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1452b6.   v4:= temp  @type wide;
#L1452b8.   v6:= 0  @length 4;
#L1452ba.   v2:= 0  @length 4;
#L1452bc.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1452c0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1452c6.   v7:= temp;
#L1452c8.   if v7 != 0 then goto L1452e8;
#L1452cc.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1452d2.   v7:= temp  @type wide;
#L1452d4.   v7:= cmp(v7,v0);
#L1452d8.   if v7 <= 0 then goto L145320;
#L1452dc.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1452e0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferAfterCancelledWait|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1452e6.   v6:= temp;
#L1452e8.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1452ec.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v7, v3, v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1452f2.   v7:= temp;
#L1452f4.   if v7 == 0 then goto L145300;
#L1452f8.   v7:= -1  @length 4;
#L1452fa.   if v2 == v7 then goto L145300;
#L1452fe.   v2:= 1  @length 4;
#L145300.   v7:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L145304.   if v7 == 0 then goto L14530e;
#L145308.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.unlinkCancelledWaiters|](v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L14530e.   if v2 == 0 then goto L145318;
#L145312.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.reportInterruptAfterWait|](v9, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L145318.   if v6 != 0 then goto L145334;
#L14531c.   v7:= 1  @length 4;
#L14531e.   return v7;
#L145320.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkUntil|](v9, v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkUntil:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145326.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L14532c.   v2:= temp;
#L14532e.   if v2 == 0 then goto L1452bc;
#L145332.   goto L1452e8;
#L145334.   v7:= 0  @length 4;
#L145336.   goto L14531e;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.getWaitQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.getWaitQueueLength:()I|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145348.   v2:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L14534c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145352.   v2:= temp;
#L145354.   if v2 != 0 then goto L145364;
#L145358.   v2:= new [|java:lang:IllegalMonitorStateException|];
#L14535c.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v2) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L145362.   throw v2;
#L145364.   v0:= 0  @length 4;
#L145366.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L14536a.   if v1 == 0 then goto L145382;
#L14536e.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145372.   v3:= -2  @length 4;
#L145374.   if v2 != v3 then goto L14537c;
#L145378.   v0:= v0 + 1;
#L14537c.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L145380.   goto L14536a;
#L145382.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.getWaitingThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.getWaitingThreads:()Ljava/util/Collection;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L145394.   v3:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145398.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14539e.   v3:= temp;
#L1453a0.   if v3 != 0 then goto L1453b0;
#L1453a4.   v3:= new [|java:lang:IllegalMonitorStateException|];
#L1453a8.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v3) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L1453ae.   throw v3;
#L1453b0.   v0:= new [|java:util:ArrayList|];
#L1453b4.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1453ba.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L1453be.   if v2 == 0 then goto L1453e0;
#L1453c2.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L1453c6.   v4:= -2  @length 4;
#L1453c8.   if v3 != v4 then goto L1453da;
#L1453cc.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L1453d0.   if v1 == 0 then goto L1453da;
#L1453d4.   call temp:=  [|java:util:ArrayList.add|](v0, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1453da.   v2:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L1453de.   goto L1453be;
#L1453e0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.hasWaiters|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.hasWaiters:()Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1453f4.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1453f8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1453fe.   v1:= temp;
#L145400.   if v1 != 0 then goto L145410;
#L145404.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L145408.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L14540e.   throw v1;
#L145410.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L145414.   if v0 == 0 then goto L14542c;
#L145418.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L14541c.   v2:= -2  @length 4;
#L14541e.   if v1 != v2 then goto L145426;
#L145422.   v1:= 1  @length 4;
#L145424.   return v1;
#L145426.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L14542a.   goto L145414;
#L14542c.   v1:= 0  @length 4;
#L14542e.   goto L145424;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.isOwnedBy|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.isOwnedBy:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;)Z|] @Access FINAL {
      local temp ;
        v0;
      
#L145440.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145444.   if v2 != v0 then goto L14544c;
#L145448.   v0:= 1  @length 4;
#L14544a.   return v0;
#L14544c.   v0:= 0  @length 4;
#L14544e.   goto L14544a;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.signal|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.signal:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L145460.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L145464.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14546a.   v1:= temp;
#L14546c.   if v1 != 0 then goto L14547c;
#L145470.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L145474.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L14547a.   throw v1;
#L14547c.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L145480.   if v0 == 0 then goto L14548a;
#L145484.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.doSignal|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.doSignal:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L14548a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.signalAll|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.signalAll:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L14549c.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.this$0|]   @type object;
#L1454a0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1454a6.   v1:= temp;
#L1454a8.   if v1 != 0 then goto L1454b8;
#L1454ac.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L1454b0.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L1454b6.   throw v1;
#L1454b8.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L1454bc.   if v0 == 0 then goto L1454c6;
#L1454c0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.doSignalAll|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.doSignalAll:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type direct;
#L1454c6.   return @void ;

   }
record [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|]  @type class @AccessFlag FINAL  {
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]    @AccessFlag ;
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|]    @AccessFlag VOLATILE;
   }
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.CANCELLED|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.CONDITION|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.EXCLUSIVE|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.PROPAGATE|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SIGNAL|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<clinit>|] () @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1454d8.   v0:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L1454dc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type direct;
#L1454e2.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|] := v0  @type object;
#L1454e6.   v0:= 0  @length 4;
#L1454e8.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.EXCLUSIVE|] := v0  @type object;
#L1454ec.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v0 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L145500.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L145506.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v0 @type (this), [|java:lang:Thread|] v1 @type (object), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:(Ljava/lang/Thread;I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L145518.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14551e.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|]  := v2;
#L145522.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]  := v1 @type object;
#L145526.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v0 @type (this), [|java:lang:Thread|] v1 @type (object), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:(Ljava/lang/Thread;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L145538.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14553e.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]  := v2 @type object;
#L145542.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]  := v1 @type object;
#L145546.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.isShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.isShared:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L145558.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.nextWaiter|]   @type object;
#L14555c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|]   @type object;
#L145560.   if v0 != v1 then goto L145568;
#L145564.   v0:= 1  @length 4;
#L145566.   return v0;
#L145568.   v0:= 0  @length 4;
#L14556a.   goto L145566;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L14557c.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145580.   if v0 != 0 then goto L145590;
#L145584.   v1:= new [|java:lang:NullPointerException|];
#L145588.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14558e.   throw v1;
#L145590.   return v0  @type object;

   }
record [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:concurrent:locks:AbstractOwnableSynchronizer|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|long|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.state|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.spinForTimeoutThreshold|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.stateOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.waitStatusOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.<clinit>|] () @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1455a4.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1455aa.   v1:= temp  @type object;
#L1455ac.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|] := v1  @type object;
#L1455b0.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L1455b4.   v2:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|];
#L1455b8.   v3:= "state" @type (object, string);
#L1455bc.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1455c2.   v2:= temp  @type object;
#L1455c4.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1455ca.   v1:= temp  @type wide;
#L1455cc.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.stateOffset|] := v1  @wide;
#L1455d0.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L1455d4.   v2:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|];
#L1455d8.   v3:= "head" @type (object, string);
#L1455dc.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1455e2.   v2:= temp  @type object;
#L1455e4.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1455ea.   v1:= temp  @type wide;
#L1455ec.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.headOffset|] := v1  @wide;
#L1455f0.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L1455f4.   v2:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|];
#L1455f8.   v3:= "tail" @type (object, string);
#L1455fc.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L145602.   v2:= temp  @type object;
#L145604.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14560a.   v1:= temp  @type wide;
#L14560c.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tailOffset|] := v1  @wide;
#L145610.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L145614.   v2:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L145618.   v3:= "waitStatus" @type (object, string);
#L14561c.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L145622.   v2:= temp  @type object;
#L145624.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14562a.   v1:= temp  @type wide;
#L14562c.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.waitStatusOffset|] := v1  @wide;
#L145630.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L145634.   v2:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L145638.   v3:= "next" @type (object, string);
#L14563c.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L145642.   v2:= temp  @type object;
#L145644.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14564a.   v1:= temp  @type wide;
#L14564c.   @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.nextOffset|] := v1  @wide;
#L145650.   return @void ;
#L145652.   v0:= Exception  @type object;
#L145654.   v1:= new [|java:lang:Error|];
#L145658.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14565e.   throw v1;
  catch  [|java:lang:Exception|] @[L1455b0..L145650] goto L145652;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.<init>|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v0 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L145680.   call temp:=  [|java:util:concurrent:locks:AbstractOwnableSynchronizer.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractOwnableSynchronizer|] @type direct;
#L145686.   return @void ;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v3 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v4 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L145698.   v0:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L14569c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1456a2.   v2:= temp  @type object;
#L1456a4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|](v0, v2, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:(Ljava/lang/Thread;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type direct;
#L1456aa.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L1456ae.   if v1 == 0 then goto L1456c8;
#L1456b2.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]  := v1 @type object;
#L1456b6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetTail|](v3, v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1456bc.   v2:= temp;
#L1456be.   if v2 == 0 then goto L1456c8;
#L1456c2.   v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v0 @type object;
#L1456c6.   return v0  @type object;
#L1456c8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.enq|](v3, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1456ce.   goto L1456c6;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v7 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1456e0.   v6:= 0  @length 4;
#L1456e2.   v5:= -1  @length 4;
#L1456e4.   if v8 != 0 then goto L1456ea;
#L1456e8.   return @void ;
#L1456ea.   v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]  := v6 @type object;
#L1456ee.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L1456f2.   v4:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L1456f6.   if v4 <= 0 then goto L145704;
#L1456fa.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L1456fe.   v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]  := v1 @type object;
#L145702.   goto L1456f2;
#L145704.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145708.   v4:= 1  @length 4;
#L14570a.   v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|]  := v4;
#L14570e.   v4:= v7.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145712.   if v8 != v4 then goto L14572a;
#L145716.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetTail|](v7, v8, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14571c.   v4:= temp;
#L14571e.   if v4 == 0 then goto L14572a;
#L145722.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetNext|](v1, v2, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145728.   goto L1456e8;
#L14572a.   v4:= v7.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L14572e.   if v1 == v4 then goto L14576e;
#L145732.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145736.   if v3 == v5 then goto L14574a;
#L14573a.   if v3 > 0 then goto L14576e;
#L14573e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v1, v3, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145744.   v4:= temp;
#L145746.   if v4 == 0 then goto L14576e;
#L14574a.   v4:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L14574e.   if v4 == 0 then goto L14576e;
#L145752.   v0:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145756.   if v0 == 0 then goto L145768;
#L14575a.   v4:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L14575e.   if v4 > 0 then goto L145768;
#L145762.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetNext|](v1, v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145768.   v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v8 @type object;
#L14576c.   goto L1456e8;
#L14576e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unparkSuccessor|](v7, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145774.   goto L145768;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetHead|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v6 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v7 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L145788.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L14578c.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.headOffset|]   @wide;
#L145790.   v4:= 0  @length 4;
#L145792.   v1:= v6  @type object;
#L145794.   v5:= v7  @type object;
#L145796.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14579c.   v0:= temp;
#L14579e.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetNext|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v6 @type (object), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v7 @type (object), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access PRIVATE_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1457b0.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L1457b4.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.nextOffset|]   @wide;
#L1457b8.   v1:= v6  @type object;
#L1457ba.   v4:= v7  @type object;
#L1457bc.   v5:= v8  @type object;
#L1457be.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1457c4.   v0:= temp;
#L1457c6.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetTail|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v6 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v7 @type (object), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1457d8.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L1457dc.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tailOffset|]   @wide;
#L1457e0.   v1:= v6  @type object;
#L1457e2.   v4:= v7  @type object;
#L1457e4.   v5:= v8  @type object;
#L1457e6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1457ec.   v0:= temp;
#L1457ee.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v6 @type (object), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @Access PRIVATE_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L145800.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L145804.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.waitStatusOffset|]   @wide;
#L145808.   v1:= v6  @type object;
#L14580a.   v4:= v7;
#L14580c.   v5:= v8;
#L14580e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L145814.   v0:= temp;
#L145816.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|long|] v5) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireInterruptibly:(J)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145828.   v3:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.EXCLUSIVE|]   @type object;
#L14582c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v4, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145832.   v1:= temp  @type object;
#L145834.   v0:= 1  @length 4;
#L145836.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L14583c.   v2:= temp  @type object;
#L14583e.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145842.   if v2 != v3 then goto L14586c;
#L145846.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14584c.   v3:= temp;
#L14584e.   if v3 == 0 then goto L14586c;
#L145852.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHead|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145858.   v3:= 0  @length 4;
#L14585a.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v3 @type object;
#L14585e.   v0:= 0  @length 4;
#L145860.   if v0 == 0 then goto L14586a;
#L145864.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14586a.   return @void ;
#L14586c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145872.   v3:= temp;
#L145874.   if v3 == 0 then goto L145836;
#L145878.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.parkAndCheckInterrupt|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14587e.   v3:= temp;
#L145880.   if v3 == 0 then goto L145836;
#L145884.   v3:= new [|java:lang:InterruptedException|];
#L145888.   call temp:=  [|java:lang:InterruptedException.<init>|](v3) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14588e.   throw v3;
#L145890.   v3:= Exception  @type object;
#L145892.   if v0 == 0 then goto L14589c;
#L145896.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14589c.   throw v3;
  catch  [|any|] @[L145836..L14585e] goto L145890;
  catch  [|any|] @[L14586c..L145890] goto L145890;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireNanos|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v9 @type (this), [|long|] v10, [|long|] v12) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireNanos:(JJ)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1458c4.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1458ca.   v1:= temp  @type wide;
#L1458cc.   v7:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.EXCLUSIVE|]   @type object;
#L1458d0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v9, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1458d6.   v3:= temp  @type object;
#L1458d8.   v0:= 1  @length 4;
#L1458da.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L1458e0.   v6:= temp  @type object;
#L1458e2.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L1458e6.   if v6 != v7 then goto L145912;
#L1458ea.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v9, v10, v11) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1458f0.   v7:= temp;
#L1458f2.   if v7 == 0 then goto L145912;
#L1458f6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHead|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1458fc.   v7:= 0  @length 4;
#L1458fe.   v6.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v7 @type object;
#L145902.   v0:= 0  @length 4;
#L145904.   v7:= 1  @length 4;
#L145906.   if v0 == 0 then goto L145910;
#L14590a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145910.   return v7;
#L145912.   v7:= 0  @length wide16;
#L145916.   v7:= cmp(v12,v7);
#L14591a.   if v7 > 0 then goto L145926;
#L14591e.   v7:= 0  @length 4;
#L145920.   if v0 == 0 then goto L145910;
#L145924.   goto L14590a;
#L145926.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L14592c.   v7:= temp;
#L14592e.   if v7 == 0 then goto L145944;
#L145932.   v7:= 1000  @length wide16;
#L145936.   v7:= cmp(v12,v7);
#L14593a.   if v7 <= 0 then goto L145944;
#L14593e.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v9, v12, v13) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145944.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14594a.   v4:= temp  @type wide;
#L14594c.   v7:= v4 - v1  @type long;
#L145950.   v12:= v12 - v7  @type long;
#L145952.   v1:= v4  @type wide;
#L145954.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14595a.   v7:= temp;
#L14595c.   if v7 == 0 then goto L1458da;
#L145960.   v7:= new [|java:lang:InterruptedException|];
#L145964.   call temp:=  [|java:lang:InterruptedException.<init>|](v7) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14596a.   throw v7;
#L14596c.   v7:= Exception  @type object;
#L14596e.   if v0 == 0 then goto L145978;
#L145972.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145978.   throw v7;
  catch  [|any|] @[L1458da..L145902] goto L14596c;
  catch  [|any|] @[L145926..L14596c] goto L14596c;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v8 @type (this), [|long|] v9) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireShared:(J)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1459a0.   v6:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|]   @type object;
#L1459a4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v8, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1459aa.   v2:= temp  @type object;
#L1459ac.   v0:= 1  @length 4;
#L1459ae.   v1:= 0  @length 4;
#L1459b0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L1459b6.   v3:= temp  @type object;
#L1459b8.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L1459bc.   if v3 != v6 then goto L1459f8;
#L1459c0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v8, v9, v10) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1459c6.   v4:= temp  @type wide;
#L1459c8.   v6:= 0  @length wide16;
#L1459cc.   v6:= cmp(v4,v6);
#L1459d0.   if v6 < 0 then goto L1459f8;
#L1459d4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHeadAndPropagate|](v8, v2, v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1459da.   v6:= 0  @length 4;
#L1459dc.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v6 @type object;
#L1459e0.   if v1 == 0 then goto L1459ea;
#L1459e4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L1459ea.   v0:= 0  @length 4;
#L1459ec.   if v0 == 0 then goto L1459f6;
#L1459f0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v8, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1459f6.   return @void ;
#L1459f8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v3, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L1459fe.   v6:= temp;
#L145a00.   if v6 == 0 then goto L1459b0;
#L145a04.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.parkAndCheckInterrupt|](v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145a0a.   v6:= temp;
#L145a0c.   if v6 == 0 then goto L1459b0;
#L145a10.   v1:= 1  @length 4;
#L145a12.   goto L1459b0;
#L145a14.   v6:= Exception  @type object;
#L145a16.   if v0 == 0 then goto L145a20;
#L145a1a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v8, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145a20.   throw v6;
  catch  [|any|] @[L1459b0..L1459ea] goto L145a14;
  catch  [|any|] @[L1459f8..L145a0a] goto L145a14;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireSharedInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v7 @type (this), [|long|] v8) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireSharedInterruptibly:(J)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L145a48.   v5:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|]   @type object;
#L145a4c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v7, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145a52.   v1:= temp  @type object;
#L145a54.   v0:= 1  @length 4;
#L145a56.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L145a5c.   v2:= temp  @type object;
#L145a5e.   v5:= v7.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145a62.   if v2 != v5 then goto L145a94;
#L145a66.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v7, v8, v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145a6c.   v3:= temp  @type wide;
#L145a6e.   v5:= 0  @length wide16;
#L145a72.   v5:= cmp(v3,v5);
#L145a76.   if v5 < 0 then goto L145a94;
#L145a7a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHeadAndPropagate|](v7, v1, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145a80.   v5:= 0  @length 4;
#L145a82.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v5 @type object;
#L145a86.   v0:= 0  @length 4;
#L145a88.   if v0 == 0 then goto L145a92;
#L145a8c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v7, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145a92.   return @void ;
#L145a94.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145a9a.   v5:= temp;
#L145a9c.   if v5 == 0 then goto L145a56;
#L145aa0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.parkAndCheckInterrupt|](v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145aa6.   v5:= temp;
#L145aa8.   if v5 == 0 then goto L145a56;
#L145aac.   v5:= new [|java:lang:InterruptedException|];
#L145ab0.   call temp:=  [|java:lang:InterruptedException.<init>|](v5) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L145ab6.   throw v5;
#L145ab8.   v5:= Exception  @type object;
#L145aba.   if v0 == 0 then goto L145ac4;
#L145abe.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v7, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145ac4.   throw v5;
  catch  [|any|] @[L145a56..L145a86] goto L145ab8;
  catch  [|any|] @[L145a94..L145ab8] goto L145ab8;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireSharedNanos|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v11 @type (this), [|long|] v12, [|long|] v14) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireSharedNanos:(JJ)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L145aec.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L145af2.   v1:= temp  @type wide;
#L145af4.   v9:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.SHARED|]   @type object;
#L145af8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v11, v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145afe.   v3:= temp  @type object;
#L145b00.   v0:= 1  @length 4;
#L145b02.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L145b08.   v6:= temp  @type object;
#L145b0a.   v9:= v11.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145b0e.   if v6 != v9 then goto L145b42;
#L145b12.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v11, v12, v13) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145b18.   v7:= temp  @type wide;
#L145b1a.   v9:= 0  @length wide16;
#L145b1e.   v9:= cmp(v7,v9);
#L145b22.   if v9 < 0 then goto L145b42;
#L145b26.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHeadAndPropagate|](v11, v3, v7, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145b2c.   v9:= 0  @length 4;
#L145b2e.   v6.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v9 @type object;
#L145b32.   v0:= 0  @length 4;
#L145b34.   v9:= 1  @length 4;
#L145b36.   if v0 == 0 then goto L145b40;
#L145b3a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v11, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145b40.   return v9;
#L145b42.   v9:= 0  @length wide16;
#L145b46.   v9:= cmp(v14,v9);
#L145b4a.   if v9 > 0 then goto L145b56;
#L145b4e.   v9:= 0  @length 4;
#L145b50.   if v0 == 0 then goto L145b40;
#L145b54.   goto L145b3a;
#L145b56.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145b5c.   v9:= temp;
#L145b5e.   if v9 == 0 then goto L145b74;
#L145b62.   v9:= 1000  @length wide16;
#L145b66.   v9:= cmp(v14,v9);
#L145b6a.   if v9 <= 0 then goto L145b74;
#L145b6e.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v11, v14, v15) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145b74.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L145b7a.   v4:= temp  @type wide;
#L145b7c.   v9:= v4 - v1  @type long;
#L145b80.   v14:= v14 - v9  @type long;
#L145b82.   v1:= v4  @type wide;
#L145b84.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145b8a.   v9:= temp;
#L145b8c.   if v9 == 0 then goto L145b02;
#L145b90.   v9:= new [|java:lang:InterruptedException|];
#L145b94.   call temp:=  [|java:lang:InterruptedException.<init>|](v9) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L145b9a.   throw v9;
#L145b9c.   v9:= Exception  @type object;
#L145b9e.   if v0 == 0 then goto L145ba8;
#L145ba2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v11, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145ba8.   throw v9;
  catch  [|any|] @[L145b02..L145b32] goto L145b9c;
  catch  [|any|] @[L145b56..L145b9c] goto L145b9c;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doReleaseShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doReleaseShared:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L145bd0.   v4:= 0  @length 4;
#L145bd2.   v3:= -1  @length 4;
#L145bd4.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145bd8.   if v0 == 0 then goto L145bfe;
#L145bdc.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145be0.   if v0 == v2 then goto L145bfe;
#L145be4.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145be8.   if v1 != v3 then goto L145c08;
#L145bec.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v0, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145bf2.   v2:= temp;
#L145bf4.   if v2 == 0 then goto L145bd4;
#L145bf8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unparkSuccessor|](v5, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145bfe.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145c02.   if v0 != v2 then goto L145bd4;
#L145c06.   return @void ;
#L145c08.   if v1 != 0 then goto L145bfe;
#L145c0c.   v2:= -3  @length 4;
#L145c0e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v0, v4, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145c14.   v2:= temp;
#L145c16.   if v2 != 0 then goto L145bfe;
#L145c1a.   goto L145bd4;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.enq|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L145c2c.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145c30.   if v0 != 0 then goto L145c54;
#L145c34.   v1:= new [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|];
#L145c38.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.<init>|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type direct;
#L145c3e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetHead|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145c44.   v1:= temp;
#L145c46.   if v1 == 0 then goto L145c2c;
#L145c4a.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145c4e.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]  := v1 @type object;
#L145c52.   goto L145c2c;
#L145c54.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]  := v0 @type object;
#L145c58.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetTail|](v2, v0, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145c5e.   v1:= temp;
#L145c60.   if v1 == 0 then goto L145c2c;
#L145c64.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v3 @type object;
#L145c68.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.findNodeFromTail|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.findNodeFromTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L145c7c.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145c80.   if v0 != v3 then goto L145c88;
#L145c84.   v1:= 1  @length 4;
#L145c86.   return v1;
#L145c88.   if v0 != 0 then goto L145c90;
#L145c8c.   v1:= 0  @length 4;
#L145c8e.   goto L145c86;
#L145c90.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145c94.   goto L145c80;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullGetFirstQueuedThread|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v8 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullGetFirstQueuedThread:()Ljava/lang/Thread;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L145ca8.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145cac.   if v1 == 0 then goto L145ccc;
#L145cb0.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145cb4.   if v2 == 0 then goto L145ccc;
#L145cb8.   v6:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145cbc.   v7:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145cc0.   if v6 != v7 then goto L145ccc;
#L145cc4.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L145cc8.   if v3 != 0 then goto L145cf0;
#L145ccc.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145cd0.   if v1 == 0 then goto L145cf4;
#L145cd4.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145cd8.   if v2 == 0 then goto L145cf4;
#L145cdc.   v6:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145ce0.   v7:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145ce4.   if v6 != v7 then goto L145cf4;
#L145ce8.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L145cec.   if v3 == 0 then goto L145cf4;
#L145cf0.   v0:= v3  @type object;
#L145cf2.   return v0  @type object;
#L145cf4.   v4:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145cf8.   v0:= 0  @length 4;
#L145cfa.   if v4 == 0 then goto L145cf2;
#L145cfe.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145d02.   if v4 == v6 then goto L145cf2;
#L145d06.   v5:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L145d0a.   if v5 == 0 then goto L145d10;
#L145d0e.   v0:= v5  @type object;
#L145d10.   v4:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145d14.   goto L145cfa;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.parkAndCheckInterrupt|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.parkAndCheckInterrupt:()Z|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
      
#L145d28.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145d2e.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145d34.   v0:= temp;
#L145d36.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.selfInterrupt|] () @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.selfInterrupt:()V|] @Access STATIC {
      local temp ;
        v0;
      
#L145d48.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L145d4e.   v0:= temp  @type object;
#L145d50.   call temp:=  [|java:lang:Thread.interrupt|](v0) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L145d56.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHead|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L145d68.   v0:= 0  @length 4;
#L145d6a.   v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]  := v2 @type object;
#L145d6e.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]  := v0 @type object;
#L145d72.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]  := v0 @type object;
#L145d76.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHeadAndPropagate|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v5 @type (object), [|long|] v6) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145d88.   v0:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145d8c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHead|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145d92.   v2:= 0  @length wide16;
#L145d96.   v2:= cmp(v6,v2);
#L145d9a.   if v2 > 0 then goto L145daa;
#L145d9e.   if v0 == 0 then goto L145daa;
#L145da2.   v2:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145da6.   if v2 >= 0 then goto L145dc4;
#L145daa.   v1:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145dae.   if v1 == 0 then goto L145dbe;
#L145db2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L145db8.   v2:= temp;
#L145dba.   if v2 == 0 then goto L145dc4;
#L145dbe.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doReleaseShared|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doReleaseShared:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145dc4.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v2 @type (object), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L145dd8.   v1:= -1  @length 4;
#L145dda.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145dde.   if v0 != v1 then goto L145de6;
#L145de2.   v1:= 1  @length 4;
#L145de4.   return v1;
#L145de6.   if v0 <= 0 then goto L145e02;
#L145dea.   v2:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145dee.   v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]  := v2 @type object;
#L145df2.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145df6.   if v1 > 0 then goto L145dea;
#L145dfa.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v3 @type object;
#L145dfe.   v1:= 0  @length 4;
#L145e00.   goto L145de4;
#L145e02.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v2, v0, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145e08.   goto L145dfe;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unparkSuccessor|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v5 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145e1c.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145e20.   if v2 >= 0 then goto L145e2c;
#L145e24.   v3:= 0  @length 4;
#L145e26.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v5, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145e2c.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145e30.   if v0 == 0 then goto L145e3c;
#L145e34.   v3:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145e38.   if v3 <= 0 then goto L145e5a;
#L145e3c.   v0:= 0  @length 4;
#L145e3e.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L145e42.   if v1 == 0 then goto L145e5a;
#L145e46.   if v1 == v5 then goto L145e5a;
#L145e4a.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L145e4e.   if v3 > 0 then goto L145e54;
#L145e52.   v0:= v1  @type object;
#L145e54.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L145e58.   goto L145e42;
#L145e5a.   if v0 == 0 then goto L145e68;
#L145e5e.   v3:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L145e62.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v3) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L145e68.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquire|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquire:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L145e7c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145e82.   v0:= temp;
#L145e84.   if v0 != 0 then goto L145ea6;
#L145e88.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.EXCLUSIVE|]   @type object;
#L145e8c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.addWaiter|](v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145e92.   v0:= temp  @type object;
#L145e94.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|](v1, v0, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145e9a.   v0:= temp;
#L145e9c.   if v0 == 0 then goto L145ea6;
#L145ea0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145ea6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireInterruptibly:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L145eb8.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145ebe.   v0:= temp;
#L145ec0.   if v0 == 0 then goto L145ed0;
#L145ec4.   v0:= new [|java:lang:InterruptedException|];
#L145ec8.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L145ece.   throw v0;
#L145ed0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145ed6.   v0:= temp;
#L145ed8.   if v0 != 0 then goto L145ee2;
#L145edc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireInterruptibly|](v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireInterruptibly:(J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145ee2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireQueued|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v5 @type (object), [|long|] v6) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145ef4.   v0:= 1  @length 4;
#L145ef6.   v1:= 0  @length 4;
#L145ef8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.predecessor|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L145efe.   v2:= temp  @type object;
#L145f00.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145f04.   if v2 != v3 then goto L145f2e;
#L145f08.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v4, v6, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145f0e.   v3:= temp;
#L145f10.   if v3 == 0 then goto L145f2e;
#L145f14.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setHead|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145f1a.   v3:= 0  @length 4;
#L145f1c.   v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]  := v3 @type object;
#L145f20.   v0:= 0  @length 4;
#L145f22.   if v0 == 0 then goto L145f2c;
#L145f26.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145f2c.   return v1;
#L145f2e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire|](v2, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L145f34.   v3:= temp;
#L145f36.   if v3 == 0 then goto L145ef8;
#L145f3a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.parkAndCheckInterrupt|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145f40.   v3:= temp;
#L145f42.   if v3 == 0 then goto L145ef8;
#L145f46.   v1:= 1  @length 4;
#L145f48.   goto L145ef8;
#L145f4a.   v3:= Exception  @type object;
#L145f4c.   if v0 == 0 then goto L145f56;
#L145f50.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.cancelAcquire|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145f56.   throw v3;
  catch  [|any|] @[L145ef8..L145f20] goto L145f4a;
  catch  [|any|] @[L145f2e..L145f40] goto L145f4a;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|long|] v5) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireShared:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145f7c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145f82.   v0:= temp  @type wide;
#L145f84.   v2:= 0  @length wide16;
#L145f88.   v0:= cmp(v0,v2);
#L145f8c.   if v0 >= 0 then goto L145f96;
#L145f90.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireShared|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireShared:(J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145f96.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.acquireSharedInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|long|] v5) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.acquireSharedInterruptibly:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L145fa8.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L145fae.   v0:= temp;
#L145fb0.   if v0 == 0 then goto L145fc0;
#L145fb4.   v0:= new [|java:lang:InterruptedException|];
#L145fb8.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L145fbe.   throw v0;
#L145fc0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L145fc6.   v0:= temp  @type wide;
#L145fc8.   v2:= 0  @length wide16;
#L145fcc.   v0:= cmp(v0,v2);
#L145fd0.   if v0 >= 0 then goto L145fda;
#L145fd4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireSharedInterruptibly|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireSharedInterruptibly:(J)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L145fda.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.apparentlyFirstQueuedIsExclusive|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.apparentlyFirstQueuedIsExclusive:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L145fec.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L145ff0.   if v0 == 0 then goto L146014;
#L145ff4.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L145ff8.   if v1 == 0 then goto L146014;
#L145ffc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L146002.   v2:= temp;
#L146004.   if v2 != 0 then goto L146014;
#L146008.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L14600c.   if v2 == 0 then goto L146014;
#L146010.   v2:= 1  @length 4;
#L146012.   return v2;
#L146014.   v2:= 0  @length 4;
#L146016.   goto L146012;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetState|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v8 @type (this), [|long|] v9, [|long|] v11) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetState:(JJ)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L146028.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unsafe|]   @type object;
#L14602c.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.stateOffset|]   @wide;
#L146030.   v1:= v8  @type object;
#L146032.   v4:= v9  @type wide;
#L146034.   v6:= v11  @type wide;
#L146036.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14603c.   v0:= temp;
#L14603e.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullyRelease|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v5 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v6 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L146050.   v4:= 1  @length 4;
#L146052.   v0:= 1  @length 4;
#L146054.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getState|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getState:()J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14605a.   v1:= temp  @type wide;
#L14605c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.release|](v5, v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.release:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L146062.   v3:= temp;
#L146064.   if v3 == 0 then goto L146074;
#L146068.   v0:= 0  @length 4;
#L14606a.   if v0 == 0 then goto L146072;
#L14606e.   v6.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|]  := v4;
#L146072.   return v1  @type wide;
#L146074.   v3:= new [|java:lang:IllegalMonitorStateException|];
#L146078.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v3) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L14607e.   throw v3;
#L146080.   v3:= Exception  @type object;
#L146082.   if v0 == 0 then goto L14608a;
#L146086.   v6.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|]  := v4;
#L14608a.   throw v3;
  catch  [|any|] @[L146054..L146062] goto L146080;
  catch  [|any|] @[L146074..L146080] goto L146080;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getExclusiveQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1460b0.   v0:= new [|java:util:ArrayList|];
#L1460b4.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1460ba.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L1460be.   if v1 == 0 then goto L1460e2;
#L1460c2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L1460c8.   v3:= temp;
#L1460ca.   if v3 != 0 then goto L1460dc;
#L1460ce.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L1460d2.   if v2 == 0 then goto L1460dc;
#L1460d6.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1460dc.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L1460e0.   goto L1460be;
#L1460e2.   return v0  @type object;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getFirstQueuedThread|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getFirstQueuedThread:()Ljava/lang/Thread;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1460f4.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L1460f8.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L1460fc.   if v0 != v1 then goto L146104;
#L146100.   v0:= 0  @length 4;
#L146102.   return v0  @type object;
#L146104.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.fullGetFirstQueuedThread|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.fullGetFirstQueuedThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14610a.   v0:= temp  @type object;
#L14610c.   goto L146102;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getQueueLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L146120.   v0:= 0  @length 4;
#L146122.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L146126.   if v1 == 0 then goto L14613c;
#L14612a.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L14612e.   if v2 == 0 then goto L146136;
#L146132.   v0:= v0 + 1;
#L146136.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L14613a.   goto L146126;
#L14613c.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L146150.   v0:= new [|java:util:ArrayList|];
#L146154.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14615a.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L14615e.   if v1 == 0 then goto L146176;
#L146162.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L146166.   if v2 == 0 then goto L146170;
#L14616a.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L146170.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L146174.   goto L14615e;
#L146176.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getSharedQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getSharedQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146188.   v0:= new [|java:util:ArrayList|];
#L14618c.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L146192.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L146196.   if v1 == 0 then goto L1461ba;
#L14619a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] @type virtual;
#L1461a0.   v3:= temp;
#L1461a2.   if v3 == 0 then goto L1461b4;
#L1461a6.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L1461aa.   if v2 == 0 then goto L1461b4;
#L1461ae.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1461b4.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L1461b8.   goto L146196;
#L1461ba.   return v0  @type object;

   }
    procedure [|long|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getState|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getState:()J|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L1461cc.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.state|]   @wide;
#L1461d0.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getWaitQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getWaitQueueLength:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1461e4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1461ea.   v0:= temp;
#L1461ec.   if v0 != 0 then goto L146200;
#L1461f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L1461f4.   v1:= "Not owner" @type (object, string);
#L1461f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1461fe.   throw v0;
#L146200.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.getWaitQueueLength|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.getWaitQueueLength:()I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type virtual;
#L146206.   v0:= temp;
#L146208.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getWaitingThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getWaitingThreads:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L14621c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L146222.   v0:= temp;
#L146224.   if v0 != 0 then goto L146238;
#L146228.   v0:= new [|java:lang:IllegalArgumentException|];
#L14622c.   v1:= "Not owner" @type (object, string);
#L146230.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L146236.   throw v0;
#L146238.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.getWaitingThreads|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.getWaitingThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type virtual;
#L14623e.   v0:= temp  @type object;
#L146240.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.hasContended|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.hasContended:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L146254.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L146258.   if v0 == 0 then goto L146260;
#L14625c.   v0:= 1  @length 4;
#L14625e.   return v0;
#L146260.   v0:= 0  @length 4;
#L146262.   goto L14625e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.hasQueuedPredecessors|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.hasQueuedPredecessors:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L146274.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L146278.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L14627c.   if v0 == v2 then goto L14629c;
#L146280.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L146284.   if v1 == 0 then goto L146298;
#L146288.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L14628c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L146292.   v4:= temp  @type object;
#L146294.   if v3 == v4 then goto L14629c;
#L146298.   v3:= 1  @length 4;
#L14629a.   return v3;
#L14629c.   v3:= 0  @length 4;
#L14629e.   goto L14629a;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.hasQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.hasQueuedThreads:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1462b0.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L1462b4.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L1462b8.   if v0 == v1 then goto L1462c0;
#L1462bc.   v0:= 1  @length 4;
#L1462be.   return v0;
#L1462c0.   v0:= 0  @length 4;
#L1462c2.   goto L1462be;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.hasWaiters|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.hasWaiters:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1462d4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1462da.   v0:= temp;
#L1462dc.   if v0 != 0 then goto L1462f0;
#L1462e0.   v0:= new [|java:lang:IllegalArgumentException|];
#L1462e4.   v1:= "Not owner" @type (object, string);
#L1462e8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1462ee.   throw v0;
#L1462f0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.hasWaiters|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.hasWaiters:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type virtual;
#L1462f6.   v0:= temp;
#L1462f8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isHeldExclusively|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isHeldExclusively:()Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L14630c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L146310.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L146316.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L146328.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L14632c.   v1:= -2  @length 4;
#L14632e.   if v0 == v1 then goto L14633a;
#L146332.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L146336.   if v0 != 0 then goto L14633e;
#L14633a.   v0:= 0  @length 4;
#L14633c.   return v0;
#L14633e.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.next|]   @type object;
#L146342.   if v0 == 0 then goto L14634a;
#L146346.   v0:= 1  @length 4;
#L146348.   goto L14633c;
#L14634a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.findNodeFromTail|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.findNodeFromTail:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L146350.   v0:= temp;
#L146352.   goto L14633c;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isQueued|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:lang:Thread|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isQueued:(Ljava/lang/Thread;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L146364.   if v3 != 0 then goto L146374;
#L146368.   v1:= new [|java:lang:NullPointerException|];
#L14636c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L146372.   throw v1;
#L146374.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tail|]   @type object;
#L146378.   if v0 == 0 then goto L14638e;
#L14637c.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L146380.   if v1 != v3 then goto L146388;
#L146384.   v1:= 1  @length 4;
#L146386.   return v1;
#L146388.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.prev|]   @type object;
#L14638c.   goto L146378;
#L14638e.   v1:= 0  @length 4;
#L146390.   goto L146386;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.owns|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1463a4.   if v2 != 0 then goto L1463b4;
#L1463a8.   v0:= new [|java:lang:NullPointerException|];
#L1463ac.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1463b2.   throw v0;
#L1463b4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject.isOwnedBy|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;.isOwnedBy:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$ConditionObject|] @type virtual;
#L1463ba.   v0:= temp;
#L1463bc.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.release|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.release:(J)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1463d0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryRelease|](v2, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryRelease:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1463d6.   v1:= temp;
#L1463d8.   if v1 == 0 then goto L1463f6;
#L1463dc.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.head|]   @type object;
#L1463e0.   if v0 == 0 then goto L1463f2;
#L1463e4.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L1463e8.   if v1 == 0 then goto L1463f2;
#L1463ec.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.unparkSuccessor|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1463f2.   v1:= 1  @length 4;
#L1463f4.   return v1;
#L1463f6.   v1:= 0  @length 4;
#L1463f8.   goto L1463f4;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.releaseShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.releaseShared:(J)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L14640c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryReleaseShared|](v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryReleaseShared:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L146412.   v0:= temp;
#L146414.   if v0 == 0 then goto L146422;
#L146418.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doReleaseShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doReleaseShared:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14641e.   v0:= 1  @length 4;
#L146420.   return v0;
#L146422.   v0:= 0  @length 4;
#L146424.   goto L146420;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.setState|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v0 @type (this), [|long|] v1) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.setState:(J)V|] @Access PROTECTED_FINAL {
      local temp ;
      
#L146438.   v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.state|]  := v1 @wide;
#L14643c.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.toString|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L146450.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.getState|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.getState:()J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L146456.   v1:= temp  @type wide;
#L146458.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.hasQueuedThreads|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.hasQueuedThreads:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L14645e.   v3:= temp;
#L146460.   if v3 == 0 then goto L1464c0;
#L146464.   v0:= "non" @type (object, string);
#L146468.   v3:= new [|java:lang:StringBuilder|];
#L14646c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L146472.   call temp:=  [|java:lang:Object.toString|](v5) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L146478.   v4:= temp  @type object;
#L14647a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L146480.   v3:= temp  @type object;
#L146482.   v4:= "[State = " @type (object, string);
#L146486.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14648c.   v3:= temp  @type object;
#L14648e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L146494.   v3:= temp  @type object;
#L146496.   v4:= ", " @type (object, string);
#L14649a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1464a0.   v3:= temp  @type object;
#L1464a2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1464a8.   v3:= temp  @type object;
#L1464aa.   v4:= "empty queue]" @type (object, string);
#L1464ae.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1464b4.   v3:= temp  @type object;
#L1464b6.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1464bc.   v3:= temp  @type object;
#L1464be.   return v3  @type object;
#L1464c0.   v0:= "" @type (object, string);
#L1464c4.   goto L146468;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferAfterCancelledWait|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L1464d8.   v0:= 0  @length 4;
#L1464da.   v1:= -2  @length 4;
#L1464dc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v3, v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L1464e2.   v1:= temp;
#L1464e4.   if v1 == 0 then goto L1464f2;
#L1464e8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.enq|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1464ee.   v0:= 1  @length 4;
#L1464f0.   return v0;
#L1464f2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.isOnSyncQueue|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1464f8.   v1:= temp;
#L1464fa.   if v1 != 0 then goto L1464f0;
#L1464fe.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L146504.   goto L1464f2;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.transferForSignal|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node|] v5 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146518.   v2:= 0  @length 4;
#L14651a.   v3:= -2  @length 4;
#L14651c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v5, v3, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L146522.   v3:= temp;
#L146524.   if v3 != 0 then goto L14652a;
#L146528.   return v2;
#L14652a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.enq|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L146530.   v0:= temp  @type object;
#L146532.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.waitStatus|] ;
#L146536.   if v1 > 0 then goto L146548;
#L14653a.   v2:= -1  @length 4;
#L14653c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.compareAndSetWaitStatus|](v0, v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type static;
#L146542.   v2:= temp;
#L146544.   if v2 != 0 then goto L146552;
#L146548.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedLongSynchronizer$Node.thread|]   @type object;
#L14654c.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v2) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146552.   v2:= 1  @length 4;
#L146554.   goto L146528;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L146568.   v0:= new [|java:lang:UnsupportedOperationException|];
#L14656c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L146572.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireNanos|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2, [|long|] v4) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireNanos:(JJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L146584.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14658a.   v0:= temp;
#L14658c.   if v0 == 0 then goto L14659c;
#L146590.   v0:= new [|java:lang:InterruptedException|];
#L146594.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14659a.   throw v0;
#L14659c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquire|](v1, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquire:(J)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L1465a2.   v0:= temp;
#L1465a4.   if v0 != 0 then goto L1465b4;
#L1465a8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireNanos|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireNanos:(JJ)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L1465ae.   v0:= temp;
#L1465b0.   if v0 == 0 then goto L1465b8;
#L1465b4.   v0:= 1  @length 4;
#L1465b6.   return v0;
#L1465b8.   v0:= 0  @length 4;
#L1465ba.   goto L1465b6;

   }
    procedure [|long|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1465cc.   v0:= new [|java:lang:UnsupportedOperationException|];
#L1465d0.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L1465d6.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireSharedNanos|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v4 @type (this), [|long|] v5, [|long|] v7) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireSharedNanos:(JJ)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1465e8.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1465ee.   v0:= temp;
#L1465f0.   if v0 == 0 then goto L146600;
#L1465f4.   v0:= new [|java:lang:InterruptedException|];
#L1465f8.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1465fe.   throw v0;
#L146600.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryAcquireShared|](v4, v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryAcquireShared:(J)J|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type virtual;
#L146606.   v0:= temp  @type wide;
#L146608.   v2:= 0  @length wide16;
#L14660c.   v0:= cmp(v0,v2);
#L146610.   if v0 >= 0 then goto L146620;
#L146614.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.doAcquireSharedNanos|](v4, v5, v6, v7, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.doAcquireSharedNanos:(JJ)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @type direct;
#L14661a.   v0:= temp;
#L14661c.   if v0 == 0 then goto L146624;
#L146620.   v0:= 1  @length 4;
#L146622.   return v0;
#L146624.   v0:= 0  @length 4;
#L146626.   goto L146622;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryRelease|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryRelease:(J)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L146638.   v0:= new [|java:lang:UnsupportedOperationException|];
#L14663c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L146642.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer.tryReleaseShared|] ([|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] v1 @type (this), [|long|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedLongSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer;.tryReleaseShared:(J)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L146654.   v0:= new [|java:lang:UnsupportedOperationException|];
#L146658.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L14665e.   throw v0;

   }
record [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:Condition|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.REINTERRUPT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.THROW_IE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.<init>|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v0 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.<init>:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L146670.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]  := v1 @type object;
#L146674.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14667a.   return @void ;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14668c.   v3:= -2  @length 4;
#L14668e.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]   @type object;
#L146692.   if v1 == 0 then goto L1466a8;
#L146696.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L14669a.   if v2 == v3 then goto L1466a8;
#L14669e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L1466a4.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]   @type object;
#L1466a8.   v0:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L1466ac.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1466b2.   v2:= temp  @type object;
#L1466b4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|](v0, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:(Ljava/lang/Thread;I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type direct;
#L1466ba.   if v1 != 0 then goto L1466c8;
#L1466be.   v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L1466c2.   v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]  := v0 @type object;
#L1466c6.   return v0  @type object;
#L1466c8.   v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v0 @type object;
#L1466cc.   goto L1466c2;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1466e0.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1466e6.   v0:= temp;
#L1466e8.   if v0 == 0 then goto L146704;
#L1466ec.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1466f0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferAfterCancelledWait|](v0, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1466f6.   v0:= temp;
#L1466f8.   if v0 == 0 then goto L146700;
#L1466fc.   v0:= -1  @length 4;
#L1466fe.   return v0;
#L146700.   v0:= 1  @length 4;
#L146702.   goto L1466fe;
#L146704.   v0:= 0  @length 4;
#L146706.   goto L1466fe;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.doSignal|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.doSignal:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L146718.   v1:= 0  @length 4;
#L14671a.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L14671e.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L146722.   if v0 != 0 then goto L14672a;
#L146726.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]  := v1 @type object;
#L14672a.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v1 @type object;
#L14672e.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146732.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferForSignal|](v0, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146738.   v0:= temp;
#L14673a.   if v0 != 0 then goto L146746;
#L14673e.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146742.   if v3 != 0 then goto L14671a;
#L146746.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.doSignalAll|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v3 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v4 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.doSignalAll:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L146758.   v2:= 0  @length 4;
#L14675a.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]  := v2 @type object;
#L14675e.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]  := v2 @type object;
#L146762.   v0:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146766.   v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v2 @type object;
#L14676a.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L14676e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferForSignal|](v1, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146774.   v4:= v0  @type object;
#L146776.   if v4 != 0 then goto L146762;
#L14677a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L14678c.   v0:= -1  @length 4;
#L14678e.   if v2 != v0 then goto L14679e;
#L146792.   v0:= new [|java:lang:InterruptedException|];
#L146796.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14679c.   throw v0;
#L14679e.   v0:= 1  @length 4;
#L1467a0.   if v2 != v0 then goto L1467aa;
#L1467a4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L1467aa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1467bc.   v1:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L1467c0.   v2:= 0  @length 4;
#L1467c2.   if v1 == 0 then goto L1467f8;
#L1467c6.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L1467ca.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L1467ce.   v4:= -2  @length 4;
#L1467d0.   if v3 == v4 then goto L1467f4;
#L1467d4.   v3:= 0  @length 4;
#L1467d6.   v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v3 @type object;
#L1467da.   if v2 != 0 then goto L1467ee;
#L1467de.   v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]  := v0 @type object;
#L1467e2.   if v0 != 0 then goto L1467ea;
#L1467e6.   v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.lastWaiter|]  := v2 @type object;
#L1467ea.   v1:= v0  @type object;
#L1467ec.   goto L1467c2;
#L1467ee.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v0 @type object;
#L1467f2.   goto L1467e2;
#L1467f4.   v2:= v1  @type object;
#L1467f6.   goto L1467ea;
#L1467f8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.await|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.await:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14680c.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L146812.   v3:= temp;
#L146814.   if v3 == 0 then goto L146824;
#L146818.   v3:= new [|java:lang:InterruptedException|];
#L14681c.   call temp:=  [|java:lang:InterruptedException.<init>|](v3) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L146822.   throw v3;
#L146824.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L14682a.   v1:= temp  @type object;
#L14682c.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146830.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|](v3, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146836.   v2:= temp;
#L146838.   v0:= 0  @length 4;
#L14683a.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L14683e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v3, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146844.   v3:= temp;
#L146846.   if v3 != 0 then goto L14685c;
#L14684a.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146850.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146856.   v0:= temp;
#L146858.   if v0 == 0 then goto L14683a;
#L14685c.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146860.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146866.   v3:= temp;
#L146868.   if v3 == 0 then goto L146874;
#L14686c.   v3:= -1  @length 4;
#L14686e.   if v0 == v3 then goto L146874;
#L146872.   v0:= 1  @length 4;
#L146874.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146878.   if v3 == 0 then goto L146882;
#L14687c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146882.   if v0 == 0 then goto L14688c;
#L146886.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait|](v4, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L14688c.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.await|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v12 @type (this), [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.await:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L1468a0.   if v15 != 0 then goto L1468b0;
#L1468a4.   v10:= new [|java:lang:NullPointerException|];
#L1468a8.   call temp:=  [|java:lang:NullPointerException.<init>|](v10) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1468ae.   throw v10;
#L1468b0.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1468b6.   v3:= temp  @type wide;
#L1468b8.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1468be.   v10:= temp;
#L1468c0.   if v10 == 0 then goto L1468d0;
#L1468c4.   v10:= new [|java:lang:InterruptedException|];
#L1468c8.   call temp:=  [|java:lang:InterruptedException.<init>|](v10) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1468ce.   throw v10;
#L1468d0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|](v12) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L1468d6.   v5:= temp  @type object;
#L1468d8.   v10:= v12.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1468dc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|](v10, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1468e2.   v8:= temp;
#L1468e4.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1468ea.   v1:= temp  @type wide;
#L1468ec.   v9:= 0  @length 4;
#L1468ee.   v0:= 0  @length 4;
#L1468f0.   v10:= v12.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1468f4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v10, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1468fa.   v10:= temp;
#L1468fc.   if v10 != 0 then goto L146918;
#L146900.   v10:= 0  @length wide16;
#L146904.   v10:= cmp(v3,v10);
#L146908.   if v10 > 0 then goto L146950;
#L14690c.   v10:= v12.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146910.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferAfterCancelledWait|](v10, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146916.   v9:= temp;
#L146918.   v10:= v12.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L14691c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v10, v5, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146922.   v10:= temp;
#L146924.   if v10 == 0 then goto L146930;
#L146928.   v10:= -1  @length 4;
#L14692a.   if v0 == v10 then goto L146930;
#L14692e.   v0:= 1  @length 4;
#L146930.   v10:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146934.   if v10 == 0 then goto L14693e;
#L146938.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|](v12) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L14693e.   if v0 == 0 then goto L146948;
#L146942.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait|](v12, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146948.   if v9 != 0 then goto L146980;
#L14694c.   v10:= 1  @length 4;
#L14694e.   return v10;
#L146950.   v10:= 1000  @length wide16;
#L146954.   v10:= cmp(v3,v10);
#L146958.   if v10 < 0 then goto L146962;
#L14695c.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v12, v3, v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146962.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v12, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146968.   v0:= temp;
#L14696a.   if v0 != 0 then goto L146918;
#L14696e.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L146974.   v6:= temp  @type wide;
#L146976.   v10:= v6 - v1  @type long;
#L14697a.   v3:= v3 - v10  @type long;
#L14697c.   v1:= v6  @type wide;
#L14697e.   goto L1468f0;
#L146980.   v10:= 0  @length 4;
#L146982.   goto L14694e;

   }
    procedure [|long|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.awaitNanos|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v9 @type (this), [|long|] v10) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.awaitNanos:(J)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L146994.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14699a.   v7:= temp;
#L14699c.   if v7 == 0 then goto L1469ac;
#L1469a0.   v7:= new [|java:lang:InterruptedException|];
#L1469a4.   call temp:=  [|java:lang:InterruptedException.<init>|](v7) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1469aa.   throw v7;
#L1469ac.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|](v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L1469b2.   v3:= temp  @type object;
#L1469b4.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1469b8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1469be.   v6:= temp;
#L1469c0.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1469c6.   v1:= temp  @type wide;
#L1469c8.   v0:= 0  @length 4;
#L1469ca.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1469ce.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1469d4.   v7:= temp;
#L1469d6.   if v7 != 0 then goto L1469f0;
#L1469da.   v7:= 0  @length wide16;
#L1469de.   v7:= cmp(v10,v7);
#L1469e2.   if v7 > 0 then goto L146a30;
#L1469e6.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1469ea.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferAfterCancelledWait|](v7, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1469f0.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L1469f4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v7, v3, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1469fa.   v7:= temp;
#L1469fc.   if v7 == 0 then goto L146a08;
#L146a00.   v7:= -1  @length 4;
#L146a02.   if v0 == v7 then goto L146a08;
#L146a06.   v0:= 1  @length 4;
#L146a08.   v7:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146a0c.   if v7 == 0 then goto L146a16;
#L146a10.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|](v9) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146a16.   if v0 == 0 then goto L146a20;
#L146a1a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait|](v9, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146a20.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L146a26.   v7:= temp  @type wide;
#L146a28.   v7:= v7 - v1  @type long;
#L146a2a.   v7:= v10 - v7  @type long;
#L146a2e.   return v7  @type wide;
#L146a30.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v9, v10, v11) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146a36.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146a3c.   v0:= temp;
#L146a3e.   if v0 != 0 then goto L1469f0;
#L146a42.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L146a48.   v4:= temp  @type wide;
#L146a4a.   v7:= v4 - v1  @type long;
#L146a4e.   v10:= v10 - v7  @type long;
#L146a50.   v1:= v4  @type wide;
#L146a52.   goto L1469ca;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.awaitUninterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.awaitUninterruptibly:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146a64.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146a6a.   v1:= temp  @type object;
#L146a6c.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146a70.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|](v3, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146a76.   v2:= temp;
#L146a78.   v0:= 0  @length 4;
#L146a7a.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146a7e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v3, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146a84.   v3:= temp;
#L146a86.   if v3 != 0 then goto L146aa0;
#L146a8a.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146a90.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L146a96.   v3:= temp;
#L146a98.   if v3 == 0 then goto L146a7a;
#L146a9c.   v0:= 1  @length 4;
#L146a9e.   goto L146a7a;
#L146aa0.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146aa4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146aaa.   v3:= temp;
#L146aac.   if v3 != 0 then goto L146ab4;
#L146ab0.   if v0 == 0 then goto L146aba;
#L146ab4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L146aba.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.awaitUntil|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v8 @type (this), [|java:util:Date|] v9 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.awaitUntil:(Ljava/util/Date;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L146acc.   if v9 != 0 then goto L146adc;
#L146ad0.   v6:= new [|java:lang:NullPointerException|];
#L146ad4.   call temp:=  [|java:lang:NullPointerException.<init>|](v6) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L146ada.   throw v6;
#L146adc.   call temp:=  [|java:util:Date.getTime|](v9) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L146ae2.   v0:= temp  @type wide;
#L146ae4.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L146aea.   v6:= temp;
#L146aec.   if v6 == 0 then goto L146afc;
#L146af0.   v6:= new [|java:lang:InterruptedException|];
#L146af4.   call temp:=  [|java:lang:InterruptedException.<init>|](v6) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L146afa.   throw v6;
#L146afc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter|](v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.addConditionWaiter:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146b02.   v3:= temp  @type object;
#L146b04.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146b08.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146b0e.   v4:= temp;
#L146b10.   v5:= 0  @length 4;
#L146b12.   v2:= 0  @length 4;
#L146b14.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146b18.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146b1e.   v6:= temp;
#L146b20.   if v6 != 0 then goto L146b40;
#L146b24.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L146b2a.   v6:= temp  @type wide;
#L146b2c.   v6:= cmp(v6,v0);
#L146b30.   if v6 <= 0 then goto L146b78;
#L146b34.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146b38.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferAfterCancelledWait|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146b3e.   v5:= temp;
#L146b40.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146b44.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v6, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146b4a.   v6:= temp;
#L146b4c.   if v6 == 0 then goto L146b58;
#L146b50.   v6:= -1  @length 4;
#L146b52.   if v2 == v6 then goto L146b58;
#L146b56.   v2:= 1  @length 4;
#L146b58.   v6:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146b5c.   if v6 == 0 then goto L146b66;
#L146b60.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.unlinkCancelledWaiters|](v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.unlinkCancelledWaiters:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146b66.   if v2 == 0 then goto L146b70;
#L146b6a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait|](v8, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.reportInterruptAfterWait:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146b70.   if v5 != 0 then goto L146b8c;
#L146b74.   v6:= 1  @length 4;
#L146b76.   return v6;
#L146b78.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkUntil|](v8, v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkUntil:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146b7e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting|](v8, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.checkInterruptWhileWaiting:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146b84.   v2:= temp;
#L146b86.   if v2 == 0 then goto L146b14;
#L146b8a.   goto L146b40;
#L146b8c.   v6:= 0  @length 4;
#L146b8e.   goto L146b76;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.getWaitQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.getWaitQueueLength:()I|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146ba0.   v2:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146ba4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146baa.   v2:= temp;
#L146bac.   if v2 != 0 then goto L146bbc;
#L146bb0.   v2:= new [|java:lang:IllegalMonitorStateException|];
#L146bb4.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v2) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L146bba.   throw v2;
#L146bbc.   v0:= 0  @length 4;
#L146bbe.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146bc2.   if v1 == 0 then goto L146bda;
#L146bc6.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L146bca.   v3:= -2  @length 4;
#L146bcc.   if v2 != v3 then goto L146bd4;
#L146bd0.   v0:= v0 + 1;
#L146bd4.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146bd8.   goto L146bc2;
#L146bda.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.getWaitingThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.getWaitingThreads:()Ljava/util/Collection;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L146bec.   v3:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146bf0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146bf6.   v3:= temp;
#L146bf8.   if v3 != 0 then goto L146c08;
#L146bfc.   v3:= new [|java:lang:IllegalMonitorStateException|];
#L146c00.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v3) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L146c06.   throw v3;
#L146c08.   v0:= new [|java:util:ArrayList|];
#L146c0c.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L146c12.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146c16.   if v2 == 0 then goto L146c38;
#L146c1a.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L146c1e.   v4:= -2  @length 4;
#L146c20.   if v3 != v4 then goto L146c32;
#L146c24.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L146c28.   if v1 == 0 then goto L146c32;
#L146c2c.   call temp:=  [|java:util:ArrayList.add|](v0, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L146c32.   v2:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146c36.   goto L146c16;
#L146c38.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.hasWaiters|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.hasWaiters:()Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L146c4c.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146c50.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146c56.   v1:= temp;
#L146c58.   if v1 != 0 then goto L146c68;
#L146c5c.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L146c60.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L146c66.   throw v1;
#L146c68.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146c6c.   if v0 == 0 then goto L146c84;
#L146c70.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L146c74.   v2:= -2  @length 4;
#L146c76.   if v1 != v2 then goto L146c7e;
#L146c7a.   v1:= 1  @length 4;
#L146c7c.   return v1;
#L146c7e.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146c82.   goto L146c6c;
#L146c84.   v1:= 0  @length 4;
#L146c86.   goto L146c7c;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.isOwnedBy|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.isOwnedBy:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)Z|] @Access FINAL {
      local temp ;
        v0;
      
#L146c98.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146c9c.   if v2 != v0 then goto L146ca4;
#L146ca0.   v0:= 1  @length 4;
#L146ca2.   return v0;
#L146ca4.   v0:= 0  @length 4;
#L146ca6.   goto L146ca2;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.signal|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.signal:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L146cb8.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146cbc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146cc2.   v1:= temp;
#L146cc4.   if v1 != 0 then goto L146cd4;
#L146cc8.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L146ccc.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L146cd2.   throw v1;
#L146cd4.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146cd8.   if v0 == 0 then goto L146ce2;
#L146cdc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.doSignal|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.doSignal:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146ce2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.signalAll|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.signalAll:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L146cf4.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.this$0|]   @type object;
#L146cf8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L146cfe.   v1:= temp;
#L146d00.   if v1 != 0 then goto L146d10;
#L146d04.   v1:= new [|java:lang:IllegalMonitorStateException|];
#L146d08.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L146d0e.   throw v1;
#L146d10.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.firstWaiter|]   @type object;
#L146d14.   if v0 == 0 then goto L146d1e;
#L146d18.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.doSignalAll|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.doSignalAll:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L146d1e.   return @void ;

   }
record [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|]  @type class @AccessFlag FINAL  {
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]    @AccessFlag ;
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|]    @AccessFlag VOLATILE;
   }
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.CANCELLED|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.CONDITION|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.EXCLUSIVE|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.PROPAGATE|]    @AccessFlag STATIC_FINAL;
      global [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SIGNAL|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<clinit>|] () @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L146d30.   v0:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L146d34.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type direct;
#L146d3a.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|] := v0  @type object;
#L146d3e.   v0:= 0  @length 4;
#L146d40.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.EXCLUSIVE|] := v0  @type object;
#L146d44.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L146d58.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L146d5e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @type (this), [|java:lang:Thread|] v1 @type (object), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:(Ljava/lang/Thread;I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L146d70.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L146d76.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|]  := v2;
#L146d7a.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]  := v1 @type object;
#L146d7e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @type (this), [|java:lang:Thread|] v1 @type (object), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:(Ljava/lang/Thread;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L146d90.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L146d96.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]  := v2 @type object;
#L146d9a.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]  := v1 @type object;
#L146d9e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.isShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.isShared:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L146db0.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.nextWaiter|]   @type object;
#L146db4.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|]   @type object;
#L146db8.   if v0 != v1 then goto L146dc0;
#L146dbc.   v0:= 1  @length 4;
#L146dbe.   return v0;
#L146dc0.   v0:= 0  @length 4;
#L146dc2.   goto L146dbe;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L146dd4.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L146dd8.   if v0 != 0 then goto L146de8;
#L146ddc.   v1:= new [|java:lang:NullPointerException|];
#L146de0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L146de6.   throw v1;
#L146de8.   return v0  @type object;

   }
record [|java:util:concurrent:locks:LockSupport|]  @type class @AccessFlag PUBLIC  {
   }
      global [|long|] @@[|java:util:concurrent:locks:LockSupport.parkBlockerOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:locks:LockSupport.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.<clinit>|] () @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146dfc.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L146e02.   v1:= temp  @type object;
#L146e04.   @@[|java:util:concurrent:locks:LockSupport.unsafe|] := v1  @type object;
#L146e08.   v1:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146e0c.   v2:= new [|java:lang:Thread|];
#L146e10.   v3:= "parkBlocker" @type (object, string);
#L146e14.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L146e1a.   v2:= temp  @type object;
#L146e1c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146e22.   v1:= temp  @type wide;
#L146e24.   @@[|java:util:concurrent:locks:LockSupport.parkBlockerOffset|] := v1  @wide;
#L146e28.   return @void ;
#L146e2a.   v0:= Exception  @type object;
#L146e2c.   v1:= new [|java:lang:Error|];
#L146e30.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L146e36.   throw v1;
  catch  [|java:lang:Exception|] @[L146e08..L146e28] goto L146e2a;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.<init>|] ([|java:util:concurrent:locks:LockSupport|] v0 @type (this)) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L146e58.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L146e5e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:locks:LockSupport.getBlocker|] ([|java:lang:Thread|] v3 @type (object)) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.getBlocker:(Ljava/lang/Thread;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L146e70.   if v3 != 0 then goto L146e80;
#L146e74.   v0:= new [|java:lang:NullPointerException|];
#L146e78.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L146e7e.   throw v0;
#L146e80.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146e84.   v1:= @@[|java:util:concurrent:locks:LockSupport.parkBlockerOffset|]   @wide;
#L146e88.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v0, v3, v1, v2) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146e8e.   v0:= temp  @type object;
#L146e90.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.park|] () @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.park:()V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L146ea4.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146ea8.   v1:= 0  @length 4;
#L146eaa.   v2:= 0  @length wide16;
#L146eae.   call temp:=  [|sun:misc:Unsafe.park|](v0, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146eb4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.park|] ([|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L146ec8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L146ece.   v0:= temp  @type object;
#L146ed0.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v5) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146ed6.   v1:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146eda.   v2:= 0  @length 4;
#L146edc.   v3:= 0  @length wide16;
#L146ee0.   call temp:=  [|sun:misc:Unsafe.park|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146ee6.   v1:= 0  @length 4;
#L146ee8.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146eee.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.parkNanos|] ([|long|] v2) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(J)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L146f00.   v0:= 0  @length wide16;
#L146f04.   v0:= cmp(v2,v0);
#L146f08.   if v0 <= 0 then goto L146f18;
#L146f0c.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146f10.   v1:= 0  @length 4;
#L146f12.   call temp:=  [|sun:misc:Unsafe.park|](v0, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146f18.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.parkNanos|] ([|java:lang:Object|] v3 @type (object), [|long|] v4) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L146f2c.   v1:= 0  @length wide16;
#L146f30.   v1:= cmp(v4,v1);
#L146f34.   if v1 <= 0 then goto L146f5a;
#L146f38.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L146f3e.   v0:= temp  @type object;
#L146f40.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v3) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146f46.   v1:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146f4a.   v2:= 0  @length 4;
#L146f4c.   call temp:=  [|sun:misc:Unsafe.park|](v1, v2, v4, v5) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146f52.   v1:= 0  @length 4;
#L146f54.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146f5a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.parkUntil|] ([|long|] v2) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.parkUntil:(J)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L146f6c.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146f70.   v1:= 1  @length 4;
#L146f72.   call temp:=  [|sun:misc:Unsafe.park|](v0, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146f78.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.parkUntil|] ([|java:lang:Object|] v3 @type (object), [|long|] v4) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.parkUntil:(Ljava/lang/Object;J)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L146f8c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L146f92.   v0:= temp  @type object;
#L146f94.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v3) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146f9a.   v1:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146f9e.   v2:= 1  @length 4;
#L146fa0.   call temp:=  [|sun:misc:Unsafe.park|](v1, v2, v4, v5) @signature [|Lsun/misc/Unsafe;.park:(ZJ)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146fa6.   v1:= 0  @length 4;
#L146fa8.   call temp:=  [|java:util:concurrent:locks:LockSupport.setBlocker|](v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L146fae.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.setBlocker|] ([|java:lang:Thread|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L146fc0.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146fc4.   v1:= @@[|java:util:concurrent:locks:LockSupport.parkBlockerOffset|]   @wide;
#L146fc8.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146fce.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:LockSupport.unpark|] ([|java:lang:Thread|] v1 @type (object)) @owner [|java:util:concurrent:locks:LockSupport|] @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L146fe0.   if v1 == 0 then goto L146fee;
#L146fe4.   v0:= @@[|java:util:concurrent:locks:LockSupport.unsafe|]   @type object;
#L146fe8.   call temp:=  [|sun:misc:Unsafe.unpark|](v0, v1) @signature [|Lsun/misc/Unsafe;.unpark:(Ljava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L146fee.   return @void ;

   }
record [|java:util:concurrent:locks:ReadWriteLock|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:util:concurrent:locks:Lock|] [|java:util:concurrent:locks:ReadWriteLock.readLock|] () @owner [|java:util:concurrent:locks:ReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReadWriteLock;.readLock:()Ljava/util/concurrent/locks/Lock;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:locks:Lock|] [|java:util:concurrent:locks:ReadWriteLock.writeLock|] () @owner [|java:util:concurrent:locks:ReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:locks:ReentrantLock$Sync|]  @type class @AccessFlag ABSTRACT  extends [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] {
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantLock$Sync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$Sync.<init>|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L147000.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L147006.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$Sync.readObject|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L147018.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14701e.   v0:= 0  @length 4;
#L147020.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.setState|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L147026.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantLock$Sync.getHoldCount|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getHoldCount:()I|] @Access FINAL {
      local temp ;
        v0;
      
#L147038.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14703e.   v0:= temp;
#L147040.   if v0 == 0 then goto L14704e;
#L147044.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14704a.   v0:= temp;
#L14704c.   return v0;
#L14704e.   v0:= 0  @length 4;
#L147050.   goto L14704c;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:ReentrantLock$Sync.getOwner|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getOwner:()Ljava/lang/Thread;|] @Access FINAL {
      local temp ;
        v0;
      
#L147064.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14706a.   v0:= temp;
#L14706c.   if v0 != 0 then goto L147074;
#L147070.   v0:= 0  @length 4;
#L147072.   return v0  @type object;
#L147074.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getExclusiveOwnerThread|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14707a.   v0:= temp  @type object;
#L14707c.   goto L147072;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$Sync.isHeldExclusively|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isHeldExclusively:()Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L147090.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getExclusiveOwnerThread|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L147096.   v0:= temp  @type object;
#L147098.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14709e.   v1:= temp  @type object;
#L1470a0.   if v0 != v1 then goto L1470a8;
#L1470a4.   v0:= 1  @length 4;
#L1470a6.   return v0;
#L1470a8.   v0:= 0  @length 4;
#L1470aa.   goto L1470a6;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$Sync.isLocked|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isLocked:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L1470bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1470c2.   v0:= temp;
#L1470c4.   if v0 == 0 then goto L1470cc;
#L1470c8.   v0:= 1  @length 4;
#L1470ca.   return v0;
#L1470cc.   v0:= 0  @length 4;
#L1470ce.   goto L1470ca;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$Sync.lock|] () @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.lock:()V|] @Access ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] [|java:util:concurrent:locks:ReentrantLock$Sync.newCondition|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.newCondition:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;|] @Access FINAL {
      local temp ;
        v0;
      
#L1470e0.   v0:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L1470e4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.<init>|](v0, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.<init>:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L1470ea.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$Sync.nonfairTryAcquire|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.nonfairTryAcquire:(I)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1470fc.   v3:= 1  @length 4;
#L1470fe.   v4:= 0  @length 4;
#L147100.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147106.   v1:= temp  @type object;
#L147108.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getState|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14710e.   v0:= temp;
#L147110.   if v0 != 0 then goto L147128;
#L147114.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.compareAndSetState|](v6, v4, v7) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14711a.   v5:= temp;
#L14711c.   if v5 == 0 then goto L147154;
#L147120.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.setExclusiveOwnerThread|](v6, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L147126.   return v3;
#L147128.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getExclusiveOwnerThread|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14712e.   v5:= temp  @type object;
#L147130.   if v1 != v5 then goto L147154;
#L147134.   v2:= v0 + v7  @type int;
#L147138.   if v2 >= 0 then goto L14714c;
#L14713c.   v3:= new [|java:lang:Error|];
#L147140.   v4:= "Maximum lock count exceeded" @type (object, string);
#L147144.   call temp:=  [|java:lang:Error.<init>|](v3, v4) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14714a.   throw v3;
#L14714c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.setState|](v6, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L147152.   goto L147126;
#L147154.   v3:= v4;
#L147156.   goto L147126;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$Sync.tryRelease|] ([|java:util:concurrent:locks:ReentrantLock$Sync|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:locks:ReentrantLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.tryRelease:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L147168.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getState|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L14716e.   v2:= temp;
#L147170.   v0:= v2 - v5  @type int;
#L147174.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14717a.   v2:= temp  @type object;
#L14717c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getExclusiveOwnerThread|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L147182.   v3:= temp  @type object;
#L147184.   if v2 == v3 then goto L147194;
#L147188.   v2:= new [|java:lang:IllegalMonitorStateException|];
#L14718c.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v2) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L147192.   throw v2;
#L147194.   v1:= 0  @length 4;
#L147196.   if v0 != 0 then goto L1471a4;
#L14719a.   v1:= 1  @length 4;
#L14719c.   v2:= 0  @length 4;
#L14719e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.setExclusiveOwnerThread|](v4, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1471a4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.setState|](v4, v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1471aa.   return v1;

   }
record [|java:util:concurrent:locks:ReentrantLock$FairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:ReentrantLock$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantLock$FairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$FairSync.<init>|] ([|java:util:concurrent:locks:ReentrantLock$FairSync|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1471bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type direct;
#L1471c2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$FairSync.lock|] ([|java:util:concurrent:locks:ReentrantLock$FairSync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.lock:()V|] @Access FINAL {
      local temp ;
        v0;
      
#L1471d4.   v0:= 1  @length 4;
#L1471d6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.acquire|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.acquire:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L1471dc.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$FairSync.tryAcquire|] ([|java:util:concurrent:locks:ReentrantLock$FairSync|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:locks:ReentrantLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.tryAcquire:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1471f0.   v3:= 1  @length 4;
#L1471f2.   v4:= 0  @length 4;
#L1471f4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1471fa.   v1:= temp  @type object;
#L1471fc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.getState|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L147202.   v0:= temp;
#L147204.   if v0 != 0 then goto L147228;
#L147208.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.hasQueuedPredecessors|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.hasQueuedPredecessors:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L14720e.   v5:= temp;
#L147210.   if v5 != 0 then goto L147254;
#L147214.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.compareAndSetState|](v6, v4, v7) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L14721a.   v5:= temp;
#L14721c.   if v5 == 0 then goto L147254;
#L147220.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.setExclusiveOwnerThread|](v6, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L147226.   return v3;
#L147228.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.getExclusiveOwnerThread|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L14722e.   v5:= temp  @type object;
#L147230.   if v1 != v5 then goto L147254;
#L147234.   v2:= v0 + v7  @type int;
#L147238.   if v2 >= 0 then goto L14724c;
#L14723c.   v3:= new [|java:lang:Error|];
#L147240.   v4:= "Maximum lock count exceeded" @type (object, string);
#L147244.   call temp:=  [|java:lang:Error.<init>|](v3, v4) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14724a.   throw v3;
#L14724c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.setState|](v6, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type virtual;
#L147252.   goto L147226;
#L147254.   v3:= v4;
#L147256.   goto L147226;

   }
record [|java:util:concurrent:locks:ReentrantLock$NonfairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:ReentrantLock$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantLock$NonfairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$NonfairSync.<init>|] ([|java:util:concurrent:locks:ReentrantLock$NonfairSync|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L147268.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type direct;
#L14726e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock$NonfairSync.lock|] ([|java:util:concurrent:locks:ReentrantLock$NonfairSync|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.lock:()V|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L147280.   v1:= 1  @length 4;
#L147282.   v0:= 0  @length 4;
#L147284.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.compareAndSetState|](v2, v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type virtual;
#L14728a.   v0:= temp;
#L14728c.   if v0 == 0 then goto L1472a0;
#L147290.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147296.   v0:= temp  @type object;
#L147298.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.setExclusiveOwnerThread|](v2, v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type virtual;
#L14729e.   return @void ;
#L1472a0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.acquire|](v2, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.acquire:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type virtual;
#L1472a6.   goto L14729e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock$NonfairSync.tryAcquire|] ([|java:util:concurrent:locks:ReentrantLock$NonfairSync|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.tryAcquire:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L1472b8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.nonfairTryAcquire|](v1, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.nonfairTryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type virtual;
#L1472be.   v0:= temp;
#L1472c0.   return v0;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|]  @type class @AccessFlag ABSTRACT  extends [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] {
      [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Thread|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.EXCLUSIVE_MASK|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.MAX_COUNT|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.SHARED_SHIFT|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.SHARED_UNIT|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1472d4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L1472da.   v0:= 0  @length 4;
#L1472dc.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]  := v0 @type object;
#L1472e0.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|];
#L1472e4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type direct;
#L1472ea.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]  := v0 @type object;
#L1472ee.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1472f4.   v0:= temp;
#L1472f6.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setState|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1472fc.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|] ([|int|] v1) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @Access STATIC {
      local temp ;
        v0;
      
#L147310.    v0:= 0.000000;
#L147316.   v0:= v0 ^& v1  @type int;
#L147318.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readObject|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L14732c.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L147332.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|];
#L147336.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type direct;
#L14733c.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]  := v0 @type object;
#L147340.   v0:= 0  @length 4;
#L147342.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setState|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147348.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|] ([|int|] v1) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @Access STATIC {
      local temp ;
        v0;
      
#L14735c.   v0:= v1 ^>> 16;
#L147360.   return v0;

   }
    procedure [|java:lang:IllegalMonitorStateException|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.unmatchedUnlockException|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.unmatchedUnlockException:()Ljava/lang/IllegalMonitorStateException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L147374.   v0:= new [|java:lang:IllegalMonitorStateException|];
#L147378.   v1:= "attempt to unlock read lock, not locked by current thread" @type (object, string);
#L14737c.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L147382.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.fullTryAcquireShared|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v8 @type (this), [|java:lang:Thread|] v9 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.fullTryAcquireShared:(Ljava/lang/Thread;)I|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L147394.   v3:= 1  @length 4;
#L147396.   v2:= -1  @length 4;
#L147398.   v1:= 0  @length 4;
#L14739a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1473a0.   v0:= temp;
#L1473a2.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1473a8.   v4:= temp;
#L1473aa.   if v4 == 0 then goto L1473bc;
#L1473ae.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1473b4.   v4:= temp  @type object;
#L1473b6.   if v4 == v9 then goto L1473d0;
#L1473ba.   return v2;
#L1473bc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readerShouldBlock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.readerShouldBlock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1473c2.   v4:= temp;
#L1473c4.   if v4 == 0 then goto L1473d0;
#L1473c8.   v4:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L1473cc.   if v4 != v9 then goto L1473f2;
#L1473d0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1473d6.   v4:= temp;
#L1473d8.    v5:= 0.000000;
#L1473de.   if v4 != v5 then goto L14743e;
#L1473e2.   v2:= new [|java:lang:Error|];
#L1473e6.   v3:= "Maximum lock count exceeded" @type (object, string);
#L1473ea.   call temp:=  [|java:lang:Error.<init>|](v2, v3) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1473f0.   throw v2;
#L1473f2.   if v1 != 0 then goto L147434;
#L1473f6.   v1:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L1473fa.   if v1 == 0 then goto L147412;
#L1473fe.   v4:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L147402.   call temp:=  [|java:lang:Thread.getId|](v9) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L147408.   v6:= temp  @type wide;
#L14740a.   v4:= cmp(v4,v6);
#L14740e.   if v4 == 0 then goto L147434;
#L147412.   v4:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L147416.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L14741c.   v1:= temp  @type object;
#L14741e.   v1:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v1;
#L147422.   v4:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L147426.   if v4 != 0 then goto L147434;
#L14742a.   v4:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L14742e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.remove|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.remove:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L147434.   v4:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L147438.   if v4 != 0 then goto L1473d0;
#L14743c.   goto L1473ba;
#L14743e.   v4:= 65536  @length high16;
#L147442.   v4:= v4 + v0  @type int;
#L147444.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v8, v0, v4) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14744a.   v4:= temp;
#L14744c.   if v4 == 0 then goto L14739a;
#L147450.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147456.   v2:= temp;
#L147458.   if v2 != 0 then goto L147468;
#L14745c.   v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]  := v9 @type object;
#L147460.   v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v3;
#L147464.   v2:= v3;
#L147466.   goto L1473ba;
#L147468.   v2:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L14746c.   if v2 != v9 then goto L14747e;
#L147470.   v2:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147474.   v2:= v2 + 1;
#L147478.   v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v2;
#L14747c.   goto L147464;
#L14747e.   if v1 != 0 then goto L147486;
#L147482.   v1:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L147486.   if v1 == 0 then goto L14749e;
#L14748a.   v4:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L14748e.   call temp:=  [|java:lang:Thread.getId|](v9) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L147494.   v6:= temp  @type wide;
#L147496.   v2:= cmp(v4,v6);
#L14749a.   if v2 == 0 then goto L1474c0;
#L14749e.   v2:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1474a2.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1474a8.   v1:= temp  @type object;
#L1474aa.   v1:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v1;
#L1474ae.   v2:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1474b2.   v2:= v2 + 1;
#L1474b6.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]  := v2;
#L1474ba.   v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]  := v1 @type object;
#L1474be.   goto L147464;
#L1474c0.   v2:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1474c4.   if v2 != 0 then goto L1474ae;
#L1474c8.   v2:= v8.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1474cc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.set|](v2, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1474d2.   goto L1474ae;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getCount:()I|] @Access FINAL {
      local temp ;
        v0;
      
#L1474e4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1474ea.   v0:= temp;
#L1474ec.   return v0;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getOwner|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getOwner:()Ljava/lang/Thread;|] @Access FINAL {
      local temp ;
        v0;
      
#L147500.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147506.   v0:= temp;
#L147508.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L14750e.   v0:= temp;
#L147510.   if v0 != 0 then goto L147518;
#L147514.   v0:= 0  @length 4;
#L147516.   return v0  @type object;
#L147518.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14751e.   v0:= temp  @type object;
#L147520.   goto L147516;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadHoldCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v7 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadHoldCount:()I|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L147534.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadLockCount|](v7) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadLockCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14753a.   v3:= temp;
#L14753c.   if v3 != 0 then goto L147544;
#L147540.   v0:= 0  @length 4;
#L147542.   return v0;
#L147544.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14754a.   v1:= temp  @type object;
#L14754c.   v3:= v7.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L147550.   if v3 != v1 then goto L14755a;
#L147554.   v0:= v7.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147558.   goto L147542;
#L14755a.   v2:= v7.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L14755e.   if v2 == 0 then goto L14757c;
#L147562.   v3:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L147566.   call temp:=  [|java:lang:Thread.getId|](v1) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L14756c.   v5:= temp  @type wide;
#L14756e.   v3:= cmp(v3,v5);
#L147572.   if v3 != 0 then goto L14757c;
#L147576.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L14757a.   goto L147542;
#L14757c.   v3:= v7.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L147580.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L147586.   v3:= temp  @type object;
#L147588.   v3:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v3;
#L14758c.   v0:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L147590.   if v0 != 0 then goto L147542;
#L147594.   v3:= v7.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L147598.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.remove|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.remove:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L14759e.   goto L147542;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadLockCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadLockCount:()I|] @Access FINAL {
      local temp ;
        v0;
      
#L1475b0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1475b6.   v0:= temp;
#L1475b8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1475be.   v0:= temp;
#L1475c0.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getWriteHoldCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getWriteHoldCount:()I|] @Access FINAL {
      local temp ;
        v0;
      
#L1475d4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isHeldExclusively|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1475da.   v0:= temp;
#L1475dc.   if v0 == 0 then goto L1475f2;
#L1475e0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1475e6.   v0:= temp;
#L1475e8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1475ee.   v0:= temp;
#L1475f0.   return v0;
#L1475f2.   v0:= 0  @length 4;
#L1475f4.   goto L1475f0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isHeldExclusively|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isHeldExclusively:()Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L147608.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14760e.   v0:= temp  @type object;
#L147610.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147616.   v1:= temp  @type object;
#L147618.   if v0 != v1 then goto L147620;
#L14761c.   v0:= 1  @length 4;
#L14761e.   return v0;
#L147620.   v0:= 0  @length 4;
#L147622.   goto L14761e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isWriteLocked|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isWriteLocked:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L147634.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14763a.   v0:= temp;
#L14763c.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147642.   v0:= temp;
#L147644.   if v0 == 0 then goto L14764c;
#L147648.   v0:= 1  @length 4;
#L14764a.   return v0;
#L14764c.   v0:= 0  @length 4;
#L14764e.   goto L14764a;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.newCondition|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.newCondition:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;|] @Access FINAL {
      local temp ;
        v0;
      
#L147660.   v0:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L147664.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.<init>|](v0, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.<init>:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type direct;
#L14766a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readerShouldBlock|] () @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.readerShouldBlock:()Z|] @Access ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryAcquire|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryAcquire:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14767c.   v3:= 1  @length 4;
#L14767e.   v4:= 0  @length 4;
#L147680.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147686.   v1:= temp  @type object;
#L147688.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14768e.   v0:= temp;
#L147690.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147696.   v2:= temp;
#L147698.   if v0 == 0 then goto L1476e0;
#L14769c.   if v2 == 0 then goto L1476ac;
#L1476a0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1476a6.   v5:= temp  @type object;
#L1476a8.   if v1 == v5 then goto L1476b0;
#L1476ac.   v3:= v4;
#L1476ae.   return v3;
#L1476b0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v7) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1476b6.   v4:= temp;
#L1476b8.   v4:= v4 + v2  @type int;
#L1476ba.    v5:= 0.000000;
#L1476c0.   if v4 <= v5 then goto L1476d4;
#L1476c4.   v3:= new [|java:lang:Error|];
#L1476c8.   v4:= "Maximum lock count exceeded" @type (object, string);
#L1476cc.   call temp:=  [|java:lang:Error.<init>|](v3, v4) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1476d2.   throw v3;
#L1476d4.   v4:= v0 + v7  @type int;
#L1476d8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setState|](v6, v4) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1476de.   goto L1476ae;
#L1476e0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.writerShouldBlock|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.writerShouldBlock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1476e6.   v5:= temp;
#L1476e8.   if v5 != 0 then goto L1476fc;
#L1476ec.   v5:= v0 + v7  @type int;
#L1476f0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v6, v0, v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1476f6.   v5:= temp;
#L1476f8.   if v5 != 0 then goto L147700;
#L1476fc.   v3:= v4;
#L1476fe.   goto L1476ae;
#L147700.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setExclusiveOwnerThread|](v6, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147706.   goto L1476ae;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryAcquireShared|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v9 @type (this), [|int|] v10) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryAcquireShared:(I)I|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L147718.   v4:= 1  @length 4;
#L14771a.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147720.   v1:= temp  @type object;
#L147722.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v9) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147728.   v0:= temp;
#L14772a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147730.   v5:= temp;
#L147732.   if v5 == 0 then goto L147746;
#L147736.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v9) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14773c.   v5:= temp  @type object;
#L14773e.   if v5 == v1 then goto L147746;
#L147742.   v4:= -1  @length 4;
#L147744.   return v4;
#L147746.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L14774c.   v2:= temp;
#L14774e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readerShouldBlock|](v9) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.readerShouldBlock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147754.   v5:= temp;
#L147756.   if v5 != 0 then goto L1477ec;
#L14775a.    v5:= 0.000000;
#L147760.   if v2 >= v5 then goto L1477ec;
#L147764.   v5:= 65536  @length high16;
#L147768.   v5:= v5 + v0  @type int;
#L14776a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v9, v0, v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147770.   v5:= temp;
#L147772.   if v5 == 0 then goto L1477ec;
#L147776.   if v2 != 0 then goto L147784;
#L14777a.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]  := v1 @type object;
#L14777e.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v4;
#L147782.   goto L147744;
#L147784.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L147788.   if v5 != v1 then goto L14779a;
#L14778c.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147790.   v5:= v5 + 1;
#L147794.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v5;
#L147798.   goto L147744;
#L14779a.   v3:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L14779e.   if v3 == 0 then goto L1477b6;
#L1477a2.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L1477a6.   call temp:=  [|java:lang:Thread.getId|](v1) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1477ac.   v7:= temp  @type wide;
#L1477ae.   v5:= cmp(v5,v7);
#L1477b2.   if v5 == 0 then goto L1477d8;
#L1477b6.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1477ba.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1477c0.   v3:= temp  @type object;
#L1477c2.   v3:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v3;
#L1477c6.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]  := v3 @type object;
#L1477ca.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1477ce.   v5:= v5 + 1;
#L1477d2.   v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]  := v5;
#L1477d6.   goto L147744;
#L1477d8.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1477dc.   if v5 != 0 then goto L1477ca;
#L1477e0.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1477e4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.set|](v5, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1477ea.   goto L1477ca;
#L1477ec.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.fullTryAcquireShared|](v9, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.fullTryAcquireShared:(Ljava/lang/Thread;)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1477f2.   v4:= temp;
#L1477f4.   goto L147744;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryReadLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v9 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryReadLock:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L147808.   v4:= 1  @length 4;
#L14780a.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147810.   v1:= temp  @type object;
#L147812.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v9) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147818.   v0:= temp;
#L14781a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147820.   v5:= temp;
#L147822.   if v5 == 0 then goto L147836;
#L147826.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v9) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14782c.   v5:= temp  @type object;
#L14782e.   if v5 == v1 then goto L147836;
#L147832.   v4:= 0  @length 4;
#L147834.   return v4;
#L147836.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L14783c.   v2:= temp;
#L14783e.    v5:= 0.000000;
#L147844.   if v2 != v5 then goto L147858;
#L147848.   v4:= new [|java:lang:Error|];
#L14784c.   v5:= "Maximum lock count exceeded" @type (object, string);
#L147850.   call temp:=  [|java:lang:Error.<init>|](v4, v5) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L147856.   throw v4;
#L147858.   v5:= 65536  @length high16;
#L14785c.   v5:= v5 + v0  @type int;
#L14785e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v9, v0, v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147864.   v5:= temp;
#L147866.   if v5 == 0 then goto L147812;
#L14786a.   if v2 != 0 then goto L147878;
#L14786e.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]  := v1 @type object;
#L147872.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v4;
#L147876.   goto L147834;
#L147878.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L14787c.   if v5 != v1 then goto L14788e;
#L147880.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147884.   v5:= v5 + 1;
#L147888.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v5;
#L14788c.   goto L147834;
#L14788e.   v3:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L147892.   if v3 == 0 then goto L1478aa;
#L147896.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L14789a.   call temp:=  [|java:lang:Thread.getId|](v1) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1478a0.   v7:= temp  @type wide;
#L1478a2.   v5:= cmp(v5,v7);
#L1478a6.   if v5 == 0 then goto L1478cc;
#L1478aa.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1478ae.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1478b4.   v3:= temp  @type object;
#L1478b6.   v3:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v3;
#L1478ba.   v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]  := v3 @type object;
#L1478be.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1478c2.   v5:= v5 + 1;
#L1478c6.   v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]  := v5;
#L1478ca.   goto L147834;
#L1478cc.   v5:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1478d0.   if v5 != 0 then goto L1478be;
#L1478d4.   v5:= v9.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1478d8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.set|](v5, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1478de.   goto L1478be;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryRelease|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryRelease:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1478f0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isHeldExclusively|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1478f6.   v2:= temp;
#L1478f8.   if v2 != 0 then goto L147908;
#L1478fc.   v2:= new [|java:lang:IllegalMonitorStateException|];
#L147900.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v2) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L147906.   throw v2;
#L147908.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14790e.   v2:= temp;
#L147910.   v1:= v2 - v4  @type int;
#L147914.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L14791a.   v2:= temp;
#L14791c.   if v2 != 0 then goto L147936;
#L147920.   v0:= 1  @length 4;
#L147922.   if v0 == 0 then goto L14792e;
#L147926.   v2:= 0  @length 4;
#L147928.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setExclusiveOwnerThread|](v3, v2) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14792e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setState|](v3, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147934.   return v0;
#L147936.   v0:= 0  @length 4;
#L147938.   goto L147922;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryReleaseShared|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v10 @type (this), [|int|] v11) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryReleaseShared:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14794c.   v5:= 1  @length 4;
#L14794e.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147954.   v2:= temp  @type object;
#L147956.   v6:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]   @type object;
#L14795a.   if v6 != v2 then goto L14799c;
#L14795e.   v6:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147962.   if v6 != v5 then goto L14798e;
#L147966.   v6:= 0  @length 4;
#L147968.   v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReader|]  := v6 @type object;
#L14796c.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v10) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147972.   v0:= temp;
#L147974.   v6:= 65536  @length high16;
#L147978.   v3:= v0 - v6  @type int;
#L14797c.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v10, v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147982.   v6:= temp;
#L147984.   if v6 == 0 then goto L14796c;
#L147988.   if v3 != 0 then goto L1479f6;
#L14798c.   return v5;
#L14798e.   v6:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|] ;
#L147992.   v6:= v6 + -1;
#L147996.   v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.firstReaderHoldCount|]  := v6;
#L14799a.   goto L14796c;
#L14799c.   v4:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.cachedHoldCounter|]   @type object;
#L1479a0.   if v4 == 0 then goto L1479b8;
#L1479a4.   v6:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]   @wide;
#L1479a8.   call temp:=  [|java:lang:Thread.getId|](v2) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1479ae.   v8:= temp  @type wide;
#L1479b0.   v6:= cmp(v6,v8);
#L1479b4.   if v6 == 0 then goto L1479c8;
#L1479b8.   v6:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1479bc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.get|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1479c2.   v4:= temp  @type object;
#L1479c4.   v4:= ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|])v4;
#L1479c8.   v1:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1479cc.   if v1 > v5 then goto L1479e8;
#L1479d0.   v6:= v10.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.readHolds|]   @type object;
#L1479d4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.remove|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.remove:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L1479da.   if v1 > 0 then goto L1479e8;
#L1479de.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.unmatchedUnlockException|](v10) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.unmatchedUnlockException:()Ljava/lang/IllegalMonitorStateException;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type direct;
#L1479e4.   v5:= temp  @type object;
#L1479e6.   throw v5;
#L1479e8.   v6:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|] ;
#L1479ec.   v6:= v6 + -1;
#L1479f0.   v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]  := v6;
#L1479f4.   goto L14796c;
#L1479f6.   v5:= 0  @length 4;
#L1479f8.   goto L14798c;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryWriteLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] v5 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryWriteLock:()Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L147a0c.   v3:= 0  @length 4;
#L147a0e.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147a14.   v1:= temp  @type object;
#L147a16.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getState|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147a1c.   v0:= temp;
#L147a1e.   if v0 == 0 then goto L147a56;
#L147a22.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L147a28.   v2:= temp;
#L147a2a.   if v2 == 0 then goto L147a3a;
#L147a2e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveOwnerThread|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147a34.   v4:= temp  @type object;
#L147a36.   if v1 == v4 then goto L147a3c;
#L147a3a.   return v3;
#L147a3c.    v4:= 0.000000;
#L147a42.   if v2 != v4 then goto L147a56;
#L147a46.   v3:= new [|java:lang:Error|];
#L147a4a.   v4:= "Maximum lock count exceeded" @type (object, string);
#L147a4e.   call temp:=  [|java:lang:Error.<init>|](v3, v4) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L147a54.   throw v3;
#L147a56.   v4:= v0 + 1;
#L147a5a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.compareAndSetState|](v5, v0, v4) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147a60.   v4:= temp;
#L147a62.   if v4 == 0 then goto L147a3a;
#L147a66.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.setExclusiveOwnerThread|](v5, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147a6c.   v3:= 1  @length 4;
#L147a6e.   goto L147a3a;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.writerShouldBlock|] () @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.writerShouldBlock:()Z|] @Access ABSTRACT {
      # return;
   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L147a80.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type direct;
#L147a86.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.readerShouldBlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.readerShouldBlock:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L147a98.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.hasQueuedPredecessors|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.hasQueuedPredecessors:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @type virtual;
#L147a9e.   v0:= temp;
#L147aa0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.writerShouldBlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.writerShouldBlock:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L147ab4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.hasQueuedPredecessors|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.hasQueuedPredecessors:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @type virtual;
#L147aba.   v0:= temp;
#L147abc.   return v0;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L147ad0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type direct;
#L147ad6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.readerShouldBlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;.readerShouldBlock:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L147ae8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.apparentlyFirstQueuedIsExclusive|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;.apparentlyFirstQueuedIsExclusive:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] @type virtual;
#L147aee.   v0:= temp;
#L147af0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.writerShouldBlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;.writerShouldBlock:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L147b04.   v0:= 0  @length 4;
#L147b06.   return v0;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:Lock|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v1 @type (this), [|java:util:concurrent:locks:ReentrantReadWriteLock|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.<init>:(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L147b18.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L147b1e.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147b22.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]  := v0 @type object;
#L147b26.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.lock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147b38.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147b3c.   v1:= 1  @length 4;
#L147b3e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.acquireShared|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.acquireShared:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147b44.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.lockInterruptibly|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lockInterruptibly:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147b58.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147b5c.   v1:= 1  @length 4;
#L147b5e.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.acquireSharedInterruptibly|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.acquireSharedInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147b64.   return @void ;

   }
    procedure [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.newCondition|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147b78.   v0:= new [|java:lang:UnsupportedOperationException|];
#L147b7c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L147b82.   throw v0;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.toString|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v3 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L147b94.   v1:= v3.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147b98.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadLockCount|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadLockCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147b9e.   v0:= temp;
#L147ba0.   v1:= new [|java:lang:StringBuilder|];
#L147ba4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L147baa.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L147bb0.   v2:= temp  @type object;
#L147bb2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147bb8.   v1:= temp  @type object;
#L147bba.   v2:= "[Read locks = " @type (object, string);
#L147bbe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147bc4.   v1:= temp  @type object;
#L147bc6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147bcc.   v1:= temp  @type object;
#L147bce.   v2:= "]" @type (object, string);
#L147bd2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147bd8.   v1:= temp  @type object;
#L147bda.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147be0.   v1:= temp  @type object;
#L147be2.   return v1  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.tryLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.tryLock:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147bf4.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147bf8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryReadLock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryReadLock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147bfe.   v0:= temp;
#L147c00.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.tryLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L147c14.   v0:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147c18.   v1:= 1  @length 4;
#L147c1a.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L147c20.   v2:= temp  @type wide;
#L147c22.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryAcquireSharedNanos|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryAcquireSharedNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147c28.   v0:= temp;
#L147c2a.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.unlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147c3c.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.sync|]   @type object;
#L147c40.   v1:= 1  @length 4;
#L147c42.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.releaseShared|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.releaseShared:(I)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147c48.   return @void ;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|]  @type class @AccessFlag FINAL  {
      [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L147c5c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L147c62.   v0:= 0  @length 4;
#L147c64.   v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.count|]  := v0;
#L147c68.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L147c6e.   v0:= temp  @type object;
#L147c70.   call temp:=  [|java:lang:Thread.getId|](v0) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L147c76.   v0:= temp  @type wide;
#L147c78.   v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.tid|]  := v0 @wide;
#L147c7c.   return @void ;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|]  @type class @AccessFlag FINAL  extends [|java:lang:ThreadLocal|] {
   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] v0 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L147c90.   call temp:=  [|java:lang:ThreadLocal.<init>|](v0) @signature [|Ljava/lang/ThreadLocal;.<init>:()V|] @classDescriptor [|java:lang:ThreadLocal|] @type direct;
#L147c96.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.initialValue:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L147ca8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.initialValue:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @type virtual;
#L147cae.   v0:= temp  @type object;
#L147cb0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|] [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.initialValue:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147cc4.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|];
#L147cc8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync$HoldCounter|] @type direct;
#L147cce.   return v0  @type object;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:Lock|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v1 @type (this), [|java:util:concurrent:locks:ReentrantReadWriteLock|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.<init>:(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L147ce0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L147ce6.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147cea.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]  := v0 @type object;
#L147cee.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.getHoldCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.getHoldCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147d00.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147d04.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getWriteHoldCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getWriteHoldCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147d0a.   v0:= temp;
#L147d0c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.isHeldByCurrentThread|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.isHeldByCurrentThread:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147d20.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147d24.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isHeldExclusively|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147d2a.   v0:= temp;
#L147d2c.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.lock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147d40.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147d44.   v1:= 1  @length 4;
#L147d46.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.acquire|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.acquire:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147d4c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.lockInterruptibly|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lockInterruptibly:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147d60.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147d64.   v1:= 1  @length 4;
#L147d66.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.acquireInterruptibly|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.acquireInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147d6c.   return @void ;

   }
    procedure [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.newCondition|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147d80.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147d84.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.newCondition:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147d8a.   v0:= temp  @type object;
#L147d8c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.toString|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v4 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L147da0.   v1:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147da4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getOwner|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getOwner:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147daa.   v0:= temp  @type object;
#L147dac.   v1:= new [|java:lang:StringBuilder|];
#L147db0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L147db6.   call temp:=  [|java:lang:Object.toString|](v4) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L147dbc.   v2:= temp  @type object;
#L147dbe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147dc4.   v2:= temp  @type object;
#L147dc6.   if v0 != 0 then goto L147de0;
#L147dca.   v1:= "[Unlocked]" @type (object, string);
#L147dce.   call temp:=  [|java:lang:StringBuilder.append|](v2, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147dd4.   v1:= temp  @type object;
#L147dd6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147ddc.   v1:= temp  @type object;
#L147dde.   return v1  @type object;
#L147de0.   v1:= new [|java:lang:StringBuilder|];
#L147de4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L147dea.   v3:= "[Locked by thread " @type (object, string);
#L147dee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147df4.   v1:= temp  @type object;
#L147df6.   call temp:=  [|java:lang:Thread.getName|](v0) @signature [|Ljava/lang/Thread;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L147dfc.   v3:= temp  @type object;
#L147dfe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147e04.   v1:= temp  @type object;
#L147e06.   v3:= "]" @type (object, string);
#L147e0a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147e10.   v1:= temp  @type object;
#L147e12.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L147e18.   v1:= temp  @type object;
#L147e1a.   goto L147dce;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.tryLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.tryLock:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147e2c.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147e30.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryWriteLock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryWriteLock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147e36.   v0:= temp;
#L147e38.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.tryLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L147e4c.   v0:= v4.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147e50.   v1:= 1  @length 4;
#L147e52.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L147e58.   v2:= temp  @type wide;
#L147e5a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.tryAcquireNanos|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.tryAcquireNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147e60.   v0:= temp;
#L147e62.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.unlock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147e74.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.sync|]   @type object;
#L147e78.   v1:= 1  @length 4;
#L147e7a.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.release|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.release:(I)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147e80.   return @void ;

   }
record [|java:util:concurrent:locks:ReentrantReadWriteLock|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:ReadWriteLock|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.readerLock|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] [|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]    @AccessFlag FINAL;
      [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.writerLock|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantReadWriteLock.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L147e94.   v0:= 0  @length 4;
#L147e96.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock.<init>|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock|] @type direct;
#L147e9c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantReadWriteLock.<init>|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L147eb0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L147eb6.   if v2 == 0 then goto L147ee6;
#L147eba.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|];
#L147ebe.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|] @type direct;
#L147ec4.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]  := v0 @type object;
#L147ec8.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|];
#L147ecc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock.<init>|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.<init>:(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] @type direct;
#L147ed2.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.readerLock|]  := v0 @type object;
#L147ed6.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|];
#L147eda.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock.<init>|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.<init>:(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] @type direct;
#L147ee0.   v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.writerLock|]  := v0 @type object;
#L147ee4.   return @void ;
#L147ee6.   v0:= new [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|];
#L147eea.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$NonfairSync|] @type direct;
#L147ef0.   goto L147ec4;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getOwner|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getOwner:()Ljava/lang/Thread;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L147f04.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147f08.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getOwner|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getOwner:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147f0e.   v0:= temp  @type object;
#L147f10.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getQueueLength|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueueLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L147f24.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147f28.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getQueueLength|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getQueueLength:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147f2e.   v0:= temp;
#L147f30.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getQueuedReaderThreads|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedReaderThreads:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L147f44.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147f48.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getSharedQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getSharedQueuedThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147f4e.   v0:= temp  @type object;
#L147f50.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getQueuedThreads|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedThreads:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L147f64.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147f68.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getQueuedThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147f6e.   v0:= temp  @type object;
#L147f70.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getQueuedWriterThreads|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedWriterThreads:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L147f84.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147f88.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getExclusiveQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getExclusiveQueuedThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147f8e.   v0:= temp  @type object;
#L147f90.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getReadHoldCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147fa4.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147fa8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadHoldCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadHoldCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147fae.   v0:= temp;
#L147fb0.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getReadLockCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadLockCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L147fc4.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L147fc8.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getReadLockCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getReadLockCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L147fce.   v0:= temp;
#L147fd0.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getWaitQueueLength|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWaitQueueLength:(Ljava/util/concurrent/locks/Condition;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L147fe4.   if v3 != 0 then goto L147ff4;
#L147fe8.   v0:= new [|java:lang:NullPointerException|];
#L147fec.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L147ff2.   throw v0;
#L147ff4.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L147ff8.   if v0 != 0 then goto L14800c;
#L147ffc.   v0:= new [|java:lang:IllegalArgumentException|];
#L148000.   v1:= "not owner" @type (object, string);
#L148004.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14800a.   throw v0;
#L14800c.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L148010.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L148014.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getWaitQueueLength|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getWaitQueueLength:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14801a.   v0:= temp;
#L14801c.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getWaitingThreads|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWaitingThreads:(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L148030.   if v3 != 0 then goto L148040;
#L148034.   v0:= new [|java:lang:NullPointerException|];
#L148038.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14803e.   throw v0;
#L148040.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L148044.   if v0 != 0 then goto L148058;
#L148048.   v0:= new [|java:lang:IllegalArgumentException|];
#L14804c.   v1:= "not owner" @type (object, string);
#L148050.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L148056.   throw v0;
#L148058.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L14805c.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L148060.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getWaitingThreads|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getWaitingThreads:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L148066.   v0:= temp  @type object;
#L148068.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantReadWriteLock.getWriteHoldCount|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14807c.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L148080.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getWriteHoldCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getWriteHoldCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L148086.   v0:= temp;
#L148088.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.hasQueuedThread|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this), [|java:lang:Thread|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.hasQueuedThread:(Ljava/lang/Thread;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L14809c.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L1480a0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isQueued|](v0, v2) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isQueued:(Ljava/lang/Thread;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1480a6.   v0:= temp;
#L1480a8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.hasQueuedThreads|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.hasQueuedThreads:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1480bc.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L1480c0.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.hasQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.hasQueuedThreads:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1480c6.   v0:= temp;
#L1480c8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.hasWaiters|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.hasWaiters:(Ljava/util/concurrent/locks/Condition;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1480dc.   if v3 != 0 then goto L1480ec;
#L1480e0.   v0:= new [|java:lang:NullPointerException|];
#L1480e4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1480ea.   throw v0;
#L1480ec.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L1480f0.   if v0 != 0 then goto L148104;
#L1480f4.   v0:= new [|java:lang:IllegalArgumentException|];
#L1480f8.   v1:= "not owner" @type (object, string);
#L1480fc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L148102.   throw v0;
#L148104.   v0:= v2.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L148108.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L14810c.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.hasWaiters|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.hasWaiters:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L148112.   v0:= temp;
#L148114.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.isFair|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.isFair:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L148128.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L14812c.   v0:= instanceof @varname v0 @type [|java:util:concurrent:locks:ReentrantReadWriteLock$FairSync|];
#L148130.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.isWriteLocked|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.isWriteLocked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148144.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L148148.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isWriteLocked|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isWriteLocked:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14814e.   v0:= temp;
#L148150.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantReadWriteLock.isWriteLockedByCurrentThread|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.isWriteLockedByCurrentThread:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148164.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L148168.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.isHeldExclusively|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L14816e.   v0:= temp;
#L148170.   return v0;

   }
    procedure [|java:util:concurrent:locks:Lock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.readLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/Lock;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L148184.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock.readLock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock|] @type virtual;
#L14818a.   v0:= temp  @type object;
#L14818c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:locks:ReentrantReadWriteLock$ReadLock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.readLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1481a0.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.readerLock|]   @type object;
#L1481a4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:ReentrantReadWriteLock.toString|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v5 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1481b8.   v3:= v5.[|java:util:concurrent:locks:ReentrantReadWriteLock.sync|]   @type object;
#L1481bc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.getCount|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.getCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type virtual;
#L1481c2.   v0:= temp;
#L1481c4.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.exclusiveCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1481ca.   v2:= temp;
#L1481cc.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync.sharedCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount:(I)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock$Sync|] @type static;
#L1481d2.   v1:= temp;
#L1481d4.   v3:= new [|java:lang:StringBuilder|];
#L1481d8.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1481de.   call temp:=  [|java:lang:Object.toString|](v5) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L1481e4.   v4:= temp  @type object;
#L1481e6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1481ec.   v3:= temp  @type object;
#L1481ee.   v4:= "[Write locks = " @type (object, string);
#L1481f2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1481f8.   v3:= temp  @type object;
#L1481fa.   call temp:=  [|java:lang:StringBuilder.append|](v3, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148200.   v3:= temp  @type object;
#L148202.   v4:= ", Read locks = " @type (object, string);
#L148206.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14820c.   v3:= temp  @type object;
#L14820e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148214.   v3:= temp  @type object;
#L148216.   v4:= "]" @type (object, string);
#L14821a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148220.   v3:= temp  @type object;
#L148222.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148228.   v3:= temp  @type object;
#L14822a.   return v3  @type object;

   }
    procedure [|java:util:concurrent:locks:Lock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.writeLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L14823c.   call temp:=  [|java:util:concurrent:locks:ReentrantReadWriteLock.writeLock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;|] @classDescriptor [|java:util:concurrent:locks:ReentrantReadWriteLock|] @type virtual;
#L148242.   v0:= temp  @type object;
#L148244.   return v0  @type object;

   }
    procedure [|java:util:concurrent:locks:ReentrantReadWriteLock$WriteLock|] [|java:util:concurrent:locks:ReentrantReadWriteLock.writeLock|] ([|java:util:concurrent:locks:ReentrantReadWriteLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantReadWriteLock|] @signature [|Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148258.   v0:= v1.[|java:util:concurrent:locks:ReentrantReadWriteLock.writerLock|]   @type object;
#L14825c.   return v0  @type object;

   }
record [|java:util:jar:Attributes$Name|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|java:util:jar:Attributes$Name.name|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.CLASS_PATH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.CONTENT_TYPE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.EXTENSION_INSTALLATION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.EXTENSION_LIST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.EXTENSION_NAME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_TITLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_URL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VENDOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VENDOR_ID|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VERSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.MAIN_CLASS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.MANIFEST_VERSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.NAME|]    @AccessFlag STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.SEALED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.SIGNATURE_VERSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.SPECIFICATION_TITLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.SPECIFICATION_VENDOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Attributes$Name.SPECIFICATION_VERSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:Attributes$Name.<clinit>|] () @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L148270.   v0:= new [|java:util:jar:Attributes$Name|];
#L148274.   v1:= "Class-Path" @type (object, string);
#L148278.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14827e.   @@[|java:util:jar:Attributes$Name.CLASS_PATH|] := v0  @type object;
#L148282.   v0:= new [|java:util:jar:Attributes$Name|];
#L148286.   v1:= "Manifest-Version" @type (object, string);
#L14828a.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148290.   @@[|java:util:jar:Attributes$Name.MANIFEST_VERSION|] := v0  @type object;
#L148294.   v0:= new [|java:util:jar:Attributes$Name|];
#L148298.   v1:= "Main-Class" @type (object, string);
#L14829c.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482a2.   @@[|java:util:jar:Attributes$Name.MAIN_CLASS|] := v0  @type object;
#L1482a6.   v0:= new [|java:util:jar:Attributes$Name|];
#L1482aa.   v1:= "Signature-Version" @type (object, string);
#L1482ae.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482b4.   @@[|java:util:jar:Attributes$Name.SIGNATURE_VERSION|] := v0  @type object;
#L1482b8.   v0:= new [|java:util:jar:Attributes$Name|];
#L1482bc.   v1:= "Content-Type" @type (object, string);
#L1482c0.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482c6.   @@[|java:util:jar:Attributes$Name.CONTENT_TYPE|] := v0  @type object;
#L1482ca.   v0:= new [|java:util:jar:Attributes$Name|];
#L1482ce.   v1:= "Sealed" @type (object, string);
#L1482d2.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482d8.   @@[|java:util:jar:Attributes$Name.SEALED|] := v0  @type object;
#L1482dc.   v0:= new [|java:util:jar:Attributes$Name|];
#L1482e0.   v1:= "Implementation-Title" @type (object, string);
#L1482e4.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482ea.   @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_TITLE|] := v0  @type object;
#L1482ee.   v0:= new [|java:util:jar:Attributes$Name|];
#L1482f2.   v1:= "Implementation-Version" @type (object, string);
#L1482f6.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1482fc.   @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VERSION|] := v0  @type object;
#L148300.   v0:= new [|java:util:jar:Attributes$Name|];
#L148304.   v1:= "Implementation-Vendor" @type (object, string);
#L148308.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14830e.   @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VENDOR|] := v0  @type object;
#L148312.   v0:= new [|java:util:jar:Attributes$Name|];
#L148316.   v1:= "Specification-Title" @type (object, string);
#L14831a.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148320.   @@[|java:util:jar:Attributes$Name.SPECIFICATION_TITLE|] := v0  @type object;
#L148324.   v0:= new [|java:util:jar:Attributes$Name|];
#L148328.   v1:= "Specification-Version" @type (object, string);
#L14832c.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148332.   @@[|java:util:jar:Attributes$Name.SPECIFICATION_VERSION|] := v0  @type object;
#L148336.   v0:= new [|java:util:jar:Attributes$Name|];
#L14833a.   v1:= "Specification-Vendor" @type (object, string);
#L14833e.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148344.   @@[|java:util:jar:Attributes$Name.SPECIFICATION_VENDOR|] := v0  @type object;
#L148348.   v0:= new [|java:util:jar:Attributes$Name|];
#L14834c.   v1:= "Extension-List" @type (object, string);
#L148350.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148356.   @@[|java:util:jar:Attributes$Name.EXTENSION_LIST|] := v0  @type object;
#L14835a.   v0:= new [|java:util:jar:Attributes$Name|];
#L14835e.   v1:= "Extension-Name" @type (object, string);
#L148362.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148368.   @@[|java:util:jar:Attributes$Name.EXTENSION_NAME|] := v0  @type object;
#L14836c.   v0:= new [|java:util:jar:Attributes$Name|];
#L148370.   v1:= "Extension-Installation" @type (object, string);
#L148374.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14837a.   @@[|java:util:jar:Attributes$Name.EXTENSION_INSTALLATION|] := v0  @type object;
#L14837e.   v0:= new [|java:util:jar:Attributes$Name|];
#L148382.   v1:= "Implementation-Vendor-Id" @type (object, string);
#L148386.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14838c.   @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_VENDOR_ID|] := v0  @type object;
#L148390.   v0:= new [|java:util:jar:Attributes$Name|];
#L148394.   v1:= "Implementation-URL" @type (object, string);
#L148398.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14839e.   @@[|java:util:jar:Attributes$Name.IMPLEMENTATION_URL|] := v0  @type object;
#L1483a2.   v0:= new [|java:util:jar:Attributes$Name|];
#L1483a6.   v1:= "Name" @type (object, string);
#L1483aa.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1483b0.   @@[|java:util:jar:Attributes$Name.NAME|] := v0  @type object;
#L1483b4.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Attributes$Name.<init>|] ([|java:util:jar:Attributes$Name|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1483c8.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1483ce.   call temp:=  [|java:lang:String.isEmpty|](v5) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1483d4.   v2:= temp;
#L1483d6.   if v2 != 0 then goto L1483ea;
#L1483da.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1483e0.   v2:= temp;
#L1483e2.   v3:= 70  @length 16;
#L1483e6.   if v2 <= v3 then goto L1483f6;
#L1483ea.   v2:= new [|java:lang:IllegalArgumentException|];
#L1483ee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1483f4.   throw v2;
#L1483f6.   v1:= 0  @length 4;
#L1483f8.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1483fe.   v2:= temp;
#L148400.   if v1 >= v2 then goto L14845e;
#L148404.   call temp:=  [|java:lang:String.charAt|](v5, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L14840a.   v0:= temp;
#L14840c.   v2:= 97  @length 16;
#L148410.   if v0 < v2 then goto L14841c;
#L148414.   v2:= 122  @length 16;
#L148418.   if v0 <= v2 then goto L148458;
#L14841c.   v2:= 65  @length 16;
#L148420.   if v0 < v2 then goto L14842c;
#L148424.   v2:= 90  @length 16;
#L148428.   if v0 <= v2 then goto L148458;
#L14842c.   v2:= 95  @length 16;
#L148430.   if v0 == v2 then goto L148458;
#L148434.   v2:= 45  @length 16;
#L148438.   if v0 == v2 then goto L148458;
#L14843c.   v2:= 48  @length 16;
#L148440.   if v0 < v2 then goto L14844c;
#L148444.   v2:= 57  @length 16;
#L148448.   if v0 <= v2 then goto L148458;
#L14844c.   v2:= new [|java:lang:IllegalArgumentException|];
#L148450.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L148456.   throw v2;
#L148458.   v1:= v1 + 1;
#L14845c.   goto L1483f8;
#L14845e.   v4.[|java:util:jar:Attributes$Name.name|]  := v5 @type object;
#L148462.   return @void ;

   }
    procedure [|boolean|] [|java:util:jar:Attributes$Name.equals|] ([|java:util:jar:Attributes$Name|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L148474.   v0:= instanceof @varname v3 @type [|java:util:jar:Attributes$Name|];
#L148478.   if v0 == 0 then goto L148498;
#L14847c.   v3:= ([|java:util:jar:Attributes$Name|])v3;
#L148480.   v0:= v3.[|java:util:jar:Attributes$Name.name|]   @type object;
#L148484.   v1:= v2.[|java:util:jar:Attributes$Name.name|]   @type object;
#L148488.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v0, v1) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14848e.   v0:= temp;
#L148490.   if v0 == 0 then goto L148498;
#L148494.   v0:= 1  @length 4;
#L148496.   return v0;
#L148498.   v0:= 0  @length 4;
#L14849a.   goto L148496;

   }
    procedure [|java:lang:String|] [|java:util:jar:Attributes$Name.getName|] ([|java:util:jar:Attributes$Name|] v1 @type (this)) @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.getName:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L1484ac.   v0:= v1.[|java:util:jar:Attributes$Name.name|]   @type object;
#L1484b0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:jar:Attributes$Name.hashCode|] ([|java:util:jar:Attributes$Name|] v2 @type (this)) @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1484c4.   v0:= v2.[|java:util:jar:Attributes$Name.name|]   @type object;
#L1484c8.   v1:= @@[|java:util:Locale.US|]   @type object;
#L1484cc.   call temp:=  [|java:lang:String.toLowerCase|](v0, v1) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1484d2.   v0:= temp  @type object;
#L1484d4.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1484da.   v0:= temp;
#L1484dc.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:jar:Attributes$Name.toString|] ([|java:util:jar:Attributes$Name|] v1 @type (this)) @owner [|java:util:jar:Attributes$Name|] @signature [|Ljava/util/jar/Attributes$Name;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1484f0.   v0:= v1.[|java:util:jar:Attributes$Name.name|]   @type object;
#L1484f4.   return v0  @type object;

   }
record [|java:util:jar:Attributes|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Cloneable|], [|java:util:Map|] {
      [|java:util:Map|] [|java:util:jar:Attributes.map|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:util:jar:Attributes.<init>|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L148508.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14850e.   v0:= new [|java:util:HashMap|];
#L148512.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L148518.   v1.[|java:util:jar:Attributes.map|]  := v0 @type object;
#L14851c.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Attributes.<init>|] ([|java:util:jar:Attributes|] v1 @type (this), [|int|] v2) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L148530.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L148536.   v0:= new [|java:util:HashMap|];
#L14853a.   call temp:=  [|java:util:HashMap.<init>|](v0, v2) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L148540.   v1.[|java:util:jar:Attributes.map|]  := v0 @type object;
#L148544.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Attributes.<init>|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:util:jar:Attributes|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.<init>:(Ljava/util/jar/Attributes;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L148558.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14855e.   v0:= v2.[|java:util:jar:Attributes.map|]   @type object;
#L148562.   v0:= ([|java:util:HashMap|])v0;
#L148566.   call temp:=  [|java:util:HashMap.clone|](v0) @signature [|Ljava/util/HashMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14856c.   v0:= temp  @type object;
#L14856e.   v0:= ([|java:util:Map|])v0;
#L148572.   v1.[|java:util:jar:Attributes.map|]  := v0 @type object;
#L148576.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Attributes.clear|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148588.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L14858c.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L148592.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:jar:Attributes.clone|] ([|java:util:jar:Attributes|] v3 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1485a4.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L1485aa.   v0:= temp  @type object;
#L1485ac.   v0:= ([|java:util:jar:Attributes|])v0;
#L1485b0.   v2:= v3.[|java:util:jar:Attributes.map|]   @type object;
#L1485b4.   v2:= ([|java:util:HashMap|])v2;
#L1485b8.   call temp:=  [|java:util:HashMap.clone|](v2) @signature [|Ljava/util/HashMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L1485be.   v2:= temp  @type object;
#L1485c0.   v2:= ([|java:util:Map|])v2;
#L1485c4.   v0.[|java:util:jar:Attributes.map|]  := v2 @type object;
#L1485c8.   return v0  @type object;
#L1485ca.   v1:= Exception  @type object;
#L1485cc.   v2:= new [|java:lang:AssertionError|];
#L1485d0.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L1485d6.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L1485a4..L1485b0] goto L1485ca;

   }
    procedure [|boolean|] [|java:util:jar:Attributes.containsKey|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1485f8.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L1485fc.   call temp:=  [|java:util:Map.containsKey|](v0, v2) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L148602.   v0:= temp;
#L148604.   return v0;

   }
    procedure [|boolean|] [|java:util:jar:Attributes.containsValue|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148618.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L14861c.   call temp:=  [|java:util:Map.containsValue|](v0, v2) @signature [|Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L148622.   v0:= temp;
#L148624.   return v0;

   }
    procedure [|java:util:Set|] [|java:util:jar:Attributes.entrySet|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148638.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L14863c.   call temp:=  [|java:util:Map.entrySet|](v0) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L148642.   v0:= temp  @type object;
#L148644.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:jar:Attributes.equals|] ([|java:util:jar:Attributes|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L148658.   if v2 != v3 then goto L148660;
#L14865c.   v0:= 1  @length 4;
#L14865e.   return v0;
#L148660.   v0:= instanceof @varname v3 @type [|java:util:jar:Attributes|];
#L148664.   if v0 == 0 then goto L14867e;
#L148668.   v0:= v2.[|java:util:jar:Attributes.map|]   @type object;
#L14866c.   v3:= ([|java:util:jar:Attributes|])v3;
#L148670.   v1:= v3.[|java:util:jar:Attributes.map|]   @type object;
#L148674.   call temp:=  [|java:lang:Object.equals|](v0, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14867a.   v0:= temp;
#L14867c.   goto L14865e;
#L14867e.   v0:= 0  @length 4;
#L148680.   goto L14865e;

   }
    procedure [|java:lang:Object|] [|java:util:jar:Attributes.get|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148694.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148698.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14869e.   v0:= temp  @type object;
#L1486a0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:jar:Attributes.getValue|] ([|java:util:jar:Attributes|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1486b4.   v0:= v2.[|java:util:jar:Attributes.map|]   @type object;
#L1486b8.   v1:= new [|java:util:jar:Attributes$Name|];
#L1486bc.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v1, v3) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L1486c2.   call temp:=  [|java:util:Map.get|](v0, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1486c8.   v0:= temp  @type object;
#L1486ca.   v0:= ([|java:lang:String|])v0;
#L1486ce.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:jar:Attributes.getValue|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:util:jar:Attributes$Name|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1486e0.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L1486e4.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1486ea.   v0:= temp  @type object;
#L1486ec.   v0:= ([|java:lang:String|])v0;
#L1486f0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:jar:Attributes.hashCode|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148704.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148708.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14870e.   v0:= temp;
#L148710.   return v0;

   }
    procedure [|boolean|] [|java:util:jar:Attributes.isEmpty|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148724.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148728.   call temp:=  [|java:util:Map.isEmpty|](v0) @signature [|Ljava/util/Map;.isEmpty:()Z|] @classDescriptor [|java:util:Map|] @type interface;
#L14872e.   v0:= temp;
#L148730.   return v0;

   }
    procedure [|java:util:Set|] [|java:util:jar:Attributes.keySet|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148744.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148748.   call temp:=  [|java:util:Map.keySet|](v0) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L14874e.   v0:= temp  @type object;
#L148750.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:jar:Attributes.put|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148764.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148768.   v2:= ([|java:util:jar:Attributes$Name|])v2;
#L14876c.   v3:= ([|java:lang:String|])v3;
#L148770.   call temp:=  [|java:util:Map.put|](v0, v2, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L148776.   v0:= temp  @type object;
#L148778.   return v0  @type object;

   }
    procedure [|void|] [|java:util:jar:Attributes.putAll|] ([|java:util:jar:Attributes|] v3 @type (this), [|java:util:Map|] v4 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.putAll:(Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14878c.   if v4 == 0 then goto L148798;
#L148790.   v0:= instanceof @varname v4 @type [|java:util:jar:Attributes|];
#L148794.   if v0 != 0 then goto L1487da;
#L148798.   v0:= new [|java:lang:ClassCastException|];
#L14879c.   v1:= new [|java:lang:StringBuilder|];
#L1487a0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1487a6.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1487ac.   v2:= temp  @type object;
#L1487ae.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1487b4.   v2:= temp  @type object;
#L1487b6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1487bc.   v1:= temp  @type object;
#L1487be.   v2:= " not an Attributes" @type (object, string);
#L1487c2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1487c8.   v1:= temp  @type object;
#L1487ca.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1487d0.   v1:= temp  @type object;
#L1487d2.   call temp:=  [|java:lang:ClassCastException.<init>|](v0, v1) @signature [|Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L1487d8.   throw v0;
#L1487da.   v0:= v3.[|java:util:jar:Attributes.map|]   @type object;
#L1487de.   call temp:=  [|java:util:Map.putAll|](v0, v4) @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:Map|] @type interface;
#L1487e4.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:jar:Attributes.putValue|] ([|java:util:jar:Attributes|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.putValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1487f8.   v0:= v2.[|java:util:jar:Attributes.map|]   @type object;
#L1487fc.   v1:= new [|java:util:jar:Attributes$Name|];
#L148800.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v1, v3) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148806.   call temp:=  [|java:util:Map.put|](v0, v1, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14880c.   v0:= temp  @type object;
#L14880e.   v0:= ([|java:lang:String|])v0;
#L148812.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:jar:Attributes.remove|] ([|java:util:jar:Attributes|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148824.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148828.   call temp:=  [|java:util:Map.remove|](v0, v2) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14882e.   v0:= temp  @type object;
#L148830.   return v0  @type object;

   }
    procedure [|int|] [|java:util:jar:Attributes.size|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148844.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148848.   call temp:=  [|java:util:Map.size|](v0) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L14884e.   v0:= temp;
#L148850.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:jar:Attributes.values|] ([|java:util:jar:Attributes|] v1 @type (this)) @owner [|java:util:jar:Attributes|] @signature [|Ljava/util/jar/Attributes;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148864.   v0:= v1.[|java:util:jar:Attributes.map|]   @type object;
#L148868.   call temp:=  [|java:util:Map.values|](v0) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L14886e.   v0:= temp  @type object;
#L148870.   return v0  @type object;

   }
record [|java:util:jar:InitManifest|]  @type class @AccessFlag   {
      [|byte|][] [|java:util:jar:InitManifest.buf|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:jar:InitManifest.consecutiveLineBreaks|]    @AccessFlag PRIVATE;
      [|java:util:jar:Attributes$Name|] [|java:util:jar:InitManifest.name|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:jar:InitManifest.pos|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:jar:InitManifest.value|]    @AccessFlag PRIVATE;
      [|java:lang:UnsafeByteSequence|] [|java:util:jar:InitManifest.valueBuffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:jar:InitManifest.<init>|] ([|java:util:jar:InitManifest|] v3 @type (this), [|byte|][] v4, [|java:util:jar:Attributes|] v5 @type (object), [|java:util:jar:Attributes$Name|] v6 @type (object)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.<init>:([BLjava/util/jar/Attributes;Ljava/util/jar/Attributes$Name;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L148884.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14888a.   v0:= new [|java:lang:UnsafeByteSequence|];
#L14888e.   v1:= 80  @length 16;
#L148892.   call temp:=  [|java:lang:UnsafeByteSequence.<init>|](v0, v1) @signature [|Ljava/lang/UnsafeByteSequence;.<init>:(I)V|] @classDescriptor [|java:lang:UnsafeByteSequence|] @type direct;
#L148898.   v3.[|java:util:jar:InitManifest.valueBuffer|]  := v0 @type object;
#L14889c.   v0:= 0  @length 4;
#L14889e.   v3.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v0;
#L1488a2.   v3.[|java:util:jar:InitManifest.buf|]  := v4 @type object;
#L1488a6.   call temp:=  [|java:util:jar:InitManifest.readHeader|](v3) @signature [|Ljava/util/jar/InitManifest;.readHeader:()Z|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L1488ac.   v0:= temp;
#L1488ae.   if v0 == 0 then goto L1488c6;
#L1488b2.   if v6 == 0 then goto L1488f8;
#L1488b6.   v0:= v3.[|java:util:jar:InitManifest.name|]   @type object;
#L1488ba.   call temp:=  [|java:util:jar:Attributes$Name.equals|](v0, v6) @signature [|Ljava/util/jar/Attributes$Name;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:jar:Attributes$Name|] @type virtual;
#L1488c0.   v0:= temp;
#L1488c2.   if v0 != 0 then goto L1488f8;
#L1488c6.   v0:= new [|java:io:IOException|];
#L1488ca.   v1:= new [|java:lang:StringBuilder|];
#L1488ce.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1488d4.   v2:= "Missing version attribute: " @type (object, string);
#L1488d8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1488de.   v1:= temp  @type object;
#L1488e0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1488e6.   v1:= temp  @type object;
#L1488e8.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1488ee.   v1:= temp  @type object;
#L1488f0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1488f6.   throw v0;
#L1488f8.   v0:= v3.[|java:util:jar:InitManifest.name|]   @type object;
#L1488fc.   v1:= v3.[|java:util:jar:InitManifest.value|]   @type object;
#L148900.   call temp:=  [|java:util:jar:Attributes.put|](v5, v0, v1) @signature [|Ljava/util/jar/Attributes;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L148906.   call temp:=  [|java:util:jar:InitManifest.readHeader|](v3) @signature [|Ljava/util/jar/InitManifest;.readHeader:()Z|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L14890c.   v0:= temp;
#L14890e.   if v0 == 0 then goto L148922;
#L148912.   v0:= v3.[|java:util:jar:InitManifest.name|]   @type object;
#L148916.   v1:= v3.[|java:util:jar:InitManifest.value|]   @type object;
#L14891a.   call temp:=  [|java:util:jar:Attributes.put|](v5, v0, v1) @signature [|Ljava/util/jar/Attributes;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L148920.   goto L148906;
#L148922.   return @void ;

   }
    procedure [|boolean|] [|java:util:jar:InitManifest.readHeader|] ([|java:util:jar:InitManifest|] v3 @type (this)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.readHeader:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L148934.   v0:= 1  @length 4;
#L148936.   v1:= 0  @length 4;
#L148938.   v2:= v3.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L14893c.   if v2 <= v0 then goto L148946;
#L148940.   v3.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v1;
#L148944.   return v1;
#L148946.   call temp:=  [|java:util:jar:InitManifest.readName|](v3) @signature [|Ljava/util/jar/InitManifest;.readName:()V|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L14894c.   v3.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v1;
#L148950.   call temp:=  [|java:util:jar:InitManifest.readValue|](v3) @signature [|Ljava/util/jar/InitManifest;.readValue:()V|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L148956.   v2:= v3.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L14895a.   if v2 <= 0 then goto L148962;
#L14895e.   v1:= v0;
#L148960.   goto L148944;
#L148962.   v0:= v1;
#L148964.   goto L14895e;

   }
    procedure [|void|] [|java:util:jar:InitManifest.readName|] ([|java:util:jar:InitManifest|] v7 @type (this)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.readName:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L148978.   v1:= v7.[|java:util:jar:InitManifest.pos|] ;
#L14897c.   v3:= v7.[|java:util:jar:InitManifest.pos|] ;
#L148980.   v4:= v7.[|java:util:jar:InitManifest.buf|]   @type object;
#L148984.   v4:= v4.length;
#L148986.   if v3 >= v4 then goto L148a10;
#L14898a.   v3:= v7.[|java:util:jar:InitManifest.buf|]   @type object;
#L14898e.   v4:= v7.[|java:util:jar:InitManifest.pos|] ;
#L148992.   v5:= v4 + 1;
#L148996.   v7.[|java:util:jar:InitManifest.pos|]  := v5;
#L14899a.   v3:= v3[v4]  @byte;
#L14899e.   v4:= 58  @length 16;
#L1489a2.   if v3 != v4 then goto L14897c;
#L1489a6.   v2:= new [|java:lang:String|];
#L1489aa.   v3:= v7.[|java:util:jar:InitManifest.buf|]   @type object;
#L1489ae.   v4:= v7.[|java:util:jar:InitManifest.pos|] ;
#L1489b2.   v4:= v4 - v1  @type int;
#L1489b4.   v4:= v4 + -1;
#L1489b8.   v5:= @@[|java:nio:charset:Charsets.US_ASCII|]   @type object;
#L1489bc.   call temp:=  [|java:lang:String.<init>|](v2, v3, v1, v4, v5) @signature [|Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V|] @classDescriptor [|java:lang:String|] @type direct;
#L1489c2.   v3:= v7.[|java:util:jar:InitManifest.buf|]   @type object;
#L1489c6.   v4:= v7.[|java:util:jar:InitManifest.pos|] ;
#L1489ca.   v5:= v4 + 1;
#L1489ce.   v7.[|java:util:jar:InitManifest.pos|]  := v5;
#L1489d2.   v3:= v3[v4]  @byte;
#L1489d6.   v4:= 32  @length 16;
#L1489da.   if v3 == v4 then goto L148a02;
#L1489de.   v3:= new [|java:io:IOException|];
#L1489e2.   v4:= "Invalid value for attribute '%s'" @type (object, string);
#L1489e6.   v5:= 1  @length 4;
#L1489e8.   v5:= new [|java:lang:Object|][v5];
#L1489ec.   v6:= 0  @length 4;
#L1489ee.   v5[v6]:= v2  @type object;
#L1489f2.   call temp:=  [|java:lang:String.format|](v4, v5) @signature [|Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L1489f8.   v4:= temp  @type object;
#L1489fa.   call temp:=  [|java:io:IOException.<init>|](v3, v4) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L148a00.   throw v3;
#L148a02.   v3:= new [|java:util:jar:Attributes$Name|];
#L148a06.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v3, v2) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L148a0c.   v7.[|java:util:jar:InitManifest.name|]  := v3 @type object;
#L148a10.   return @void ;
#L148a12.   v0:= Exception  @type object;
#L148a14.   v3:= new [|java:io:IOException|];
#L148a18.   call temp:=  [|java:lang:IllegalArgumentException.getMessage|](v0) @signature [|Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalArgumentException|] @type virtual;
#L148a1e.   v4:= temp  @type object;
#L148a20.   call temp:=  [|java:io:IOException.<init>|](v3, v4) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L148a26.   throw v3;
  catch  [|java:lang:IllegalArgumentException|] @[L148a02..L148a10] goto L148a12;

   }
    procedure [|void|] [|java:util:jar:InitManifest.readValue|] ([|java:util:jar:InitManifest|] v8 @type (this)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.readValue:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L148a48.   v7:= 1  @length 4;
#L148a4a.   v1:= 0  @length 4;
#L148a4c.   v2:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148a50.   v0:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148a54.   v4:= v8.[|java:util:jar:InitManifest.valueBuffer|]   @type object;
#L148a58.   call temp:=  [|java:lang:UnsafeByteSequence.rewind|](v4) @signature [|Ljava/lang/UnsafeByteSequence;.rewind:()V|] @classDescriptor [|java:lang:UnsafeByteSequence|] @type virtual;
#L148a5e.   v4:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148a62.   v5:= v8.[|java:util:jar:InitManifest.buf|]   @type object;
#L148a66.   v5:= v5.length;
#L148a68.   if v4 >= v5 then goto L148a9a;
#L148a6c.   v4:= v8.[|java:util:jar:InitManifest.buf|]   @type object;
#L148a70.   v5:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148a74.   v6:= v5 + 1;
#L148a78.   v8.[|java:util:jar:InitManifest.pos|]  := v6;
#L148a7c.   v3:= v4[v5]  @byte;
#L148a80.   goto L148b24;
#L148a86.   v4:= v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L148a8a.   if v4 < v7 then goto L148b1e;
#L148a8e.   v4:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148a92.   v4:= v4 + -1;
#L148a96.   v8.[|java:util:jar:InitManifest.pos|]  := v4;
#L148a9a.   v4:= v8.[|java:util:jar:InitManifest.valueBuffer|]   @type object;
#L148a9e.   v5:= v8.[|java:util:jar:InitManifest.buf|]   @type object;
#L148aa2.   v6:= v0 - v2  @type int;
#L148aa6.   call temp:=  [|java:lang:UnsafeByteSequence.write|](v4, v5, v2, v6) @signature [|Ljava/lang/UnsafeByteSequence;.write:([BII)V|] @classDescriptor [|java:lang:UnsafeByteSequence|] @type virtual;
#L148aac.   v4:= v8.[|java:util:jar:InitManifest.valueBuffer|]   @type object;
#L148ab0.   v5:= @@[|java:nio:charset:Charsets.UTF_8|]   @type object;
#L148ab4.   call temp:=  [|java:lang:UnsafeByteSequence.toString|](v4, v5) @signature [|Ljava/lang/UnsafeByteSequence;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;|] @classDescriptor [|java:lang:UnsafeByteSequence|] @type virtual;
#L148aba.   v4:= temp  @type object;
#L148abc.   v8.[|java:util:jar:InitManifest.value|]  := v4 @type object;
#L148ac0.   return @void ;
#L148ac2.   v4:= new [|java:io:IOException|];
#L148ac6.   v5:= "NUL character in a manifest" @type (object, string);
#L148aca.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L148ad0.   throw v4;
#L148ad2.   if v1 == 0 then goto L148ada;
#L148ad6.   v1:= 0  @length 4;
#L148ad8.   goto L148a5e;
#L148ada.   v4:= v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L148ade.   v4:= v4 + 1;
#L148ae2.   v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v4;
#L148ae6.   goto L148a5e;
#L148ae8.   v1:= 1  @length 4;
#L148aea.   v4:= v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L148aee.   v4:= v4 + 1;
#L148af2.   v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v4;
#L148af6.   goto L148a5e;
#L148af8.   v4:= v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|] ;
#L148afc.   if v4 != v7 then goto L148a86;
#L148b00.   v4:= v8.[|java:util:jar:InitManifest.valueBuffer|]   @type object;
#L148b04.   v5:= v8.[|java:util:jar:InitManifest.buf|]   @type object;
#L148b08.   v6:= v0 - v2  @type int;
#L148b0c.   call temp:=  [|java:lang:UnsafeByteSequence.write|](v4, v5, v2, v6) @signature [|Ljava/lang/UnsafeByteSequence;.write:([BII)V|] @classDescriptor [|java:lang:UnsafeByteSequence|] @type virtual;
#L148b12.   v2:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148b16.   v4:= 0  @length 4;
#L148b18.   v8.[|java:util:jar:InitManifest.consecutiveLineBreaks|]  := v4;
#L148b1c.   goto L148a5e;
#L148b1e.   v0:= v8.[|java:util:jar:InitManifest.pos|] ;
#L148b22.   goto L148a5e;
#L148b24.   switch v3
                 | 0 => goto L148ac2
                 | 10 => goto L148ad2
                 | 13 => goto L148ae8
                 | 32 => goto L148af8
                 | => goto L148a86;

   }
    procedure [|int|] [|java:util:jar:InitManifest.getPos|] ([|java:util:jar:InitManifest|] v1 @type (this)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.getPos:()I|] @Access  {
      local temp ;
        v0;
      
#L148b58.   v0:= v1.[|java:util:jar:InitManifest.pos|] ;
#L148b5c.   return v0;

   }
    procedure [|void|] [|java:util:jar:InitManifest.initEntries|] ([|java:util:jar:InitManifest|] v5 @type (this), [|java:util:Map|] v6 @type (object), [|java:util:Map|] v7 @type (object)) @owner [|java:util:jar:InitManifest|] @signature [|Ljava/util/jar/InitManifest;.initEntries:(Ljava/util/Map;Ljava/util/Map;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L148b70.   v2:= v5.[|java:util:jar:InitManifest.pos|] ;
#L148b74.   call temp:=  [|java:util:jar:InitManifest.readHeader|](v5) @signature [|Ljava/util/jar/InitManifest;.readHeader:()Z|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L148b7a.   v3:= temp;
#L148b7c.   if v3 == 0 then goto L148c22;
#L148b80.   v3:= @@[|java:util:jar:Attributes$Name.NAME|]   @type object;
#L148b84.   v4:= v5.[|java:util:jar:InitManifest.name|]   @type object;
#L148b88.   call temp:=  [|java:util:jar:Attributes$Name.equals|](v3, v4) @signature [|Ljava/util/jar/Attributes$Name;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:jar:Attributes$Name|] @type virtual;
#L148b8e.   v3:= temp;
#L148b90.   if v3 != 0 then goto L148ba4;
#L148b94.   v3:= new [|java:io:IOException|];
#L148b98.   v4:= "Entry is not named" @type (object, string);
#L148b9c.   call temp:=  [|java:io:IOException.<init>|](v3, v4) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L148ba2.   throw v3;
#L148ba4.   v1:= v5.[|java:util:jar:InitManifest.value|]   @type object;
#L148ba8.   call temp:=  [|java:util:Map.get|](v6, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L148bae.   v0:= temp  @type object;
#L148bb0.   v0:= ([|java:util:jar:Attributes|])v0;
#L148bb4.   if v0 != 0 then goto L148bc6;
#L148bb8.   v0:= new [|java:util:jar:Attributes|];
#L148bbc.   v3:= 12  @length 16;
#L148bc0.   call temp:=  [|java:util:jar:Attributes.<init>|](v0, v3) @signature [|Ljava/util/jar/Attributes;.<init>:(I)V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L148bc6.   call temp:=  [|java:util:jar:InitManifest.readHeader|](v5) @signature [|Ljava/util/jar/InitManifest;.readHeader:()Z|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L148bcc.   v3:= temp;
#L148bce.   if v3 == 0 then goto L148be2;
#L148bd2.   v3:= v5.[|java:util:jar:InitManifest.name|]   @type object;
#L148bd6.   v4:= v5.[|java:util:jar:InitManifest.value|]   @type object;
#L148bda.   call temp:=  [|java:util:jar:Attributes.put|](v0, v3, v4) @signature [|Ljava/util/jar/Attributes;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L148be0.   goto L148bc6;
#L148be2.   if v7 == 0 then goto L148c1a;
#L148be6.   call temp:=  [|java:util:Map.get|](v7, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L148bec.   v3:= temp  @type object;
#L148bee.   if v3 == 0 then goto L148c02;
#L148bf2.   v3:= new [|java:io:IOException|];
#L148bf6.   v4:= "A jar verifier does not support more than one entry with the same name" @type (object, string);
#L148bfa.   call temp:=  [|java:io:IOException.<init>|](v3, v4) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L148c00.   throw v3;
#L148c02.   v3:= new [|java:util:jar:Manifest$Chunk|];
#L148c06.   v4:= v5.[|java:util:jar:InitManifest.pos|] ;
#L148c0a.   call temp:=  [|java:util:jar:Manifest$Chunk.<init>|](v3, v2, v4) @signature [|Ljava/util/jar/Manifest$Chunk;.<init>:(II)V|] @classDescriptor [|java:util:jar:Manifest$Chunk|] @type direct;
#L148c10.   call temp:=  [|java:util:Map.put|](v7, v1, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L148c16.   v2:= v5.[|java:util:jar:InitManifest.pos|] ;
#L148c1a.   call temp:=  [|java:util:Map.put|](v6, v1, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L148c20.   goto L148b74;
#L148c22.   return @void ;

   }
record [|java:util:zip:ZipConstants|]  @type interface @AccessFlag INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|java:util:zip:ZipConstants.CENATT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENATX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENCOM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENCRC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENDSK|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENEXT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENFLG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENHDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENHOW|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENLEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENNAM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENOFF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:util:zip:ZipConstants.CENSIG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENSIZ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENTIM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENVEM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.CENVER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDCOM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDHDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDOFF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:util:zip:ZipConstants.ENDSIG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDSIZ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDSUB|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.ENDTOT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.EXTCRC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.EXTHDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.EXTLEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:util:zip:ZipConstants.EXTSIG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.EXTSIZ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCCRC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCEXT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCFLG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCHDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCHOW|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCLEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCNAM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:util:zip:ZipConstants.LOCSIG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCSIZ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCTIM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipConstants.LOCVER|]    @AccessFlag PUBLIC_STATIC_FINAL;
record [|java:util:zip:ZipEntry|]  @type class @AccessFlag PUBLIC extends  [|java:util:zip:ZipConstants|], [|java:lang:Cloneable|] {
      [|java:lang:String|] [|java:util:zip:ZipEntry.comment|]    @AccessFlag ;
      [|long|] [|java:util:zip:ZipEntry.compressedSize|]    @AccessFlag ;
      [|int|] [|java:util:zip:ZipEntry.compressionMethod|]    @AccessFlag ;
      [|long|] [|java:util:zip:ZipEntry.crc|]    @AccessFlag ;
      [|byte|][] [|java:util:zip:ZipEntry.extra|]    @AccessFlag ;
      [|long|] [|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]    @AccessFlag ;
      [|int|] [|java:util:zip:ZipEntry.modDate|]    @AccessFlag ;
      [|java:lang:String|] [|java:util:zip:ZipEntry.name|]    @AccessFlag ;
      [|int|] [|java:util:zip:ZipEntry.nameLength|]    @AccessFlag ;
      [|long|] [|java:util:zip:ZipEntry.size|]    @AccessFlag ;
      [|int|] [|java:util:zip:ZipEntry.time|]    @AccessFlag ;
   }
      global [|int|] @@[|java:util:zip:ZipEntry.DEFLATED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipEntry.STORED|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipEntry.<init>|] ([|java:util:zip:ZipEntry|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L148c34.   v1:= -1  @length wide16;
#L148c38.   v0:= -1  @length 4;
#L148c3a.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L148c40.   v3.[|java:util:zip:ZipEntry.compressedSize|]  := v1 @wide;
#L148c44.   v3.[|java:util:zip:ZipEntry.crc|]  := v1 @wide;
#L148c48.   v3.[|java:util:zip:ZipEntry.size|]  := v1 @wide;
#L148c4c.   v3.[|java:util:zip:ZipEntry.compressionMethod|]  := v0;
#L148c50.   v3.[|java:util:zip:ZipEntry.time|]  := v0;
#L148c54.   v3.[|java:util:zip:ZipEntry.modDate|]  := v0;
#L148c58.   v3.[|java:util:zip:ZipEntry.nameLength|]  := v0;
#L148c5c.   v3.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]  := v1 @wide;
#L148c60.   if v4 != 0 then goto L148c74;
#L148c64.   v0:= new [|java:lang:NullPointerException|];
#L148c68.   v1:= "name == null" @type (object, string);
#L148c6c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L148c72.   throw v0;
#L148c74.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L148c7a.   v0:= temp;
#L148c7c.    v1:= 0.000000;
#L148c82.   if v0 <= v1 then goto L148cc0;
#L148c86.   v0:= new [|java:lang:IllegalArgumentException|];
#L148c8a.   v1:= new [|java:lang:StringBuilder|];
#L148c8e.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L148c94.   v2:= "Name too long: " @type (object, string);
#L148c98.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148c9e.   v1:= temp  @type object;
#L148ca0.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L148ca6.   v2:= temp;
#L148ca8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148cae.   v1:= temp  @type object;
#L148cb0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L148cb6.   v1:= temp  @type object;
#L148cb8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L148cbe.   throw v0;
#L148cc0.   v3.[|java:util:zip:ZipEntry.name|]  := v4 @type object;
#L148cc4.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.<init>|] ([|java:util:zip:ZipEntry|] v3 @type (this), [|java:util:zip:ZipEntry|] v4 @type (object)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L148cd8.   v1:= -1  @length wide16;
#L148cdc.   v0:= -1  @length 4;
#L148cde.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L148ce4.   v3.[|java:util:zip:ZipEntry.compressedSize|]  := v1 @wide;
#L148ce8.   v3.[|java:util:zip:ZipEntry.crc|]  := v1 @wide;
#L148cec.   v3.[|java:util:zip:ZipEntry.size|]  := v1 @wide;
#L148cf0.   v3.[|java:util:zip:ZipEntry.compressionMethod|]  := v0;
#L148cf4.   v3.[|java:util:zip:ZipEntry.time|]  := v0;
#L148cf8.   v3.[|java:util:zip:ZipEntry.modDate|]  := v0;
#L148cfc.   v3.[|java:util:zip:ZipEntry.nameLength|]  := v0;
#L148d00.   v3.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]  := v1 @wide;
#L148d04.   v0:= v4.[|java:util:zip:ZipEntry.name|]   @type object;
#L148d08.   v3.[|java:util:zip:ZipEntry.name|]  := v0 @type object;
#L148d0c.   v0:= v4.[|java:util:zip:ZipEntry.comment|]   @type object;
#L148d10.   v3.[|java:util:zip:ZipEntry.comment|]  := v0 @type object;
#L148d14.   v0:= v4.[|java:util:zip:ZipEntry.time|] ;
#L148d18.   v3.[|java:util:zip:ZipEntry.time|]  := v0;
#L148d1c.   v0:= v4.[|java:util:zip:ZipEntry.size|]   @wide;
#L148d20.   v3.[|java:util:zip:ZipEntry.size|]  := v0 @wide;
#L148d24.   v0:= v4.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L148d28.   v3.[|java:util:zip:ZipEntry.compressedSize|]  := v0 @wide;
#L148d2c.   v0:= v4.[|java:util:zip:ZipEntry.crc|]   @wide;
#L148d30.   v3.[|java:util:zip:ZipEntry.crc|]  := v0 @wide;
#L148d34.   v0:= v4.[|java:util:zip:ZipEntry.compressionMethod|] ;
#L148d38.   v3.[|java:util:zip:ZipEntry.compressionMethod|]  := v0;
#L148d3c.   v0:= v4.[|java:util:zip:ZipEntry.modDate|] ;
#L148d40.   v3.[|java:util:zip:ZipEntry.modDate|]  := v0;
#L148d44.   v0:= v4.[|java:util:zip:ZipEntry.extra|]   @type object;
#L148d48.   v3.[|java:util:zip:ZipEntry.extra|]  := v0 @type object;
#L148d4c.   v0:= v4.[|java:util:zip:ZipEntry.nameLength|] ;
#L148d50.   v3.[|java:util:zip:ZipEntry.nameLength|]  := v0;
#L148d54.   v0:= v4.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]   @wide;
#L148d58.   v3.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]  := v0 @wide;
#L148d5c.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.<init>|] ([|java:util:zip:ZipEntry|] v13 @type (this), [|byte|][] v14, [|java:io:InputStream|] v15 @type (object)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.<init>:([BLjava/io/InputStream;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L148d70.   v11:= 0.000000L  @length wide;
#L148d7a.   v7:= -1  @length wide16;
#L148d7e.   v6:= -1  @length 4;
#L148d80.   v10:= 0  @length 4;
#L148d82.   call temp:=  [|java:lang:Object.<init>|](v13) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L148d88.   v13.[|java:util:zip:ZipEntry.compressedSize|]  := v7 @wide;
#L148d8c.   v13.[|java:util:zip:ZipEntry.crc|]  := v7 @wide;
#L148d90.   v13.[|java:util:zip:ZipEntry.size|]  := v7 @wide;
#L148d94.   v13.[|java:util:zip:ZipEntry.compressionMethod|]  := v6;
#L148d98.   v13.[|java:util:zip:ZipEntry.time|]  := v6;
#L148d9c.   v13.[|java:util:zip:ZipEntry.modDate|]  := v6;
#L148da0.   v13.[|java:util:zip:ZipEntry.nameLength|]  := v6;
#L148da4.   v13.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]  := v7 @wide;
#L148da8.   v6:= v14.length;
#L148daa.   call temp:=  [|libcore:io:Streams.readFully|](v15, v14, v10, v6) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L148db0.   v6:= v14.length;
#L148db2.   v7:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L148db6.   call temp:=  [|libcore:io:HeapBufferIterator.iterator|](v14, v10, v6, v7) @signature [|Llibcore/io/HeapBufferIterator;.iterator:([BIILjava/nio/ByteOrder;)Llibcore/io/BufferIterator;|] @classDescriptor [|libcore:io:HeapBufferIterator|] @type static;
#L148dbc.   v3:= temp  @type object;
#L148dbe.   call temp:=  [|libcore:io:BufferIterator.readInt|](v3) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148dc4.   v5:= temp;
#L148dc6.   v6:= (long)v5  @type i2l;
#L148dc8.    v8:= 0.000000  @length wide32;
#L148dce.   v6:= cmp(v6,v8);
#L148dd2.   if v6 == 0 then goto L148de6;
#L148dd6.   v6:= new [|java:util:zip:ZipException|];
#L148dda.   v7:= "Central Directory Entry not found" @type (object, string);
#L148dde.   call temp:=  [|java:util:zip:ZipException.<init>|](v6, v7) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L148de4.   throw v6;
#L148de6.   v6:= 10  @length 16;
#L148dea.   call temp:=  [|libcore:io:BufferIterator.seek|](v3, v6) @signature [|Llibcore/io/BufferIterator;.seek:(I)V|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148df0.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148df6.   v6:= temp;
#L148df8.   v13.[|java:util:zip:ZipEntry.compressionMethod|]  := v6;
#L148dfc.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e02.   v6:= temp;
#L148e04.   v13.[|java:util:zip:ZipEntry.time|]  := v6;
#L148e08.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e0e.   v6:= temp;
#L148e10.   v13.[|java:util:zip:ZipEntry.modDate|]  := v6;
#L148e14.   call temp:=  [|libcore:io:BufferIterator.readInt|](v3) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e1a.   v6:= temp;
#L148e1c.   v6:= (long)v6  @type i2l;
#L148e1e.   v6:= v6 ^& v11  @type long;
#L148e20.   v13.[|java:util:zip:ZipEntry.crc|]  := v6 @wide;
#L148e24.   call temp:=  [|libcore:io:BufferIterator.readInt|](v3) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e2a.   v6:= temp;
#L148e2c.   v6:= (long)v6  @type i2l;
#L148e2e.   v6:= v6 ^& v11  @type long;
#L148e30.   v13.[|java:util:zip:ZipEntry.compressedSize|]  := v6 @wide;
#L148e34.   call temp:=  [|libcore:io:BufferIterator.readInt|](v3) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e3a.   v6:= temp;
#L148e3c.   v6:= (long)v6  @type i2l;
#L148e3e.   v6:= v6 ^& v11  @type long;
#L148e40.   v13.[|java:util:zip:ZipEntry.size|]  := v6 @wide;
#L148e44.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e4a.   v6:= temp;
#L148e4c.   v13.[|java:util:zip:ZipEntry.nameLength|]  := v6;
#L148e50.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e56.   v2:= temp;
#L148e58.   call temp:=  [|libcore:io:BufferIterator.readShort|](v3) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e5e.   v1:= temp;
#L148e60.   v6:= 42  @length 16;
#L148e64.   call temp:=  [|libcore:io:BufferIterator.seek|](v3, v6) @signature [|Llibcore/io/BufferIterator;.seek:(I)V|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e6a.   call temp:=  [|libcore:io:BufferIterator.readInt|](v3) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L148e70.   v6:= temp;
#L148e72.   v6:= (long)v6  @type i2l;
#L148e74.   v6:= v6 ^& v11  @type long;
#L148e76.   v13.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]  := v6 @wide;
#L148e7a.   v6:= v13.[|java:util:zip:ZipEntry.nameLength|] ;
#L148e7e.   v4:= new [|byte|][v6];
#L148e82.   v6:= v4.length;
#L148e84.   call temp:=  [|libcore:io:Streams.readFully|](v15, v4, v10, v6) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L148e8a.   v6:= new [|java:lang:String|];
#L148e8e.   v7:= v4.length;
#L148e90.   v8:= @@[|java:nio:charset:Charsets.UTF_8|]   @type object;
#L148e94.   call temp:=  [|java:lang:String.<init>|](v6, v4, v10, v7, v8) @signature [|Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V|] @classDescriptor [|java:lang:String|] @type direct;
#L148e9a.   v13.[|java:util:zip:ZipEntry.name|]  := v6 @type object;
#L148e9e.   if v1 <= 0 then goto L148ec0;
#L148ea2.   v0:= new [|byte|][v1];
#L148ea6.   call temp:=  [|libcore:io:Streams.readFully|](v15, v0, v10, v1) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L148eac.   v6:= new [|java:lang:String|];
#L148eb0.   v7:= v0.length;
#L148eb2.   v8:= @@[|java:nio:charset:Charsets.UTF_8|]   @type object;
#L148eb6.   call temp:=  [|java:lang:String.<init>|](v6, v0, v10, v7, v8) @signature [|Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V|] @classDescriptor [|java:lang:String|] @type direct;
#L148ebc.   v13.[|java:util:zip:ZipEntry.comment|]  := v6 @type object;
#L148ec0.   if v2 <= 0 then goto L148ed6;
#L148ec4.   v6:= new [|byte|][v2];
#L148ec8.   v13.[|java:util:zip:ZipEntry.extra|]  := v6 @type object;
#L148ecc.   v6:= v13.[|java:util:zip:ZipEntry.extra|]   @type object;
#L148ed0.   call temp:=  [|libcore:io:Streams.readFully|](v15, v6, v10, v2) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L148ed6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:zip:ZipEntry.clone|] ([|java:util:zip:ZipEntry|] v3 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L148ee8.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L148eee.   v1:= temp  @type object;
#L148ef0.   v1:= ([|java:util:zip:ZipEntry|])v1;
#L148ef4.   v2:= v3.[|java:util:zip:ZipEntry.extra|]   @type object;
#L148ef8.   if v2 == 0 then goto L148f12;
#L148efc.   v2:= v3.[|java:util:zip:ZipEntry.extra|]   @type object;
#L148f00.   call temp:=  [|byte[].clone|](v2) @signature [|[B.clone:()Ljava/lang/Object;|] @classDescriptor [|byte[]|] @type virtual;
#L148f06.   v2:= temp  @type object;
#L148f08.   v2:= ([|byte|][])v2;
#L148f0c.   v1.[|java:util:zip:ZipEntry.extra|]  := v2 @type object;
#L148f10.   return v1  @type object;
#L148f12.   v2:= 0  @length 4;
#L148f14.   goto L148f0c;
#L148f16.   v0:= Exception  @type object;
#L148f18.   v2:= new [|java:lang:AssertionError|];
#L148f1c.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L148f22.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L148ee8..L148f10] goto L148f16;

   }
    procedure [|java:lang:String|] [|java:util:zip:ZipEntry.getComment|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getComment:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148f44.   v0:= v1.[|java:util:zip:ZipEntry.comment|]   @type object;
#L148f48.   return v0  @type object;

   }
    procedure [|long|] [|java:util:zip:ZipEntry.getCompressedSize|] ([|java:util:zip:ZipEntry|] v2 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getCompressedSize:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L148f5c.   v0:= v2.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L148f60.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:zip:ZipEntry.getCrc|] ([|java:util:zip:ZipEntry|] v2 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getCrc:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L148f74.   v0:= v2.[|java:util:zip:ZipEntry.crc|]   @wide;
#L148f78.   return v0  @type wide;

   }
    procedure [|byte|][] [|java:util:zip:ZipEntry.getExtra|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getExtra:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148f8c.   v0:= v1.[|java:util:zip:ZipEntry.extra|]   @type object;
#L148f90.   return v0  @type object;

   }
    procedure [|int|] [|java:util:zip:ZipEntry.getMethod|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148fa4.   v0:= v1.[|java:util:zip:ZipEntry.compressionMethod|] ;
#L148fa8.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:zip:ZipEntry.getName|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L148fbc.   v0:= v1.[|java:util:zip:ZipEntry.name|]   @type object;
#L148fc0.   return v0  @type object;

   }
    procedure [|long|] [|java:util:zip:ZipEntry.getSize|] ([|java:util:zip:ZipEntry|] v2 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getSize:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L148fd4.   v0:= v2.[|java:util:zip:ZipEntry.size|]   @wide;
#L148fd8.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:zip:ZipEntry.getTime|] ([|java:util:zip:ZipEntry|] v7 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.getTime:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L148fec.   v1:= v7.[|java:util:zip:ZipEntry.time|] ;
#L148ff0.   v2:= -1  @length 4;
#L148ff2.   if v1 == v2 then goto L149070;
#L148ff6.   v0:= new [|java:util:GregorianCalendar|];
#L148ffa.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0) @signature [|Ljava/util/GregorianCalendar;.<init>:()V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L149000.   v1:= 14  @length 16;
#L149004.   v2:= 0  @length 4;
#L149006.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L14900c.   v1:= v7.[|java:util:zip:ZipEntry.modDate|] ;
#L149010.   v1:= v1 ^> 9;
#L149014.   v1:= v1 ^& 127;
#L149018.   v1:= v1 + 1980;
#L14901c.   v2:= v7.[|java:util:zip:ZipEntry.modDate|] ;
#L149020.   v2:= v2 ^> 5;
#L149024.   v2:= v2 ^& 15;
#L149028.   v2:= v2 + -1;
#L14902c.   v3:= v7.[|java:util:zip:ZipEntry.modDate|] ;
#L149030.   v3:= v3 ^& 31;
#L149034.   v4:= v7.[|java:util:zip:ZipEntry.time|] ;
#L149038.   v4:= v4 ^> 11;
#L14903c.   v4:= v4 ^& 31;
#L149040.   v5:= v7.[|java:util:zip:ZipEntry.time|] ;
#L149044.   v5:= v5 ^> 5;
#L149048.   v5:= v5 ^& 63;
#L14904c.   v6:= v7.[|java:util:zip:ZipEntry.time|] ;
#L149050.   v6:= v6 ^& 31;
#L149054.   v6:= v6 ^< 1;
#L149058.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/GregorianCalendar;.set:(IIIIII)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L14905e.   call temp:=  [|java:util:GregorianCalendar.getTime|](v0) @signature [|Ljava/util/GregorianCalendar;.getTime:()Ljava/util/Date;|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L149064.   v1:= temp  @type object;
#L149066.   call temp:=  [|java:util:Date.getTime|](v1) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L14906c.   v1:= temp  @type wide;
#L14906e.   return v1  @type wide;
#L149070.   v1:= -1  @length wide16;
#L149074.   goto L14906e;

   }
    procedure [|int|] [|java:util:zip:ZipEntry.hashCode|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L149088.   v0:= v1.[|java:util:zip:ZipEntry.name|]   @type object;
#L14908c.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L149092.   v0:= temp;
#L149094.   return v0;

   }
    procedure [|boolean|] [|java:util:zip:ZipEntry.isDirectory|] ([|java:util:zip:ZipEntry|] v2 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.isDirectory:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1490a8.   v0:= v2.[|java:util:zip:ZipEntry.name|]   @type object;
#L1490ac.   v1:= v2.[|java:util:zip:ZipEntry.name|]   @type object;
#L1490b0.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1490b6.   v1:= temp;
#L1490b8.   v1:= v1 + -1;
#L1490bc.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L1490c2.   v0:= temp;
#L1490c4.   v1:= 47  @length 16;
#L1490c8.   if v0 != v1 then goto L1490d0;
#L1490cc.   v0:= 1  @length 4;
#L1490ce.   return v0;
#L1490d0.   v0:= 0  @length 4;
#L1490d2.   goto L1490ce;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setComment|] ([|java:util:zip:ZipEntry|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setComment:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1490e4.   if v3 == 0 then goto L1490fa;
#L1490e8.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1490ee.   v0:= temp;
#L1490f0.    v1:= 0.000000;
#L1490f6.   if v0 > v1 then goto L149100;
#L1490fa.   v2.[|java:util:zip:ZipEntry.comment|]  := v3 @type object;
#L1490fe.   return @void ;
#L149100.   v0:= new [|java:lang:IllegalArgumentException|];
#L149104.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14910a.   throw v0;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setCompressedSize|] ([|java:util:zip:ZipEntry|] v0 @type (this), [|long|] v1) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setCompressedSize:(J)V|] @Access PUBLIC {
      local temp ;
      
#L14911c.   v0.[|java:util:zip:ZipEntry.compressedSize|]  := v1 @wide;
#L149120.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setCrc|] ([|java:util:zip:ZipEntry|] v3 @type (this), [|long|] v4) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setCrc:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L149134.   v0:= 0  @length wide16;
#L149138.   v0:= cmp(v4,v0);
#L14913c.   if v0 < 0 then goto L149158;
#L149140.   v0:= 0.000000L  @length wide;
#L14914a.   v0:= cmp(v4,v0);
#L14914e.   if v0 > 0 then goto L149158;
#L149152.   v3.[|java:util:zip:ZipEntry.crc|]  := v4 @wide;
#L149156.   return @void ;
#L149158.   v0:= new [|java:lang:IllegalArgumentException|];
#L14915c.   v1:= new [|java:lang:StringBuilder|];
#L149160.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L149166.   v2:= "Bad CRC32: " @type (object, string);
#L14916a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149170.   v1:= temp  @type object;
#L149172.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149178.   v1:= temp  @type object;
#L14917a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149180.   v1:= temp  @type object;
#L149182.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L149188.   throw v0;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setExtra|] ([|java:util:zip:ZipEntry|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setExtra:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14919c.   if v3 == 0 then goto L1491ac;
#L1491a0.   v0:= v3.length;
#L1491a2.    v1:= 0.000000;
#L1491a8.   if v0 > v1 then goto L1491b2;
#L1491ac.   v2.[|java:util:zip:ZipEntry.extra|]  := v3 @type object;
#L1491b0.   return @void ;
#L1491b2.   v0:= new [|java:lang:IllegalArgumentException|];
#L1491b6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1491bc.   throw v0;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setMethod|] ([|java:util:zip:ZipEntry|] v3 @type (this), [|int|] v4) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setMethod:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1491d0.   if v4 == 0 then goto L14920e;
#L1491d4.   v0:= 8  @length 16;
#L1491d8.   if v4 == v0 then goto L14920e;
#L1491dc.   v0:= new [|java:lang:IllegalArgumentException|];
#L1491e0.   v1:= new [|java:lang:StringBuilder|];
#L1491e4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1491ea.   v2:= "Bad method: " @type (object, string);
#L1491ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1491f4.   v1:= temp  @type object;
#L1491f6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1491fc.   v1:= temp  @type object;
#L1491fe.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149204.   v1:= temp  @type object;
#L149206.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14920c.   throw v0;
#L14920e.   v3.[|java:util:zip:ZipEntry.compressionMethod|]  := v4;
#L149212.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setSize|] ([|java:util:zip:ZipEntry|] v3 @type (this), [|long|] v4) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setSize:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L149224.   v0:= 0  @length wide16;
#L149228.   v0:= cmp(v4,v0);
#L14922c.   if v0 < 0 then goto L149248;
#L149230.   v0:= 0.000000L  @length wide;
#L14923a.   v0:= cmp(v4,v0);
#L14923e.   if v0 > 0 then goto L149248;
#L149242.   v3.[|java:util:zip:ZipEntry.size|]  := v4 @wide;
#L149246.   return @void ;
#L149248.   v0:= new [|java:lang:IllegalArgumentException|];
#L14924c.   v1:= new [|java:lang:StringBuilder|];
#L149250.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L149256.   v2:= "Bad size: " @type (object, string);
#L14925a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149260.   v1:= temp  @type object;
#L149262.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149268.   v1:= temp  @type object;
#L14926a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149270.   v1:= temp  @type object;
#L149272.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L149278.   throw v0;

   }
    procedure [|void|] [|java:util:zip:ZipEntry.setTime|] ([|java:util:zip:ZipEntry|] v5 @type (this), [|long|] v6) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.setTime:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14928c.   v4:= 1  @length 4;
#L14928e.   v0:= new [|java:util:GregorianCalendar|];
#L149292.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0) @signature [|Ljava/util/GregorianCalendar;.<init>:()V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L149298.   v2:= new [|java:util:Date|];
#L14929c.   call temp:=  [|java:util:Date.<init>|](v2, v6, v7) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L1492a2.   call temp:=  [|java:util:GregorianCalendar.setTime|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L1492a8.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v4) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L1492ae.   v1:= temp;
#L1492b0.   v2:= 1980  @length 16;
#L1492b4.   if v1 >= v2 then goto L1492c8;
#L1492b8.   v2:= 33  @length 16;
#L1492bc.   v5.[|java:util:zip:ZipEntry.modDate|]  := v2;
#L1492c0.   v2:= 0  @length 4;
#L1492c2.   v5.[|java:util:zip:ZipEntry.time|]  := v2;
#L1492c6.   return @void ;
#L1492c8.   v2:= 5  @length 4;
#L1492ca.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L1492d0.   v2:= temp;
#L1492d2.   v5.[|java:util:zip:ZipEntry.modDate|]  := v2;
#L1492d6.   v2:= 2  @length 4;
#L1492d8.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L1492de.   v2:= temp;
#L1492e0.   v2:= v2 + 1;
#L1492e4.   v2:= v2 ^< 5;
#L1492e8.   v3:= v5.[|java:util:zip:ZipEntry.modDate|] ;
#L1492ec.   v2:= v2 ^| v3  @type int;
#L1492ee.   v5.[|java:util:zip:ZipEntry.modDate|]  := v2;
#L1492f2.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v4) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L1492f8.   v2:= temp;
#L1492fa.   v2:= v2 + -1980;
#L1492fe.   v2:= v2 ^< 9;
#L149302.   v3:= v5.[|java:util:zip:ZipEntry.modDate|] ;
#L149306.   v2:= v2 ^| v3  @type int;
#L149308.   v5.[|java:util:zip:ZipEntry.modDate|]  := v2;
#L14930c.   v2:= 13  @length 16;
#L149310.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L149316.   v2:= temp;
#L149318.   v2:= v2 ^> 1;
#L14931c.   v5.[|java:util:zip:ZipEntry.time|]  := v2;
#L149320.   v2:= 12  @length 16;
#L149324.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L14932a.   v2:= temp;
#L14932c.   v2:= v2 ^< 5;
#L149330.   v3:= v5.[|java:util:zip:ZipEntry.time|] ;
#L149334.   v2:= v2 ^| v3  @type int;
#L149336.   v5.[|java:util:zip:ZipEntry.time|]  := v2;
#L14933a.   v2:= 11  @length 16;
#L14933e.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L149344.   v2:= temp;
#L149346.   v2:= v2 ^< 11;
#L14934a.   v3:= v5.[|java:util:zip:ZipEntry.time|] ;
#L14934e.   v2:= v2 ^| v3  @type int;
#L149350.   v5.[|java:util:zip:ZipEntry.time|]  := v2;
#L149354.   goto L1492c6;

   }
    procedure [|java:lang:String|] [|java:util:zip:ZipEntry.toString|] ([|java:util:zip:ZipEntry|] v1 @type (this)) @owner [|java:util:zip:ZipEntry|] @signature [|Ljava/util/zip/ZipEntry;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L149368.   v0:= v1.[|java:util:zip:ZipEntry.name|]   @type object;
#L14936c.   return v0  @type object;

   }
record [|java:util:jar:JarEntry|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:ZipEntry|] {
      [|java:util:jar:Attributes|] [|java:util:jar:JarEntry.attributes|]    @AccessFlag PRIVATE;
      [|java:security:cert:CertificateFactory|] [|java:util:jar:JarEntry.factory|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:jar:JarEntry.isFactoryChecked|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarFile|] [|java:util:jar:JarEntry.parentJar|]    @AccessFlag ;
      [|java:security:CodeSigner|][] [|java:util:jar:JarEntry.signers|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:jar:JarEntry.<init>|] ([|java:util:jar:JarEntry|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L149380.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L149386.   v0:= 0  @length 4;
#L149388.   v1.[|java:util:jar:JarEntry.isFactoryChecked|]  := v0 @boolean;
#L14938c.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarEntry.<init>|] ([|java:util:jar:JarEntry|] v1 @type (this), [|java:util:jar:JarEntry|] v2 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/util/jar/JarEntry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1493a0.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L1493a6.   v0:= 0  @length 4;
#L1493a8.   v1.[|java:util:jar:JarEntry.isFactoryChecked|]  := v0 @boolean;
#L1493ac.   v0:= v2.[|java:util:jar:JarEntry.parentJar|]   @type object;
#L1493b0.   v1.[|java:util:jar:JarEntry.parentJar|]  := v0 @type object;
#L1493b4.   v0:= v2.[|java:util:jar:JarEntry.attributes|]   @type object;
#L1493b8.   v1.[|java:util:jar:JarEntry.attributes|]  := v0 @type object;
#L1493bc.   v0:= v2.[|java:util:jar:JarEntry.signers|]   @type object;
#L1493c0.   v1.[|java:util:jar:JarEntry.signers|]  := v0 @type object;
#L1493c4.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarEntry.<init>|] ([|java:util:jar:JarEntry|] v1 @type (this), [|java:util:zip:ZipEntry|] v2 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1493d8.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L1493de.   v0:= 0  @length 4;
#L1493e0.   v1.[|java:util:jar:JarEntry.isFactoryChecked|]  := v0 @boolean;
#L1493e4.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarEntry.addCodeSigner|] ([|java:util:jar:JarEntry|] v3 @type (this), [|java:util:ArrayList|] v4 @type (object), [|java:util:List|] v5 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.addCodeSigner:(Ljava/util/ArrayList;Ljava/util/List;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1493f8.   v2:= 1  @length 4;
#L1493fa.   v0:= 0  @length 4;
#L1493fc.   v1:= v3.[|java:util:jar:JarEntry.isFactoryChecked|]   @boolean;
#L149400.   if v1 != 0 then goto L149418;
#L149404.   v1:= "X.509" @type (object, string);
#L149408.   call temp:=  [|java:security:cert:CertificateFactory.getInstance|](v1) @signature [|Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;|] @classDescriptor [|java:security:cert:CertificateFactory|] @type static;
#L14940e.   v1:= temp  @type object;
#L149410.   v3.[|java:util:jar:JarEntry.factory|]  := v1 @type object;
#L149414.   v3.[|java:util:jar:JarEntry.isFactoryChecked|]  := v2 @boolean;
#L149418.   v1:= v3.[|java:util:jar:JarEntry.factory|]   @type object;
#L14941c.   if v1 != 0 then goto L149432;
#L149420.   return @void ;
#L149422.   v1:= Exception  @type object;
#L149424.   v3.[|java:util:jar:JarEntry.isFactoryChecked|]  := v2 @boolean;
#L149428.   goto L149418;
#L14942a.   v1:= Exception  @type object;
#L14942c.   v3.[|java:util:jar:JarEntry.isFactoryChecked|]  := v2 @boolean;
#L149430.   throw v1;
#L149432.   v1:= v3.[|java:util:jar:JarEntry.factory|]   @type object;
#L149436.   call temp:=  [|java:security:cert:CertificateFactory.generateCertPath|](v1, v5) @signature [|Ljava/security/cert/CertificateFactory;.generateCertPath:(Ljava/util/List;)Ljava/security/cert/CertPath;|] @classDescriptor [|java:security:cert:CertificateFactory|] @type virtual;
#L14943c.   v0:= temp  @type object;
#L14943e.   if v0 == 0 then goto L149420;
#L149442.   v1:= new [|java:security:CodeSigner|];
#L149446.   v2:= 0  @length 4;
#L149448.   call temp:=  [|java:security:CodeSigner.<init>|](v1, v0, v2) @signature [|Ljava/security/CodeSigner;.<init>:(Ljava/security/cert/CertPath;Ljava/security/Timestamp;)V|] @classDescriptor [|java:security:CodeSigner|] @type direct;
#L14944e.   call temp:=  [|java:util:ArrayList.add|](v4, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L149454.   goto L149420;
#L149456.   v1:= Exception  @type object;
#L149458.   goto L14943e;
  catch  [|java:security:cert:CertificateException|] @[L149404..L149414] goto L149422;
  catch  [|any|] @[L149404..L149414] goto L14942a;
  catch  [|java:security:cert:CertificateException|] @[L149432..L14943c] goto L149456;

   }
    procedure [|java:security:CodeSigner|][] [|java:util:jar:JarEntry.getCodeSigners|] ([|java:util:jar:JarEntry|] v11 @type (this), [|java:security:cert:Certificate|][] v12 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.getCodeSigners:([Ljava/security/cert/Certificate;)[Ljava/security/CodeSigner;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L149488.   v8:= 0  @length 4;
#L14948a.   if v12 != 0 then goto L149490;
#L14948e.   return v8  @type object;
#L149490.   v6:= 0  @length 4;
#L149492.   v5:= new [|java:util:ArrayList|];
#L149496.   v10:= v12.length;
#L149498.   call temp:=  [|java:util:ArrayList.<init>|](v5, v10) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14949e.   v1:= new [|java:util:ArrayList|];
#L1494a2.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1494a8.   v0:= v12  @type object;
#L1494aa.   v4:= v0.length;
#L1494ac.   v3:= 0  @length 4;
#L1494ae.   if v3 >= v4 then goto L1494fe;
#L1494b2.   v2:= v0[v3]  @type object;
#L1494b6.   v10:= instanceof @varname v2 @type [|java:security:cert:X509Certificate|];
#L1494ba.   if v10 != 0 then goto L1494c4;
#L1494be.   v3:= v3 + 1;
#L1494c2.   goto L1494ae;
#L1494c4.   v9:= v2  @type object;
#L1494c6.   v9:= ([|java:security:cert:X509Certificate|])v9;
#L1494ca.   if v6 == 0 then goto L1494ee;
#L1494ce.   call temp:=  [|java:security:cert:X509Certificate.getSubjectX500Principal|](v9) @signature [|Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1494d4.   v7:= temp  @type object;
#L1494d6.   call temp:=  [|javax:security:auth:x500:X500Principal.equals|](v6, v7) @signature [|Ljavax/security/auth/x500/X500Principal;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|javax:security:auth:x500:X500Principal|] @type virtual;
#L1494dc.   v10:= temp;
#L1494de.   if v10 != 0 then goto L1494ee;
#L1494e2.   call temp:=  [|java:util:jar:JarEntry.addCodeSigner|](v11, v1, v5) @signature [|Ljava/util/jar/JarEntry;.addCodeSigner:(Ljava/util/ArrayList;Ljava/util/List;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L1494e8.   call temp:=  [|java:util:ArrayList.clear|](v5) @signature [|Ljava/util/ArrayList;.clear:()V|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1494ee.   call temp:=  [|java:security:cert:X509Certificate.getIssuerX500Principal|](v9) @signature [|Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1494f4.   v6:= temp  @type object;
#L1494f6.   call temp:=  [|java:util:ArrayList.add|](v5, v9) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1494fc.   goto L1494be;
#L1494fe.   call temp:=  [|java:util:ArrayList.isEmpty|](v5) @signature [|Ljava/util/ArrayList;.isEmpty:()Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L149504.   v10:= temp;
#L149506.   if v10 != 0 then goto L149510;
#L14950a.   call temp:=  [|java:util:jar:JarEntry.addCodeSigner|](v11, v1, v5) @signature [|Ljava/util/jar/JarEntry;.addCodeSigner:(Ljava/util/ArrayList;Ljava/util/List;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L149510.   call temp:=  [|java:util:ArrayList.isEmpty|](v1) @signature [|Ljava/util/ArrayList;.isEmpty:()Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L149516.   v10:= temp;
#L149518.   if v10 != 0 then goto L14948e;
#L14951c.   call temp:=  [|java:util:ArrayList.size|](v1) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L149522.   v10:= temp;
#L149524.   v8:= new [|java:security:CodeSigner|][v10];
#L149528.   call temp:=  [|java:util:ArrayList.toArray|](v1, v8) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L14952e.   goto L14948e;

   }
    procedure [|java:util:jar:Attributes|] [|java:util:jar:JarEntry.getAttributes|] ([|java:util:jar:JarEntry|] v2 @type (this)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.getAttributes:()Ljava/util/jar/Attributes;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L149540.   v1:= v2.[|java:util:jar:JarEntry.attributes|]   @type object;
#L149544.   if v1 != 0 then goto L149550;
#L149548.   v1:= v2.[|java:util:jar:JarEntry.parentJar|]   @type object;
#L14954c.   if v1 != 0 then goto L149556;
#L149550.   v1:= v2.[|java:util:jar:JarEntry.attributes|]   @type object;
#L149554.   return v1  @type object;
#L149556.   v1:= v2.[|java:util:jar:JarEntry.parentJar|]   @type object;
#L14955a.   call temp:=  [|java:util:jar:JarFile.getManifest|](v1) @signature [|Ljava/util/jar/JarFile;.getManifest:()Ljava/util/jar/Manifest;|] @classDescriptor [|java:util:jar:JarFile|] @type virtual;
#L149560.   v0:= temp  @type object;
#L149562.   if v0 != 0 then goto L14956a;
#L149566.   v1:= 0  @length 4;
#L149568.   goto L149554;
#L14956a.   call temp:=  [|java:util:jar:JarEntry.getName|](v2) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L149570.   v1:= temp  @type object;
#L149572.   call temp:=  [|java:util:jar:Manifest.getAttributes|](v0, v1) @signature [|Ljava/util/jar/Manifest;.getAttributes:(Ljava/lang/String;)Ljava/util/jar/Attributes;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L149578.   v1:= temp  @type object;
#L14957a.   v2.[|java:util:jar:JarEntry.attributes|]  := v1 @type object;
#L14957e.   goto L149554;

   }
    procedure [|java:security:cert:Certificate|][] [|java:util:jar:JarEntry.getCertificates|] ([|java:util:jar:JarEntry|] v3 @type (this)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.getCertificates:()[Ljava/security/cert/Certificate;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L149590.   v1:= 0  @length 4;
#L149592.   v2:= v3.[|java:util:jar:JarEntry.parentJar|]   @type object;
#L149596.   if v2 != 0 then goto L14959c;
#L14959a.   return v1  @type object;
#L14959c.   v2:= v3.[|java:util:jar:JarEntry.parentJar|]   @type object;
#L1495a0.   v0:= v2.[|java:util:jar:JarFile.verifier|]   @type object;
#L1495a4.   if v0 == 0 then goto L14959a;
#L1495a8.   call temp:=  [|java:util:jar:JarEntry.getName|](v3) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L1495ae.   v1:= temp  @type object;
#L1495b0.   call temp:=  [|java:util:jar:JarVerifier.getCertificates|](v0, v1) @signature [|Ljava/util/jar/JarVerifier;.getCertificates:(Ljava/lang/String;)[Ljava/security/cert/Certificate;|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L1495b6.   v1:= temp  @type object;
#L1495b8.   goto L14959a;

   }
    procedure [|java:security:CodeSigner|][] [|java:util:jar:JarEntry.getCodeSigners|] ([|java:util:jar:JarEntry|] v4 @type (this)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.getCodeSigners:()[Ljava/security/CodeSigner;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1495cc.   v3:= 0  @length 4;
#L1495ce.   v1:= v4.[|java:util:jar:JarEntry.signers|]   @type object;
#L1495d2.   if v1 != 0 then goto L1495ea;
#L1495d6.   call temp:=  [|java:util:jar:JarEntry.getCertificates|](v4) @signature [|Ljava/util/jar/JarEntry;.getCertificates:()[Ljava/security/cert/Certificate;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L1495dc.   v1:= temp  @type object;
#L1495de.   call temp:=  [|java:util:jar:JarEntry.getCodeSigners|](v4, v1) @signature [|Ljava/util/jar/JarEntry;.getCodeSigners:([Ljava/security/cert/Certificate;)[Ljava/security/CodeSigner;|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L1495e4.   v1:= temp  @type object;
#L1495e6.   v4.[|java:util:jar:JarEntry.signers|]  := v1 @type object;
#L1495ea.   v1:= v4.[|java:util:jar:JarEntry.signers|]   @type object;
#L1495ee.   if v1 != 0 then goto L1495f6;
#L1495f2.   v0:= 0  @length 4;
#L1495f4.   return v0  @type object;
#L1495f6.   v1:= v4.[|java:util:jar:JarEntry.signers|]   @type object;
#L1495fa.   v1:= v1.length;
#L1495fc.   v0:= new [|java:security:CodeSigner|][v1];
#L149600.   v1:= v4.[|java:util:jar:JarEntry.signers|]   @type object;
#L149604.   v2:= v0.length;
#L149606.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L14960c.   goto L1495f4;

   }
    procedure [|void|] [|java:util:jar:JarEntry.setAttributes|] ([|java:util:jar:JarEntry|] v0 @type (this), [|java:util:jar:Attributes|] v1 @type (object)) @owner [|java:util:jar:JarEntry|] @signature [|Ljava/util/jar/JarEntry;.setAttributes:(Ljava/util/jar/Attributes;)V|] @Access  {
      local temp ;
      
#L149620.   v0.[|java:util:jar:JarEntry.attributes|]  := v1 @type object;
#L149624.   return @void ;

   }
record [|java:util:zip:ZipException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:util:zip:ZipException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipException.<init>|] ([|java:util:zip:ZipException|] v0 @type (this)) @owner [|java:util:zip:ZipException|] @signature [|Ljava/util/zip/ZipException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L149638.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14963e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipException.<init>|] ([|java:util:zip:ZipException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:zip:ZipException|] @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L149650.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L149656.   return @void ;

   }
record [|java:util:jar:JarException|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:ZipException|] {
   }
      global [|long|] @@[|java:util:jar:JarException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:JarException.<init>|] ([|java:util:jar:JarException|] v0 @type (this)) @owner [|java:util:jar:JarException|] @signature [|Ljava/util/jar/JarException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L149668.   call temp:=  [|java:util:zip:ZipException.<init>|](v0) @signature [|Ljava/util/zip/ZipException;.<init>:()V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14966e.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarException.<init>|] ([|java:util:jar:JarException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:jar:JarException|] @signature [|Ljava/util/jar/JarException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L149680.   call temp:=  [|java:util:zip:ZipException.<init>|](v0, v1) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L149686.   return @void ;

   }
record [|java:util:jar:JarFile$1JarFileEnumerator|]  @type class @AccessFlag  extends  [|java:util:Enumeration|] {
      [|java:util:jar:JarFile|] [|java:util:jar:JarFile$1JarFileEnumerator.jf|]    @AccessFlag ;
      [|java:util:jar:JarFile|] [|java:util:jar:JarFile$1JarFileEnumerator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:util:Enumeration|] [|java:util:jar:JarFile$1JarFileEnumerator.ze|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:jar:JarFile$1JarFileEnumerator.<init>|] ([|java:util:jar:JarFile$1JarFileEnumerator|] v0 @type (this), [|java:util:jar:JarFile|] v1 @type (object), [|java:util:Enumeration|] v2 @type (object), [|java:util:jar:JarFile|] v3 @type (object)) @owner [|java:util:jar:JarFile$1JarFileEnumerator|] @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.<init>:(Ljava/util/jar/JarFile;Ljava/util/Enumeration;Ljava/util/jar/JarFile;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L149698.   v0.[|java:util:jar:JarFile$1JarFileEnumerator.this$0|]  := v1 @type object;
#L14969c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1496a2.   v0.[|java:util:jar:JarFile$1JarFileEnumerator.ze|]  := v2 @type object;
#L1496a6.   v0.[|java:util:jar:JarFile$1JarFileEnumerator.jf|]  := v3 @type object;
#L1496aa.   return @void ;

   }
    procedure [|boolean|] [|java:util:jar:JarFile$1JarFileEnumerator.hasMoreElements|] ([|java:util:jar:JarFile$1JarFileEnumerator|] v1 @type (this)) @owner [|java:util:jar:JarFile$1JarFileEnumerator|] @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.hasMoreElements:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1496bc.   v0:= v1.[|java:util:jar:JarFile$1JarFileEnumerator.ze|]   @type object;
#L1496c0.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L1496c6.   v0:= temp;
#L1496c8.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:jar:JarFile$1JarFileEnumerator.nextElement|] ([|java:util:jar:JarFile$1JarFileEnumerator|] v1 @type (this)) @owner [|java:util:jar:JarFile$1JarFileEnumerator|] @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L1496dc.   call temp:=  [|java:util:jar:JarFile$1JarFileEnumerator.nextElement|](v1) @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.nextElement:()Ljava/util/jar/JarEntry;|] @classDescriptor [|java:util:jar:JarFile$1JarFileEnumerator|] @type virtual;
#L1496e2.   v0:= temp  @type object;
#L1496e4.   return v0  @type object;

   }
    procedure [|java:util:jar:JarEntry|] [|java:util:jar:JarFile$1JarFileEnumerator.nextElement|] ([|java:util:jar:JarFile$1JarFileEnumerator|] v2 @type (this)) @owner [|java:util:jar:JarFile$1JarFileEnumerator|] @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.nextElement:()Ljava/util/jar/JarEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1496f8.   v0:= new [|java:util:jar:JarEntry|];
#L1496fc.   v1:= v2.[|java:util:jar:JarFile$1JarFileEnumerator.ze|]   @type object;
#L149700.   call temp:=  [|java:util:Enumeration.nextElement|](v1) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L149706.   v1:= temp  @type object;
#L149708.   v1:= ([|java:util:zip:ZipEntry|])v1;
#L14970c.   call temp:=  [|java:util:jar:JarEntry.<init>|](v0, v1) @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L149712.   v1:= v2.[|java:util:jar:JarFile$1JarFileEnumerator.jf|]   @type object;
#L149716.   v0.[|java:util:jar:JarEntry.parentJar|]  := v1 @type object;
#L14971a.   return v0  @type object;

   }
record [|java:util:jar:JarFile$JarFileInputStream|]  @type class @AccessFlag FINAL  extends [|java:io:FilterInputStream|] {
      [|long|] [|java:util:jar:JarFile$JarFileInputStream.count|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:jar:JarFile$JarFileInputStream.done|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarVerifier$VerifierEntry|] [|java:util:jar:JarFile$JarFileInputStream.entry|]    @AccessFlag PRIVATE;
      [|java:util:zip:ZipEntry|] [|java:util:jar:JarFile$JarFileInputStream.zipEntry|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:jar:JarFile$JarFileInputStream.<init>|] ([|java:util:jar:JarFile$JarFileInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|java:util:zip:ZipEntry|] v4 @type (object), [|java:util:jar:JarVerifier$VerifierEntry|] v5 @type (object)) @owner [|java:util:jar:JarFile$JarFileInputStream|] @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/ZipEntry;Ljava/util/jar/JarVerifier$VerifierEntry;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14972c.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L149732.   v0:= 0  @length 4;
#L149734.   v2.[|java:util:jar:JarFile$JarFileInputStream.done|]  := v0 @boolean;
#L149738.   v2.[|java:util:jar:JarFile$JarFileInputStream.zipEntry|]  := v4 @type object;
#L14973c.   v0:= v2.[|java:util:jar:JarFile$JarFileInputStream.zipEntry|]   @type object;
#L149740.   call temp:=  [|java:util:zip:ZipEntry.getSize|](v0) @signature [|Ljava/util/zip/ZipEntry;.getSize:()J|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L149746.   v0:= temp  @type wide;
#L149748.   v2.[|java:util:jar:JarFile$JarFileInputStream.count|]  := v0 @wide;
#L14974c.   v2.[|java:util:jar:JarFile$JarFileInputStream.entry|]  := v5 @type object;
#L149750.   return @void ;

   }
    procedure [|int|] [|java:util:jar:JarFile$JarFileInputStream.available|] ([|java:util:jar:JarFile$JarFileInputStream|] v1 @type (this)) @owner [|java:util:jar:JarFile$JarFileInputStream|] @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L149764.   v0:= v1.[|java:util:jar:JarFile$JarFileInputStream.done|]   @boolean;
#L149768.   if v0 == 0 then goto L149770;
#L14976c.   v0:= 0  @length 4;
#L14976e.   return v0;
#L149770.   call temp:=  [|java:io:FilterInputStream.available|](v1) @signature [|Ljava/io/FilterInputStream;.available:()I|] @classDescriptor [|java:io:FilterInputStream|] @type super;
#L149776.   v0:= temp;
#L149778.   goto L14976e;

   }
    procedure [|int|] [|java:util:jar:JarFile$JarFileInputStream.read|] ([|java:util:jar:JarFile$JarFileInputStream|] v8 @type (this)) @owner [|java:util:jar:JarFile$JarFileInputStream|] @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14978c.   v7:= 1  @length 4;
#L14978e.   v5:= 0  @length wide16;
#L149792.   v1:= -1  @length 4;
#L149794.   v2:= v8.[|java:util:jar:JarFile$JarFileInputStream.done|]   @boolean;
#L149798.   if v2 == 0 then goto L1497a0;
#L14979c.   v0:= v1;
#L14979e.   return v0;
#L1497a0.   v2:= v8.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L1497a4.   v2:= cmp(v2,v5);
#L1497a8.   if v2 <= 0 then goto L1497f2;
#L1497ac.   call temp:=  [|java:io:FilterInputStream.read|](v8) @signature [|Ljava/io/FilterInputStream;.read:()I|] @classDescriptor [|java:io:FilterInputStream|] @type super;
#L1497b2.   v0:= temp;
#L1497b4.   if v0 == v1 then goto L1497ec;
#L1497b8.   v1:= v8.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L1497bc.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.write|](v1, v0) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.write:(I)V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L1497c2.   v1:= v8.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L1497c6.   v3:= 1  @length wide16;
#L1497ca.   v1:= v1 - v3  @type long;
#L1497cc.   v8.[|java:util:jar:JarFile$JarFileInputStream.count|]  := v1 @wide;
#L1497d0.   v1:= v8.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L1497d4.   v1:= cmp(v1,v5);
#L1497d8.   if v1 != 0 then goto L14979e;
#L1497dc.   v8.[|java:util:jar:JarFile$JarFileInputStream.done|]  := v7 @boolean;
#L1497e0.   v1:= v8.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L1497e4.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.verify|](v1) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L1497ea.   goto L14979e;
#L1497ec.   v8.[|java:util:jar:JarFile$JarFileInputStream.count|]  := v5 @wide;
#L1497f0.   goto L1497d0;
#L1497f2.   v8.[|java:util:jar:JarFile$JarFileInputStream.done|]  := v7 @boolean;
#L1497f6.   v2:= v8.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L1497fa.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.verify|](v2) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L149800.   v0:= v1;
#L149802.   goto L14979e;

   }
    procedure [|int|] [|java:util:jar:JarFile$JarFileInputStream.read|] ([|java:util:jar:JarFile$JarFileInputStream|] v9 @type (this), [|byte|][] v10, [|int|] v11, [|int|] v12) @owner [|java:util:jar:JarFile$JarFileInputStream|] @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L149814.   v8:= 1  @length 4;
#L149816.   v6:= 0  @length wide16;
#L14981a.   v2:= -1  @length 4;
#L14981c.   v3:= v9.[|java:util:jar:JarFile$JarFileInputStream.done|]   @boolean;
#L149820.   if v3 == 0 then goto L149828;
#L149824.   v0:= v2;
#L149826.   return v0;
#L149828.   v3:= v9.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L14982c.   v3:= cmp(v3,v6);
#L149830.   if v3 <= 0 then goto L14988e;
#L149834.   call temp:=  [|java:io:FilterInputStream.read|](v9, v10, v11, v12) @signature [|Ljava/io/FilterInputStream;.read:([BII)I|] @classDescriptor [|java:io:FilterInputStream|] @type super;
#L14983a.   v0:= temp;
#L14983c.   if v0 == v2 then goto L149888;
#L149840.   v1:= v0;
#L149842.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L149846.   v4:= (long)v1  @type i2l;
#L149848.   v2:= cmp(v2,v4);
#L14984c.   if v2 >= 0 then goto L149856;
#L149850.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L149854.   v1:= (int)v2  @type l2i;
#L149856.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L14985a.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.write|](v2, v10, v11, v1) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.write:([BII)V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L149860.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L149864.   v4:= (long)v1  @type i2l;
#L149866.   v2:= v2 - v4  @type long;
#L149868.   v9.[|java:util:jar:JarFile$JarFileInputStream.count|]  := v2 @wide;
#L14986c.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.count|]   @wide;
#L149870.   v2:= cmp(v2,v6);
#L149874.   if v2 != 0 then goto L149826;
#L149878.   v9.[|java:util:jar:JarFile$JarFileInputStream.done|]  := v8 @boolean;
#L14987c.   v2:= v9.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L149880.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.verify|](v2) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L149886.   goto L149826;
#L149888.   v9.[|java:util:jar:JarFile$JarFileInputStream.count|]  := v6 @wide;
#L14988c.   goto L14986c;
#L14988e.   v9.[|java:util:jar:JarFile$JarFileInputStream.done|]  := v8 @boolean;
#L149892.   v3:= v9.[|java:util:jar:JarFile$JarFileInputStream.entry|]   @type object;
#L149896.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.verify|](v3) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L14989c.   v0:= v2;
#L14989e.   goto L149826;

   }
    procedure [|long|] [|java:util:jar:JarFile$JarFileInputStream.skip|] ([|java:util:jar:JarFile$JarFileInputStream|] v2 @type (this), [|long|] v3) @owner [|java:util:jar:JarFile$JarFileInputStream|] @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1498b0.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L1498b6.   v0:= temp  @type wide;
#L1498b8.   return v0  @type wide;

   }
record [|java:util:zip:ZipFile|]  @type class @AccessFlag PUBLIC extends  [|java:util:zip:ZipConstants|] {
      [|java:lang:String|] [|java:util:zip:ZipFile.fileName|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:File|] [|java:util:zip:ZipFile.fileToDeleteOnClose|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:util:zip:ZipFile.guard|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:LinkedHashMap|] [|java:util:zip:ZipFile.mEntries|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:RandomAccessFile|] [|java:util:zip:ZipFile.mRaf|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:zip:ZipFile.GPBF_DATA_DESCRIPTOR_FLAG|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipFile.GPBF_UTF8_FLAG|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipFile.OPEN_DELETE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipFile.OPEN_READ|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipFile.<init>|] ([|java:util:zip:ZipFile|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1498cc.   v0:= 1  @length 4;
#L1498ce.   call temp:=  [|java:util:zip:ZipFile.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;I)V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L1498d4.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipFile.<init>|] ([|java:util:zip:ZipFile|] v3 @type (this), [|java:io:File|] v4 @type (object), [|int|] v5) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1498e8.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1498ee.   v0:= new [|java:util:LinkedHashMap|];
#L1498f2.   call temp:=  [|java:util:LinkedHashMap.<init>|](v0) @signature [|Ljava/util/LinkedHashMap;.<init>:()V|] @classDescriptor [|java:util:LinkedHashMap|] @type direct;
#L1498f8.   v3.[|java:util:zip:ZipFile.mEntries|]  := v0 @type object;
#L1498fc.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L149902.   v0:= temp  @type object;
#L149904.   v3.[|java:util:zip:ZipFile.guard|]  := v0 @type object;
#L149908.   call temp:=  [|java:io:File.getPath|](v4) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L14990e.   v0:= temp  @type object;
#L149910.   v3.[|java:util:zip:ZipFile.fileName|]  := v0 @type object;
#L149914.   v0:= 1  @length 4;
#L149916.   if v5 == v0 then goto L14992c;
#L14991a.   v0:= 5  @length 4;
#L14991c.   if v5 == v0 then goto L14992c;
#L149920.   v0:= new [|java:lang:IllegalArgumentException|];
#L149924.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14992a.   throw v0;
#L14992c.   v0:= v5 ^& 4;
#L149930.   if v0 == 0 then goto L149964;
#L149934.   v3.[|java:util:zip:ZipFile.fileToDeleteOnClose|]  := v4 @type object;
#L149938.   v0:= new [|java:io:RandomAccessFile|];
#L14993c.   v1:= v3.[|java:util:zip:ZipFile.fileName|]   @type object;
#L149940.   v2:= "r" @type (object, string);
#L149944.   call temp:=  [|java:io:RandomAccessFile.<init>|](v0, v1, v2) @signature [|Ljava/io/RandomAccessFile;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:RandomAccessFile|] @type direct;
#L14994a.   v3.[|java:util:zip:ZipFile.mRaf|]  := v0 @type object;
#L14994e.   call temp:=  [|java:util:zip:ZipFile.readCentralDir|](v3) @signature [|Ljava/util/zip/ZipFile;.readCentralDir:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149954.   v0:= v3.[|java:util:zip:ZipFile.guard|]   @type object;
#L149958.   v1:= "close" @type (object, string);
#L14995c.   call temp:=  [|dalvik:system:CloseGuard.open|](v0, v1) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L149962.   return @void ;
#L149964.   v0:= 0  @length 4;
#L149966.   v3.[|java:util:zip:ZipFile.fileToDeleteOnClose|]  := v0 @type object;
#L14996a.   goto L149938;

   }
    procedure [|void|] [|java:util:zip:ZipFile.<init>|] ([|java:util:zip:ZipFile|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14997c.   v0:= new [|java:io:File|];
#L149980.   call temp:=  [|java:io:File.<init>|](v0, v3) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L149986.   v1:= 1  @length 4;
#L149988.   call temp:=  [|java:util:zip:ZipFile.<init>|](v2, v0, v1) @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;I)V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L14998e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipFile.access$000|] ([|java:util:zip:ZipFile|] v0 @type (object)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.access$000:(Ljava/util/zip/ZipFile;)V|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L1499a0.   call temp:=  [|java:util:zip:ZipFile.checkNotClosed|](v0) @signature [|Ljava/util/zip/ZipFile;.checkNotClosed:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L1499a6.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipFile.checkNotClosed|] ([|java:util:zip:ZipFile|] v2 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1499b8.   v0:= v2.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L1499bc.   if v0 != 0 then goto L1499d0;
#L1499c0.   v0:= new [|java:lang:IllegalStateException|];
#L1499c4.   v1:= "Zip file closed" @type (object, string);
#L1499c8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1499ce.   throw v0;
#L1499d0.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipFile.readCentralDir|] ([|java:util:zip:ZipFile|] v24 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.readCentralDir:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
      
#L1499e4.   v0:= v24  @type object;
#L1499e8.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L1499ec.   v20:= v0  @type object;
#L1499f0.   call temp:=  [|java:io:RandomAccessFile.length|](v20) @signature [|Ljava/io/RandomAccessFile;.length:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L1499f6.   v20:= temp  @type wide;
#L1499f8.   v22:= 22  @length wide16;
#L1499fc.   v15:= v20 - v22  @type long;
#L149a00.   v20:= 0  @length wide16;
#L149a04.   v20:= cmp(v15,v20);
#L149a08.   if v20 >= 0 then goto L149a52;
#L149a0c.   v20:= new [|java:util:zip:ZipException|];
#L149a10.   v21:= new [|java:lang:StringBuilder|];
#L149a14.   call temp:=  [|java:lang:StringBuilder.<init>|](v21) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L149a1a.   v22:= "File too short to be a zip file: " @type (object, string);
#L149a1e.   call temp:=  [|java:lang:StringBuilder.append|](v21, v22) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149a24.   v21:= temp  @type object;
#L149a26.   v0:= v24  @type object;
#L149a2a.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149a2e.   v22:= v0  @type object;
#L149a32.   call temp:=  [|java:io:RandomAccessFile.length|](v22) @signature [|Ljava/io/RandomAccessFile;.length:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L149a38.   v22:= temp  @type wide;
#L149a3a.   call temp:=  [|java:lang:StringBuilder.append|](v21, v22, v23) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149a40.   v21:= temp  @type object;
#L149a42.   call temp:=  [|java:lang:StringBuilder.toString|](v21) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149a48.   v21:= temp  @type object;
#L149a4a.   call temp:=  [|java:util:zip:ZipException.<init>|](v20, v21) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L149a50.   throw v20;
#L149a52.    v20:= 0.000000  @length wide32;
#L149a58.   v17:= v15 - v20  @type long;
#L149a5c.   v20:= 0  @length wide16;
#L149a60.   v20:= cmp(v17,v20);
#L149a64.   if v20 >= 0 then goto L149a6c;
#L149a68.   v17:= 0  @length wide16;
#L149a6c.    v3:= 0.000000;
#L149a72.   v0:= v24  @type object;
#L149a76.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149a7a.   v20:= v0  @type object;
#L149a7e.   v0:= v20  @type object;
#L149a82.   v1:= v15  @type wide;
#L149a84.   call temp:=  [|java:io:RandomAccessFile.seek|](v0, v1, v2) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L149a8a.   v0:= v24  @type object;
#L149a8e.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149a92.   v20:= v0  @type object;
#L149a96.   call temp:=  [|java:io:RandomAccessFile.readInt|](v20) @signature [|Ljava/io/RandomAccessFile;.readInt:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L149a9c.   v20:= temp;
#L149a9e.   call temp:=  [|java:lang:Integer.reverseBytes|](v20) @signature [|Ljava/lang/Integer;.reverseBytes:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L149aa4.   v20:= temp;
#L149aa6.    v21:= 0.000000;
#L149aac.   v0:= v20;
#L149ab0.   v1:= v21;
#L149ab4.   if v0 != v1 then goto L149b7a;
#L149ab8.   v20:= 18  @length 16;
#L149abc.   v0:= v20;
#L149ac0.   v8:= new [|byte|][v0];
#L149ac4.   v0:= v24  @type object;
#L149ac8.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149acc.   v20:= v0  @type object;
#L149ad0.   v0:= v20  @type object;
#L149ad4.   call temp:=  [|java:io:RandomAccessFile.readFully|](v0, v8) @signature [|Ljava/io/RandomAccessFile;.readFully:([B)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L149ada.   v20:= 0  @length 16;
#L149ade.   v0:= v8.length;
#L149ae0.   v21:= v0;
#L149ae4.   v22:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L149ae8.   v0:= v20;
#L149aec.   v1:= v21;
#L149af0.   v2:= v22  @type object;
#L149af4.   call temp:=  [|libcore:io:HeapBufferIterator.iterator|](v8, v0, v1, v2) @signature [|Llibcore/io/HeapBufferIterator;.iterator:([BIILjava/nio/ByteOrder;)Llibcore/io/BufferIterator;|] @classDescriptor [|libcore:io:HeapBufferIterator|] @type static;
#L149afa.   v11:= temp  @type object;
#L149afc.   call temp:=  [|libcore:io:BufferIterator.readShort|](v11) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b02.   v20:= temp;
#L149b04.    v21:= 0.000000;
#L149b0a.   v6:= v20 ^& v21  @type int;
#L149b0e.   call temp:=  [|libcore:io:BufferIterator.readShort|](v11) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b14.   v20:= temp;
#L149b16.    v21:= 0.000000;
#L149b1c.   v7:= v20 ^& v21  @type int;
#L149b20.   call temp:=  [|libcore:io:BufferIterator.readShort|](v11) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b26.   v20:= temp;
#L149b28.    v21:= 0.000000;
#L149b2e.   v13:= v20 ^& v21  @type int;
#L149b32.   call temp:=  [|libcore:io:BufferIterator.readShort|](v11) @signature [|Llibcore/io/BufferIterator;.readShort:()S|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b38.   v20:= temp;
#L149b3a.    v21:= 0.000000;
#L149b40.   v19:= v20 ^& v21  @type int;
#L149b44.   v20:= 4  @length 16;
#L149b48.   v0:= v20;
#L149b4c.   call temp:=  [|libcore:io:BufferIterator.skip|](v11, v0) @signature [|Llibcore/io/BufferIterator;.skip:(I)V|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b52.   call temp:=  [|libcore:io:BufferIterator.readInt|](v11) @signature [|Llibcore/io/BufferIterator;.readInt:()I|] @classDescriptor [|libcore:io:BufferIterator|] @type virtual;
#L149b58.   v5:= temp;
#L149b5a.   v0:= v19;
#L149b5e.   if v13 != v0 then goto L149b6a;
#L149b62.   if v6 != 0 then goto L149b6a;
#L149b66.   if v7 == 0 then goto L149b9a;
#L149b6a.   v20:= new [|java:util:zip:ZipException|];
#L149b6e.   v21:= "spanned archives not supported" @type (object, string);
#L149b72.   call temp:=  [|java:util:zip:ZipException.<init>|](v20, v21) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L149b78.   throw v20;
#L149b7a.   v20:= 1  @length wide16;
#L149b7e.   v15:= v15 - v20  @type long;
#L149b82.   v20:= cmp(v15,v17);
#L149b86.   if v20 >= 0 then goto L149a72;
#L149b8a.   v20:= new [|java:util:zip:ZipException|];
#L149b8e.   v21:= "EOCD not found; not a Zip archive?" @type (object, string);
#L149b92.   call temp:=  [|java:util:zip:ZipException.<init>|](v20, v21) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L149b98.   throw v20;
#L149b9a.   v14:= new [|java:util:zip:ZipFile$RAFStream|];
#L149b9e.   v0:= v24  @type object;
#L149ba2.   v0:= v0.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149ba6.   v20:= v0  @type object;
#L149baa.   v0:= (long)v5  @type i2l;
#L149bac.   v21:= v0  @type wide;
#L149bb0.   v0:= v20  @type object;
#L149bb4.   v1:= v21  @type wide;
#L149bb8.   call temp:=  [|java:util:zip:ZipFile$RAFStream.<init>|](v14, v0, v1, v2) @signature [|Ljava/util/zip/ZipFile$RAFStream;.<init>:(Ljava/io/RandomAccessFile;J)V|] @classDescriptor [|java:util:zip:ZipFile$RAFStream|] @type direct;
#L149bbe.   v4:= new [|java:io:BufferedInputStream|];
#L149bc2.   v20:= 4096  @length 16;
#L149bc6.   v0:= v20;
#L149bca.   call temp:=  [|java:io:BufferedInputStream.<init>|](v4, v14, v0) @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L149bd0.   v20:= 46  @length 16;
#L149bd4.   v0:= v20;
#L149bd8.   v9:= new [|byte|][v0];
#L149bdc.   v10:= 0  @length 4;
#L149bde.   if v10 >= v13 then goto L149c14;
#L149be2.   v12:= new [|java:util:zip:ZipEntry|];
#L149be6.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v12, v9, v4) @signature [|Ljava/util/zip/ZipEntry;.<init>:([BLjava/io/InputStream;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L149bec.   v0:= v24  @type object;
#L149bf0.   v0:= v0.[|java:util:zip:ZipFile.mEntries|]   @type object;
#L149bf4.   v20:= v0  @type object;
#L149bf8.   call temp:=  [|java:util:zip:ZipEntry.getName|](v12) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L149bfe.   v21:= temp  @type object;
#L149c00.   v0:= v20  @type object;
#L149c04.   v1:= v21  @type object;
#L149c08.   call temp:=  [|java:util:LinkedHashMap.put|](v0, v1, v12) @signature [|Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedHashMap|] @type virtual;
#L149c0e.   v10:= v10 + 1;
#L149c12.   goto L149bde;
#L149c14.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipFile.close|] ([|java:util:zip:ZipFile|] v3 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L149c28.   v2:= 0  @length 4;
#L149c2a.   v1:= v3.[|java:util:zip:ZipFile.guard|]   @type object;
#L149c2e.   call temp:=  [|dalvik:system:CloseGuard.close|](v1) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L149c34.   v0:= v3.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149c38.   if v0 == 0 then goto L149c62;
#L149c3c.   (@monitorenter v0)
#L149c3e.   v1:= 0  @length 4;
#L149c40.   v3.[|java:util:zip:ZipFile.mRaf|]  := v1 @type object;
#L149c44.   call temp:=  [|java:io:RandomAccessFile.close|](v0) @signature [|Ljava/io/RandomAccessFile;.close:()V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L149c4a.   (@monitorexit v0)
#L149c4c.   v1:= v3.[|java:util:zip:ZipFile.fileToDeleteOnClose|]   @type object;
#L149c50.   if v1 == 0 then goto L149c62;
#L149c54.   v1:= v3.[|java:util:zip:ZipFile.fileToDeleteOnClose|]   @type object;
#L149c58.   call temp:=  [|java:io:File.delete|](v1) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L149c5e.   v3.[|java:util:zip:ZipFile.fileToDeleteOnClose|]  := v2 @type object;
#L149c62.   return @void ;
#L149c64.   v1:= Exception  @type object;
#L149c66.   (@monitorexit v0)
#L149c68.   throw v1;
  catch  [|any|] @[L149c40..L149c4c] goto L149c64;
  catch  [|any|] @[L149c66..L149c68] goto L149c64;

   }
    procedure [|java:util:Enumeration|] [|java:util:zip:ZipFile.entries|] ([|java:util:zip:ZipFile|] v2 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.entries:()Ljava/util/Enumeration;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L149c90.   call temp:=  [|java:util:zip:ZipFile.checkNotClosed|](v2) @signature [|Ljava/util/zip/ZipFile;.checkNotClosed:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149c96.   v1:= v2.[|java:util:zip:ZipFile.mEntries|]   @type object;
#L149c9a.   call temp:=  [|java:util:LinkedHashMap.values|](v1) @signature [|Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:LinkedHashMap|] @type virtual;
#L149ca0.   v1:= temp  @type object;
#L149ca2.   call temp:=  [|java:util:Collection.iterator|](v1) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L149ca8.   v0:= temp  @type object;
#L149caa.   v1:= new [|java:util:zip:ZipFile$1|];
#L149cae.   call temp:=  [|java:util:zip:ZipFile$1.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/ZipFile$1;.<init>:(Ljava/util/zip/ZipFile;Ljava/util/Iterator;)V|] @classDescriptor [|java:util:zip:ZipFile$1|] @type direct;
#L149cb4.   return v1  @type object;

   }
    procedure [|void|] [|java:util:zip:ZipFile.finalize|] ([|java:util:zip:ZipFile|] v2 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L149cc8.   v1:= v2.[|java:util:zip:ZipFile.guard|]   @type object;
#L149ccc.   if v1 == 0 then goto L149cda;
#L149cd0.   v1:= v2.[|java:util:zip:ZipFile.guard|]   @type object;
#L149cd4.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v1) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L149cda.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L149ce0.   return @void ;
#L149ce2.   v1:= Exception  @type object;
#L149ce4.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L149cea.   throw v1;
#L149cec.   v0:= Exception  @type object;
#L149cee.   v1:= new [|java:lang:AssertionError|];
#L149cf2.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L149cf8.   throw v1;
#L149cfa.   v0:= Exception  @type object;
#L149cfc.   v1:= new [|java:lang:AssertionError|];
#L149d00.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L149d06.   throw v1;
  catch  [|any|] @[L149cc8..L149cda] goto L149ce2;
  catch  [|java:lang:Throwable|] @[L149cda..L149ce0] goto L149cfa;
  catch  [|java:lang:Throwable|] @[L149ce4..L149cea] goto L149cec;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:zip:ZipFile.getEntry|] ([|java:util:zip:ZipFile|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L149d3c.   call temp:=  [|java:util:zip:ZipFile.checkNotClosed|](v4) @signature [|Ljava/util/zip/ZipFile;.checkNotClosed:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149d42.   if v5 != 0 then goto L149d56;
#L149d46.   v1:= new [|java:lang:NullPointerException|];
#L149d4a.   v2:= "entryName == null" @type (object, string);
#L149d4e.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L149d54.   throw v1;
#L149d56.   v1:= v4.[|java:util:zip:ZipFile.mEntries|]   @type object;
#L149d5a.   call temp:=  [|java:util:LinkedHashMap.get|](v1, v5) @signature [|Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedHashMap|] @type virtual;
#L149d60.   v0:= temp  @type object;
#L149d62.   v0:= ([|java:util:zip:ZipEntry|])v0;
#L149d66.   if v0 != 0 then goto L149da0;
#L149d6a.   v1:= v4.[|java:util:zip:ZipFile.mEntries|]   @type object;
#L149d6e.   v2:= new [|java:lang:StringBuilder|];
#L149d72.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L149d78.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149d7e.   v2:= temp  @type object;
#L149d80.   v3:= "/" @type (object, string);
#L149d84.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149d8a.   v2:= temp  @type object;
#L149d8c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L149d92.   v2:= temp  @type object;
#L149d94.   call temp:=  [|java:util:LinkedHashMap.get|](v1, v2) @signature [|Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedHashMap|] @type virtual;
#L149d9a.   v0:= temp  @type object;
#L149d9c.   v0:= ([|java:util:zip:ZipEntry|])v0;
#L149da0.   return v0  @type object;

   }
    procedure [|java:io:InputStream|] [|java:util:zip:ZipFile.getInputStream|] ([|java:util:zip:ZipFile|] v10 @type (this), [|java:util:zip:ZipEntry|] v11 @type (object)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L149db4.   call temp:=  [|java:util:zip:ZipEntry.getName|](v11) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L149dba.   v5:= temp  @type object;
#L149dbc.   call temp:=  [|java:util:zip:ZipFile.getEntry|](v10, v5) @signature [|Ljava/util/zip/ZipFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:zip:ZipFile|] @type virtual;
#L149dc2.   v11:= temp  @type object;
#L149dc4.   if v11 != 0 then goto L149dcc;
#L149dc8.   v4:= 0  @length 4;
#L149dca.   return v4  @type object;
#L149dcc.   v3:= v10.[|java:util:zip:ZipFile.mRaf|]   @type object;
#L149dd0.   (@monitorenter v3)
#L149dd2.   v4:= new [|java:util:zip:ZipFile$RAFStream|];
#L149dd6.   v5:= v11.[|java:util:zip:ZipEntry.mLocalHeaderRelOffset|]   @wide;
#L149dda.   v7:= 28  @length wide16;
#L149dde.   v5:= v5 + v7  @type long;
#L149de0.   call temp:=  [|java:util:zip:ZipFile$RAFStream.<init>|](v4, v3, v5, v6) @signature [|Ljava/util/zip/ZipFile$RAFStream;.<init>:(Ljava/io/RandomAccessFile;J)V|] @classDescriptor [|java:util:zip:ZipFile$RAFStream|] @type direct;
#L149de6.   v1:= new [|java:io:DataInputStream|];
#L149dea.   call temp:=  [|java:io:DataInputStream.<init>|](v1, v4) @signature [|Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:DataInputStream|] @type direct;
#L149df0.   call temp:=  [|java:io:DataInputStream.readShort|](v1) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L149df6.   v5:= temp;
#L149df8.   call temp:=  [|java:lang:Short.reverseBytes|](v5) @signature [|Ljava/lang/Short;.reverseBytes:(S)S|] @classDescriptor [|java:lang:Short|] @type static;
#L149dfe.   v2:= temp;
#L149e00.   call temp:=  [|java:io:DataInputStream.close|](v1) @signature [|Ljava/io/DataInputStream;.close:()V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L149e06.   v5:= v11.[|java:util:zip:ZipEntry.nameLength|] ;
#L149e0a.   v5:= v5 + v2  @type int;
#L149e0c.   v5:= (long)v5  @type i2l;
#L149e0e.   call temp:=  [|java:util:zip:ZipFile$RAFStream.skip|](v4, v5, v6) @signature [|Ljava/util/zip/ZipFile$RAFStream;.skip:(J)J|] @classDescriptor [|java:util:zip:ZipFile$RAFStream|] @type virtual;
#L149e14.   v5:= v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L149e18.   v7:= v11.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L149e1c.   v5:= v5 + v7  @type long;
#L149e1e.   v4.[|java:util:zip:ZipFile$RAFStream.mLength|]  := v5 @wide;
#L149e22.   v5:= v11.[|java:util:zip:ZipEntry.compressionMethod|] ;
#L149e26.   v6:= 8  @length 16;
#L149e2a.   if v5 != v6 then goto L149e6e;
#L149e2e.   v5:= 1024  @length 16;
#L149e32.   call temp:=  [|java:util:zip:ZipEntry.getSize|](v11) @signature [|Ljava/util/zip/ZipEntry;.getSize:()J|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L149e38.   v6:= temp  @type wide;
#L149e3a.    v8:= 0.000000  @length wide32;
#L149e40.   call temp:=  [|java:lang:Math.min|](v6, v7, v8, v9) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L149e46.   v6:= temp  @type wide;
#L149e48.   v6:= (int)v6  @type l2i;
#L149e4a.   call temp:=  [|java:lang:Math.max|](v5, v6) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L149e50.   v0:= temp;
#L149e52.   v5:= new [|java:util:zip:ZipFile$ZipInflaterInputStream|];
#L149e56.   v6:= new [|java:util:zip:Inflater|];
#L149e5a.   v7:= 1  @length 4;
#L149e5c.   call temp:=  [|java:util:zip:Inflater.<init>|](v6, v7) @signature [|Ljava/util/zip/Inflater;.<init>:(Z)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L149e62.   call temp:=  [|java:util:zip:ZipFile$ZipInflaterInputStream.<init>|](v5, v4, v6, v0, v11) @signature [|Ljava/util/zip/ZipFile$ZipInflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;ILjava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:zip:ZipFile$ZipInflaterInputStream|] @type direct;
#L149e68.   (@monitorexit v3)
#L149e6a.   v4:= v5  @type object;
#L149e6c.   goto L149dca;
#L149e6e.   (@monitorexit v3)
#L149e70.   goto L149dca;
#L149e72.   v5:= Exception  @type object;
#L149e74.   (@monitorexit v3)
#L149e76.   throw v5;
  catch  [|any|] @[L149dd2..L149e76] goto L149e72;

   }
    procedure [|java:lang:String|] [|java:util:zip:ZipFile.getName|] ([|java:util:zip:ZipFile|] v1 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L149e94.   v0:= v1.[|java:util:zip:ZipFile.fileName|]   @type object;
#L149e98.   return v0  @type object;

   }
    procedure [|int|] [|java:util:zip:ZipFile.size|] ([|java:util:zip:ZipFile|] v1 @type (this)) @owner [|java:util:zip:ZipFile|] @signature [|Ljava/util/zip/ZipFile;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L149eac.   call temp:=  [|java:util:zip:ZipFile.checkNotClosed|](v1) @signature [|Ljava/util/zip/ZipFile;.checkNotClosed:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149eb2.   v0:= v1.[|java:util:zip:ZipFile.mEntries|]   @type object;
#L149eb6.   call temp:=  [|java:util:LinkedHashMap.size|](v0) @signature [|Ljava/util/LinkedHashMap;.size:()I|] @classDescriptor [|java:util:LinkedHashMap|] @type virtual;
#L149ebc.   v0:= temp;
#L149ebe.   return v0;

   }
record [|java:util:jar:JarFile|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:ZipFile|] {
      [|boolean|] [|java:util:jar:JarFile.closed|]    @AccessFlag PRIVATE;
      [|java:util:jar:Manifest|] [|java:util:jar:JarFile.manifest|]    @AccessFlag PRIVATE;
      [|java:util:zip:ZipEntry|] [|java:util:jar:JarFile.manifestEntry|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarVerifier|] [|java:util:jar:JarFile.verifier|]    @AccessFlag ;
   }
      global [|java:lang:String|] @@[|java:util:jar:JarFile.MANIFEST_NAME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:JarFile.META_DIR|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:jar:JarFile.<init>|] ([|java:util:jar:JarFile|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L149ed0.   v0:= 1  @length 4;
#L149ed2.   call temp:=  [|java:util:jar:JarFile.<init>|](v1, v2, v0) @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/io/File;Z)V|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L149ed8.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarFile.<init>|] ([|java:util:jar:JarFile|] v2 @type (this), [|java:io:File|] v3 @type (object), [|boolean|] v4) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/io/File;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L149eec.   call temp:=  [|java:util:zip:ZipFile.<init>|](v2, v3) @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149ef2.   v0:= 0  @length 4;
#L149ef4.   v2.[|java:util:jar:JarFile.closed|]  := v0 @boolean;
#L149ef8.   if v4 == 0 then goto L149f12;
#L149efc.   v0:= new [|java:util:jar:JarVerifier|];
#L149f00.   call temp:=  [|java:io:File.getPath|](v3) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L149f06.   v1:= temp  @type object;
#L149f08.   call temp:=  [|java:util:jar:JarVerifier.<init>|](v0, v1) @signature [|Ljava/util/jar/JarVerifier;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L149f0e.   v2.[|java:util:jar:JarFile.verifier|]  := v0 @type object;
#L149f12.   call temp:=  [|java:util:jar:JarFile.readMetaEntries|](v2) @signature [|Ljava/util/jar/JarFile;.readMetaEntries:()V|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L149f18.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarFile.<init>|] ([|java:util:jar:JarFile|] v2 @type (this), [|java:io:File|] v3 @type (object), [|boolean|] v4, [|int|] v5) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/io/File;ZI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L149f2c.   call temp:=  [|java:util:zip:ZipFile.<init>|](v2, v3, v5) @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;I)V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149f32.   v0:= 0  @length 4;
#L149f34.   v2.[|java:util:jar:JarFile.closed|]  := v0 @boolean;
#L149f38.   if v4 == 0 then goto L149f52;
#L149f3c.   v0:= new [|java:util:jar:JarVerifier|];
#L149f40.   call temp:=  [|java:io:File.getPath|](v3) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L149f46.   v1:= temp  @type object;
#L149f48.   call temp:=  [|java:util:jar:JarVerifier.<init>|](v0, v1) @signature [|Ljava/util/jar/JarVerifier;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L149f4e.   v2.[|java:util:jar:JarFile.verifier|]  := v0 @type object;
#L149f52.   call temp:=  [|java:util:jar:JarFile.readMetaEntries|](v2) @signature [|Ljava/util/jar/JarFile;.readMetaEntries:()V|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L149f58.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarFile.<init>|] ([|java:util:jar:JarFile|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L149f6c.   v0:= 1  @length 4;
#L149f6e.   call temp:=  [|java:util:jar:JarFile.<init>|](v1, v2, v0) @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L149f74.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarFile.<init>|] ([|java:util:jar:JarFile|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.<init>:(Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L149f88.   call temp:=  [|java:util:zip:ZipFile.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipFile;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipFile|] @type direct;
#L149f8e.   v0:= 0  @length 4;
#L149f90.   v1.[|java:util:jar:JarFile.closed|]  := v0 @boolean;
#L149f94.   if v3 == 0 then goto L149fa6;
#L149f98.   v0:= new [|java:util:jar:JarVerifier|];
#L149f9c.   call temp:=  [|java:util:jar:JarVerifier.<init>|](v0, v2) @signature [|Ljava/util/jar/JarVerifier;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L149fa2.   v1.[|java:util:jar:JarFile.verifier|]  := v0 @type object;
#L149fa6.   call temp:=  [|java:util:jar:JarFile.readMetaEntries|](v1) @signature [|Ljava/util/jar/JarFile;.readMetaEntries:()V|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L149fac.   return @void ;

   }
    procedure [|boolean|] [|java:util:jar:JarFile.endsWithIgnoreCase|] ([|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L149fc0.   v1:= 1  @length 4;
#L149fc2.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L149fc8.   v0:= temp;
#L149fca.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L149fd0.   v2:= temp;
#L149fd2.   v2:= v0 - v2  @type int;
#L149fd6.   v4:= 0  @length 4;
#L149fd8.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L149fde.   v5:= temp;
#L149fe0.   v0:= v6  @type object;
#L149fe2.   v3:= v7  @type object;
#L149fe4.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L149fea.   v0:= temp;
#L149fec.   return v0;

   }
    procedure [|java:util:zip:ZipEntry|][] [|java:util:jar:JarFile.getMetaEntriesImpl|] ([|java:util:jar:JarFile|] v6 @type (this)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.getMetaEntriesImpl:()[Ljava/util/zip/ZipEntry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14a000.   v1:= new [|java:util:ArrayList|];
#L14a004.   v4:= 8  @length 16;
#L14a008.   call temp:=  [|java:util:ArrayList.<init>|](v1, v4) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14a00e.   call temp:=  [|java:util:jar:JarFile.entries|](v6) @signature [|Ljava/util/jar/JarFile;.entries:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:jar:JarFile|] @type virtual;
#L14a014.   v0:= temp  @type object;
#L14a016.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L14a01c.   v4:= temp;
#L14a01e.   if v4 == 0 then goto L14a06e;
#L14a022.   call temp:=  [|java:util:Enumeration.nextElement|](v0) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L14a028.   v3:= temp  @type object;
#L14a02a.   v3:= ([|java:util:zip:ZipEntry|])v3;
#L14a02e.   call temp:=  [|java:util:zip:ZipEntry.getName|](v3) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a034.   v4:= temp  @type object;
#L14a036.   v5:= "META-INF/" @type (object, string);
#L14a03a.   call temp:=  [|java:lang:String.startsWith|](v4, v5) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14a040.   v4:= temp;
#L14a042.   if v4 == 0 then goto L14a016;
#L14a046.   call temp:=  [|java:util:zip:ZipEntry.getName|](v3) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a04c.   v4:= temp  @type object;
#L14a04e.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14a054.   v4:= temp;
#L14a056.   v5:= "META-INF/" @type (object, string);
#L14a05a.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14a060.   v5:= temp;
#L14a062.   if v4 <= v5 then goto L14a016;
#L14a066.   call temp:=  [|java:util:List.add|](v1, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L14a06c.   goto L14a016;
#L14a06e.   call temp:=  [|java:util:List.size|](v1) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L14a074.   v4:= temp;
#L14a076.   if v4 != 0 then goto L14a07e;
#L14a07a.   v2:= 0  @length 4;
#L14a07c.   return v2  @type object;
#L14a07e.   call temp:=  [|java:util:List.size|](v1) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L14a084.   v4:= temp;
#L14a086.   v2:= new [|java:util:zip:ZipEntry|][v4];
#L14a08a.   call temp:=  [|java:util:List.toArray|](v1, v2) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L14a090.   goto L14a07c;

   }
    procedure [|void|] [|java:util:jar:JarFile.readMetaEntries|] ([|java:util:jar:JarFile|] v11 @type (this)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.readMetaEntries:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L14a0a4.   v10:= 0  @length 4;
#L14a0a6.   call temp:=  [|java:util:jar:JarFile.getMetaEntriesImpl|](v11) @signature [|Ljava/util/jar/JarFile;.getMetaEntriesImpl:()[Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:jar:JarFile|] @type direct;
#L14a0ac.   v6:= temp  @type object;
#L14a0ae.   if v6 != 0 then goto L14a0b8;
#L14a0b2.   v11.[|java:util:jar:JarFile.verifier|]  := v10 @type object;
#L14a0b6.   return @void ;
#L14a0b8.   v7:= 0  @length 4;
#L14a0ba.   v0:= v6  @type object;
#L14a0bc.   v5:= v0.length;
#L14a0be.   v3:= 0  @length 4;
#L14a0c0.   if v3 >= v5 then goto L14a0f4;
#L14a0c4.   v1:= v0[v3]  @type object;
#L14a0c8.   call temp:=  [|java:util:zip:ZipEntry.getName|](v1) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a0ce.   v2:= temp  @type object;
#L14a0d0.   v8:= v11.[|java:util:jar:JarFile.manifestEntry|]   @type object;
#L14a0d4.   if v8 != 0 then goto L14a0fe;
#L14a0d8.   v8:= "META-INF/MANIFEST.MF" @type (object, string);
#L14a0dc.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v2, v8) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14a0e2.   v8:= temp;
#L14a0e4.   if v8 == 0 then goto L14a0fe;
#L14a0e8.   v11.[|java:util:jar:JarFile.manifestEntry|]  := v1 @type object;
#L14a0ec.   v8:= v11.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a0f0.   if v8 != 0 then goto L14a162;
#L14a0f4.   if v7 != 0 then goto L14a0b6;
#L14a0f8.   v11.[|java:util:jar:JarFile.verifier|]  := v10 @type object;
#L14a0fc.   goto L14a0b6;
#L14a0fe.   v8:= v11.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a102.   if v8 == 0 then goto L14a162;
#L14a106.   v8:= ".SF" @type (object, string);
#L14a10a.   call temp:=  [|java:util:jar:JarFile.endsWithIgnoreCase|](v2, v8) @signature [|Ljava/util/jar/JarFile;.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:util:jar:JarFile|] @type static;
#L14a110.   v8:= temp;
#L14a112.   if v8 != 0 then goto L14a146;
#L14a116.   v8:= ".DSA" @type (object, string);
#L14a11a.   call temp:=  [|java:util:jar:JarFile.endsWithIgnoreCase|](v2, v8) @signature [|Ljava/util/jar/JarFile;.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:util:jar:JarFile|] @type static;
#L14a120.   v8:= temp;
#L14a122.   if v8 != 0 then goto L14a146;
#L14a126.   v8:= ".RSA" @type (object, string);
#L14a12a.   call temp:=  [|java:util:jar:JarFile.endsWithIgnoreCase|](v2, v8) @signature [|Ljava/util/jar/JarFile;.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:util:jar:JarFile|] @type static;
#L14a130.   v8:= temp;
#L14a132.   if v8 != 0 then goto L14a146;
#L14a136.   v8:= ".EC" @type (object, string);
#L14a13a.   call temp:=  [|java:util:jar:JarFile.endsWithIgnoreCase|](v2, v8) @signature [|Ljava/util/jar/JarFile;.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:util:jar:JarFile|] @type static;
#L14a140.   v8:= temp;
#L14a142.   if v8 == 0 then goto L14a162;
#L14a146.   v7:= 1  @length 4;
#L14a148.   call temp:=  [|java:util:zip:ZipFile.getInputStream|](v11, v1) @signature [|Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a14e.   v4:= temp  @type object;
#L14a150.   v8:= v11.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a154.   call temp:=  [|libcore:io:Streams.readFully|](v4) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;)[B|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14a15a.   v9:= temp  @type object;
#L14a15c.   call temp:=  [|java:util:jar:JarVerifier.addMetaEntry|](v8, v2, v9) @signature [|Ljava/util/jar/JarVerifier;.addMetaEntry:(Ljava/lang/String;[B)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a162.   v3:= v3 + 1;
#L14a166.   goto L14a0c0;

   }
    procedure [|void|] [|java:util:jar:JarFile.close|] ([|java:util:jar:JarFile|] v1 @type (this)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a178.   call temp:=  [|java:util:zip:ZipFile.close|](v1) @signature [|Ljava/util/zip/ZipFile;.close:()V|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a17e.   v0:= 1  @length 4;
#L14a180.   v1.[|java:util:jar:JarFile.closed|]  := v0 @boolean;
#L14a184.   return @void ;

   }
    procedure [|java:util:Enumeration|] [|java:util:jar:JarFile.entries|] ([|java:util:jar:JarFile|] v2 @type (this)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.entries:()Ljava/util/Enumeration;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14a198.   v0:= new [|java:util:jar:JarFile$1JarFileEnumerator|];
#L14a19c.   call temp:=  [|java:util:zip:ZipFile.entries|](v2) @signature [|Ljava/util/zip/ZipFile;.entries:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a1a2.   v1:= temp  @type object;
#L14a1a4.   call temp:=  [|java:util:jar:JarFile$1JarFileEnumerator.<init>|](v0, v2, v1, v2) @signature [|Ljava/util/jar/JarFile$1JarFileEnumerator;.<init>:(Ljava/util/jar/JarFile;Ljava/util/Enumeration;Ljava/util/jar/JarFile;)V|] @classDescriptor [|java:util:jar:JarFile$1JarFileEnumerator|] @type direct;
#L14a1aa.   return v0  @type object;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:jar:JarFile.getEntry|] ([|java:util:jar:JarFile|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14a1bc.   call temp:=  [|java:util:zip:ZipFile.getEntry|](v2, v3) @signature [|Ljava/util/zip/ZipFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a1c2.   v1:= temp  @type object;
#L14a1c4.   if v1 != 0 then goto L14a1ca;
#L14a1c8.   return v1  @type object;
#L14a1ca.   v0:= new [|java:util:jar:JarEntry|];
#L14a1ce.   call temp:=  [|java:util:jar:JarEntry.<init>|](v0, v1) @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L14a1d4.   v0.[|java:util:jar:JarEntry.parentJar|]  := v2 @type object;
#L14a1d8.   v1:= v0  @type object;
#L14a1da.   goto L14a1c8;

   }
    procedure [|java:io:InputStream|] [|java:util:jar:JarFile.getInputStream|] ([|java:util:jar:JarFile|] v6 @type (this), [|java:util:zip:ZipEntry|] v7 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14a1ec.   v2:= 0  @length 4;
#L14a1ee.   v3:= v6.[|java:util:jar:JarFile.manifestEntry|]   @type object;
#L14a1f2.   if v3 == 0 then goto L14a1fc;
#L14a1f6.   call temp:=  [|java:util:jar:JarFile.getManifest|](v6) @signature [|Ljava/util/jar/JarFile;.getManifest:()Ljava/util/jar/Manifest;|] @classDescriptor [|java:util:jar:JarFile|] @type virtual;
#L14a1fc.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a200.   if v3 == 0 then goto L14a272;
#L14a204.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a208.   call temp:=  [|java:util:jar:JarFile.getManifest|](v6) @signature [|Ljava/util/jar/JarFile;.getManifest:()Ljava/util/jar/Manifest;|] @classDescriptor [|java:util:jar:JarFile|] @type virtual;
#L14a20e.   v4:= temp  @type object;
#L14a210.   call temp:=  [|java:util:jar:JarVerifier.setManifest|](v3, v4) @signature [|Ljava/util/jar/JarVerifier;.setManifest:(Ljava/util/jar/Manifest;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a216.   v3:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a21a.   if v3 == 0 then goto L14a232;
#L14a21e.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a222.   v4:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a226.   call temp:=  [|java:util:jar:Manifest.getMainAttributesEnd|](v4) @signature [|Ljava/util/jar/Manifest;.getMainAttributesEnd:()I|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14a22c.   v4:= temp;
#L14a22e.   v3.[|java:util:jar:JarVerifier.mainAttributesEnd|]  := v4;
#L14a232.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a236.   call temp:=  [|java:util:jar:JarVerifier.readCertificates|](v3) @signature [|Ljava/util/jar/JarVerifier;.readCertificates:()Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a23c.   v3:= temp;
#L14a23e.   if v3 == 0 then goto L14a272;
#L14a242.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a246.   call temp:=  [|java:util:jar:JarVerifier.removeMetaEntries|](v3) @signature [|Ljava/util/jar/JarVerifier;.removeMetaEntries:()V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a24c.   v3:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a250.   if v3 == 0 then goto L14a25e;
#L14a254.   v3:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a258.   call temp:=  [|java:util:jar:Manifest.removeChunks|](v3) @signature [|Ljava/util/jar/Manifest;.removeChunks:()V|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14a25e.   v3:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a262.   call temp:=  [|java:util:jar:JarVerifier.isSignedJar|](v3) @signature [|Ljava/util/jar/JarVerifier;.isSignedJar:()Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a268.   v3:= temp;
#L14a26a.   if v3 != 0 then goto L14a272;
#L14a26e.   v6.[|java:util:jar:JarFile.verifier|]  := v2 @type object;
#L14a272.   call temp:=  [|java:util:zip:ZipFile.getInputStream|](v6, v7) @signature [|Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a278.   v1:= temp  @type object;
#L14a27a.   if v1 != 0 then goto L14a282;
#L14a27e.   v1:= v2  @type object;
#L14a280.   return v1  @type object;
#L14a282.   v2:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a286.   if v2 == 0 then goto L14a280;
#L14a28a.   call temp:=  [|java:util:zip:ZipEntry.getSize|](v7) @signature [|Ljava/util/zip/ZipEntry;.getSize:()J|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a290.   v2:= temp  @type wide;
#L14a292.   v4:= -1  @length wide16;
#L14a296.   v2:= cmp(v2,v4);
#L14a29a.   if v2 == 0 then goto L14a280;
#L14a29e.   v2:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a2a2.   call temp:=  [|java:util:zip:ZipEntry.getName|](v7) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a2a8.   v3:= temp  @type object;
#L14a2aa.   call temp:=  [|java:util:jar:JarVerifier.initEntry|](v2, v3) @signature [|Ljava/util/jar/JarVerifier;.initEntry:(Ljava/lang/String;)Ljava/util/jar/JarVerifier$VerifierEntry;|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a2b0.   v0:= temp  @type object;
#L14a2b2.   if v0 == 0 then goto L14a280;
#L14a2b6.   v2:= new [|java:util:jar:JarFile$JarFileInputStream|];
#L14a2ba.   call temp:=  [|java:util:jar:JarFile$JarFileInputStream.<init>|](v2, v1, v7, v0) @signature [|Ljava/util/jar/JarFile$JarFileInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/ZipEntry;Ljava/util/jar/JarVerifier$VerifierEntry;)V|] @classDescriptor [|java:util:jar:JarFile$JarFileInputStream|] @type direct;
#L14a2c0.   v1:= v2  @type object;
#L14a2c2.   goto L14a280;

   }
    procedure [|java:util:jar:JarEntry|] [|java:util:jar:JarFile.getJarEntry|] ([|java:util:jar:JarFile|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.getJarEntry:(Ljava/lang/String;)Ljava/util/jar/JarEntry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a2d4.   call temp:=  [|java:util:jar:JarFile.getEntry|](v1, v2) @signature [|Ljava/util/jar/JarFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:jar:JarFile|] @type virtual;
#L14a2da.   v0:= temp  @type object;
#L14a2dc.   v0:= ([|java:util:jar:JarEntry|])v0;
#L14a2e0.   return v0  @type object;

   }
    procedure [|java:util:jar:Manifest|] [|java:util:jar:JarFile.getManifest|] ([|java:util:jar:JarFile|] v6 @type (this)) @owner [|java:util:jar:JarFile|] @signature [|Ljava/util/jar/JarFile;.getManifest:()Ljava/util/jar/Manifest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14a2f4.   v5:= 0  @length 4;
#L14a2f6.   v2:= v6.[|java:util:jar:JarFile.closed|]   @boolean;
#L14a2fa.   if v2 == 0 then goto L14a30e;
#L14a2fe.   v2:= new [|java:lang:IllegalStateException|];
#L14a302.   v3:= "JarFile has been closed" @type (object, string);
#L14a306.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L14a30c.   throw v2;
#L14a30e.   v2:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a312.   if v2 == 0 then goto L14a31c;
#L14a316.   v2:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a31a.   return v2  @type object;
#L14a31c.   v2:= v6.[|java:util:jar:JarFile.manifestEntry|]   @type object;
#L14a320.   call temp:=  [|java:util:zip:ZipFile.getInputStream|](v6, v2) @signature [|Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a326.   v1:= temp  @type object;
#L14a328.   v2:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a32c.   if v2 == 0 then goto L14a35a;
#L14a330.   v2:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a334.   v3:= v6.[|java:util:jar:JarFile.manifestEntry|]   @type object;
#L14a338.   call temp:=  [|java:util:zip:ZipEntry.getName|](v3) @signature [|Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14a33e.   v3:= temp  @type object;
#L14a340.   call temp:=  [|libcore:io:Streams.readFully|](v1) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;)[B|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14a346.   v4:= temp  @type object;
#L14a348.   call temp:=  [|java:util:jar:JarVerifier.addMetaEntry|](v2, v3, v4) @signature [|Ljava/util/jar/JarVerifier;.addMetaEntry:(Ljava/lang/String;[B)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14a34e.   v2:= v6.[|java:util:jar:JarFile.manifestEntry|]   @type object;
#L14a352.   call temp:=  [|java:util:zip:ZipFile.getInputStream|](v6, v2) @signature [|Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;|] @classDescriptor [|java:util:zip:ZipFile|] @type super;
#L14a358.   v1:= temp  @type object;
#L14a35a.   v3:= new [|java:util:jar:Manifest|];
#L14a35e.   v2:= v6.[|java:util:jar:JarFile.verifier|]   @type object;
#L14a362.   if v2 == 0 then goto L14a384;
#L14a366.   v2:= 1  @length 4;
#L14a368.   call temp:=  [|java:util:jar:Manifest.<init>|](v3, v1, v2) @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/io/InputStream;Z)V|] @classDescriptor [|java:util:jar:Manifest|] @type direct;
#L14a36e.   v6.[|java:util:jar:JarFile.manifest|]  := v3 @type object;
#L14a372.   call temp:=  [|java:io:InputStream.close|](v1) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L14a378.   v2:= 0  @length 4;
#L14a37a.   v6.[|java:util:jar:JarFile.manifestEntry|]  := v2 @type object;
#L14a37e.   v2:= v6.[|java:util:jar:JarFile.manifest|]   @type object;
#L14a382.   goto L14a31a;
#L14a384.   v2:= 0  @length 4;
#L14a386.   goto L14a368;
#L14a388.   v2:= Exception  @type object;
#L14a38a.   call temp:=  [|java:io:InputStream.close|](v1) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L14a390.   throw v2;
#L14a392.   v0:= Exception  @type object;
#L14a394.   v6.[|java:util:jar:JarFile.manifestEntry|]  := v5 @type object;
#L14a398.   goto L14a37e;
  catch  [|java:lang:NullPointerException|] @[L14a31c..L14a358] goto L14a392;
  catch  [|any|] @[L14a35a..L14a372] goto L14a388;
  catch  [|java:lang:NullPointerException|] @[L14a372..L14a37e] goto L14a392;
  catch  [|java:lang:NullPointerException|] @[L14a38a..L14a392] goto L14a392;

   }
record [|java:util:zip:InflaterInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|byte|][] [|java:util:zip:InflaterInputStream.buf|]    @AccessFlag PROTECTED;
      [|boolean|] [|java:util:zip:InflaterInputStream.closed|]    @AccessFlag ;
      [|boolean|] [|java:util:zip:InflaterInputStream.eof|]    @AccessFlag ;
      [|java:util:zip:Inflater|] [|java:util:zip:InflaterInputStream.inf|]    @AccessFlag PROTECTED;
      [|int|] [|java:util:zip:InflaterInputStream.len|]    @AccessFlag PROTECTED;
      [|int|] [|java:util:zip:InflaterInputStream.nativeEndBufSize|]    @AccessFlag ;
   }
      global [|int|] @@[|java:util:zip:InflaterInputStream.BUF_SIZE|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:zip:InflaterInputStream.<init>|] ([|java:util:zip:InflaterInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14a3d4.   v0:= new [|java:util:zip:Inflater|];
#L14a3d8.   call temp:=  [|java:util:zip:Inflater.<init>|](v0) @signature [|Ljava/util/zip/Inflater;.<init>:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L14a3de.   v1:= 512  @length 16;
#L14a3e2.   call temp:=  [|java:util:zip:InflaterInputStream.<init>|](v2, v3, v0, v1) @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a3e8.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.<init>|] ([|java:util:zip:InflaterInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object), [|java:util:zip:Inflater|] v3 @type (object)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14a3fc.   v0:= 512  @length 16;
#L14a400.   call temp:=  [|java:util:zip:InflaterInputStream.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a406.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.<init>|] ([|java:util:zip:InflaterInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|java:util:zip:Inflater|] v4 @type (object), [|int|] v5) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14a418.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L14a41e.   v0:= 0  @length 4;
#L14a420.   v2.[|java:util:zip:InflaterInputStream.nativeEndBufSize|]  := v0;
#L14a424.   if v3 != 0 then goto L14a438;
#L14a428.   v0:= new [|java:lang:NullPointerException|];
#L14a42c.   v1:= "is == null" @type (object, string);
#L14a430.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14a436.   throw v0;
#L14a438.   if v4 != 0 then goto L14a44c;
#L14a43c.   v0:= new [|java:lang:NullPointerException|];
#L14a440.   v1:= "inflater == null" @type (object, string);
#L14a444.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14a44a.   throw v0;
#L14a44c.   if v5 > 0 then goto L14a45c;
#L14a450.   v0:= new [|java:lang:IllegalArgumentException|];
#L14a454.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14a45a.   throw v0;
#L14a45c.   v2.[|java:util:zip:InflaterInputStream.inf|]  := v4 @type object;
#L14a460.   v0:= instanceof @varname v3 @type [|java:util:zip:ZipFile$RAFStream|];
#L14a464.   if v0 == 0 then goto L14a46e;
#L14a468.   v2.[|java:util:zip:InflaterInputStream.nativeEndBufSize|]  := v5;
#L14a46c.   return @void ;
#L14a46e.   v0:= new [|byte|][v5];
#L14a472.   v2.[|java:util:zip:InflaterInputStream.buf|]  := v0 @type object;
#L14a476.   goto L14a46c;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.checkClosed|] ([|java:util:zip:InflaterInputStream|] v2 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14a488.   v0:= v2.[|java:util:zip:InflaterInputStream.closed|]   @boolean;
#L14a48c.   if v0 == 0 then goto L14a4a0;
#L14a490.   v0:= new [|java:io:IOException|];
#L14a494.   v1:= "Stream is closed" @type (object, string);
#L14a498.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14a49e.   throw v0;
#L14a4a0.   return @void ;

   }
    procedure [|int|] [|java:util:zip:InflaterInputStream.available|] ([|java:util:zip:InflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a4b4.   call temp:=  [|java:util:zip:InflaterInputStream.checkClosed|](v1) @signature [|Ljava/util/zip/InflaterInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a4ba.   v0:= v1.[|java:util:zip:InflaterInputStream.eof|]   @boolean;
#L14a4be.   if v0 == 0 then goto L14a4c6;
#L14a4c2.   v0:= 0  @length 4;
#L14a4c4.   return v0;
#L14a4c6.   v0:= 1  @length 4;
#L14a4c8.   goto L14a4c4;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.close|] ([|java:util:zip:InflaterInputStream|] v2 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14a4dc.   v1:= 1  @length 4;
#L14a4de.   v0:= v2.[|java:util:zip:InflaterInputStream.closed|]   @boolean;
#L14a4e2.   if v0 != 0 then goto L14a4fe;
#L14a4e6.   v0:= v2.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a4ea.   call temp:=  [|java:util:zip:Inflater.end|](v0) @signature [|Ljava/util/zip/Inflater;.end:()V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a4f0.   v2.[|java:util:zip:InflaterInputStream.closed|]  := v1 @boolean;
#L14a4f4.   v2.[|java:util:zip:InflaterInputStream.eof|]  := v1 @boolean;
#L14a4f8.   call temp:=  [|java:io:FilterInputStream.close|](v2) @signature [|Ljava/io/FilterInputStream;.close:()V|] @classDescriptor [|java:io:FilterInputStream|] @type super;
#L14a4fe.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.fill|] ([|java:util:zip:InflaterInputStream|] v10 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.fill:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14a510.   call temp:=  [|java:util:zip:InflaterInputStream.checkClosed|](v10) @signature [|Ljava/util/zip/InflaterInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a516.   v4:= v10.[|java:util:zip:InflaterInputStream.nativeEndBufSize|] ;
#L14a51a.   if v4 <= 0 then goto L14a57e;
#L14a51e.   v1:= v10.[|java:util:zip:InflaterInputStream.in|]   @type object;
#L14a522.   v1:= ([|java:util:zip:ZipFile$RAFStream|])v1;
#L14a526.   v5:= v1.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]   @type object;
#L14a52a.   (@monitorenter v5)
#L14a52c.   v6:= v1.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L14a530.   v8:= v1.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L14a534.   v2:= v6 - v8  @type long;
#L14a538.   v4:= v10.[|java:util:zip:InflaterInputStream.nativeEndBufSize|] ;
#L14a53c.   v6:= (long)v4  @type i2l;
#L14a53e.   v4:= cmp(v2,v6);
#L14a542.   if v4 <= 0 then goto L14a54c;
#L14a546.   v4:= v10.[|java:util:zip:InflaterInputStream.nativeEndBufSize|] ;
#L14a54a.   v2:= (long)v4  @type i2l;
#L14a54c.   v4:= v10.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a550.   v6:= v1.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]   @type object;
#L14a554.   call temp:=  [|java:io:RandomAccessFile.getFD|](v6) @signature [|Ljava/io/RandomAccessFile;.getFD:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L14a55a.   v6:= temp  @type object;
#L14a55c.   v7:= v1.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L14a560.   v9:= v10.[|java:util:zip:InflaterInputStream.nativeEndBufSize|] ;
#L14a564.   call temp:=  [|java:util:zip:Inflater.setFileInput|](v4, v6, v7, v8, v9) @signature [|Ljava/util/zip/Inflater;.setFileInput:(Ljava/io/FileDescriptor;JI)I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a56a.   v0:= temp;
#L14a56c.   v6:= (long)v0  @type i2l;
#L14a56e.   call temp:=  [|java:util:zip:ZipFile$RAFStream.skip|](v1, v6, v7) @signature [|Ljava/util/zip/ZipFile$RAFStream;.skip:(J)J|] @classDescriptor [|java:util:zip:ZipFile$RAFStream|] @type virtual;
#L14a574.   (@monitorexit v5)
#L14a576.   return @void ;
#L14a578.   v4:= Exception  @type object;
#L14a57a.   (@monitorexit v5)
#L14a57c.   throw v4;
#L14a57e.   v4:= v10.[|java:util:zip:InflaterInputStream.in|]   @type object;
#L14a582.   v5:= v10.[|java:util:zip:InflaterInputStream.buf|]   @type object;
#L14a586.   call temp:=  [|java:io:InputStream.read|](v4, v5) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L14a58c.   v4:= temp;
#L14a58e.   v10.[|java:util:zip:InflaterInputStream.len|]  := v4;
#L14a592.   if v4 <= 0 then goto L14a576;
#L14a596.   v4:= v10.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a59a.   v5:= v10.[|java:util:zip:InflaterInputStream.buf|]   @type object;
#L14a59e.   v6:= 0  @length 4;
#L14a5a0.   v7:= v10.[|java:util:zip:InflaterInputStream.len|] ;
#L14a5a4.   call temp:=  [|java:util:zip:Inflater.setInput|](v4, v5, v6, v7) @signature [|Ljava/util/zip/Inflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a5aa.   goto L14a576;
  catch  [|any|] @[L14a52c..L14a57c] goto L14a578;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.mark|] ([|java:util:zip:InflaterInputStream|] v0 @type (this), [|int|] v1) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
      
#L14a5c8.   return @void ;

   }
    procedure [|boolean|] [|java:util:zip:InflaterInputStream.markSupported|] ([|java:util:zip:InflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a5dc.   v0:= 0  @length 4;
#L14a5de.   return v0;

   }
    procedure [|int|] [|java:util:zip:InflaterInputStream.read|] ([|java:util:zip:InflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a5f0.   call temp:=  [|libcore:io:Streams.readSingleByte|](v1) @signature [|Llibcore/io/Streams;.readSingleByte:(Ljava/io/InputStream;)I|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14a5f6.   v0:= temp;
#L14a5f8.   return v0;

   }
    procedure [|int|] [|java:util:zip:InflaterInputStream.read|] ([|java:util:zip:InflaterInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14a60c.   v4:= 1  @length 4;
#L14a60e.   v2:= -1  @length 4;
#L14a610.   call temp:=  [|java:util:zip:InflaterInputStream.checkClosed|](v5) @signature [|Ljava/util/zip/InflaterInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a616.   v3:= v6.length;
#L14a618.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v3, v7, v8) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L14a61e.   if v8 != 0 then goto L14a626;
#L14a622.   v1:= 0  @length 4;
#L14a624.   return v1;
#L14a626.   v3:= v5.[|java:util:zip:InflaterInputStream.eof|]   @boolean;
#L14a62a.   if v3 == 0 then goto L14a632;
#L14a62e.   v1:= v2;
#L14a630.   goto L14a624;
#L14a632.   v3:= v5.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a636.   call temp:=  [|java:util:zip:Inflater.needsInput|](v3) @signature [|Ljava/util/zip/Inflater;.needsInput:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a63c.   v3:= temp;
#L14a63e.   if v3 == 0 then goto L14a648;
#L14a642.   call temp:=  [|java:util:zip:InflaterInputStream.fill|](v5) @signature [|Ljava/util/zip/InflaterInputStream;.fill:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type virtual;
#L14a648.   v3:= v5.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a64c.   call temp:=  [|java:util:zip:Inflater.inflate|](v3, v6, v7, v8) @signature [|Ljava/util/zip/Inflater;.inflate:([BII)I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a652.   v1:= temp;
#L14a654.   v3:= v5.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a658.   call temp:=  [|java:util:zip:Inflater.finished|](v3) @signature [|Ljava/util/zip/Inflater;.finished:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a65e.   v3:= temp;
#L14a660.   v5.[|java:util:zip:InflaterInputStream.eof|]  := v3 @boolean;
#L14a664.   if v1 > 0 then goto L14a624;
#L14a668.   v3:= v5.[|java:util:zip:InflaterInputStream.eof|]   @boolean;
#L14a66c.   if v3 == 0 then goto L14a674;
#L14a670.   v1:= v2;
#L14a672.   goto L14a624;
#L14a674.   v3:= v5.[|java:util:zip:InflaterInputStream.inf|]   @type object;
#L14a678.   call temp:=  [|java:util:zip:Inflater.needsDictionary|](v3) @signature [|Ljava/util/zip/Inflater;.needsDictionary:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14a67e.   v3:= temp;
#L14a680.   if v3 == 0 then goto L14a68e;
#L14a684.   v3:= 1  @length 4;
#L14a686.   v5.[|java:util:zip:InflaterInputStream.eof|]  := v3 @boolean;
#L14a68a.   v1:= v2;
#L14a68c.   goto L14a624;
#L14a68e.   v3:= v5.[|java:util:zip:InflaterInputStream.len|] ;
#L14a692.   if v3 != v2 then goto L14a632;
#L14a696.   v3:= 1  @length 4;
#L14a698.   v5.[|java:util:zip:InflaterInputStream.eof|]  := v3 @boolean;
#L14a69c.   v3:= new [|java:io:EOFException|];
#L14a6a0.   call temp:=  [|java:io:EOFException.<init>|](v3) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L14a6a6.   throw v3;
#L14a6a8.   v0:= Exception  @type object;
#L14a6aa.   v5.[|java:util:zip:InflaterInputStream.eof|]  := v4 @boolean;
#L14a6ae.   v3:= v5.[|java:util:zip:InflaterInputStream.len|] ;
#L14a6b2.   if v3 != v2 then goto L14a6c2;
#L14a6b6.   v2:= new [|java:io:EOFException|];
#L14a6ba.   call temp:=  [|java:io:EOFException.<init>|](v2) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L14a6c0.   throw v2;
#L14a6c2.   v2:= new [|java:io:IOException|];
#L14a6c6.   call temp:=  [|java:io:IOException.<init>|](v2) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14a6cc.   call temp:=  [|java:io:IOException.initCause|](v2, v0) @signature [|Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L14a6d2.   v2:= temp  @type object;
#L14a6d4.   v2:= ([|java:io:IOException|])v2;
#L14a6d8.   v2:= ([|java:io:IOException|])v2;
#L14a6dc.   throw v2;
  catch  [|java:util:zip:DataFormatException|] @[L14a648..L14a6a8] goto L14a6a8;

   }
    procedure [|void|] [|java:util:zip:InflaterInputStream.reset|] ([|java:util:zip:InflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a700.   v0:= new [|java:io:IOException|];
#L14a704.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14a70a.   throw v0;

   }
    procedure [|long|] [|java:util:zip:InflaterInputStream.skip|] ([|java:util:zip:InflaterInputStream|] v2 @type (this), [|long|] v3) @owner [|java:util:zip:InflaterInputStream|] @signature [|Ljava/util/zip/InflaterInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14a71c.   v0:= 0  @length wide16;
#L14a720.   v0:= cmp(v3,v0);
#L14a724.   if v0 >= 0 then goto L14a738;
#L14a728.   v0:= new [|java:lang:IllegalArgumentException|];
#L14a72c.   v1:= "byteCount < 0" @type (object, string);
#L14a730.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14a736.   throw v0;
#L14a738.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14a73e.   v0:= temp  @type wide;
#L14a740.   return v0  @type wide;

   }
record [|java:util:zip:ZipInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:InflaterInputStream|], [|java:util:zip:ZipConstants|] {
      [|char|][] [|java:util:zip:ZipInputStream.charBuf|]    @AccessFlag PRIVATE;
      [|java:util:zip:CRC32|] [|java:util:zip:ZipInputStream.crc|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:zip:ZipEntry|] [|java:util:zip:ZipInputStream.currentEntry|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:zip:ZipInputStream.entriesEnd|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipInputStream.entryIn|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:zip:ZipInputStream.hasDD|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:util:zip:ZipInputStream.hdrBuf|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:zip:ZipInputStream.inRead|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipInputStream.lastRead|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:util:zip:ZipInputStream.nameBuf|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:zip:ZipInputStream.ZIPLocalHeaderVersionNeeded|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipInputStream.<init>|] ([|java:util:zip:ZipInputStream|] v5 @type (this), [|java:io:InputStream|] v6 @type (object)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14a754.   v4:= 256  @length 16;
#L14a758.   v3:= 0  @length 4;
#L14a75a.   v0:= new [|java:io:PushbackInputStream|];
#L14a75e.   v1:= 512  @length 16;
#L14a762.   call temp:=  [|java:io:PushbackInputStream.<init>|](v0, v6, v1) @signature [|Ljava/io/PushbackInputStream;.<init>:(Ljava/io/InputStream;I)V|] @classDescriptor [|java:io:PushbackInputStream|] @type direct;
#L14a768.   v1:= new [|java:util:zip:Inflater|];
#L14a76c.   v2:= 1  @length 4;
#L14a76e.   call temp:=  [|java:util:zip:Inflater.<init>|](v1, v2) @signature [|Ljava/util/zip/Inflater;.<init>:(Z)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L14a774.   call temp:=  [|java:util:zip:InflaterInputStream.<init>|](v5, v0, v1) @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L14a77a.   v5.[|java:util:zip:ZipInputStream.entriesEnd|]  := v3 @boolean;
#L14a77e.   v5.[|java:util:zip:ZipInputStream.hasDD|]  := v3 @boolean;
#L14a782.   v5.[|java:util:zip:ZipInputStream.entryIn|]  := v3;
#L14a786.   v5.[|java:util:zip:ZipInputStream.lastRead|]  := v3;
#L14a78a.   v0:= 26  @length 16;
#L14a78e.   v0:= new [|byte|][v0];
#L14a792.   v5.[|java:util:zip:ZipInputStream.hdrBuf|]  := v0 @type object;
#L14a796.   v0:= new [|java:util:zip:CRC32|];
#L14a79a.   call temp:=  [|java:util:zip:CRC32.<init>|](v0) @signature [|Ljava/util/zip/CRC32;.<init>:()V|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L14a7a0.   v5.[|java:util:zip:ZipInputStream.crc|]  := v0 @type object;
#L14a7a4.   v0:= new [|byte|][v4];
#L14a7a8.   v5.[|java:util:zip:ZipInputStream.nameBuf|]  := v0 @type object;
#L14a7ac.   v0:= new [|char|][v4];
#L14a7b0.   v5.[|java:util:zip:ZipInputStream.charBuf|]  := v0 @type object;
#L14a7b4.   if v6 != 0 then goto L14a7c8;
#L14a7b8.   v0:= new [|java:lang:NullPointerException|];
#L14a7bc.   v1:= "stream == null" @type (object, string);
#L14a7c0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14a7c6.   throw v0;
#L14a7c8.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipInputStream.checkClosed|] ([|java:util:zip:ZipInputStream|] v2 @type (this)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14a7dc.   v0:= v2.[|java:util:zip:ZipInputStream.closed|]   @boolean;
#L14a7e0.   if v0 == 0 then goto L14a7f4;
#L14a7e4.   v0:= new [|java:io:IOException|];
#L14a7e8.   v1:= "Stream is closed" @type (object, string);
#L14a7ec.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14a7f2.   throw v0;
#L14a7f4.   return @void ;

   }
    procedure [|int|] [|java:util:zip:ZipInputStream.peekShort|] ([|java:util:zip:ZipInputStream|] v2 @type (this), [|int|] v3) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14a808.   v0:= v2.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a80c.   v1:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14a810.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v3, v1) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14a816.   v0:= temp;
#L14a818.    v1:= 0.000000;
#L14a81e.   v0:= v0 ^& v1  @type int;
#L14a820.   return v0;

   }
    procedure [|void|] [|java:util:zip:ZipInputStream.readAndVerifyDataDescriptor|] ([|java:util:zip:ZipInputStream|] v8 @type (this), [|int|] v9, [|int|] v10) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.readAndVerifyDataDescriptor:(II)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14a834.   v6:= 0.000000L  @length wide;
#L14a83e.   v5:= 0  @length 4;
#L14a840.   v1:= v8.[|java:util:zip:ZipInputStream.hasDD|]   @boolean;
#L14a844.   if v1 == 0 then goto L14a8fc;
#L14a848.   v1:= v8.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14a84c.   v2:= v8.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a850.   v3:= 16  @length 16;
#L14a854.   call temp:=  [|libcore:io:Streams.readFully|](v1, v2, v5, v3) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14a85a.   v1:= v8.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a85e.   v2:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14a862.   call temp:=  [|libcore:io:Memory.peekInt|](v1, v5, v2) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14a868.   v0:= temp;
#L14a86a.    v1:= 0.000000;
#L14a870.   if v0 == v1 then goto L14a89e;
#L14a874.   v1:= new [|java:util:zip:ZipException|];
#L14a878.   v2:= "unknown format (EXTSIG=%x)" @type (object, string);
#L14a87c.   v3:= 1  @length 4;
#L14a87e.   v3:= new [|java:lang:Object|][v3];
#L14a882.   call temp:=  [|java:lang:Integer.valueOf|](v0) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14a888.   v4:= temp  @type object;
#L14a88a.   v3[v5]:= v4  @type object;
#L14a88e.   call temp:=  [|java:lang:String.format|](v2, v3) @signature [|Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L14a894.   v2:= temp  @type object;
#L14a896.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14a89c.   throw v1;
#L14a89e.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a8a2.   v2:= v8.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a8a6.   v3:= 4  @length 4;
#L14a8a8.   v4:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14a8ac.   call temp:=  [|libcore:io:Memory.peekInt|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14a8b2.   v2:= temp;
#L14a8b4.   v2:= (long)v2  @type i2l;
#L14a8b6.   v2:= v2 ^& v6  @type long;
#L14a8b8.   v1.[|java:util:zip:ZipEntry.crc|]  := v2 @wide;
#L14a8bc.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a8c0.   v2:= v8.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a8c4.   v3:= 8  @length 16;
#L14a8c8.   v4:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14a8cc.   call temp:=  [|libcore:io:Memory.peekInt|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14a8d2.   v2:= temp;
#L14a8d4.   v2:= (long)v2  @type i2l;
#L14a8d6.   v2:= v2 ^& v6  @type long;
#L14a8d8.   v1.[|java:util:zip:ZipEntry.compressedSize|]  := v2 @wide;
#L14a8dc.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a8e0.   v2:= v8.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14a8e4.   v3:= 12  @length 16;
#L14a8e8.   v4:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14a8ec.   call temp:=  [|libcore:io:Memory.peekInt|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14a8f2.   v2:= temp;
#L14a8f4.   v2:= (long)v2  @type i2l;
#L14a8f6.   v2:= v2 ^& v6  @type long;
#L14a8f8.   v1.[|java:util:zip:ZipEntry.size|]  := v2 @wide;
#L14a8fc.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a900.   v1:= v1.[|java:util:zip:ZipEntry.crc|]   @wide;
#L14a904.   v3:= v8.[|java:util:zip:ZipInputStream.crc|]   @type object;
#L14a908.   call temp:=  [|java:util:zip:CRC32.getValue|](v3) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14a90e.   v3:= temp  @type wide;
#L14a910.   v1:= cmp(v1,v3);
#L14a914.   if v1 == 0 then goto L14a928;
#L14a918.   v1:= new [|java:util:zip:ZipException|];
#L14a91c.   v2:= "CRC mismatch" @type (object, string);
#L14a920.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14a926.   throw v1;
#L14a928.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a92c.   v1:= v1.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14a930.   v3:= (long)v9  @type i2l;
#L14a932.   v1:= cmp(v1,v3);
#L14a936.   if v1 != 0 then goto L14a94c;
#L14a93a.   v1:= v8.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a93e.   v1:= v1.[|java:util:zip:ZipEntry.size|]   @wide;
#L14a942.   v3:= (long)v10  @type i2l;
#L14a944.   v1:= cmp(v1,v3);
#L14a948.   if v1 == 0 then goto L14a95c;
#L14a94c.   v1:= new [|java:util:zip:ZipException|];
#L14a950.   v2:= "Size mismatch" @type (object, string);
#L14a954.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14a95a.   throw v1;
#L14a95c.   return @void ;

   }
    procedure [|int|] [|java:util:zip:ZipInputStream.available|] ([|java:util:zip:ZipInputStream|] v4 @type (this)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14a970.   call temp:=  [|java:util:zip:ZipInputStream.checkClosed|](v4) @signature [|Ljava/util/zip/ZipInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14a976.   v0:= v4.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a97a.   if v0 == 0 then goto L14a994;
#L14a97e.   v0:= v4.[|java:util:zip:ZipInputStream.inRead|] ;
#L14a982.   v0:= (long)v0  @type i2l;
#L14a984.   v2:= v4.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a988.   v2:= v2.[|java:util:zip:ZipEntry.size|]   @wide;
#L14a98c.   v0:= cmp(v0,v2);
#L14a990.   if v0 >= 0 then goto L14a998;
#L14a994.   v0:= 1  @length 4;
#L14a996.   return v0;
#L14a998.   v0:= 0  @length 4;
#L14a99a.   goto L14a996;

   }
    procedure [|void|] [|java:util:zip:ZipInputStream.close|] ([|java:util:zip:ZipInputStream|] v1 @type (this)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14a9ac.   v0:= v1.[|java:util:zip:ZipInputStream.closed|]   @boolean;
#L14a9b0.   if v0 != 0 then goto L14a9c0;
#L14a9b4.   call temp:=  [|java:util:zip:ZipInputStream.closeEntry|](v1) @signature [|Ljava/util/zip/ZipInputStream;.closeEntry:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type virtual;
#L14a9ba.   call temp:=  [|java:util:zip:InflaterInputStream.close|](v1) @signature [|Ljava/util/zip/InflaterInputStream;.close:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type super;
#L14a9c0.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipInputStream.closeEntry|] ([|java:util:zip:ZipInputStream|] v10 @type (this)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.closeEntry:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14a9d4.   call temp:=  [|java:util:zip:ZipInputStream.checkClosed|](v10) @signature [|Ljava/util/zip/ZipInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14a9da.   v7:= v10.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a9de.   if v7 != 0 then goto L14a9e4;
#L14a9e2.   return @void ;
#L14a9e4.   v7:= v10.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a9e8.   v7:= instanceof @varname v7 @type [|java:util:jar:JarEntry|];
#L14a9ec.   if v7 == 0 then goto L14aa14;
#L14a9f0.   v7:= v10.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14a9f4.   v7:= ([|java:util:jar:JarEntry|])v7;
#L14a9f8.   call temp:=  [|java:util:jar:JarEntry.getAttributes|](v7) @signature [|Ljava/util/jar/JarEntry;.getAttributes:()Ljava/util/jar/Attributes;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14a9fe.   v6:= temp  @type object;
#L14aa00.   if v6 == 0 then goto L14aa14;
#L14aa04.   v7:= "hidden" @type (object, string);
#L14aa08.   call temp:=  [|java:util:jar:Attributes.containsKey|](v6, v7) @signature [|Ljava/util/jar/Attributes;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14aa0e.   v7:= temp;
#L14aa10.   if v7 != 0 then goto L14a9e2;
#L14aa14.   v3:= 0  @length 4;
#L14aa16.   call temp:=  [|libcore:io:Streams.skipAll|](v10) @signature [|Llibcore/io/Streams;.skipAll:(Ljava/io/InputStream;)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14aa1c.   v7:= v10.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14aa20.   v7:= v7.[|java:util:zip:ZipEntry.compressionMethod|] ;
#L14aa24.   v8:= 8  @length 16;
#L14aa28.   if v7 != v8 then goto L14aab2;
#L14aa2c.   v7:= v10.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14aa30.   call temp:=  [|java:util:zip:Inflater.getTotalIn|](v7) @signature [|Ljava/util/zip/Inflater;.getTotalIn:()I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14aa36.   v4:= temp;
#L14aa38.   v7:= v10.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14aa3c.   call temp:=  [|java:util:zip:Inflater.getTotalOut|](v7) @signature [|Ljava/util/zip/Inflater;.getTotalOut:()I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14aa42.   v5:= temp;
#L14aa44.   v7:= v10.[|java:util:zip:ZipInputStream.entryIn|] ;
#L14aa48.   v0:= v7 - v4  @type int;
#L14aa4c.   if v0 == 0 then goto L14aa68;
#L14aa50.   v7:= v10.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14aa54.   v7:= ([|java:io:PushbackInputStream|])v7;
#L14aa58.   v8:= v10.[|java:util:zip:ZipInputStream.buf|]   @type object;
#L14aa5c.   v9:= v10.[|java:util:zip:ZipInputStream.len|] ;
#L14aa60.   v9:= v9 - v0  @type int;
#L14aa62.   call temp:=  [|java:io:PushbackInputStream.unread|](v7, v8, v9, v0) @signature [|Ljava/io/PushbackInputStream;.unread:([BII)V|] @classDescriptor [|java:io:PushbackInputStream|] @type virtual;
#L14aa68.   call temp:=  [|java:util:zip:ZipInputStream.readAndVerifyDataDescriptor|](v10, v4, v5) @signature [|Ljava/util/zip/ZipInputStream;.readAndVerifyDataDescriptor:(II)V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14aa6e.   v7:= v10.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14aa72.   call temp:=  [|java:util:zip:Inflater.reset|](v7) @signature [|Ljava/util/zip/Inflater;.reset:()V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14aa78.   v7:= 0  @length 4;
#L14aa7a.   v10.[|java:util:zip:ZipInputStream.len|]  := v7;
#L14aa7e.   v10.[|java:util:zip:ZipInputStream.entryIn|]  := v7;
#L14aa82.   v10.[|java:util:zip:ZipInputStream.inRead|]  := v7;
#L14aa86.   v10.[|java:util:zip:ZipInputStream.lastRead|]  := v7;
#L14aa8a.   v7:= v10.[|java:util:zip:ZipInputStream.crc|]   @type object;
#L14aa8e.   call temp:=  [|java:util:zip:CRC32.reset|](v7) @signature [|Ljava/util/zip/CRC32;.reset:()V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14aa94.   v7:= 0  @length 4;
#L14aa96.   v10.[|java:util:zip:ZipInputStream.currentEntry|]  := v7 @type object;
#L14aa9a.   if v3 == 0 then goto L14a9e2;
#L14aa9e.   v7:= instanceof @varname v3 @type [|java:io:IOException|];
#L14aaa2.   if v7 == 0 then goto L14aac6;
#L14aaa6.   v3:= ([|java:io:IOException|])v3;
#L14aaaa.   throw v3;
#L14aaac.   v1:= Exception  @type object;
#L14aaae.   v3:= v1  @type object;
#L14aab0.   goto L14aa1c;
#L14aab2.   v4:= v10.[|java:util:zip:ZipInputStream.inRead|] ;
#L14aab6.   v5:= v10.[|java:util:zip:ZipInputStream.inRead|] ;
#L14aaba.   goto L14aa44;
#L14aabc.   v1:= Exception  @type object;
#L14aabe.   if v3 != 0 then goto L14aa6e;
#L14aac2.   v3:= v1  @type object;
#L14aac4.   goto L14aa6e;
#L14aac6.   v7:= instanceof @varname v3 @type [|java:lang:RuntimeException|];
#L14aaca.   if v7 == 0 then goto L14aad4;
#L14aace.   v3:= ([|java:lang:RuntimeException|])v3;
#L14aad2.   throw v3;
#L14aad4.   v2:= new [|java:lang:AssertionError|];
#L14aad8.   call temp:=  [|java:lang:AssertionError.<init>|](v2) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L14aade.   call temp:=  [|java:lang:AssertionError.initCause|](v2, v3) @signature [|Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:AssertionError|] @type virtual;
#L14aae4.   throw v2;
  catch  [|java:lang:Exception|] @[L14aa16..L14aa1c] goto L14aaac;
  catch  [|java:lang:Exception|] @[L14aa68..L14aa6e] goto L14aabc;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:zip:ZipInputStream.createZipEntry|] ([|java:util:zip:ZipInputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.createZipEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L14ab14.   v0:= new [|java:util:zip:ZipEntry|];
#L14ab18.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v0, v2) @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L14ab1e.   return v0  @type object;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:zip:ZipInputStream.getNextEntry|] ([|java:util:zip:ZipInputStream|] v23 @type (this)) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
      
#L14ab30.   call temp:=  [|java:util:zip:ZipInputStream.closeEntry|](v23) @signature [|Ljava/util/zip/ZipInputStream;.closeEntry:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type virtual;
#L14ab36.   v0:= v23  @type object;
#L14ab3a.   v0:= v0.[|java:util:zip:ZipInputStream.entriesEnd|]   @boolean;
#L14ab3e.   v19:= v0;
#L14ab42.   if v19 == 0 then goto L14ab4c;
#L14ab46.   v19:= 0  @length 16;
#L14ab4a.   return v19  @type object;
#L14ab4c.   v0:= v23  @type object;
#L14ab50.   v0:= v0.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14ab54.   v19:= v0  @type object;
#L14ab58.   v0:= v23  @type object;
#L14ab5c.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14ab60.   v20:= v0  @type object;
#L14ab64.   v21:= 0  @length 16;
#L14ab68.   v22:= 4  @length 16;
#L14ab6c.   call temp:=  [|libcore:io:Streams.readFully|](v19, v20, v21, v22) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14ab72.   v0:= v23  @type object;
#L14ab76.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14ab7a.   v19:= v0  @type object;
#L14ab7e.   v20:= 0  @length 16;
#L14ab82.   v21:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14ab86.   call temp:=  [|libcore:io:Memory.peekInt|](v19, v20, v21) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14ab8c.   v16:= temp;
#L14ab8e.   v0:= v16;
#L14ab92.   v0:= (long)v0  @type i2l;
#L14ab94.   v19:= v0  @type wide;
#L14ab98.    v21:= 0.000000  @length wide32;
#L14ab9e.   v19:= cmp(v19,v21);
#L14aba2.   if v19 != 0 then goto L14abbc;
#L14aba6.   v19:= 1  @length 16;
#L14abaa.   v0:= v19;
#L14abae.   v1:= v23  @type object;
#L14abb2.   v1.[|java:util:zip:ZipInputStream.entriesEnd|]  := v0 @boolean;
#L14abb6.   v19:= 0  @length 16;
#L14abba.   goto L14ab4a;
#L14abbc.   v0:= v16;
#L14abc0.   v0:= (long)v0  @type i2l;
#L14abc2.   v19:= v0  @type wide;
#L14abc6.    v21:= 0.000000  @length wide32;
#L14abcc.   v19:= cmp(v19,v21);
#L14abd0.   if v19 == 0 then goto L14abda;
#L14abd4.   v19:= 0  @length 16;
#L14abd8.   goto L14ab4a;
#L14abda.   v0:= v23  @type object;
#L14abde.   v0:= v0.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14abe2.   v19:= v0  @type object;
#L14abe6.   v0:= v23  @type object;
#L14abea.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14abee.   v20:= v0  @type object;
#L14abf2.   v21:= 0  @length 16;
#L14abf6.   v22:= 26  @length 16;
#L14abfa.   call temp:=  [|libcore:io:Streams.readFully|](v19, v20, v21, v22) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14ac00.   v19:= 0  @length 16;
#L14ac04.   v0:= v23  @type object;
#L14ac08.   v1:= v19;
#L14ac0c.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14ac12.   v19:= temp;
#L14ac14.   v0:= v19;
#L14ac18.   v0:= v0 ^& 255;
#L14ac1c.   v18:= v0;
#L14ac20.   v19:= 20  @length 16;
#L14ac24.   v0:= v18;
#L14ac28.   v1:= v19;
#L14ac2c.   if v0 <= v1 then goto L14ac6a;
#L14ac30.   v19:= new [|java:util:zip:ZipException|];
#L14ac34.   v20:= new [|java:lang:StringBuilder|];
#L14ac38.   call temp:=  [|java:lang:StringBuilder.<init>|](v20) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14ac3e.   v21:= "Cannot read local header version " @type (object, string);
#L14ac42.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ac48.   v20:= temp  @type object;
#L14ac4a.   v0:= v20  @type object;
#L14ac4e.   v1:= v18;
#L14ac52.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ac58.   v20:= temp  @type object;
#L14ac5a.   call temp:=  [|java:lang:StringBuilder.toString|](v20) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ac60.   v20:= temp  @type object;
#L14ac62.   call temp:=  [|java:util:zip:ZipException.<init>|](v19, v20) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14ac68.   throw v19;
#L14ac6a.   v19:= 2  @length 16;
#L14ac6e.   v0:= v23  @type object;
#L14ac72.   v1:= v19;
#L14ac76.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14ac7c.   v15:= temp;
#L14ac7e.   v19:= v15 ^& 8;
#L14ac82.   if v19 == 0 then goto L14adb2;
#L14ac86.   v19:= 1  @length 16;
#L14ac8a.   v0:= v19;
#L14ac8e.   v1:= v23  @type object;
#L14ac92.   v1.[|java:util:zip:ZipInputStream.hasDD|]  := v0 @boolean;
#L14ac96.   v19:= 6  @length 16;
#L14ac9a.   v0:= v23  @type object;
#L14ac9e.   v1:= v19;
#L14aca2.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14aca8.   v10:= temp;
#L14acaa.   v19:= 8  @length 16;
#L14acae.   v0:= v23  @type object;
#L14acb2.   v1:= v19;
#L14acb6.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14acbc.   v9:= temp;
#L14acbe.   v19:= 4  @length 16;
#L14acc2.   v0:= v23  @type object;
#L14acc6.   v1:= v19;
#L14acca.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14acd0.   v6:= temp;
#L14acd2.   v7:= 0  @length wide16;
#L14acd6.   v4:= 0  @length wide16;
#L14acda.   v11:= -1  @length wide16;
#L14acde.   v0:= v23  @type object;
#L14ace2.   v0:= v0.[|java:util:zip:ZipInputStream.hasDD|]   @boolean;
#L14ace6.   v19:= v0;
#L14acea.   if v19 != 0 then goto L14ad8a;
#L14acee.   v0:= v23  @type object;
#L14acf2.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14acf6.   v19:= v0  @type object;
#L14acfa.   v20:= 10  @length 16;
#L14acfe.   v21:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14ad02.   call temp:=  [|libcore:io:Memory.peekInt|](v19, v20, v21) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14ad08.   v19:= temp;
#L14ad0a.   v0:= v19;
#L14ad0e.   v0:= (long)v0  @type i2l;
#L14ad10.   v19:= v0  @type wide;
#L14ad14.   v21:= 0.000000L  @length wide;
#L14ad1e.   v7:= v19 ^& v21  @type long;
#L14ad22.   v0:= v23  @type object;
#L14ad26.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14ad2a.   v19:= v0  @type object;
#L14ad2e.   v20:= 14  @length 16;
#L14ad32.   v21:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14ad36.   call temp:=  [|libcore:io:Memory.peekInt|](v19, v20, v21) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14ad3c.   v19:= temp;
#L14ad3e.   v0:= v19;
#L14ad42.   v0:= (long)v0  @type i2l;
#L14ad44.   v19:= v0  @type wide;
#L14ad48.   v21:= 0.000000L  @length wide;
#L14ad52.   v4:= v19 ^& v21  @type long;
#L14ad56.   v0:= v23  @type object;
#L14ad5a.   v0:= v0.[|java:util:zip:ZipInputStream.hdrBuf|]   @type object;
#L14ad5e.   v19:= v0  @type object;
#L14ad62.   v20:= 18  @length 16;
#L14ad66.   v21:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L14ad6a.   call temp:=  [|libcore:io:Memory.peekInt|](v19, v20, v21) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L14ad70.   v19:= temp;
#L14ad72.   v0:= v19;
#L14ad76.   v0:= (long)v0  @type i2l;
#L14ad78.   v19:= v0  @type wide;
#L14ad7c.   v21:= 0.000000L  @length wide;
#L14ad86.   v11:= v19 ^& v21  @type long;
#L14ad8a.   v19:= 22  @length 16;
#L14ad8e.   v0:= v23  @type object;
#L14ad92.   v1:= v19;
#L14ad96.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14ad9c.   v17:= temp;
#L14ad9e.   if v17 != 0 then goto L14adba;
#L14ada2.   v19:= new [|java:util:zip:ZipException|];
#L14ada6.   v20:= "Entry is not named" @type (object, string);
#L14adaa.   call temp:=  [|java:util:zip:ZipException.<init>|](v19, v20) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14adb0.   throw v19;
#L14adb2.   v19:= 0  @length 16;
#L14adb6.   goto L14ac8a;
#L14adba.   v19:= 24  @length 16;
#L14adbe.   v0:= v23  @type object;
#L14adc2.   v1:= v19;
#L14adc6.   call temp:=  [|java:util:zip:ZipInputStream.peekShort|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.peekShort:(I)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14adcc.   v14:= temp;
#L14adce.   v0:= v23  @type object;
#L14add2.   v0:= v0.[|java:util:zip:ZipInputStream.nameBuf|]   @type object;
#L14add6.   v19:= v0  @type object;
#L14adda.   v0:= v19  @type object;
#L14adde.   v0:= v0.length;
#L14ade0.   v19:= v0;
#L14ade4.   v0:= v17;
#L14ade8.   v1:= v19;
#L14adec.   if v0 <= v1 then goto L14ae20;
#L14adf0.   v0:= v17;
#L14adf4.   v0:= new [|byte|][v0];
#L14adf8.   v19:= v0  @type object;
#L14adfc.   v0:= v19  @type object;
#L14ae00.   v1:= v23  @type object;
#L14ae04.   v1.[|java:util:zip:ZipInputStream.nameBuf|]  := v0 @type object;
#L14ae08.   v0:= v17;
#L14ae0c.   v0:= new [|char|][v0];
#L14ae10.   v19:= v0  @type object;
#L14ae14.   v0:= v19  @type object;
#L14ae18.   v1:= v23  @type object;
#L14ae1c.   v1.[|java:util:zip:ZipInputStream.charBuf|]  := v0 @type object;
#L14ae20.   v0:= v23  @type object;
#L14ae24.   v0:= v0.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14ae28.   v19:= v0  @type object;
#L14ae2c.   v0:= v23  @type object;
#L14ae30.   v0:= v0.[|java:util:zip:ZipInputStream.nameBuf|]   @type object;
#L14ae34.   v20:= v0  @type object;
#L14ae38.   v21:= 0  @length 16;
#L14ae3c.   v0:= v19  @type object;
#L14ae40.   v1:= v20  @type object;
#L14ae44.   v2:= v21;
#L14ae48.   v3:= v17;
#L14ae4c.   call temp:=  [|libcore:io:Streams.readFully|](v0, v1, v2, v3) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14ae52.   v0:= v23  @type object;
#L14ae56.   v0:= v0.[|java:util:zip:ZipInputStream.nameBuf|]   @type object;
#L14ae5a.   v19:= v0  @type object;
#L14ae5e.   v0:= v23  @type object;
#L14ae62.   v0:= v0.[|java:util:zip:ZipInputStream.charBuf|]   @type object;
#L14ae66.   v20:= v0  @type object;
#L14ae6a.   v21:= 0  @length 16;
#L14ae6e.   v0:= v19  @type object;
#L14ae72.   v1:= v20  @type object;
#L14ae76.   v2:= v21;
#L14ae7a.   v3:= v17;
#L14ae7e.   call temp:=  [|java:nio:charset:ModifiedUtf8.decode|](v0, v1, v2, v3) @signature [|Ljava/nio/charset/ModifiedUtf8;.decode:([B[CII)Ljava/lang/String;|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L14ae84.   v19:= temp  @type object;
#L14ae86.   v0:= v23  @type object;
#L14ae8a.   v1:= v19  @type object;
#L14ae8e.   call temp:=  [|java:util:zip:ZipInputStream.createZipEntry|](v0, v1) @signature [|Ljava/util/zip/ZipInputStream;.createZipEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:zip:ZipInputStream|] @type virtual;
#L14ae94.   v19:= temp  @type object;
#L14ae96.   v0:= v19  @type object;
#L14ae9a.   v1:= v23  @type object;
#L14ae9e.   v1.[|java:util:zip:ZipInputStream.currentEntry|]  := v0 @type object;
#L14aea2.   v0:= v23  @type object;
#L14aea6.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14aeaa.   v19:= v0  @type object;
#L14aeae.   v0:= v19  @type object;
#L14aeb2.   v0.[|java:util:zip:ZipEntry.time|]  := v10;
#L14aeb6.   v0:= v23  @type object;
#L14aeba.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14aebe.   v19:= v0  @type object;
#L14aec2.   v0:= v19  @type object;
#L14aec6.   v0.[|java:util:zip:ZipEntry.modDate|]  := v9;
#L14aeca.   v0:= v23  @type object;
#L14aece.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14aed2.   v19:= v0  @type object;
#L14aed6.   v0:= v19  @type object;
#L14aeda.   call temp:=  [|java:util:zip:ZipEntry.setMethod|](v0, v6) @signature [|Ljava/util/zip/ZipEntry;.setMethod:(I)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14aee0.   v19:= -1  @length wide16;
#L14aee4.   v19:= cmp(v11,v19);
#L14aee8.   if v19 == 0 then goto L14af2e;
#L14aeec.   v0:= v23  @type object;
#L14aef0.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14aef4.   v19:= v0  @type object;
#L14aef8.   v0:= v19  @type object;
#L14aefc.   call temp:=  [|java:util:zip:ZipEntry.setCrc|](v0, v7, v8) @signature [|Ljava/util/zip/ZipEntry;.setCrc:(J)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14af02.   v0:= v23  @type object;
#L14af06.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14af0a.   v19:= v0  @type object;
#L14af0e.   v0:= v19  @type object;
#L14af12.   call temp:=  [|java:util:zip:ZipEntry.setSize|](v0, v11, v12) @signature [|Ljava/util/zip/ZipEntry;.setSize:(J)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14af18.   v0:= v23  @type object;
#L14af1c.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14af20.   v19:= v0  @type object;
#L14af24.   v0:= v19  @type object;
#L14af28.   call temp:=  [|java:util:zip:ZipEntry.setCompressedSize|](v0, v4, v5) @signature [|Ljava/util/zip/ZipEntry;.setCompressedSize:(J)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14af2e.   if v14 <= 0 then goto L14af6a;
#L14af32.   v13:= new [|byte|][v14];
#L14af36.   v0:= v23  @type object;
#L14af3a.   v0:= v0.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14af3e.   v19:= v0  @type object;
#L14af42.   v20:= 0  @length 16;
#L14af46.   v0:= v19  @type object;
#L14af4a.   v1:= v20;
#L14af4e.   call temp:=  [|libcore:io:Streams.readFully|](v0, v13, v1, v14) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14af54.   v0:= v23  @type object;
#L14af58.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14af5c.   v19:= v0  @type object;
#L14af60.   v0:= v19  @type object;
#L14af64.   call temp:=  [|java:util:zip:ZipEntry.setExtra|](v0, v13) @signature [|Ljava/util/zip/ZipEntry;.setExtra:([B)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14af6a.   v0:= v23  @type object;
#L14af6e.   v0:= v0.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14af72.   v19:= v0  @type object;
#L14af76.   goto L14ab4a;

   }
    procedure [|int|] [|java:util:zip:ZipInputStream.read|] ([|java:util:zip:ZipInputStream|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:ZipInputStream|] @signature [|Ljava/util/zip/ZipInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14af8c.   v3:= -1  @length 4;
#L14af8e.   call temp:=  [|java:util:zip:ZipInputStream.checkClosed|](v6) @signature [|Ljava/util/zip/ZipInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14af94.   v4:= v7.length;
#L14af96.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v4, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L14af9c.   v4:= v6.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14afa0.   call temp:=  [|java:util:zip:Inflater.finished|](v4) @signature [|Ljava/util/zip/Inflater;.finished:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14afa6.   v4:= temp;
#L14afa8.   if v4 != 0 then goto L14afb4;
#L14afac.   v4:= v6.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14afb0.   if v4 != 0 then goto L14afb6;
#L14afb4.   return v3;
#L14afb6.   v4:= v6.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14afba.   v4:= v4.[|java:util:zip:ZipEntry.compressionMethod|] ;
#L14afbe.   if v4 != 0 then goto L14b074;
#L14afc2.   v4:= v6.[|java:util:zip:ZipInputStream.currentEntry|]   @type object;
#L14afc6.   v4:= v4.[|java:util:zip:ZipEntry.size|]   @wide;
#L14afca.   v0:= (int)v4  @type l2i;
#L14afcc.   v4:= v6.[|java:util:zip:ZipInputStream.inRead|] ;
#L14afd0.   if v4 >= v0 then goto L14afb4;
#L14afd4.   v4:= v6.[|java:util:zip:ZipInputStream.lastRead|] ;
#L14afd8.   v5:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14afdc.   if v4 < v5 then goto L14b014;
#L14afe0.   v4:= 0  @length 4;
#L14afe2.   v6.[|java:util:zip:ZipInputStream.lastRead|]  := v4;
#L14afe6.   v4:= v6.[|java:util:zip:ZipInputStream.in|]   @type object;
#L14afea.   v5:= v6.[|java:util:zip:ZipInputStream.buf|]   @type object;
#L14afee.   call temp:=  [|java:io:InputStream.read|](v4, v5) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L14aff4.   v4:= temp;
#L14aff6.   v6.[|java:util:zip:ZipInputStream.len|]  := v4;
#L14affa.   if v4 != v3 then goto L14b006;
#L14affe.   v4:= 1  @length 4;
#L14b000.   v6.[|java:util:zip:ZipInputStream.eof|]  := v4 @boolean;
#L14b004.   goto L14afb4;
#L14b006.   v4:= v6.[|java:util:zip:ZipInputStream.entryIn|] ;
#L14b00a.   v5:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14b00e.   v4:= v4 + v5  @type int;
#L14b010.   v6.[|java:util:zip:ZipInputStream.entryIn|]  := v4;
#L14b014.   v4:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14b018.   v5:= v6.[|java:util:zip:ZipInputStream.lastRead|] ;
#L14b01c.   v4:= v4 - v5  @type int;
#L14b01e.   if v9 <= v4 then goto L14b070;
#L14b022.   v4:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14b026.   v5:= v6.[|java:util:zip:ZipInputStream.lastRead|] ;
#L14b02a.   v3:= v4 - v5  @type int;
#L14b02e.   v4:= v6.[|java:util:zip:ZipInputStream.inRead|] ;
#L14b032.   v4:= v0 - v4  @type int;
#L14b036.   if v4 >= v3 then goto L14b042;
#L14b03a.   v4:= v6.[|java:util:zip:ZipInputStream.inRead|] ;
#L14b03e.   v3:= v0 - v4  @type int;
#L14b042.   v4:= v6.[|java:util:zip:ZipInputStream.buf|]   @type object;
#L14b046.   v5:= v6.[|java:util:zip:ZipInputStream.lastRead|] ;
#L14b04a.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v7, v8, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L14b050.   v4:= v6.[|java:util:zip:ZipInputStream.lastRead|] ;
#L14b054.   v4:= v4 + v3  @type int;
#L14b056.   v6.[|java:util:zip:ZipInputStream.lastRead|]  := v4;
#L14b05a.   v4:= v6.[|java:util:zip:ZipInputStream.inRead|] ;
#L14b05e.   v4:= v4 + v3  @type int;
#L14b060.   v6.[|java:util:zip:ZipInputStream.inRead|]  := v4;
#L14b064.   v4:= v6.[|java:util:zip:ZipInputStream.crc|]   @type object;
#L14b068.   call temp:=  [|java:util:zip:CRC32.update|](v4, v7, v8, v3) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14b06e.   goto L14afb4;
#L14b070.   v3:= v9;
#L14b072.   goto L14b02e;
#L14b074.   v4:= v6.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14b078.   call temp:=  [|java:util:zip:Inflater.needsInput|](v4) @signature [|Ljava/util/zip/Inflater;.needsInput:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14b07e.   v4:= temp;
#L14b080.   if v4 == 0 then goto L14b0a0;
#L14b084.   call temp:=  [|java:util:zip:ZipInputStream.fill|](v6) @signature [|Ljava/util/zip/ZipInputStream;.fill:()V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type virtual;
#L14b08a.   v4:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14b08e.   if v4 <= 0 then goto L14b0a0;
#L14b092.   v4:= v6.[|java:util:zip:ZipInputStream.entryIn|] ;
#L14b096.   v5:= v6.[|java:util:zip:ZipInputStream.len|] ;
#L14b09a.   v4:= v4 + v5  @type int;
#L14b09c.   v6.[|java:util:zip:ZipInputStream.entryIn|]  := v4;
#L14b0a0.   v4:= v6.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14b0a4.   call temp:=  [|java:util:zip:Inflater.inflate|](v4, v7, v8, v9) @signature [|Ljava/util/zip/Inflater;.inflate:([BII)I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14b0aa.   v2:= temp;
#L14b0ac.   if v2 != 0 then goto L14b0c0;
#L14b0b0.   v4:= v6.[|java:util:zip:ZipInputStream.inf|]   @type object;
#L14b0b4.   call temp:=  [|java:util:zip:Inflater.finished|](v4) @signature [|Ljava/util/zip/Inflater;.finished:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L14b0ba.   v4:= temp;
#L14b0bc.   if v4 != 0 then goto L14afb4;
#L14b0c0.   v4:= v6.[|java:util:zip:ZipInputStream.crc|]   @type object;
#L14b0c4.   call temp:=  [|java:util:zip:CRC32.update|](v4, v7, v8, v2) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14b0ca.   v3:= v2;
#L14b0cc.   goto L14afb4;
#L14b0d0.   v1:= Exception  @type object;
#L14b0d2.   v4:= new [|java:util:zip:ZipException|];
#L14b0d6.   call temp:=  [|java:util:zip:DataFormatException.getMessage|](v1) @signature [|Ljava/util/zip/DataFormatException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:DataFormatException|] @type virtual;
#L14b0dc.   v5:= temp  @type object;
#L14b0de.   call temp:=  [|java:util:zip:ZipException.<init>|](v4, v5) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14b0e4.   throw v4;
  catch  [|java:util:zip:DataFormatException|] @[L14b0a0..L14b0aa] goto L14b0d0;

   }
record [|java:util:jar:JarInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:ZipInputStream|] {
      [|boolean|] [|java:util:jar:JarInputStream.eos|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:jar:JarInputStream.isMeta|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarEntry|] [|java:util:jar:JarInputStream.jarEntry|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarEntry|] [|java:util:jar:JarInputStream.mEntry|]    @AccessFlag PRIVATE;
      [|java:util:jar:Manifest|] [|java:util:jar:JarInputStream.manifest|]    @AccessFlag PRIVATE;
      [|java:io:OutputStream|] [|java:util:jar:JarInputStream.verStream|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarVerifier|] [|java:util:jar:JarInputStream.verifier|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:jar:JarInputStream.<init>|] ([|java:util:jar:JarInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14b108.   v0:= 1  @length 4;
#L14b10a.   call temp:=  [|java:util:jar:JarInputStream.<init>|](v1, v2, v0) @signature [|Ljava/util/jar/JarInputStream;.<init>:(Ljava/io/InputStream;Z)V|] @classDescriptor [|java:util:jar:JarInputStream|] @type direct;
#L14b110.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarInputStream.<init>|] ([|java:util:jar:JarInputStream|] v4 @type (this), [|java:io:InputStream|] v5 @type (object), [|boolean|] v6) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.<init>:(Ljava/io/InputStream;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14b124.   v3:= 0  @length 4;
#L14b126.   call temp:=  [|java:util:zip:ZipInputStream.<init>|](v4, v5) @signature [|Ljava/util/zip/ZipInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:zip:ZipInputStream|] @type direct;
#L14b12c.   v1:= 0  @length 4;
#L14b12e.   v4.[|java:util:jar:JarInputStream.eos|]  := v1 @boolean;
#L14b132.   if v6 == 0 then goto L14b148;
#L14b136.   v1:= new [|java:util:jar:JarVerifier|];
#L14b13a.   v2:= "JarInputStream" @type (object, string);
#L14b13e.   call temp:=  [|java:util:jar:JarVerifier.<init>|](v1, v2) @signature [|Ljava/util/jar/JarVerifier;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14b144.   v4.[|java:util:jar:JarInputStream.verifier|]  := v1 @type object;
#L14b148.   call temp:=  [|java:util:jar:JarInputStream.getNextJarEntry|](v4) @signature [|Ljava/util/jar/JarInputStream;.getNextJarEntry:()Ljava/util/jar/JarEntry;|] @classDescriptor [|java:util:jar:JarInputStream|] @type virtual;
#L14b14e.   v1:= temp  @type object;
#L14b150.   v4.[|java:util:jar:JarInputStream.mEntry|]  := v1 @type object;
#L14b154.   if v1 != 0 then goto L14b15a;
#L14b158.   return @void ;
#L14b15a.   v1:= v4.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b15e.   call temp:=  [|java:util:jar:JarEntry.getName|](v1) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b164.   v1:= temp  @type object;
#L14b166.   v2:= "META-INF/" @type (object, string);
#L14b16a.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v2) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14b170.   v1:= temp;
#L14b172.   if v1 == 0 then goto L14b18c;
#L14b176.   v4.[|java:util:jar:JarInputStream.mEntry|]  := v3 @type object;
#L14b17a.   call temp:=  [|java:util:jar:JarInputStream.closeEntry|](v4) @signature [|Ljava/util/jar/JarInputStream;.closeEntry:()V|] @classDescriptor [|java:util:jar:JarInputStream|] @type virtual;
#L14b180.   call temp:=  [|java:util:jar:JarInputStream.getNextJarEntry|](v4) @signature [|Ljava/util/jar/JarInputStream;.getNextJarEntry:()Ljava/util/jar/JarEntry;|] @classDescriptor [|java:util:jar:JarInputStream|] @type virtual;
#L14b186.   v1:= temp  @type object;
#L14b188.   v4.[|java:util:jar:JarInputStream.mEntry|]  := v1 @type object;
#L14b18c.   v1:= v4.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b190.   call temp:=  [|java:util:jar:JarEntry.getName|](v1) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b196.   v1:= temp  @type object;
#L14b198.   v2:= "META-INF/MANIFEST.MF" @type (object, string);
#L14b19c.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v2) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14b1a2.   v1:= temp;
#L14b1a4.   if v1 == 0 then goto L14b1f0;
#L14b1a8.   v4.[|java:util:jar:JarInputStream.mEntry|]  := v3 @type object;
#L14b1ac.   v1:= new [|java:util:jar:Manifest|];
#L14b1b0.   call temp:=  [|java:util:jar:Manifest.<init>|](v1, v4, v6) @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/io/InputStream;Z)V|] @classDescriptor [|java:util:jar:Manifest|] @type direct;
#L14b1b6.   v4.[|java:util:jar:JarInputStream.manifest|]  := v1 @type object;
#L14b1ba.   call temp:=  [|java:util:jar:JarInputStream.closeEntry|](v4) @signature [|Ljava/util/jar/JarInputStream;.closeEntry:()V|] @classDescriptor [|java:util:jar:JarInputStream|] @type virtual;
#L14b1c0.   if v6 == 0 then goto L14b158;
#L14b1c4.   v1:= v4.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b1c8.   v2:= v4.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b1cc.   call temp:=  [|java:util:jar:JarVerifier.setManifest|](v1, v2) @signature [|Ljava/util/jar/JarVerifier;.setManifest:(Ljava/util/jar/Manifest;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14b1d2.   v1:= v4.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b1d6.   if v1 == 0 then goto L14b158;
#L14b1da.   v1:= v4.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b1de.   v2:= v4.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b1e2.   call temp:=  [|java:util:jar:Manifest.getMainAttributesEnd|](v2) @signature [|Ljava/util/jar/Manifest;.getMainAttributesEnd:()I|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14b1e8.   v2:= temp;
#L14b1ea.   v1.[|java:util:jar:JarVerifier.mainAttributesEnd|]  := v2;
#L14b1ee.   goto L14b158;
#L14b1f0.   v0:= new [|java:util:jar:Attributes|];
#L14b1f4.   v1:= 3  @length 4;
#L14b1f6.   call temp:=  [|java:util:jar:Attributes.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes;.<init>:(I)V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14b1fc.   v1:= v0.[|java:util:jar:Attributes.map|]   @type object;
#L14b200.   v2:= "hidden" @type (object, string);
#L14b204.   call temp:=  [|java:util:Map.put|](v1, v2, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14b20a.   v1:= v4.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b20e.   call temp:=  [|java:util:jar:JarEntry.setAttributes|](v1, v0) @signature [|Ljava/util/jar/JarEntry;.setAttributes:(Ljava/util/jar/Attributes;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b214.   v4.[|java:util:jar:JarInputStream.verifier|]  := v3 @type object;
#L14b218.   goto L14b158;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:jar:JarInputStream.createZipEntry|] ([|java:util:jar:JarInputStream|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.createZipEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L14b22c.   v0:= new [|java:util:jar:JarEntry|];
#L14b230.   call temp:=  [|java:util:jar:JarEntry.<init>|](v0, v3) @signature [|Ljava/util/jar/JarEntry;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type direct;
#L14b236.   v1:= v2.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b23a.   if v1 == 0 then goto L14b250;
#L14b23e.   v1:= v2.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b242.   call temp:=  [|java:util:jar:Manifest.getAttributes|](v1, v3) @signature [|Ljava/util/jar/Manifest;.getAttributes:(Ljava/lang/String;)Ljava/util/jar/Attributes;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14b248.   v1:= temp  @type object;
#L14b24a.   call temp:=  [|java:util:jar:JarEntry.setAttributes|](v0, v1) @signature [|Ljava/util/jar/JarEntry;.setAttributes:(Ljava/util/jar/Attributes;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b250.   return v0  @type object;

   }
    procedure [|java:util:jar:Manifest|] [|java:util:jar:JarInputStream.getManifest|] ([|java:util:jar:JarInputStream|] v1 @type (this)) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.getManifest:()Ljava/util/jar/Manifest;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14b264.   v0:= v1.[|java:util:jar:JarInputStream.manifest|]   @type object;
#L14b268.   return v0  @type object;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:jar:JarInputStream.getNextEntry|] ([|java:util:jar:JarInputStream|] v2 @type (this)) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14b27c.   v1:= 0  @length 4;
#L14b27e.   v0:= v2.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b282.   if v0 == 0 then goto L14b2a8;
#L14b286.   v0:= v2.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b28a.   v2.[|java:util:jar:JarInputStream.jarEntry|]  := v0 @type object;
#L14b28e.   v2.[|java:util:jar:JarInputStream.mEntry|]  := v1 @type object;
#L14b292.   v0:= v2.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b296.   call temp:=  [|java:util:jar:JarEntry.setAttributes|](v0, v1) @signature [|Ljava/util/jar/JarEntry;.setAttributes:(Ljava/util/jar/Attributes;)V|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b29c.   v0:= 0  @length 4;
#L14b29e.   v2.[|java:util:jar:JarInputStream.eos|]  := v0 @boolean;
#L14b2a2.   v0:= v2.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b2a6.   return v0  @type object;
#L14b2a8.   call temp:=  [|java:util:zip:ZipInputStream.getNextEntry|](v2) @signature [|Ljava/util/zip/ZipInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:zip:ZipInputStream|] @type super;
#L14b2ae.   v0:= temp  @type object;
#L14b2b0.   v0:= ([|java:util:jar:JarEntry|])v0;
#L14b2b4.   v2.[|java:util:jar:JarInputStream.jarEntry|]  := v0 @type object;
#L14b2b8.   v0:= v2.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b2bc.   if v0 != 0 then goto L14b2c4;
#L14b2c0.   v0:= v1  @type object;
#L14b2c2.   goto L14b2a6;
#L14b2c4.   v0:= v2.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b2c8.   if v0 == 0 then goto L14b29c;
#L14b2cc.   v0:= v2.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b2d0.   call temp:=  [|java:util:jar:JarEntry.getName|](v0) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b2d6.   v0:= temp  @type object;
#L14b2d8.   v1:= @@[|java:util:Locale.US|]   @type object;
#L14b2dc.   call temp:=  [|java:lang:String.toUpperCase|](v0, v1) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L14b2e2.   v0:= temp  @type object;
#L14b2e4.   v1:= "META-INF/" @type (object, string);
#L14b2e8.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14b2ee.   v0:= temp;
#L14b2f0.   v2.[|java:util:jar:JarInputStream.isMeta|]  := v0 @boolean;
#L14b2f4.   v0:= v2.[|java:util:jar:JarInputStream.isMeta|]   @boolean;
#L14b2f8.   if v0 == 0 then goto L14b30c;
#L14b2fc.   v0:= new [|java:io:ByteArrayOutputStream|];
#L14b300.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v0) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L14b306.   v2.[|java:util:jar:JarInputStream.verStream|]  := v0 @type object;
#L14b30a.   goto L14b29c;
#L14b30c.   v0:= v2.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b310.   v1:= v2.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b314.   call temp:=  [|java:util:jar:JarEntry.getName|](v1) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b31a.   v1:= temp  @type object;
#L14b31c.   call temp:=  [|java:util:jar:JarVerifier.initEntry|](v0, v1) @signature [|Ljava/util/jar/JarVerifier;.initEntry:(Ljava/lang/String;)Ljava/util/jar/JarVerifier$VerifierEntry;|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14b322.   v0:= temp  @type object;
#L14b324.   v2.[|java:util:jar:JarInputStream.verStream|]  := v0 @type object;
#L14b328.   goto L14b29c;

   }
    procedure [|java:util:jar:JarEntry|] [|java:util:jar:JarInputStream.getNextJarEntry|] ([|java:util:jar:JarInputStream|] v1 @type (this)) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.getNextJarEntry:()Ljava/util/jar/JarEntry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14b33c.   call temp:=  [|java:util:jar:JarInputStream.getNextEntry|](v1) @signature [|Ljava/util/jar/JarInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:jar:JarInputStream|] @type virtual;
#L14b342.   v0:= temp  @type object;
#L14b344.   v0:= ([|java:util:jar:JarEntry|])v0;
#L14b348.   return v0  @type object;

   }
    procedure [|int|] [|java:util:jar:JarInputStream.read|] ([|java:util:jar:JarInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|java:util:jar:JarInputStream|] @signature [|Ljava/util/jar/JarInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14b35c.   v2:= -1  @length 4;
#L14b35e.   v3:= v5.[|java:util:jar:JarInputStream.mEntry|]   @type object;
#L14b362.   if v3 == 0 then goto L14b36a;
#L14b366.   v1:= v2;
#L14b368.   return v1;
#L14b36a.   call temp:=  [|java:util:zip:ZipInputStream.read|](v5, v6, v7, v8) @signature [|Ljava/util/zip/ZipInputStream;.read:([BII)I|] @classDescriptor [|java:util:zip:ZipInputStream|] @type super;
#L14b370.   v1:= temp;
#L14b372.   v3:= v5.[|java:util:jar:JarInputStream.verStream|]   @type object;
#L14b376.   if v3 == 0 then goto L14b368;
#L14b37a.   v3:= v5.[|java:util:jar:JarInputStream.eos|]   @boolean;
#L14b37e.   if v3 != 0 then goto L14b368;
#L14b382.   if v1 != v2 then goto L14b3e8;
#L14b386.   v2:= 1  @length 4;
#L14b388.   v5.[|java:util:jar:JarInputStream.eos|]  := v2 @boolean;
#L14b38c.   v2:= v5.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b390.   if v2 == 0 then goto L14b368;
#L14b394.   v2:= v5.[|java:util:jar:JarInputStream.isMeta|]   @boolean;
#L14b398.   if v2 == 0 then goto L14b3d8;
#L14b39c.   v3:= v5.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b3a0.   v2:= v5.[|java:util:jar:JarInputStream.jarEntry|]   @type object;
#L14b3a4.   call temp:=  [|java:util:jar:JarEntry.getName|](v2) @signature [|Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarEntry|] @type virtual;
#L14b3aa.   v4:= temp  @type object;
#L14b3ac.   v2:= v5.[|java:util:jar:JarInputStream.verStream|]   @type object;
#L14b3b0.   v2:= ([|java:io:ByteArrayOutputStream|])v2;
#L14b3b4.   call temp:=  [|java:io:ByteArrayOutputStream.toByteArray|](v2) @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14b3ba.   v2:= temp  @type object;
#L14b3bc.   call temp:=  [|java:util:jar:JarVerifier.addMetaEntry|](v3, v4, v2) @signature [|Ljava/util/jar/JarVerifier;.addMetaEntry:(Ljava/lang/String;[B)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14b3c2.   v2:= v5.[|java:util:jar:JarInputStream.verifier|]   @type object;
#L14b3c6.   call temp:=  [|java:util:jar:JarVerifier.readCertificates|](v2) @signature [|Ljava/util/jar/JarVerifier;.readCertificates:()Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type virtual;
#L14b3cc.   goto L14b368;
#L14b3ce.   v0:= Exception  @type object;
#L14b3d0.   v2:= 0  @length 4;
#L14b3d2.   v5.[|java:util:jar:JarInputStream.verifier|]  := v2 @type object;
#L14b3d6.   throw v0;
#L14b3d8.   v2:= v5.[|java:util:jar:JarInputStream.verStream|]   @type object;
#L14b3dc.   v2:= ([|java:util:jar:JarVerifier$VerifierEntry|])v2;
#L14b3e0.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.verify|](v2) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type virtual;
#L14b3e6.   goto L14b368;
#L14b3e8.   v2:= v5.[|java:util:jar:JarInputStream.verStream|]   @type object;
#L14b3ec.   call temp:=  [|java:io:OutputStream.write|](v2, v6, v7, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b3f2.   goto L14b368;
  catch  [|java:lang:SecurityException|] @[L14b3c2..L14b3cc] goto L14b3ce;

   }
record [|java:util:zip:DeflaterOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|] {
      [|byte|][] [|java:util:zip:DeflaterOutputStream.buf|]    @AccessFlag PROTECTED;
      [|java:util:zip:Deflater|] [|java:util:zip:DeflaterOutputStream.def|]    @AccessFlag PROTECTED;
      [|boolean|] [|java:util:zip:DeflaterOutputStream.done|]    @AccessFlag ;
      [|boolean|] [|java:util:zip:DeflaterOutputStream.syncFlush|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:util:zip:DeflaterOutputStream.BUF_SIZE|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14b414.   v0:= new [|java:util:zip:Deflater|];
#L14b418.   call temp:=  [|java:util:zip:Deflater.<init>|](v0) @signature [|Ljava/util/zip/Deflater;.<init>:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L14b41e.   v1:= 512  @length 16;
#L14b422.   v2:= 0  @length 4;
#L14b424.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v3, v4, v0, v1, v2) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b42a.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|java:util:zip:Deflater|] v4 @type (object)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14b43c.   v0:= 512  @length 16;
#L14b440.   v1:= 0  @length 4;
#L14b442.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v2, v3, v4, v0, v1) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b448.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|java:util:zip:Deflater|] v3 @type (object), [|int|] v4) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14b45c.   v0:= 0  @length 4;
#L14b45e.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v1, v2, v3, v4, v0) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b464.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|java:util:zip:Deflater|] v4 @type (object), [|int|] v5, [|boolean|] v6) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14b478.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L14b47e.   v0:= 0  @length 4;
#L14b480.   v2.[|java:util:zip:DeflaterOutputStream.done|]  := v0 @boolean;
#L14b484.   if v3 != 0 then goto L14b498;
#L14b488.   v0:= new [|java:lang:NullPointerException|];
#L14b48c.   v1:= "os == null" @type (object, string);
#L14b490.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14b496.   throw v0;
#L14b498.   if v4 != 0 then goto L14b4ac;
#L14b49c.   v0:= new [|java:lang:NullPointerException|];
#L14b4a0.   v1:= "def == null" @type (object, string);
#L14b4a4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14b4aa.   throw v0;
#L14b4ac.   if v5 > 0 then goto L14b4bc;
#L14b4b0.   v0:= new [|java:lang:IllegalArgumentException|];
#L14b4b4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14b4ba.   throw v0;
#L14b4bc.   v2.[|java:util:zip:DeflaterOutputStream.def|]  := v4 @type object;
#L14b4c0.   v2.[|java:util:zip:DeflaterOutputStream.syncFlush|]  := v6 @boolean;
#L14b4c4.   v0:= new [|byte|][v5];
#L14b4c8.   v2.[|java:util:zip:DeflaterOutputStream.buf|]  := v0 @type object;
#L14b4cc.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|java:util:zip:Deflater|] v3 @type (object), [|boolean|] v4) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14b4e0.   v0:= 512  @length 16;
#L14b4e4.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v1, v2, v3, v0, v4) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b4ea.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.<init>|] ([|java:util:zip:DeflaterOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|boolean|] v4) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14b4fc.   v0:= new [|java:util:zip:Deflater|];
#L14b500.   call temp:=  [|java:util:zip:Deflater.<init>|](v0) @signature [|Ljava/util/zip/Deflater;.<init>:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L14b506.   v1:= 512  @length 16;
#L14b50a.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v2, v3, v0, v1, v4) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;IZ)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b510.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.close|] ([|java:util:zip:DeflaterOutputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14b524.   v0:= v1.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b528.   call temp:=  [|java:util:zip:Deflater.finished|](v0) @signature [|Ljava/util/zip/Deflater;.finished:()Z|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b52e.   v0:= temp;
#L14b530.   if v0 != 0 then goto L14b53a;
#L14b534.   call temp:=  [|java:util:zip:DeflaterOutputStream.finish|](v1) @signature [|Ljava/util/zip/DeflaterOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type virtual;
#L14b53a.   v0:= v1.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b53e.   call temp:=  [|java:util:zip:Deflater.end|](v0) @signature [|Ljava/util/zip/Deflater;.end:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b544.   v0:= v1.[|java:util:zip:DeflaterOutputStream.out|]   @type object;
#L14b548.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b54e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.deflate|] ([|java:util:zip:DeflaterOutputStream|] v4 @type (this)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.deflate:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14b560.   v1:= v4.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b564.   v2:= v4.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b568.   call temp:=  [|java:util:zip:Deflater.deflate|](v1, v2) @signature [|Ljava/util/zip/Deflater;.deflate:([B)I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b56e.   v0:= temp;
#L14b570.   if v0 == 0 then goto L14b586;
#L14b574.   v1:= v4.[|java:util:zip:DeflaterOutputStream.out|]   @type object;
#L14b578.   v2:= v4.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b57c.   v3:= 0  @length 4;
#L14b57e.   call temp:=  [|java:io:OutputStream.write|](v1, v2, v3, v0) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b584.   goto L14b560;
#L14b586.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.finish|] ([|java:util:zip:DeflaterOutputStream|] v4 @type (this)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.finish:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14b598.   v1:= v4.[|java:util:zip:DeflaterOutputStream.done|]   @boolean;
#L14b59c.   if v1 == 0 then goto L14b5a2;
#L14b5a0.   return @void ;
#L14b5a2.   v1:= v4.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b5a6.   call temp:=  [|java:util:zip:Deflater.finish|](v1) @signature [|Ljava/util/zip/Deflater;.finish:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b5ac.   v1:= v4.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b5b0.   call temp:=  [|java:util:zip:Deflater.finished|](v1) @signature [|Ljava/util/zip/Deflater;.finished:()Z|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b5b6.   v1:= temp;
#L14b5b8.   if v1 != 0 then goto L14b5de;
#L14b5bc.   v1:= v4.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b5c0.   v2:= v4.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b5c4.   call temp:=  [|java:util:zip:Deflater.deflate|](v1, v2) @signature [|Ljava/util/zip/Deflater;.deflate:([B)I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b5ca.   v0:= temp;
#L14b5cc.   v1:= v4.[|java:util:zip:DeflaterOutputStream.out|]   @type object;
#L14b5d0.   v2:= v4.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b5d4.   v3:= 0  @length 4;
#L14b5d6.   call temp:=  [|java:io:OutputStream.write|](v1, v2, v3, v0) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b5dc.   goto L14b5ac;
#L14b5de.   v1:= 1  @length 4;
#L14b5e0.   v4.[|java:util:zip:DeflaterOutputStream.done|]  := v1 @boolean;
#L14b5e4.   goto L14b5a0;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.flush|] ([|java:util:zip:DeflaterOutputStream|] v6 @type (this)) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14b5f8.   v5:= 0  @length 4;
#L14b5fa.   v1:= v6.[|java:util:zip:DeflaterOutputStream.syncFlush|]   @boolean;
#L14b5fe.   if v1 == 0 then goto L14b62e;
#L14b602.   v1:= v6.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b606.   v2:= v6.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b60a.   v3:= v6.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b60e.   v3:= v3.length;
#L14b610.   v4:= 2  @length 4;
#L14b612.   call temp:=  [|java:util:zip:Deflater.deflate|](v1, v2, v5, v3, v4) @signature [|Ljava/util/zip/Deflater;.deflate:([BIII)I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b618.   v0:= temp;
#L14b61a.   if v0 == 0 then goto L14b62e;
#L14b61e.   v1:= v6.[|java:util:zip:DeflaterOutputStream.out|]   @type object;
#L14b622.   v2:= v6.[|java:util:zip:DeflaterOutputStream.buf|]   @type object;
#L14b626.   call temp:=  [|java:io:OutputStream.write|](v1, v2, v5, v0) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b62c.   goto L14b602;
#L14b62e.   v1:= v6.[|java:util:zip:DeflaterOutputStream.out|]   @type object;
#L14b632.   call temp:=  [|java:io:OutputStream.flush|](v1) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b638.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.write|] ([|java:util:zip:DeflaterOutputStream|] v0 @type (this), [|int|] v1) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
      
#L14b64c.   call temp:=  [|libcore:io:Streams.writeSingleByte|](v0, v1) @signature [|Llibcore/io/Streams;.writeSingleByte:(Ljava/io/OutputStream;I)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14b652.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterOutputStream.write|] ([|java:util:zip:DeflaterOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:util:zip:DeflaterOutputStream|] @signature [|Ljava/util/zip/DeflaterOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14b664.   v0:= v2.[|java:util:zip:DeflaterOutputStream.done|]   @boolean;
#L14b668.   if v0 == 0 then goto L14b67c;
#L14b66c.   v0:= new [|java:io:IOException|];
#L14b670.   v1:= "attempt to write after finish" @type (object, string);
#L14b674.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14b67a.   throw v0;
#L14b67c.   v0:= v3.length;
#L14b67e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L14b684.   v0:= v2.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b688.   call temp:=  [|java:util:zip:Deflater.needsInput|](v0) @signature [|Ljava/util/zip/Deflater;.needsInput:()Z|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b68e.   v0:= temp;
#L14b690.   if v0 != 0 then goto L14b6a0;
#L14b694.   v0:= new [|java:io:IOException|];
#L14b698.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14b69e.   throw v0;
#L14b6a0.   v0:= v2.[|java:util:zip:DeflaterOutputStream.def|]   @type object;
#L14b6a4.   call temp:=  [|java:util:zip:Deflater.setInput|](v0, v3, v4, v5) @signature [|Ljava/util/zip/Deflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b6aa.   call temp:=  [|java:util:zip:DeflaterOutputStream.deflate|](v2) @signature [|Ljava/util/zip/DeflaterOutputStream;.deflate:()V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type virtual;
#L14b6b0.   return @void ;

   }
record [|java:util:zip:ZipOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:DeflaterOutputStream|], [|java:util:zip:ZipConstants|] {
      [|java:io:ByteArrayOutputStream|] [|java:util:zip:ZipOutputStream.cDir|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:zip:ZipOutputStream.comment|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipOutputStream.compressLevel|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipOutputStream.compressMethod|]    @AccessFlag PRIVATE;
      [|java:util:zip:CRC32|] [|java:util:zip:ZipOutputStream.crc|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:zip:ZipOutputStream.curOffset|]    @AccessFlag PRIVATE;
      [|java:util:zip:ZipEntry|] [|java:util:zip:ZipOutputStream.currentEntry|]    @AccessFlag PRIVATE;
      [|java:util:HashSet|] [|java:util:zip:ZipOutputStream.entries|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|java:util:zip:ZipOutputStream.nameBytes|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipOutputStream.nameLength|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:ZipOutputStream.offset|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:zip:ZipOutputStream.DEFLATED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipOutputStream.STORED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:ZipOutputStream.ZIPLocalHeaderVersionNeeded|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipOutputStream.<init>|] ([|java:util:zip:ZipOutputStream|] v4 @type (this), [|java:io:OutputStream|] v5 @type (object)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14b6c4.   v3:= 0  @length 4;
#L14b6c6.   v2:= -1  @length 4;
#L14b6c8.   v0:= new [|java:util:zip:Deflater|];
#L14b6cc.   v1:= 1  @length 4;
#L14b6ce.   call temp:=  [|java:util:zip:Deflater.<init>|](v0, v2, v1) @signature [|Ljava/util/zip/Deflater;.<init>:(IZ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L14b6d4.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v4, v5, v0) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L14b6da.   v0:= new [|java:util:HashSet|];
#L14b6de.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L14b6e4.   v4.[|java:util:zip:ZipOutputStream.entries|]  := v0 @type object;
#L14b6e8.   v0:= 8  @length 16;
#L14b6ec.   v4.[|java:util:zip:ZipOutputStream.compressMethod|]  := v0;
#L14b6f0.   v4.[|java:util:zip:ZipOutputStream.compressLevel|]  := v2;
#L14b6f4.   v0:= new [|java:io:ByteArrayOutputStream|];
#L14b6f8.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v0) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L14b6fe.   v4.[|java:util:zip:ZipOutputStream.cDir|]  := v0 @type object;
#L14b702.   v0:= new [|java:util:zip:CRC32|];
#L14b706.   call temp:=  [|java:util:zip:CRC32.<init>|](v0) @signature [|Ljava/util/zip/CRC32;.<init>:()V|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L14b70c.   v4.[|java:util:zip:ZipOutputStream.crc|]  := v0 @type object;
#L14b710.   v4.[|java:util:zip:ZipOutputStream.offset|]  := v3;
#L14b714.   v4.[|java:util:zip:ZipOutputStream.curOffset|]  := v3;
#L14b718.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.checkClosed|] ([|java:util:zip:ZipOutputStream|] v2 @type (this)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14b72c.   v0:= v2.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b730.   if v0 != 0 then goto L14b744;
#L14b734.   v0:= new [|java:io:IOException|];
#L14b738.   v1:= "Stream is closed" @type (object, string);
#L14b73c.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14b742.   throw v0;
#L14b744.   return @void ;

   }
    procedure [|long|] [|java:util:zip:ZipOutputStream.writeLong|] ([|java:util:zip:ZipOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|long|] v4) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14b758.   v0:= 255  @length wide16;
#L14b75c.   v0:= v0 ^& v4  @type long;
#L14b75e.   v0:= (int)v0  @type l2i;
#L14b760.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b766.   v0:= 8  @length 16;
#L14b76a.   v0:= v4 ^> v0  @type long;
#L14b76e.   v0:= (int)v0  @type l2i;
#L14b770.   v0:= v0 ^& 255;
#L14b774.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b77a.   v0:= 16  @length 16;
#L14b77e.   v0:= v4 ^> v0  @type long;
#L14b782.   v0:= (int)v0  @type l2i;
#L14b784.   v0:= v0 ^& 255;
#L14b788.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b78e.   v0:= 24  @length 16;
#L14b792.   v0:= v4 ^> v0  @type long;
#L14b796.   v0:= (int)v0  @type l2i;
#L14b798.   v0:= v0 ^& 255;
#L14b79c.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b7a2.   return v4  @type wide;

   }
    procedure [|int|] [|java:util:zip:ZipOutputStream.writeShort|] ([|java:util:zip:ZipOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|int|] v3) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L14b7b4.   v0:= v3 ^& 255;
#L14b7b8.   call temp:=  [|java:io:OutputStream.write|](v2, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b7be.   v0:= v3 ^> 8;
#L14b7c2.   v0:= v0 ^& 255;
#L14b7c6.   call temp:=  [|java:io:OutputStream.write|](v2, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b7cc.   return v3;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.close|] ([|java:util:zip:ZipOutputStream|] v1 @type (this)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14b7e0.   v0:= v1.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b7e4.   if v0 == 0 then goto L14b808;
#L14b7e8.   call temp:=  [|java:util:zip:ZipOutputStream.finish|](v1) @signature [|Ljava/util/zip/ZipOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type virtual;
#L14b7ee.   v0:= v1.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14b7f2.   call temp:=  [|java:util:zip:Deflater.end|](v0) @signature [|Ljava/util/zip/Deflater;.end:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b7f8.   v0:= v1.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b7fc.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14b802.   v0:= 0  @length 4;
#L14b804.   v1.[|java:util:zip:ZipOutputStream.out|]  := v0 @type object;
#L14b808.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.closeEntry|] ([|java:util:zip:ZipOutputStream|] v10 @type (this)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.closeEntry:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14b81c.   v9:= 0  @length 4;
#L14b81e.   v8:= 20  @length 16;
#L14b822.   v3:= 8  @length 16;
#L14b826.   v2:= 0  @length 4;
#L14b828.   call temp:=  [|java:util:zip:ZipOutputStream.checkClosed|](v10) @signature [|Ljava/util/zip/ZipOutputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b82e.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b832.   if v4 != 0 then goto L14b838;
#L14b836.   return @void ;
#L14b838.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b83c.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v4) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b842.   v4:= temp;
#L14b844.   if v4 != v3 then goto L14b84e;
#L14b848.   call temp:=  [|java:util:zip:DeflaterOutputStream.finish|](v10) @signature [|Ljava/util/zip/DeflaterOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type super;
#L14b84e.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b852.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v4) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b858.   v4:= temp;
#L14b85a.   if v4 != 0 then goto L14b8b2;
#L14b85e.   v4:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14b862.   call temp:=  [|java:util:zip:CRC32.getValue|](v4) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14b868.   v4:= temp  @type wide;
#L14b86a.   v6:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b86e.   v6:= v6.[|java:util:zip:ZipEntry.crc|]   @wide;
#L14b872.   v4:= cmp(v4,v6);
#L14b876.   if v4 == 0 then goto L14b88a;
#L14b87a.   v2:= new [|java:util:zip:ZipException|];
#L14b87e.   v3:= "CRC mismatch" @type (object, string);
#L14b882.   call temp:=  [|java:util:zip:ZipException.<init>|](v2, v3) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14b888.   throw v2;
#L14b88a.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b88e.   v4:= v4.[|java:util:zip:ZipEntry.size|]   @wide;
#L14b892.   v6:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14b896.   v6:= v6.[|java:util:zip:CRC32.tbytes|]   @wide;
#L14b89a.   v4:= cmp(v4,v6);
#L14b89e.   if v4 == 0 then goto L14b8b2;
#L14b8a2.   v2:= new [|java:util:zip:ZipException|];
#L14b8a6.   v3:= "Size mismatch" @type (object, string);
#L14b8aa.   call temp:=  [|java:util:zip:ZipException.<init>|](v2, v3) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14b8b0.   throw v2;
#L14b8b2.   v4:= 30  @length 16;
#L14b8b6.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v4;
#L14b8ba.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b8be.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v4) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b8c4.   v4:= temp;
#L14b8c6.   if v4 == 0 then goto L14b944;
#L14b8ca.   v4:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14b8ce.   v4:= v4 + 16;
#L14b8d2.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v4;
#L14b8d6.   v4:= v10.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b8da.    v5:= 0.000000  @length wide32;
#L14b8e0.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v5, v6) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b8e6.   v4:= v10.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b8ea.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b8ee.   v6:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14b8f2.   call temp:=  [|java:util:zip:CRC32.getValue|](v6) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14b8f8.   v6:= temp  @type wide;
#L14b8fa.   v5.[|java:util:zip:ZipEntry.crc|]  := v6 @wide;
#L14b8fe.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v6, v7) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b904.   v4:= v10.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b908.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b90c.   v6:= v10.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14b910.   call temp:=  [|java:util:zip:Deflater.getTotalOut|](v6) @signature [|Ljava/util/zip/Deflater;.getTotalOut:()I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b916.   v6:= temp;
#L14b918.   v6:= (long)v6  @type i2l;
#L14b91a.   v5.[|java:util:zip:ZipEntry.compressedSize|]  := v6 @wide;
#L14b91e.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v6, v7) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b924.   v4:= v10.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14b928.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b92c.   v6:= v10.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14b930.   call temp:=  [|java:util:zip:Deflater.getTotalIn|](v6) @signature [|Ljava/util/zip/Deflater;.getTotalIn:()I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b936.   v6:= temp;
#L14b938.   v6:= (long)v6  @type i2l;
#L14b93a.   v5.[|java:util:zip:ZipEntry.size|]  := v6 @wide;
#L14b93e.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v6, v7) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b944.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b948.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v4) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b94e.   v4:= temp;
#L14b950.   if v4 != 0 then goto L14bb36;
#L14b954.   v1:= v2;
#L14b956.   v1:= v1 ^| 2048;
#L14b95a.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b95e.    v5:= 0.000000  @length wide32;
#L14b964.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v5, v6) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b96a.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b96e.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v8) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b974.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b978.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v8) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b97e.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b982.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v1) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b988.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b98c.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b990.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v5) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b996.   v5:= temp;
#L14b998.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b99e.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b9a2.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b9a6.   v5:= v5.[|java:util:zip:ZipEntry.time|] ;
#L14b9aa.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b9b0.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b9b4.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b9b8.   v5:= v5.[|java:util:zip:ZipEntry.modDate|] ;
#L14b9bc.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b9c2.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b9c6.   v5:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14b9ca.   call temp:=  [|java:util:zip:CRC32.getValue|](v5) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14b9d0.   v5:= temp  @type wide;
#L14b9d2.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v4, v5, v6) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14b9d8.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14b9dc.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v4) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14b9e2.   v4:= temp;
#L14b9e4.   if v4 != v3 then goto L14bb3c;
#L14b9e8.   v3:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14b9ec.   v3:= (long)v3  @type i2l;
#L14b9ee.   v5:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14b9f2.   v6:= v10.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14b9f6.   call temp:=  [|java:util:zip:Deflater.getTotalOut|](v6) @signature [|Ljava/util/zip/Deflater;.getTotalOut:()I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14b9fc.   v6:= temp;
#L14b9fe.   v6:= (long)v6  @type i2l;
#L14ba00.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v5, v6, v7) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba06.   v5:= temp  @type wide;
#L14ba08.   v3:= v3 + v5  @type long;
#L14ba0a.   v3:= (int)v3  @type l2i;
#L14ba0c.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v3;
#L14ba10.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba14.   v4:= v10.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14ba18.   call temp:=  [|java:util:zip:Deflater.getTotalIn|](v4) @signature [|Ljava/util/zip/Deflater;.getTotalIn:()I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14ba1e.   v4:= temp;
#L14ba20.   v4:= (long)v4  @type i2l;
#L14ba22.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v3, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba28.   v3:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14ba2c.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba30.   v5:= v10.[|java:util:zip:ZipOutputStream.nameLength|] ;
#L14ba34.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba3a.   v4:= temp;
#L14ba3c.   v3:= v3 + v4  @type int;
#L14ba3e.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v3;
#L14ba42.   v3:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14ba46.   v3:= v3.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14ba4a.   if v3 == 0 then goto L14bb74;
#L14ba4e.   v3:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14ba52.   v4:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba56.   v5:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14ba5a.   v5:= v5.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14ba5e.   v5:= v5.length;
#L14ba60.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba66.   v4:= temp;
#L14ba68.   v3:= v3 + v4  @type int;
#L14ba6a.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v3;
#L14ba6e.   v3:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14ba72.   call temp:=  [|java:util:zip:ZipEntry.getComment|](v3) @signature [|Ljava/util/zip/ZipEntry;.getComment:()Ljava/lang/String;|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14ba78.   v0:= temp  @type object;
#L14ba7a.   if v0 == 0 then goto L14bb82;
#L14ba7e.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba82.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14ba88.   v4:= temp;
#L14ba8a.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba90.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba94.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v3, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14ba9a.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14ba9e.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v3, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14baa4.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14baa8.   v4:= 0  @length wide16;
#L14baac.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v3, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bab2.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bab6.   v4:= v10.[|java:util:zip:ZipOutputStream.offset|] ;
#L14baba.   v4:= (long)v4  @type i2l;
#L14babc.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v3, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bac2.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bac6.   v4:= v10.[|java:util:zip:ZipOutputStream.nameBytes|]   @type object;
#L14baca.   call temp:=  [|java:io:ByteArrayOutputStream.write|](v3, v4) @signature [|Ljava/io/ByteArrayOutputStream;.write:([B)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14bad0.   v10.[|java:util:zip:ZipOutputStream.nameBytes|]  := v9 @type object;
#L14bad4.   v3:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bad8.   v3:= v3.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14badc.   if v3 == 0 then goto L14baf2;
#L14bae0.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bae4.   v4:= v10.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bae8.   v4:= v4.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14baec.   call temp:=  [|java:io:ByteArrayOutputStream.write|](v3, v4) @signature [|Ljava/io/ByteArrayOutputStream;.write:([B)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14baf2.   v3:= v10.[|java:util:zip:ZipOutputStream.offset|] ;
#L14baf6.   v4:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14bafa.   v3:= v3 + v4  @type int;
#L14bafc.   v10.[|java:util:zip:ZipOutputStream.offset|]  := v3;
#L14bb00.   if v0 == 0 then goto L14bb16;
#L14bb04.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bb08.   call temp:=  [|java:lang:String.getBytes|](v0) @signature [|Ljava/lang/String;.getBytes:()[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14bb0e.   v4:= temp  @type object;
#L14bb10.   call temp:=  [|java:io:ByteArrayOutputStream.write|](v3, v4) @signature [|Ljava/io/ByteArrayOutputStream;.write:([B)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14bb16.   v10.[|java:util:zip:ZipOutputStream.currentEntry|]  := v9 @type object;
#L14bb1a.   v3:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14bb1e.   call temp:=  [|java:util:zip:CRC32.reset|](v3) @signature [|Ljava/util/zip/CRC32;.reset:()V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14bb24.   v3:= v10.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14bb28.   call temp:=  [|java:util:zip:Deflater.reset|](v3) @signature [|Ljava/util/zip/Deflater;.reset:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14bb2e.   v10.[|java:util:zip:ZipOutputStream.done|]  := v2 @boolean;
#L14bb32.   goto L14b836;
#L14bb36.   v1:= v3;
#L14bb38.   goto L14b956;
#L14bb3c.   v3:= v10.[|java:util:zip:ZipOutputStream.curOffset|] ;
#L14bb40.   v3:= (long)v3  @type i2l;
#L14bb42.   v5:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bb46.   v6:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14bb4a.   v6:= v6.[|java:util:zip:CRC32.tbytes|]   @wide;
#L14bb4e.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v5, v6, v7) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bb54.   v5:= temp  @type wide;
#L14bb56.   v3:= v3 + v5  @type long;
#L14bb58.   v3:= (int)v3  @type l2i;
#L14bb5a.   v10.[|java:util:zip:ZipOutputStream.curOffset|]  := v3;
#L14bb5e.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bb62.   v4:= v10.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14bb66.   v4:= v4.[|java:util:zip:CRC32.tbytes|]   @wide;
#L14bb6a.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v10, v3, v4, v5) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bb70.   goto L14ba28;
#L14bb74.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bb78.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v3, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bb7e.   goto L14ba6e;
#L14bb82.   v3:= v10.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bb86.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v10, v3, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bb8c.   goto L14ba90;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.finish|] ([|java:util:zip:ZipOutputStream|] v5 @type (this)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.finish:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14bba0.   v4:= 0  @length 4;
#L14bba2.   v1:= v5.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bba6.   if v1 != 0 then goto L14bbba;
#L14bbaa.   v1:= new [|java:io:IOException|];
#L14bbae.   v2:= "Stream is closed" @type (object, string);
#L14bbb2.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14bbb8.   throw v1;
#L14bbba.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bbbe.   if v1 != 0 then goto L14bbc4;
#L14bbc2.   return @void ;
#L14bbc4.   v1:= v5.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14bbc8.   call temp:=  [|java:util:HashSet.isEmpty|](v1) @signature [|Ljava/util/HashSet;.isEmpty:()Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14bbce.   v1:= temp;
#L14bbd0.   if v1 == 0 then goto L14bbe4;
#L14bbd4.   v1:= new [|java:util:zip:ZipException|];
#L14bbd8.   v2:= "No entries" @type (object, string);
#L14bbdc.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bbe2.   throw v1;
#L14bbe4.   v1:= v5.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bbe8.   if v1 == 0 then goto L14bbf2;
#L14bbec.   call temp:=  [|java:util:zip:ZipOutputStream.closeEntry|](v5) @signature [|Ljava/util/zip/ZipOutputStream;.closeEntry:()V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type virtual;
#L14bbf2.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bbf6.   call temp:=  [|java:io:ByteArrayOutputStream.size|](v1) @signature [|Ljava/io/ByteArrayOutputStream;.size:()I|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14bbfc.   v0:= temp;
#L14bbfe.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc02.    v2:= 0.000000  @length wide32;
#L14bc08.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v5, v1, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc0e.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc12.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc18.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc1c.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc22.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc26.   v2:= v5.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14bc2a.   call temp:=  [|java:util:HashSet.size|](v2) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14bc30.   v2:= temp;
#L14bc32.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc38.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc3c.   v2:= v5.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14bc40.   call temp:=  [|java:util:HashSet.size|](v2) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14bc46.   v2:= temp;
#L14bc48.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc4e.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc52.   v2:= (long)v0  @type i2l;
#L14bc54.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v5, v1, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc5a.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc5e.   v2:= v5.[|java:util:zip:ZipOutputStream.offset|] ;
#L14bc62.   v2:= (long)v2  @type i2l;
#L14bc64.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v5, v1, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc6a.   v1:= v5.[|java:util:zip:ZipOutputStream.comment|]   @type object;
#L14bc6e.   if v1 == 0 then goto L14bcb4;
#L14bc72.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc76.   v2:= v5.[|java:util:zip:ZipOutputStream.comment|]   @type object;
#L14bc7a.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14bc80.   v2:= temp;
#L14bc82.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bc88.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bc8c.   v2:= v5.[|java:util:zip:ZipOutputStream.comment|]   @type object;
#L14bc90.   call temp:=  [|java:lang:String.getBytes|](v2) @signature [|Ljava/lang/String;.getBytes:()[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14bc96.   v2:= temp  @type object;
#L14bc98.   call temp:=  [|java:io:ByteArrayOutputStream.write|](v1, v2) @signature [|Ljava/io/ByteArrayOutputStream;.write:([B)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14bc9e.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bca2.   v2:= v5.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bca6.   call temp:=  [|java:io:ByteArrayOutputStream.writeTo|](v1, v2) @signature [|Ljava/io/ByteArrayOutputStream;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L14bcac.   v1:= 0  @length 4;
#L14bcae.   v5.[|java:util:zip:ZipOutputStream.cDir|]  := v1 @type object;
#L14bcb2.   goto L14bbc2;
#L14bcb4.   v1:= v5.[|java:util:zip:ZipOutputStream.cDir|]   @type object;
#L14bcb8.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v5, v1, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bcbe.   goto L14bc9e;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.putNextEntry|] ([|java:util:zip:ZipOutputStream|] v12 @type (this), [|java:util:zip:ZipEntry|] v13 @type (object)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.putNextEntry:(Ljava/util/zip/ZipEntry;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L14bcd0.    v11:= 0.000000;
#L14bcd6.   v1:= 0  @length 4;
#L14bcd8.   v10:= -1  @length 4;
#L14bcda.   v8:= 0  @length wide16;
#L14bcde.   v6:= -1  @length wide16;
#L14bce2.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bce6.   if v2 == 0 then goto L14bcf0;
#L14bcea.   call temp:=  [|java:util:zip:ZipOutputStream.closeEntry|](v12) @signature [|Ljava/util/zip/ZipOutputStream;.closeEntry:()V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type virtual;
#L14bcf0.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v13) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bcf6.   v2:= temp;
#L14bcf8.   if v2 == 0 then goto L14bd10;
#L14bcfc.   v2:= v12.[|java:util:zip:ZipOutputStream.compressMethod|] ;
#L14bd00.   if v2 != 0 then goto L14bd8c;
#L14bd04.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v13) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bd0a.   v2:= temp;
#L14bd0c.   if v2 != v10 then goto L14bd8c;
#L14bd10.   v2:= v13.[|java:util:zip:ZipEntry.crc|]   @wide;
#L14bd14.   v2:= cmp(v2,v6);
#L14bd18.   if v2 != 0 then goto L14bd2c;
#L14bd1c.   v1:= new [|java:util:zip:ZipException|];
#L14bd20.   v2:= "CRC mismatch" @type (object, string);
#L14bd24.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bd2a.   throw v1;
#L14bd2c.   v2:= v13.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bd30.   v2:= cmp(v2,v6);
#L14bd34.   if v2 != 0 then goto L14bd54;
#L14bd38.   v2:= v13.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14bd3c.   v2:= cmp(v2,v6);
#L14bd40.   if v2 != 0 then goto L14bd54;
#L14bd44.   v1:= new [|java:util:zip:ZipException|];
#L14bd48.   v2:= "Size mismatch" @type (object, string);
#L14bd4c.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bd52.   throw v1;
#L14bd54.   v2:= v13.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bd58.   v4:= v13.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14bd5c.   v2:= cmp(v2,v4);
#L14bd60.   if v2 == 0 then goto L14bd8c;
#L14bd64.   v2:= v13.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14bd68.   v2:= cmp(v2,v6);
#L14bd6c.   if v2 == 0 then goto L14bd8c;
#L14bd70.   v2:= v13.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bd74.   v2:= cmp(v2,v6);
#L14bd78.   if v2 == 0 then goto L14bd8c;
#L14bd7c.   v1:= new [|java:util:zip:ZipException|];
#L14bd80.   v2:= "Size mismatch" @type (object, string);
#L14bd84.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bd8a.   throw v1;
#L14bd8c.   call temp:=  [|java:util:zip:ZipOutputStream.checkClosed|](v12) @signature [|Ljava/util/zip/ZipOutputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bd92.   v2:= v12.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14bd96.   v3:= v13.[|java:util:zip:ZipEntry.name|]   @type object;
#L14bd9a.   call temp:=  [|java:util:HashSet.contains|](v2, v3) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14bda0.   v2:= temp;
#L14bda2.   if v2 == 0 then goto L14bddc;
#L14bda6.   v1:= new [|java:util:zip:ZipException|];
#L14bdaa.   v2:= new [|java:lang:StringBuilder|];
#L14bdae.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14bdb4.   v3:= "Entry already exists: " @type (object, string);
#L14bdb8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14bdbe.   v2:= temp  @type object;
#L14bdc0.   v3:= v13.[|java:util:zip:ZipEntry.name|]   @type object;
#L14bdc4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14bdca.   v2:= temp  @type object;
#L14bdcc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14bdd2.   v2:= temp  @type object;
#L14bdd4.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bdda.   throw v1;
#L14bddc.   v2:= v12.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14bde0.   call temp:=  [|java:util:HashSet.size|](v2) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14bde6.   v2:= temp;
#L14bde8.   if v2 != v11 then goto L14bdfc;
#L14bdec.   v1:= new [|java:util:zip:ZipException|];
#L14bdf0.   v2:= "Too many entries for the zip file format's 16-bit entry count" @type (object, string);
#L14bdf4.   call temp:=  [|java:util:zip:ZipException.<init>|](v1, v2) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14bdfa.   throw v1;
#L14bdfc.   v2:= v13.[|java:util:zip:ZipEntry.name|]   @type object;
#L14be00.   v3:= @@[|java:nio:charset:Charsets.UTF_8|]   @type object;
#L14be04.   call temp:=  [|java:lang:String.getBytes|](v2, v3) @signature [|Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14be0a.   v2:= temp  @type object;
#L14be0c.   v12.[|java:util:zip:ZipOutputStream.nameBytes|]  := v2 @type object;
#L14be10.   v2:= v12.[|java:util:zip:ZipOutputStream.nameBytes|]   @type object;
#L14be14.   v2:= v2.length;
#L14be16.   v12.[|java:util:zip:ZipOutputStream.nameLength|]  := v2;
#L14be1a.   v2:= v12.[|java:util:zip:ZipOutputStream.nameLength|] ;
#L14be1e.   if v2 <= v11 then goto L14be64;
#L14be22.   v1:= new [|java:lang:IllegalArgumentException|];
#L14be26.   v2:= new [|java:lang:StringBuilder|];
#L14be2a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14be30.   v3:= "Name too long: " @type (object, string);
#L14be34.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14be3a.   v2:= temp  @type object;
#L14be3c.   v3:= v12.[|java:util:zip:ZipOutputStream.nameLength|] ;
#L14be40.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14be46.   v2:= temp  @type object;
#L14be48.   v3:= " UTF-8 bytes" @type (object, string);
#L14be4c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14be52.   v2:= temp  @type object;
#L14be54.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14be5a.   v2:= temp  @type object;
#L14be5c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14be62.   throw v1;
#L14be64.   v2:= v12.[|java:util:zip:ZipOutputStream.def|]   @type object;
#L14be68.   v3:= v12.[|java:util:zip:ZipOutputStream.compressLevel|] ;
#L14be6c.   call temp:=  [|java:util:zip:Deflater.setLevel|](v2, v3) @signature [|Ljava/util/zip/Deflater;.setLevel:(I)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L14be72.   v12.[|java:util:zip:ZipOutputStream.currentEntry|]  := v13 @type object;
#L14be76.   v2:= v12.[|java:util:zip:ZipOutputStream.entries|]   @type object;
#L14be7a.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14be7e.   v3:= v3.[|java:util:zip:ZipEntry.name|]   @type object;
#L14be82.   call temp:=  [|java:util:HashSet.add|](v2, v3) @signature [|Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L14be88.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14be8c.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v2) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14be92.   v2:= temp;
#L14be94.   if v2 != v10 then goto L14bea6;
#L14be98.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14be9c.   v3:= v12.[|java:util:zip:ZipOutputStream.compressMethod|] ;
#L14bea0.   call temp:=  [|java:util:zip:ZipEntry.setMethod|](v2, v3) @signature [|Ljava/util/zip/ZipEntry;.setMethod:(I)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bea6.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14beaa.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v2) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14beb0.   v2:= temp;
#L14beb2.   if v2 != 0 then goto L14c006;
#L14beb6.   v0:= v1;
#L14beb8.   v0:= v0 ^| 2048;
#L14bebc.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bec0.    v3:= 0.000000  @length wide32;
#L14bec6.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14becc.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bed0.   v3:= 20  @length 16;
#L14bed4.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14beda.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bede.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v0) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bee4.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bee8.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14beec.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v3) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bef2.   v3:= temp;
#L14bef4.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14befa.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14befe.   call temp:=  [|java:util:zip:ZipEntry.getTime|](v2) @signature [|Ljava/util/zip/ZipEntry;.getTime:()J|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bf04.   v2:= temp  @type wide;
#L14bf06.   v2:= cmp(v2,v6);
#L14bf0a.   if v2 != 0 then goto L14bf20;
#L14bf0e.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf12.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14bf18.   v3:= temp  @type wide;
#L14bf1a.   call temp:=  [|java:util:zip:ZipEntry.setTime|](v2, v3, v4) @signature [|Ljava/util/zip/ZipEntry;.setTime:(J)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bf20.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bf24.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf28.   v3:= v3.[|java:util:zip:ZipEntry.time|] ;
#L14bf2c.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bf32.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bf36.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf3a.   v3:= v3.[|java:util:zip:ZipEntry.modDate|] ;
#L14bf3e.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bf44.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf48.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v2) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14bf4e.   v2:= temp;
#L14bf50.   if v2 != 0 then goto L14c030;
#L14bf54.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf58.   v2:= v2.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bf5c.   v2:= cmp(v2,v6);
#L14bf60.   if v2 != 0 then goto L14c00e;
#L14bf64.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf68.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf6c.   v3:= v3.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14bf70.   v2.[|java:util:zip:ZipEntry.size|]  := v3 @wide;
#L14bf74.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bf78.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf7c.   v3:= v3.[|java:util:zip:ZipEntry.crc|]   @wide;
#L14bf80.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bf86.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bf8a.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bf8e.   v3:= v3.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bf92.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bf98.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bf9c.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bfa0.   v3:= v3.[|java:util:zip:ZipEntry.size|]   @wide;
#L14bfa4.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bfaa.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bfae.   v3:= v12.[|java:util:zip:ZipOutputStream.nameLength|] ;
#L14bfb2.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v3) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bfb8.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bfbc.   v2:= v2.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14bfc0.   if v2 == 0 then goto L14c050;
#L14bfc4.   v1:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bfc8.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bfcc.   v2:= v2.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14bfd0.   v2:= v2.length;
#L14bfd2.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v1, v2) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14bfd8.   v1:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bfdc.   v2:= v12.[|java:util:zip:ZipOutputStream.nameBytes|]   @type object;
#L14bfe0.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14bfe6.   v1:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bfea.   v1:= v1.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14bfee.   if v1 == 0 then goto L14c004;
#L14bff2.   v1:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14bff6.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14bffa.   v2:= v2.[|java:util:zip:ZipEntry.extra|]   @type object;
#L14bffe.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14c004.   return @void ;
#L14c006.   v0:= 8  @length 16;
#L14c00a.   goto L14beb8;
#L14c00e.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14c012.   v2:= v2.[|java:util:zip:ZipEntry.compressedSize|]   @wide;
#L14c016.   v2:= cmp(v2,v6);
#L14c01a.   if v2 != 0 then goto L14bf74;
#L14c01e.   v2:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14c022.   v3:= v12.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14c026.   v3:= v3.[|java:util:zip:ZipEntry.size|]   @wide;
#L14c02a.   v2.[|java:util:zip:ZipEntry.compressedSize|]  := v3 @wide;
#L14c02e.   goto L14bf74;
#L14c030.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14c034.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v8, v9) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c03a.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14c03e.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v8, v9) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c044.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14c048.   call temp:=  [|java:util:zip:ZipOutputStream.writeLong|](v12, v2, v8, v9) @signature [|Ljava/util/zip/ZipOutputStream;.writeLong:(Ljava/io/OutputStream;J)J|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c04e.   goto L14bfaa;
#L14c050.   v2:= v12.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14c054.   call temp:=  [|java:util:zip:ZipOutputStream.writeShort|](v12, v2, v1) @signature [|Ljava/util/zip/ZipOutputStream;.writeShort:(Ljava/io/OutputStream;I)I|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c05a.   goto L14bfd8;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.setComment|] ([|java:util:zip:ZipOutputStream|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.setComment:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14c06c.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c072.   v0:= temp;
#L14c074.    v1:= 0.000000;
#L14c07a.   if v0 <= v1 then goto L14c0c4;
#L14c07e.   v0:= new [|java:lang:IllegalArgumentException|];
#L14c082.   v1:= new [|java:lang:StringBuilder|];
#L14c086.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c08c.   v2:= "Comment too long: " @type (object, string);
#L14c090.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c096.   v1:= temp  @type object;
#L14c098.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c09e.   v2:= temp;
#L14c0a0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c0a6.   v1:= temp  @type object;
#L14c0a8.   v2:= " characters" @type (object, string);
#L14c0ac.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c0b2.   v1:= temp  @type object;
#L14c0b4.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c0ba.   v1:= temp  @type object;
#L14c0bc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14c0c2.   throw v0;
#L14c0c4.   v3.[|java:util:zip:ZipOutputStream.comment|]  := v4 @type object;
#L14c0c8.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.setLevel|] ([|java:util:zip:ZipOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.setLevel:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14c0dc.   v0:= -1  @length 4;
#L14c0de.   if v2 < v0 then goto L14c0ea;
#L14c0e2.   v0:= 9  @length 16;
#L14c0e6.   if v2 <= v0 then goto L14c0f6;
#L14c0ea.   v0:= new [|java:lang:IllegalArgumentException|];
#L14c0ee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14c0f4.   throw v0;
#L14c0f6.   v1.[|java:util:zip:ZipOutputStream.compressLevel|]  := v2;
#L14c0fa.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.setMethod|] ([|java:util:zip:ZipOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.setMethod:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14c10c.   if v2 == 0 then goto L14c124;
#L14c110.   v0:= 8  @length 16;
#L14c114.   if v2 == v0 then goto L14c124;
#L14c118.   v0:= new [|java:lang:IllegalArgumentException|];
#L14c11c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14c122.   throw v0;
#L14c124.   v1.[|java:util:zip:ZipOutputStream.compressMethod|]  := v2;
#L14c128.   return @void ;

   }
    procedure [|void|] [|java:util:zip:ZipOutputStream.write|] ([|java:util:zip:ZipOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:util:zip:ZipOutputStream|] @signature [|Ljava/util/zip/ZipOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14c13c.   v0:= v3.length;
#L14c13e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L14c144.   v0:= v2.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14c148.   if v0 != 0 then goto L14c15c;
#L14c14c.   v0:= new [|java:util:zip:ZipException|];
#L14c150.   v1:= "No active entry" @type (object, string);
#L14c154.   call temp:=  [|java:util:zip:ZipException.<init>|](v0, v1) @signature [|Ljava/util/zip/ZipException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L14c15a.   throw v0;
#L14c15c.   v0:= v2.[|java:util:zip:ZipOutputStream.currentEntry|]   @type object;
#L14c160.   call temp:=  [|java:util:zip:ZipEntry.getMethod|](v0) @signature [|Ljava/util/zip/ZipEntry;.getMethod:()I|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L14c166.   v0:= temp;
#L14c168.   if v0 != 0 then goto L14c182;
#L14c16c.   v0:= v2.[|java:util:zip:ZipOutputStream.out|]   @type object;
#L14c170.   call temp:=  [|java:io:OutputStream.write|](v0, v3, v4, v5) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14c176.   v0:= v2.[|java:util:zip:ZipOutputStream.crc|]   @type object;
#L14c17a.   call temp:=  [|java:util:zip:CRC32.update|](v0, v3, v4, v5) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L14c180.   return @void ;
#L14c182.   call temp:=  [|java:util:zip:DeflaterOutputStream.write|](v2, v3, v4, v5) @signature [|Ljava/util/zip/DeflaterOutputStream;.write:([BII)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type super;
#L14c188.   goto L14c176;

   }
record [|java:util:jar:JarOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:ZipOutputStream|] {
      [|java:util:jar:Manifest|] [|java:util:jar:JarOutputStream.manifest|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:jar:JarOutputStream.<init>|] ([|java:util:jar:JarOutputStream|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:jar:JarOutputStream|] @signature [|Ljava/util/jar/JarOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L14c19c.   call temp:=  [|java:util:zip:ZipOutputStream.<init>|](v0, v1) @signature [|Ljava/util/zip/ZipOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c1a2.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarOutputStream.<init>|] ([|java:util:jar:JarOutputStream|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object), [|java:util:jar:Manifest|] v5 @type (object)) @owner [|java:util:jar:JarOutputStream|] @signature [|Ljava/util/jar/JarOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/jar/Manifest;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14c1b4.   call temp:=  [|java:util:zip:ZipOutputStream.<init>|](v3, v4) @signature [|Ljava/util/zip/ZipOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type direct;
#L14c1ba.   if v5 != 0 then goto L14c1ce;
#L14c1be.   v1:= new [|java:lang:NullPointerException|];
#L14c1c2.   v2:= "manifest == null" @type (object, string);
#L14c1c6.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14c1cc.   throw v1;
#L14c1ce.   v3.[|java:util:jar:JarOutputStream.manifest|]  := v5 @type object;
#L14c1d2.   v0:= new [|java:util:zip:ZipEntry|];
#L14c1d6.   v1:= "META-INF/MANIFEST.MF" @type (object, string);
#L14c1da.   call temp:=  [|java:util:zip:ZipEntry.<init>|](v0, v1) @signature [|Ljava/util/zip/ZipEntry;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:ZipEntry|] @type direct;
#L14c1e0.   call temp:=  [|java:util:jar:JarOutputStream.putNextEntry|](v3, v0) @signature [|Ljava/util/jar/JarOutputStream;.putNextEntry:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:jar:JarOutputStream|] @type virtual;
#L14c1e6.   v1:= v3.[|java:util:jar:JarOutputStream.manifest|]   @type object;
#L14c1ea.   call temp:=  [|java:util:jar:Manifest.write|](v1, v3) @signature [|Ljava/util/jar/Manifest;.write:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14c1f0.   call temp:=  [|java:util:jar:JarOutputStream.closeEntry|](v3) @signature [|Ljava/util/jar/JarOutputStream;.closeEntry:()V|] @classDescriptor [|java:util:jar:JarOutputStream|] @type virtual;
#L14c1f6.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarOutputStream.putNextEntry|] ([|java:util:jar:JarOutputStream|] v0 @type (this), [|java:util:zip:ZipEntry|] v1 @type (object)) @owner [|java:util:jar:JarOutputStream|] @signature [|Ljava/util/jar/JarOutputStream;.putNextEntry:(Ljava/util/zip/ZipEntry;)V|] @Access PUBLIC {
      local temp ;
      
#L14c208.   call temp:=  [|java:util:zip:ZipOutputStream.putNextEntry|](v0, v1) @signature [|Ljava/util/zip/ZipOutputStream;.putNextEntry:(Ljava/util/zip/ZipEntry;)V|] @classDescriptor [|java:util:zip:ZipOutputStream|] @type super;
#L14c20e.   return @void ;

   }
record [|java:util:jar:JarVerifier$VerifierEntry|]  @type class @AccessFlag   extends [|java:io:OutputStream|] {
      [|java:security:cert:Certificate|][] [|java:util:jar:JarVerifier$VerifierEntry.certificates|]    @AccessFlag PRIVATE;
      [|java:security:MessageDigest|] [|java:util:jar:JarVerifier$VerifierEntry.digest|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:util:jar:JarVerifier$VerifierEntry.hash|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:jar:JarVerifier$VerifierEntry.name|]    @AccessFlag PRIVATE;
      [|java:util:jar:JarVerifier|] [|java:util:jar:JarVerifier$VerifierEntry.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:jar:JarVerifier$VerifierEntry.<init>|] ([|java:util:jar:JarVerifier$VerifierEntry|] v0 @type (this), [|java:util:jar:JarVerifier|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:security:MessageDigest|] v3 @type (object), [|byte|][] v4, [|java:security:cert:Certificate|][] v5 @type (object)) @owner [|java:util:jar:JarVerifier$VerifierEntry|] @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.<init>:(Ljava/util/jar/JarVerifier;Ljava/lang/String;Ljava/security/MessageDigest;[B[Ljava/security/cert/Certificate;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L14c220.   v0.[|java:util:jar:JarVerifier$VerifierEntry.this$0|]  := v1 @type object;
#L14c224.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L14c22a.   v0.[|java:util:jar:JarVerifier$VerifierEntry.name|]  := v2 @type object;
#L14c22e.   v0.[|java:util:jar:JarVerifier$VerifierEntry.digest|]  := v3 @type object;
#L14c232.   v0.[|java:util:jar:JarVerifier$VerifierEntry.hash|]  := v4 @type object;
#L14c236.   v0.[|java:util:jar:JarVerifier$VerifierEntry.certificates|]  := v5 @type object;
#L14c23a.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarVerifier$VerifierEntry.verify|] ([|java:util:jar:JarVerifier$VerifierEntry|] v5 @type (this)) @owner [|java:util:jar:JarVerifier$VerifierEntry|] @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.verify:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14c24c.   v1:= v5.[|java:util:jar:JarVerifier$VerifierEntry.digest|]   @type object;
#L14c250.   call temp:=  [|java:security:MessageDigest.digest|](v1) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c256.   v0:= temp  @type object;
#L14c258.   v1:= v5.[|java:util:jar:JarVerifier$VerifierEntry.hash|]   @type object;
#L14c25c.   call temp:=  [|libcore:io:Base64.decode|](v1) @signature [|Llibcore/io/Base64;.decode:([B)[B|] @classDescriptor [|libcore:io:Base64|] @type static;
#L14c262.   v1:= temp  @type object;
#L14c264.   call temp:=  [|java:security:MessageDigest.isEqual|](v0, v1) @signature [|Ljava/security/MessageDigest;.isEqual:([B[B)Z|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L14c26a.   v1:= temp;
#L14c26c.   if v1 != 0 then goto L14c292;
#L14c270.   v1:= v5.[|java:util:jar:JarVerifier$VerifierEntry.this$0|]   @type object;
#L14c274.   v2:= "META-INF/MANIFEST.MF" @type (object, string);
#L14c278.   v3:= v5.[|java:util:jar:JarVerifier$VerifierEntry.name|]   @type object;
#L14c27c.   v4:= v5.[|java:util:jar:JarVerifier$VerifierEntry.this$0|]   @type object;
#L14c280.   call temp:=  [|java:util:jar:JarVerifier.access$000|](v4) @signature [|Ljava/util/jar/JarVerifier;.access$000:(Ljava/util/jar/JarVerifier;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:JarVerifier|] @type static;
#L14c286.   v4:= temp  @type object;
#L14c288.   call temp:=  [|java:util:jar:JarVerifier.access$100|](v1, v2, v3, v4) @signature [|Ljava/util/jar/JarVerifier;.access$100:(Ljava/util/jar/JarVerifier;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @classDescriptor [|java:util:jar:JarVerifier|] @type static;
#L14c28e.   v1:= temp  @type object;
#L14c290.   throw v1;
#L14c292.   v1:= v5.[|java:util:jar:JarVerifier$VerifierEntry.this$0|]   @type object;
#L14c296.   call temp:=  [|java:util:jar:JarVerifier.access$200|](v1) @signature [|Ljava/util/jar/JarVerifier;.access$200:(Ljava/util/jar/JarVerifier;)Ljava/util/Hashtable;|] @classDescriptor [|java:util:jar:JarVerifier|] @type static;
#L14c29c.   v1:= temp  @type object;
#L14c29e.   v2:= v5.[|java:util:jar:JarVerifier$VerifierEntry.name|]   @type object;
#L14c2a2.   v3:= v5.[|java:util:jar:JarVerifier$VerifierEntry.certificates|]   @type object;
#L14c2a6.   call temp:=  [|java:util:Hashtable.put|](v1, v2, v3) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c2ac.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarVerifier$VerifierEntry.write|] ([|java:util:jar:JarVerifier$VerifierEntry|] v2 @type (this), [|int|] v3) @owner [|java:util:jar:JarVerifier$VerifierEntry|] @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14c2c0.   v0:= v2.[|java:util:jar:JarVerifier$VerifierEntry.digest|]   @type object;
#L14c2c4.   v1:= (byte)v3  @type i2b;
#L14c2c6.   call temp:=  [|java:security:MessageDigest.update|](v0, v1) @signature [|Ljava/security/MessageDigest;.update:(B)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c2cc.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarVerifier$VerifierEntry.write|] ([|java:util:jar:JarVerifier$VerifierEntry|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:util:jar:JarVerifier$VerifierEntry|] @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14c2e0.   v0:= v1.[|java:util:jar:JarVerifier$VerifierEntry.digest|]   @type object;
#L14c2e4.   call temp:=  [|java:security:MessageDigest.update|](v0, v2, v3, v4) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c2ea.   return @void ;

   }
record [|java:util:jar:JarVerifier|]  @type class @AccessFlag   {
      [|java:util:Hashtable|] [|java:util:jar:JarVerifier.certificates|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:util:jar:JarVerifier.jarName|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:jar:JarVerifier.mainAttributesEnd|]    @AccessFlag ;
      [|java:util:jar:Manifest|] [|java:util:jar:JarVerifier.man|]    @AccessFlag PRIVATE;
      [|java:util:HashMap|] [|java:util:jar:JarVerifier.metaEntries|]    @AccessFlag PRIVATE;
      [|java:util:Hashtable|] [|java:util:jar:JarVerifier.signatures|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Hashtable|] [|java:util:jar:JarVerifier.verifiedEntries|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:String|][] @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:JarVerifier.<clinit>|] () @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14c2fc.   v0:= 4  @length 4;
#L14c2fe.   v0:= new [|java:lang:String|][v0];
#L14c302.   v1:= 0  @length 4;
#L14c304.   v2:= "SHA-512" @type (object, string);
#L14c308.   v0[v1]:= v2  @type object;
#L14c30c.   v1:= 1  @length 4;
#L14c30e.   v2:= "SHA-384" @type (object, string);
#L14c312.   v0[v1]:= v2  @type object;
#L14c316.   v1:= 2  @length 4;
#L14c318.   v2:= "SHA-256" @type (object, string);
#L14c31c.   v0[v1]:= v2  @type object;
#L14c320.   v1:= 3  @length 4;
#L14c322.   v2:= "SHA1" @type (object, string);
#L14c326.   v0[v1]:= v2  @type object;
#L14c32a.   @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|] := v0  @type object;
#L14c32e.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarVerifier.<init>|] ([|java:util:jar:JarVerifier|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.<init>:(Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14c340.   v1:= 5  @length 4;
#L14c342.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14c348.   v0:= new [|java:util:HashMap|];
#L14c34c.   call temp:=  [|java:util:HashMap.<init>|](v0, v1) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14c352.   v2.[|java:util:jar:JarVerifier.metaEntries|]  := v0 @type object;
#L14c356.   v0:= new [|java:util:Hashtable|];
#L14c35a.   call temp:=  [|java:util:Hashtable.<init>|](v0, v1) @signature [|Ljava/util/Hashtable;.<init>:(I)V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L14c360.   v2.[|java:util:jar:JarVerifier.signatures|]  := v0 @type object;
#L14c364.   v0:= new [|java:util:Hashtable|];
#L14c368.   call temp:=  [|java:util:Hashtable.<init>|](v0, v1) @signature [|Ljava/util/Hashtable;.<init>:(I)V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L14c36e.   v2.[|java:util:jar:JarVerifier.certificates|]  := v0 @type object;
#L14c372.   v0:= new [|java:util:Hashtable|];
#L14c376.   call temp:=  [|java:util:Hashtable.<init>|](v0) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L14c37c.   v2.[|java:util:jar:JarVerifier.verifiedEntries|]  := v0 @type object;
#L14c380.   v2.[|java:util:jar:JarVerifier.jarName|]  := v3 @type object;
#L14c384.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:jar:JarVerifier.access$000|] ([|java:util:jar:JarVerifier|] v1 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.access$000:(Ljava/util/jar/JarVerifier;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L14c398.   v0:= v1.[|java:util:jar:JarVerifier.jarName|]   @type object;
#L14c39c.   return v0  @type object;

   }
    procedure [|java:lang:SecurityException|] [|java:util:jar:JarVerifier.access$100|] ([|java:util:jar:JarVerifier|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.access$100:(Ljava/util/jar/JarVerifier;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L14c3b0.   call temp:=  [|java:util:jar:JarVerifier.invalidDigest|](v1, v2, v3, v4) @signature [|Ljava/util/jar/JarVerifier;.invalidDigest:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c3b6.   v0:= temp  @type object;
#L14c3b8.   return v0  @type object;

   }
    procedure [|java:util:Hashtable|] [|java:util:jar:JarVerifier.access$200|] ([|java:util:jar:JarVerifier|] v1 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.access$200:(Ljava/util/jar/JarVerifier;)Ljava/util/Hashtable;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L14c3cc.   v0:= v1.[|java:util:jar:JarVerifier.verifiedEntries|]   @type object;
#L14c3d0.   return v0  @type object;

   }
    procedure [|java:lang:SecurityException|] [|java:util:jar:JarVerifier.failedVerification|] ([|java:util:jar:JarVerifier|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.failedVerification:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14c3e4.   v0:= new [|java:lang:SecurityException|];
#L14c3e8.   v1:= new [|java:lang:StringBuilder|];
#L14c3ec.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c3f2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c3f8.   v1:= temp  @type object;
#L14c3fa.   v2:= " failed verification of " @type (object, string);
#L14c3fe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c404.   v1:= temp  @type object;
#L14c406.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c40c.   v1:= temp  @type object;
#L14c40e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c414.   v1:= temp  @type object;
#L14c416.   call temp:=  [|java:lang:SecurityException.<init>|](v0, v1) @signature [|Ljava/lang/SecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:SecurityException|] @type direct;
#L14c41c.   throw v0;

   }
    procedure [|java:util:Vector|] [|java:util:jar:JarVerifier.getSignerCertificates|] ([|java:lang:String|] v6 @type (object), [|java:util:Map|] v7 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.getSignerCertificates:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Vector;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14c430.   v5:= new [|java:util:Vector|];
#L14c434.   call temp:=  [|java:util:Vector.<init>|](v5) @signature [|Ljava/util/Vector;.<init>:()V|] @classDescriptor [|java:util:Vector|] @type direct;
#L14c43a.   call temp:=  [|java:util:Map.get|](v7, v6) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14c440.   v1:= temp  @type object;
#L14c442.   v1:= ([|java:security:cert:Certificate|][])v1;
#L14c446.   if v1 == 0 then goto L14c464;
#L14c44a.   v0:= v1  @type object;
#L14c44c.   v4:= v0.length;
#L14c44e.   v3:= 0  @length 4;
#L14c450.   if v3 >= v4 then goto L14c464;
#L14c454.   v2:= v0[v3]  @type object;
#L14c458.   call temp:=  [|java:util:Vector.add|](v5, v2) @signature [|Ljava/util/Vector;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Vector|] @type virtual;
#L14c45e.   v3:= v3 + 1;
#L14c462.   goto L14c450;
#L14c464.   return v5  @type object;

   }
    procedure [|java:lang:SecurityException|] [|java:util:jar:JarVerifier.invalidDigest|] ([|java:util:jar:JarVerifier|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.invalidDigest:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14c478.   v0:= new [|java:lang:SecurityException|];
#L14c47c.   v1:= new [|java:lang:StringBuilder|];
#L14c480.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c486.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c48c.   v1:= temp  @type object;
#L14c48e.   v2:= " has invalid digest for " @type (object, string);
#L14c492.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c498.   v1:= temp  @type object;
#L14c49a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c4a0.   v1:= temp  @type object;
#L14c4a2.   v2:= " in " @type (object, string);
#L14c4a6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c4ac.   v1:= temp  @type object;
#L14c4ae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c4b4.   v1:= temp  @type object;
#L14c4b6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c4bc.   v1:= temp  @type object;
#L14c4be.   call temp:=  [|java:lang:SecurityException.<init>|](v0, v1) @signature [|Ljava/lang/SecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:SecurityException|] @type direct;
#L14c4c4.   throw v0;

   }
    procedure [|boolean|] [|java:util:jar:JarVerifier.verify|] ([|java:util:jar:JarVerifier|] v9 @type (this), [|java:util:jar:Attributes|] v10 @type (object), [|java:lang:String|] v11 @type (object), [|byte|][] v12, [|int|] v13, [|int|] v14, [|boolean|] v15, [|boolean|] v16) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.verify:(Ljava/util/jar/Attributes;Ljava/lang/String;[BIIZZ)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L14c4d8.   v5:= 0  @length 4;
#L14c4da.   v7:= @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|]   @type object;
#L14c4de.   v7:= v7.length;
#L14c4e0.   if v5 >= v7 then goto L14c57c;
#L14c4e4.   v7:= @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|]   @type object;
#L14c4e8.   v0:= v7[v5]  @type object;
#L14c4ec.   v7:= new [|java:lang:StringBuilder|];
#L14c4f0.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c4f6.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c4fc.   v7:= temp  @type object;
#L14c4fe.   call temp:=  [|java:lang:StringBuilder.append|](v7, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c504.   v7:= temp  @type object;
#L14c506.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c50c.   v7:= temp  @type object;
#L14c50e.   call temp:=  [|java:util:jar:Attributes.getValue|](v10, v7) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14c514.   v3:= temp  @type object;
#L14c516.   if v3 != 0 then goto L14c520;
#L14c51a.   v5:= v5 + 1;
#L14c51e.   goto L14c4da;
#L14c520.   call temp:=  [|java:security:MessageDigest.getInstance|](v0) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L14c526.   v6:= temp  @type object;
#L14c528.   if v15 == 0 then goto L14c582;
#L14c52c.   v7:= v14 + -1;
#L14c530.   v7:= v12[v7]  @byte;
#L14c534.   v8:= 10  @length 16;
#L14c538.   if v7 != v8 then goto L14c582;
#L14c53c.   v7:= v14 + -2;
#L14c540.   v7:= v12[v7]  @byte;
#L14c544.   v8:= 10  @length 16;
#L14c548.   if v7 != v8 then goto L14c582;
#L14c54c.   v7:= v14 + -1;
#L14c550.   v7:= v7 - v13  @type int;
#L14c552.   call temp:=  [|java:security:MessageDigest.update|](v6, v12, v13, v7) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c558.   call temp:=  [|java:security:MessageDigest.digest|](v6) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c55e.   v1:= temp  @type object;
#L14c560.   v7:= @@[|java:nio:charset:Charsets.ISO_8859_1|]   @type object;
#L14c564.   call temp:=  [|java:lang:String.getBytes|](v3, v7) @signature [|Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c56a.   v4:= temp  @type object;
#L14c56c.   call temp:=  [|libcore:io:Base64.decode|](v4) @signature [|Llibcore/io/Base64;.decode:([B)[B|] @classDescriptor [|libcore:io:Base64|] @type static;
#L14c572.   v7:= temp  @type object;
#L14c574.   call temp:=  [|java:security:MessageDigest.isEqual|](v1, v7) @signature [|Ljava/security/MessageDigest;.isEqual:([B[B)Z|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L14c57a.   v16:= temp;
#L14c57c.   return v16;
#L14c57e.   v2:= Exception  @type object;
#L14c580.   goto L14c51a;
#L14c582.   v7:= v14 - v13  @type int;
#L14c586.   call temp:=  [|java:security:MessageDigest.update|](v6, v12, v13, v7) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L14c58c.   goto L14c558;
  catch  [|java:security:NoSuchAlgorithmException|] @[L14c520..L14c526] goto L14c57e;

   }
    procedure [|void|] [|java:util:jar:JarVerifier.verifyCertificate|] ([|java:util:jar:JarVerifier|] v25 @type (this), [|java:lang:String|] v26 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.verifyCertificate:(Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
      
#L14c5b0.   v2:= new [|java:lang:StringBuilder|];
#L14c5b4.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c5ba.   v6:= 0  @length 4;
#L14c5bc.   v7:= 46  @length 16;
#L14c5c0.   v0:= v26  @type object;
#L14c5c4.   call temp:=  [|java:lang:String.lastIndexOf|](v0, v7) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c5ca.   v7:= temp;
#L14c5cc.   v0:= v26  @type object;
#L14c5d0.   call temp:=  [|java:lang:String.substring|](v0, v6, v7) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c5d6.   v6:= temp  @type object;
#L14c5d8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c5de.   v2:= temp  @type object;
#L14c5e0.   v6:= ".SF" @type (object, string);
#L14c5e4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c5ea.   v2:= temp  @type object;
#L14c5ec.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c5f2.   v23:= temp  @type object;
#L14c5f4.   v0:= v25  @type object;
#L14c5f8.   v2:= v0.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c5fc.   v0:= v23  @type object;
#L14c600.   call temp:=  [|java:util:HashMap.get|](v2, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c606.   v22:= temp  @type object;
#L14c608.   v22:= ([|byte|][])v22;
#L14c60c.   if v22 != 0 then goto L14c612;
#L14c610.   return @void ;
#L14c612.   v0:= v25  @type object;
#L14c616.   v2:= v0.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c61a.   v6:= "META-INF/MANIFEST.MF" @type (object, string);
#L14c61e.   call temp:=  [|java:util:HashMap.get|](v2, v6) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c624.   v5:= temp  @type object;
#L14c626.   v5:= ([|byte|][])v5;
#L14c62a.   if v5 == 0 then goto L14c610;
#L14c62e.   v0:= v25  @type object;
#L14c632.   v2:= v0.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c636.   v0:= v26  @type object;
#L14c63a.   call temp:=  [|java:util:HashMap.get|](v2, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c640.   v21:= temp  @type object;
#L14c642.   v21:= ([|byte|][])v21;
#L14c646.   v2:= new [|java:io:ByteArrayInputStream|];
#L14c64a.   v0:= v22  @type object;
#L14c64e.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v2, v0) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L14c654.   v6:= new [|java:io:ByteArrayInputStream|];
#L14c658.   v0:= v21  @type object;
#L14c65c.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v6, v0) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L14c662.   call temp:=  [|org:apache:harmony:security:utils:JarUtils.verifySignature|](v2, v6) @signature [|Lorg/apache/harmony/security/utils/JarUtils;.verifySignature:(Ljava/io/InputStream;Ljava/io/InputStream;)[Ljava/security/cert/Certificate;|] @classDescriptor [|org:apache:harmony:security:utils:JarUtils|] @type static;
#L14c668.   v24:= temp  @type object;
#L14c66a.   v0:= v25  @type object;
#L14c66e.   v2:= v0.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c672.   if v2 == 0 then goto L14c610;
#L14c676.   if v24 == 0 then goto L14c690;
#L14c67a.   v0:= v25  @type object;
#L14c67e.   v2:= v0.[|java:util:jar:JarVerifier.certificates|]   @type object;
#L14c682.   v0:= v23  @type object;
#L14c686.   v1:= v24  @type object;
#L14c68a.   call temp:=  [|java:util:Hashtable.put|](v2, v0, v1) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c690.   v3:= new [|java:util:jar:Attributes|];
#L14c694.   call temp:=  [|java:util:jar:Attributes.<init>|](v3) @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14c69a.   v17:= new [|java:util:HashMap|];
#L14c69e.   call temp:=  [|java:util:HashMap.<init>|](v17) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14c6a4.   v19:= new [|java:util:jar:InitManifest|];
#L14c6a8.   v2:= @@[|java:util:jar:Attributes$Name.SIGNATURE_VERSION|]   @type object;
#L14c6ac.   v0:= v19  @type object;
#L14c6b0.   v1:= v22  @type object;
#L14c6b4.   call temp:=  [|java:util:jar:InitManifest.<init>|](v0, v1, v3, v2) @signature [|Ljava/util/jar/InitManifest;.<init>:([BLjava/util/jar/Attributes;Ljava/util/jar/Attributes$Name;)V|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L14c6ba.   v2:= 0  @length 4;
#L14c6bc.   v0:= v19  @type object;
#L14c6c0.   v1:= v17  @type object;
#L14c6c4.   call temp:=  [|java:util:jar:InitManifest.initEntries|](v0, v1, v2) @signature [|Ljava/util/jar/InitManifest;.initEntries:(Ljava/util/Map;Ljava/util/Map;)V|] @classDescriptor [|java:util:jar:InitManifest|] @type virtual;
#L14c6ca.   v12:= 0  @length 4;
#L14c6cc.   v2:= "Created-By" @type (object, string);
#L14c6d0.   call temp:=  [|java:util:jar:Attributes.getValue|](v3, v2) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14c6d6.   v15:= temp  @type object;
#L14c6d8.   if v15 == 0 then goto L14c6f0;
#L14c6dc.   v2:= "signtool" @type (object, string);
#L14c6e0.   call temp:=  [|java:lang:String.indexOf|](v15, v2) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c6e6.   v2:= temp;
#L14c6e8.   v6:= -1  @length 4;
#L14c6ea.   if v2 == v6 then goto L14c764;
#L14c6ee.   v12:= 1  @length 4;
#L14c6f0.   v0:= v25  @type object;
#L14c6f4.   v2:= v0.[|java:util:jar:JarVerifier.mainAttributesEnd|] ;
#L14c6f8.   if v2 <= 0 then goto L14c768;
#L14c6fc.   if v12 != 0 then goto L14c768;
#L14c700.   v4:= "-Digest-Manifest-Main-Attributes" @type (object, string);
#L14c704.   v6:= 0  @length 4;
#L14c706.   v0:= v25  @type object;
#L14c70a.   v7:= v0.[|java:util:jar:JarVerifier.mainAttributesEnd|] ;
#L14c70e.   v8:= 0  @length 4;
#L14c710.   v9:= 1  @length 4;
#L14c712.   v2:= v25  @type object;
#L14c716.   call temp:=  [|java:util:jar:JarVerifier.verify|](v2, v3, v4, v5, v6, v7, v8, v9) @signature [|Ljava/util/jar/JarVerifier;.verify:(Ljava/util/jar/Attributes;Ljava/lang/String;[BIIZZ)Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c71c.   v2:= temp;
#L14c71e.   if v2 != 0 then goto L14c768;
#L14c722.   v0:= v25  @type object;
#L14c726.   v2:= v0.[|java:util:jar:JarVerifier.jarName|]   @type object;
#L14c72a.   v0:= v25  @type object;
#L14c72e.   v1:= v23  @type object;
#L14c732.   call temp:=  [|java:util:jar:JarVerifier.failedVerification|](v0, v2, v1) @signature [|Ljava/util/jar/JarVerifier;.failedVerification:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c738.   v2:= temp  @type object;
#L14c73a.   throw v2;
#L14c73c.   v16:= Exception  @type object;
#L14c73e.   goto L14c610;
#L14c742.   v16:= Exception  @type object;
#L14c744.   v0:= v25  @type object;
#L14c748.   v2:= v0.[|java:util:jar:JarVerifier.jarName|]   @type object;
#L14c74c.   v0:= v25  @type object;
#L14c750.   v1:= v23  @type object;
#L14c754.   call temp:=  [|java:util:jar:JarVerifier.failedVerification|](v0, v2, v1) @signature [|Ljava/util/jar/JarVerifier;.failedVerification:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c75a.   v2:= temp  @type object;
#L14c75c.   throw v2;
#L14c75e.   v16:= Exception  @type object;
#L14c760.   goto L14c610;
#L14c764.   v12:= 0  @length 4;
#L14c766.   goto L14c6f0;
#L14c768.   if v12 == 0 then goto L14c822;
#L14c76c.   v4:= "-Digest" @type (object, string);
#L14c770.   v6:= 0  @length 4;
#L14c772.   v7:= v5.length;
#L14c774.   v8:= 0  @length 4;
#L14c776.   v9:= 0  @length 4;
#L14c778.   v2:= v25  @type object;
#L14c77c.   call temp:=  [|java:util:jar:JarVerifier.verify|](v2, v3, v4, v5, v6, v7, v8, v9) @signature [|Ljava/util/jar/JarVerifier;.verify:(Ljava/util/jar/Attributes;Ljava/lang/String;[BIIZZ)Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c782.   v2:= temp;
#L14c784.   if v2 != 0 then goto L14c828;
#L14c788.   call temp:=  [|java:util:HashMap.entrySet|](v17) @signature [|Ljava/util/HashMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c78e.   v2:= temp  @type object;
#L14c790.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14c796.   v20:= temp  @type object;
#L14c798.   call temp:=  [|java:util:Iterator.hasNext|](v20) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14c79e.   v2:= temp;
#L14c7a0.   if v2 == 0 then goto L14c828;
#L14c7a4.   call temp:=  [|java:util:Iterator.next|](v20) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14c7aa.   v18:= temp  @type object;
#L14c7ac.   v18:= ([|java:util:Map$Entry|])v18;
#L14c7b0.   v0:= v25  @type object;
#L14c7b4.   v6:= v0.[|java:util:jar:JarVerifier.man|]   @type object;
#L14c7b8.   call temp:=  [|java:util:Map$Entry.getKey|](v18) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L14c7be.   v2:= temp  @type object;
#L14c7c0.   v2:= ([|java:lang:String|])v2;
#L14c7c4.   call temp:=  [|java:util:jar:Manifest.getChunk|](v6, v2) @signature [|Ljava/util/jar/Manifest;.getChunk:(Ljava/lang/String;)Ljava/util/jar/Manifest$Chunk;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14c7ca.   v14:= temp  @type object;
#L14c7cc.   if v14 == 0 then goto L14c610;
#L14c7d0.   call temp:=  [|java:util:Map$Entry.getValue|](v18) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L14c7d6.   v7:= temp  @type object;
#L14c7d8.   v7:= ([|java:util:jar:Attributes|])v7;
#L14c7dc.   v8:= "-Digest" @type (object, string);
#L14c7e0.   v10:= v14.[|java:util:jar:Manifest$Chunk.start|] ;
#L14c7e4.   v11:= v14.[|java:util:jar:Manifest$Chunk.end|] ;
#L14c7e8.   v13:= 0  @length 4;
#L14c7ea.   v6:= v25  @type object;
#L14c7ee.   v9:= v5  @type object;
#L14c7f0.   call temp:=  [|java:util:jar:JarVerifier.verify|](v6, v7, v8, v9, v10, v11, v12, v13) @signature [|Ljava/util/jar/JarVerifier;.verify:(Ljava/util/jar/Attributes;Ljava/lang/String;[BIIZZ)Z|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c7f6.   v2:= temp;
#L14c7f8.   if v2 != 0 then goto L14c798;
#L14c7fc.   call temp:=  [|java:util:Map$Entry.getKey|](v18) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L14c802.   v2:= temp  @type object;
#L14c804.   v2:= ([|java:lang:String|])v2;
#L14c808.   v0:= v25  @type object;
#L14c80c.   v6:= v0.[|java:util:jar:JarVerifier.jarName|]   @type object;
#L14c810.   v0:= v25  @type object;
#L14c814.   v1:= v23  @type object;
#L14c818.   call temp:=  [|java:util:jar:JarVerifier.invalidDigest|](v0, v1, v2, v6) @signature [|Ljava/util/jar/JarVerifier;.invalidDigest:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/SecurityException;|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14c81e.   v2:= temp  @type object;
#L14c820.   throw v2;
#L14c822.   v4:= "-Digest-Manifest" @type (object, string);
#L14c826.   goto L14c770;
#L14c828.   v0:= v25  @type object;
#L14c82c.   v2:= v0.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c830.   v6:= 0  @length 4;
#L14c832.   v0:= v23  @type object;
#L14c836.   call temp:=  [|java:util:HashMap.put|](v2, v0, v6) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c83c.   v0:= v25  @type object;
#L14c840.   v2:= v0.[|java:util:jar:JarVerifier.signatures|]   @type object;
#L14c844.   v0:= v23  @type object;
#L14c848.   v1:= v17  @type object;
#L14c84c.   call temp:=  [|java:util:Hashtable.put|](v2, v0, v1) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c852.   goto L14c610;
  catch  [|java:io:IOException|] @[L14c646..L14c690] goto L14c73c;
  catch  [|java:security:GeneralSecurityException|] @[L14c646..L14c690] goto L14c742;
  catch  [|java:io:IOException|] @[L14c6a4..L14c6ca] goto L14c75e;

   }
    procedure [|void|] [|java:util:jar:JarVerifier.addMetaEntry|] ([|java:util:jar:JarVerifier|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|byte|][] v4) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.addMetaEntry:(Ljava/lang/String;[B)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L14c888.   v0:= v2.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14c88c.   v1:= @@[|java:util:Locale.US|]   @type object;
#L14c890.   call temp:=  [|java:lang:String.toUpperCase|](v3, v1) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L14c896.   v1:= temp  @type object;
#L14c898.   call temp:=  [|java:util:HashMap.put|](v0, v1, v4) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c89e.   return @void ;

   }
    procedure [|java:security:cert:Certificate|][] [|java:util:jar:JarVerifier.getCertificates|] ([|java:util:jar:JarVerifier|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.getCertificates:(Ljava/lang/String;)[Ljava/security/cert/Certificate;|] @Access  {
      local temp ;
        v0;
        v1;
      
#L14c8b0.   v1:= v2.[|java:util:jar:JarVerifier.verifiedEntries|]   @type object;
#L14c8b4.   call temp:=  [|java:util:Hashtable.get|](v1, v3) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c8ba.   v0:= temp  @type object;
#L14c8bc.   v0:= ([|java:security:cert:Certificate|][])v0;
#L14c8c0.   if v0 != 0 then goto L14c8c8;
#L14c8c4.   v1:= 0  @length 4;
#L14c8c6.   return v1  @type object;
#L14c8c8.   call temp:=  [|java:security:cert:Certificate[].clone|](v0) @signature [|[Ljava/security/cert/Certificate;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:security:cert:Certificate[]|] @type virtual;
#L14c8ce.   v1:= temp  @type object;
#L14c8d0.   v1:= ([|java:security:cert:Certificate|][])v1;
#L14c8d4.   goto L14c8c6;

   }
    procedure [|java:util:jar:JarVerifier$VerifierEntry|] [|java:util:jar:JarVerifier.initEntry|] ([|java:util:jar:JarVerifier|] v16 @type (this), [|java:lang:String|] v17 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.initEntry:(Ljava/lang/String;)Ljava/util/jar/JarVerifier$VerifierEntry;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L14c8e8.   v0:= v16  @type object;
#L14c8ec.   v1:= v0.[|java:util:jar:JarVerifier.man|]   @type object;
#L14c8f0.   if v1 == 0 then goto L14c908;
#L14c8f4.   v0:= v16  @type object;
#L14c8f8.   v1:= v0.[|java:util:jar:JarVerifier.signatures|]   @type object;
#L14c8fc.   call temp:=  [|java:util:Hashtable.size|](v1) @signature [|Ljava/util/Hashtable;.size:()I|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c902.   v1:= temp;
#L14c904.   if v1 != 0 then goto L14c90c;
#L14c908.   v1:= 0  @length 4;
#L14c90a.   return v1  @type object;
#L14c90c.   v0:= v16  @type object;
#L14c910.   v1:= v0.[|java:util:jar:JarVerifier.man|]   @type object;
#L14c914.   v0:= v17  @type object;
#L14c918.   call temp:=  [|java:util:jar:Manifest.getAttributes|](v1, v0) @signature [|Ljava/util/jar/Manifest;.getAttributes:(Ljava/lang/String;)Ljava/util/jar/Attributes;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14c91e.   v8:= temp  @type object;
#L14c920.   if v8 != 0 then goto L14c928;
#L14c924.   v1:= 0  @length 4;
#L14c926.   goto L14c90a;
#L14c928.   v9:= new [|java:util:ArrayList|];
#L14c92c.   call temp:=  [|java:util:ArrayList.<init>|](v9) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14c932.   v0:= v16  @type object;
#L14c936.   v1:= v0.[|java:util:jar:JarVerifier.signatures|]   @type object;
#L14c93a.   call temp:=  [|java:util:Hashtable.entrySet|](v1) @signature [|Ljava/util/Hashtable;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14c940.   v1:= temp  @type object;
#L14c942.   call temp:=  [|java:util:Set.iterator|](v1) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14c948.   v14:= temp  @type object;
#L14c94a.   call temp:=  [|java:util:Iterator.hasNext|](v14) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14c950.   v1:= temp;
#L14c952.   if v1 == 0 then goto L14c9a2;
#L14c956.   call temp:=  [|java:util:Iterator.next|](v14) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14c95c.   v10:= temp  @type object;
#L14c95e.   v10:= ([|java:util:Map$Entry|])v10;
#L14c962.   call temp:=  [|java:util:Map$Entry.getValue|](v10) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L14c968.   v12:= temp  @type object;
#L14c96a.   v12:= ([|java:util:HashMap|])v12;
#L14c96e.   v0:= v17  @type object;
#L14c972.   call temp:=  [|java:util:HashMap.get|](v12, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14c978.   v1:= temp  @type object;
#L14c97a.   if v1 == 0 then goto L14c94a;
#L14c97e.   call temp:=  [|java:util:Map$Entry.getKey|](v10) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L14c984.   v15:= temp  @type object;
#L14c986.   v15:= ([|java:lang:String|])v15;
#L14c98a.   v0:= v16  @type object;
#L14c98e.   v1:= v0.[|java:util:jar:JarVerifier.certificates|]   @type object;
#L14c992.   call temp:=  [|java:util:jar:JarVerifier.getSignerCertificates|](v15, v1) @signature [|Ljava/util/jar/JarVerifier;.getSignerCertificates:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Vector;|] @classDescriptor [|java:util:jar:JarVerifier|] @type static;
#L14c998.   v1:= temp  @type object;
#L14c99a.   call temp:=  [|java:util:ArrayList.addAll|](v9, v1) @signature [|Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L14c9a0.   goto L14c94a;
#L14c9a2.   call temp:=  [|java:util:ArrayList.isEmpty|](v9) @signature [|Ljava/util/ArrayList;.isEmpty:()Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L14c9a8.   v1:= temp;
#L14c9aa.   if v1 == 0 then goto L14c9b2;
#L14c9ae.   v1:= 0  @length 4;
#L14c9b0.   goto L14c90a;
#L14c9b2.   call temp:=  [|java:util:ArrayList.size|](v9) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L14c9b8.   v1:= temp;
#L14c9ba.   v1:= new [|java:security:cert:Certificate|][v1];
#L14c9be.   call temp:=  [|java:util:ArrayList.toArray|](v9, v1) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L14c9c4.   v6:= temp  @type object;
#L14c9c6.   v6:= ([|java:security:cert:Certificate|][])v6;
#L14c9ca.   v13:= 0  @length 4;
#L14c9cc.   v1:= @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|]   @type object;
#L14c9d0.   v1:= v1.length;
#L14c9d2.   if v13 >= v1 then goto L14ca44;
#L14c9d6.   v1:= @@[|java:util:jar:JarVerifier.DIGEST_ALGORITHMS|]   @type object;
#L14c9da.   v7:= v1[v13]  @type object;
#L14c9de.   v1:= new [|java:lang:StringBuilder|];
#L14c9e2.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14c9e8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c9ee.   v1:= temp  @type object;
#L14c9f0.   v2:= "-Digest" @type (object, string);
#L14c9f4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14c9fa.   v1:= temp  @type object;
#L14c9fc.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ca02.   v1:= temp  @type object;
#L14ca04.   call temp:=  [|java:util:jar:Attributes.getValue|](v8, v1) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ca0a.   v11:= temp  @type object;
#L14ca0c.   if v11 != 0 then goto L14ca16;
#L14ca10.   v13:= v13 + 1;
#L14ca14.   goto L14c9cc;
#L14ca16.   v1:= @@[|java:nio:charset:Charsets.ISO_8859_1|]   @type object;
#L14ca1a.   call temp:=  [|java:lang:String.getBytes|](v11, v1) @signature [|Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14ca20.   v5:= temp  @type object;
#L14ca22.   v1:= new [|java:util:jar:JarVerifier$VerifierEntry|];
#L14ca26.   call temp:=  [|java:security:MessageDigest.getInstance|](v7) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L14ca2c.   v4:= temp  @type object;
#L14ca2e.   v2:= v16  @type object;
#L14ca32.   v3:= v17  @type object;
#L14ca36.   call temp:=  [|java:util:jar:JarVerifier$VerifierEntry.<init>|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/jar/JarVerifier$VerifierEntry;.<init>:(Ljava/util/jar/JarVerifier;Ljava/lang/String;Ljava/security/MessageDigest;[B[Ljava/security/cert/Certificate;)V|] @classDescriptor [|java:util:jar:JarVerifier$VerifierEntry|] @type direct;
#L14ca3c.   goto L14c90a;
#L14ca40.   v1:= Exception  @type object;
#L14ca42.   goto L14ca10;
#L14ca44.   v1:= 0  @length 4;
#L14ca46.   goto L14c90a;
  catch  [|java:security:NoSuchAlgorithmException|] @[L14ca22..L14ca3c] goto L14ca40;

   }
    procedure [|boolean|] [|java:util:jar:JarVerifier.isSignedJar|] ([|java:util:jar:JarVerifier|] v1 @type (this)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.isSignedJar:()Z|] @Access  {
      local temp ;
        v0;
      
#L14ca6c.   v0:= v1.[|java:util:jar:JarVerifier.certificates|]   @type object;
#L14ca70.   call temp:=  [|java:util:Hashtable.size|](v0) @signature [|Ljava/util/Hashtable;.size:()I|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14ca76.   v0:= temp;
#L14ca78.   if v0 <= 0 then goto L14ca80;
#L14ca7c.   v0:= 1  @length 4;
#L14ca7e.   return v0;
#L14ca80.   v0:= 0  @length 4;
#L14ca82.   goto L14ca7e;

   }
    procedure [|boolean|] [|java:util:jar:JarVerifier.readCertificates|] ([|java:util:jar:JarVerifier|] v4 @type (this)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.readCertificates:()Z|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14ca94.   v2:= 0  @length 4;
#L14ca96.   (@monitorenter v4)
#L14ca98.   v3:= v4.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14ca9c.   if v3 != 0 then goto L14caa4;
#L14caa0.   (@monitorexit v4)
#L14caa2.   return v2;
#L14caa4.   v3:= v4.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14caa8.   call temp:=  [|java:util:HashMap.keySet|](v3) @signature [|Ljava/util/HashMap;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14caae.   v3:= temp  @type object;
#L14cab0.   call temp:=  [|java:util:Set.iterator|](v3) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14cab6.   v0:= temp  @type object;
#L14cab8.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14cabe.   v3:= temp;
#L14cac0.   if v3 == 0 then goto L14cb1c;
#L14cac4.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14caca.   v1:= temp  @type object;
#L14cacc.   v1:= ([|java:lang:String|])v1;
#L14cad0.   v3:= ".DSA" @type (object, string);
#L14cad4.   call temp:=  [|java:lang:String.endsWith|](v1, v3) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14cada.   v3:= temp;
#L14cadc.   if v3 != 0 then goto L14cb00;
#L14cae0.   v3:= ".RSA" @type (object, string);
#L14cae4.   call temp:=  [|java:lang:String.endsWith|](v1, v3) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14caea.   v3:= temp;
#L14caec.   if v3 != 0 then goto L14cb00;
#L14caf0.   v3:= ".EC" @type (object, string);
#L14caf4.   call temp:=  [|java:lang:String.endsWith|](v1, v3) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14cafa.   v3:= temp;
#L14cafc.   if v3 == 0 then goto L14cab8;
#L14cb00.   call temp:=  [|java:util:jar:JarVerifier.verifyCertificate|](v4, v1) @signature [|Ljava/util/jar/JarVerifier;.verifyCertificate:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:JarVerifier|] @type direct;
#L14cb06.   v3:= v4.[|java:util:jar:JarVerifier.metaEntries|]   @type object;
#L14cb0a.   if v3 == 0 then goto L14caa0;
#L14cb0e.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14cb14.   goto L14cab8;
#L14cb16.   v2:= Exception  @type object;
#L14cb18.   (@monitorexit v4)
#L14cb1a.   throw v2;
#L14cb1c.   v2:= 1  @length 4;
#L14cb1e.   goto L14caa0;
  catch  [|any|] @[L14ca98..L14ca9c] goto L14cb16;
  catch  [|any|] @[L14caa4..L14cb14] goto L14cb16;

   }
    procedure [|void|] [|java:util:jar:JarVerifier.removeMetaEntries|] ([|java:util:jar:JarVerifier|] v1 @type (this)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.removeMetaEntries:()V|] @Access  {
      local temp ;
        v0;
      
#L14cb44.   v0:= 0  @length 4;
#L14cb46.   v1.[|java:util:jar:JarVerifier.metaEntries|]  := v0 @type object;
#L14cb4a.   return @void ;

   }
    procedure [|void|] [|java:util:jar:JarVerifier.setManifest|] ([|java:util:jar:JarVerifier|] v0 @type (this), [|java:util:jar:Manifest|] v1 @type (object)) @owner [|java:util:jar:JarVerifier|] @signature [|Ljava/util/jar/JarVerifier;.setManifest:(Ljava/util/jar/Manifest;)V|] @Access  {
      local temp ;
      
#L14cb5c.   v0.[|java:util:jar:JarVerifier.man|]  := v1 @type object;
#L14cb60.   return @void ;

   }
record [|java:util:jar:Manifest$Chunk|]  @type class @AccessFlag   {
      [|int|] [|java:util:jar:Manifest$Chunk.end|]    @AccessFlag ;
      [|int|] [|java:util:jar:Manifest$Chunk.start|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:jar:Manifest$Chunk.<init>|] ([|java:util:jar:Manifest$Chunk|] v0 @type (this), [|int|] v1, [|int|] v2) @owner [|java:util:jar:Manifest$Chunk|] @signature [|Ljava/util/jar/Manifest$Chunk;.<init>:(II)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L14cb74.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14cb7a.   v0.[|java:util:jar:Manifest$Chunk.start|]  := v1;
#L14cb7e.   v0.[|java:util:jar:Manifest$Chunk.end|]  := v2;
#L14cb82.   return @void ;

   }
record [|java:util:jar:Manifest|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Cloneable|] {
      [|java:util:HashMap|] [|java:util:jar:Manifest.chunks|]    @AccessFlag PRIVATE;
      [|java:util:HashMap|] [|java:util:jar:Manifest.entries|]    @AccessFlag PRIVATE;
      [|java:util:jar:Attributes|] [|java:util:jar:Manifest.mainAttributes|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:jar:Manifest.mainEnd|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:reflect:Field|] @@[|java:util:jar:Manifest.BAIS_BUF|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:reflect:Field|] @@[|java:util:jar:Manifest.BAIS_POS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:jar:Manifest.LINE_LENGTH_LIMIT|]    @AccessFlag STATIC_FINAL;
      global [|byte|][] @@[|java:util:jar:Manifest.LINE_SEPARATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:jar:Attributes$Name|] @@[|java:util:jar:Manifest.NAME_ATTRIBUTE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|][] @@[|java:util:jar:Manifest.VALUE_SEPARATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:Manifest.<clinit>|] () @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14cb94.   v1:= 2  @length 4;
#L14cb96.   v0:= new [|byte|][v1];
#L14cb9a.   goto L14cbe8;
#L14cba0.   @@[|java:util:jar:Manifest.LINE_SEPARATOR|] := v0  @type object;
#L14cba4.   v0:= new [|byte|][v1];
#L14cba8.   goto L14cbf4;
#L14cbae.   @@[|java:util:jar:Manifest.VALUE_SEPARATOR|] := v0  @type object;
#L14cbb2.   v0:= new [|java:util:jar:Attributes$Name|];
#L14cbb6.   v1:= "Name" @type (object, string);
#L14cbba.   call temp:=  [|java:util:jar:Attributes$Name.<init>|](v0, v1) @signature [|Ljava/util/jar/Attributes$Name;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:jar:Attributes$Name|] @type direct;
#L14cbc0.   @@[|java:util:jar:Manifest.NAME_ATTRIBUTE|] := v0  @type object;
#L14cbc4.   v0:= "buf" @type (object, string);
#L14cbc8.   call temp:=  [|java:util:jar:Manifest.getByteArrayInputStreamField|](v0) @signature [|Ljava/util/jar/Manifest;.getByteArrayInputStreamField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14cbce.   v0:= temp  @type object;
#L14cbd0.   @@[|java:util:jar:Manifest.BAIS_BUF|] := v0  @type object;
#L14cbd4.   v0:= "pos" @type (object, string);
#L14cbd8.   call temp:=  [|java:util:jar:Manifest.getByteArrayInputStreamField|](v0) @signature [|Ljava/util/jar/Manifest;.getByteArrayInputStreamField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14cbde.   v0:= temp  @type object;
#L14cbe0.   @@[|java:util:jar:Manifest.BAIS_POS|] := v0  @type object;
#L14cbe4.   return @void ;
#L14cbe6.   
#L14cbe8.   v0:=`[fill-array-data length error];
               goto L14cba0;
#L14cbf2.   
#L14cbf4.   v0:=`[fill-array-data length error];
               goto L14cbae;

   }
    procedure [|void|] [|java:util:jar:Manifest.<init>|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14cc10.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14cc16.   v0:= new [|java:util:jar:Attributes|];
#L14cc1a.   call temp:=  [|java:util:jar:Attributes.<init>|](v0) @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14cc20.   v1.[|java:util:jar:Manifest.mainAttributes|]  := v0 @type object;
#L14cc24.   v0:= new [|java:util:HashMap|];
#L14cc28.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14cc2e.   v1.[|java:util:jar:Manifest.entries|]  := v0 @type object;
#L14cc32.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Manifest.<init>|] ([|java:util:jar:Manifest|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14cc44.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14cc4a.   v0:= new [|java:util:jar:Attributes|];
#L14cc4e.   call temp:=  [|java:util:jar:Attributes.<init>|](v0) @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14cc54.   v1.[|java:util:jar:Manifest.mainAttributes|]  := v0 @type object;
#L14cc58.   v0:= new [|java:util:HashMap|];
#L14cc5c.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14cc62.   v1.[|java:util:jar:Manifest.entries|]  := v0 @type object;
#L14cc66.   call temp:=  [|java:util:jar:Manifest.read|](v1, v2) @signature [|Ljava/util/jar/Manifest;.read:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14cc6c.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Manifest.<init>|] ([|java:util:jar:Manifest|] v1 @type (this), [|java:io:InputStream|] v2 @type (object), [|boolean|] v3) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/io/InputStream;Z)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L14cc80.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14cc86.   v0:= new [|java:util:jar:Attributes|];
#L14cc8a.   call temp:=  [|java:util:jar:Attributes.<init>|](v0) @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14cc90.   v1.[|java:util:jar:Manifest.mainAttributes|]  := v0 @type object;
#L14cc94.   v0:= new [|java:util:HashMap|];
#L14cc98.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14cc9e.   v1.[|java:util:jar:Manifest.entries|]  := v0 @type object;
#L14cca2.   if v3 == 0 then goto L14ccb4;
#L14cca6.   v0:= new [|java:util:HashMap|];
#L14ccaa.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14ccb0.   v1.[|java:util:jar:Manifest.chunks|]  := v0 @type object;
#L14ccb4.   call temp:=  [|java:util:jar:Manifest.read|](v1, v2) @signature [|Ljava/util/jar/Manifest;.read:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14ccba.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Manifest.<init>|] ([|java:util:jar:Manifest|] v1 @type (this), [|java:util:jar:Manifest|] v2 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/util/jar/Manifest;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14cccc.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14ccd2.   v0:= new [|java:util:jar:Attributes|];
#L14ccd6.   call temp:=  [|java:util:jar:Attributes.<init>|](v0) @signature [|Ljava/util/jar/Attributes;.<init>:()V|] @classDescriptor [|java:util:jar:Attributes|] @type direct;
#L14ccdc.   v1.[|java:util:jar:Manifest.mainAttributes|]  := v0 @type object;
#L14cce0.   v0:= new [|java:util:HashMap|];
#L14cce4.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L14ccea.   v1.[|java:util:jar:Manifest.entries|]  := v0 @type object;
#L14ccee.   v0:= v2.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14ccf2.   call temp:=  [|java:util:jar:Attributes.clone|](v0) @signature [|Ljava/util/jar/Attributes;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ccf8.   v0:= temp  @type object;
#L14ccfa.   v0:= ([|java:util:jar:Attributes|])v0;
#L14ccfe.   v1.[|java:util:jar:Manifest.mainAttributes|]  := v0 @type object;
#L14cd02.   call temp:=  [|java:util:jar:Manifest.getEntries|](v2) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14cd08.   v0:= temp  @type object;
#L14cd0a.   v0:= ([|java:util:HashMap|])v0;
#L14cd0e.   call temp:=  [|java:util:HashMap.clone|](v0) @signature [|Ljava/util/HashMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14cd14.   v0:= temp  @type object;
#L14cd16.   v0:= ([|java:util:HashMap|])v0;
#L14cd1a.   v1.[|java:util:jar:Manifest.entries|]  := v0 @type object;
#L14cd1e.   return @void ;

   }
    procedure [|byte|][] [|java:util:jar:Manifest.exposeByteArrayInputStreamBytes|] ([|java:io:ByteArrayInputStream|] v8 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.exposeByteArrayInputStreamBytes:(Ljava/io/ByteArrayInputStream;)[B|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14cd30.   (@monitorenter v8)
#L14cd32.   v6:= @@[|java:util:jar:Manifest.BAIS_BUF|]   @type object;
#L14cd36.   call temp:=  [|java:lang:reflect:Field.get|](v6, v8) @signature [|Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L14cd3c.   v6:= temp  @type object;
#L14cd3e.   v6:= ([|byte|][])v6;
#L14cd42.   v0:= v6  @type object;
#L14cd44.   v0:= ([|byte|][])v0;
#L14cd48.   v2:= v0  @type object;
#L14cd4a.   v6:= @@[|java:util:jar:Manifest.BAIS_POS|]   @type object;
#L14cd4e.   call temp:=  [|java:lang:reflect:Field.getInt|](v6, v8) @signature [|Ljava/lang/reflect/Field;.getInt:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L14cd54.   v5:= temp;
#L14cd56.   call temp:=  [|java:io:ByteArrayInputStream.available|](v8) @signature [|Ljava/io/ByteArrayInputStream;.available:()I|] @classDescriptor [|java:io:ByteArrayInputStream|] @type virtual;
#L14cd5c.   v1:= temp;
#L14cd5e.   if v5 != 0 then goto L14cd8a;
#L14cd62.   v6:= v2.length;
#L14cd64.   if v6 != v1 then goto L14cd8a;
#L14cd68.   v3:= v2  @type object;
#L14cd6a.   v6:= (long)v1  @type i2l;
#L14cd6c.   call temp:=  [|java:io:ByteArrayInputStream.skip|](v8, v6, v7) @signature [|Ljava/io/ByteArrayInputStream;.skip:(J)J|] @classDescriptor [|java:io:ByteArrayInputStream|] @type virtual;
#L14cd72.   (@monitorexit v8)
#L14cd74.   return v3  @type object;
#L14cd76.   v4:= Exception  @type object;
#L14cd78.   v6:= new [|java:lang:AssertionError|];
#L14cd7c.   call temp:=  [|java:lang:AssertionError.<init>|](v6, v4) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L14cd82.   throw v6;
#L14cd84.   v6:= Exception  @type object;
#L14cd86.   (@monitorexit v8)
#L14cd88.   throw v6;
#L14cd8a.   v3:= new [|byte|][v1];
#L14cd8e.   v6:= 0  @length 4;
#L14cd90.   call temp:=  [|java:lang:System.arraycopy|](v2, v5, v3, v6, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L14cd96.   goto L14cd6a;
  catch  [|java:lang:IllegalAccessException|] @[L14cd32..L14cd54] goto L14cd76;
  catch  [|any|] @[L14cd32..L14cd54] goto L14cd84;
  catch  [|any|] @[L14cd56..L14cd88] goto L14cd84;
  catch  [|any|] @[L14cd8a..L14cd96] goto L14cd84;

   }
    procedure [|java:lang:reflect:Field|] [|java:util:jar:Manifest.getByteArrayInputStreamField|] ([|java:lang:String|] v3 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getByteArrayInputStreamField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14cdc8.   v2:= new [|java:io:ByteArrayInputStream|];
#L14cdcc.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14cdd2.   v1:= temp  @type object;
#L14cdd4.   v2:= 1  @length 4;
#L14cdd6.   call temp:=  [|java:lang:reflect:Field.setAccessible|](v1, v2) @signature [|Ljava/lang/reflect/Field;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L14cddc.   return v1  @type object;
#L14cdde.   v0:= Exception  @type object;
#L14cde0.   v2:= new [|java:lang:AssertionError|];
#L14cde4.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L14cdea.   throw v2;
  catch  [|java:lang:Exception|] @[L14cdc8..L14cddc] goto L14cdde;

   }
    procedure [|void|] [|java:util:jar:Manifest.write|] ([|java:util:jar:Manifest|] v10 @type (object), [|java:io:OutputStream|] v11 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.write:(Ljava/util/jar/Manifest;Ljava/io/OutputStream;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L14ce0c.   v8:= @@[|java:nio:charset:Charsets.UTF_8|]   @type object;
#L14ce10.   call temp:=  [|java:nio:charset:Charset.newEncoder|](v8) @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L14ce16.   v2:= temp  @type object;
#L14ce18.   v8:= 72  @length 16;
#L14ce1c.   call temp:=  [|java:nio:ByteBuffer.allocate|](v8) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L14ce22.   v1:= temp  @type object;
#L14ce24.   v8:= v10.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14ce28.   v9:= @@[|java:util:jar:Attributes$Name.MANIFEST_VERSION|]   @type object;
#L14ce2c.   call temp:=  [|java:util:jar:Attributes.getValue|](v8, v9) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ce32.   v7:= temp  @type object;
#L14ce34.   if v7 == 0 then goto L14ce92;
#L14ce38.   v8:= @@[|java:util:jar:Attributes$Name.MANIFEST_VERSION|]   @type object;
#L14ce3c.   call temp:=  [|java:util:jar:Manifest.writeEntry|](v11, v8, v7, v2, v1) @signature [|Ljava/util/jar/Manifest;.writeEntry:(Ljava/io/OutputStream;Ljava/util/jar/Attributes$Name;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14ce42.   v8:= v10.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14ce46.   call temp:=  [|java:util:jar:Attributes.keySet|](v8) @signature [|Ljava/util/jar/Attributes;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ce4c.   v8:= temp  @type object;
#L14ce4e.   call temp:=  [|java:util:Set.iterator|](v8) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14ce54.   v3:= temp  @type object;
#L14ce56.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ce5c.   v8:= temp;
#L14ce5e.   if v8 == 0 then goto L14ce92;
#L14ce62.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ce68.   v6:= temp  @type object;
#L14ce6a.   v6:= ([|java:util:jar:Attributes$Name|])v6;
#L14ce6e.   v8:= @@[|java:util:jar:Attributes$Name.MANIFEST_VERSION|]   @type object;
#L14ce72.   call temp:=  [|java:util:jar:Attributes$Name.equals|](v6, v8) @signature [|Ljava/util/jar/Attributes$Name;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:jar:Attributes$Name|] @type virtual;
#L14ce78.   v8:= temp;
#L14ce7a.   if v8 != 0 then goto L14ce56;
#L14ce7e.   v8:= v10.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14ce82.   call temp:=  [|java:util:jar:Attributes.getValue|](v8, v6) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ce88.   v8:= temp  @type object;
#L14ce8a.   call temp:=  [|java:util:jar:Manifest.writeEntry|](v11, v6, v8, v2, v1) @signature [|Ljava/util/jar/Manifest;.writeEntry:(Ljava/io/OutputStream;Ljava/util/jar/Attributes$Name;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14ce90.   goto L14ce56;
#L14ce92.   v8:= @@[|java:util:jar:Manifest.LINE_SEPARATOR|]   @type object;
#L14ce96.   call temp:=  [|java:io:OutputStream.write|](v11, v8) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14ce9c.   call temp:=  [|java:util:jar:Manifest.getEntries|](v10) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14cea2.   v8:= temp  @type object;
#L14cea4.   call temp:=  [|java:util:Map.keySet|](v8) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L14ceaa.   v8:= temp  @type object;
#L14ceac.   call temp:=  [|java:util:Set.iterator|](v8) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14ceb2.   v4:= temp  @type object;
#L14ceb4.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ceba.   v8:= temp;
#L14cebc.   if v8 == 0 then goto L14cf2a;
#L14cec0.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14cec6.   v5:= temp  @type object;
#L14cec8.   v5:= ([|java:lang:String|])v5;
#L14cecc.   v8:= @@[|java:util:jar:Manifest.NAME_ATTRIBUTE|]   @type object;
#L14ced0.   call temp:=  [|java:util:jar:Manifest.writeEntry|](v11, v8, v5, v2, v1) @signature [|Ljava/util/jar/Manifest;.writeEntry:(Ljava/io/OutputStream;Ljava/util/jar/Attributes$Name;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14ced6.   v8:= v10.[|java:util:jar:Manifest.entries|]   @type object;
#L14ceda.   call temp:=  [|java:util:HashMap.get|](v8, v5) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14cee0.   v0:= temp  @type object;
#L14cee2.   v0:= ([|java:util:jar:Attributes|])v0;
#L14cee6.   call temp:=  [|java:util:jar:Attributes.keySet|](v0) @signature [|Ljava/util/jar/Attributes;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14ceec.   v8:= temp  @type object;
#L14ceee.   call temp:=  [|java:util:Set.iterator|](v8) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L14cef4.   v3:= temp  @type object;
#L14cef6.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14cefc.   v8:= temp;
#L14cefe.   if v8 == 0 then goto L14cf1e;
#L14cf02.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14cf08.   v6:= temp  @type object;
#L14cf0a.   v6:= ([|java:util:jar:Attributes$Name|])v6;
#L14cf0e.   call temp:=  [|java:util:jar:Attributes.getValue|](v0, v6) @signature [|Ljava/util/jar/Attributes;.getValue:(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14cf14.   v8:= temp  @type object;
#L14cf16.   call temp:=  [|java:util:jar:Manifest.writeEntry|](v11, v6, v8, v2, v1) @signature [|Ljava/util/jar/Manifest;.writeEntry:(Ljava/io/OutputStream;Ljava/util/jar/Attributes$Name;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14cf1c.   goto L14cef6;
#L14cf1e.   v8:= @@[|java:util:jar:Manifest.LINE_SEPARATOR|]   @type object;
#L14cf22.   call temp:=  [|java:io:OutputStream.write|](v11, v8) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cf28.   goto L14ceb4;
#L14cf2a.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Manifest.writeEntry|] ([|java:io:OutputStream|] v6 @type (object), [|java:util:jar:Attributes$Name|] v7 @type (object), [|java:lang:String|] v8 @type (object), [|java:nio:charset:CharsetEncoder|] v9 @type (object), [|java:nio:ByteBuffer|] v10 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.writeEntry:(Ljava/io/OutputStream;Ljava/util/jar/Attributes$Name;Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Ljava/nio/ByteBuffer;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14cf3c.   call temp:=  [|java:util:jar:Attributes$Name.getName|](v7) @signature [|Ljava/util/jar/Attributes$Name;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:jar:Attributes$Name|] @type virtual;
#L14cf42.   v1:= temp  @type object;
#L14cf44.   v3:= @@[|java:nio:charset:Charsets.US_ASCII|]   @type object;
#L14cf48.   call temp:=  [|java:lang:String.getBytes|](v1, v3) @signature [|Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L14cf4e.   v3:= temp  @type object;
#L14cf50.   call temp:=  [|java:io:OutputStream.write|](v6, v3) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cf56.   v3:= @@[|java:util:jar:Manifest.VALUE_SEPARATOR|]   @type object;
#L14cf5a.   call temp:=  [|java:io:OutputStream.write|](v6, v3) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cf60.   call temp:=  [|java:nio:charset:CharsetEncoder.reset|](v9) @signature [|Ljava/nio/charset/CharsetEncoder;.reset:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L14cf66.   call temp:=  [|java:nio:ByteBuffer.clear|](v10) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L14cf6c.   v3:= temp  @type object;
#L14cf6e.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14cf74.   v4:= temp;
#L14cf76.   v4:= v4 - 72;
#L14cf7a.   v4:= v4 + -2;
#L14cf7e.   call temp:=  [|java:nio:Buffer.limit|](v3, v4) @signature [|Ljava/nio/Buffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L14cf84.   call temp:=  [|java:nio:CharBuffer.wrap|](v8) @signature [|Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L14cf8a.   v0:= temp  @type object;
#L14cf8c.   v3:= 1  @length 4;
#L14cf8e.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v9, v0, v10, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L14cf94.   v2:= temp  @type object;
#L14cf96.   v3:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L14cf9a.   if v3 != v2 then goto L14cfa6;
#L14cf9e.   call temp:=  [|java:nio:charset:CharsetEncoder.flush|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoder;.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L14cfa4.   v2:= temp  @type object;
#L14cfa6.   call temp:=  [|java:nio:ByteBuffer.array|](v10) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L14cfac.   v3:= temp  @type object;
#L14cfae.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v10) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L14cfb4.   v4:= temp;
#L14cfb6.   call temp:=  [|java:nio:ByteBuffer.position|](v10) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L14cfbc.   v5:= temp;
#L14cfbe.   call temp:=  [|java:io:OutputStream.write|](v6, v3, v4, v5) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cfc4.   v3:= @@[|java:util:jar:Manifest.LINE_SEPARATOR|]   @type object;
#L14cfc8.   call temp:=  [|java:io:OutputStream.write|](v6, v3) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cfce.   v3:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L14cfd2.   if v3 != v2 then goto L14cfd8;
#L14cfd6.   return @void ;
#L14cfd8.   v3:= 32  @length 16;
#L14cfdc.   call temp:=  [|java:io:OutputStream.write|](v6, v3) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14cfe2.   call temp:=  [|java:nio:ByteBuffer.clear|](v10) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L14cfe8.   v3:= temp  @type object;
#L14cfea.   v4:= 71  @length 16;
#L14cfee.   call temp:=  [|java:nio:Buffer.limit|](v3, v4) @signature [|Ljava/nio/Buffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L14cff4.   goto L14cf8c;

   }
    procedure [|void|] [|java:util:jar:Manifest.clear|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d008.   v0:= v1.[|java:util:jar:Manifest.entries|]   @type object;
#L14d00c.   call temp:=  [|java:util:HashMap.clear|](v0) @signature [|Ljava/util/HashMap;.clear:()V|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14d012.   v0:= v1.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d016.   call temp:=  [|java:util:jar:Attributes.clear|](v0) @signature [|Ljava/util/jar/Attributes;.clear:()V|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14d01c.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:jar:Manifest.clone|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d030.   v0:= new [|java:util:jar:Manifest|];
#L14d034.   call temp:=  [|java:util:jar:Manifest.<init>|](v0, v1) @signature [|Ljava/util/jar/Manifest;.<init>:(Ljava/util/jar/Manifest;)V|] @classDescriptor [|java:util:jar:Manifest|] @type direct;
#L14d03a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:jar:Manifest.equals|] ([|java:util:jar:Manifest|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d04c.   v1:= 0  @length 4;
#L14d04e.   if v4 != 0 then goto L14d056;
#L14d052.   v0:= v1;
#L14d054.   return v0;
#L14d056.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14d05c.   v0:= temp  @type object;
#L14d05e.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14d064.   v2:= temp  @type object;
#L14d066.   if v0 == v2 then goto L14d06e;
#L14d06a.   v0:= v1;
#L14d06c.   goto L14d054;
#L14d06e.   v2:= v3.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d072.   v0:= v4  @type object;
#L14d074.   v0:= ([|java:util:jar:Manifest|])v0;
#L14d078.   v0:= v0.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d07c.   call temp:=  [|java:util:jar:Attributes.equals|](v2, v0) @signature [|Ljava/util/jar/Attributes;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14d082.   v0:= temp;
#L14d084.   if v0 != 0 then goto L14d08c;
#L14d088.   v0:= v1;
#L14d08a.   goto L14d054;
#L14d08c.   call temp:=  [|java:util:jar:Manifest.getEntries|](v3) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14d092.   v0:= temp  @type object;
#L14d094.   v4:= ([|java:util:jar:Manifest|])v4;
#L14d098.   call temp:=  [|java:util:jar:Manifest.getEntries|](v4) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14d09e.   v1:= temp  @type object;
#L14d0a0.   call temp:=  [|java:lang:Object.equals|](v0, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14d0a6.   v0:= temp;
#L14d0a8.   goto L14d054;

   }
    procedure [|java:util:jar:Attributes|] [|java:util:jar:Manifest.getAttributes|] ([|java:util:jar:Manifest|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getAttributes:(Ljava/lang/String;)Ljava/util/jar/Attributes;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d0bc.   call temp:=  [|java:util:jar:Manifest.getEntries|](v1) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14d0c2.   v0:= temp  @type object;
#L14d0c4.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L14d0ca.   v0:= temp  @type object;
#L14d0cc.   v0:= ([|java:util:jar:Attributes|])v0;
#L14d0d0.   return v0  @type object;

   }
    procedure [|java:util:jar:Manifest$Chunk|] [|java:util:jar:Manifest.getChunk|] ([|java:util:jar:Manifest|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getChunk:(Ljava/lang/String;)Ljava/util/jar/Manifest$Chunk;|] @Access  {
      local temp ;
        v0;
      
#L14d0e4.   v0:= v1.[|java:util:jar:Manifest.chunks|]   @type object;
#L14d0e8.   call temp:=  [|java:util:HashMap.get|](v0, v2) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L14d0ee.   v0:= temp  @type object;
#L14d0f0.   v0:= ([|java:util:jar:Manifest$Chunk|])v0;
#L14d0f4.   return v0  @type object;

   }
    procedure [|java:util:Map|] [|java:util:jar:Manifest.getEntries|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d108.   v0:= v1.[|java:util:jar:Manifest.entries|]   @type object;
#L14d10c.   return v0  @type object;

   }
    procedure [|java:util:jar:Attributes|] [|java:util:jar:Manifest.getMainAttributes|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getMainAttributes:()Ljava/util/jar/Attributes;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d120.   v0:= v1.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d124.   return v0  @type object;

   }
    procedure [|int|] [|java:util:jar:Manifest.getMainAttributesEnd|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.getMainAttributesEnd:()I|] @Access  {
      local temp ;
        v0;
      
#L14d138.   v0:= v1.[|java:util:jar:Manifest.mainEnd|] ;
#L14d13c.   return v0;

   }
    procedure [|int|] [|java:util:jar:Manifest.hashCode|] ([|java:util:jar:Manifest|] v2 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14d150.   v0:= v2.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d154.   call temp:=  [|java:util:jar:Attributes.hashCode|](v0) @signature [|Ljava/util/jar/Attributes;.hashCode:()I|] @classDescriptor [|java:util:jar:Attributes|] @type virtual;
#L14d15a.   v0:= temp;
#L14d15c.   call temp:=  [|java:util:jar:Manifest.getEntries|](v2) @signature [|Ljava/util/jar/Manifest;.getEntries:()Ljava/util/Map;|] @classDescriptor [|java:util:jar:Manifest|] @type virtual;
#L14d162.   v1:= temp  @type object;
#L14d164.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14d16a.   v1:= temp;
#L14d16c.   v0:= v0 ^~ v1  @type int;
#L14d16e.   return v0;

   }
    procedure [|void|] [|java:util:jar:Manifest.read|] ([|java:util:jar:Manifest|] v5 @type (this), [|java:io:InputStream|] v6 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.read:(Ljava/io/InputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14d180.   v3:= instanceof @varname v6 @type [|java:io:ByteArrayInputStream|];
#L14d184.   if v3 == 0 then goto L14d19c;
#L14d188.   v6:= ([|java:io:ByteArrayInputStream|])v6;
#L14d18c.   call temp:=  [|java:util:jar:Manifest.exposeByteArrayInputStreamBytes|](v6) @signature [|Ljava/util/jar/Manifest;.exposeByteArrayInputStreamBytes:(Ljava/io/ByteArrayInputStream;)[B|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14d192.   v1:= temp  @type object;
#L14d194.   v3:= v1.length;
#L14d196.   if v3 != 0 then goto L14d1a6;
#L14d19a.   return @void ;
#L14d19c.   call temp:=  [|libcore:io:Streams.readFullyNoClose|](v6) @signature [|Llibcore/io/Streams;.readFullyNoClose:(Ljava/io/InputStream;)[B|] @classDescriptor [|libcore:io:Streams|] @type static;
#L14d1a2.   v1:= temp  @type object;
#L14d1a4.   goto L14d194;
#L14d1a6.   v3:= v1.length;
#L14d1a8.   v3:= v3 + -1;
#L14d1ac.   v0:= v1[v3]  @byte;
#L14d1b0.   if v0 == 0 then goto L14d1bc;
#L14d1b4.   v3:= 26  @length 16;
#L14d1b8.   if v0 != v3 then goto L14d1ca;
#L14d1bc.   v3:= v1.length;
#L14d1be.   v3:= v3 + -1;
#L14d1c2.   v4:= 10  @length 16;
#L14d1c6.   v1[v3]:= v4  @byte;
#L14d1ca.   v2:= new [|java:util:jar:InitManifest|];
#L14d1ce.   v3:= v5.[|java:util:jar:Manifest.mainAttributes|]   @type object;
#L14d1d2.   v4:= 0  @length 4;
#L14d1d4.   call temp:=  [|java:util:jar:InitManifest.<init>|](v2, v1, v3, v4) @signature [|Ljava/util/jar/InitManifest;.<init>:([BLjava/util/jar/Attributes;Ljava/util/jar/Attributes$Name;)V|] @classDescriptor [|java:util:jar:InitManifest|] @type direct;
#L14d1da.   call temp:=  [|java:util:jar:InitManifest.getPos|](v2) @signature [|Ljava/util/jar/InitManifest;.getPos:()I|] @classDescriptor [|java:util:jar:InitManifest|] @type virtual;
#L14d1e0.   v3:= temp;
#L14d1e2.   v5.[|java:util:jar:Manifest.mainEnd|]  := v3;
#L14d1e6.   v3:= v5.[|java:util:jar:Manifest.entries|]   @type object;
#L14d1ea.   v4:= v5.[|java:util:jar:Manifest.chunks|]   @type object;
#L14d1ee.   call temp:=  [|java:util:jar:InitManifest.initEntries|](v2, v3, v4) @signature [|Ljava/util/jar/InitManifest;.initEntries:(Ljava/util/Map;Ljava/util/Map;)V|] @classDescriptor [|java:util:jar:InitManifest|] @type virtual;
#L14d1f4.   goto L14d19a;

   }
    procedure [|void|] [|java:util:jar:Manifest.removeChunks|] ([|java:util:jar:Manifest|] v1 @type (this)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.removeChunks:()V|] @Access  {
      local temp ;
        v0;
      
#L14d208.   v0:= 0  @length 4;
#L14d20a.   v1.[|java:util:jar:Manifest.chunks|]  := v0 @type object;
#L14d20e.   return @void ;

   }
    procedure [|void|] [|java:util:jar:Manifest.write|] ([|java:util:jar:Manifest|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:jar:Manifest|] @signature [|Ljava/util/jar/Manifest;.write:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
      
#L14d220.   call temp:=  [|java:util:jar:Manifest.write|](v0, v1) @signature [|Ljava/util/jar/Manifest;.write:(Ljava/util/jar/Manifest;Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:jar:Manifest|] @type static;
#L14d226.   return @void ;

   }
record [|java:util:jar:Pack200$Packer|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.CLASS_ATTRIBUTE_PFX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.CODE_ATTRIBUTE_PFX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.DEFLATE_HINT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.EFFORT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.ERROR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.FALSE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.FIELD_ATTRIBUTE_PFX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.KEEP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.KEEP_FILE_ORDER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.LATEST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.METHOD_ATTRIBUTE_PFX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.MODIFICATION_TIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.PASS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.PASS_FILE_PFX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.PROGRESS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.SEGMENT_LIMIT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.STRIP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.TRUE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Packer.UNKNOWN_ATTRIBUTE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:Pack200$Packer.addPropertyChangeListener|] ([|java:beans:PropertyChangeListener|] v0 @type (object)) @owner [|java:util:jar:Pack200$Packer|] @signature [|Ljava/util/jar/Pack200$Packer;.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Packer.pack|] ([|java:util:jar:JarFile|] v0 @type (object), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:jar:Pack200$Packer|] @signature [|Ljava/util/jar/Pack200$Packer;.pack:(Ljava/util/jar/JarFile;Ljava/io/OutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Packer.pack|] ([|java:util:jar:JarInputStream|] v0 @type (object), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:jar:Pack200$Packer|] @signature [|Ljava/util/jar/Pack200$Packer;.pack:(Ljava/util/jar/JarInputStream;Ljava/io/OutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:SortedMap|] [|java:util:jar:Pack200$Packer.properties|] () @owner [|java:util:jar:Pack200$Packer|] @signature [|Ljava/util/jar/Pack200$Packer;.properties:()Ljava/util/SortedMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Packer.removePropertyChangeListener|] ([|java:beans:PropertyChangeListener|] v0 @type (object)) @owner [|java:util:jar:Pack200$Packer|] @signature [|Ljava/util/jar/Pack200$Packer;.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:jar:Pack200$Unpacker|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Unpacker.DEFLATE_HINT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Unpacker.FALSE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Unpacker.KEEP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Unpacker.PROGRESS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200$Unpacker.TRUE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:Pack200$Unpacker.addPropertyChangeListener|] ([|java:beans:PropertyChangeListener|] v0 @type (object)) @owner [|java:util:jar:Pack200$Unpacker|] @signature [|Ljava/util/jar/Pack200$Unpacker;.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:SortedMap|] [|java:util:jar:Pack200$Unpacker.properties|] () @owner [|java:util:jar:Pack200$Unpacker|] @signature [|Ljava/util/jar/Pack200$Unpacker;.properties:()Ljava/util/SortedMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Unpacker.removePropertyChangeListener|] ([|java:beans:PropertyChangeListener|] v0 @type (object)) @owner [|java:util:jar:Pack200$Unpacker|] @signature [|Ljava/util/jar/Pack200$Unpacker;.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Unpacker.unpack|] ([|java:io:File|] v0 @type (object), [|java:util:jar:JarOutputStream|] v1 @type (object)) @owner [|java:util:jar:Pack200$Unpacker|] @signature [|Ljava/util/jar/Pack200$Unpacker;.unpack:(Ljava/io/File;Ljava/util/jar/JarOutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:jar:Pack200$Unpacker.unpack|] ([|java:io:InputStream|] v0 @type (object), [|java:util:jar:JarOutputStream|] v1 @type (object)) @owner [|java:util:jar:Pack200$Unpacker|] @signature [|Ljava/util/jar/Pack200$Unpacker;.unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:jar:Pack200|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|java:lang:String|] @@[|java:util:jar:Pack200.SYSTEM_PROPERTY_PACKER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:jar:Pack200.SYSTEM_PROPERTY_UNPACKER|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:jar:Pack200.<init>|] ([|java:util:jar:Pack200|] v0 @type (this)) @owner [|java:util:jar:Pack200|] @signature [|Ljava/util/jar/Pack200;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L14d238.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14d23e.   return @void ;

   }
    procedure [|java:util:jar:Pack200$Packer|] [|java:util:jar:Pack200.newPacker|] () @owner [|java:util:jar:Pack200|] @signature [|Ljava/util/jar/Pack200;.newPacker:()Ljava/util/jar/Pack200$Packer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14d250.   v2:= "java.util.jar.Pack200.Packer" @type (object, string);
#L14d254.   v3:= "org.apache.harmony.pack200.Pack200PackerAdapter" @type (object, string);
#L14d258.   call temp:=  [|java:lang:System.getProperty|](v2, v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14d25e.   v0:= temp  @type object;
#L14d260.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L14d266.   v2:= temp  @type object;
#L14d268.   call temp:=  [|java:lang:ClassLoader.loadClass|](v2, v0) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L14d26e.   v2:= temp  @type object;
#L14d270.   call temp:=  [|java:lang:Class.newInstance|](v2) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14d276.   v2:= temp  @type object;
#L14d278.   v2:= ([|java:util:jar:Pack200$Packer|])v2;
#L14d27c.   return v2  @type object;
#L14d27e.   v1:= Exception  @type object;
#L14d280.   v2:= new [|java:lang:Error|];
#L14d284.   v3:= new [|java:lang:StringBuilder|];
#L14d288.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d28e.   v4:= "Can't load class " @type (object, string);
#L14d292.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d298.   v3:= temp  @type object;
#L14d29a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d2a0.   v3:= temp  @type object;
#L14d2a2.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d2a8.   v3:= temp  @type object;
#L14d2aa.   call temp:=  [|java:lang:Error.<init>|](v2, v3, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14d2b0.   throw v2;
  catch  [|java:lang:Exception|] @[L14d260..L14d27c] goto L14d27e;

   }
    procedure [|java:util:jar:Pack200$Unpacker|] [|java:util:jar:Pack200.newUnpacker|] () @owner [|java:util:jar:Pack200|] @signature [|Ljava/util/jar/Pack200;.newUnpacker:()Ljava/util/jar/Pack200$Unpacker;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14d2d4.   v2:= "java.util.jar.Pack200.Unpacker" @type (object, string);
#L14d2d8.   v3:= "org.apache.harmony.unpack200.Pack200UnpackerAdapter" @type (object, string);
#L14d2dc.   call temp:=  [|java:lang:System.getProperty|](v2, v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14d2e2.   v0:= temp  @type object;
#L14d2e4.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L14d2ea.   v2:= temp  @type object;
#L14d2ec.   call temp:=  [|java:lang:ClassLoader.loadClass|](v2, v0) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L14d2f2.   v2:= temp  @type object;
#L14d2f4.   call temp:=  [|java:lang:Class.newInstance|](v2) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14d2fa.   v2:= temp  @type object;
#L14d2fc.   v2:= ([|java:util:jar:Pack200$Unpacker|])v2;
#L14d300.   return v2  @type object;
#L14d302.   v1:= Exception  @type object;
#L14d304.   v2:= new [|java:lang:Error|];
#L14d308.   v3:= new [|java:lang:StringBuilder|];
#L14d30c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d312.   v4:= "Can't load class " @type (object, string);
#L14d316.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d31c.   v3:= temp  @type object;
#L14d31e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d324.   v3:= temp  @type object;
#L14d326.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d32c.   v3:= temp  @type object;
#L14d32e.   call temp:=  [|java:lang:Error.<init>|](v2, v3, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14d334.   throw v2;
  catch  [|java:lang:Exception|] @[L14d2e4..L14d300] goto L14d302;

   }
record [|java:util:logging:Handler|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|java:lang:String|] [|java:util:logging:Handler.encoding|]    @AccessFlag PRIVATE;
      [|java:util:logging:ErrorManager|] [|java:util:logging:Handler.errorMan|]    @AccessFlag PRIVATE;
      [|java:util:logging:Filter|] [|java:util:logging:Handler.filter|]    @AccessFlag PRIVATE;
      [|java:util:logging:Formatter|] [|java:util:logging:Handler.formatter|]    @AccessFlag PRIVATE;
      [|java:util:logging:Level|] [|java:util:logging:Handler.level|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:Handler.prefix|]    @AccessFlag PRIVATE;
   }
      global [|java:util:logging:Level|] @@[|java:util:logging:Handler.DEFAULT_LEVEL|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:Handler.<clinit>|] () @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14d358.   v0:= @@[|java:util:logging:Level.ALL|]   @type object;
#L14d35c.   @@[|java:util:logging:Handler.DEFAULT_LEVEL|] := v0  @type object;
#L14d360.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.<init>|] ([|java:util:logging:Handler|] v2 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14d374.   v1:= 0  @length 4;
#L14d376.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14d37c.   v0:= new [|java:util:logging:ErrorManager|];
#L14d380.   call temp:=  [|java:util:logging:ErrorManager.<init>|](v0) @signature [|Ljava/util/logging/ErrorManager;.<init>:()V|] @classDescriptor [|java:util:logging:ErrorManager|] @type direct;
#L14d386.   v2.[|java:util:logging:Handler.errorMan|]  := v0 @type object;
#L14d38a.   v0:= @@[|java:util:logging:Handler.DEFAULT_LEVEL|]   @type object;
#L14d38e.   v2.[|java:util:logging:Handler.level|]  := v0 @type object;
#L14d392.   v2.[|java:util:logging:Handler.encoding|]  := v1 @type object;
#L14d396.   v2.[|java:util:logging:Handler.filter|]  := v1 @type object;
#L14d39a.   v2.[|java:util:logging:Handler.formatter|]  := v1 @type object;
#L14d39e.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14d3a4.   v0:= temp  @type object;
#L14d3a6.   call temp:=  [|java:lang:Class.getName|](v0) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14d3ac.   v0:= temp  @type object;
#L14d3ae.   v2.[|java:util:logging:Handler.prefix|]  := v0 @type object;
#L14d3b2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:logging:Handler.getCustomizeInstance|] ([|java:util:logging:Handler|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getCustomizeInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d3c4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14d3ca.   v2:= temp  @type object;
#L14d3cc.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v2) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L14d3d2.   v1:= temp  @type object;
#L14d3d4.   if v1 != 0 then goto L14d3e0;
#L14d3d8.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L14d3de.   v1:= temp  @type object;
#L14d3e0.   call temp:=  [|java:lang:ClassLoader.loadClass|](v1, v4) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L14d3e6.   v0:= temp  @type object;
#L14d3e8.   call temp:=  [|java:lang:Class.newInstance|](v0) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14d3ee.   v2:= temp  @type object;
#L14d3f0.   return v2  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:logging:Handler.getDefaultInstance|] ([|java:util:logging:Handler|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14d404.   v0:= 0  @length 4;
#L14d406.   if v3 != 0 then goto L14d40c;
#L14d40a.   return v0  @type object;
#L14d40c.   call temp:=  [|java:lang:Class.forName|](v3) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L14d412.   v1:= temp  @type object;
#L14d414.   call temp:=  [|java:lang:Class.newInstance|](v1) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14d41a.   v0:= temp  @type object;
#L14d41c.   goto L14d40a;
#L14d41e.   v1:= Exception  @type object;
#L14d420.   goto L14d40a;
  catch  [|java:lang:Exception|] @[L14d40c..L14d41a] goto L14d41e;

   }
    procedure [|void|] [|java:util:logging:Handler.close|] () @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:logging:Handler.flush|] () @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:logging:Handler.getEncoding|] ([|java:util:logging:Handler|] v1 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getEncoding:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d444.   v0:= v1.[|java:util:logging:Handler.encoding|]   @type object;
#L14d448.   return v0  @type object;

   }
    procedure [|java:util:logging:ErrorManager|] [|java:util:logging:Handler.getErrorManager|] ([|java:util:logging:Handler|] v1 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d45c.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d462.   v0:= temp  @type object;
#L14d464.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d46a.   v0:= v1.[|java:util:logging:Handler.errorMan|]   @type object;
#L14d46e.   return v0  @type object;

   }
    procedure [|java:util:logging:Filter|] [|java:util:logging:Handler.getFilter|] ([|java:util:logging:Handler|] v1 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getFilter:()Ljava/util/logging/Filter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d480.   v0:= v1.[|java:util:logging:Handler.filter|]   @type object;
#L14d484.   return v0  @type object;

   }
    procedure [|java:util:logging:Formatter|] [|java:util:logging:Handler.getFormatter|] ([|java:util:logging:Handler|] v1 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getFormatter:()Ljava/util/logging/Formatter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d498.   v0:= v1.[|java:util:logging:Handler.formatter|]   @type object;
#L14d49c.   return v0  @type object;

   }
    procedure [|java:util:logging:Level|] [|java:util:logging:Handler.getLevel|] ([|java:util:logging:Handler|] v1 @type (this)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.getLevel:()Ljava/util/logging/Level;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d4b0.   v0:= v1.[|java:util:logging:Handler.level|]   @type object;
#L14d4b4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:logging:Handler.initProperties|] ([|java:util:logging:Handler|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|java:lang:String|] v11 @type (object), [|java:lang:String|] v12 @type (object), [|java:lang:String|] v13 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L14d4c8.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d4ce.   v6:= temp  @type object;
#L14d4d0.   v7:= new [|java:lang:StringBuilder|];
#L14d4d4.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d4da.   v8:= v9.[|java:util:logging:Handler.prefix|]   @type object;
#L14d4de.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d4e4.   v7:= temp  @type object;
#L14d4e6.   v8:= ".filter" @type (object, string);
#L14d4ea.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d4f0.   v7:= temp  @type object;
#L14d4f2.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d4f8.   v7:= temp  @type object;
#L14d4fa.   call temp:=  [|java:util:logging:LogManager.getProperty|](v6, v7) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d500.   v3:= temp  @type object;
#L14d502.   if v3 == 0 then goto L14d5f6;
#L14d506.   call temp:=  [|java:util:logging:Handler.getCustomizeInstance|](v9, v3) @signature [|Ljava/util/logging/Handler;.getCustomizeInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d50c.   v7:= temp  @type object;
#L14d50e.   v7:= ([|java:util:logging:Filter|])v7;
#L14d512.   v9.[|java:util:logging:Handler.filter|]  := v7 @type object;
#L14d516.   v7:= new [|java:lang:StringBuilder|];
#L14d51a.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d520.   v8:= v9.[|java:util:logging:Handler.prefix|]   @type object;
#L14d524.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d52a.   v7:= temp  @type object;
#L14d52c.   v8:= ".level" @type (object, string);
#L14d530.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d536.   v7:= temp  @type object;
#L14d538.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d53e.   v7:= temp  @type object;
#L14d540.   call temp:=  [|java:util:logging:LogManager.getProperty|](v6, v7) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d546.   v5:= temp  @type object;
#L14d548.   if v5 == 0 then goto L14d622;
#L14d54c.   call temp:=  [|java:util:logging:Level.parse|](v5) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L14d552.   v7:= temp  @type object;
#L14d554.   v9.[|java:util:logging:Handler.level|]  := v7 @type object;
#L14d558.   v7:= new [|java:lang:StringBuilder|];
#L14d55c.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d562.   v8:= v9.[|java:util:logging:Handler.prefix|]   @type object;
#L14d566.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d56c.   v7:= temp  @type object;
#L14d56e.   v8:= ".formatter" @type (object, string);
#L14d572.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d578.   v7:= temp  @type object;
#L14d57a.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d580.   v7:= temp  @type object;
#L14d582.   call temp:=  [|java:util:logging:LogManager.getProperty|](v6, v7) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d588.   v4:= temp  @type object;
#L14d58a.   if v4 == 0 then goto L14d64e;
#L14d58e.   call temp:=  [|java:util:logging:Handler.getCustomizeInstance|](v9, v4) @signature [|Ljava/util/logging/Handler;.getCustomizeInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d594.   v7:= temp  @type object;
#L14d596.   v7:= ([|java:util:logging:Formatter|])v7;
#L14d59a.   v9.[|java:util:logging:Handler.formatter|]  := v7 @type object;
#L14d59e.   v7:= new [|java:lang:StringBuilder|];
#L14d5a2.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d5a8.   v8:= v9.[|java:util:logging:Handler.prefix|]   @type object;
#L14d5ac.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d5b2.   v7:= temp  @type object;
#L14d5b4.   v8:= ".encoding" @type (object, string);
#L14d5b8.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d5be.   v7:= temp  @type object;
#L14d5c0.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d5c6.   v7:= temp  @type object;
#L14d5c8.   call temp:=  [|java:util:logging:LogManager.getProperty|](v6, v7) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d5ce.   v2:= temp  @type object;
#L14d5d0.   call temp:=  [|java:util:logging:Handler.internalSetEncoding|](v9, v2) @signature [|Ljava/util/logging/Handler;.internalSetEncoding:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d5d6.   return @void ;
#L14d5d8.   v1:= Exception  @type object;
#L14d5da.   v7:= "filter" @type (object, string);
#L14d5de.   call temp:=  [|java:util:logging:Handler.printInvalidPropMessage|](v9, v7, v3, v1) @signature [|Ljava/util/logging/Handler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d5e4.   call temp:=  [|java:util:logging:Handler.getDefaultInstance|](v9, v11) @signature [|Ljava/util/logging/Handler;.getDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d5ea.   v7:= temp  @type object;
#L14d5ec.   v7:= ([|java:util:logging:Filter|])v7;
#L14d5f0.   v9.[|java:util:logging:Handler.filter|]  := v7 @type object;
#L14d5f4.   goto L14d516;
#L14d5f6.   call temp:=  [|java:util:logging:Handler.getDefaultInstance|](v9, v11) @signature [|Ljava/util/logging/Handler;.getDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d5fc.   v7:= temp  @type object;
#L14d5fe.   v7:= ([|java:util:logging:Filter|])v7;
#L14d602.   v9.[|java:util:logging:Handler.filter|]  := v7 @type object;
#L14d606.   goto L14d516;
#L14d608.   v0:= Exception  @type object;
#L14d60a.   v7:= "level" @type (object, string);
#L14d60e.   call temp:=  [|java:util:logging:Handler.printInvalidPropMessage|](v9, v7, v5, v0) @signature [|Ljava/util/logging/Handler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d614.   call temp:=  [|java:util:logging:Level.parse|](v10) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L14d61a.   v7:= temp  @type object;
#L14d61c.   v9.[|java:util:logging:Handler.level|]  := v7 @type object;
#L14d620.   goto L14d558;
#L14d622.   call temp:=  [|java:util:logging:Level.parse|](v10) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L14d628.   v7:= temp  @type object;
#L14d62a.   v9.[|java:util:logging:Handler.level|]  := v7 @type object;
#L14d62e.   goto L14d558;
#L14d630.   v0:= Exception  @type object;
#L14d632.   v7:= "formatter" @type (object, string);
#L14d636.   call temp:=  [|java:util:logging:Handler.printInvalidPropMessage|](v9, v7, v4, v0) @signature [|Ljava/util/logging/Handler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d63c.   call temp:=  [|java:util:logging:Handler.getDefaultInstance|](v9, v12) @signature [|Ljava/util/logging/Handler;.getDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d642.   v7:= temp  @type object;
#L14d644.   v7:= ([|java:util:logging:Formatter|])v7;
#L14d648.   v9.[|java:util:logging:Handler.formatter|]  := v7 @type object;
#L14d64c.   goto L14d59e;
#L14d64e.   call temp:=  [|java:util:logging:Handler.getDefaultInstance|](v9, v12) @signature [|Ljava/util/logging/Handler;.getDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d654.   v7:= temp  @type object;
#L14d656.   v7:= ([|java:util:logging:Formatter|])v7;
#L14d65a.   v9.[|java:util:logging:Handler.formatter|]  := v7 @type object;
#L14d65e.   goto L14d59e;
#L14d660.   v0:= Exception  @type object;
#L14d662.   v7:= "encoding" @type (object, string);
#L14d666.   call temp:=  [|java:util:logging:Handler.printInvalidPropMessage|](v9, v7, v2, v0) @signature [|Ljava/util/logging/Handler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d66c.   goto L14d5d6;
  catch  [|java:lang:Exception|] @[L14d506..L14d516] goto L14d5d8;
  catch  [|java:lang:Exception|] @[L14d54c..L14d558] goto L14d608;
  catch  [|java:lang:Exception|] @[L14d58e..L14d59e] goto L14d630;
  catch  [|java:io:UnsupportedEncodingException|] @[L14d5d0..L14d5d6] goto L14d660;

   }
    procedure [|void|] [|java:util:logging:Handler.internalSetEncoding|] ([|java:util:logging:Handler|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.internalSetEncoding:(Ljava/lang/String;)V|] @Access  {
      local temp ;
        v0;
      
#L14d6b8.   if v2 != 0 then goto L14d6c4;
#L14d6bc.   v0:= 0  @length 4;
#L14d6be.   v1.[|java:util:logging:Handler.encoding|]  := v0 @type object;
#L14d6c2.   return @void ;
#L14d6c4.   call temp:=  [|java:nio:charset:Charset.isSupported|](v2) @signature [|Ljava/nio/charset/Charset;.isSupported:(Ljava/lang/String;)Z|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L14d6ca.   v0:= temp;
#L14d6cc.   if v0 == 0 then goto L14d6d6;
#L14d6d0.   v1.[|java:util:logging:Handler.encoding|]  := v2 @type object;
#L14d6d4.   goto L14d6c2;
#L14d6d6.   v0:= new [|java:io:UnsupportedEncodingException|];
#L14d6da.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v0, v2) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L14d6e0.   throw v0;

   }
    procedure [|void|] [|java:util:logging:Handler.internalSetFormatter|] ([|java:util:logging:Handler|] v2 @type (this), [|java:util:logging:Formatter|] v3 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.internalSetFormatter:(Ljava/util/logging/Formatter;)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L14d6f4.   if v3 != 0 then goto L14d708;
#L14d6f8.   v0:= new [|java:lang:NullPointerException|];
#L14d6fc.   v1:= "newFormatter == null" @type (object, string);
#L14d700.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d706.   throw v0;
#L14d708.   v2.[|java:util:logging:Handler.formatter|]  := v3 @type object;
#L14d70c.   return @void ;

   }
    procedure [|boolean|] [|java:util:logging:Handler.isLoggable|] ([|java:util:logging:Handler|] v3 @type (this), [|java:util:logging:LogRecord|] v4 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d720.   v0:= 0  @length 4;
#L14d722.   if v4 != 0 then goto L14d736;
#L14d726.   v0:= new [|java:lang:NullPointerException|];
#L14d72a.   v1:= "record == null" @type (object, string);
#L14d72e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d734.   throw v0;
#L14d736.   v1:= v3.[|java:util:logging:Handler.level|]   @type object;
#L14d73a.   call temp:=  [|java:util:logging:Level.intValue|](v1) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14d740.   v1:= temp;
#L14d742.   v2:= @@[|java:util:logging:Level.OFF|]   @type object;
#L14d746.   call temp:=  [|java:util:logging:Level.intValue|](v2) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14d74c.   v2:= temp;
#L14d74e.   if v1 != v2 then goto L14d754;
#L14d752.   return v0;
#L14d754.   call temp:=  [|java:util:logging:LogRecord.getLevel|](v4) @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14d75a.   v1:= temp  @type object;
#L14d75c.   call temp:=  [|java:util:logging:Level.intValue|](v1) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14d762.   v1:= temp;
#L14d764.   v2:= v3.[|java:util:logging:Handler.level|]   @type object;
#L14d768.   call temp:=  [|java:util:logging:Level.intValue|](v2) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14d76e.   v2:= temp;
#L14d770.   if v1 < v2 then goto L14d752;
#L14d774.   v1:= v3.[|java:util:logging:Handler.filter|]   @type object;
#L14d778.   if v1 == 0 then goto L14d78c;
#L14d77c.   v1:= v3.[|java:util:logging:Handler.filter|]   @type object;
#L14d780.   call temp:=  [|java:util:logging:Filter.isLoggable|](v1, v4) @signature [|Ljava/util/logging/Filter;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:Filter|] @type interface;
#L14d786.   v1:= temp;
#L14d788.   if v1 == 0 then goto L14d752;
#L14d78c.   v0:= 1  @length 4;
#L14d78e.   goto L14d752;

   }
    procedure [|void|] [|java:util:logging:Handler.printInvalidPropMessage|] ([|java:util:logging:Handler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Exception|] v6 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d7a0.   v1:= new [|java:lang:StringBuilder|];
#L14d7a4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14d7aa.   v2:= "Invalid property value for " @type (object, string);
#L14d7ae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7b4.   v1:= temp  @type object;
#L14d7b6.   v2:= v3.[|java:util:logging:Handler.prefix|]   @type object;
#L14d7ba.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7c0.   v1:= temp  @type object;
#L14d7c2.   v2:= ":" @type (object, string);
#L14d7c6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7cc.   v1:= temp  @type object;
#L14d7ce.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7d4.   v1:= temp  @type object;
#L14d7d6.   v2:= "/" @type (object, string);
#L14d7da.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7e0.   v1:= temp  @type object;
#L14d7e2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7e8.   v1:= temp  @type object;
#L14d7ea.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14d7f0.   v0:= temp  @type object;
#L14d7f2.   v1:= v3.[|java:util:logging:Handler.errorMan|]   @type object;
#L14d7f6.   v2:= 0  @length 4;
#L14d7f8.   call temp:=  [|java:util:logging:ErrorManager.error|](v1, v0, v6, v2) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14d7fe.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.publish|] ([|java:util:logging:LogRecord|] v0 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:logging:Handler.reportError|] ([|java:util:logging:Handler|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Exception|] v3 @type (object), [|int|] v4) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.reportError:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L14d810.   v0:= v1.[|java:util:logging:Handler.errorMan|]   @type object;
#L14d814.   call temp:=  [|java:util:logging:ErrorManager.error|](v0, v2, v3, v4) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14d81a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.setEncoding|] ([|java:util:logging:Handler|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.setEncoding:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d82c.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d832.   v0:= temp  @type object;
#L14d834.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d83a.   call temp:=  [|java:util:logging:Handler.internalSetEncoding|](v1, v2) @signature [|Ljava/util/logging/Handler;.internalSetEncoding:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d840.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.setErrorManager|] ([|java:util:logging:Handler|] v2 @type (this), [|java:util:logging:ErrorManager|] v3 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.setErrorManager:(Ljava/util/logging/ErrorManager;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14d854.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d85a.   v0:= temp  @type object;
#L14d85c.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d862.   if v3 != 0 then goto L14d876;
#L14d866.   v0:= new [|java:lang:NullPointerException|];
#L14d86a.   v1:= "newErrorManager == null" @type (object, string);
#L14d86e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d874.   throw v0;
#L14d876.   v2.[|java:util:logging:Handler.errorMan|]  := v3 @type object;
#L14d87a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.setFilter|] ([|java:util:logging:Handler|] v1 @type (this), [|java:util:logging:Filter|] v2 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.setFilter:(Ljava/util/logging/Filter;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d88c.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d892.   v0:= temp  @type object;
#L14d894.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d89a.   v1.[|java:util:logging:Handler.filter|]  := v2 @type object;
#L14d89e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.setFormatter|] ([|java:util:logging:Handler|] v1 @type (this), [|java:util:logging:Formatter|] v2 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.setFormatter:(Ljava/util/logging/Formatter;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14d8b0.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d8b6.   v0:= temp  @type object;
#L14d8b8.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d8be.   call temp:=  [|java:util:logging:Handler.internalSetFormatter|](v1, v2) @signature [|Ljava/util/logging/Handler;.internalSetFormatter:(Ljava/util/logging/Formatter;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L14d8c4.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Handler.setLevel|] ([|java:util:logging:Handler|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object)) @owner [|java:util:logging:Handler|] @signature [|Ljava/util/logging/Handler;.setLevel:(Ljava/util/logging/Level;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14d8d8.   if v3 != 0 then goto L14d8ec;
#L14d8dc.   v0:= new [|java:lang:NullPointerException|];
#L14d8e0.   v1:= "newLevel == null" @type (object, string);
#L14d8e4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d8ea.   throw v0;
#L14d8ec.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14d8f2.   v0:= temp  @type object;
#L14d8f4.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14d8fa.   v2.[|java:util:logging:Handler.level|]  := v3 @type object;
#L14d8fe.   return @void ;

   }
record [|java:util:logging:StreamHandler|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:Handler|] {
      [|java:io:OutputStream|] [|java:util:logging:StreamHandler.os|]    @AccessFlag PRIVATE;
      [|java:io:Writer|] [|java:util:logging:StreamHandler.writer|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:logging:StreamHandler.writerNotInitialized|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:logging:StreamHandler.<init>|] ([|java:util:logging:StreamHandler|] v3 @type (this)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d910.   v2:= 0  @length 4;
#L14d912.   call temp:=  [|java:util:logging:Handler.<init>|](v3) @signature [|Ljava/util/logging/Handler;.<init>:()V|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d918.   v0:= "INFO" @type (object, string);
#L14d91c.   v1:= "java.util.logging.SimpleFormatter" @type (object, string);
#L14d920.   call temp:=  [|java:util:logging:StreamHandler.initProperties|](v3, v0, v2, v1, v2) @signature [|Ljava/util/logging/StreamHandler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14d926.   v3.[|java:util:logging:StreamHandler.os|]  := v2 @type object;
#L14d92a.   v3.[|java:util:logging:StreamHandler.writer|]  := v2 @type object;
#L14d92e.   v0:= 1  @length 4;
#L14d930.   v3.[|java:util:logging:StreamHandler.writerNotInitialized|]  := v0 @boolean;
#L14d934.   return @void ;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.<init>|] ([|java:util:logging:StreamHandler|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/io/OutputStream;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L14d948.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v0) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14d94e.   v0.[|java:util:logging:StreamHandler.os|]  := v1 @type object;
#L14d952.   return @void ;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.<init>|] ([|java:util:logging:StreamHandler|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|java:util:logging:Formatter|] v4 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/io/OutputStream;Ljava/util/logging/Formatter;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14d964.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v2) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14d96a.   if v3 != 0 then goto L14d97e;
#L14d96e.   v0:= new [|java:lang:NullPointerException|];
#L14d972.   v1:= "os == null" @type (object, string);
#L14d976.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d97c.   throw v0;
#L14d97e.   if v4 != 0 then goto L14d992;
#L14d982.   v0:= new [|java:lang:NullPointerException|];
#L14d986.   v1:= "formatter == null" @type (object, string);
#L14d98a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14d990.   throw v0;
#L14d992.   v2.[|java:util:logging:StreamHandler.os|]  := v3 @type object;
#L14d996.   call temp:=  [|java:util:logging:StreamHandler.internalSetFormatter|](v2, v4) @signature [|Ljava/util/logging/StreamHandler;.internalSetFormatter:(Ljava/util/logging/Formatter;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14d99c.   return @void ;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.<init>|] ([|java:util:logging:StreamHandler|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L14d9b0.   v0:= 0  @length 4;
#L14d9b2.   call temp:=  [|java:util:logging:Handler.<init>|](v1) @signature [|Ljava/util/logging/Handler;.<init>:()V|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L14d9b8.   call temp:=  [|java:util:logging:StreamHandler.initProperties|](v1, v2, v3, v4, v5) @signature [|Ljava/util/logging/StreamHandler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14d9be.   v1.[|java:util:logging:StreamHandler.os|]  := v0 @type object;
#L14d9c2.   v1.[|java:util:logging:StreamHandler.writer|]  := v0 @type object;
#L14d9c6.   v0:= 1  @length 4;
#L14d9c8.   v1.[|java:util:logging:StreamHandler.writerNotInitialized|]  := v0 @boolean;
#L14d9cc.   return @void ;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.initializeWriter|] ([|java:util:logging:StreamHandler|] v3 @type (this)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.initializeWriter:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14d9e0.   v0:= 0  @length 4;
#L14d9e2.   v3.[|java:util:logging:StreamHandler.writerNotInitialized|]  := v0 @boolean;
#L14d9e6.   call temp:=  [|java:util:logging:StreamHandler.getEncoding|](v3) @signature [|Ljava/util/logging/StreamHandler;.getEncoding:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14d9ec.   v0:= temp  @type object;
#L14d9ee.   if v0 != 0 then goto L14da1c;
#L14d9f2.   v0:= new [|java:io:OutputStreamWriter|];
#L14d9f6.   v1:= v3.[|java:util:logging:StreamHandler.os|]   @type object;
#L14d9fa.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L14da00.   v3.[|java:util:logging:StreamHandler.writer|]  := v0 @type object;
#L14da04.   call temp:=  [|java:util:logging:StreamHandler.getFormatter|](v3) @signature [|Ljava/util/logging/StreamHandler;.getFormatter:()Ljava/util/logging/Formatter;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14da0a.   v0:= temp  @type object;
#L14da0c.   call temp:=  [|java:util:logging:Formatter.getHead|](v0, v3) @signature [|Ljava/util/logging/Formatter;.getHead:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:Formatter|] @type virtual;
#L14da12.   v0:= temp  @type object;
#L14da14.   call temp:=  [|java:util:logging:StreamHandler.write|](v3, v0) @signature [|Ljava/util/logging/StreamHandler;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14da1a.   return @void ;
#L14da1c.   v0:= new [|java:io:OutputStreamWriter|];
#L14da20.   v1:= v3.[|java:util:logging:StreamHandler.os|]   @type object;
#L14da24.   call temp:=  [|java:util:logging:StreamHandler.getEncoding|](v3) @signature [|Ljava/util/logging/StreamHandler;.getEncoding:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14da2a.   v2:= temp  @type object;
#L14da2c.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1, v2) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L14da32.   v3.[|java:util:logging:StreamHandler.writer|]  := v0 @type object;
#L14da36.   goto L14da04;
#L14da38.   v0:= Exception  @type object;
#L14da3a.   goto L14da04;
  catch  [|java:io:UnsupportedEncodingException|] @[L14da1c..L14da36] goto L14da38;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.write|] ([|java:util:logging:StreamHandler|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.write:(Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14da5c.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14da60.   call temp:=  [|java:io:Writer.write|](v1, v5) @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L14da66.   return @void ;
#L14da68.   v0:= Exception  @type object;
#L14da6a.   call temp:=  [|java:util:logging:StreamHandler.getErrorManager|](v4) @signature [|Ljava/util/logging/StreamHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14da70.   v1:= temp  @type object;
#L14da72.   v2:= "Exception occurred when writing to the output stream" @type (object, string);
#L14da76.   v3:= 1  @length 4;
#L14da78.   call temp:=  [|java:util:logging:ErrorManager.error|](v1, v2, v0, v3) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14da7e.   goto L14da66;
  catch  [|java:lang:Exception|] @[L14da5c..L14da66] goto L14da68;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.close|] ([|java:util:logging:StreamHandler|] v1 @type (this)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14daa0.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14daa6.   v0:= temp  @type object;
#L14daa8.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14daae.   v0:= 1  @length 4;
#L14dab0.   call temp:=  [|java:util:logging:StreamHandler.close|](v1, v0) @signature [|Ljava/util/logging/StreamHandler;.close:(Z)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dab6.   return @void ;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.close|] ([|java:util:logging:StreamHandler|] v4 @type (this), [|boolean|] v5) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.close:(Z)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14dac8.   v1:= v4.[|java:util:logging:StreamHandler.os|]   @type object;
#L14dacc.   if v1 == 0 then goto L14db18;
#L14dad0.   v1:= v4.[|java:util:logging:StreamHandler.writerNotInitialized|]   @boolean;
#L14dad4.   if v1 == 0 then goto L14dade;
#L14dad8.   call temp:=  [|java:util:logging:StreamHandler.initializeWriter|](v4) @signature [|Ljava/util/logging/StreamHandler;.initializeWriter:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14dade.   call temp:=  [|java:util:logging:StreamHandler.getFormatter|](v4) @signature [|Ljava/util/logging/StreamHandler;.getFormatter:()Ljava/util/logging/Formatter;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dae4.   v1:= temp  @type object;
#L14dae6.   call temp:=  [|java:util:logging:Formatter.getTail|](v1, v4) @signature [|Ljava/util/logging/Formatter;.getTail:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:Formatter|] @type virtual;
#L14daec.   v1:= temp  @type object;
#L14daee.   call temp:=  [|java:util:logging:StreamHandler.write|](v4, v1) @signature [|Ljava/util/logging/StreamHandler;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14daf4.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14daf8.   call temp:=  [|java:io:Writer.flush|](v1) @signature [|Ljava/io/Writer;.flush:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L14dafe.   if v5 == 0 then goto L14db18;
#L14db02.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14db06.   call temp:=  [|java:io:Writer.close|](v1) @signature [|Ljava/io/Writer;.close:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L14db0c.   v1:= 0  @length 4;
#L14db0e.   v4.[|java:util:logging:StreamHandler.writer|]  := v1 @type object;
#L14db12.   v1:= 0  @length 4;
#L14db14.   v4.[|java:util:logging:StreamHandler.os|]  := v1 @type object;
#L14db18.   return @void ;
#L14db1a.   v0:= Exception  @type object;
#L14db1c.   call temp:=  [|java:util:logging:StreamHandler.getErrorManager|](v4) @signature [|Ljava/util/logging/StreamHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14db22.   v1:= temp  @type object;
#L14db24.   v2:= "Exception occurred when closing the output stream" @type (object, string);
#L14db28.   v3:= 3  @length 4;
#L14db2a.   call temp:=  [|java:util:logging:ErrorManager.error|](v1, v2, v0, v3) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14db30.   goto L14db18;
  catch  [|java:lang:Exception|] @[L14daf4..L14db18] goto L14db1a;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.flush|] ([|java:util:logging:StreamHandler|] v4 @type (this)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14db54.   v1:= v4.[|java:util:logging:StreamHandler.os|]   @type object;
#L14db58.   if v1 == 0 then goto L14db6e;
#L14db5c.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14db60.   if v1 == 0 then goto L14db70;
#L14db64.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14db68.   call temp:=  [|java:io:Writer.flush|](v1) @signature [|Ljava/io/Writer;.flush:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L14db6e.   return @void ;
#L14db70.   v1:= v4.[|java:util:logging:StreamHandler.os|]   @type object;
#L14db74.   call temp:=  [|java:io:OutputStream.flush|](v1) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14db7a.   goto L14db6e;
#L14db7c.   v0:= Exception  @type object;
#L14db7e.   call temp:=  [|java:util:logging:StreamHandler.getErrorManager|](v4) @signature [|Ljava/util/logging/StreamHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14db84.   v1:= temp  @type object;
#L14db86.   v2:= "Exception occurred when flushing the output stream" @type (object, string);
#L14db8a.   v3:= 2  @length 4;
#L14db8c.   call temp:=  [|java:util:logging:ErrorManager.error|](v1, v2, v0, v3) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14db92.   goto L14db6e;
  catch  [|java:lang:Exception|] @[L14db5c..L14db7a] goto L14db7c;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.internalSetOutputStream|] ([|java:util:logging:StreamHandler|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.internalSetOutputStream:(Ljava/io/OutputStream;)V|] @Access  {
      local temp ;
      
#L14dbb4.   v0.[|java:util:logging:StreamHandler.os|]  := v1 @type object;
#L14dbb8.   return @void ;

   }
    procedure [|boolean|] [|java:util:logging:StreamHandler.isLoggable|] ([|java:util:logging:StreamHandler|] v2 @type (this), [|java:util:logging:LogRecord|] v3 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14dbcc.   v0:= 0  @length 4;
#L14dbce.   if v3 != 0 then goto L14dbd4;
#L14dbd2.   return v0;
#L14dbd4.   v1:= v2.[|java:util:logging:StreamHandler.os|]   @type object;
#L14dbd8.   if v1 == 0 then goto L14dbd2;
#L14dbdc.   call temp:=  [|java:util:logging:Handler.isLoggable|](v2, v3) @signature [|Ljava/util/logging/Handler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:Handler|] @type super;
#L14dbe2.   v1:= temp;
#L14dbe4.   if v1 == 0 then goto L14dbd2;
#L14dbe8.   v0:= 1  @length 4;
#L14dbea.   goto L14dbd2;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.publish|] ([|java:util:logging:StreamHandler|] v5 @type (this), [|java:util:logging:LogRecord|] v6 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14dbfc.   (@monitorenter v5)
#L14dbfe.   call temp:=  [|java:util:logging:StreamHandler.isLoggable|](v5, v6) @signature [|Ljava/util/logging/StreamHandler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dc04.   v2:= temp;
#L14dc06.   if v2 == 0 then goto L14dc30;
#L14dc0a.   v2:= v5.[|java:util:logging:StreamHandler.writerNotInitialized|]   @boolean;
#L14dc0e.   if v2 == 0 then goto L14dc18;
#L14dc12.   call temp:=  [|java:util:logging:StreamHandler.initializeWriter|](v5) @signature [|Ljava/util/logging/StreamHandler;.initializeWriter:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14dc18.   v1:= 0  @length 4;
#L14dc1a.   call temp:=  [|java:util:logging:StreamHandler.getFormatter|](v5) @signature [|Ljava/util/logging/StreamHandler;.getFormatter:()Ljava/util/logging/Formatter;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dc20.   v2:= temp  @type object;
#L14dc22.   call temp:=  [|java:util:logging:Formatter.format|](v2, v6) @signature [|Ljava/util/logging/Formatter;.format:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:Formatter|] @type virtual;
#L14dc28.   v1:= temp  @type object;
#L14dc2a.   call temp:=  [|java:util:logging:StreamHandler.write|](v5, v1) @signature [|Ljava/util/logging/StreamHandler;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14dc30.   (@monitorexit v5)
#L14dc32.   return @void ;
#L14dc34.   v0:= Exception  @type object;
#L14dc36.   call temp:=  [|java:util:logging:StreamHandler.getErrorManager|](v5) @signature [|Ljava/util/logging/StreamHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dc3c.   v2:= temp  @type object;
#L14dc3e.   v3:= "Exception occurred when formatting the log record" @type (object, string);
#L14dc42.   v4:= 5  @length 4;
#L14dc44.   call temp:=  [|java:util:logging:ErrorManager.error|](v2, v3, v0, v4) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14dc4a.   goto L14dc2a;
#L14dc4c.   v0:= Exception  @type object;
#L14dc4e.   call temp:=  [|java:util:logging:StreamHandler.getErrorManager|](v5) @signature [|Ljava/util/logging/StreamHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dc54.   v2:= temp  @type object;
#L14dc56.   v3:= "Exception occurred when logging the record" @type (object, string);
#L14dc5a.   v4:= 0  @length 4;
#L14dc5c.   call temp:=  [|java:util:logging:ErrorManager.error|](v2, v3, v0, v4) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14dc62.   goto L14dc30;
#L14dc64.   v2:= Exception  @type object;
#L14dc66.   (@monitorexit v5)
#L14dc68.   throw v2;
  catch  [|java:lang:Exception|] @[L14dbfe..L14dc18] goto L14dc4c;
  catch  [|any|] @[L14dbfe..L14dc18] goto L14dc64;
  catch  [|java:lang:Exception|] @[L14dc1a..L14dc28] goto L14dc34;
  catch  [|any|] @[L14dc1a..L14dc28] goto L14dc64;
  catch  [|java:lang:Exception|] @[L14dc2a..L14dc30] goto L14dc4c;
  catch  [|any|] @[L14dc2a..L14dc30] goto L14dc64;
  catch  [|java:lang:Exception|] @[L14dc36..L14dc4a] goto L14dc4c;
  catch  [|any|] @[L14dc36..L14dc4a] goto L14dc64;
  catch  [|any|] @[L14dc4e..L14dc62] goto L14dc64;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.setEncoding|] ([|java:util:logging:StreamHandler|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.setEncoding:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14dcb4.   call temp:=  [|java:util:logging:StreamHandler.flush|](v4) @signature [|Ljava/util/logging/StreamHandler;.flush:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dcba.   call temp:=  [|java:util:logging:Handler.setEncoding|](v4, v5) @signature [|Ljava/util/logging/Handler;.setEncoding:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Handler|] @type super;
#L14dcc0.   v1:= v4.[|java:util:logging:StreamHandler.writer|]   @type object;
#L14dcc4.   if v1 == 0 then goto L14dce6;
#L14dcc8.   call temp:=  [|java:util:logging:StreamHandler.getEncoding|](v4) @signature [|Ljava/util/logging/StreamHandler;.getEncoding:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dcce.   v1:= temp  @type object;
#L14dcd0.   if v1 != 0 then goto L14dce8;
#L14dcd4.   v1:= new [|java:io:OutputStreamWriter|];
#L14dcd8.   v2:= v4.[|java:util:logging:StreamHandler.os|]   @type object;
#L14dcdc.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v2) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L14dce2.   v4.[|java:util:logging:StreamHandler.writer|]  := v1 @type object;
#L14dce6.   return @void ;
#L14dce8.   v1:= new [|java:io:OutputStreamWriter|];
#L14dcec.   v2:= v4.[|java:util:logging:StreamHandler.os|]   @type object;
#L14dcf0.   call temp:=  [|java:util:logging:StreamHandler.getEncoding|](v4) @signature [|Ljava/util/logging/StreamHandler;.getEncoding:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dcf6.   v3:= temp  @type object;
#L14dcf8.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v2, v3) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L14dcfe.   v4.[|java:util:logging:StreamHandler.writer|]  := v1 @type object;
#L14dd02.   goto L14dce6;
#L14dd04.   v0:= Exception  @type object;
#L14dd06.   v1:= new [|java:lang:AssertionError|];
#L14dd0a.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L14dd10.   throw v1;
  catch  [|java:io:UnsupportedEncodingException|] @[L14dce8..L14dd02] goto L14dd04;

   }
    procedure [|void|] [|java:util:logging:StreamHandler.setOutputStream|] ([|java:util:logging:StreamHandler|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:util:logging:StreamHandler|] @signature [|Ljava/util/logging/StreamHandler;.setOutputStream:(Ljava/io/OutputStream;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L14dd34.   v1:= 1  @length 4;
#L14dd36.   if v3 != 0 then goto L14dd4a;
#L14dd3a.   v0:= new [|java:lang:NullPointerException|];
#L14dd3e.   v1:= "os == null" @type (object, string);
#L14dd42.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14dd48.   throw v0;
#L14dd4a.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14dd50.   v0:= temp  @type object;
#L14dd52.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14dd58.   call temp:=  [|java:util:logging:StreamHandler.close|](v2, v1) @signature [|Ljava/util/logging/StreamHandler;.close:(Z)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type virtual;
#L14dd5e.   v0:= 0  @length 4;
#L14dd60.   v2.[|java:util:logging:StreamHandler.writer|]  := v0 @type object;
#L14dd64.   v2.[|java:util:logging:StreamHandler.os|]  := v3 @type object;
#L14dd68.   v2.[|java:util:logging:StreamHandler.writerNotInitialized|]  := v1 @boolean;
#L14dd6c.   return @void ;

   }
record [|java:util:logging:ConsoleHandler|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:StreamHandler|] {
   }
    procedure [|void|] [|java:util:logging:ConsoleHandler.<init>|] ([|java:util:logging:ConsoleHandler|] v1 @type (this)) @owner [|java:util:logging:ConsoleHandler|] @signature [|Ljava/util/logging/ConsoleHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14dd80.   v0:= @@[|java:lang:System.err|]   @type object;
#L14dd84.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v1, v0) @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14dd8a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:ConsoleHandler.close|] ([|java:util:logging:ConsoleHandler|] v1 @type (this)) @owner [|java:util:logging:ConsoleHandler|] @signature [|Ljava/util/logging/ConsoleHandler;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14dd9c.   v0:= 0  @length 4;
#L14dd9e.   call temp:=  [|java:util:logging:StreamHandler.close|](v1, v0) @signature [|Ljava/util/logging/StreamHandler;.close:(Z)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14dda4.   return @void ;

   }
    procedure [|void|] [|java:util:logging:ConsoleHandler.publish|] ([|java:util:logging:ConsoleHandler|] v0 @type (this), [|java:util:logging:LogRecord|] v1 @type (object)) @owner [|java:util:logging:ConsoleHandler|] @signature [|Ljava/util/logging/ConsoleHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC {
      local temp ;
      
#L14ddb8.   call temp:=  [|java:util:logging:StreamHandler.publish|](v0, v1) @signature [|Ljava/util/logging/StreamHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14ddbe.   call temp:=  [|java:util:logging:StreamHandler.flush|](v0) @signature [|Ljava/util/logging/StreamHandler;.flush:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14ddc4.   return @void ;

   }
record [|java:util:logging:ErrorManager|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|java:util:logging:ErrorManager.called|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:logging:ErrorManager.CLOSE_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|][] @@[|java:util:logging:ErrorManager.FAILURES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:ErrorManager.FLUSH_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:ErrorManager.FORMAT_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:ErrorManager.GENERIC_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:ErrorManager.OPEN_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:ErrorManager.WRITE_FAILURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:ErrorManager.<clinit>|] () @owner [|java:util:logging:ErrorManager|] @signature [|Ljava/util/logging/ErrorManager;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14ddd8.   v0:= 6  @length 4;
#L14ddda.   v0:= new [|java:lang:String|][v0];
#L14ddde.   v1:= 0  @length 4;
#L14dde0.   v2:= "GENERIC_FAILURE" @type (object, string);
#L14dde4.   v0[v1]:= v2  @type object;
#L14dde8.   v1:= 1  @length 4;
#L14ddea.   v2:= "WRITE_FAILURE" @type (object, string);
#L14ddee.   v0[v1]:= v2  @type object;
#L14ddf2.   v1:= 2  @length 4;
#L14ddf4.   v2:= "FLUSH_FAILURE" @type (object, string);
#L14ddf8.   v0[v1]:= v2  @type object;
#L14ddfc.   v1:= 3  @length 4;
#L14ddfe.   v2:= "CLOSE_FAILURE" @type (object, string);
#L14de02.   v0[v1]:= v2  @type object;
#L14de06.   v1:= 4  @length 4;
#L14de08.   v2:= "OPEN_FAILURE" @type (object, string);
#L14de0c.   v0[v1]:= v2  @type object;
#L14de10.   v1:= 5  @length 4;
#L14de12.   v2:= "FORMAT_FAILURE" @type (object, string);
#L14de16.   v0[v1]:= v2  @type object;
#L14de1a.   @@[|java:util:logging:ErrorManager.FAILURES|] := v0  @type object;
#L14de1e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:ErrorManager.<init>|] ([|java:util:logging:ErrorManager|] v0 @type (this)) @owner [|java:util:logging:ErrorManager|] @signature [|Ljava/util/logging/ErrorManager;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L14de30.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14de36.   return @void ;

   }
    procedure [|void|] [|java:util:logging:ErrorManager.error|] ([|java:util:logging:ErrorManager|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:Exception|] v5 @type (object), [|int|] v6) @owner [|java:util:logging:ErrorManager|] @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14de48.   (@monitorenter v3)
#L14de4a.   v0:= v3.[|java:util:logging:ErrorManager.called|]   @boolean;
#L14de4e.   if v0 == 0 then goto L14de56;
#L14de52.   (@monitorexit v3)
#L14de54.   return @void ;
#L14de56.   v0:= 1  @length 4;
#L14de58.   v3.[|java:util:logging:ErrorManager.called|]  := v0 @boolean;
#L14de5c.   (@monitorexit v3)
#L14de5e.   v0:= @@[|java:lang:System.err|]   @type object;
#L14de62.   v1:= new [|java:lang:StringBuilder|];
#L14de66.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14de6c.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14de72.   v2:= temp  @type object;
#L14de74.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14de7a.   v2:= temp  @type object;
#L14de7c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14de82.   v1:= temp  @type object;
#L14de84.   v2:= ": " @type (object, string);
#L14de88.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14de8e.   v1:= temp  @type object;
#L14de90.   v2:= @@[|java:util:logging:ErrorManager.FAILURES|]   @type object;
#L14de94.   v2:= v2[v6]  @type object;
#L14de98.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14de9e.   v1:= temp  @type object;
#L14dea0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14dea6.   v1:= temp  @type object;
#L14dea8.   call temp:=  [|java:io:PrintStream.println|](v0, v1) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L14deae.   if v4 == 0 then goto L14dee2;
#L14deb2.   v0:= @@[|java:lang:System.err|]   @type object;
#L14deb6.   v1:= new [|java:lang:StringBuilder|];
#L14deba.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14dec0.   v2:= "Error message - " @type (object, string);
#L14dec4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14deca.   v1:= temp  @type object;
#L14decc.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ded2.   v1:= temp  @type object;
#L14ded4.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14deda.   v1:= temp  @type object;
#L14dedc.   call temp:=  [|java:io:PrintStream.println|](v0, v1) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L14dee2.   if v5 == 0 then goto L14de54;
#L14dee6.   v0:= @@[|java:lang:System.err|]   @type object;
#L14deea.   v1:= new [|java:lang:StringBuilder|];
#L14deee.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14def4.   v2:= "Exception - " @type (object, string);
#L14def8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14defe.   v1:= temp  @type object;
#L14df00.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14df06.   v1:= temp  @type object;
#L14df08.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14df0e.   v1:= temp  @type object;
#L14df10.   call temp:=  [|java:io:PrintStream.println|](v0, v1) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L14df16.   goto L14de54;
#L14df18.   v0:= Exception  @type object;
#L14df1a.   (@monitorexit v3)
#L14df1c.   throw v0;
  catch  [|any|] @[L14de4a..L14de5e] goto L14df18;
  catch  [|any|] @[L14df1a..L14df1c] goto L14df18;

   }
record [|java:util:logging:FileHandler$MeasureOutputStream|]  @type class @AccessFlag   extends [|java:io:OutputStream|] {
      [|long|] [|java:util:logging:FileHandler$MeasureOutputStream.length|]    @AccessFlag ;
      [|java:io:OutputStream|] [|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.<init>|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14df44.   v0:= 0  @length wide16;
#L14df48.   call temp:=  [|java:util:logging:FileHandler$MeasureOutputStream.<init>|](v2, v3, v0, v1) @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.<init>:(Ljava/io/OutputStream;J)V|] @classDescriptor [|java:util:logging:FileHandler$MeasureOutputStream|] @type direct;
#L14df4e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.<init>|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object), [|long|] v2) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.<init>:(Ljava/io/OutputStream;J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L14df60.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L14df66.   v0.[|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]  := v1 @type object;
#L14df6a.   v0.[|java:util:logging:FileHandler$MeasureOutputStream.length|]  := v2 @wide;
#L14df6e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.close|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v1 @type (this)) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14df80.   v0:= v1.[|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]   @type object;
#L14df84.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14df8a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.flush|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v1 @type (this)) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14df9c.   v0:= v1.[|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]   @type object;
#L14dfa0.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14dfa6.   return @void ;

   }
    procedure [|long|] [|java:util:logging:FileHandler$MeasureOutputStream.getLength|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v2 @type (this)) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.getLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14dfb8.   v0:= v2.[|java:util:logging:FileHandler$MeasureOutputStream.length|]   @wide;
#L14dfbc.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.setLength|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v0 @type (this), [|long|] v1) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.setLength:(J)V|] @Access PUBLIC {
      local temp ;
      
#L14dfd0.   v0.[|java:util:logging:FileHandler$MeasureOutputStream.length|]  := v1 @wide;
#L14dfd4.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.write|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14dfe8.   v0:= v4.[|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]   @type object;
#L14dfec.   call temp:=  [|java:io:OutputStream.write|](v0, v5) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14dff2.   v0:= v4.[|java:util:logging:FileHandler$MeasureOutputStream.length|]   @wide;
#L14dff6.   v2:= 1  @length wide16;
#L14dffa.   v0:= v0 + v2  @type long;
#L14dffc.   v4.[|java:util:logging:FileHandler$MeasureOutputStream.length|]  := v0 @wide;
#L14e000.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler$MeasureOutputStream.write|] ([|java:util:logging:FileHandler$MeasureOutputStream|] v4 @type (this), [|byte|][] v5, [|int|] v6, [|int|] v7) @owner [|java:util:logging:FileHandler$MeasureOutputStream|] @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14e014.   v0:= v4.[|java:util:logging:FileHandler$MeasureOutputStream.wrapped|]   @type object;
#L14e018.   call temp:=  [|java:io:OutputStream.write|](v0, v5, v6, v7) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L14e01e.   v0:= v4.[|java:util:logging:FileHandler$MeasureOutputStream.length|]   @wide;
#L14e022.   v2:= (long)v7  @type i2l;
#L14e024.   v0:= v0 + v2  @type long;
#L14e026.   v4.[|java:util:logging:FileHandler$MeasureOutputStream.length|]  := v0 @wide;
#L14e02a.   return @void ;

   }
record [|java:util:logging:FileHandler|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:StreamHandler|] {
      [|boolean|] [|java:util:logging:FileHandler.append|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:FileHandler.count|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:FileHandler.fileName|]    @AccessFlag ;
      [|java:io:File|][] [|java:util:logging:FileHandler.files|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:FileHandler.limit|]    @AccessFlag PRIVATE;
      [|java:nio:channels:FileLock|] [|java:util:logging:FileHandler.lock|]    @AccessFlag ;
      [|java:util:logging:LogManager|] [|java:util:logging:FileHandler.manager|]    @AccessFlag PRIVATE;
      [|java:util:logging:FileHandler$MeasureOutputStream|] [|java:util:logging:FileHandler.output|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:FileHandler.pattern|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:FileHandler.uniqueID|]    @AccessFlag ;
   }
      global [|boolean|] @@[|java:util:logging:FileHandler.DEFAULT_APPEND|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:FileHandler.DEFAULT_COUNT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:FileHandler.DEFAULT_LIMIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:logging:FileHandler.DEFAULT_PATTERN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:logging:FileHandler.LCK_EXT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Hashtable|] @@[|java:util:logging:FileHandler.allLocks|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:FileHandler.<clinit>|] () @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14e03c.   v0:= new [|java:util:Hashtable|];
#L14e040.   call temp:=  [|java:util:Hashtable.<init>|](v0) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L14e046.   @@[|java:util:logging:FileHandler.allLocks|] := v0  @type object;
#L14e04a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.<init>|] ([|java:util:logging:FileHandler|] v2 @type (this)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14e05c.   v1:= 0  @length 4;
#L14e05e.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v2) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14e064.   v2.[|java:util:logging:FileHandler.lock|]  := v1 @type object;
#L14e068.   v2.[|java:util:logging:FileHandler.fileName|]  := v1 @type object;
#L14e06c.   v0:= -1  @length 4;
#L14e06e.   v2.[|java:util:logging:FileHandler.uniqueID|]  := v0;
#L14e072.   call temp:=  [|java:util:logging:FileHandler.init|](v2, v1, v1, v1, v1) @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e078.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.<init>|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e08c.   v2:= 0  @length 4;
#L14e08e.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14e094.   v3.[|java:util:logging:FileHandler.lock|]  := v2 @type object;
#L14e098.   v3.[|java:util:logging:FileHandler.fileName|]  := v2 @type object;
#L14e09c.   v0:= -1  @length 4;
#L14e09e.   v3.[|java:util:logging:FileHandler.uniqueID|]  := v0;
#L14e0a2.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e0a8.   v0:= temp;
#L14e0aa.   if v0 == 0 then goto L14e0be;
#L14e0ae.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e0b2.   v1:= "Pattern cannot be empty" @type (object, string);
#L14e0b6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e0bc.   throw v0;
#L14e0be.   v0:= 0  @length 4;
#L14e0c0.   call temp:=  [|java:lang:Integer.valueOf|](v0) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e0c6.   v0:= temp  @type object;
#L14e0c8.   v1:= 1  @length 4;
#L14e0ca.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e0d0.   v1:= temp  @type object;
#L14e0d2.   call temp:=  [|java:util:logging:FileHandler.init|](v3, v4, v2, v0, v1) @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e0d8.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.<init>|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<init>:(Ljava/lang/String;II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e0ec.   v2:= 0  @length 4;
#L14e0ee.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14e0f4.   v3.[|java:util:logging:FileHandler.lock|]  := v2 @type object;
#L14e0f8.   v3.[|java:util:logging:FileHandler.fileName|]  := v2 @type object;
#L14e0fc.   v0:= -1  @length 4;
#L14e0fe.   v3.[|java:util:logging:FileHandler.uniqueID|]  := v0;
#L14e102.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e108.   v0:= temp;
#L14e10a.   if v0 == 0 then goto L14e11e;
#L14e10e.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e112.   v1:= "Pattern cannot be empty" @type (object, string);
#L14e116.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e11c.   throw v0;
#L14e11e.   if v5 < 0 then goto L14e128;
#L14e122.   v0:= 1  @length 4;
#L14e124.   if v6 >= v0 then goto L14e138;
#L14e128.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e12c.   v1:= "limit < 0 || count < 1" @type (object, string);
#L14e130.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e136.   throw v0;
#L14e138.   call temp:=  [|java:lang:Integer.valueOf|](v5) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e13e.   v0:= temp  @type object;
#L14e140.   call temp:=  [|java:lang:Integer.valueOf|](v6) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e146.   v1:= temp  @type object;
#L14e148.   call temp:=  [|java:util:logging:FileHandler.init|](v3, v4, v2, v0, v1) @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e14e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.<init>|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5, [|int|] v6, [|boolean|] v7) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<init>:(Ljava/lang/String;IIZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e160.   v0:= 0  @length 4;
#L14e162.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14e168.   v3.[|java:util:logging:FileHandler.lock|]  := v0 @type object;
#L14e16c.   v3.[|java:util:logging:FileHandler.fileName|]  := v0 @type object;
#L14e170.   v0:= -1  @length 4;
#L14e172.   v3.[|java:util:logging:FileHandler.uniqueID|]  := v0;
#L14e176.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e17c.   v0:= temp;
#L14e17e.   if v0 == 0 then goto L14e192;
#L14e182.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e186.   v1:= "Pattern cannot be empty" @type (object, string);
#L14e18a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e190.   throw v0;
#L14e192.   if v5 < 0 then goto L14e19c;
#L14e196.   v0:= 1  @length 4;
#L14e198.   if v6 >= v0 then goto L14e1ac;
#L14e19c.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e1a0.   v1:= "limit < 0 || count < 1" @type (object, string);
#L14e1a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e1aa.   throw v0;
#L14e1ac.   call temp:=  [|java:lang:Boolean.valueOf|](v7) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L14e1b2.   v0:= temp  @type object;
#L14e1b4.   call temp:=  [|java:lang:Integer.valueOf|](v5) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e1ba.   v1:= temp  @type object;
#L14e1bc.   call temp:=  [|java:lang:Integer.valueOf|](v6) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e1c2.   v2:= temp  @type object;
#L14e1c4.   call temp:=  [|java:util:logging:FileHandler.init|](v3, v4, v0, v1, v2) @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e1ca.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.<init>|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|boolean|] v5) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.<init>:(Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e1dc.   v0:= 0  @length 4;
#L14e1de.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3) @signature [|Ljava/util/logging/StreamHandler;.<init>:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L14e1e4.   v3.[|java:util:logging:FileHandler.lock|]  := v0 @type object;
#L14e1e8.   v3.[|java:util:logging:FileHandler.fileName|]  := v0 @type object;
#L14e1ec.   v0:= -1  @length 4;
#L14e1ee.   v3.[|java:util:logging:FileHandler.uniqueID|]  := v0;
#L14e1f2.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e1f8.   v0:= temp;
#L14e1fa.   if v0 == 0 then goto L14e20e;
#L14e1fe.   v0:= new [|java:lang:IllegalArgumentException|];
#L14e202.   v1:= "Pattern cannot be empty" @type (object, string);
#L14e206.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14e20c.   throw v0;
#L14e20e.   call temp:=  [|java:lang:Boolean.valueOf|](v5) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L14e214.   v0:= temp  @type object;
#L14e216.   v1:= 0  @length 4;
#L14e218.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e21e.   v1:= temp  @type object;
#L14e220.   v2:= 1  @length 4;
#L14e222.   call temp:=  [|java:lang:Integer.valueOf|](v2) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e228.   v2:= temp  @type object;
#L14e22a.   call temp:=  [|java:util:logging:FileHandler.init|](v3, v4, v0, v1, v2) @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e230.   return @void ;

   }
    procedure [|boolean|] [|java:util:logging:FileHandler.getBooleanProperty|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|boolean|] v5) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.getBooleanProperty:(Ljava/lang/String;Z)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e244.   v2:= v3.[|java:util:logging:FileHandler.manager|]   @type object;
#L14e248.   call temp:=  [|java:util:logging:LogManager.getProperty|](v2, v4) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14e24e.   v0:= temp  @type object;
#L14e250.   if v0 != 0 then goto L14e256;
#L14e254.   return v5;
#L14e256.   v1:= v5;
#L14e258.   v2:= "true" @type (object, string);
#L14e25c.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v2, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e262.   v2:= temp;
#L14e264.   if v2 == 0 then goto L14e26e;
#L14e268.   v1:= 1  @length 4;
#L14e26a.   v5:= v1;
#L14e26c.   goto L14e254;
#L14e26e.   v2:= "false" @type (object, string);
#L14e272.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v2, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e278.   v2:= temp;
#L14e27a.   if v2 == 0 then goto L14e26a;
#L14e27e.   v1:= 0  @length 4;
#L14e280.   goto L14e26a;

   }
    procedure [|int|] [|java:util:logging:FileHandler.getIntProperty|] ([|java:util:logging:FileHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.getIntProperty:(Ljava/lang/String;I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L14e294.   v2:= v3.[|java:util:logging:FileHandler.manager|]   @type object;
#L14e298.   call temp:=  [|java:util:logging:LogManager.getProperty|](v2, v4) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14e29e.   v0:= temp  @type object;
#L14e2a0.   v1:= v5;
#L14e2a2.   if v0 == 0 then goto L14e2ae;
#L14e2a6.   call temp:=  [|java:lang:Integer.parseInt|](v0) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L14e2ac.   v1:= temp;
#L14e2ae.   return v1;
#L14e2b0.   v2:= Exception  @type object;
#L14e2b2.   goto L14e2ae;
  catch  [|java:lang:Exception|] @[L14e2a6..L14e2ac] goto L14e2b0;

   }
    procedure [|java:lang:String|] [|java:util:logging:FileHandler.getStringProperty|] ([|java:util:logging:FileHandler|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.getStringProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14e2d4.   v1:= v2.[|java:util:logging:FileHandler.manager|]   @type object;
#L14e2d8.   call temp:=  [|java:util:logging:LogManager.getProperty|](v1, v3) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14e2de.   v0:= temp  @type object;
#L14e2e0.   if v0 != 0 then goto L14e2e6;
#L14e2e4.   return v4  @type object;
#L14e2e6.   v4:= v0  @type object;
#L14e2e8.   goto L14e2e4;

   }
    procedure [|void|] [|java:util:logging:FileHandler.init|] ([|java:util:logging:FileHandler|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Boolean|] v3 @type (object), [|java:lang:Integer|] v4 @type (object), [|java:lang:Integer|] v5 @type (object)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.init:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L14e2fc.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14e302.   v0:= temp  @type object;
#L14e304.   v1.[|java:util:logging:FileHandler.manager|]  := v0 @type object;
#L14e308.   v0:= v1.[|java:util:logging:FileHandler.manager|]   @type object;
#L14e30c.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14e312.   call temp:=  [|java:util:logging:FileHandler.initProperties|](v1, v2, v3, v4, v5) @signature [|Ljava/util/logging/FileHandler;.initProperties:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e318.   call temp:=  [|java:util:logging:FileHandler.initOutputFiles|](v1) @signature [|Ljava/util/logging/FileHandler;.initOutputFiles:()V|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e31e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:FileHandler.initOutputFiles|] ([|java:util:logging:FileHandler|] v11 @type (this)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.initOutputFiles:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L14e330.   v10:= 0  @length 4;
#L14e332.   v4:= v11.[|java:util:logging:FileHandler.uniqueID|] ;
#L14e336.   v4:= v4 + 1;
#L14e33a.   v11.[|java:util:logging:FileHandler.uniqueID|]  := v4;
#L14e33e.   v2:= 0  @length 4;
#L14e340.   v4:= v11.[|java:util:logging:FileHandler.count|] ;
#L14e344.   if v2 >= v4 then goto L14e368;
#L14e348.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e34c.   v5:= new [|java:io:File|];
#L14e350.   call temp:=  [|java:util:logging:FileHandler.parseFileName|](v11, v2) @signature [|Ljava/util/logging/FileHandler;.parseFileName:(I)Ljava/lang/String;|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e356.   v6:= temp  @type object;
#L14e358.   call temp:=  [|java:io:File.<init>|](v5, v6) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L14e35e.   v4[v2]:= v5  @type object;
#L14e362.   v2:= v2 + 1;
#L14e366.   goto L14e340;
#L14e368.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e36c.   v4:= v4[v10]  @type object;
#L14e370.   call temp:=  [|java:io:File.getAbsolutePath|](v4) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L14e376.   v4:= temp  @type object;
#L14e378.   v11.[|java:util:logging:FileHandler.fileName|]  := v4 @type object;
#L14e37c.   v5:= @@[|java:util:logging:FileHandler.allLocks|]   @type object;
#L14e380.   (@monitorenter v5)
#L14e382.   v4:= @@[|java:util:logging:FileHandler.allLocks|]   @type object;
#L14e386.   v6:= v11.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e38a.   call temp:=  [|java:util:Hashtable.get|](v4, v6) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14e390.   v4:= temp  @type object;
#L14e392.   if v4 == 0 then goto L14e3a0;
#L14e396.   (@monitorexit v5)
#L14e398.   goto L14e332;
#L14e39a.   v4:= Exception  @type object;
#L14e39c.   (@monitorexit v5)
#L14e39e.   throw v4;
#L14e3a0.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e3a4.   v6:= 0  @length 4;
#L14e3a6.   v4:= v4[v6]  @type object;
#L14e3aa.   call temp:=  [|java:io:File.exists|](v4) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e3b0.   v4:= temp;
#L14e3b2.   if v4 == 0 then goto L14e42c;
#L14e3b6.   v4:= v11.[|java:util:logging:FileHandler.append|]   @boolean;
#L14e3ba.   if v4 == 0 then goto L14e3de;
#L14e3be.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e3c2.   v6:= 0  @length 4;
#L14e3c4.   v4:= v4[v6]  @type object;
#L14e3c8.   call temp:=  [|java:io:File.length|](v4) @signature [|Ljava/io/File;.length:()J|] @classDescriptor [|java:io:File|] @type virtual;
#L14e3ce.   v6:= temp  @type wide;
#L14e3d0.   v4:= v11.[|java:util:logging:FileHandler.limit|] ;
#L14e3d4.   v8:= (long)v4  @type i2l;
#L14e3d6.   v4:= cmp(v6,v8);
#L14e3da.   if v4 < 0 then goto L14e42c;
#L14e3de.   v4:= v11.[|java:util:logging:FileHandler.count|] ;
#L14e3e2.   v3:= v4 + -1;
#L14e3e6.   if v3 <= 0 then goto L14e42c;
#L14e3ea.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e3ee.   v4:= v4[v3]  @type object;
#L14e3f2.   call temp:=  [|java:io:File.exists|](v4) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e3f8.   v4:= temp;
#L14e3fa.   if v4 == 0 then goto L14e40c;
#L14e3fe.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e402.   v4:= v4[v3]  @type object;
#L14e406.   call temp:=  [|java:io:File.delete|](v4) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e40c.   v4:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e410.   v6:= v3 + -1;
#L14e414.   v4:= v4[v6]  @type object;
#L14e418.   v6:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e41c.   v6:= v6[v3]  @type object;
#L14e420.   call temp:=  [|java:io:File.renameTo|](v4, v6) @signature [|Ljava/io/File;.renameTo:(Ljava/io/File;)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e426.   v3:= v3 + -1;
#L14e42a.   goto L14e3e6;
#L14e42c.   v1:= new [|java:io:FileOutputStream|];
#L14e430.   v4:= new [|java:lang:StringBuilder|];
#L14e434.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e43a.   v6:= v11.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e43e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e444.   v4:= temp  @type object;
#L14e446.   v6:= ".lck" @type (object, string);
#L14e44a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e450.   v4:= temp  @type object;
#L14e452.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e458.   v4:= temp  @type object;
#L14e45a.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v4) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L14e460.   call temp:=  [|java:io:FileOutputStream.getChannel|](v1) @signature [|Ljava/io/FileOutputStream;.getChannel:()Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L14e466.   v0:= temp  @type object;
#L14e468.   call temp:=  [|java:nio:channels:FileChannel.tryLock|](v0) @signature [|Ljava/nio/channels/FileChannel;.tryLock:()Ljava/nio/channels/FileLock;|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L14e46e.   v4:= temp  @type object;
#L14e470.   v11.[|java:util:logging:FileHandler.lock|]  := v4 @type object;
#L14e474.   v4:= v11.[|java:util:logging:FileHandler.lock|]   @type object;
#L14e478.   if v4 != 0 then goto L14e488;
#L14e47c.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v1) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L14e482.   (@monitorexit v5)
#L14e484.   goto L14e332;
#L14e488.   v4:= @@[|java:util:logging:FileHandler.allLocks|]   @type object;
#L14e48c.   v6:= v11.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e490.   v7:= v11.[|java:util:logging:FileHandler.lock|]   @type object;
#L14e494.   call temp:=  [|java:util:Hashtable.put|](v4, v6, v7) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14e49a.   (@monitorexit v5)
#L14e49c.   v4:= new [|java:util:logging:FileHandler$MeasureOutputStream|];
#L14e4a0.   v5:= new [|java:io:BufferedOutputStream|];
#L14e4a4.   v6:= new [|java:io:FileOutputStream|];
#L14e4a8.   v7:= v11.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e4ac.   v8:= v11.[|java:util:logging:FileHandler.append|]   @boolean;
#L14e4b0.   call temp:=  [|java:io:FileOutputStream.<init>|](v6, v7, v8) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L14e4b6.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v5, v6) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L14e4bc.   v6:= v11.[|java:util:logging:FileHandler.files|]   @type object;
#L14e4c0.   v6:= v6[v10]  @type object;
#L14e4c4.   call temp:=  [|java:io:File.length|](v6) @signature [|Ljava/io/File;.length:()J|] @classDescriptor [|java:io:File|] @type virtual;
#L14e4ca.   v6:= temp  @type wide;
#L14e4cc.   call temp:=  [|java:util:logging:FileHandler$MeasureOutputStream.<init>|](v4, v5, v6, v7) @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.<init>:(Ljava/io/OutputStream;J)V|] @classDescriptor [|java:util:logging:FileHandler$MeasureOutputStream|] @type direct;
#L14e4d2.   v11.[|java:util:logging:FileHandler.output|]  := v4 @type object;
#L14e4d6.   v4:= v11.[|java:util:logging:FileHandler.output|]   @type object;
#L14e4da.   call temp:=  [|java:util:logging:FileHandler.setOutputStream|](v11, v4) @signature [|Ljava/util/logging/FileHandler;.setOutputStream:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type virtual;
#L14e4e0.   return @void ;
  catch  [|any|] @[L14e382..L14e39e] goto L14e39a;
  catch  [|any|] @[L14e3a0..L14e49c] goto L14e39a;

   }
    procedure [|void|] [|java:util:logging:FileHandler.initProperties|] ([|java:util:logging:FileHandler|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|java:lang:Boolean|] v8 @type (object), [|java:lang:Integer|] v9 @type (object), [|java:lang:Integer|] v10 @type (object)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.initProperties:(Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14e508.   v5:= 0  @length 4;
#L14e50a.   v2:= 1  @length 4;
#L14e50c.   v3:= 0  @length 4;
#L14e50e.   v1:= "ALL" @type (object, string);
#L14e512.   v4:= "java.util.logging.XMLFormatter" @type (object, string);
#L14e516.   call temp:=  [|java:util:logging:StreamHandler.initProperties|](v6, v1, v5, v4, v5) @signature [|Ljava/util/logging/StreamHandler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14e51c.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14e522.   v1:= temp  @type object;
#L14e524.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14e52a.   v0:= temp  @type object;
#L14e52c.   if v7 != 0 then goto L14e562;
#L14e530.   v1:= new [|java:lang:StringBuilder|];
#L14e534.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e53a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e540.   v1:= temp  @type object;
#L14e542.   v4:= ".pattern" @type (object, string);
#L14e546.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e54c.   v1:= temp  @type object;
#L14e54e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e554.   v1:= temp  @type object;
#L14e556.   v4:= "%h/java%u.log" @type (object, string);
#L14e55a.   call temp:=  [|java:util:logging:FileHandler.getStringProperty|](v6, v1, v4) @signature [|Ljava/util/logging/FileHandler;.getStringProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e560.   v7:= temp  @type object;
#L14e562.   v6.[|java:util:logging:FileHandler.pattern|]  := v7 @type object;
#L14e566.   v1:= v6.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e56a.   if v1 != 0 then goto L14e57e;
#L14e56e.   v1:= new [|java:lang:NullPointerException|];
#L14e572.   v2:= "pattern == null" @type (object, string);
#L14e576.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14e57c.   throw v1;
#L14e57e.   v1:= v6.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e582.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e588.   v1:= temp;
#L14e58a.   if v1 == 0 then goto L14e59e;
#L14e58e.   v1:= new [|java:lang:NullPointerException|];
#L14e592.   v2:= "pattern.isEmpty()" @type (object, string);
#L14e596.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14e59c.   throw v1;
#L14e59e.   if v8 != 0 then goto L14e66a;
#L14e5a2.   v1:= new [|java:lang:StringBuilder|];
#L14e5a6.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e5ac.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5b2.   v1:= temp  @type object;
#L14e5b4.   v4:= ".append" @type (object, string);
#L14e5b8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5be.   v1:= temp  @type object;
#L14e5c0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5c6.   v1:= temp  @type object;
#L14e5c8.   call temp:=  [|java:util:logging:FileHandler.getBooleanProperty|](v6, v1, v3) @signature [|Ljava/util/logging/FileHandler;.getBooleanProperty:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e5ce.   v1:= temp;
#L14e5d0.   v6.[|java:util:logging:FileHandler.append|]  := v1 @boolean;
#L14e5d4.   if v10 != 0 then goto L14e674;
#L14e5d8.   v1:= new [|java:lang:StringBuilder|];
#L14e5dc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e5e2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5e8.   v1:= temp  @type object;
#L14e5ea.   v4:= ".count" @type (object, string);
#L14e5ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5f4.   v1:= temp  @type object;
#L14e5f6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e5fc.   v1:= temp  @type object;
#L14e5fe.   call temp:=  [|java:util:logging:FileHandler.getIntProperty|](v6, v1, v2) @signature [|Ljava/util/logging/FileHandler;.getIntProperty:(Ljava/lang/String;I)I|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e604.   v1:= temp;
#L14e606.   v6.[|java:util:logging:FileHandler.count|]  := v1;
#L14e60a.   if v9 != 0 then goto L14e67e;
#L14e60e.   v1:= new [|java:lang:StringBuilder|];
#L14e612.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e618.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e61e.   v1:= temp  @type object;
#L14e620.   v4:= ".limit" @type (object, string);
#L14e624.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e62a.   v1:= temp  @type object;
#L14e62c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e632.   v1:= temp  @type object;
#L14e634.   call temp:=  [|java:util:logging:FileHandler.getIntProperty|](v6, v1, v3) @signature [|Ljava/util/logging/FileHandler;.getIntProperty:(Ljava/lang/String;I)I|] @classDescriptor [|java:util:logging:FileHandler|] @type direct;
#L14e63a.   v1:= temp;
#L14e63c.   v6.[|java:util:logging:FileHandler.limit|]  := v1;
#L14e640.   v1:= v6.[|java:util:logging:FileHandler.count|] ;
#L14e644.   if v1 >= v2 then goto L14e688;
#L14e648.   v1:= v2;
#L14e64a.   v6.[|java:util:logging:FileHandler.count|]  := v1;
#L14e64e.   v1:= v6.[|java:util:logging:FileHandler.limit|] ;
#L14e652.   if v1 >= 0 then goto L14e68e;
#L14e656.   v1:= v3;
#L14e658.   v6.[|java:util:logging:FileHandler.limit|]  := v1;
#L14e65c.   v1:= v6.[|java:util:logging:FileHandler.count|] ;
#L14e660.   v1:= new [|java:io:File|][v1];
#L14e664.   v6.[|java:util:logging:FileHandler.files|]  := v1 @type object;
#L14e668.   return @void ;
#L14e66a.   call temp:=  [|java:lang:Boolean.booleanValue|](v8) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L14e670.   v1:= temp;
#L14e672.   goto L14e5d0;
#L14e674.   call temp:=  [|java:lang:Integer.intValue|](v10) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L14e67a.   v1:= temp;
#L14e67c.   goto L14e606;
#L14e67e.   call temp:=  [|java:lang:Integer.intValue|](v9) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L14e684.   v1:= temp;
#L14e686.   goto L14e63c;
#L14e688.   v1:= v6.[|java:util:logging:FileHandler.count|] ;
#L14e68c.   goto L14e64a;
#L14e68e.   v1:= v6.[|java:util:logging:FileHandler.limit|] ;
#L14e692.   goto L14e658;

   }
    procedure [|java:lang:String|] [|java:util:logging:FileHandler.parseFileName|] ([|java:util:logging:FileHandler|] v14 @type (this), [|int|] v15) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.parseFileName:(I)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L14e6a4.   v13:= 37  @length 16;
#L14e6a8.   v10:= 0  @length 4;
#L14e6aa.   v0:= 0  @length 4;
#L14e6ac.   v5:= 0  @length 4;
#L14e6ae.   v2:= 0  @length 4;
#L14e6b0.   v1:= 0  @length 4;
#L14e6b2.   v11:= "java.io.tmpdir" @type (object, string);
#L14e6b6.   call temp:=  [|java:lang:System.getProperty|](v11) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14e6bc.   v7:= temp  @type object;
#L14e6be.   if v7 != 0 then goto L14e744;
#L14e6c2.   v8:= v10;
#L14e6c4.   v11:= "user.home" @type (object, string);
#L14e6c8.   call temp:=  [|java:lang:System.getProperty|](v11) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14e6ce.   v3:= temp  @type object;
#L14e6d0.   if v3 != 0 then goto L14e752;
#L14e6d4.   v4:= v10;
#L14e6d6.   v6:= new [|java:lang:StringBuilder|];
#L14e6da.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e6e0.   v10:= v14.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e6e4.   v11:= 47  @length 16;
#L14e6e8.   v12:= @@[|java:io:File.separatorChar|]   @char;
#L14e6ec.   call temp:=  [|java:lang:String.replace|](v10, v11, v12) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e6f2.   v10:= temp  @type object;
#L14e6f4.   v14.[|java:util:logging:FileHandler.pattern|]  := v10 @type object;
#L14e6f8.   v10:= v14.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e6fc.   call temp:=  [|java:lang:String.toCharArray|](v10) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e702.   v9:= temp  @type object;
#L14e704.   v10:= v14.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e708.   call temp:=  [|java:lang:String.indexOf|](v10, v13, v0) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e70e.   v5:= temp;
#L14e710.   if v5 < 0 then goto L14e7fc;
#L14e714.   v5:= v5 + 1;
#L14e718.   v10:= v14.[|java:util:logging:FileHandler.pattern|]   @type object;
#L14e71c.   call temp:=  [|java:lang:String.length|](v10) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e722.   v10:= temp;
#L14e724.   if v5 >= v10 then goto L14e704;
#L14e728.   v10:= v9[v5]  @char;
#L14e72c.   goto L14e854;
#L14e732.   v10:= v5 - v0  @type int;
#L14e736.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e73c.   v5:= v5 + 1;
#L14e740.   v0:= v5;
#L14e742.   goto L14e704;
#L14e744.   v11:= @@[|java:io:File.separator|]   @type object;
#L14e748.   call temp:=  [|java:lang:String.endsWith|](v7, v11) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e74e.   v8:= temp;
#L14e750.   goto L14e6c4;
#L14e752.   v10:= @@[|java:io:File.separator|]   @type object;
#L14e756.   call temp:=  [|java:lang:String.endsWith|](v3, v10) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14e75c.   v4:= temp;
#L14e75e.   goto L14e6d6;
#L14e760.   v10:= v5 - v0  @type int;
#L14e764.   v10:= v10 + -1;
#L14e768.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e76e.   v10:= temp  @type object;
#L14e770.   call temp:=  [|java:lang:StringBuilder.append|](v10, v15) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e776.   v1:= 1  @length 4;
#L14e778.   goto L14e73c;
#L14e77a.   v10:= v5 - v0  @type int;
#L14e77e.   v10:= v10 + -1;
#L14e782.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e788.   v10:= temp  @type object;
#L14e78a.   v11:= v14.[|java:util:logging:FileHandler.uniqueID|] ;
#L14e78e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e794.   v2:= 1  @length 4;
#L14e796.   goto L14e73c;
#L14e798.   v10:= v5 - v0  @type int;
#L14e79c.   v10:= v10 + -1;
#L14e7a0.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7a6.   v10:= temp  @type object;
#L14e7a8.   call temp:=  [|java:lang:StringBuilder.append|](v10, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7ae.   if v8 != 0 then goto L14e73c;
#L14e7b2.   v10:= @@[|java:io:File.separator|]   @type object;
#L14e7b6.   call temp:=  [|java:lang:StringBuilder.append|](v6, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7bc.   goto L14e73c;
#L14e7be.   v10:= v5 - v0  @type int;
#L14e7c2.   v10:= v10 + -1;
#L14e7c6.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7cc.   v10:= temp  @type object;
#L14e7ce.   call temp:=  [|java:lang:StringBuilder.append|](v10, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7d4.   if v4 != 0 then goto L14e73c;
#L14e7d8.   v10:= @@[|java:io:File.separator|]   @type object;
#L14e7dc.   call temp:=  [|java:lang:StringBuilder.append|](v6, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7e2.   goto L14e73c;
#L14e7e4.   v10:= v5 - v0  @type int;
#L14e7e8.   v10:= v10 + -1;
#L14e7ec.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7f2.   v10:= temp  @type object;
#L14e7f4.   call temp:=  [|java:lang:StringBuilder.append|](v10, v13) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e7fa.   goto L14e73c;
#L14e7fc.   v10:= v9.length;
#L14e7fe.   v10:= v10 - v0  @type int;
#L14e800.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e806.   if v1 != 0 then goto L14e826;
#L14e80a.   v10:= v14.[|java:util:logging:FileHandler.count|] ;
#L14e80e.   v11:= 1  @length 4;
#L14e810.   if v10 <= v11 then goto L14e826;
#L14e814.   v10:= "." @type (object, string);
#L14e818.   call temp:=  [|java:lang:StringBuilder.append|](v6, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e81e.   v10:= temp  @type object;
#L14e820.   call temp:=  [|java:lang:StringBuilder.append|](v10, v15) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e826.   if v2 != 0 then goto L14e848;
#L14e82a.   v10:= v14.[|java:util:logging:FileHandler.uniqueID|] ;
#L14e82e.   if v10 <= 0 then goto L14e848;
#L14e832.   v10:= "." @type (object, string);
#L14e836.   call temp:=  [|java:lang:StringBuilder.append|](v6, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e83c.   v10:= temp  @type object;
#L14e83e.   v11:= v14.[|java:util:logging:FileHandler.uniqueID|] ;
#L14e842.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e848.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e84e.   v10:= temp  @type object;
#L14e850.   return v10  @type object;
#L14e852.   
#L14e854.   switch v10
                 | 37 => goto L14e7e4
                 | 103 => goto L14e760
                 | 104 => goto L14e7be
                 | 116 => goto L14e798
                 | 117 => goto L14e77a
                 | => goto L14e732;

   }
    procedure [|void|] [|java:util:logging:FileHandler.close|] ([|java:util:logging:FileHandler|] v4 @type (this)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14e890.   call temp:=  [|java:util:logging:StreamHandler.close|](v4) @signature [|Ljava/util/logging/StreamHandler;.close:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14e896.   v2:= @@[|java:util:logging:FileHandler.allLocks|]   @type object;
#L14e89a.   v3:= v4.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e89e.   call temp:=  [|java:util:Hashtable.remove|](v2, v3) @signature [|Ljava/util/Hashtable;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14e8a4.   v2:= v4.[|java:util:logging:FileHandler.lock|]   @type object;
#L14e8a8.   call temp:=  [|java:nio:channels:FileLock.channel|](v2) @signature [|Ljava/nio/channels/FileLock;.channel:()Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:nio:channels:FileLock|] @type virtual;
#L14e8ae.   v0:= temp  @type object;
#L14e8b0.   v2:= v4.[|java:util:logging:FileHandler.lock|]   @type object;
#L14e8b4.   call temp:=  [|java:nio:channels:FileLock.release|](v2) @signature [|Ljava/nio/channels/FileLock;.release:()V|] @classDescriptor [|java:nio:channels:FileLock|] @type virtual;
#L14e8ba.   call temp:=  [|java:nio:channels:FileChannel.close|](v0) @signature [|Ljava/nio/channels/FileChannel;.close:()V|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L14e8c0.   v1:= new [|java:io:File|];
#L14e8c4.   v2:= new [|java:lang:StringBuilder|];
#L14e8c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14e8ce.   v3:= v4.[|java:util:logging:FileHandler.fileName|]   @type object;
#L14e8d2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e8d8.   v2:= temp  @type object;
#L14e8da.   v3:= ".lck" @type (object, string);
#L14e8de.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e8e4.   v2:= temp  @type object;
#L14e8e6.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14e8ec.   v2:= temp  @type object;
#L14e8ee.   call temp:=  [|java:io:File.<init>|](v1, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L14e8f4.   call temp:=  [|java:io:File.delete|](v1) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e8fa.   return @void ;
#L14e8fc.   v2:= Exception  @type object;
#L14e8fe.   goto L14e8fa;
  catch  [|java:io:IOException|] @[L14e8a4..L14e8fa] goto L14e8fc;

   }
    procedure [|void|] [|java:util:logging:FileHandler.findNextGeneration|] ([|java:util:logging:FileHandler|] v7 @type (this)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.findNextGeneration:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L14e91c.   call temp:=  [|java:util:logging:StreamHandler.close|](v7) @signature [|Ljava/util/logging/StreamHandler;.close:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14e922.   v2:= v7.[|java:util:logging:FileHandler.count|] ;
#L14e926.   v1:= v2 + -1;
#L14e92a.   if v1 <= 0 then goto L14e970;
#L14e92e.   v2:= v7.[|java:util:logging:FileHandler.files|]   @type object;
#L14e932.   v2:= v2[v1]  @type object;
#L14e936.   call temp:=  [|java:io:File.exists|](v2) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e93c.   v2:= temp;
#L14e93e.   if v2 == 0 then goto L14e950;
#L14e942.   v2:= v7.[|java:util:logging:FileHandler.files|]   @type object;
#L14e946.   v2:= v2[v1]  @type object;
#L14e94a.   call temp:=  [|java:io:File.delete|](v2) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e950.   v2:= v7.[|java:util:logging:FileHandler.files|]   @type object;
#L14e954.   v3:= v1 + -1;
#L14e958.   v2:= v2[v3]  @type object;
#L14e95c.   v3:= v7.[|java:util:logging:FileHandler.files|]   @type object;
#L14e960.   v3:= v3[v1]  @type object;
#L14e964.   call temp:=  [|java:io:File.renameTo|](v2, v3) @signature [|Ljava/io/File;.renameTo:(Ljava/io/File;)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L14e96a.   v1:= v1 + -1;
#L14e96e.   goto L14e92a;
#L14e970.   v2:= new [|java:util:logging:FileHandler$MeasureOutputStream|];
#L14e974.   v3:= new [|java:io:BufferedOutputStream|];
#L14e978.   v4:= new [|java:io:FileOutputStream|];
#L14e97c.   v5:= v7.[|java:util:logging:FileHandler.files|]   @type object;
#L14e980.   v6:= 0  @length 4;
#L14e982.   v5:= v5[v6]  @type object;
#L14e986.   call temp:=  [|java:io:FileOutputStream.<init>|](v4, v5) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L14e98c.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v3, v4) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L14e992.   call temp:=  [|java:util:logging:FileHandler$MeasureOutputStream.<init>|](v2, v3) @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:logging:FileHandler$MeasureOutputStream|] @type direct;
#L14e998.   v7.[|java:util:logging:FileHandler.output|]  := v2 @type object;
#L14e99c.   v2:= v7.[|java:util:logging:FileHandler.output|]   @type object;
#L14e9a0.   call temp:=  [|java:util:logging:FileHandler.setOutputStream|](v7, v2) @signature [|Ljava/util/logging/FileHandler;.setOutputStream:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:logging:FileHandler|] @type virtual;
#L14e9a6.   return @void ;
#L14e9a8.   v0:= Exception  @type object;
#L14e9aa.   call temp:=  [|java:util:logging:FileHandler.getErrorManager|](v7) @signature [|Ljava/util/logging/FileHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:FileHandler|] @type virtual;
#L14e9b0.   v2:= temp  @type object;
#L14e9b2.   v3:= "Error opening log file" @type (object, string);
#L14e9b6.   v4:= 4  @length 4;
#L14e9b8.   call temp:=  [|java:util:logging:ErrorManager.error|](v2, v3, v0, v4) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L14e9be.   goto L14e99c;
  catch  [|java:io:FileNotFoundException|] @[L14e970..L14e99c] goto L14e9a8;

   }
    procedure [|void|] [|java:util:logging:FileHandler.publish|] ([|java:util:logging:FileHandler|] v4 @type (this), [|java:util:logging:LogRecord|] v5 @type (object)) @owner [|java:util:logging:FileHandler|] @signature [|Ljava/util/logging/FileHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14e9dc.   (@monitorenter v4)
#L14e9de.   call temp:=  [|java:util:logging:StreamHandler.publish|](v4, v5) @signature [|Ljava/util/logging/StreamHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L14e9e4.   call temp:=  [|java:util:logging:FileHandler.flush|](v4) @signature [|Ljava/util/logging/FileHandler;.flush:()V|] @classDescriptor [|java:util:logging:FileHandler|] @type virtual;
#L14e9ea.   v0:= v4.[|java:util:logging:FileHandler.limit|] ;
#L14e9ee.   if v0 <= 0 then goto L14ea12;
#L14e9f2.   v0:= v4.[|java:util:logging:FileHandler.output|]   @type object;
#L14e9f6.   call temp:=  [|java:util:logging:FileHandler$MeasureOutputStream.getLength|](v0) @signature [|Ljava/util/logging/FileHandler$MeasureOutputStream;.getLength:()J|] @classDescriptor [|java:util:logging:FileHandler$MeasureOutputStream|] @type virtual;
#L14e9fc.   v0:= temp  @type wide;
#L14e9fe.   v2:= v4.[|java:util:logging:FileHandler.limit|] ;
#L14ea02.   v2:= (long)v2  @type i2l;
#L14ea04.   v0:= cmp(v0,v2);
#L14ea08.   if v0 < 0 then goto L14ea12;
#L14ea0c.   call temp:=  [|java:util:logging:FileHandler.findNextGeneration|](v4) @signature [|Ljava/util/logging/FileHandler;.findNextGeneration:()V|] @classDescriptor [|java:util:logging:FileHandler|] @type virtual;
#L14ea12.   (@monitorexit v4)
#L14ea14.   return @void ;
#L14ea16.   v0:= Exception  @type object;
#L14ea18.   (@monitorexit v4)
#L14ea1a.   throw v0;
  catch  [|any|] @[L14e9de..L14ea12] goto L14ea16;

   }
record [|java:util:logging:Filter|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:util:logging:Filter.isLoggable|] ([|java:util:logging:LogRecord|] v0 @type (object)) @owner [|java:util:logging:Filter|] @signature [|Ljava/util/logging/Filter;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:logging:Formatter|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:util:logging:Formatter.<init>|] ([|java:util:logging:Formatter|] v0 @type (this)) @owner [|java:util:logging:Formatter|] @signature [|Ljava/util/logging/Formatter;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L14ea38.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14ea3e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:logging:Formatter.format|] ([|java:util:logging:LogRecord|] v0 @type (object)) @owner [|java:util:logging:Formatter|] @signature [|Ljava/util/logging/Formatter;.format:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:logging:Formatter.formatMessage|] ([|java:util:logging:Formatter|] v5 @type (this), [|java:util:logging:LogRecord|] v6 @type (object)) @owner [|java:util:logging:Formatter|] @signature [|Ljava/util/logging/Formatter;.formatMessage:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14ea50.   call temp:=  [|java:util:logging:LogRecord.getMessage|](v6) @signature [|Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14ea56.   v2:= temp  @type object;
#L14ea58.   v3:= 0  @length 4;
#L14ea5a.   call temp:=  [|java:util:logging:LogRecord.getResourceBundle|](v6) @signature [|Ljava/util/logging/LogRecord;.getResourceBundle:()Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14ea60.   v3:= temp  @type object;
#L14ea62.   if v3 == 0 then goto L14ea6e;
#L14ea66.   call temp:=  [|java:util:ResourceBundle.getString|](v3, v2) @signature [|Ljava/util/ResourceBundle;.getString:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:ResourceBundle|] @type virtual;
#L14ea6c.   v2:= temp  @type object;
#L14ea6e.   if v2 == 0 then goto L14ea9c;
#L14ea72.   call temp:=  [|java:util:logging:LogRecord.getParameters|](v6) @signature [|Ljava/util/logging/LogRecord;.getParameters:()[Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14ea78.   v1:= temp  @type object;
#L14ea7a.   v4:= "{0" @type (object, string);
#L14ea7e.   call temp:=  [|java:lang:String.indexOf|](v2, v4) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14ea84.   v4:= temp;
#L14ea86.   if v4 < 0 then goto L14ea9c;
#L14ea8a.   if v1 == 0 then goto L14ea9c;
#L14ea8e.   v4:= v1.length;
#L14ea90.   if v4 <= 0 then goto L14ea9c;
#L14ea94.   call temp:=  [|java:text:MessageFormat.format|](v2, v1) @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type static;
#L14ea9a.   v2:= temp  @type object;
#L14ea9c.   return v2  @type object;
#L14ea9e.   v0:= Exception  @type object;
#L14eaa0.   call temp:=  [|java:util:logging:LogRecord.getMessage|](v6) @signature [|Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14eaa6.   v2:= temp  @type object;
#L14eaa8.   goto L14ea6e;
#L14eaaa.   v0:= Exception  @type object;
#L14eaac.   call temp:=  [|java:util:logging:LogRecord.getMessage|](v6) @signature [|Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14eab2.   v2:= temp  @type object;
#L14eab4.   goto L14ea9c;
  catch  [|java:lang:Exception|] @[L14ea66..L14ea6c] goto L14ea9e;
  catch  [|java:lang:IllegalArgumentException|] @[L14ea94..L14ea9a] goto L14eaaa;

   }
    procedure [|java:lang:String|] [|java:util:logging:Formatter.getHead|] ([|java:util:logging:Formatter|] v1 @type (this), [|java:util:logging:Handler|] v2 @type (object)) @owner [|java:util:logging:Formatter|] @signature [|Ljava/util/logging/Formatter;.getHead:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14eae4.   v0:= "" @type (object, string);
#L14eae8.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:Formatter.getTail|] ([|java:util:logging:Formatter|] v1 @type (this), [|java:util:logging:Handler|] v2 @type (object)) @owner [|java:util:logging:Formatter|] @signature [|Ljava/util/logging/Formatter;.getTail:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14eafc.   v0:= "" @type (object, string);
#L14eb00.   return v0  @type object;

   }
record [|java:util:logging:Level|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:lang:String|] [|java:util:logging:Level.name|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:ResourceBundle|] [|java:util:logging:Level.rb|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:String|] [|java:util:logging:Level.resourceBundleName|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:logging:Level.value|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.ALL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.CONFIG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.FINE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.FINER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.FINEST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.INFO|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.OFF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.SEVERE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Level|] @@[|java:util:logging:Level.WARNING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:List|] @@[|java:util:logging:Level.levels|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:logging:Level.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:Level.<clinit>|] () @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14eb14.   v0:= new [|java:util:ArrayList|];
#L14eb18.   v1:= 9  @length 16;
#L14eb1c.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14eb22.   @@[|java:util:logging:Level.levels|] := v0  @type object;
#L14eb26.   v0:= new [|java:util:logging:Level|];
#L14eb2a.   v1:= "OFF" @type (object, string);
#L14eb2e.    v2:= nan;
#L14eb34.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eb3a.   @@[|java:util:logging:Level.OFF|] := v0  @type object;
#L14eb3e.   v0:= new [|java:util:logging:Level|];
#L14eb42.   v1:= "SEVERE" @type (object, string);
#L14eb46.   v2:= 1000  @length 16;
#L14eb4a.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eb50.   @@[|java:util:logging:Level.SEVERE|] := v0  @type object;
#L14eb54.   v0:= new [|java:util:logging:Level|];
#L14eb58.   v1:= "WARNING" @type (object, string);
#L14eb5c.   v2:= 900  @length 16;
#L14eb60.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eb66.   @@[|java:util:logging:Level.WARNING|] := v0  @type object;
#L14eb6a.   v0:= new [|java:util:logging:Level|];
#L14eb6e.   v1:= "INFO" @type (object, string);
#L14eb72.   v2:= 800  @length 16;
#L14eb76.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eb7c.   @@[|java:util:logging:Level.INFO|] := v0  @type object;
#L14eb80.   v0:= new [|java:util:logging:Level|];
#L14eb84.   v1:= "CONFIG" @type (object, string);
#L14eb88.   v2:= 700  @length 16;
#L14eb8c.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eb92.   @@[|java:util:logging:Level.CONFIG|] := v0  @type object;
#L14eb96.   v0:= new [|java:util:logging:Level|];
#L14eb9a.   v1:= "FINE" @type (object, string);
#L14eb9e.   v2:= 500  @length 16;
#L14eba2.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14eba8.   @@[|java:util:logging:Level.FINE|] := v0  @type object;
#L14ebac.   v0:= new [|java:util:logging:Level|];
#L14ebb0.   v1:= "FINER" @type (object, string);
#L14ebb4.   v2:= 400  @length 16;
#L14ebb8.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14ebbe.   @@[|java:util:logging:Level.FINER|] := v0  @type object;
#L14ebc2.   v0:= new [|java:util:logging:Level|];
#L14ebc6.   v1:= "FINEST" @type (object, string);
#L14ebca.   v2:= 300  @length 16;
#L14ebce.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14ebd4.   @@[|java:util:logging:Level.FINEST|] := v0  @type object;
#L14ebd8.   v0:= new [|java:util:logging:Level|];
#L14ebdc.   v1:= "ALL" @type (object, string);
#L14ebe0.   v2:= -2147483648  @length high16;
#L14ebe4.   call temp:=  [|java:util:logging:Level.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14ebea.   @@[|java:util:logging:Level.ALL|] := v0  @type object;
#L14ebee.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Level.<init>|] ([|java:util:logging:Level|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L14ec00.   v0:= 0  @length 4;
#L14ec02.   call temp:=  [|java:util:logging:Level.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14ec08.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Level.<init>|] ([|java:util:logging:Level|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5, [|java:lang:String|] v6 @type (object)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14ec1c.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14ec22.   if v4 != 0 then goto L14ec36;
#L14ec26.   v1:= new [|java:lang:NullPointerException|];
#L14ec2a.   v2:= "name == null" @type (object, string);
#L14ec2e.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14ec34.   throw v1;
#L14ec36.   v3.[|java:util:logging:Level.name|]  := v4 @type object;
#L14ec3a.   v3.[|java:util:logging:Level.value|]  := v5;
#L14ec3e.   v3.[|java:util:logging:Level.resourceBundleName|]  := v6 @type object;
#L14ec42.   if v6 == 0 then goto L14ec62;
#L14ec46.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L14ec4c.   v1:= temp  @type object;
#L14ec4e.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L14ec54.   v2:= temp  @type object;
#L14ec56.   call temp:=  [|java:util:ResourceBundle.getBundle|](v6, v1, v2) @signature [|Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:ResourceBundle|] @type static;
#L14ec5c.   v1:= temp  @type object;
#L14ec5e.   v3.[|java:util:logging:Level.rb|]  := v1 @type object;
#L14ec62.   v2:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ec66.   (@monitorenter v2)
#L14ec68.   v1:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ec6c.   call temp:=  [|java:util:List.add|](v1, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L14ec72.   (@monitorexit v2)
#L14ec74.   return @void ;
#L14ec76.   v0:= Exception  @type object;
#L14ec78.   v1:= 0  @length 4;
#L14ec7a.   v3.[|java:util:logging:Level.rb|]  := v1 @type object;
#L14ec7e.   goto L14ec62;
#L14ec80.   v1:= Exception  @type object;
#L14ec82.   (@monitorexit v2)
#L14ec84.   throw v1;
  catch  [|java:util:MissingResourceException|] @[L14ec46..L14ec62] goto L14ec76;
  catch  [|any|] @[L14ec68..L14ec74] goto L14ec80;
  catch  [|any|] @[L14ec82..L14ec84] goto L14ec80;

   }
    procedure [|java:util:logging:Level|] [|java:util:logging:Level.parse|] ([|java:lang:String|] v8 @type (object)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14ecb8.   if v8 != 0 then goto L14eccc;
#L14ecbc.   v5:= new [|java:lang:NullPointerException|];
#L14ecc0.   v6:= "name == null" @type (object, string);
#L14ecc4.   call temp:=  [|java:lang:NullPointerException.<init>|](v5, v6) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14ecca.   throw v5;
#L14eccc.   call temp:=  [|java:lang:Integer.parseInt|](v8) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L14ecd2.   v4:= temp;
#L14ecd4.   v2:= 1  @length 4;
#L14ecd6.   v6:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ecda.   (@monitorenter v6)
#L14ecdc.   v5:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ece0.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L14ece6.   v1:= temp  @type object;
#L14ece8.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ecee.   v5:= temp;
#L14ecf0.   if v5 == 0 then goto L14ed20;
#L14ecf4.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ecfa.   v3:= temp  @type object;
#L14ecfc.   v3:= ([|java:util:logging:Level|])v3;
#L14ed00.   call temp:=  [|java:util:logging:Level.getName|](v3) @signature [|Ljava/util/logging/Level;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14ed06.   v5:= temp  @type object;
#L14ed08.   call temp:=  [|java:lang:String.equals|](v8, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14ed0e.   v5:= temp;
#L14ed10.   if v5 == 0 then goto L14ece8;
#L14ed14.   (@monitorexit v6)
#L14ed16.   return v3  @type object;
#L14ed18.   v0:= Exception  @type object;
#L14ed1a.   v4:= 0  @length 4;
#L14ed1c.   v2:= 0  @length 4;
#L14ed1e.   goto L14ecd6;
#L14ed20.   if v2 == 0 then goto L14ed5e;
#L14ed24.   v5:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ed28.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L14ed2e.   v1:= temp  @type object;
#L14ed30.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ed36.   v5:= temp;
#L14ed38.   if v5 == 0 then goto L14ed5e;
#L14ed3c.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ed42.   v3:= temp  @type object;
#L14ed44.   v3:= ([|java:util:logging:Level|])v3;
#L14ed48.   call temp:=  [|java:util:logging:Level.intValue|](v3) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14ed4e.   v5:= temp;
#L14ed50.   if v4 != v5 then goto L14ed30;
#L14ed54.   (@monitorexit v6)
#L14ed56.   goto L14ed16;
#L14ed58.   v5:= Exception  @type object;
#L14ed5a.   (@monitorexit v6)
#L14ed5c.   throw v5;
#L14ed5e.   (@monitorexit v6)
#L14ed60.   if v2 != 0 then goto L14eda2;
#L14ed64.   v5:= new [|java:lang:IllegalArgumentException|];
#L14ed68.   v6:= new [|java:lang:StringBuilder|];
#L14ed6c.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14ed72.   v7:= "Cannot parse name '" @type (object, string);
#L14ed76.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ed7c.   v6:= temp  @type object;
#L14ed7e.   call temp:=  [|java:lang:StringBuilder.append|](v6, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ed84.   v6:= temp  @type object;
#L14ed86.   v7:= "'" @type (object, string);
#L14ed8a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ed90.   v6:= temp  @type object;
#L14ed92.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14ed98.   v6:= temp  @type object;
#L14ed9a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14eda0.   throw v5;
#L14eda2.   v3:= new [|java:util:logging:Level|];
#L14eda6.   call temp:=  [|java:util:logging:Level.<init>|](v3, v8, v4) @signature [|Ljava/util/logging/Level;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:logging:Level|] @type direct;
#L14edac.   goto L14ed16;
  catch  [|java:lang:NumberFormatException|] @[L14eccc..L14ecd2] goto L14ed18;
  catch  [|any|] @[L14ecdc..L14ed5c] goto L14ed58;
  catch  [|any|] @[L14ed5e..L14ed60] goto L14ed58;

   }
    procedure [|void|] [|java:util:logging:Level.readObject|] ([|java:util:logging:Level|] v2 @type (this), [|java:io:ObjectInputStream|] v3 @type (object)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L14ede0.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v3) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14ede6.   v1:= v2.[|java:util:logging:Level.resourceBundleName|]   @type object;
#L14edea.   if v1 == 0 then goto L14edfe;
#L14edee.   v1:= v2.[|java:util:logging:Level.resourceBundleName|]   @type object;
#L14edf2.   call temp:=  [|java:util:ResourceBundle.getBundle|](v1) @signature [|Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:ResourceBundle|] @type static;
#L14edf8.   v1:= temp  @type object;
#L14edfa.   v2.[|java:util:logging:Level.rb|]  := v1 @type object;
#L14edfe.   return @void ;
#L14ee00.   v0:= Exception  @type object;
#L14ee02.   v1:= 0  @length 4;
#L14ee04.   v2.[|java:util:logging:Level.rb|]  := v1 @type object;
#L14ee08.   goto L14edfe;
  catch  [|java:util:MissingResourceException|] @[L14edee..L14edfe] goto L14ee00;

   }
    procedure [|java:lang:Object|] [|java:util:logging:Level.readResolve|] ([|java:util:logging:Level|] v5 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.readResolve:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14ee2c.   v3:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ee30.   (@monitorenter v3)
#L14ee32.   v2:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ee36.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L14ee3c.   v0:= temp  @type object;
#L14ee3e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ee44.   v2:= temp;
#L14ee46.   if v2 == 0 then goto L14ee8e;
#L14ee4a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14ee50.   v1:= temp  @type object;
#L14ee52.   v1:= ([|java:util:logging:Level|])v1;
#L14ee56.   v2:= v5.[|java:util:logging:Level.value|] ;
#L14ee5a.   v4:= v1.[|java:util:logging:Level.value|] ;
#L14ee5e.   if v2 != v4 then goto L14ee3e;
#L14ee62.   v2:= v5.[|java:util:logging:Level.name|]   @type object;
#L14ee66.   v4:= v1.[|java:util:logging:Level.name|]   @type object;
#L14ee6a.   call temp:=  [|java:lang:String.equals|](v2, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14ee70.   v2:= temp;
#L14ee72.   if v2 == 0 then goto L14ee3e;
#L14ee76.   v2:= v5.[|java:util:logging:Level.resourceBundleName|]   @type object;
#L14ee7a.   v4:= v1.[|java:util:logging:Level.resourceBundleName|]   @type object;
#L14ee7e.   call temp:=  [|libcore:util:Objects.equal|](v2, v4) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L14ee84.   v2:= temp;
#L14ee86.   if v2 == 0 then goto L14ee3e;
#L14ee8a.   (@monitorexit v3)
#L14ee8c.   return v1  @type object;
#L14ee8e.   v2:= @@[|java:util:logging:Level.levels|]   @type object;
#L14ee92.   call temp:=  [|java:util:List.add|](v2, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L14ee98.   (@monitorexit v3)
#L14ee9a.   v1:= v5  @type object;
#L14ee9c.   goto L14ee8c;
#L14ee9e.   v2:= Exception  @type object;
#L14eea0.   (@monitorexit v3)
#L14eea2.   throw v2;
  catch  [|any|] @[L14ee32..L14eea2] goto L14ee9e;

   }
    procedure [|boolean|] [|java:util:logging:Level.equals|] ([|java:util:logging:Level|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14eec0.   v0:= 1  @length 4;
#L14eec2.   v1:= 0  @length 4;
#L14eec4.   if v4 != v5 then goto L14eeca;
#L14eec8.   return v0;
#L14eeca.   v2:= instanceof @varname v5 @type [|java:util:logging:Level|];
#L14eece.   if v2 != 0 then goto L14eed6;
#L14eed2.   v0:= v1;
#L14eed4.   goto L14eec8;
#L14eed6.   v5:= ([|java:util:logging:Level|])v5;
#L14eeda.   call temp:=  [|java:util:logging:Level.intValue|](v5) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14eee0.   v2:= temp;
#L14eee2.   v3:= v4.[|java:util:logging:Level.value|] ;
#L14eee6.   if v2 == v3 then goto L14eec8;
#L14eeea.   v0:= v1;
#L14eeec.   goto L14eec8;

   }
    procedure [|java:lang:String|] [|java:util:logging:Level.getLocalizedName|] ([|java:util:logging:Level|] v3 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.getLocalizedName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14ef00.   v1:= v3.[|java:util:logging:Level.rb|]   @type object;
#L14ef04.   if v1 != 0 then goto L14ef0e;
#L14ef08.   v1:= v3.[|java:util:logging:Level.name|]   @type object;
#L14ef0c.   return v1  @type object;
#L14ef0e.   v1:= v3.[|java:util:logging:Level.rb|]   @type object;
#L14ef12.   v2:= v3.[|java:util:logging:Level.name|]   @type object;
#L14ef16.   call temp:=  [|java:util:ResourceBundle.getString|](v1, v2) @signature [|Ljava/util/ResourceBundle;.getString:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:ResourceBundle|] @type virtual;
#L14ef1c.   v1:= temp  @type object;
#L14ef1e.   goto L14ef0c;
#L14ef20.   v0:= Exception  @type object;
#L14ef22.   v1:= v3.[|java:util:logging:Level.name|]   @type object;
#L14ef26.   goto L14ef0c;
  catch  [|java:util:MissingResourceException|] @[L14ef0e..L14ef1c] goto L14ef20;

   }
    procedure [|java:lang:String|] [|java:util:logging:Level.getName|] ([|java:util:logging:Level|] v1 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14ef48.   v0:= v1.[|java:util:logging:Level.name|]   @type object;
#L14ef4c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:Level.getResourceBundleName|] ([|java:util:logging:Level|] v1 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.getResourceBundleName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14ef60.   v0:= v1.[|java:util:logging:Level.resourceBundleName|]   @type object;
#L14ef64.   return v0  @type object;

   }
    procedure [|int|] [|java:util:logging:Level.hashCode|] ([|java:util:logging:Level|] v1 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14ef78.   v0:= v1.[|java:util:logging:Level.value|] ;
#L14ef7c.   return v0;

   }
    procedure [|int|] [|java:util:logging:Level.intValue|] ([|java:util:logging:Level|] v1 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.intValue:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L14ef90.   v0:= v1.[|java:util:logging:Level.value|] ;
#L14ef94.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:logging:Level.toString|] ([|java:util:logging:Level|] v1 @type (this)) @owner [|java:util:logging:Level|] @signature [|Ljava/util/logging/Level;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L14efa8.   v0:= v1.[|java:util:logging:Level.name|]   @type object;
#L14efac.   return v0  @type object;

   }
record [|java:util:logging:LogManager$1|]  @type class @AccessFlag   extends [|java:lang:Thread|] {
      [|java:util:logging:LogManager|] [|java:util:logging:LogManager$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:logging:LogManager$1.<init>|] ([|java:util:logging:LogManager$1|] v0 @type (this), [|java:util:logging:LogManager|] v1 @type (object)) @owner [|java:util:logging:LogManager$1|] @signature [|Ljava/util/logging/LogManager$1;.<init>:(Ljava/util/logging/LogManager;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L14efc0.   v0.[|java:util:logging:LogManager$1.this$0|]  := v1 @type object;
#L14efc4.   call temp:=  [|java:lang:Thread.<init>|](v0) @signature [|Ljava/lang/Thread;.<init>:()V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L14efca.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogManager$1.run|] ([|java:util:logging:LogManager$1|] v1 @type (this)) @owner [|java:util:logging:LogManager$1|] @signature [|Ljava/util/logging/LogManager$1;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14efdc.   v0:= v1.[|java:util:logging:LogManager$1.this$0|]   @type object;
#L14efe0.   call temp:=  [|java:util:logging:LogManager.reset|](v0) @signature [|Ljava/util/logging/LogManager;.reset:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14efe6.   return @void ;

   }
record [|java:util:logging:LogManager|]  @type class @AccessFlag PUBLIC  {
      [|java:beans:PropertyChangeSupport|] [|java:util:logging:LogManager.listeners|]    @AccessFlag PRIVATE;
      [|java:util:Hashtable|] [|java:util:logging:LogManager.loggers|]    @AccessFlag PRIVATE;
      [|java:util:Properties|] [|java:util:logging:LogManager.props|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:util:logging:LogManager.LOGGING_MXBEAN_NAME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:LogManager|] @@[|java:util:logging:LogManager.manager|]    @AccessFlag STATIC;
      global [|java:util:logging:LoggingPermission|] @@[|java:util:logging:LogManager.perm|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:LogManager.<clinit>|] () @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14eff8.   v5:= 0  @length 4;
#L14effa.   v3:= new [|java:util:logging:LoggingPermission|];
#L14effe.   v4:= "control" @type (object, string);
#L14f002.   call temp:=  [|java:util:logging:LoggingPermission.<init>|](v3, v4, v5) @signature [|Ljava/util/logging/LoggingPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LoggingPermission|] @type direct;
#L14f008.   @@[|java:util:logging:LogManager.perm|] := v3  @type object;
#L14f00c.   v3:= "java.util.logging.manager" @type (object, string);
#L14f010.   call temp:=  [|java:lang:System.getProperty|](v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14f016.   v0:= temp  @type object;
#L14f018.   if v0 == 0 then goto L14f02c;
#L14f01c.   call temp:=  [|java:util:logging:LogManager.getInstanceByClass|](v0) @signature [|Ljava/util/logging/LogManager;.getInstanceByClass:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14f022.   v3:= temp  @type object;
#L14f024.   v3:= ([|java:util:logging:LogManager|])v3;
#L14f028.   @@[|java:util:logging:LogManager.manager|] := v3  @type object;
#L14f02c.   v3:= @@[|java:util:logging:LogManager.manager|]   @type object;
#L14f030.   if v3 != 0 then goto L14f042;
#L14f034.   v3:= new [|java:util:logging:LogManager|];
#L14f038.   call temp:=  [|java:util:logging:LogManager.<init>|](v3) @signature [|Ljava/util/logging/LogManager;.<init>:()V|] @classDescriptor [|java:util:logging:LogManager|] @type direct;
#L14f03e.   @@[|java:util:logging:LogManager.manager|] := v3  @type object;
#L14f042.   v3:= @@[|java:util:logging:LogManager.manager|]   @type object;
#L14f046.   call temp:=  [|java:util:logging:LogManager.readConfiguration|](v3) @signature [|Ljava/util/logging/LogManager;.readConfiguration:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f04c.   v2:= new [|java:util:logging:Logger|];
#L14f050.   v3:= "" @type (object, string);
#L14f054.   call temp:=  [|java:util:logging:Logger.<init>|](v2, v3, v5) @signature [|Ljava/util/logging/Logger;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14f05a.   v3:= @@[|java:util:logging:Level.INFO|]   @type object;
#L14f05e.   call temp:=  [|java:util:logging:Logger.setLevel|](v2, v3) @signature [|Ljava/util/logging/Logger;.setLevel:(Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f064.   v3:= @@[|java:util:logging:Logger.global|]   @type object;
#L14f068.   call temp:=  [|java:util:logging:Logger.setParent|](v3, v2) @signature [|Ljava/util/logging/Logger;.setParent:(Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f06e.   v3:= @@[|java:util:logging:LogManager.manager|]   @type object;
#L14f072.   call temp:=  [|java:util:logging:LogManager.addLogger|](v3, v2) @signature [|Ljava/util/logging/LogManager;.addLogger:(Ljava/util/logging/Logger;)Z|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f078.   v3:= @@[|java:util:logging:LogManager.manager|]   @type object;
#L14f07c.   v4:= @@[|java:util:logging:Logger.global|]   @type object;
#L14f080.   call temp:=  [|java:util:logging:LogManager.addLogger|](v3, v4) @signature [|Ljava/util/logging/LogManager;.addLogger:(Ljava/util/logging/Logger;)Z|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f086.   return @void ;
#L14f088.   v1:= Exception  @type object;
#L14f08a.   call temp:=  [|java:lang:Exception.printStackTrace|](v1) @signature [|Ljava/lang/Exception;.printStackTrace:()V|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L14f090.   goto L14f04c;
  catch  [|java:lang:Exception|] @[L14f042..L14f04c] goto L14f088;

   }
    procedure [|void|] [|java:util:logging:LogManager.<init>|] ([|java:util:logging:LogManager|] v2 @type (this)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14f0b4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14f0ba.   v0:= new [|java:util:Hashtable|];
#L14f0be.   call temp:=  [|java:util:Hashtable.<init>|](v0) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L14f0c4.   v2.[|java:util:logging:LogManager.loggers|]  := v0 @type object;
#L14f0c8.   v0:= new [|java:util:Properties|];
#L14f0cc.   call temp:=  [|java:util:Properties.<init>|](v0) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L14f0d2.   v2.[|java:util:logging:LogManager.props|]  := v0 @type object;
#L14f0d6.   v0:= new [|java:beans:PropertyChangeSupport|];
#L14f0da.   call temp:=  [|java:beans:PropertyChangeSupport.<init>|](v0, v2) @signature [|Ljava/beans/PropertyChangeSupport;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type direct;
#L14f0e0.   v2.[|java:util:logging:LogManager.listeners|]  := v0 @type object;
#L14f0e4.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L14f0ea.   v0:= temp  @type object;
#L14f0ec.   v1:= new [|java:util:logging:LogManager$1|];
#L14f0f0.   call temp:=  [|java:util:logging:LogManager$1.<init>|](v1, v2) @signature [|Ljava/util/logging/LogManager$1;.<init>:(Ljava/util/logging/LogManager;)V|] @classDescriptor [|java:util:logging:LogManager$1|] @type direct;
#L14f0f6.   call temp:=  [|java:lang:Runtime.addShutdownHook|](v0, v1) @signature [|Ljava/lang/Runtime;.addShutdownHook:(Ljava/lang/Thread;)V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L14f0fc.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogManager.addToFamilyTree|] ([|java:util:logging:LogManager|] v12 @type (this), [|java:util:logging:Logger|] v13 @type (object), [|java:lang:String|] v14 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.addToFamilyTree:(Ljava/util/logging/Logger;Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L14f110.   v11:= 46  @length 16;
#L14f114.   v6:= 0  @length 4;
#L14f116.   v7:= v14  @type object;
#L14f118.   call temp:=  [|java:lang:String.lastIndexOf|](v7, v11) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14f11e.   v3:= temp;
#L14f120.   v9:= -1  @length 4;
#L14f122.   if v3 == v9 then goto L14f14a;
#L14f126.   v9:= 0  @length 4;
#L14f128.   call temp:=  [|java:lang:String.substring|](v7, v9, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L14f12e.   v7:= temp  @type object;
#L14f130.   v9:= v12.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f134.   call temp:=  [|java:util:Hashtable.get|](v9, v7) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f13a.   v6:= temp  @type object;
#L14f13c.   v6:= ([|java:util:logging:Logger|])v6;
#L14f140.   if v6 == 0 then goto L14f1fe;
#L14f144.   call temp:=  [|java:util:logging:LogManager.setParent|](v12, v13, v6) @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f14a.   if v6 != 0 then goto L14f16c;
#L14f14e.   v9:= v12.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f152.   v10:= "" @type (object, string);
#L14f156.   call temp:=  [|java:util:Hashtable.get|](v9, v10) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f15c.   v6:= temp  @type object;
#L14f15e.   v6:= ([|java:util:logging:Logger|])v6;
#L14f162.   if v6 == 0 then goto L14f16c;
#L14f166.   call temp:=  [|java:util:logging:LogManager.setParent|](v12, v13, v6) @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f16c.   v9:= new [|java:lang:StringBuilder|];
#L14f170.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f176.   call temp:=  [|java:lang:StringBuilder.append|](v9, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f17c.   v9:= temp  @type object;
#L14f17e.   call temp:=  [|java:lang:StringBuilder.append|](v9, v11) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f184.   v9:= temp  @type object;
#L14f186.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f18c.   v4:= temp  @type object;
#L14f18e.   v9:= v12.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f192.   call temp:=  [|java:util:Hashtable.values|](v9) @signature [|Ljava/util/Hashtable;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f198.   v0:= temp  @type object;
#L14f19a.   call temp:=  [|java:util:Collection.iterator|](v0) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L14f1a0.   v2:= temp  @type object;
#L14f1a2.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f1a8.   v9:= temp;
#L14f1aa.   if v9 == 0 then goto L14f274;
#L14f1ae.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f1b4.   v1:= temp  @type object;
#L14f1b6.   v1:= ([|java:util:logging:Logger|])v1;
#L14f1ba.   call temp:=  [|java:util:logging:Logger.getParent|](v1) @signature [|Ljava/util/logging/Logger;.getParent:()Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f1c0.   v5:= temp  @type object;
#L14f1c2.   if v6 != v5 then goto L14f1a2;
#L14f1c6.   call temp:=  [|java:lang:String.length|](v14) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L14f1cc.   v9:= temp;
#L14f1ce.   if v9 == 0 then goto L14f1e6;
#L14f1d2.   call temp:=  [|java:util:logging:Logger.getName|](v1) @signature [|Ljava/util/logging/Logger;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f1d8.   v9:= temp  @type object;
#L14f1da.   call temp:=  [|java:lang:String.startsWith|](v9, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14f1e0.   v9:= temp;
#L14f1e2.   if v9 == 0 then goto L14f1a2;
#L14f1e6.   v8:= v13  @type object;
#L14f1e8.   call temp:=  [|java:util:logging:Logger.setParent|](v1, v8) @signature [|Ljava/util/logging/Logger;.setParent:(Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f1ee.   if v5 == 0 then goto L14f1a2;
#L14f1f2.   v9:= v5.[|java:util:logging:Logger.children|]   @type object;
#L14f1f6.   call temp:=  [|java:util:List.remove|](v9, v1) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L14f1fc.   goto L14f1a2;
#L14f1fe.   v9:= new [|java:lang:StringBuilder|];
#L14f202.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f208.   call temp:=  [|java:lang:StringBuilder.append|](v9, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f20e.   v9:= temp  @type object;
#L14f210.   v10:= ".level" @type (object, string);
#L14f214.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f21a.   v9:= temp  @type object;
#L14f21c.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f222.   v9:= temp  @type object;
#L14f224.   call temp:=  [|java:util:logging:LogManager.getProperty|](v12, v9) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f22a.   v9:= temp  @type object;
#L14f22c.   if v9 != 0 then goto L14f262;
#L14f230.   v9:= new [|java:lang:StringBuilder|];
#L14f234.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f23a.   call temp:=  [|java:lang:StringBuilder.append|](v9, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f240.   v9:= temp  @type object;
#L14f242.   v10:= ".handlers" @type (object, string);
#L14f246.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f24c.   v9:= temp  @type object;
#L14f24e.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f254.   v9:= temp  @type object;
#L14f256.   call temp:=  [|java:util:logging:LogManager.getProperty|](v12, v9) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f25c.   v9:= temp  @type object;
#L14f25e.   if v9 == 0 then goto L14f118;
#L14f262.   call temp:=  [|java:util:logging:Logger.getLogger|](v7) @signature [|Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L14f268.   v6:= temp  @type object;
#L14f26a.   call temp:=  [|java:util:logging:LogManager.setParent|](v12, v13, v6) @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f270.   goto L14f14a;
#L14f274.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:logging:LogManager.getInstanceByClass|] ([|java:lang:String|] v6 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getInstanceByClass:(Ljava/lang/String;)Ljava/lang/Object;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14f288.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L14f28e.   v3:= temp  @type object;
#L14f290.   call temp:=  [|java:lang:ClassLoader.loadClass|](v3, v6) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L14f296.   v0:= temp  @type object;
#L14f298.   call temp:=  [|java:lang:Class.newInstance|](v0) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14f29e.   v3:= temp  @type object;
#L14f2a0.   return v3  @type object;
#L14f2a2.   v1:= Exception  @type object;
#L14f2a4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14f2aa.   v3:= temp  @type object;
#L14f2ac.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v3) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L14f2b2.   v3:= temp  @type object;
#L14f2b4.   call temp:=  [|java:lang:ClassLoader.loadClass|](v3, v6) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L14f2ba.   v0:= temp  @type object;
#L14f2bc.   call temp:=  [|java:lang:Class.newInstance|](v0) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14f2c2.   v3:= temp  @type object;
#L14f2c4.   goto L14f2a0;
#L14f2c6.   v2:= Exception  @type object;
#L14f2c8.   v3:= @@[|java:lang:System.err|]   @type object;
#L14f2cc.   v4:= new [|java:lang:StringBuilder|];
#L14f2d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f2d6.   v5:= "Loading class '" @type (object, string);
#L14f2da.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f2e0.   v4:= temp  @type object;
#L14f2e2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f2e8.   v4:= temp  @type object;
#L14f2ea.   v5:= "' failed" @type (object, string);
#L14f2ee.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f2f4.   v4:= temp  @type object;
#L14f2f6.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f2fc.   v4:= temp  @type object;
#L14f2fe.   call temp:=  [|java:io:PrintStream.println|](v3, v4) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L14f304.   v3:= @@[|java:lang:System.err|]   @type object;
#L14f308.   call temp:=  [|java:io:PrintStream.println|](v3, v2) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L14f30e.   v3:= 0  @length 4;
#L14f310.   goto L14f2a0;
  catch  [|java:lang:Exception|] @[L14f288..L14f29e] goto L14f2a2;
  catch  [|java:lang:Exception|] @[L14f2a4..L14f2c2] goto L14f2c6;

   }
    procedure [|java:util:logging:LogManager|] [|java:util:logging:LogManager.getLogManager|] () @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L14f340.   v0:= @@[|java:util:logging:LogManager.manager|]   @type object;
#L14f344.   return v0  @type object;

   }
    procedure [|java:util:logging:LoggingMXBean|] [|java:util:logging:LogManager.getLoggingMXBean|] () @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getLoggingMXBean:()Ljava/util/logging/LoggingMXBean;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L14f358.   v0:= new [|java:lang:UnsupportedOperationException|];
#L14f35c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L14f362.   throw v0;

   }
    procedure [|void|] [|java:util:logging:LogManager.readConfigurationImpl|] ([|java:util:logging:LogManager|] v12 @type (this), [|java:io:InputStream|] v13 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.readConfigurationImpl:(Ljava/io/InputStream;)V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L14f374.   (@monitorenter v12)
#L14f376.   call temp:=  [|java:util:logging:LogManager.reset|](v12) @signature [|Ljava/util/logging/LogManager;.reset:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f37c.   v8:= v12.[|java:util:logging:LogManager.props|]   @type object;
#L14f380.   call temp:=  [|java:util:Properties.load|](v8, v13) @signature [|Ljava/util/Properties;.load:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:Properties|] @type virtual;
#L14f386.   v8:= v12.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f38a.   v9:= "" @type (object, string);
#L14f38e.   call temp:=  [|java:util:Hashtable.get|](v8, v9) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f394.   v6:= temp  @type object;
#L14f396.   v6:= ([|java:util:logging:Logger|])v6;
#L14f39a.   if v6 == 0 then goto L14f3a4;
#L14f39e.   call temp:=  [|java:util:logging:Logger.setManager|](v6, v12) @signature [|Ljava/util/logging/Logger;.setManager:(Ljava/util/logging/LogManager;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f3a4.   v8:= v12.[|java:util:logging:LogManager.props|]   @type object;
#L14f3a8.   v9:= "config" @type (object, string);
#L14f3ac.   call temp:=  [|java:util:Properties.getProperty|](v8, v9) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L14f3b2.   v2:= temp  @type object;
#L14f3b4.   if v2 == 0 then goto L14f3e8;
#L14f3b8.   v7:= new [|java:util:StringTokenizer|];
#L14f3bc.   v8:= " " @type (object, string);
#L14f3c0.   call temp:=  [|java:util:StringTokenizer.<init>|](v7, v2, v8) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L14f3c6.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v7) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L14f3cc.   v8:= temp;
#L14f3ce.   if v8 == 0 then goto L14f3e8;
#L14f3d2.   call temp:=  [|java:util:StringTokenizer.nextToken|](v7) @signature [|Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L14f3d8.   v1:= temp  @type object;
#L14f3da.   call temp:=  [|java:util:logging:LogManager.getInstanceByClass|](v1) @signature [|Ljava/util/logging/LogManager;.getInstanceByClass:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14f3e0.   goto L14f3c6;
#L14f3e2.   v8:= Exception  @type object;
#L14f3e4.   (@monitorexit v12)
#L14f3e6.   throw v8;
#L14f3e8.   v8:= v12.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f3ec.   call temp:=  [|java:util:Hashtable.values|](v8) @signature [|Ljava/util/Hashtable;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f3f2.   v0:= temp  @type object;
#L14f3f4.   call temp:=  [|java:util:Collection.iterator|](v0) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L14f3fa.   v3:= temp  @type object;
#L14f3fc.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f402.   v8:= temp;
#L14f404.   if v8 == 0 then goto L14f462;
#L14f408.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f40e.   v4:= temp  @type object;
#L14f410.   v4:= ([|java:util:logging:Logger|])v4;
#L14f414.   v8:= v12.[|java:util:logging:LogManager.props|]   @type object;
#L14f418.   v9:= new [|java:lang:StringBuilder|];
#L14f41c.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f422.   call temp:=  [|java:util:logging:Logger.getName|](v4) @signature [|Ljava/util/logging/Logger;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f428.   v10:= temp  @type object;
#L14f42a.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f430.   v9:= temp  @type object;
#L14f432.   v10:= ".level" @type (object, string);
#L14f436.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f43c.   v9:= temp  @type object;
#L14f43e.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f444.   v9:= temp  @type object;
#L14f446.   call temp:=  [|java:util:Properties.getProperty|](v8, v9) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L14f44c.   v5:= temp  @type object;
#L14f44e.   if v5 == 0 then goto L14f3fc;
#L14f452.   call temp:=  [|java:util:logging:Level.parse|](v5) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L14f458.   v8:= temp  @type object;
#L14f45a.   call temp:=  [|java:util:logging:Logger.setLevel|](v4, v8) @signature [|Ljava/util/logging/Logger;.setLevel:(Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f460.   goto L14f3fc;
#L14f462.   v8:= v12.[|java:util:logging:LogManager.listeners|]   @type object;
#L14f466.   v9:= 0  @length 4;
#L14f468.   v10:= 0  @length 4;
#L14f46a.   v11:= 0  @length 4;
#L14f46c.   call temp:=  [|java:beans:PropertyChangeSupport.firePropertyChange|](v8, v9, v10, v11) @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L14f472.   (@monitorexit v12)
#L14f474.   return @void ;
  catch  [|any|] @[L14f376..L14f3e0] goto L14f3e2;
  catch  [|any|] @[L14f3e8..L14f472] goto L14f3e2;

   }
    procedure [|boolean|] [|java:util:logging:LogManager.addLogger|] ([|java:util:logging:LogManager|] v2 @type (this), [|java:util:logging:Logger|] v3 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.addLogger:(Ljava/util/logging/Logger;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L14f49c.   (@monitorenter v2)
#L14f49e.   call temp:=  [|java:util:logging:Logger.getName|](v3) @signature [|Ljava/util/logging/Logger;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f4a4.   v0:= temp  @type object;
#L14f4a6.   v1:= v2.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f4aa.   call temp:=  [|java:util:Hashtable.get|](v1, v0) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f4b0.   v1:= temp  @type object;
#L14f4b2.   if v1 == 0 then goto L14f4bc;
#L14f4b6.   v1:= 0  @length 4;
#L14f4b8.   (@monitorexit v2)
#L14f4ba.   return v1;
#L14f4bc.   call temp:=  [|java:util:logging:LogManager.addToFamilyTree|](v2, v3, v0) @signature [|Ljava/util/logging/LogManager;.addToFamilyTree:(Ljava/util/logging/Logger;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogManager|] @type direct;
#L14f4c2.   v1:= v2.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f4c6.   call temp:=  [|java:util:Hashtable.put|](v1, v0, v3) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f4cc.   call temp:=  [|java:util:logging:Logger.setManager|](v3, v2) @signature [|Ljava/util/logging/Logger;.setManager:(Ljava/util/logging/LogManager;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f4d2.   v1:= 1  @length 4;
#L14f4d4.   goto L14f4b8;
#L14f4d6.   v1:= Exception  @type object;
#L14f4d8.   (@monitorexit v2)
#L14f4da.   throw v1;
  catch  [|any|] @[L14f49e..L14f4b0] goto L14f4d6;
  catch  [|any|] @[L14f4bc..L14f4d2] goto L14f4d6;

   }
    procedure [|void|] [|java:util:logging:LogManager.addPropertyChangeListener|] ([|java:util:logging:LogManager|] v2 @type (this), [|java:beans:PropertyChangeListener|] v3 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14f500.   if v3 != 0 then goto L14f514;
#L14f504.   v0:= new [|java:lang:NullPointerException|];
#L14f508.   v1:= "l == null" @type (object, string);
#L14f50c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14f512.   throw v0;
#L14f514.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v2) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f51a.   v0:= v2.[|java:util:logging:LogManager.listeners|]   @type object;
#L14f51e.   call temp:=  [|java:beans:PropertyChangeSupport.addPropertyChangeListener|](v0, v3) @signature [|Ljava/beans/PropertyChangeSupport;.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L14f524.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogManager.checkAccess|] ([|java:util:logging:LogManager|] v0 @type (this)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @Access PUBLIC {
      local temp ;
      
#L14f538.   return @void ;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:LogManager.getLogger|] ([|java:util:logging:LogManager|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L14f54c.   (@monitorenter v1)
#L14f54e.   v0:= v1.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f552.   call temp:=  [|java:util:Hashtable.get|](v0, v2) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f558.   v0:= temp  @type object;
#L14f55a.   v0:= ([|java:util:logging:Logger|])v0;
#L14f55e.   (@monitorexit v1)
#L14f560.   return v0  @type object;
#L14f562.   v0:= Exception  @type object;
#L14f564.   (@monitorexit v1)
#L14f566.   throw v0;
  catch  [|any|] @[L14f54e..L14f55e] goto L14f562;

   }
    procedure [|java:util:Enumeration|] [|java:util:logging:LogManager.getLoggerNames|] ([|java:util:logging:LogManager|] v1 @type (this)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getLoggerNames:()Ljava/util/Enumeration;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L14f584.   (@monitorenter v1)
#L14f586.   v0:= v1.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f58a.   call temp:=  [|java:util:Hashtable.keys|](v0) @signature [|Ljava/util/Hashtable;.keys:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f590.   v0:= temp  @type object;
#L14f592.   (@monitorexit v1)
#L14f594.   return v0  @type object;
#L14f596.   v0:= Exception  @type object;
#L14f598.   (@monitorexit v1)
#L14f59a.   throw v0;
  catch  [|any|] @[L14f586..L14f590] goto L14f596;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:LogManager.getOrCreate|] ([|java:util:logging:LogManager|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getOrCreate:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L14f5b8.   (@monitorenter v2)
#L14f5ba.   call temp:=  [|java:util:logging:LogManager.getLogger|](v2, v3) @signature [|Ljava/util/logging/LogManager;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f5c0.   v0:= temp  @type object;
#L14f5c2.   if v0 != 0 then goto L14f5d6;
#L14f5c6.   v0:= new [|java:util:logging:Logger|];
#L14f5ca.   call temp:=  [|java:util:logging:Logger.<init>|](v0, v3, v4) @signature [|Ljava/util/logging/Logger;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14f5d0.   call temp:=  [|java:util:logging:LogManager.addLogger|](v2, v0) @signature [|Ljava/util/logging/LogManager;.addLogger:(Ljava/util/logging/Logger;)Z|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f5d6.   (@monitorexit v2)
#L14f5d8.   return v0  @type object;
#L14f5da.   v1:= Exception  @type object;
#L14f5dc.   (@monitorexit v2)
#L14f5de.   throw v1;
  catch  [|any|] @[L14f5ba..L14f5d6] goto L14f5da;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogManager.getProperty|] ([|java:util:logging:LogManager|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14f5fc.   v0:= v1.[|java:util:logging:LogManager.props|]   @type object;
#L14f600.   call temp:=  [|java:util:Properties.getProperty|](v0, v2) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L14f606.   v0:= temp  @type object;
#L14f608.   return v0  @type object;

   }
    procedure [|void|] [|java:util:logging:LogManager.readConfiguration|] ([|java:util:logging:LogManager|] v7 @type (this)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.readConfiguration:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L14f61c.   v5:= "java.util.logging.config.class" @type (object, string);
#L14f620.   call temp:=  [|java:lang:System.getProperty|](v5) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14f626.   v0:= temp  @type object;
#L14f628.   if v0 == 0 then goto L14f638;
#L14f62c.   call temp:=  [|java:util:logging:LogManager.getInstanceByClass|](v0) @signature [|Ljava/util/logging/LogManager;.getInstanceByClass:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14f632.   v5:= temp  @type object;
#L14f634.   if v5 != 0 then goto L14f6c2;
#L14f638.   v5:= "java.util.logging.config.file" @type (object, string);
#L14f63c.   call temp:=  [|java:lang:System.getProperty|](v5) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14f642.   v1:= temp  @type object;
#L14f644.   if v1 != 0 then goto L14f69e;
#L14f648.   v5:= new [|java:lang:StringBuilder|];
#L14f64c.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14f652.   v6:= "java.home" @type (object, string);
#L14f656.   call temp:=  [|java:lang:System.getProperty|](v6) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L14f65c.   v6:= temp  @type object;
#L14f65e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f664.   v5:= temp  @type object;
#L14f666.   v6:= @@[|java:io:File.separator|]   @type object;
#L14f66a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f670.   v5:= temp  @type object;
#L14f672.   v6:= "lib" @type (object, string);
#L14f676.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f67c.   v5:= temp  @type object;
#L14f67e.   v6:= @@[|java:io:File.separator|]   @type object;
#L14f682.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f688.   v5:= temp  @type object;
#L14f68a.   v6:= "logging.properties" @type (object, string);
#L14f68e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f694.   v5:= temp  @type object;
#L14f696.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14f69c.   v1:= temp  @type object;
#L14f69e.   v3:= 0  @length 4;
#L14f6a0.   v4:= new [|java:io:FileInputStream|];
#L14f6a4.   call temp:=  [|java:io:FileInputStream.<init>|](v4, v1) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L14f6aa.   v3:= v4  @type object;
#L14f6ac.   v5:= new [|java:io:BufferedInputStream|];
#L14f6b0.   call temp:=  [|java:io:BufferedInputStream.<init>|](v5, v3) @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L14f6b6.   call temp:=  [|java:util:logging:LogManager.readConfiguration|](v7, v5) @signature [|Ljava/util/logging/LogManager;.readConfiguration:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f6bc.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L14f6c2.   return @void ;
#L14f6c4.   v2:= Exception  @type object;
#L14f6c6.   v5:= new [|java:util:logging:LogManager|];
#L14f6ca.   v6:= "logging.properties" @type (object, string);
#L14f6ce.   call temp:=  [|java:lang:Class.getResourceAsStream|](v5, v6) @signature [|Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14f6d4.   v3:= temp  @type object;
#L14f6d6.   if v3 != 0 then goto L14f6ac;
#L14f6da.   throw v2;
#L14f6dc.   v5:= Exception  @type object;
#L14f6de.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L14f6e4.   throw v5;
  catch  [|java:io:IOException|] @[L14f6a0..L14f6aa] goto L14f6c4;
  catch  [|any|] @[L14f6a0..L14f6aa] goto L14f6dc;
  catch  [|any|] @[L14f6ac..L14f6bc] goto L14f6dc;
  catch  [|any|] @[L14f6c6..L14f6dc] goto L14f6dc;

   }
    procedure [|void|] [|java:util:logging:LogManager.readConfiguration|] ([|java:util:logging:LogManager|] v0 @type (this), [|java:io:InputStream|] v1 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.readConfiguration:(Ljava/io/InputStream;)V|] @Access PUBLIC {
      local temp ;
      
#L14f718.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f71e.   call temp:=  [|java:util:logging:LogManager.readConfigurationImpl|](v0, v1) @signature [|Ljava/util/logging/LogManager;.readConfigurationImpl:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:logging:LogManager|] @type direct;
#L14f724.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogManager.removePropertyChangeListener|] ([|java:util:logging:LogManager|] v1 @type (this), [|java:beans:PropertyChangeListener|] v2 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14f738.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v1) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f73e.   v0:= v1.[|java:util:logging:LogManager.listeners|]   @type object;
#L14f742.   call temp:=  [|java:beans:PropertyChangeSupport.removePropertyChangeListener|](v0, v2) @signature [|Ljava/beans/PropertyChangeSupport;.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L14f748.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogManager.reset|] ([|java:util:logging:LogManager|] v6 @type (this)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L14f75c.   (@monitorenter v6)
#L14f75e.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v6) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f764.   v4:= new [|java:util:Properties|];
#L14f768.   call temp:=  [|java:util:Properties.<init>|](v4) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L14f76e.   v6.[|java:util:logging:LogManager.props|]  := v4 @type object;
#L14f772.   call temp:=  [|java:util:logging:LogManager.getLoggerNames|](v6) @signature [|Ljava/util/logging/LogManager;.getLoggerNames:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f778.   v2:= temp  @type object;
#L14f77a.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v2) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L14f780.   v4:= temp;
#L14f782.   if v4 == 0 then goto L14f7ac;
#L14f786.   call temp:=  [|java:util:Enumeration.nextElement|](v2) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L14f78c.   v1:= temp  @type object;
#L14f78e.   v1:= ([|java:lang:String|])v1;
#L14f792.   call temp:=  [|java:util:logging:LogManager.getLogger|](v6, v1) @signature [|Ljava/util/logging/LogManager;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f798.   v0:= temp  @type object;
#L14f79a.   if v0 == 0 then goto L14f77a;
#L14f79e.   call temp:=  [|java:util:logging:Logger.reset|](v0) @signature [|Ljava/util/logging/Logger;.reset:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f7a4.   goto L14f77a;
#L14f7a6.   v4:= Exception  @type object;
#L14f7a8.   (@monitorexit v6)
#L14f7aa.   throw v4;
#L14f7ac.   v4:= v6.[|java:util:logging:LogManager.loggers|]   @type object;
#L14f7b0.   v5:= "" @type (object, string);
#L14f7b4.   call temp:=  [|java:util:Hashtable.get|](v4, v5) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L14f7ba.   v3:= temp  @type object;
#L14f7bc.   v3:= ([|java:util:logging:Logger|])v3;
#L14f7c0.   if v3 == 0 then goto L14f7ce;
#L14f7c4.   v4:= @@[|java:util:logging:Level.INFO|]   @type object;
#L14f7c8.   call temp:=  [|java:util:logging:Logger.setLevel|](v3, v4) @signature [|Ljava/util/logging/Logger;.setLevel:(Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f7ce.   (@monitorexit v6)
#L14f7d0.   return @void ;
  catch  [|any|] @[L14f75e..L14f7a4] goto L14f7a6;
  catch  [|any|] @[L14f7ac..L14f7ce] goto L14f7a6;

   }
    procedure [|void|] [|java:util:logging:LogManager.setLevelRecursively|] ([|java:util:logging:LogManager|] v4 @type (this), [|java:util:logging:Logger|] v5 @type (object), [|java:util:logging:Level|] v6 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.setLevelRecursively:(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L14f7f8.   (@monitorenter v4)
#L14f7fa.   v2:= v5.[|java:util:logging:Logger.levelIntVal|] ;
#L14f7fe.   v5.[|java:util:logging:Logger.levelObjVal|]  := v6 @type object;
#L14f802.   if v6 != 0 then goto L14f86c;
#L14f806.   v3:= v5.[|java:util:logging:Logger.parent|]   @type object;
#L14f80a.   if v3 == 0 then goto L14f85e;
#L14f80e.   v3:= v5.[|java:util:logging:Logger.parent|]   @type object;
#L14f812.   v3:= v3.[|java:util:logging:Logger.levelIntVal|] ;
#L14f816.   v5.[|java:util:logging:Logger.levelIntVal|]  := v3;
#L14f81a.   v3:= v5.[|java:util:logging:Logger.levelIntVal|] ;
#L14f81e.   if v2 == v3 then goto L14f87a;
#L14f822.   v3:= v5.[|java:util:logging:Logger.children|]   @type object;
#L14f826.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L14f82c.   v1:= temp  @type object;
#L14f82e.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f834.   v3:= temp;
#L14f836.   if v3 == 0 then goto L14f87a;
#L14f83a.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L14f840.   v0:= temp  @type object;
#L14f842.   v0:= ([|java:util:logging:Logger|])v0;
#L14f846.   v3:= v0.[|java:util:logging:Logger.levelObjVal|]   @type object;
#L14f84a.   if v3 != 0 then goto L14f82e;
#L14f84e.   v3:= 0  @length 4;
#L14f850.   call temp:=  [|java:util:logging:LogManager.setLevelRecursively|](v4, v0, v3) @signature [|Ljava/util/logging/LogManager;.setLevelRecursively:(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f856.   goto L14f82e;
#L14f858.   v3:= Exception  @type object;
#L14f85a.   (@monitorexit v4)
#L14f85c.   throw v3;
#L14f85e.   v3:= @@[|java:util:logging:Level.INFO|]   @type object;
#L14f862.   call temp:=  [|java:util:logging:Level.intValue|](v3) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14f868.   v3:= temp;
#L14f86a.   goto L14f816;
#L14f86c.   call temp:=  [|java:util:logging:Level.intValue|](v6) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14f872.   v3:= temp;
#L14f874.   v5.[|java:util:logging:Logger.levelIntVal|]  := v3;
#L14f878.   goto L14f81a;
#L14f87a.   (@monitorexit v4)
#L14f87c.   return @void ;
  catch  [|any|] @[L14f7fa..L14f856] goto L14f858;
  catch  [|any|] @[L14f85e..L14f878] goto L14f858;

   }
    procedure [|void|] [|java:util:logging:LogManager.setParent|] ([|java:util:logging:LogManager|] v1 @type (this), [|java:util:logging:Logger|] v2 @type (object), [|java:util:logging:Logger|] v3 @type (object)) @owner [|java:util:logging:LogManager|] @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L14f8a4.   (@monitorenter v1)
#L14f8a6.   v2.[|java:util:logging:Logger.parent|]  := v3 @type object;
#L14f8aa.   v0:= v2.[|java:util:logging:Logger.levelObjVal|]   @type object;
#L14f8ae.   if v0 != 0 then goto L14f8ba;
#L14f8b2.   v0:= 0  @length 4;
#L14f8b4.   call temp:=  [|java:util:logging:LogManager.setLevelRecursively|](v1, v2, v0) @signature [|Ljava/util/logging/LogManager;.setLevelRecursively:(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14f8ba.   v0:= v3.[|java:util:logging:Logger.children|]   @type object;
#L14f8be.   call temp:=  [|java:util:List.add|](v0, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L14f8c4.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v2) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14f8ca.   (@monitorexit v1)
#L14f8cc.   return @void ;
#L14f8ce.   v0:= Exception  @type object;
#L14f8d0.   (@monitorexit v1)
#L14f8d2.   throw v0;
  catch  [|any|] @[L14f8a6..L14f8ca] goto L14f8ce;

   }
record [|java:util:logging:LogRecord|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:util:logging:Level|] [|java:util:logging:LogRecord.level|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:LogRecord.loggerName|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:LogRecord.message|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:logging:LogRecord.millis|]    @AccessFlag PRIVATE;
      [|java:lang:Object|][] [|java:util:logging:LogRecord.parameters|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:ResourceBundle|] [|java:util:logging:LogRecord.resourceBundle|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:String|] [|java:util:logging:LogRecord.resourceBundleName|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:logging:LogRecord.sequenceNumber|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:logging:LogRecord.sourceClassName|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:logging:LogRecord.sourceInitialized|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:String|] [|java:util:logging:LogRecord.sourceMethodName|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:LogRecord.threadID|]    @AccessFlag PRIVATE;
      [|java:lang:Throwable|] [|java:util:logging:LogRecord.thrown|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:logging:LogRecord.MAJOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:logging:LogRecord.MINOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:logging:LogRecord.currentSequenceNumber|]    @AccessFlag PRIVATE_STATIC;
      global [|java:lang:ThreadLocal|] @@[|java:util:logging:LogRecord.currentThreadId|]    @AccessFlag PRIVATE_STATIC;
      global [|int|] @@[|java:util:logging:LogRecord.initThreadId|]    @AccessFlag PRIVATE_STATIC;
      global [|long|] @@[|java:util:logging:LogRecord.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:LogRecord.<clinit>|] () @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14f8f0.   v0:= 0  @length wide16;
#L14f8f4.   @@[|java:util:logging:LogRecord.currentSequenceNumber|] := v0  @wide;
#L14f8f8.   v0:= new [|java:lang:ThreadLocal|];
#L14f8fc.   call temp:=  [|java:lang:ThreadLocal.<init>|](v0) @signature [|Ljava/lang/ThreadLocal;.<init>:()V|] @classDescriptor [|java:lang:ThreadLocal|] @type direct;
#L14f902.   @@[|java:util:logging:LogRecord.currentThreadId|] := v0  @type object;
#L14f906.   v0:= 0  @length 4;
#L14f908.   @@[|java:util:logging:LogRecord.initThreadId|] := v0;
#L14f90c.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.<init>|] ([|java:util:logging:LogRecord|] v8 @type (this), [|java:util:logging:Level|] v9 @type (object), [|java:lang:String|] v10 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14f920.   v7:= 0  @length 4;
#L14f922.   call temp:=  [|java:lang:Object.<init>|](v8) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14f928.   if v9 != 0 then goto L14f93c;
#L14f92c.   v1:= new [|java:lang:NullPointerException|];
#L14f930.   v2:= "level == null" @type (object, string);
#L14f934.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14f93a.   throw v1;
#L14f93c.   v8.[|java:util:logging:LogRecord.level|]  := v9 @type object;
#L14f940.   v8.[|java:util:logging:LogRecord.message|]  := v10 @type object;
#L14f944.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L14f94a.   v1:= temp  @type wide;
#L14f94c.   v8.[|java:util:logging:LogRecord.millis|]  := v1 @wide;
#L14f950.   v2:= new [|java:util:logging:LogRecord|];
#L14f954.   (@monitorenter v2)
#L14f956.   v3:= @@[|java:util:logging:LogRecord.currentSequenceNumber|]   @wide;
#L14f95a.   v5:= 1  @length wide16;
#L14f95e.   v5:= v5 + v3  @type long;
#L14f960.   @@[|java:util:logging:LogRecord.currentSequenceNumber|] := v5  @wide;
#L14f964.   v8.[|java:util:logging:LogRecord.sequenceNumber|]  := v3 @wide;
#L14f968.   v1:= @@[|java:util:logging:LogRecord.currentThreadId|]   @type object;
#L14f96c.   call temp:=  [|java:lang:ThreadLocal.get|](v1) @signature [|Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L14f972.   v0:= temp  @type object;
#L14f974.   v0:= ([|java:lang:Integer|])v0;
#L14f978.   if v0 != 0 then goto L14f9c2;
#L14f97c.   v1:= @@[|java:util:logging:LogRecord.initThreadId|] ;
#L14f980.   v8.[|java:util:logging:LogRecord.threadID|]  := v1;
#L14f984.   v1:= @@[|java:util:logging:LogRecord.currentThreadId|]   @type object;
#L14f988.   v3:= @@[|java:util:logging:LogRecord.initThreadId|] ;
#L14f98c.   v4:= v3 + 1;
#L14f990.   @@[|java:util:logging:LogRecord.initThreadId|] := v4;
#L14f994.   call temp:=  [|java:lang:Integer.valueOf|](v3) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L14f99a.   v3:= temp  @type object;
#L14f99c.   call temp:=  [|java:lang:ThreadLocal.set|](v1, v3) @signature [|Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L14f9a2.   (@monitorexit v2)
#L14f9a4.   v8.[|java:util:logging:LogRecord.sourceClassName|]  := v7 @type object;
#L14f9a8.   v8.[|java:util:logging:LogRecord.sourceMethodName|]  := v7 @type object;
#L14f9ac.   v8.[|java:util:logging:LogRecord.loggerName|]  := v7 @type object;
#L14f9b0.   v8.[|java:util:logging:LogRecord.parameters|]  := v7 @type object;
#L14f9b4.   v8.[|java:util:logging:LogRecord.resourceBundle|]  := v7 @type object;
#L14f9b8.   v8.[|java:util:logging:LogRecord.resourceBundleName|]  := v7 @type object;
#L14f9bc.   v8.[|java:util:logging:LogRecord.thrown|]  := v7 @type object;
#L14f9c0.   return @void ;
#L14f9c2.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L14f9c8.   v1:= temp;
#L14f9ca.   v8.[|java:util:logging:LogRecord.threadID|]  := v1;
#L14f9ce.   goto L14f9a2;
#L14f9d0.   v1:= Exception  @type object;
#L14f9d2.   (@monitorexit v2)
#L14f9d4.   throw v1;
  catch  [|any|] @[L14f956..L14f9a4] goto L14f9d0;
  catch  [|any|] @[L14f9c2..L14f9d4] goto L14f9d0;

   }
    procedure [|void|] [|java:util:logging:LogRecord.initSource|] ([|java:util:logging:LogRecord|] v7 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.initSource:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L14f9fc.   v6:= v7.[|java:util:logging:LogRecord.sourceInitialized|]   @boolean;
#L14fa00.   if v6 == 0 then goto L14fa06;
#L14fa04.   return @void ;
#L14fa06.   v5:= 0  @length 4;
#L14fa08.   v6:= new [|java:lang:Throwable|];
#L14fa0c.   call temp:=  [|java:lang:Throwable.<init>|](v6) @signature [|Ljava/lang/Throwable;.<init>:()V|] @classDescriptor [|java:lang:Throwable|] @type direct;
#L14fa12.   call temp:=  [|java:lang:Throwable.getStackTrace|](v6) @signature [|Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L14fa18.   v0:= temp  @type object;
#L14fa1a.   v4:= v0.length;
#L14fa1c.   v3:= 0  @length 4;
#L14fa1e.   if v3 >= v4 then goto L14fa6a;
#L14fa22.   v2:= v0[v3]  @type object;
#L14fa26.   call temp:=  [|java:lang:StackTraceElement.getClassName|](v2) @signature [|Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L14fa2c.   v1:= temp  @type object;
#L14fa2e.   v6:= new [|java:util:logging:Logger|];
#L14fa32.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14fa38.   v6:= temp  @type object;
#L14fa3a.   call temp:=  [|java:lang:String.startsWith|](v1, v6) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L14fa40.   v6:= temp;
#L14fa42.   if v6 == 0 then goto L14fa4e;
#L14fa46.   v5:= 1  @length 4;
#L14fa48.   v3:= v3 + 1;
#L14fa4c.   goto L14fa1e;
#L14fa4e.   if v5 == 0 then goto L14fa48;
#L14fa52.   call temp:=  [|java:lang:StackTraceElement.getClassName|](v2) @signature [|Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L14fa58.   v6:= temp  @type object;
#L14fa5a.   v7.[|java:util:logging:LogRecord.sourceClassName|]  := v6 @type object;
#L14fa5e.   call temp:=  [|java:lang:StackTraceElement.getMethodName|](v2) @signature [|Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L14fa64.   v6:= temp  @type object;
#L14fa66.   v7.[|java:util:logging:LogRecord.sourceMethodName|]  := v6 @type object;
#L14fa6a.   v6:= 1  @length 4;
#L14fa6c.   v7.[|java:util:logging:LogRecord.sourceInitialized|]  := v6 @boolean;
#L14fa70.   goto L14fa04;

   }
    procedure [|void|] [|java:util:logging:LogRecord.readObject|] ([|java:util:logging:LogRecord|] v8 @type (this), [|java:io:ObjectInputStream|] v9 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L14fa84.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v9) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14fa8a.   call temp:=  [|java:io:ObjectInputStream.readByte|](v9) @signature [|Ljava/io/ObjectInputStream;.readByte:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14fa90.   v3:= temp;
#L14fa92.   call temp:=  [|java:io:ObjectInputStream.readByte|](v9) @signature [|Ljava/io/ObjectInputStream;.readByte:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14fa98.   v4:= temp;
#L14fa9a.   v5:= 1  @length 4;
#L14fa9c.   if v3 == v5 then goto L14faf6;
#L14faa0.   v5:= new [|java:io:IOException|];
#L14faa4.   v6:= new [|java:lang:StringBuilder|];
#L14faa8.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14faae.   v7:= "Different version " @type (object, string);
#L14fab2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14fab8.   v6:= temp  @type object;
#L14faba.   call temp:=  [|java:lang:Byte.valueOf|](v3) @signature [|Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;|] @classDescriptor [|java:lang:Byte|] @type static;
#L14fac0.   v7:= temp  @type object;
#L14fac2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14fac8.   v6:= temp  @type object;
#L14faca.   v7:= "." @type (object, string);
#L14face.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14fad4.   v6:= temp  @type object;
#L14fad6.   call temp:=  [|java:lang:Byte.valueOf|](v4) @signature [|Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;|] @classDescriptor [|java:lang:Byte|] @type static;
#L14fadc.   v7:= temp  @type object;
#L14fade.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14fae4.   v6:= temp  @type object;
#L14fae6.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L14faec.   v6:= temp  @type object;
#L14faee.   call temp:=  [|java:io:IOException.<init>|](v5, v6) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L14faf4.   throw v5;
#L14faf6.   call temp:=  [|java:io:ObjectInputStream.readInt|](v9) @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14fafc.   v2:= temp;
#L14fafe.   if v2 < 0 then goto L14fb2c;
#L14fb02.   v5:= new [|java:lang:Object|][v2];
#L14fb06.   v8.[|java:util:logging:LogRecord.parameters|]  := v5 @type object;
#L14fb0a.   v1:= 0  @length 4;
#L14fb0c.   v5:= v8.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fb10.   v5:= v5.length;
#L14fb12.   if v1 >= v5 then goto L14fb2c;
#L14fb16.   v5:= v8.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fb1a.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L14fb20.   v6:= temp  @type object;
#L14fb22.   v5[v1]:= v6  @type object;
#L14fb26.   v1:= v1 + 1;
#L14fb2a.   goto L14fb0c;
#L14fb2c.   v5:= v8.[|java:util:logging:LogRecord.resourceBundleName|]   @type object;
#L14fb30.   if v5 == 0 then goto L14fb44;
#L14fb34.   v5:= v8.[|java:util:logging:LogRecord.resourceBundleName|]   @type object;
#L14fb38.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v5) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L14fb3e.   v5:= temp  @type object;
#L14fb40.   v8.[|java:util:logging:LogRecord.resourceBundle|]  := v5 @type object;
#L14fb44.   return @void ;
#L14fb46.   v0:= Exception  @type object;
#L14fb48.   v5:= 0  @length 4;
#L14fb4a.   v8.[|java:util:logging:LogRecord.resourceBundle|]  := v5 @type object;
#L14fb4e.   goto L14fb44;
  catch  [|java:util:MissingResourceException|] @[L14fb34..L14fb44] goto L14fb46;

   }
    procedure [|void|] [|java:util:logging:LogRecord.writeObject|] ([|java:util:logging:LogRecord|] v5 @type (this), [|java:io:ObjectOutputStream|] v6 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L14fb70.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v6) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fb76.   v4:= 1  @length 4;
#L14fb78.   call temp:=  [|java:io:ObjectOutputStream.writeByte|](v6, v4) @signature [|Ljava/io/ObjectOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fb7e.   v4:= 4  @length 4;
#L14fb80.   call temp:=  [|java:io:ObjectOutputStream.writeByte|](v6, v4) @signature [|Ljava/io/ObjectOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fb86.   v4:= v5.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fb8a.   if v4 != 0 then goto L14fb98;
#L14fb8e.   v4:= -1  @length 4;
#L14fb90.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v6, v4) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fb96.   return @void ;
#L14fb98.   v4:= v5.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fb9c.   v4:= v4.length;
#L14fb9e.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v6, v4) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fba4.   v0:= v5.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fba8.   v3:= v0.length;
#L14fbaa.   v2:= 0  @length 4;
#L14fbac.   if v2 >= v3 then goto L14fb96;
#L14fbb0.   v1:= v0[v2]  @type object;
#L14fbb4.   if v1 != 0 then goto L14fbc6;
#L14fbb8.   v4:= 0  @length 4;
#L14fbba.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v6, v4) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L14fbc0.   v2:= v2 + 1;
#L14fbc4.   goto L14fbac;
#L14fbc6.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L14fbcc.   v4:= temp  @type object;
#L14fbce.   goto L14fbba;

   }
    procedure [|java:util:logging:Level|] [|java:util:logging:LogRecord.getLevel|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fbe0.   v0:= v1.[|java:util:logging:LogRecord.level|]   @type object;
#L14fbe4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogRecord.getLoggerName|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getLoggerName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fbf8.   v0:= v1.[|java:util:logging:LogRecord.loggerName|]   @type object;
#L14fbfc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogRecord.getMessage|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fc10.   v0:= v1.[|java:util:logging:LogRecord.message|]   @type object;
#L14fc14.   return v0  @type object;

   }
    procedure [|long|] [|java:util:logging:LogRecord.getMillis|] ([|java:util:logging:LogRecord|] v2 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getMillis:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14fc28.   v0:= v2.[|java:util:logging:LogRecord.millis|]   @wide;
#L14fc2c.   return v0  @type wide;

   }
    procedure [|java:lang:Object|][] [|java:util:logging:LogRecord.getParameters|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getParameters:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fc40.   v0:= v1.[|java:util:logging:LogRecord.parameters|]   @type object;
#L14fc44.   return v0  @type object;

   }
    procedure [|java:util:ResourceBundle|] [|java:util:logging:LogRecord.getResourceBundle|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getResourceBundle:()Ljava/util/ResourceBundle;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fc58.   v0:= v1.[|java:util:logging:LogRecord.resourceBundle|]   @type object;
#L14fc5c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogRecord.getResourceBundleName|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getResourceBundleName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fc70.   v0:= v1.[|java:util:logging:LogRecord.resourceBundleName|]   @type object;
#L14fc74.   return v0  @type object;

   }
    procedure [|long|] [|java:util:logging:LogRecord.getSequenceNumber|] ([|java:util:logging:LogRecord|] v2 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getSequenceNumber:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14fc88.   v0:= v2.[|java:util:logging:LogRecord.sequenceNumber|]   @wide;
#L14fc8c.   return v0  @type wide;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogRecord.getSourceClassName|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getSourceClassName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fca0.   call temp:=  [|java:util:logging:LogRecord.initSource|](v1) @signature [|Ljava/util/logging/LogRecord;.initSource:()V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L14fca6.   v0:= v1.[|java:util:logging:LogRecord.sourceClassName|]   @type object;
#L14fcaa.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:LogRecord.getSourceMethodName|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getSourceMethodName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fcbc.   call temp:=  [|java:util:logging:LogRecord.initSource|](v1) @signature [|Ljava/util/logging/LogRecord;.initSource:()V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L14fcc2.   v0:= v1.[|java:util:logging:LogRecord.sourceMethodName|]   @type object;
#L14fcc6.   return v0  @type object;

   }
    procedure [|int|] [|java:util:logging:LogRecord.getThreadID|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getThreadID:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fcd8.   v0:= v1.[|java:util:logging:LogRecord.threadID|] ;
#L14fcdc.   return v0;

   }
    procedure [|java:lang:Throwable|] [|java:util:logging:LogRecord.getThrown|] ([|java:util:logging:LogRecord|] v1 @type (this)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.getThrown:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fcf0.   v0:= v1.[|java:util:logging:LogRecord.thrown|]   @type object;
#L14fcf4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setLevel|] ([|java:util:logging:LogRecord|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setLevel:(Ljava/util/logging/Level;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14fd08.   if v3 != 0 then goto L14fd1c;
#L14fd0c.   v0:= new [|java:lang:NullPointerException|];
#L14fd10.   v1:= "level == null" @type (object, string);
#L14fd14.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14fd1a.   throw v0;
#L14fd1c.   v2.[|java:util:logging:LogRecord.level|]  := v3 @type object;
#L14fd20.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setLoggerName|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L14fd34.   v0.[|java:util:logging:LogRecord.loggerName|]  := v1 @type object;
#L14fd38.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setMessage|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setMessage:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L14fd4c.   v0.[|java:util:logging:LogRecord.message|]  := v1 @type object;
#L14fd50.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setMillis|] ([|java:util:logging:LogRecord|] v0 @type (this), [|long|] v1) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setMillis:(J)V|] @Access PUBLIC {
      local temp ;
      
#L14fd64.   v0.[|java:util:logging:LogRecord.millis|]  := v1 @wide;
#L14fd68.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setParameters|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:lang:Object|][] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L14fd7c.   v0.[|java:util:logging:LogRecord.parameters|]  := v1 @type object;
#L14fd80.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setResourceBundle|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:util:ResourceBundle|] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @Access PUBLIC {
      local temp ;
      
#L14fd94.   v0.[|java:util:logging:LogRecord.resourceBundle|]  := v1 @type object;
#L14fd98.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setResourceBundleName|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L14fdac.   v0.[|java:util:logging:LogRecord.resourceBundleName|]  := v1 @type object;
#L14fdb0.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setSequenceNumber|] ([|java:util:logging:LogRecord|] v0 @type (this), [|long|] v1) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setSequenceNumber:(J)V|] @Access PUBLIC {
      local temp ;
      
#L14fdc4.   v0.[|java:util:logging:LogRecord.sequenceNumber|]  := v1 @wide;
#L14fdc8.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setSourceClassName|] ([|java:util:logging:LogRecord|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fddc.   v0:= 1  @length 4;
#L14fdde.   v1.[|java:util:logging:LogRecord.sourceInitialized|]  := v0 @boolean;
#L14fde2.   v1.[|java:util:logging:LogRecord.sourceClassName|]  := v2 @type object;
#L14fde6.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setSourceMethodName|] ([|java:util:logging:LogRecord|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L14fdf8.   v0:= 1  @length 4;
#L14fdfa.   v1.[|java:util:logging:LogRecord.sourceInitialized|]  := v0 @boolean;
#L14fdfe.   v1.[|java:util:logging:LogRecord.sourceMethodName|]  := v2 @type object;
#L14fe02.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setThreadID|] ([|java:util:logging:LogRecord|] v0 @type (this), [|int|] v1) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setThreadID:(I)V|] @Access PUBLIC {
      local temp ;
      
#L14fe14.   v0.[|java:util:logging:LogRecord.threadID|]  := v1;
#L14fe18.   return @void ;

   }
    procedure [|void|] [|java:util:logging:LogRecord.setThrown|] ([|java:util:logging:LogRecord|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:util:logging:LogRecord|] @signature [|Ljava/util/logging/LogRecord;.setThrown:(Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
      
#L14fe2c.   v0.[|java:util:logging:LogRecord.thrown|]  := v1 @type object;
#L14fe30.   return @void ;

   }
record [|java:util:logging:Logger$1|]  @type class @AccessFlag FINAL extends  [|dalvik:system:DalvikLogHandler|] {
   }
    procedure [|void|] [|java:util:logging:Logger$1.<init>|] ([|java:util:logging:Logger$1|] v0 @type (this)) @owner [|java:util:logging:Logger$1|] @signature [|Ljava/util/logging/Logger$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L14fe44.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14fe4a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger$1.publish|] ([|java:util:logging:Logger$1|] v2 @type (this), [|java:util:logging:Logger|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:util:logging:Level|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:util:logging:Logger$1|] @signature [|Ljava/util/logging/Logger$1;.publish:(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L14fe5c.   v0:= new [|java:util:logging:LogRecord|];
#L14fe60.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v5, v6) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L14fe66.   call temp:=  [|java:util:logging:Logger.access$000|](v3) @signature [|Ljava/util/logging/Logger;.access$000:(Ljava/util/logging/Logger;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L14fe6c.   v1:= temp  @type object;
#L14fe6e.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L14fe74.   call temp:=  [|java:util:logging:Logger.access$100|](v3, v0) @signature [|Ljava/util/logging/Logger;.access$100:(Ljava/util/logging/Logger;Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L14fe7a.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14fe80.   return @void ;

   }
record [|java:util:logging:Logger|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|java:util:logging:Logger.androidTag|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:List|] [|java:util:logging:Logger.children|]    @AccessFlag FINAL;
      [|dalvik:system:DalvikLogHandler|] [|java:util:logging:Logger.dalvikLogHandler|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:logging:Filter|] [|java:util:logging:Logger.filter|]    @AccessFlag PRIVATE;
      [|java:util:List|] [|java:util:logging:Logger.handlers|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:util:logging:Logger.isNamed|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:Logger.levelIntVal|]    @AccessFlag VOLATILE;
      [|java:util:logging:Level|] [|java:util:logging:Logger.levelObjVal|]    @AccessFlag VOLATILE;
      [|java:lang:String|] [|java:util:logging:Logger.name|]    @AccessFlag PRIVATE_VOLATILE;
      [|boolean|] [|java:util:logging:Logger.notifyParentHandlers|]    @AccessFlag PRIVATE;
      [|java:util:logging:Logger|] [|java:util:logging:Logger.parent|]    @AccessFlag ;
      [|java:util:ResourceBundle|] [|java:util:logging:Logger.resourceBundle|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:lang:String|] [|java:util:logging:Logger.resourceBundleName|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|java:util:logging:Handler|][] @@[|java:util:logging:Logger.EMPTY_HANDLERS_ARRAY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|dalvik:system:DalvikLogHandler|] @@[|java:util:logging:Logger.GENERAL_LOG_HANDLER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:logging:Logger.GLOBAL_LOGGER_NAME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:logging:Logger|] @@[|java:util:logging:Logger.global|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:Logger.<clinit>|] () @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L14fe94.   v0:= new [|java:util:logging:Logger$1|];
#L14fe98.   call temp:=  [|java:util:logging:Logger$1.<init>|](v0) @signature [|Ljava/util/logging/Logger$1;.<init>:()V|] @classDescriptor [|java:util:logging:Logger$1|] @type direct;
#L14fe9e.   @@[|java:util:logging:Logger.GENERAL_LOG_HANDLER|] := v0  @type object;
#L14fea2.   v0:= new [|java:util:logging:Logger|];
#L14fea6.   v1:= "global" @type (object, string);
#L14feaa.   v2:= 0  @length 4;
#L14feac.   call temp:=  [|java:util:logging:Logger.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/Logger;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14feb2.   @@[|java:util:logging:Logger.global|] := v0  @type object;
#L14feb6.   v0:= 0  @length 4;
#L14feb8.   v0:= new [|java:util:logging:Handler|][v0];
#L14febc.   @@[|java:util:logging:Logger.EMPTY_HANDLERS_ARRAY|] := v0  @type object;
#L14fec0.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.<init>|] ([|java:util:logging:Logger|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L14fed4.   v1:= 1  @length 4;
#L14fed6.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14fedc.   v0:= @@[|java:util:logging:Level.INFO|]   @type object;
#L14fee0.   call temp:=  [|java:util:logging:Level.intValue|](v0) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L14fee6.   v0:= temp;
#L14fee8.   v2.[|java:util:logging:Logger.levelIntVal|]  := v0;
#L14feec.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList|];
#L14fef0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L14fef6.   v2.[|java:util:logging:Logger.handlers|]  := v0 @type object;
#L14fefa.   v2.[|java:util:logging:Logger.notifyParentHandlers|]  := v1 @boolean;
#L14fefe.   v2.[|java:util:logging:Logger.isNamed|]  := v1 @boolean;
#L14ff02.   v0:= new [|java:util:ArrayList|];
#L14ff06.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L14ff0c.   v2.[|java:util:logging:Logger.children|]  := v0 @type object;
#L14ff10.   v0:= @@[|java:util:logging:Logger.GENERAL_LOG_HANDLER|]   @type object;
#L14ff14.   v2.[|java:util:logging:Logger.dalvikLogHandler|]  := v0 @type object;
#L14ff18.   v2.[|java:util:logging:Logger.name|]  := v3 @type object;
#L14ff1c.   call temp:=  [|java:util:logging:Logger.initResourceBundle|](v2, v4) @signature [|Ljava/util/logging/Logger;.initResourceBundle:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14ff22.   call temp:=  [|dalvik:system:DalvikLogging.loggerNameToTag|](v3) @signature [|Ldalvik/system/DalvikLogging;.loggerNameToTag:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|dalvik:system:DalvikLogging|] @type static;
#L14ff28.   v0:= temp  @type object;
#L14ff2a.   v2.[|java:util:logging:Logger.androidTag|]  := v0 @type object;
#L14ff2e.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v2) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L14ff34.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:logging:Logger.access$000|] ([|java:util:logging:Logger|] v1 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.access$000:(Ljava/util/logging/Logger;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L14ff48.   v0:= v1.[|java:util:logging:Logger.name|]   @type object;
#L14ff4c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:logging:Logger.access$100|] ([|java:util:logging:Logger|] v0 @type (object), [|java:util:logging:LogRecord|] v1 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.access$100:(Ljava/util/logging/Logger;Ljava/util/logging/LogRecord;)V|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L14ff60.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v0, v1) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14ff66.   return @void ;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getAnonymousLogger|] () @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getAnonymousLogger:()Ljava/util/logging/Logger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L14ff78.   v0:= 0  @length 4;
#L14ff7a.   call temp:=  [|java:util:logging:Logger.getAnonymousLogger|](v0) @signature [|Ljava/util/logging/Logger;.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L14ff80.   v0:= temp  @type object;
#L14ff82.   return v0  @type object;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getAnonymousLogger|] ([|java:lang:String|] v3 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getAnonymousLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L14ff94.   v1:= new [|java:util:logging:Logger|];
#L14ff98.   v2:= 0  @length 4;
#L14ff9a.   call temp:=  [|java:util:logging:Logger.<init>|](v1, v2, v3) @signature [|Ljava/util/logging/Logger;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L14ffa0.   v2:= 0  @length 4;
#L14ffa2.   v1.[|java:util:logging:Logger.isNamed|]  := v2 @boolean;
#L14ffa6.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14ffac.   v0:= temp  @type object;
#L14ffae.   v2:= "" @type (object, string);
#L14ffb2.   call temp:=  [|java:util:logging:LogManager.getLogger|](v0, v2) @signature [|Ljava/util/logging/LogManager;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14ffb8.   v2:= temp  @type object;
#L14ffba.   call temp:=  [|java:util:logging:LogManager.setParent|](v0, v1, v2) @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14ffc0.   return v1  @type object;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getGlobal|] () @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getGlobal:()Ljava/util/logging/Logger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L14ffd4.   v0:= @@[|java:util:logging:Logger.global|]   @type object;
#L14ffd8.   return v0  @type object;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getLogger|] ([|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L14ffec.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L14fff2.   v0:= temp  @type object;
#L14fff4.   v1:= 0  @length 4;
#L14fff6.   call temp:=  [|java:util:logging:LogManager.getOrCreate|](v0, v2, v1) @signature [|Ljava/util/logging/LogManager;.getOrCreate:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L14fffc.   v0:= temp  @type object;
#L14fffe.   return v0  @type object;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getLogger|] ([|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L150010.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150016.   v1:= temp  @type object;
#L150018.   call temp:=  [|java:util:logging:LogManager.getOrCreate|](v1, v2, v3) @signature [|Ljava/util/logging/LogManager;.getOrCreate:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L15001e.   v0:= temp  @type object;
#L150020.   call temp:=  [|java:util:logging:Logger.initResourceBundle|](v0, v3) @signature [|Ljava/util/logging/Logger;.initResourceBundle:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150026.   return v0  @type object;

   }
    procedure [|void|] [|java:util:logging:Logger.initResourceBundle|] ([|java:util:logging:Logger|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.initResourceBundle:(Ljava/lang/String;)V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L150038.   (@monitorenter v4)
#L15003a.   v0:= v4.[|java:util:logging:Logger.resourceBundleName|]   @type object;
#L15003e.   if v0 == 0 then goto L1500aa;
#L150042.   call temp:=  [|java:lang:String.equals|](v0, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L150048.   v1:= temp;
#L15004a.   if v1 == 0 then goto L150052;
#L15004e.   (@monitorexit v4)
#L150050.   return @void ;
#L150052.   v1:= new [|java:lang:IllegalArgumentException|];
#L150056.   v2:= new [|java:lang:StringBuilder|];
#L15005a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150060.   v3:= "Resource bundle name '" @type (object, string);
#L150064.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15006a.   v2:= temp  @type object;
#L15006c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150072.   v2:= temp  @type object;
#L150074.   v3:= "' is inconsistent with the existing '" @type (object, string);
#L150078.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15007e.   v2:= temp  @type object;
#L150080.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150086.   v2:= temp  @type object;
#L150088.   v3:= "'" @type (object, string);
#L15008c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150092.   v2:= temp  @type object;
#L150094.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15009a.   v2:= temp  @type object;
#L15009c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1500a2.   throw v1;
#L1500a4.   v1:= Exception  @type object;
#L1500a6.   (@monitorexit v4)
#L1500a8.   throw v1;
#L1500aa.   if v5 == 0 then goto L15004e;
#L1500ae.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v5) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L1500b4.   v1:= temp  @type object;
#L1500b6.   v4.[|java:util:logging:Logger.resourceBundle|]  := v1 @type object;
#L1500ba.   v4.[|java:util:logging:Logger.resourceBundleName|]  := v5 @type object;
#L1500be.   goto L15004e;
  catch  [|any|] @[L15003a..L150048] goto L1500a4;
  catch  [|any|] @[L150052..L1500a4] goto L1500a4;
  catch  [|any|] @[L1500ae..L1500be] goto L1500a4;

   }
    procedure [|boolean|] [|java:util:logging:Logger.internalIsLoggable|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:Level|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1500ec.   v1:= 0  @length 4;
#L1500ee.   v0:= v3.[|java:util:logging:Logger.levelIntVal|] ;
#L1500f2.   v2:= @@[|java:util:logging:Level.OFF|]   @type object;
#L1500f6.   call temp:=  [|java:util:logging:Level.intValue|](v2) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L1500fc.   v2:= temp;
#L1500fe.   if v0 != v2 then goto L150104;
#L150102.   return v1;
#L150104.   call temp:=  [|java:util:logging:Level.intValue|](v4) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L15010a.   v2:= temp;
#L15010c.   if v2 < v0 then goto L150102;
#L150110.   v1:= 1  @length 4;
#L150112.   goto L150102;

   }
    procedure [|java:util:ResourceBundle|] [|java:util:logging:Logger.loadResourceBundle|] ([|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L150124.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L15012a.   v1:= temp  @type object;
#L15012c.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v1) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L150132.   v0:= temp  @type object;
#L150134.   if v0 == 0 then goto L15014c;
#L150138.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L15013e.   v1:= temp  @type object;
#L150140.   call temp:=  [|java:util:ResourceBundle.getBundle|](v4, v1, v0) @signature [|Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:ResourceBundle|] @type static;
#L150146.   v1:= temp  @type object;
#L150148.   return v1  @type object;
#L15014a.   v1:= Exception  @type object;
#L15014c.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L150152.   v0:= temp  @type object;
#L150154.   if v0 == 0 then goto L15016c;
#L150158.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L15015e.   v1:= temp  @type object;
#L150160.   call temp:=  [|java:util:ResourceBundle.getBundle|](v4, v1, v0) @signature [|Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:ResourceBundle|] @type static;
#L150166.   v1:= temp  @type object;
#L150168.   goto L150148;
#L15016a.   v1:= Exception  @type object;
#L15016c.   v1:= new [|java:util:MissingResourceException|];
#L150170.   v2:= new [|java:lang:StringBuilder|];
#L150174.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15017a.   v3:= "Failed to load the specified resource bundle \"" @type (object, string);
#L15017e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150184.   v2:= temp  @type object;
#L150186.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15018c.   v2:= temp  @type object;
#L15018e.   v3:= "\"" @type (object, string);
#L150192.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150198.   v2:= temp  @type object;
#L15019a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1501a0.   v2:= temp  @type object;
#L1501a2.   v3:= 0  @length 4;
#L1501a4.   call temp:=  [|java:util:MissingResourceException.<init>|](v1, v2, v4, v3) @signature [|Ljava/util/MissingResourceException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:MissingResourceException|] @type direct;
#L1501aa.   throw v1;
  catch  [|java:util:MissingResourceException|] @[L150138..L150146] goto L15014a;
  catch  [|java:util:MissingResourceException|] @[L150158..L150166] goto L15016a;

   }
    procedure [|void|] [|java:util:logging:Logger.setResourceBundle|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:LogRecord|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1501d8.   v0:= v3  @type object;
#L1501da.   if v0 == 0 then goto L1501f6;
#L1501de.   v1:= v0.[|java:util:logging:Logger.resourceBundleName|]   @type object;
#L1501e2.   if v1 == 0 then goto L1501f8;
#L1501e6.   v2:= v0.[|java:util:logging:Logger.resourceBundle|]   @type object;
#L1501ea.   call temp:=  [|java:util:logging:LogRecord.setResourceBundle|](v4, v2) @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1501f0.   call temp:=  [|java:util:logging:LogRecord.setResourceBundleName|](v4, v1) @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1501f6.   return @void ;
#L1501f8.   v0:= v0.[|java:util:logging:Logger.parent|]   @type object;
#L1501fc.   goto L1501da;

   }
    procedure [|void|] [|java:util:logging:Logger.addHandler|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Handler|] v3 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.addHandler:(Ljava/util/logging/Handler;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150210.   if v3 != 0 then goto L150224;
#L150214.   v0:= new [|java:lang:NullPointerException|];
#L150218.   v1:= "handler == null" @type (object, string);
#L15021c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L150222.   throw v0;
#L150224.   v0:= v2.[|java:util:logging:Logger.isNamed|]   @boolean;
#L150228.   if v0 == 0 then goto L15023a;
#L15022c.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150232.   v0:= temp  @type object;
#L150234.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L15023a.   v0:= v2.[|java:util:logging:Logger.handlers|]   @type object;
#L15023e.   call temp:=  [|java:util:List.add|](v0, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L150244.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v2) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L15024a.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.config|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.config:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15025c.   v0:= @@[|java:util:logging:Level.CONFIG|]   @type object;
#L150260.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150266.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.entering|] ([|java:util:logging:Logger|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.entering:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150278.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L15027c.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v1) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150282.   v1:= temp;
#L150284.   if v1 != 0 then goto L15028a;
#L150288.   return @void ;
#L15028a.   v0:= new [|java:util:logging:LogRecord|];
#L15028e.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L150292.   v2:= "ENTRY" @type (object, string);
#L150296.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L15029c.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L1502a0.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1502a6.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1502ac.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1502b2.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1502b8.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1502be.   goto L150288;

   }
    procedure [|void|] [|java:util:logging:Logger.entering|] ([|java:util:logging:Logger|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.entering:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1502d0.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1502d4.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v1) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1502da.   v1:= temp;
#L1502dc.   if v1 != 0 then goto L1502e2;
#L1502e0.   return @void ;
#L1502e2.   v0:= new [|java:util:logging:LogRecord|];
#L1502e6.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1502ea.   v2:= "ENTRY {0}" @type (object, string);
#L1502ee.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L1502f4.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L1502f8.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1502fe.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150304.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15030a.   v1:= 1  @length 4;
#L15030c.   v1:= new [|java:lang:Object|][v1];
#L150310.   v2:= 0  @length 4;
#L150312.   v1[v2]:= v6  @type object;
#L150316.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15031c.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150322.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150328.   goto L1502e0;

   }
    procedure [|void|] [|java:util:logging:Logger.entering|] ([|java:util:logging:Logger|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|java:lang:String|] v8 @type (object), [|java:lang:Object|][] v9 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.entering:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L15033c.   v4:= @@[|java:util:logging:Level.FINER|]   @type object;
#L150340.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v6, v4) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150346.   v4:= temp;
#L150348.   if v4 != 0 then goto L15034e;
#L15034c.   return @void ;
#L15034e.   v1:= "ENTRY" @type (object, string);
#L150352.   if v9 == 0 then goto L150398;
#L150356.   v2:= new [|java:lang:StringBuilder|];
#L15035a.   v4:= "ENTRY" @type (object, string);
#L15035e.   call temp:=  [|java:lang:StringBuilder.<init>|](v2, v4) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150364.   v0:= 0  @length 4;
#L150366.   v4:= v9.length;
#L150368.   if v0 >= v4 then goto L150390;
#L15036c.   v4:= " {" @type (object, string);
#L150370.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150376.   v4:= temp  @type object;
#L150378.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15037e.   v4:= temp  @type object;
#L150380.   v5:= "}" @type (object, string);
#L150384.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15038a.   v0:= v0 + 1;
#L15038e.   goto L150366;
#L150390.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150396.   v1:= temp  @type object;
#L150398.   v3:= new [|java:util:logging:LogRecord|];
#L15039c.   v4:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1503a0.   call temp:=  [|java:util:logging:LogRecord.<init>|](v3, v4, v1) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L1503a6.   v4:= v6.[|java:util:logging:Logger.name|]   @type object;
#L1503aa.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v3, v4) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1503b0.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v3, v7) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1503b6.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v3, v8) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1503bc.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v3, v9) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1503c2.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v6, v3) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1503c8.   call temp:=  [|java:util:logging:Logger.log|](v6, v3) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1503ce.   goto L15034c;

   }
    procedure [|void|] [|java:util:logging:Logger.exiting|] ([|java:util:logging:Logger|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.exiting:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1503e0.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1503e4.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v1) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1503ea.   v1:= temp;
#L1503ec.   if v1 != 0 then goto L1503f2;
#L1503f0.   return @void ;
#L1503f2.   v0:= new [|java:util:logging:LogRecord|];
#L1503f6.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1503fa.   v2:= "RETURN" @type (object, string);
#L1503fe.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150404.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L150408.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15040e.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150414.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15041a.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150420.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150426.   goto L1503f0;

   }
    procedure [|void|] [|java:util:logging:Logger.exiting|] ([|java:util:logging:Logger|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.exiting:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150438.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L15043c.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v1) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150442.   v1:= temp;
#L150444.   if v1 != 0 then goto L15044a;
#L150448.   return @void ;
#L15044a.   v0:= new [|java:util:logging:LogRecord|];
#L15044e.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L150452.   v2:= "RETURN {0}" @type (object, string);
#L150456.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L15045c.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L150460.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150466.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15046c.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150472.   v1:= 1  @length 4;
#L150474.   v1:= new [|java:lang:Object|][v1];
#L150478.   v2:= 0  @length 4;
#L15047a.   v1[v2]:= v6  @type object;
#L15047e.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150484.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L15048a.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150490.   goto L150448;

   }
    procedure [|void|] [|java:util:logging:Logger.fine|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1504a4.   v0:= @@[|java:util:logging:Level.FINE|]   @type object;
#L1504a8.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1504ae.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.finer|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.finer:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1504c0.   v0:= @@[|java:util:logging:Level.FINER|]   @type object;
#L1504c4.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1504ca.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.finest|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.finest:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1504dc.   v0:= @@[|java:util:logging:Level.FINEST|]   @type object;
#L1504e0.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1504e6.   return @void ;

   }
    procedure [|java:util:logging:Filter|] [|java:util:logging:Logger.getFilter|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getFilter:()Ljava/util/logging/Filter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1504f8.   v0:= v1.[|java:util:logging:Logger.filter|]   @type object;
#L1504fc.   return v0  @type object;

   }
    procedure [|java:util:logging:Handler|][] [|java:util:logging:Logger.getHandlers|] ([|java:util:logging:Logger|] v2 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getHandlers:()[Ljava/util/logging/Handler;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150510.   v0:= v2.[|java:util:logging:Logger.handlers|]   @type object;
#L150514.   v1:= @@[|java:util:logging:Logger.EMPTY_HANDLERS_ARRAY|]   @type object;
#L150518.   call temp:=  [|java:util:List.toArray|](v0, v1) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L15051e.   v0:= temp  @type object;
#L150520.   v0:= ([|java:util:logging:Handler|][])v0;
#L150524.   return v0  @type object;

   }
    procedure [|java:util:logging:Level|] [|java:util:logging:Logger.getLevel|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getLevel:()Ljava/util/logging/Level;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150538.   v0:= v1.[|java:util:logging:Logger.levelObjVal|]   @type object;
#L15053c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:Logger.getName|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150550.   v0:= v1.[|java:util:logging:Logger.name|]   @type object;
#L150554.   return v0  @type object;

   }
    procedure [|java:util:logging:Logger|] [|java:util:logging:Logger.getParent|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getParent:()Ljava/util/logging/Logger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150568.   v0:= v1.[|java:util:logging:Logger.parent|]   @type object;
#L15056c.   return v0  @type object;

   }
    procedure [|java:util:ResourceBundle|] [|java:util:logging:Logger.getResourceBundle|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getResourceBundle:()Ljava/util/ResourceBundle;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150580.   v0:= v1.[|java:util:logging:Logger.resourceBundle|]   @type object;
#L150584.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:Logger.getResourceBundleName|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getResourceBundleName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150598.   v0:= v1.[|java:util:logging:Logger.resourceBundleName|]   @type object;
#L15059c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:logging:Logger.getUseParentHandlers|] ([|java:util:logging:Logger|] v1 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.getUseParentHandlers:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1505b0.   v0:= v1.[|java:util:logging:Logger.notifyParentHandlers|]   @boolean;
#L1505b4.   return v0;

   }
    procedure [|void|] [|java:util:logging:Logger.info|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1505c8.   v0:= @@[|java:util:logging:Level.INFO|]   @type object;
#L1505cc.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1505d2.   return @void ;

   }
    procedure [|boolean|] [|java:util:logging:Logger.isLoggable|] ([|java:util:logging:Logger|] v1 @type (this), [|java:util:logging:Level|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1505e4.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v1, v2) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1505ea.   v0:= temp;
#L1505ec.   return v0;

   }
    procedure [|void|] [|java:util:logging:Logger.log|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150600.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150606.   v0:= temp;
#L150608.   if v0 != 0 then goto L15060e;
#L15060c.   return @void ;
#L15060e.   v0:= v2.[|java:util:logging:Logger.dalvikLogHandler|]   @type object;
#L150612.   v1:= v2.[|java:util:logging:Logger.androidTag|]   @type object;
#L150616.   call temp:=  [|dalvik:system:DalvikLogHandler.publish|](v0, v2, v1, v3, v4) @signature [|Ldalvik/system/DalvikLogHandler;.publish:(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:DalvikLogHandler|] @type interface;
#L15061c.   goto L15060c;

   }
    procedure [|void|] [|java:util:logging:Logger.log|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:Level|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150630.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v4) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150636.   v1:= temp;
#L150638.   if v1 != 0 then goto L15063e;
#L15063c.   return @void ;
#L15063e.   v0:= new [|java:util:logging:LogRecord|];
#L150642.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v4, v5) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150648.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L15064c.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150652.   v1:= 1  @length 4;
#L150654.   v1:= new [|java:lang:Object|][v1];
#L150658.   v2:= 0  @length 4;
#L15065a.   v1[v2]:= v6  @type object;
#L15065e.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150664.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L15066a.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150670.   goto L15063c;

   }
    procedure [|void|] [|java:util:logging:Logger.log|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:Throwable|] v5 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150684.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L15068a.   v1:= temp;
#L15068c.   if v1 != 0 then goto L150692;
#L150690.   return @void ;
#L150692.   v0:= new [|java:util:logging:LogRecord|];
#L150696.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v4) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L15069c.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L1506a0.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1506a6.   call temp:=  [|java:util:logging:LogRecord.setThrown|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setThrown:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1506ac.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v2, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1506b2.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1506b8.   goto L150690;

   }
    procedure [|void|] [|java:util:logging:Logger.log|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:Object|][] v5 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1506cc.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1506d2.   v1:= temp;
#L1506d4.   if v1 != 0 then goto L1506da;
#L1506d8.   return @void ;
#L1506da.   v0:= new [|java:util:logging:LogRecord|];
#L1506de.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v4) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L1506e4.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L1506e8.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1506ee.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1506f4.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v2, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1506fa.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150700.   goto L1506d8;

   }
    procedure [|void|] [|java:util:logging:Logger.log|] ([|java:util:logging:Logger|] v10 @type (this), [|java:util:logging:LogRecord|] v11 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L150714.   call temp:=  [|java:util:logging:LogRecord.getLevel|](v11) @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15071a.   v9:= temp  @type object;
#L15071c.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v10, v9) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150722.   v9:= temp;
#L150724.   if v9 != 0 then goto L15072a;
#L150728.   return @void ;
#L15072a.   v3:= v10.[|java:util:logging:Logger.filter|]   @type object;
#L15072e.   if v3 == 0 then goto L15073e;
#L150732.   call temp:=  [|java:util:logging:Filter.isLoggable|](v3, v11) @signature [|Ljava/util/logging/Filter;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:Filter|] @type interface;
#L150738.   v9:= temp;
#L15073a.   if v9 == 0 then goto L150728;
#L15073e.   call temp:=  [|java:util:logging:Logger.getHandlers|](v10) @signature [|Ljava/util/logging/Logger;.getHandlers:()[Ljava/util/logging/Handler;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150744.   v0:= temp  @type object;
#L150746.   v1:= v0  @type object;
#L150748.   v6:= v1.length;
#L15074a.   v5:= 0  @length 4;
#L15074c.   if v5 >= v6 then goto L150760;
#L150750.   v2:= v1[v5]  @type object;
#L150754.   call temp:=  [|java:util:logging:Handler.publish|](v2, v11) @signature [|Ljava/util/logging/Handler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L15075a.   v5:= v5 + 1;
#L15075e.   goto L15074c;
#L150760.   v7:= v10  @type object;
#L150762.   v8:= v7.[|java:util:logging:Logger.parent|]   @type object;
#L150766.   if v8 == 0 then goto L150728;
#L15076a.   call temp:=  [|java:util:logging:Logger.getUseParentHandlers|](v7) @signature [|Ljava/util/logging/Logger;.getUseParentHandlers:()Z|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150770.   v9:= temp;
#L150772.   if v9 == 0 then goto L150728;
#L150776.   call temp:=  [|java:util:logging:Logger.getHandlers|](v8) @signature [|Ljava/util/logging/Logger;.getHandlers:()[Ljava/util/logging/Handler;|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L15077c.   v4:= temp  @type object;
#L15077e.   v1:= v4  @type object;
#L150780.   v6:= v1.length;
#L150782.   v5:= 0  @length 4;
#L150784.   if v5 >= v6 then goto L150798;
#L150788.   v2:= v1[v5]  @type object;
#L15078c.   call temp:=  [|java:util:logging:Handler.publish|](v2, v11) @signature [|Ljava/util/logging/Handler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L150792.   v5:= v5 + 1;
#L150796.   goto L150784;
#L150798.   v7:= v8  @type object;
#L15079a.   v8:= v7.[|java:util:logging:Logger.parent|]   @type object;
#L15079e.   goto L150766;

   }
    procedure [|void|] [|java:util:logging:Logger.logp|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1507b0.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1507b6.   v1:= temp;
#L1507b8.   if v1 != 0 then goto L1507be;
#L1507bc.   return @void ;
#L1507be.   v0:= new [|java:util:logging:LogRecord|];
#L1507c2.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v6) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L1507c8.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L1507cc.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1507d2.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1507d8.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1507de.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v2, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1507e4.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1507ea.   goto L1507bc;

   }
    procedure [|void|] [|java:util:logging:Logger.logp|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:Level|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1507fc.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v4) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150802.   v1:= temp;
#L150804.   if v1 != 0 then goto L15080a;
#L150808.   return @void ;
#L15080a.   v0:= new [|java:util:logging:LogRecord|];
#L15080e.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v4, v7) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150814.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L150818.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15081e.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150824.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15082a.   v1:= 1  @length 4;
#L15082c.   v1:= new [|java:lang:Object|][v1];
#L150830.   v2:= 0  @length 4;
#L150832.   v1[v2]:= v8  @type object;
#L150836.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15083c.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150842.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150848.   goto L150808;

   }
    procedure [|void|] [|java:util:logging:Logger.logp|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:Throwable|] v7 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15085c.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150862.   v1:= temp;
#L150864.   if v1 != 0 then goto L15086a;
#L150868.   return @void ;
#L15086a.   v0:= new [|java:util:logging:LogRecord|];
#L15086e.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v6) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150874.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L150878.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15087e.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150884.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15088a.   call temp:=  [|java:util:logging:LogRecord.setThrown|](v0, v7) @signature [|Ljava/util/logging/LogRecord;.setThrown:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150890.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v2, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150896.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L15089c.   goto L150868;

   }
    procedure [|void|] [|java:util:logging:Logger.logp|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:Object|][] v7 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1508b0.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1508b6.   v1:= temp;
#L1508b8.   if v1 != 0 then goto L1508be;
#L1508bc.   return @void ;
#L1508be.   v0:= new [|java:util:logging:LogRecord|];
#L1508c2.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v6) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L1508c8.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L1508cc.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1508d2.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1508d8.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1508de.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v7) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1508e4.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v2, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L1508ea.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1508f0.   goto L1508bc;

   }
    procedure [|void|] [|java:util:logging:Logger.logrb|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150904.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L15090a.   v1:= temp;
#L15090c.   if v1 != 0 then goto L150912;
#L150910.   return @void ;
#L150912.   v0:= new [|java:util:logging:LogRecord|];
#L150916.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v7) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L15091c.   if v6 == 0 then goto L150934;
#L150920.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v6) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L150926.   v1:= temp  @type object;
#L150928.   call temp:=  [|java:util:logging:LogRecord.setResourceBundle|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15092e.   call temp:=  [|java:util:logging:LogRecord.setResourceBundleName|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150934.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L150938.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15093e.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150944.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15094a.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150950.   goto L150910;
#L150952.   v1:= Exception  @type object;
#L150954.   goto L15092e;
  catch  [|java:util:MissingResourceException|] @[L150920..L15092e] goto L150952;

   }
    procedure [|void|] [|java:util:logging:Logger.logrb|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:Level|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:String|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150978.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v4) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L15097e.   v1:= temp;
#L150980.   if v1 != 0 then goto L150986;
#L150984.   return @void ;
#L150986.   v0:= new [|java:util:logging:LogRecord|];
#L15098a.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v4, v8) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150990.   if v7 == 0 then goto L1509a8;
#L150994.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v7) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L15099a.   v1:= temp  @type object;
#L15099c.   call temp:=  [|java:util:logging:LogRecord.setResourceBundle|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509a2.   call temp:=  [|java:util:logging:LogRecord.setResourceBundleName|](v0, v7) @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509a8.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L1509ac.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509b2.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509b8.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509be.   v1:= 1  @length 4;
#L1509c0.   v1:= new [|java:lang:Object|][v1];
#L1509c4.   v2:= 0  @length 4;
#L1509c6.   v1[v2]:= v9  @type object;
#L1509ca.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1509d0.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L1509d6.   goto L150984;
#L1509d8.   v1:= Exception  @type object;
#L1509da.   goto L1509a2;
  catch  [|java:util:MissingResourceException|] @[L150994..L1509a2] goto L1509d8;

   }
    procedure [|void|] [|java:util:logging:Logger.logrb|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:Throwable|] v8 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1509fc.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150a02.   v1:= temp;
#L150a04.   if v1 != 0 then goto L150a0a;
#L150a08.   return @void ;
#L150a0a.   v0:= new [|java:util:logging:LogRecord|];
#L150a0e.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v7) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150a14.   if v6 == 0 then goto L150a2c;
#L150a18.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v6) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L150a1e.   v1:= temp  @type object;
#L150a20.   call temp:=  [|java:util:logging:LogRecord.setResourceBundle|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a26.   call temp:=  [|java:util:logging:LogRecord.setResourceBundleName|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a2c.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L150a30.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a36.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a3c.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a42.   call temp:=  [|java:util:logging:LogRecord.setThrown|](v0, v8) @signature [|Ljava/util/logging/LogRecord;.setThrown:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a48.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150a4e.   goto L150a08;
#L150a50.   v1:= Exception  @type object;
#L150a52.   goto L150a26;
  catch  [|java:util:MissingResourceException|] @[L150a18..L150a26] goto L150a50;

   }
    procedure [|void|] [|java:util:logging:Logger.logrb|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:Object|][] v8 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150a74.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v2, v3) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150a7a.   v1:= temp;
#L150a7c.   if v1 != 0 then goto L150a82;
#L150a80.   return @void ;
#L150a82.   v0:= new [|java:util:logging:LogRecord|];
#L150a86.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v3, v7) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150a8c.   if v6 == 0 then goto L150aa4;
#L150a90.   call temp:=  [|java:util:logging:Logger.loadResourceBundle|](v6) @signature [|Ljava/util/logging/Logger;.loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L150a96.   v1:= temp  @type object;
#L150a98.   call temp:=  [|java:util:logging:LogRecord.setResourceBundle|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setResourceBundle:(Ljava/util/ResourceBundle;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150a9e.   call temp:=  [|java:util:logging:LogRecord.setResourceBundleName|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setResourceBundleName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150aa4.   v1:= v2.[|java:util:logging:Logger.name|]   @type object;
#L150aa8.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150aae.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150ab4.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150aba.   call temp:=  [|java:util:logging:LogRecord.setParameters|](v0, v8) @signature [|Ljava/util/logging/LogRecord;.setParameters:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150ac0.   call temp:=  [|java:util:logging:Logger.log|](v2, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150ac6.   goto L150a80;
#L150ac8.   v1:= Exception  @type object;
#L150aca.   goto L150a9e;
  catch  [|java:util:MissingResourceException|] @[L150a90..L150a9e] goto L150ac8;

   }
    procedure [|void|] [|java:util:logging:Logger.removeHandler|] ([|java:util:logging:Logger|] v1 @type (this), [|java:util:logging:Handler|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.removeHandler:(Ljava/util/logging/Handler;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150aec.   v0:= v1.[|java:util:logging:Logger.isNamed|]   @boolean;
#L150af0.   if v0 == 0 then goto L150b02;
#L150af4.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150afa.   v0:= temp  @type object;
#L150afc.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150b02.   if v2 != 0 then goto L150b08;
#L150b06.   return @void ;
#L150b08.   v0:= v1.[|java:util:logging:Logger.handlers|]   @type object;
#L150b0c.   call temp:=  [|java:util:List.remove|](v0, v2) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L150b12.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v1) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150b18.   goto L150b06;

   }
    procedure [|void|] [|java:util:logging:Logger.reset|] ([|java:util:logging:Logger|] v3 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.reset:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L150b2c.   v2:= 0  @length 4;
#L150b2e.   v3.[|java:util:logging:Logger.levelObjVal|]  := v2 @type object;
#L150b32.   v2:= @@[|java:util:logging:Level.INFO|]   @type object;
#L150b36.   call temp:=  [|java:util:logging:Level.intValue|](v2) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L150b3c.   v2:= temp;
#L150b3e.   v3.[|java:util:logging:Logger.levelIntVal|]  := v2;
#L150b42.   v2:= v3.[|java:util:logging:Logger.handlers|]   @type object;
#L150b46.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L150b4c.   v1:= temp  @type object;
#L150b4e.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150b54.   v2:= temp;
#L150b56.   if v2 == 0 then goto L150b82;
#L150b5a.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150b60.   v0:= temp  @type object;
#L150b62.   v0:= ([|java:util:logging:Handler|])v0;
#L150b66.   v2:= v3.[|java:util:logging:Logger.handlers|]   @type object;
#L150b6a.   call temp:=  [|java:util:List.remove|](v2, v0) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L150b70.   v2:= temp;
#L150b72.   if v2 == 0 then goto L150b4e;
#L150b76.   call temp:=  [|java:util:logging:Handler.close|](v0) @signature [|Ljava/util/logging/Handler;.close:()V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L150b7c.   goto L150b4e;
#L150b7e.   v2:= Exception  @type object;
#L150b80.   goto L150b4e;
#L150b82.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v3) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150b88.   return @void ;
  catch  [|java:lang:Exception|] @[L150b66..L150b7c] goto L150b7e;

   }
    procedure [|void|] [|java:util:logging:Logger.setFilter|] ([|java:util:logging:Logger|] v1 @type (this), [|java:util:logging:Filter|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setFilter:(Ljava/util/logging/Filter;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150bac.   v0:= v1.[|java:util:logging:Logger.isNamed|]   @boolean;
#L150bb0.   if v0 == 0 then goto L150bc2;
#L150bb4.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150bba.   v0:= temp  @type object;
#L150bbc.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150bc2.   v1.[|java:util:logging:Logger.filter|]  := v2 @type object;
#L150bc6.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.setLevel|] ([|java:util:logging:Logger|] v2 @type (this), [|java:util:logging:Level|] v3 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setLevel:(Ljava/util/logging/Level;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L150bd8.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150bde.   v0:= temp  @type object;
#L150be0.   v1:= v2.[|java:util:logging:Logger.isNamed|]   @boolean;
#L150be4.   if v1 == 0 then goto L150bee;
#L150be8.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150bee.   call temp:=  [|java:util:logging:LogManager.setLevelRecursively|](v0, v2, v3) @signature [|Ljava/util/logging/LogManager;.setLevelRecursively:(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150bf4.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.setManager|] ([|java:util:logging:Logger|] v13 @type (this), [|java:util:logging:LogManager|] v14 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setManager:(Ljava/util/logging/LogManager;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L150c08.   v11:= new [|java:lang:StringBuilder|];
#L150c0c.   call temp:=  [|java:lang:StringBuilder.<init>|](v11) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150c12.   v12:= v13.[|java:util:logging:Logger.name|]   @type object;
#L150c16.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150c1c.   v11:= temp  @type object;
#L150c1e.   v12:= ".level" @type (object, string);
#L150c22.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150c28.   v11:= temp  @type object;
#L150c2a.   call temp:=  [|java:lang:StringBuilder.toString|](v11) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150c30.   v11:= temp  @type object;
#L150c32.   call temp:=  [|java:util:logging:LogManager.getProperty|](v14, v11) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150c38.   v10:= temp  @type object;
#L150c3a.   if v10 == 0 then goto L150c4c;
#L150c3e.   call temp:=  [|java:util:logging:Level.parse|](v10) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L150c44.   v11:= temp  @type object;
#L150c46.   call temp:=  [|java:util:logging:LogManager.setLevelRecursively|](v14, v13, v11) @signature [|Ljava/util/logging/LogManager;.setLevelRecursively:(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150c4c.   v11:= v13.[|java:util:logging:Logger.name|]   @type object;
#L150c50.   call temp:=  [|java:lang:String.isEmpty|](v11) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L150c56.   v11:= temp;
#L150c58.   if v11 == 0 then goto L150ca0;
#L150c5c.   v4:= "handlers" @type (object, string);
#L150c60.   call temp:=  [|java:util:logging:LogManager.getProperty|](v14, v4) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150c66.   v3:= temp  @type object;
#L150c68.   if v3 == 0 then goto L150d38;
#L150c6c.   v11:= ",|\\s" @type (object, string);
#L150c70.   call temp:=  [|java:lang:String.split|](v3, v11) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L150c76.   v0:= temp  @type object;
#L150c78.   v8:= v0.length;
#L150c7a.   v5:= 0  @length 4;
#L150c7c.   if v5 >= v8 then goto L150d38;
#L150c80.   v2:= v0[v5]  @type object;
#L150c84.   call temp:=  [|java:lang:String.isEmpty|](v2) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L150c8a.   v11:= temp;
#L150c8c.   if v11 == 0 then goto L150ccc;
#L150c90.   v5:= v5 + 1;
#L150c94.   goto L150c7c;
#L150c96.   v7:= Exception  @type object;
#L150c98.   call temp:=  [|java:lang:IllegalArgumentException.printStackTrace|](v7) @signature [|Ljava/lang/IllegalArgumentException;.printStackTrace:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type virtual;
#L150c9e.   goto L150c4c;
#L150ca0.   v11:= new [|java:lang:StringBuilder|];
#L150ca4.   call temp:=  [|java:lang:StringBuilder.<init>|](v11) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150caa.   v12:= v13.[|java:util:logging:Logger.name|]   @type object;
#L150cae.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150cb4.   v11:= temp  @type object;
#L150cb6.   v12:= ".handlers" @type (object, string);
#L150cba.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150cc0.   v11:= temp  @type object;
#L150cc2.   call temp:=  [|java:lang:StringBuilder.toString|](v11) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150cc8.   v4:= temp  @type object;
#L150cca.   goto L150c60;
#L150ccc.   call temp:=  [|java:util:logging:LogManager.getInstanceByClass|](v2) @signature [|Ljava/util/logging/LogManager;.getInstanceByClass:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150cd2.   v1:= temp  @type object;
#L150cd4.   v1:= ([|java:util:logging:Handler|])v1;
#L150cd8.   v11:= new [|java:lang:StringBuilder|];
#L150cdc.   call temp:=  [|java:lang:StringBuilder.<init>|](v11) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150ce2.   call temp:=  [|java:lang:StringBuilder.append|](v11, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150ce8.   v11:= temp  @type object;
#L150cea.   v12:= ".level" @type (object, string);
#L150cee.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150cf4.   v11:= temp  @type object;
#L150cf6.   call temp:=  [|java:lang:StringBuilder.toString|](v11) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150cfc.   v11:= temp  @type object;
#L150cfe.   call temp:=  [|java:util:logging:LogManager.getProperty|](v14, v11) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150d04.   v9:= temp  @type object;
#L150d06.   if v9 == 0 then goto L150d18;
#L150d0a.   call temp:=  [|java:util:logging:Level.parse|](v9) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L150d10.   v11:= temp  @type object;
#L150d12.   call temp:=  [|java:util:logging:Handler.setLevel|](v1, v11) @signature [|Ljava/util/logging/Handler;.setLevel:(Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L150d18.   v11:= v13.[|java:util:logging:Logger.handlers|]   @type object;
#L150d1c.   call temp:=  [|java:util:List.add|](v11, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L150d22.   goto L150c90;
#L150d24.   v6:= Exception  @type object;
#L150d26.   call temp:=  [|java:lang:Exception.printStackTrace|](v6) @signature [|Ljava/lang/Exception;.printStackTrace:()V|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L150d2c.   goto L150c90;
#L150d2e.   v7:= Exception  @type object;
#L150d30.   call temp:=  [|java:lang:Exception.printStackTrace|](v7) @signature [|Ljava/lang/Exception;.printStackTrace:()V|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L150d36.   goto L150d18;
#L150d38.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v13) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150d3e.   return @void ;
  catch  [|java:lang:IllegalArgumentException|] @[L150c3e..L150c4c] goto L150c96;
  catch  [|java:lang:Exception|] @[L150ccc..L150cd8] goto L150d24;
  catch  [|java:lang:Exception|] @[L150cd8..L150d18] goto L150d2e;

   }
    procedure [|void|] [|java:util:logging:Logger.setParent|] ([|java:util:logging:Logger|] v3 @type (this), [|java:util:logging:Logger|] v4 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setParent:(Ljava/util/logging/Logger;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150d78.   if v4 != 0 then goto L150d8c;
#L150d7c.   v1:= new [|java:lang:NullPointerException|];
#L150d80.   v2:= "parent == null" @type (object, string);
#L150d84.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L150d8a.   throw v1;
#L150d8c.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150d92.   v0:= temp  @type object;
#L150d94.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150d9a.   call temp:=  [|java:util:logging:LogManager.setParent|](v0, v3, v4) @signature [|Ljava/util/logging/LogManager;.setParent:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150da0.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.setUseParentHandlers|] ([|java:util:logging:Logger|] v1 @type (this), [|boolean|] v2) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.setUseParentHandlers:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150db4.   v0:= v1.[|java:util:logging:Logger.isNamed|]   @boolean;
#L150db8.   if v0 == 0 then goto L150dca;
#L150dbc.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150dc2.   v0:= temp  @type object;
#L150dc4.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150dca.   v1.[|java:util:logging:Logger.notifyParentHandlers|]  := v2 @boolean;
#L150dce.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v1) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150dd4.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.severe|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.severe:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150de8.   v0:= @@[|java:util:logging:Level.SEVERE|]   @type object;
#L150dec.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150df2.   return @void ;

   }
    procedure [|void|] [|java:util:logging:Logger.throwing|] ([|java:util:logging:Logger|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Throwable|] v6 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.throwing:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L150e04.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L150e08.   call temp:=  [|java:util:logging:Logger.internalIsLoggable|](v3, v1) @signature [|Ljava/util/logging/Logger;.internalIsLoggable:(Ljava/util/logging/Level;)Z|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150e0e.   v1:= temp;
#L150e10.   if v1 != 0 then goto L150e16;
#L150e14.   return @void ;
#L150e16.   v0:= new [|java:util:logging:LogRecord|];
#L150e1a.   v1:= @@[|java:util:logging:Level.FINER|]   @type object;
#L150e1e.   v2:= "THROW" @type (object, string);
#L150e22.   call temp:=  [|java:util:logging:LogRecord.<init>|](v0, v1, v2) @signature [|Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type direct;
#L150e28.   v1:= v3.[|java:util:logging:Logger.name|]   @type object;
#L150e2c.   call temp:=  [|java:util:logging:LogRecord.setLoggerName|](v0, v1) @signature [|Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150e32.   call temp:=  [|java:util:logging:LogRecord.setSourceClassName|](v0, v4) @signature [|Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150e38.   call temp:=  [|java:util:logging:LogRecord.setSourceMethodName|](v0, v5) @signature [|Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150e3e.   call temp:=  [|java:util:logging:LogRecord.setThrown|](v0, v6) @signature [|Ljava/util/logging/LogRecord;.setThrown:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L150e44.   call temp:=  [|java:util:logging:Logger.setResourceBundle|](v3, v0) @signature [|Ljava/util/logging/Logger;.setResourceBundle:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type direct;
#L150e4a.   call temp:=  [|java:util:logging:Logger.log|](v3, v0) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150e50.   goto L150e14;

   }
    procedure [|void|] [|java:util:logging:Logger.updateDalvikLogHandler|] ([|java:util:logging:Logger|] v8 @type (this)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L150e64.   v4:= @@[|java:util:logging:Logger.GENERAL_LOG_HANDLER|]   @type object;
#L150e68.   v5:= v8.[|java:util:logging:Logger.parent|]   @type object;
#L150e6c.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L150e72.   v6:= temp  @type object;
#L150e74.   v7:= new [|java:util:logging:Logger|];
#L150e78.   if v6 == v7 then goto L150e86;
#L150e7c.   v6:= v8.[|java:util:logging:Logger.dalvikLogHandler|]   @type object;
#L150e80.   if v4 != v6 then goto L150ee8;
#L150e84.   return @void ;
#L150e86.   if v5 != 0 then goto L150eca;
#L150e8a.   v6:= v8.[|java:util:logging:Logger.handlers|]   @type object;
#L150e8e.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L150e94.   v1:= temp  @type object;
#L150e96.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150e9c.   v6:= temp;
#L150e9e.   if v6 == 0 then goto L150e7c;
#L150ea2.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150ea8.   v0:= temp  @type object;
#L150eaa.   v0:= ([|java:util:logging:Handler|])v0;
#L150eae.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150eb4.   v6:= temp;
#L150eb6.   if v6 != 0 then goto L150e7c;
#L150eba.   v6:= instanceof @varname v0 @type [|dalvik:system:DalvikLogHandler|];
#L150ebe.   if v6 == 0 then goto L150e7c;
#L150ec2.   v4:= v0  @type object;
#L150ec4.   v4:= ([|dalvik:system:DalvikLogHandler|])v4;
#L150ec8.   goto L150e7c;
#L150eca.   v6:= v8.[|java:util:logging:Logger.handlers|]   @type object;
#L150ece.   call temp:=  [|java:util:List.isEmpty|](v6) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L150ed4.   v6:= temp;
#L150ed6.   if v6 == 0 then goto L150e7c;
#L150eda.   v6:= v8.[|java:util:logging:Logger.notifyParentHandlers|]   @boolean;
#L150ede.   if v6 == 0 then goto L150e7c;
#L150ee2.   v4:= v5.[|java:util:logging:Logger.dalvikLogHandler|]   @type object;
#L150ee6.   goto L150e7c;
#L150ee8.   v8.[|java:util:logging:Logger.dalvikLogHandler|]  := v4 @type object;
#L150eec.   v6:= v8.[|java:util:logging:Logger.children|]   @type object;
#L150ef0.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L150ef6.   v2:= temp  @type object;
#L150ef8.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150efe.   v6:= temp;
#L150f00.   if v6 == 0 then goto L150e84;
#L150f04.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L150f0a.   v3:= temp  @type object;
#L150f0c.   v3:= ([|java:util:logging:Logger|])v3;
#L150f10.   call temp:=  [|java:util:logging:Logger.updateDalvikLogHandler|](v3) @signature [|Ljava/util/logging/Logger;.updateDalvikLogHandler:()V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150f16.   goto L150ef8;

   }
    procedure [|void|] [|java:util:logging:Logger.warning|] ([|java:util:logging:Logger|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:logging:Logger|] @signature [|Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150f28.   v0:= @@[|java:util:logging:Level.WARNING|]   @type object;
#L150f2c.   call temp:=  [|java:util:logging:Logger.log|](v1, v0, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L150f32.   return @void ;

   }
record [|java:util:logging:LoggingMXBean|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|java:util:logging:LoggingMXBean.getLoggerLevel|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:logging:LoggingMXBean|] @signature [|Ljava/util/logging/LoggingMXBean;.getLoggerLevel:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:util:logging:LoggingMXBean.getLoggerNames|] () @owner [|java:util:logging:LoggingMXBean|] @signature [|Ljava/util/logging/LoggingMXBean;.getLoggerNames:()Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:logging:LoggingMXBean.getParentLoggerName|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:logging:LoggingMXBean|] @signature [|Ljava/util/logging/LoggingMXBean;.getParentLoggerName:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:logging:LoggingMXBean.setLoggerLevel|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:util:logging:LoggingMXBean|] @signature [|Ljava/util/logging/LoggingMXBean;.setLoggerLevel:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:logging:LoggingPermission|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:BasicPermission|], [|java:security:Guard|], [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:util:logging:LoggingPermission.<init>|] ([|java:util:logging:LoggingPermission|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:logging:LoggingPermission|] @signature [|Ljava/util/logging/LoggingPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L150f44.   v0:= "" @type (object, string);
#L150f48.   v1:= "" @type (object, string);
#L150f4c.   call temp:=  [|java:security:BasicPermission.<init>|](v2, v0, v1) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L150f52.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:logging:LoggingPermission.getActions|] ([|java:util:logging:LoggingPermission|] v1 @type (this)) @owner [|java:util:logging:LoggingPermission|] @signature [|Ljava/util/logging/LoggingPermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150f64.   v0:= 0  @length 4;
#L150f66.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:logging:LoggingPermission.implies|] ([|java:util:logging:LoggingPermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:util:logging:LoggingPermission|] @signature [|Ljava/util/logging/LoggingPermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L150f78.   v0:= 1  @length 4;
#L150f7a.   return v0;

   }
record [|java:util:logging:MemoryHandler|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:Handler|] {
      [|java:util:logging:LogRecord|][] [|java:util:logging:MemoryHandler.buffer|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:MemoryHandler.cursor|]    @AccessFlag PRIVATE;
      [|java:util:logging:LogManager|] [|java:util:logging:MemoryHandler.manager|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:logging:Level|] [|java:util:logging:MemoryHandler.push|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:logging:MemoryHandler.size|]    @AccessFlag PRIVATE;
      [|java:util:logging:Handler|] [|java:util:logging:MemoryHandler.target|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:logging:MemoryHandler.DEFAULT_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:MemoryHandler.<init>|] ([|java:util:logging:MemoryHandler|] v11 @type (this)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L150f8c.   v10:= 0  @length 4;
#L150f8e.   v7:= 1000  @length 16;
#L150f92.   call temp:=  [|java:util:logging:Handler.<init>|](v11) @signature [|Ljava/util/logging/Handler;.<init>:()V|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L150f98.   v11.[|java:util:logging:MemoryHandler.size|]  := v7;
#L150f9c.   v7:= @@[|java:util:logging:Level.SEVERE|]   @type object;
#L150fa0.   v11.[|java:util:logging:MemoryHandler.push|]  := v7 @type object;
#L150fa4.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L150faa.   v7:= temp  @type object;
#L150fac.   v11.[|java:util:logging:MemoryHandler.manager|]  := v7 @type object;
#L150fb0.   call temp:=  [|java:lang:Object.getClass|](v11) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L150fb6.   v7:= temp  @type object;
#L150fb8.   call temp:=  [|java:lang:Class.getName|](v7) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L150fbe.   v0:= temp  @type object;
#L150fc0.   v7:= v11.[|java:util:logging:MemoryHandler.manager|]   @type object;
#L150fc4.   v8:= new [|java:lang:StringBuilder|];
#L150fc8.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L150fce.   call temp:=  [|java:lang:StringBuilder.append|](v8, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150fd4.   v8:= temp  @type object;
#L150fd6.   v9:= ".target" @type (object, string);
#L150fda.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150fe0.   v8:= temp  @type object;
#L150fe2.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L150fe8.   v8:= temp  @type object;
#L150fea.   call temp:=  [|java:util:logging:LogManager.getProperty|](v7, v8) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L150ff0.   v6:= temp  @type object;
#L150ff2.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L150ff8.   v7:= temp  @type object;
#L150ffa.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v7) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L151000.   v2:= temp  @type object;
#L151002.   if v2 != 0 then goto L15100e;
#L151006.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L15100c.   v2:= temp  @type object;
#L15100e.   call temp:=  [|java:lang:ClassLoader.loadClass|](v2, v6) @signature [|Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:ClassLoader|] @type virtual;
#L151014.   v5:= temp  @type object;
#L151016.   call temp:=  [|java:lang:Class.newInstance|](v5) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L15101c.   v7:= temp  @type object;
#L15101e.   v7:= ([|java:util:logging:Handler|])v7;
#L151022.   v11.[|java:util:logging:MemoryHandler.target|]  := v7 @type object;
#L151026.   v7:= v11.[|java:util:logging:MemoryHandler.manager|]   @type object;
#L15102a.   v8:= new [|java:lang:StringBuilder|];
#L15102e.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151034.   call temp:=  [|java:lang:StringBuilder.append|](v8, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15103a.   v8:= temp  @type object;
#L15103c.   v9:= ".size" @type (object, string);
#L151040.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151046.   v8:= temp  @type object;
#L151048.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15104e.   v8:= temp  @type object;
#L151050.   call temp:=  [|java:util:logging:LogManager.getProperty|](v7, v8) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L151056.   v4:= temp  @type object;
#L151058.   if v4 == 0 then goto L151078;
#L15105c.   call temp:=  [|java:lang:Integer.parseInt|](v4) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L151062.   v7:= temp;
#L151064.   v11.[|java:util:logging:MemoryHandler.size|]  := v7;
#L151068.   v7:= v11.[|java:util:logging:MemoryHandler.size|] ;
#L15106c.   if v7 > 0 then goto L151078;
#L151070.   v7:= 1000  @length 16;
#L151074.   v11.[|java:util:logging:MemoryHandler.size|]  := v7;
#L151078.   v7:= v11.[|java:util:logging:MemoryHandler.manager|]   @type object;
#L15107c.   v8:= new [|java:lang:StringBuilder|];
#L151080.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151086.   call temp:=  [|java:lang:StringBuilder.append|](v8, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15108c.   v8:= temp  @type object;
#L15108e.   v9:= ".push" @type (object, string);
#L151092.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151098.   v8:= temp  @type object;
#L15109a.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1510a0.   v8:= temp  @type object;
#L1510a2.   call temp:=  [|java:util:logging:LogManager.getProperty|](v7, v8) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L1510a8.   v3:= temp  @type object;
#L1510aa.   if v3 == 0 then goto L1510ba;
#L1510ae.   call temp:=  [|java:util:logging:Level.parse|](v3) @signature [|Ljava/util/logging/Level;.parse:(Ljava/lang/String;)Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Level|] @type static;
#L1510b4.   v7:= temp  @type object;
#L1510b6.   v11.[|java:util:logging:MemoryHandler.push|]  := v7 @type object;
#L1510ba.   v7:= "ALL" @type (object, string);
#L1510be.   v8:= "java.util.logging.SimpleFormatter" @type (object, string);
#L1510c2.   call temp:=  [|java:util:logging:MemoryHandler.initProperties|](v11, v7, v10, v8, v10) @signature [|Ljava/util/logging/MemoryHandler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L1510c8.   v7:= v11.[|java:util:logging:MemoryHandler.size|] ;
#L1510cc.   v7:= new [|java:util:logging:LogRecord|][v7];
#L1510d0.   v11.[|java:util:logging:MemoryHandler.buffer|]  := v7 @type object;
#L1510d4.   return @void ;
#L1510d6.   v1:= Exception  @type object;
#L1510d8.   v7:= new [|java:lang:RuntimeException|];
#L1510dc.   v8:= new [|java:lang:StringBuilder|];
#L1510e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1510e6.   v9:= "Cannot load target handler '" @type (object, string);
#L1510ea.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1510f0.   v8:= temp  @type object;
#L1510f2.   call temp:=  [|java:lang:StringBuilder.append|](v8, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1510f8.   v8:= temp  @type object;
#L1510fa.   v9:= "'" @type (object, string);
#L1510fe.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151104.   v8:= temp  @type object;
#L151106.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15110c.   v8:= temp  @type object;
#L15110e.   call temp:=  [|java:lang:RuntimeException.<init>|](v7, v8) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L151114.   throw v7;
#L151116.   v1:= Exception  @type object;
#L151118.   v7:= new [|java:lang:StringBuilder|];
#L15111c.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151122.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151128.   v7:= temp  @type object;
#L15112a.   v8:= ".size" @type (object, string);
#L15112e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151134.   v7:= temp  @type object;
#L151136.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15113c.   v7:= temp  @type object;
#L15113e.   call temp:=  [|java:util:logging:MemoryHandler.printInvalidPropMessage|](v11, v7, v4, v1) @signature [|Ljava/util/logging/MemoryHandler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L151144.   goto L151078;
#L151146.   v1:= Exception  @type object;
#L151148.   v7:= new [|java:lang:StringBuilder|];
#L15114c.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151152.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151158.   v7:= temp  @type object;
#L15115a.   v8:= ".push" @type (object, string);
#L15115e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151164.   v7:= temp  @type object;
#L151166.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15116c.   v7:= temp  @type object;
#L15116e.   call temp:=  [|java:util:logging:MemoryHandler.printInvalidPropMessage|](v11, v7, v3, v1) @signature [|Ljava/util/logging/MemoryHandler;.printInvalidPropMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L151174.   goto L1510ba;
  catch  [|java:lang:Exception|] @[L150ff2..L151026] goto L1510d6;
  catch  [|java:lang:Exception|] @[L15105c..L151078] goto L151116;
  catch  [|java:lang:Exception|] @[L1510ae..L1510ba] goto L151146;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.<init>|] ([|java:util:logging:MemoryHandler|] v3 @type (this), [|java:util:logging:Handler|] v4 @type (object), [|int|] v5, [|java:util:logging:Level|] v6 @type (object)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.<init>:(Ljava/util/logging/Handler;ILjava/util/logging/Level;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1511b0.   v2:= 0  @length 4;
#L1511b2.   call temp:=  [|java:util:logging:Handler.<init>|](v3) @signature [|Ljava/util/logging/Handler;.<init>:()V|] @classDescriptor [|java:util:logging:Handler|] @type direct;
#L1511b8.   v0:= 1000  @length 16;
#L1511bc.   v3.[|java:util:logging:MemoryHandler.size|]  := v0;
#L1511c0.   v0:= @@[|java:util:logging:Level.SEVERE|]   @type object;
#L1511c4.   v3.[|java:util:logging:MemoryHandler.push|]  := v0 @type object;
#L1511c8.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L1511ce.   v0:= temp  @type object;
#L1511d0.   v3.[|java:util:logging:MemoryHandler.manager|]  := v0 @type object;
#L1511d4.   if v5 > 0 then goto L1511e8;
#L1511d8.   v0:= new [|java:lang:IllegalArgumentException|];
#L1511dc.   v1:= "size <= 0" @type (object, string);
#L1511e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1511e6.   throw v0;
#L1511e8.   call temp:=  [|java:util:logging:Handler.getLevel|](v4) @signature [|Ljava/util/logging/Handler;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L1511ee.   call temp:=  [|java:util:logging:Level.intValue|](v6) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L1511f4.   v3.[|java:util:logging:MemoryHandler.target|]  := v4 @type object;
#L1511f8.   v3.[|java:util:logging:MemoryHandler.size|]  := v5;
#L1511fc.   v3.[|java:util:logging:MemoryHandler.push|]  := v6 @type object;
#L151200.   v0:= "ALL" @type (object, string);
#L151204.   v1:= "java.util.logging.SimpleFormatter" @type (object, string);
#L151208.   call temp:=  [|java:util:logging:MemoryHandler.initProperties|](v3, v0, v2, v1, v2) @signature [|Ljava/util/logging/MemoryHandler;.initProperties:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L15120e.   v0:= new [|java:util:logging:LogRecord|][v5];
#L151212.   v3.[|java:util:logging:MemoryHandler.buffer|]  := v0 @type object;
#L151216.   return @void ;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.close|] ([|java:util:logging:MemoryHandler|] v1 @type (this)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151228.   v0:= v1.[|java:util:logging:MemoryHandler.manager|]   @type object;
#L15122c.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L151232.   v0:= v1.[|java:util:logging:MemoryHandler.target|]   @type object;
#L151236.   call temp:=  [|java:util:logging:Handler.close|](v0) @signature [|Ljava/util/logging/Handler;.close:()V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L15123c.   v0:= @@[|java:util:logging:Level.OFF|]   @type object;
#L151240.   call temp:=  [|java:util:logging:MemoryHandler.setLevel|](v1, v0) @signature [|Ljava/util/logging/MemoryHandler;.setLevel:(Ljava/util/logging/Level;)V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L151246.   return @void ;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.flush|] ([|java:util:logging:MemoryHandler|] v1 @type (this)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151258.   v0:= v1.[|java:util:logging:MemoryHandler.target|]   @type object;
#L15125c.   call temp:=  [|java:util:logging:Handler.flush|](v0) @signature [|Ljava/util/logging/Handler;.flush:()V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L151262.   return @void ;

   }
    procedure [|java:util:logging:Level|] [|java:util:logging:MemoryHandler.getPushLevel|] ([|java:util:logging:MemoryHandler|] v1 @type (this)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.getPushLevel:()Ljava/util/logging/Level;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151274.   v0:= v1.[|java:util:logging:MemoryHandler.push|]   @type object;
#L151278.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:logging:MemoryHandler.isLoggable|] ([|java:util:logging:MemoryHandler|] v1 @type (this), [|java:util:logging:LogRecord|] v2 @type (object)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15128c.   call temp:=  [|java:util:logging:Handler.isLoggable|](v1, v2) @signature [|Ljava/util/logging/Handler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:Handler|] @type super;
#L151292.   v0:= temp;
#L151294.   return v0;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.publish|] ([|java:util:logging:MemoryHandler|] v3 @type (this), [|java:util:logging:LogRecord|] v4 @type (object)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1512a8.   (@monitorenter v3)
#L1512aa.   call temp:=  [|java:util:logging:MemoryHandler.isLoggable|](v3, v4) @signature [|Ljava/util/logging/MemoryHandler;.isLoggable:(Ljava/util/logging/LogRecord;)Z|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L1512b0.   v0:= temp;
#L1512b2.   if v0 != 0 then goto L1512ba;
#L1512b6.   (@monitorexit v3)
#L1512b8.   return @void ;
#L1512ba.   v0:= v3.[|java:util:logging:MemoryHandler.cursor|] ;
#L1512be.   v1:= v3.[|java:util:logging:MemoryHandler.size|] ;
#L1512c2.   if v0 < v1 then goto L1512cc;
#L1512c6.   v0:= 0  @length 4;
#L1512c8.   v3.[|java:util:logging:MemoryHandler.cursor|]  := v0;
#L1512cc.   v0:= v3.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L1512d0.   v1:= v3.[|java:util:logging:MemoryHandler.cursor|] ;
#L1512d4.   v2:= v1 + 1;
#L1512d8.   v3.[|java:util:logging:MemoryHandler.cursor|]  := v2;
#L1512dc.   v0[v1]:= v4  @type object;
#L1512e0.   call temp:=  [|java:util:logging:LogRecord.getLevel|](v4) @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1512e6.   v0:= temp  @type object;
#L1512e8.   call temp:=  [|java:util:logging:Level.intValue|](v0) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L1512ee.   v0:= temp;
#L1512f0.   v1:= v3.[|java:util:logging:MemoryHandler.push|]   @type object;
#L1512f4.   call temp:=  [|java:util:logging:Level.intValue|](v1) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L1512fa.   v1:= temp;
#L1512fc.   if v0 < v1 then goto L1512b6;
#L151300.   call temp:=  [|java:util:logging:MemoryHandler.push|](v3) @signature [|Ljava/util/logging/MemoryHandler;.push:()V|] @classDescriptor [|java:util:logging:MemoryHandler|] @type virtual;
#L151306.   goto L1512b6;
#L151308.   v0:= Exception  @type object;
#L15130a.   (@monitorexit v3)
#L15130c.   throw v0;
  catch  [|any|] @[L1512aa..L1512b0] goto L151308;
  catch  [|any|] @[L1512ba..L151306] goto L151308;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.push|] ([|java:util:logging:MemoryHandler|] v4 @type (this)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.push:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L151334.   v3:= 0  @length 4;
#L151336.   v0:= v4.[|java:util:logging:MemoryHandler.cursor|] ;
#L15133a.   v1:= v4.[|java:util:logging:MemoryHandler.size|] ;
#L15133e.   if v0 >= v1 then goto L15136e;
#L151342.   v1:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L151346.   v1:= v1[v0]  @type object;
#L15134a.   if v1 == 0 then goto L151360;
#L15134e.   v1:= v4.[|java:util:logging:MemoryHandler.target|]   @type object;
#L151352.   v2:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L151356.   v2:= v2[v0]  @type object;
#L15135a.   call temp:=  [|java:util:logging:Handler.publish|](v1, v2) @signature [|Ljava/util/logging/Handler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L151360.   v1:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L151364.   v1[v0]:= v3  @type object;
#L151368.   v0:= v0 + 1;
#L15136c.   goto L15133a;
#L15136e.   v0:= 0  @length 4;
#L151370.   v1:= v4.[|java:util:logging:MemoryHandler.cursor|] ;
#L151374.   if v0 >= v1 then goto L1513a4;
#L151378.   v1:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L15137c.   v1:= v1[v0]  @type object;
#L151380.   if v1 == 0 then goto L151396;
#L151384.   v1:= v4.[|java:util:logging:MemoryHandler.target|]   @type object;
#L151388.   v2:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L15138c.   v2:= v2[v0]  @type object;
#L151390.   call temp:=  [|java:util:logging:Handler.publish|](v1, v2) @signature [|Ljava/util/logging/Handler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L151396.   v1:= v4.[|java:util:logging:MemoryHandler.buffer|]   @type object;
#L15139a.   v1[v0]:= v3  @type object;
#L15139e.   v0:= v0 + 1;
#L1513a2.   goto L151370;
#L1513a4.   v1:= 0  @length 4;
#L1513a6.   v4.[|java:util:logging:MemoryHandler.cursor|]  := v1;
#L1513aa.   return @void ;

   }
    procedure [|void|] [|java:util:logging:MemoryHandler.setPushLevel|] ([|java:util:logging:MemoryHandler|] v1 @type (this), [|java:util:logging:Level|] v2 @type (object)) @owner [|java:util:logging:MemoryHandler|] @signature [|Ljava/util/logging/MemoryHandler;.setPushLevel:(Ljava/util/logging/Level;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1513bc.   v0:= v1.[|java:util:logging:MemoryHandler.manager|]   @type object;
#L1513c0.   call temp:=  [|java:util:logging:LogManager.checkAccess|](v0) @signature [|Ljava/util/logging/LogManager;.checkAccess:()V|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L1513c6.   call temp:=  [|java:util:logging:Level.intValue|](v2) @signature [|Ljava/util/logging/Level;.intValue:()I|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L1513cc.   v1.[|java:util:logging:MemoryHandler.push|]  := v2 @type object;
#L1513d0.   return @void ;

   }
record [|java:util:logging:SimpleFormatter|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:Formatter|] {
   }
    procedure [|void|] [|java:util:logging:SimpleFormatter.<init>|] ([|java:util:logging:SimpleFormatter|] v0 @type (this)) @owner [|java:util:logging:SimpleFormatter|] @signature [|Ljava/util/logging/SimpleFormatter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1513e4.   call temp:=  [|java:util:logging:Formatter.<init>|](v0) @signature [|Ljava/util/logging/Formatter;.<init>:()V|] @classDescriptor [|java:util:logging:Formatter|] @type direct;
#L1513ea.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:logging:SimpleFormatter.format|] ([|java:util:logging:SimpleFormatter|] v11 @type (this), [|java:util:logging:LogRecord|] v12 @type (object)) @owner [|java:util:logging:SimpleFormatter|] @signature [|Ljava/util/logging/SimpleFormatter;.format:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L1513fc.   v2:= new [|java:lang:StringBuilder|];
#L151400.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151406.   v5:= "{0, date} {0, time} " @type (object, string);
#L15140a.   v6:= 1  @length 4;
#L15140c.   v6:= new [|java:lang:Object|][v6];
#L151410.   v7:= 0  @length 4;
#L151412.   v8:= new [|java:util:Date|];
#L151416.   call temp:=  [|java:util:logging:LogRecord.getMillis|](v12) @signature [|Ljava/util/logging/LogRecord;.getMillis:()J|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15141c.   v9:= temp  @type wide;
#L15141e.   call temp:=  [|java:util:Date.<init>|](v8, v9, v10) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L151424.   v6[v7]:= v8  @type object;
#L151428.   call temp:=  [|java:text:MessageFormat.format|](v5, v6) @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type static;
#L15142e.   v5:= temp  @type object;
#L151430.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151436.   call temp:=  [|java:util:logging:LogRecord.getSourceClassName|](v12) @signature [|Ljava/util/logging/LogRecord;.getSourceClassName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15143c.   v5:= temp  @type object;
#L15143e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151444.   v5:= temp  @type object;
#L151446.   v6:= " " @type (object, string);
#L15144a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151450.   call temp:=  [|java:util:logging:LogRecord.getSourceMethodName|](v12) @signature [|Ljava/util/logging/LogRecord;.getSourceMethodName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151456.   v5:= temp  @type object;
#L151458.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15145e.   v5:= temp  @type object;
#L151460.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151466.   v6:= temp  @type object;
#L151468.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15146e.   call temp:=  [|java:util:logging:LogRecord.getLevel|](v12) @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151474.   v5:= temp  @type object;
#L151476.   call temp:=  [|java:util:logging:Level.getName|](v5) @signature [|Ljava/util/logging/Level;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L15147c.   v5:= temp  @type object;
#L15147e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151484.   v5:= temp  @type object;
#L151486.   v6:= ": " @type (object, string);
#L15148a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151490.   call temp:=  [|java:util:logging:SimpleFormatter.formatMessage|](v11, v12) @signature [|Ljava/util/logging/SimpleFormatter;.formatMessage:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:SimpleFormatter|] @type virtual;
#L151496.   v5:= temp  @type object;
#L151498.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15149e.   v5:= temp  @type object;
#L1514a0.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L1514a6.   v6:= temp  @type object;
#L1514a8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1514ae.   call temp:=  [|java:util:logging:LogRecord.getThrown|](v12) @signature [|Ljava/util/logging/LogRecord;.getThrown:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1514b4.   v5:= temp  @type object;
#L1514b6.   if v5 == 0 then goto L1514fc;
#L1514ba.   v5:= "Throwable occurred: " @type (object, string);
#L1514be.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1514c4.   call temp:=  [|java:util:logging:LogRecord.getThrown|](v12) @signature [|Ljava/util/logging/LogRecord;.getThrown:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1514ca.   v4:= temp  @type object;
#L1514cc.   v0:= 0  @length 4;
#L1514ce.   v3:= new [|java:io:StringWriter|];
#L1514d2.   call temp:=  [|java:io:StringWriter.<init>|](v3) @signature [|Ljava/io/StringWriter;.<init>:()V|] @classDescriptor [|java:io:StringWriter|] @type direct;
#L1514d8.   v1:= new [|java:io:PrintWriter|];
#L1514dc.   call temp:=  [|java:io:PrintWriter.<init>|](v1, v3) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L1514e2.   call temp:=  [|java:lang:Throwable.printStackTrace|](v4, v1) @signature [|Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintWriter;)V|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L1514e8.   call temp:=  [|java:io:StringWriter.toString|](v3) @signature [|Ljava/io/StringWriter;.toString:()Ljava/lang/String;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L1514ee.   v5:= temp  @type object;
#L1514f0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1514f6.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v1) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1514fc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151502.   v5:= temp  @type object;
#L151504.   return v5  @type object;
#L151506.   v5:= Exception  @type object;
#L151508.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v0) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L15150e.   throw v5;
#L151510.   v5:= Exception  @type object;
#L151512.   v0:= v1  @type object;
#L151514.   goto L151508;
  catch  [|any|] @[L1514ce..L1514e2] goto L151506;
  catch  [|any|] @[L1514e2..L1514f6] goto L151510;

   }
record [|java:util:logging:SocketHandler|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:StreamHandler|] {
      [|java:net:Socket|] [|java:util:logging:SocketHandler.socket|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:util:logging:SocketHandler.DEFAULT_FORMATTER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:logging:SocketHandler.DEFAULT_LEVEL|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:SocketHandler.<init>|] ([|java:util:logging:SocketHandler|] v3 @type (this)) @owner [|java:util:logging:SocketHandler|] @signature [|Ljava/util/logging/SocketHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L151540.   v2:= 0  @length 4;
#L151542.   v0:= "ALL" @type (object, string);
#L151546.   v1:= "java.util.logging.XMLFormatter" @type (object, string);
#L15154a.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3, v0, v2, v1, v2) @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L151550.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L151556.   v0:= temp  @type object;
#L151558.   v1:= "java.util.logging.SocketHandler.host" @type (object, string);
#L15155c.   call temp:=  [|java:util:logging:LogManager.getProperty|](v0, v1) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L151562.   v0:= temp  @type object;
#L151564.   call temp:=  [|java:util:logging:LogManager.getLogManager|]() @signature [|Ljava/util/logging/LogManager;.getLogManager:()Ljava/util/logging/LogManager;|] @classDescriptor [|java:util:logging:LogManager|] @type static;
#L15156a.   v1:= temp  @type object;
#L15156c.   v2:= "java.util.logging.SocketHandler.port" @type (object, string);
#L151570.   call temp:=  [|java:util:logging:LogManager.getProperty|](v1, v2) @signature [|Ljava/util/logging/LogManager;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogManager|] @type virtual;
#L151576.   v1:= temp  @type object;
#L151578.   call temp:=  [|java:util:logging:SocketHandler.initSocket|](v3, v0, v1) @signature [|Ljava/util/logging/SocketHandler;.initSocket:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:SocketHandler|] @type direct;
#L15157e.   return @void ;

   }
    procedure [|void|] [|java:util:logging:SocketHandler.<init>|] ([|java:util:logging:SocketHandler|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5) @owner [|java:util:logging:SocketHandler|] @signature [|Ljava/util/logging/SocketHandler;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L151590.   v2:= 0  @length 4;
#L151592.   v0:= "ALL" @type (object, string);
#L151596.   v1:= "java.util.logging.XMLFormatter" @type (object, string);
#L15159a.   call temp:=  [|java:util:logging:StreamHandler.<init>|](v3, v0, v2, v1, v2) @signature [|Ljava/util/logging/StreamHandler;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type direct;
#L1515a0.   call temp:=  [|java:lang:String.valueOf|](v5) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L1515a6.   v0:= temp  @type object;
#L1515a8.   call temp:=  [|java:util:logging:SocketHandler.initSocket|](v3, v4, v0) @signature [|Ljava/util/logging/SocketHandler;.initSocket:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:logging:SocketHandler|] @type direct;
#L1515ae.   return @void ;

   }
    procedure [|void|] [|java:util:logging:SocketHandler.initSocket|] ([|java:util:logging:SocketHandler|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:util:logging:SocketHandler|] @signature [|Ljava/util/logging/SocketHandler;.initSocket:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1515c0.   if v6 == 0 then goto L1515d0;
#L1515c4.   call temp:=  [|java:lang:String.isEmpty|](v6) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1515ca.   v2:= temp;
#L1515cc.   if v2 == 0 then goto L1515e0;
#L1515d0.   v2:= new [|java:lang:IllegalArgumentException|];
#L1515d4.   v3:= "host == null || host.isEmpty()" @type (object, string);
#L1515d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1515de.   throw v2;
#L1515e0.   v1:= 0  @length 4;
#L1515e2.   call temp:=  [|java:lang:Integer.parseInt|](v7) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L1515e8.   v1:= temp;
#L1515ea.   if v1 > 0 then goto L151610;
#L1515ee.   v2:= new [|java:lang:IllegalArgumentException|];
#L1515f2.   v3:= "Illegal port argument" @type (object, string);
#L1515f6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1515fc.   throw v2;
#L1515fe.   v0:= Exception  @type object;
#L151600.   v2:= new [|java:lang:IllegalArgumentException|];
#L151604.   v3:= "Illegal port argument" @type (object, string);
#L151608.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15160e.   throw v2;
#L151610.   v2:= new [|java:net:Socket|];
#L151614.   call temp:=  [|java:net:Socket.<init>|](v2, v6, v1) @signature [|Ljava/net/Socket;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15161a.   v5.[|java:util:logging:SocketHandler.socket|]  := v2 @type object;
#L15161e.   v2:= new [|java:io:BufferedOutputStream|];
#L151622.   v3:= v5.[|java:util:logging:SocketHandler.socket|]   @type object;
#L151626.   call temp:=  [|java:net:Socket.getOutputStream|](v3) @signature [|Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;|] @classDescriptor [|java:net:Socket|] @type virtual;
#L15162c.   v3:= temp  @type object;
#L15162e.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v2, v3) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L151634.   call temp:=  [|java:util:logging:StreamHandler.internalSetOutputStream|](v5, v2) @signature [|Ljava/util/logging/StreamHandler;.internalSetOutputStream:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L15163a.   return @void ;
#L15163c.   v0:= Exception  @type object;
#L15163e.   call temp:=  [|java:util:logging:SocketHandler.getErrorManager|](v5) @signature [|Ljava/util/logging/SocketHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:SocketHandler|] @type virtual;
#L151644.   v2:= temp  @type object;
#L151646.   v3:= "Failed to establish the network connection" @type (object, string);
#L15164a.   v4:= 4  @length 4;
#L15164c.   call temp:=  [|java:util:logging:ErrorManager.error|](v2, v3, v0, v4) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L151652.   throw v0;
  catch  [|java:lang:NumberFormatException|] @[L1515e2..L1515e8] goto L1515fe;
  catch  [|java:io:IOException|] @[L151610..L15161e] goto L15163c;

   }
    procedure [|void|] [|java:util:logging:SocketHandler.close|] ([|java:util:logging:SocketHandler|] v4 @type (this)) @owner [|java:util:logging:SocketHandler|] @signature [|Ljava/util/logging/SocketHandler;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15167c.   call temp:=  [|java:util:logging:StreamHandler.close|](v4) @signature [|Ljava/util/logging/StreamHandler;.close:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L151682.   v1:= v4.[|java:util:logging:SocketHandler.socket|]   @type object;
#L151686.   if v1 == 0 then goto L15169a;
#L15168a.   v1:= v4.[|java:util:logging:SocketHandler.socket|]   @type object;
#L15168e.   call temp:=  [|java:net:Socket.close|](v1) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L151694.   v1:= 0  @length 4;
#L151696.   v4.[|java:util:logging:SocketHandler.socket|]  := v1 @type object;
#L15169a.   return @void ;
#L15169c.   v0:= Exception  @type object;
#L15169e.   call temp:=  [|java:util:logging:SocketHandler.getErrorManager|](v4) @signature [|Ljava/util/logging/SocketHandler;.getErrorManager:()Ljava/util/logging/ErrorManager;|] @classDescriptor [|java:util:logging:SocketHandler|] @type virtual;
#L1516a4.   v1:= temp  @type object;
#L1516a6.   v2:= "Exception occurred when closing the socket handler" @type (object, string);
#L1516aa.   v3:= 3  @length 4;
#L1516ac.   call temp:=  [|java:util:logging:ErrorManager.error|](v1, v2, v0, v3) @signature [|Ljava/util/logging/ErrorManager;.error:(Ljava/lang/String;Ljava/lang/Exception;I)V|] @classDescriptor [|java:util:logging:ErrorManager|] @type virtual;
#L1516b2.   goto L15169a;
  catch  [|java:lang:Exception|] @[L15167c..L15169a] goto L15169c;

   }
    procedure [|void|] [|java:util:logging:SocketHandler.publish|] ([|java:util:logging:SocketHandler|] v0 @type (this), [|java:util:logging:LogRecord|] v1 @type (object)) @owner [|java:util:logging:SocketHandler|] @signature [|Ljava/util/logging/SocketHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @Access PUBLIC {
      local temp ;
      
#L1516d4.   call temp:=  [|java:util:logging:StreamHandler.publish|](v0, v1) @signature [|Ljava/util/logging/StreamHandler;.publish:(Ljava/util/logging/LogRecord;)V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L1516da.   call temp:=  [|java:util:logging:StreamHandler.flush|](v0) @signature [|Ljava/util/logging/StreamHandler;.flush:()V|] @classDescriptor [|java:util:logging:StreamHandler|] @type super;
#L1516e0.   return @void ;

   }
record [|java:util:logging:XMLFormatter|]  @type class @AccessFlag PUBLIC  extends [|java:util:logging:Formatter|] {
   }
      global [|java:lang:String|] @@[|java:util:logging:XMLFormatter.indent|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:logging:XMLFormatter.<init>|] ([|java:util:logging:XMLFormatter|] v0 @type (this)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1516f4.   call temp:=  [|java:util:logging:Formatter.<init>|](v0) @signature [|Ljava/util/logging/Formatter;.<init>:()V|] @classDescriptor [|java:util:logging:Formatter|] @type direct;
#L1516fa.   return @void ;

   }
    procedure [|void|] [|java:util:logging:XMLFormatter.append|] ([|java:lang:StringBuilder|] v3 @type (object), [|int|] v4, [|java:lang:String|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L15170c.   v0:= 0  @length 4;
#L15170e.   if v0 >= v4 then goto L151722;
#L151712.   v1:= "    " @type (object, string);
#L151716.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15171c.   v0:= v0 + 1;
#L151720.   goto L15170e;
#L151722.   v1:= "<" @type (object, string);
#L151726.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15172c.   v1:= temp  @type object;
#L15172e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151734.   v1:= temp  @type object;
#L151736.   v2:= ">" @type (object, string);
#L15173a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151740.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151746.   v1:= "</" @type (object, string);
#L15174a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151750.   v1:= temp  @type object;
#L151752.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151758.   v1:= temp  @type object;
#L15175a.   v2:= ">" @type (object, string);
#L15175e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151764.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L15176a.   v1:= temp  @type object;
#L15176c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151772.   return @void ;

   }
    procedure [|void|] [|java:util:logging:XMLFormatter.formatMessages|] ([|java:util:logging:XMLFormatter|] v7 @type (this), [|java:util:logging:LogRecord|] v8 @type (object), [|java:lang:StringBuilder|] v9 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.formatMessages:(Ljava/util/logging/LogRecord;Ljava/lang/StringBuilder;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L151784.   v6:= 1  @length 4;
#L151786.   call temp:=  [|java:util:logging:LogRecord.getResourceBundle|](v8) @signature [|Ljava/util/logging/LogRecord;.getResourceBundle:()Ljava/util/ResourceBundle;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15178c.   v3:= temp  @type object;
#L15178e.   call temp:=  [|java:util:logging:LogRecord.getMessage|](v8) @signature [|Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151794.   v2:= temp  @type object;
#L151796.   if v3 == 0 then goto L1517e6;
#L15179a.   if v2 == 0 then goto L1517e6;
#L15179e.   call temp:=  [|java:util:ResourceBundle.getString|](v3, v2) @signature [|Ljava/util/ResourceBundle;.getString:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:ResourceBundle|] @type virtual;
#L1517a4.   v1:= temp  @type object;
#L1517a6.   if v1 != 0 then goto L1517be;
#L1517aa.   v1:= v2  @type object;
#L1517ac.   v4:= "message" @type (object, string);
#L1517b0.   call temp:=  [|java:util:logging:XMLFormatter.append|](v9, v6, v4, v1) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1517b6.   return @void ;
#L1517b8.   v0:= Exception  @type object;
#L1517ba.   v1:= 0  @length 4;
#L1517bc.   goto L1517a6;
#L1517be.   v4:= "message" @type (object, string);
#L1517c2.   call temp:=  [|java:util:logging:XMLFormatter.append|](v9, v6, v4, v1) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1517c8.   v4:= "key" @type (object, string);
#L1517cc.   call temp:=  [|java:util:logging:XMLFormatter.append|](v9, v6, v4, v2) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1517d2.   v4:= "catalog" @type (object, string);
#L1517d6.   call temp:=  [|java:util:logging:LogRecord.getResourceBundleName|](v8) @signature [|Ljava/util/logging/LogRecord;.getResourceBundleName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1517dc.   v5:= temp  @type object;
#L1517de.   call temp:=  [|java:util:logging:XMLFormatter.append|](v9, v6, v4, v5) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1517e4.   goto L1517b6;
#L1517e6.   if v2 == 0 then goto L1517f6;
#L1517ea.   v4:= "message" @type (object, string);
#L1517ee.   call temp:=  [|java:util:logging:XMLFormatter.append|](v9, v6, v4, v2) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1517f4.   goto L1517b6;
#L1517f6.   v4:= "    " @type (object, string);
#L1517fa.   call temp:=  [|java:lang:StringBuilder.append|](v9, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151800.   v4:= temp  @type object;
#L151802.   v5:= "<message/>" @type (object, string);
#L151806.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15180c.   goto L1517b6;
  catch  [|java:lang:Exception|] @[L15179e..L1517a4] goto L1517b8;

   }
    procedure [|void|] [|java:util:logging:XMLFormatter.formatThrowable|] ([|java:util:logging:XMLFormatter|] v11 @type (this), [|java:util:logging:LogRecord|] v12 @type (object), [|java:lang:StringBuilder|] v13 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.formatThrowable:(Ljava/util/logging/LogRecord;Ljava/lang/StringBuilder;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L151830.   v10:= 3  @length 4;
#L151832.   call temp:=  [|java:util:logging:LogRecord.getThrown|](v12) @signature [|Ljava/util/logging/LogRecord;.getThrown:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151838.   v6:= temp  @type object;
#L15183a.   if v6 == 0 then goto L151944;
#L15183e.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151844.   v5:= temp  @type object;
#L151846.   v7:= "    " @type (object, string);
#L15184a.   call temp:=  [|java:lang:StringBuilder.append|](v13, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151850.   v7:= temp  @type object;
#L151852.   v8:= "<exception>" @type (object, string);
#L151856.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15185c.   v7:= temp  @type object;
#L15185e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151864.   v7:= 2  @length 4;
#L151866.   v8:= "message" @type (object, string);
#L15186a.   call temp:=  [|java:lang:Throwable.toString|](v6) @signature [|Ljava/lang/Throwable;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L151870.   v9:= temp  @type object;
#L151872.   call temp:=  [|java:util:logging:XMLFormatter.append|](v13, v7, v8, v9) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151878.   call temp:=  [|java:lang:Throwable.getStackTrace|](v6) @signature [|Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L15187e.   v2:= temp  @type object;
#L151880.   v0:= v2  @type object;
#L151882.   v4:= v0.length;
#L151884.   v3:= 0  @length 4;
#L151886.   if v3 >= v4 then goto L151926;
#L15188a.   v1:= v0[v3]  @type object;
#L15188e.   v7:= "    " @type (object, string);
#L151892.   call temp:=  [|java:lang:StringBuilder.append|](v13, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151898.   v7:= temp  @type object;
#L15189a.   v8:= "    " @type (object, string);
#L15189e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1518a4.   v7:= temp  @type object;
#L1518a6.   v8:= "<frame>" @type (object, string);
#L1518aa.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1518b0.   v7:= temp  @type object;
#L1518b2.   call temp:=  [|java:lang:StringBuilder.append|](v7, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1518b8.   v7:= "class" @type (object, string);
#L1518bc.   call temp:=  [|java:lang:StackTraceElement.getClassName|](v1) @signature [|Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L1518c2.   v8:= temp  @type object;
#L1518c4.   call temp:=  [|java:util:logging:XMLFormatter.append|](v13, v10, v7, v8) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1518ca.   v7:= "method" @type (object, string);
#L1518ce.   call temp:=  [|java:lang:StackTraceElement.getMethodName|](v1) @signature [|Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L1518d4.   v8:= temp  @type object;
#L1518d6.   call temp:=  [|java:util:logging:XMLFormatter.append|](v13, v10, v7, v8) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1518dc.   v7:= "line" @type (object, string);
#L1518e0.   call temp:=  [|java:lang:StackTraceElement.getLineNumber|](v1) @signature [|Ljava/lang/StackTraceElement;.getLineNumber:()I|] @classDescriptor [|java:lang:StackTraceElement|] @type virtual;
#L1518e6.   v8:= temp;
#L1518e8.   call temp:=  [|java:lang:Integer.valueOf|](v8) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1518ee.   v8:= temp  @type object;
#L1518f0.   call temp:=  [|java:util:logging:XMLFormatter.append|](v13, v10, v7, v8) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1518f6.   v7:= "    " @type (object, string);
#L1518fa.   call temp:=  [|java:lang:StringBuilder.append|](v13, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151900.   v7:= temp  @type object;
#L151902.   v8:= "    " @type (object, string);
#L151906.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15190c.   v7:= temp  @type object;
#L15190e.   v8:= "</frame>" @type (object, string);
#L151912.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151918.   v7:= temp  @type object;
#L15191a.   call temp:=  [|java:lang:StringBuilder.append|](v7, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151920.   v3:= v3 + 1;
#L151924.   goto L151886;
#L151926.   v7:= "    " @type (object, string);
#L15192a.   call temp:=  [|java:lang:StringBuilder.append|](v13, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151930.   v7:= temp  @type object;
#L151932.   v8:= "</exception>" @type (object, string);
#L151936.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15193c.   v7:= temp  @type object;
#L15193e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151944.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:logging:XMLFormatter.format|] ([|java:util:logging:XMLFormatter|] v14 @type (this), [|java:util:logging:LogRecord|] v15 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.format:(Ljava/util/logging/LogRecord;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L151958.   call temp:=  [|java:util:logging:LogRecord.getMillis|](v15) @signature [|Ljava/util/logging/LogRecord;.getMillis:()J|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L15195e.   v8:= temp  @type wide;
#L151960.   v10:= "{0, date} {0, time}" @type (object, string);
#L151964.   v11:= 1  @length 4;
#L151966.   v11:= new [|java:lang:Object|][v11];
#L15196a.   v12:= 0  @length 4;
#L15196c.   v13:= new [|java:util:Date|];
#L151970.   call temp:=  [|java:util:Date.<init>|](v13, v8, v9) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L151976.   v11[v12]:= v13  @type object;
#L15197a.   call temp:=  [|java:text:MessageFormat.format|](v10, v11) @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type static;
#L151980.   v1:= temp  @type object;
#L151982.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151988.   v5:= temp  @type object;
#L15198a.   v7:= new [|java:lang:StringBuilder|];
#L15198e.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151994.   v10:= "<record>" @type (object, string);
#L151998.   call temp:=  [|java:lang:StringBuilder.append|](v7, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15199e.   v10:= temp  @type object;
#L1519a0.   call temp:=  [|java:lang:StringBuilder.append|](v10, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1519a6.   v10:= 1  @length 4;
#L1519a8.   v11:= "date" @type (object, string);
#L1519ac.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v1) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1519b2.   v10:= 1  @length 4;
#L1519b4.   v11:= "millis" @type (object, string);
#L1519b8.   call temp:=  [|java:lang:Long.valueOf|](v8, v9) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L1519be.   v12:= temp  @type object;
#L1519c0.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1519c6.   v10:= 1  @length 4;
#L1519c8.   v11:= "sequence" @type (object, string);
#L1519cc.   call temp:=  [|java:util:logging:LogRecord.getSequenceNumber|](v15) @signature [|Ljava/util/logging/LogRecord;.getSequenceNumber:()J|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1519d2.   v12:= temp  @type wide;
#L1519d4.   call temp:=  [|java:lang:Long.valueOf|](v12, v13) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L1519da.   v12:= temp  @type object;
#L1519dc.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L1519e2.   call temp:=  [|java:util:logging:LogRecord.getLoggerName|](v15) @signature [|Ljava/util/logging/LogRecord;.getLoggerName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1519e8.   v10:= temp  @type object;
#L1519ea.   if v10 == 0 then goto L151a02;
#L1519ee.   v10:= 1  @length 4;
#L1519f0.   v11:= "logger" @type (object, string);
#L1519f4.   call temp:=  [|java:util:logging:LogRecord.getLoggerName|](v15) @signature [|Ljava/util/logging/LogRecord;.getLoggerName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L1519fa.   v12:= temp  @type object;
#L1519fc.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151a02.   v10:= 1  @length 4;
#L151a04.   v11:= "level" @type (object, string);
#L151a08.   call temp:=  [|java:util:logging:LogRecord.getLevel|](v15) @signature [|Ljava/util/logging/LogRecord;.getLevel:()Ljava/util/logging/Level;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a0e.   v12:= temp  @type object;
#L151a10.   call temp:=  [|java:util:logging:Level.getName|](v12) @signature [|Ljava/util/logging/Level;.getName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Level|] @type virtual;
#L151a16.   v12:= temp  @type object;
#L151a18.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151a1e.   call temp:=  [|java:util:logging:LogRecord.getSourceClassName|](v15) @signature [|Ljava/util/logging/LogRecord;.getSourceClassName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a24.   v10:= temp  @type object;
#L151a26.   if v10 == 0 then goto L151a3e;
#L151a2a.   v10:= 1  @length 4;
#L151a2c.   v11:= "class" @type (object, string);
#L151a30.   call temp:=  [|java:util:logging:LogRecord.getSourceClassName|](v15) @signature [|Ljava/util/logging/LogRecord;.getSourceClassName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a36.   v12:= temp  @type object;
#L151a38.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151a3e.   call temp:=  [|java:util:logging:LogRecord.getSourceMethodName|](v15) @signature [|Ljava/util/logging/LogRecord;.getSourceMethodName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a44.   v10:= temp  @type object;
#L151a46.   if v10 == 0 then goto L151a5e;
#L151a4a.   v10:= 1  @length 4;
#L151a4c.   v11:= "method" @type (object, string);
#L151a50.   call temp:=  [|java:util:logging:LogRecord.getSourceMethodName|](v15) @signature [|Ljava/util/logging/LogRecord;.getSourceMethodName:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a56.   v12:= temp  @type object;
#L151a58.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151a5e.   v10:= 1  @length 4;
#L151a60.   v11:= "thread" @type (object, string);
#L151a64.   call temp:=  [|java:util:logging:LogRecord.getThreadID|](v15) @signature [|Ljava/util/logging/LogRecord;.getThreadID:()I|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a6a.   v12:= temp;
#L151a6c.   call temp:=  [|java:lang:Integer.valueOf|](v12) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L151a72.   v12:= temp  @type object;
#L151a74.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v12) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151a7a.   call temp:=  [|java:util:logging:XMLFormatter.formatMessages|](v14, v15, v7) @signature [|Ljava/util/logging/XMLFormatter;.formatMessages:(Ljava/util/logging/LogRecord;Ljava/lang/StringBuilder;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type direct;
#L151a80.   call temp:=  [|java:util:logging:LogRecord.getParameters|](v15) @signature [|Ljava/util/logging/LogRecord;.getParameters:()[Ljava/lang/Object;|] @classDescriptor [|java:util:logging:LogRecord|] @type virtual;
#L151a86.   v6:= temp  @type object;
#L151a88.   if v6 == 0 then goto L151aac;
#L151a8c.   v0:= v6  @type object;
#L151a8e.   v4:= v0.length;
#L151a90.   v3:= 0  @length 4;
#L151a92.   if v3 >= v4 then goto L151aac;
#L151a96.   v2:= v0[v3]  @type object;
#L151a9a.   v10:= 1  @length 4;
#L151a9c.   v11:= "param" @type (object, string);
#L151aa0.   call temp:=  [|java:util:logging:XMLFormatter.append|](v7, v10, v11, v2) @signature [|Ljava/util/logging/XMLFormatter;.append:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type static;
#L151aa6.   v3:= v3 + 1;
#L151aaa.   goto L151a92;
#L151aac.   call temp:=  [|java:util:logging:XMLFormatter.formatThrowable|](v14, v15, v7) @signature [|Ljava/util/logging/XMLFormatter;.formatThrowable:(Ljava/util/logging/LogRecord;Ljava/lang/StringBuilder;)V|] @classDescriptor [|java:util:logging:XMLFormatter|] @type direct;
#L151ab2.   v10:= "</record>" @type (object, string);
#L151ab6.   call temp:=  [|java:lang:StringBuilder.append|](v7, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151abc.   v10:= temp  @type object;
#L151abe.   call temp:=  [|java:lang:StringBuilder.append|](v10, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151ac4.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151aca.   v10:= temp  @type object;
#L151acc.   return v10  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:XMLFormatter.getHead|] ([|java:util:logging:XMLFormatter|] v4 @type (this), [|java:util:logging:Handler|] v5 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.getHead:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L151ae0.   v0:= 0  @length 4;
#L151ae2.   if v5 == 0 then goto L151aee;
#L151ae6.   call temp:=  [|java:util:logging:Handler.getEncoding|](v5) @signature [|Ljava/util/logging/Handler;.getEncoding:()Ljava/lang/String;|] @classDescriptor [|java:util:logging:Handler|] @type virtual;
#L151aec.   v0:= temp  @type object;
#L151aee.   if v0 != 0 then goto L151afe;
#L151af2.   v2:= "file.encoding" @type (object, string);
#L151af6.   call temp:=  [|java:lang:System.getProperty|](v2) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151afc.   v0:= temp  @type object;
#L151afe.   v1:= new [|java:lang:StringBuilder|];
#L151b02.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151b08.   v2:= "<?xml version=\"1.0\" encoding=\"" @type (object, string);
#L151b0c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b12.   v2:= temp  @type object;
#L151b14.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b1a.   v2:= temp  @type object;
#L151b1c.   v3:= "\" standalone=\"no\"?>" @type (object, string);
#L151b20.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b26.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151b2c.   v2:= temp  @type object;
#L151b2e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b34.   v2:= "<!DOCTYPE log SYSTEM \"logger.dtd\">" @type (object, string);
#L151b38.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b3e.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L151b44.   v2:= temp  @type object;
#L151b46.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b4c.   v2:= "<log>" @type (object, string);
#L151b50.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b56.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151b5c.   v2:= temp  @type object;
#L151b5e.   return v2  @type object;

   }
    procedure [|java:lang:String|] [|java:util:logging:XMLFormatter.getTail|] ([|java:util:logging:XMLFormatter|] v1 @type (this), [|java:util:logging:Handler|] v2 @type (object)) @owner [|java:util:logging:XMLFormatter|] @signature [|Ljava/util/logging/XMLFormatter;.getTail:(Ljava/util/logging/Handler;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151b70.   v0:= "</log>" @type (object, string);
#L151b74.   return v0  @type object;

   }
record [|java:util:prefs:AbstractPreferences$1|]  @type class @AccessFlag FINAL  extends [|java:lang:Thread|] {
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$1.<init>|] ([|java:util:prefs:AbstractPreferences$1|] v0 @type (this)) @owner [|java:util:prefs:AbstractPreferences$1|] @signature [|Ljava/util/prefs/AbstractPreferences$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L151b88.   call temp:=  [|java:lang:Thread.<init>|](v0) @signature [|Ljava/lang/Thread;.<init>:()V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L151b8e.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$1.run|] ([|java:util:prefs:AbstractPreferences$1|] v3 @type (this)) @owner [|java:util:prefs:AbstractPreferences$1|] @signature [|Ljava/util/prefs/AbstractPreferences$1;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L151ba0.   call temp:=  [|java:util:prefs:Preferences.userRoot|]() @signature [|Ljava/util/prefs/Preferences;.userRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L151ba6.   v1:= temp  @type object;
#L151ba8.   call temp:=  [|java:util:prefs:Preferences.systemRoot|]() @signature [|Ljava/util/prefs/Preferences;.systemRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L151bae.   v0:= temp  @type object;
#L151bb0.   call temp:=  [|java:util:prefs:Preferences.flush|](v1) @signature [|Ljava/util/prefs/Preferences;.flush:()V|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L151bb6.   call temp:=  [|java:util:prefs:Preferences.flush|](v0) @signature [|Ljava/util/prefs/Preferences;.flush:()V|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L151bbc.   return @void ;
#L151bbe.   v2:= Exception  @type object;
#L151bc0.   goto L151bb6;
#L151bc2.   v2:= Exception  @type object;
#L151bc4.   goto L151bbc;
  catch  [|java:util:prefs:BackingStoreException|] @[L151bb0..L151bb6] goto L151bbe;
  catch  [|java:util:prefs:BackingStoreException|] @[L151bb6..L151bbc] goto L151bc2;

   }
record [|java:util:prefs:AbstractPreferences$EventDispatcher|]  @type class @AccessFlag   extends [|java:lang:Thread|] {
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$EventDispatcher.<init>|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.<init>:(Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L151bf4.   call temp:=  [|java:lang:Thread.<init>|](v0, v1) @signature [|Ljava/lang/Thread;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L151bfa.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchNodeAdd|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v5 @type (this), [|java:util:prefs:NodeChangeEvent|] v6 @type (object), [|java:util:List|] v7 @type (object)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchNodeAdd:(Ljava/util/prefs/NodeChangeEvent;Ljava/util/List;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L151c0c.   (@monitorenter v7)
#L151c0e.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L151c14.   v1:= temp  @type object;
#L151c16.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151c1c.   v4:= temp;
#L151c1e.   if v4 == 0 then goto L151c44;
#L151c22.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151c28.   v3:= temp  @type object;
#L151c2a.   v3:= ([|java:util:EventListener|])v3;
#L151c2e.   v0:= v3  @type object;
#L151c30.   v0:= ([|java:util:prefs:NodeChangeListener|])v0;
#L151c34.   v2:= v0  @type object;
#L151c36.   call temp:=  [|java:util:prefs:NodeChangeListener.childAdded|](v2, v6) @signature [|Ljava/util/prefs/NodeChangeListener;.childAdded:(Ljava/util/prefs/NodeChangeEvent;)V|] @classDescriptor [|java:util:prefs:NodeChangeListener|] @type interface;
#L151c3c.   goto L151c16;
#L151c3e.   v4:= Exception  @type object;
#L151c40.   (@monitorexit v7)
#L151c42.   throw v4;
#L151c44.   (@monitorexit v7)
#L151c46.   return @void ;
  catch  [|any|] @[L151c0e..L151c42] goto L151c3e;
  catch  [|any|] @[L151c44..L151c46] goto L151c3e;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchNodeRemove|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v3 @type (this), [|java:util:prefs:NodeChangeEvent|] v4 @type (object), [|java:util:List|] v5 @type (object)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchNodeRemove:(Ljava/util/prefs/NodeChangeEvent;Ljava/util/List;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L151c6c.   (@monitorenter v5)
#L151c6e.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L151c74.   v0:= temp  @type object;
#L151c76.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151c7c.   v2:= temp;
#L151c7e.   if v2 == 0 then goto L151ca0;
#L151c82.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151c88.   v1:= temp  @type object;
#L151c8a.   v1:= ([|java:util:EventListener|])v1;
#L151c8e.   v1:= ([|java:util:prefs:NodeChangeListener|])v1;
#L151c92.   call temp:=  [|java:util:prefs:NodeChangeListener.childRemoved|](v1, v4) @signature [|Ljava/util/prefs/NodeChangeListener;.childRemoved:(Ljava/util/prefs/NodeChangeEvent;)V|] @classDescriptor [|java:util:prefs:NodeChangeListener|] @type interface;
#L151c98.   goto L151c76;
#L151c9a.   v2:= Exception  @type object;
#L151c9c.   (@monitorexit v5)
#L151c9e.   throw v2;
#L151ca0.   (@monitorexit v5)
#L151ca2.   return @void ;
  catch  [|any|] @[L151c6e..L151c9e] goto L151c9a;
  catch  [|any|] @[L151ca0..L151ca2] goto L151c9a;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchPrefChange|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v3 @type (this), [|java:util:prefs:PreferenceChangeEvent|] v4 @type (object), [|java:util:List|] v5 @type (object)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchPrefChange:(Ljava/util/prefs/PreferenceChangeEvent;Ljava/util/List;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L151cc8.   (@monitorenter v5)
#L151cca.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L151cd0.   v0:= temp  @type object;
#L151cd2.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151cd8.   v2:= temp;
#L151cda.   if v2 == 0 then goto L151cfc;
#L151cde.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151ce4.   v1:= temp  @type object;
#L151ce6.   v1:= ([|java:util:EventListener|])v1;
#L151cea.   v1:= ([|java:util:prefs:PreferenceChangeListener|])v1;
#L151cee.   call temp:=  [|java:util:prefs:PreferenceChangeListener.preferenceChange|](v1, v4) @signature [|Ljava/util/prefs/PreferenceChangeListener;.preferenceChange:(Ljava/util/prefs/PreferenceChangeEvent;)V|] @classDescriptor [|java:util:prefs:PreferenceChangeListener|] @type interface;
#L151cf4.   goto L151cd2;
#L151cf6.   v2:= Exception  @type object;
#L151cf8.   (@monitorexit v5)
#L151cfa.   throw v2;
#L151cfc.   (@monitorexit v5)
#L151cfe.   return @void ;
  catch  [|any|] @[L151cca..L151cfa] goto L151cf6;
  catch  [|any|] @[L151cfc..L151cfe] goto L151cf6;

   }
    procedure [|java:util:EventObject|] [|java:util:prefs:AbstractPreferences$EventDispatcher.getEventObject|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v4 @type (this)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.getEventObject:()Ljava/util/EventObject;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L151d24.   call temp:=  [|java:util:prefs:AbstractPreferences.access$200|]() @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151d2a.   v2:= temp  @type object;
#L151d2c.   (@monitorenter v2)
#L151d2e.   call temp:=  [|java:util:prefs:AbstractPreferences.access$200|]() @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151d34.   v1:= temp  @type object;
#L151d36.   call temp:=  [|java:util:List.isEmpty|](v1) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L151d3c.   v1:= temp;
#L151d3e.   if v1 == 0 then goto L151d50;
#L151d42.   call temp:=  [|java:util:prefs:AbstractPreferences.access$200|]() @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151d48.   v1:= temp  @type object;
#L151d4a.   call temp:=  [|java:lang:Object.wait|](v1) @signature [|Ljava/lang/Object;.wait:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L151d50.   call temp:=  [|java:util:prefs:AbstractPreferences.access$200|]() @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151d56.   v1:= temp  @type object;
#L151d58.   v3:= 0  @length 4;
#L151d5a.   call temp:=  [|java:util:List.get|](v1, v3) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L151d60.   v0:= temp  @type object;
#L151d62.   v0:= ([|java:util:EventObject|])v0;
#L151d66.   call temp:=  [|java:util:prefs:AbstractPreferences.access$200|]() @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151d6c.   v1:= temp  @type object;
#L151d6e.   v3:= 0  @length 4;
#L151d70.   call temp:=  [|java:util:List.remove|](v1, v3) @signature [|Ljava/util/List;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L151d76.   (@monitorexit v2)
#L151d78.   return v0  @type object;
#L151d7a.   v1:= Exception  @type object;
#L151d7c.   (@monitorexit v2)
#L151d7e.   throw v1;
  catch  [|any|] @[L151d2e..L151d7e] goto L151d7a;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences$EventDispatcher.run|] ([|java:util:prefs:AbstractPreferences$EventDispatcher|] v4 @type (this)) @owner [|java:util:prefs:AbstractPreferences$EventDispatcher|] @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L151d9c.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.getEventObject|](v4) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.getEventObject:()Ljava/util/EventObject;|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type direct;
#L151da2.   v1:= temp  @type object;
#L151da4.   call temp:=  [|java:util:EventObject.getSource|](v1) @signature [|Ljava/util/EventObject;.getSource:()Ljava/lang/Object;|] @classDescriptor [|java:util:EventObject|] @type virtual;
#L151daa.   v2:= temp  @type object;
#L151dac.   v2:= ([|java:util:prefs:AbstractPreferences|])v2;
#L151db0.   v3:= instanceof @varname v1 @type [|java:util:prefs:AbstractPreferences$NodeAddEvent|];
#L151db4.   if v3 == 0 then goto L151dd6;
#L151db8.   v1:= ([|java:util:prefs:NodeChangeEvent|])v1;
#L151dbc.   call temp:=  [|java:util:prefs:AbstractPreferences.access$000|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.access$000:(Ljava/util/prefs/AbstractPreferences;)Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151dc2.   v3:= temp  @type object;
#L151dc4.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchNodeAdd|](v4, v1, v3) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchNodeAdd:(Ljava/util/prefs/NodeChangeEvent;Ljava/util/List;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type direct;
#L151dca.   goto L151d9c;
#L151dcc.   v0:= Exception  @type object;
#L151dce.   call temp:=  [|java:lang:InterruptedException.printStackTrace|](v0) @signature [|Ljava/lang/InterruptedException;.printStackTrace:()V|] @classDescriptor [|java:lang:InterruptedException|] @type virtual;
#L151dd4.   goto L151d9c;
#L151dd6.   v3:= instanceof @varname v1 @type [|java:util:prefs:AbstractPreferences$NodeRemoveEvent|];
#L151dda.   if v3 == 0 then goto L151df2;
#L151dde.   v1:= ([|java:util:prefs:NodeChangeEvent|])v1;
#L151de2.   call temp:=  [|java:util:prefs:AbstractPreferences.access$000|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.access$000:(Ljava/util/prefs/AbstractPreferences;)Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151de8.   v3:= temp  @type object;
#L151dea.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchNodeRemove|](v4, v1, v3) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchNodeRemove:(Ljava/util/prefs/NodeChangeEvent;Ljava/util/List;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type direct;
#L151df0.   goto L151d9c;
#L151df2.   v3:= instanceof @varname v1 @type [|java:util:prefs:PreferenceChangeEvent|];
#L151df6.   if v3 == 0 then goto L151d9c;
#L151dfa.   v1:= ([|java:util:prefs:PreferenceChangeEvent|])v1;
#L151dfe.   call temp:=  [|java:util:prefs:AbstractPreferences.access$100|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.access$100:(Ljava/util/prefs/AbstractPreferences;)Ljava/util/List;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type static;
#L151e04.   v3:= temp  @type object;
#L151e06.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.dispatchPrefChange|](v4, v1, v3) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.dispatchPrefChange:(Ljava/util/prefs/PreferenceChangeEvent;Ljava/util/List;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type direct;
#L151e0c.   goto L151d9c;
  catch  [|java:lang:InterruptedException|] @[L151d9c..L151da2] goto L151dcc;

   }
record [|java:util:prefs:NodeChangeEvent|]  @type class @AccessFlag PUBLIC  extends [|java:util:EventObject|], [|java:io:Serializable|] {
      [|java:util:prefs:Preferences|] [|java:util:prefs:NodeChangeEvent.child|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:prefs:Preferences|] [|java:util:prefs:NodeChangeEvent.parent|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:prefs:NodeChangeEvent.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:NodeChangeEvent.<init>|] ([|java:util:prefs:NodeChangeEvent|] v0 @type (this), [|java:util:prefs:Preferences|] v1 @type (object), [|java:util:prefs:Preferences|] v2 @type (object)) @owner [|java:util:prefs:NodeChangeEvent|] @signature [|Ljava/util/prefs/NodeChangeEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L151e30.   call temp:=  [|java:util:EventObject.<init>|](v0, v1) @signature [|Ljava/util/EventObject;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:EventObject|] @type direct;
#L151e36.   v0.[|java:util:prefs:NodeChangeEvent.parent|]  := v1 @type object;
#L151e3a.   v0.[|java:util:prefs:NodeChangeEvent.child|]  := v2 @type object;
#L151e3e.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:NodeChangeEvent.readObject|] ([|java:util:prefs:NodeChangeEvent|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:prefs:NodeChangeEvent|] @signature [|Ljava/util/prefs/NodeChangeEvent;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L151e50.   v0:= new [|java:io:NotSerializableException|];
#L151e54.   call temp:=  [|java:io:NotSerializableException.<init>|](v0) @signature [|Ljava/io/NotSerializableException;.<init>:()V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L151e5a.   throw v0;

   }
    procedure [|void|] [|java:util:prefs:NodeChangeEvent.writeObject|] ([|java:util:prefs:NodeChangeEvent|] v1 @type (this), [|java:io:ObjectOutputStream|] v2 @type (object)) @owner [|java:util:prefs:NodeChangeEvent|] @signature [|Ljava/util/prefs/NodeChangeEvent;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L151e6c.   v0:= new [|java:io:NotSerializableException|];
#L151e70.   call temp:=  [|java:io:NotSerializableException.<init>|](v0) @signature [|Ljava/io/NotSerializableException;.<init>:()V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L151e76.   throw v0;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:NodeChangeEvent.getChild|] ([|java:util:prefs:NodeChangeEvent|] v1 @type (this)) @owner [|java:util:prefs:NodeChangeEvent|] @signature [|Ljava/util/prefs/NodeChangeEvent;.getChild:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151e88.   v0:= v1.[|java:util:prefs:NodeChangeEvent.child|]   @type object;
#L151e8c.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:NodeChangeEvent.getParent|] ([|java:util:prefs:NodeChangeEvent|] v1 @type (this)) @owner [|java:util:prefs:NodeChangeEvent|] @signature [|Ljava/util/prefs/NodeChangeEvent;.getParent:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L151ea0.   v0:= v1.[|java:util:prefs:NodeChangeEvent.parent|]   @type object;
#L151ea4.   return v0  @type object;

   }
record [|java:util:prefs:AbstractPreferences$NodeAddEvent|]  @type class @AccessFlag   extends [|java:util:prefs:NodeChangeEvent|] {
   }
      global [|long|] @@[|java:util:prefs:AbstractPreferences$NodeAddEvent.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:AbstractPreferences$NodeAddEvent.<init>|] ([|java:util:prefs:AbstractPreferences$NodeAddEvent|] v0 @type (this), [|java:util:prefs:Preferences|] v1 @type (object), [|java:util:prefs:Preferences|] v2 @type (object)) @owner [|java:util:prefs:AbstractPreferences$NodeAddEvent|] @signature [|Ljava/util/prefs/AbstractPreferences$NodeAddEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L151eb8.   call temp:=  [|java:util:prefs:NodeChangeEvent.<init>|](v0, v1, v2) @signature [|Ljava/util/prefs/NodeChangeEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:NodeChangeEvent|] @type direct;
#L151ebe.   return @void ;

   }
