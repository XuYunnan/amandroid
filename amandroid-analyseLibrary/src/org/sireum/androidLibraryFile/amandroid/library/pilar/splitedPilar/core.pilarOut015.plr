record [|java:util:prefs:AbstractPreferences$NodeRemoveEvent|]  @type class @AccessFlag   extends [|java:util:prefs:NodeChangeEvent|] {
   }
      global [|long|] @@[|java:util:prefs:AbstractPreferences$NodeRemoveEvent.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:AbstractPreferences$NodeRemoveEvent.<init>|] ([|java:util:prefs:AbstractPreferences$NodeRemoveEvent|] v0 @type (this), [|java:util:prefs:Preferences|] v1 @type (object), [|java:util:prefs:Preferences|] v2 @type (object)) @owner [|java:util:prefs:AbstractPreferences$NodeRemoveEvent|] @signature [|Ljava/util/prefs/AbstractPreferences$NodeRemoveEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L151ed0.   call temp:=  [|java:util:prefs:NodeChangeEvent.<init>|](v0, v1, v2) @signature [|Ljava/util/prefs/NodeChangeEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:NodeChangeEvent|] @type direct;
#L151ed6.   return @void ;

   }
record [|java:util:prefs:Preferences|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|int|] @@[|java:util:prefs:Preferences.MAX_KEY_LENGTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:prefs:Preferences.MAX_NAME_LENGTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:prefs:Preferences.MAX_VALUE_LENGTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:prefs:PreferencesFactory|] @@[|java:util:prefs:Preferences.factory|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:Preferences.<clinit>|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L151ee8.   call temp:=  [|java:util:prefs:Preferences.findPreferencesFactory|]() @signature [|Ljava/util/prefs/Preferences;.findPreferencesFactory:()Ljava/util/prefs/PreferencesFactory;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L151eee.   v0:= temp  @type object;
#L151ef0.   @@[|java:util:prefs:Preferences.factory|] := v0  @type object;
#L151ef4.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:Preferences.<init>|] ([|java:util:prefs:Preferences|] v0 @type (this)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L151f08.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L151f0e.   return @void ;

   }
    procedure [|java:util:prefs:PreferencesFactory|] [|java:util:prefs:Preferences.findPreferencesFactory|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.findPreferencesFactory:()Ljava/util/prefs/PreferencesFactory;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L151f20.   v3:= new [|java:util:prefs:PreferencesFactory|];
#L151f24.   call temp:=  [|java:util:ServiceLoader.loadFromSystemProperty|](v3) @signature [|Ljava/util/ServiceLoader;.loadFromSystemProperty:(Ljava/lang/Class;)Ljava/lang/Object;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L151f2a.   v2:= temp  @type object;
#L151f2c.   v2:= ([|java:util:prefs:PreferencesFactory|])v2;
#L151f30.   if v2 == 0 then goto L151f36;
#L151f34.   return v2  @type object;
#L151f36.   v3:= new [|java:util:prefs:PreferencesFactory|];
#L151f3a.   call temp:=  [|java:util:ServiceLoader.load|](v3) @signature [|Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L151f40.   v3:= temp  @type object;
#L151f42.   call temp:=  [|java:util:ServiceLoader.iterator|](v3) @signature [|Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ServiceLoader|] @type virtual;
#L151f48.   v0:= temp  @type object;
#L151f4a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151f50.   v3:= temp;
#L151f52.   if v3 == 0 then goto L151f66;
#L151f56.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L151f5c.   v1:= temp  @type object;
#L151f5e.   v1:= ([|java:util:prefs:PreferencesFactory|])v1;
#L151f62.   v2:= v1  @type object;
#L151f64.   goto L151f34;
#L151f66.   v2:= new [|java:util:prefs:FilePreferencesFactoryImpl|];
#L151f6a.   call temp:=  [|java:util:prefs:FilePreferencesFactoryImpl.<init>|](v2) @signature [|Ljava/util/prefs/FilePreferencesFactoryImpl;.<init>:()V|] @classDescriptor [|java:util:prefs:FilePreferencesFactoryImpl|] @type direct;
#L151f70.   goto L151f34;

   }
    procedure [|java:lang:String|] [|java:util:prefs:Preferences.getNodeName|] ([|java:lang:Class|] v5 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getNodeName:(Ljava/lang/Class;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L151f84.   call temp:=  [|java:lang:Class.getPackage|](v5) @signature [|Ljava/lang/Class;.getPackage:()Ljava/lang/Package;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L151f8a.   v0:= temp  @type object;
#L151f8c.   if v0 != 0 then goto L151f96;
#L151f90.   v1:= "/<unnamed>" @type (object, string);
#L151f94.   return v1  @type object;
#L151f96.   v1:= new [|java:lang:StringBuilder|];
#L151f9a.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L151fa0.   v2:= "/" @type (object, string);
#L151fa4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151faa.   v1:= temp  @type object;
#L151fac.   call temp:=  [|java:lang:Package.getName|](v0) @signature [|Ljava/lang/Package;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Package|] @type virtual;
#L151fb2.   v2:= temp  @type object;
#L151fb4.   v3:= 46  @length 16;
#L151fb8.   v4:= 47  @length 16;
#L151fbc.   call temp:=  [|java:lang:String.replace|](v2, v3, v4) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L151fc2.   v2:= temp  @type object;
#L151fc4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151fca.   v1:= temp  @type object;
#L151fcc.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L151fd2.   v1:= temp  @type object;
#L151fd4.   goto L151f94;

   }
    procedure [|void|] [|java:util:prefs:Preferences.importPreferences|] ([|java:io:InputStream|] v2 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.importPreferences:(Ljava/io/InputStream;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L151fe8.   if v2 != 0 then goto L151ffc;
#L151fec.   v0:= new [|java:net:MalformedURLException|];
#L151ff0.   v1:= "Inputstream cannot be null" @type (object, string);
#L151ff4.   call temp:=  [|java:net:MalformedURLException.<init>|](v0, v1) @signature [|Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:MalformedURLException|] @type direct;
#L151ffa.   throw v0;
#L151ffc.   call temp:=  [|java:util:prefs:XMLParser.importPrefs|](v2) @signature [|Ljava/util/prefs/XMLParser;.importPrefs:(Ljava/io/InputStream;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L152002.   return @void ;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.systemNodeForPackage|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.systemNodeForPackage:(Ljava/lang/Class;)Ljava/util/prefs/Preferences;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L152014.   v0:= @@[|java:util:prefs:Preferences.factory|]   @type object;
#L152018.   call temp:=  [|java:util:prefs:PreferencesFactory.systemRoot|](v0) @signature [|Ljava/util/prefs/PreferencesFactory;.systemRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:PreferencesFactory|] @type interface;
#L15201e.   v0:= temp  @type object;
#L152020.   call temp:=  [|java:util:prefs:Preferences.getNodeName|](v2) @signature [|Ljava/util/prefs/Preferences;.getNodeName:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L152026.   v1:= temp  @type object;
#L152028.   call temp:=  [|java:util:prefs:Preferences.node|](v0, v1) @signature [|Ljava/util/prefs/Preferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L15202e.   v0:= temp  @type object;
#L152030.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.systemRoot|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.systemRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L152044.   v0:= @@[|java:util:prefs:Preferences.factory|]   @type object;
#L152048.   call temp:=  [|java:util:prefs:PreferencesFactory.systemRoot|](v0) @signature [|Ljava/util/prefs/PreferencesFactory;.systemRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:PreferencesFactory|] @type interface;
#L15204e.   v0:= temp  @type object;
#L152050.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.userNodeForPackage|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.userNodeForPackage:(Ljava/lang/Class;)Ljava/util/prefs/Preferences;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L152064.   v0:= @@[|java:util:prefs:Preferences.factory|]   @type object;
#L152068.   call temp:=  [|java:util:prefs:PreferencesFactory.userRoot|](v0) @signature [|Ljava/util/prefs/PreferencesFactory;.userRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:PreferencesFactory|] @type interface;
#L15206e.   v0:= temp  @type object;
#L152070.   call temp:=  [|java:util:prefs:Preferences.getNodeName|](v2) @signature [|Ljava/util/prefs/Preferences;.getNodeName:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L152076.   v1:= temp  @type object;
#L152078.   call temp:=  [|java:util:prefs:Preferences.node|](v0, v1) @signature [|Ljava/util/prefs/Preferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L15207e.   v0:= temp  @type object;
#L152080.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.userRoot|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.userRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L152094.   v0:= @@[|java:util:prefs:Preferences.factory|]   @type object;
#L152098.   call temp:=  [|java:util:prefs:PreferencesFactory.userRoot|](v0) @signature [|Ljava/util/prefs/PreferencesFactory;.userRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:PreferencesFactory|] @type interface;
#L15209e.   v0:= temp  @type object;
#L1520a0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:prefs:Preferences.absolutePath|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.absolutePath:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.addNodeChangeListener|] ([|java:util:prefs:NodeChangeListener|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.addNodeChangeListener:(Ljava/util/prefs/NodeChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.addPreferenceChangeListener|] ([|java:util:prefs:PreferenceChangeListener|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.addPreferenceChangeListener:(Ljava/util/prefs/PreferenceChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|][] [|java:util:prefs:Preferences.childrenNames|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.childrenNames:()[Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.clear|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.clear:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.exportNode|] ([|java:io:OutputStream|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.exportNode:(Ljava/io/OutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.exportSubtree|] ([|java:io:OutputStream|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.exportSubtree:(Ljava/io/OutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.flush|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:Preferences.get|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:prefs:Preferences.getBoolean|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getBoolean:(Ljava/lang/String;Z)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:util:prefs:Preferences.getByteArray|] ([|java:lang:String|] v0 @type (object), [|byte|][] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getByteArray:(Ljava/lang/String;[B)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:util:prefs:Preferences.getDouble|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getDouble:(Ljava/lang/String;D)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:util:prefs:Preferences.getFloat|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getFloat:(Ljava/lang/String;F)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:prefs:Preferences.getInt|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getInt:(Ljava/lang/String;I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:util:prefs:Preferences.getLong|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.getLong:(Ljava/lang/String;J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:prefs:Preferences.isUserNode|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.isUserNode:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|][] [|java:util:prefs:Preferences.keys|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.keys:()[Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:Preferences.name|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.name:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.node|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:prefs:Preferences.nodeExists|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.nodeExists:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:Preferences.parent|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.parent:()Ljava/util/prefs/Preferences;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.put|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putBoolean|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putBoolean:(Ljava/lang/String;Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putByteArray|] ([|java:lang:String|] v0 @type (object), [|byte|][] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putByteArray:(Ljava/lang/String;[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putDouble|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putDouble:(Ljava/lang/String;D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putFloat|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putFloat:(Ljava/lang/String;F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putInt|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putInt:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.putLong|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.putLong:(Ljava/lang/String;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.remove|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.remove:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.removeNode|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.removeNode:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.removeNodeChangeListener|] ([|java:util:prefs:NodeChangeListener|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.removeNodeChangeListener:(Ljava/util/prefs/NodeChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.removePreferenceChangeListener|] ([|java:util:prefs:PreferenceChangeListener|] v0 @type (object)) @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.removePreferenceChangeListener:(Ljava/util/prefs/PreferenceChangeListener;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:Preferences.sync|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.sync:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:Preferences.toString|] () @owner [|java:util:prefs:Preferences|] @signature [|Ljava/util/prefs/Preferences;.toString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:prefs:AbstractPreferences|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:prefs:Preferences|] {
      [|java:util:Map|] [|java:util:prefs:AbstractPreferences.cachedNode|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:prefs:AbstractPreferences.isRemoved|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:prefs:AbstractPreferences.lock|]    @AccessFlag PROTECTED_FINAL;
      [|boolean|] [|java:util:prefs:AbstractPreferences.newNode|]    @AccessFlag PROTECTED;
      [|java:util:List|] [|java:util:prefs:AbstractPreferences.nodeChangeListeners|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:prefs:AbstractPreferences.nodeName|]    @AccessFlag PRIVATE;
      [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.parentPref|]    @AccessFlag PRIVATE;
      [|java:util:List|] [|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]    @AccessFlag PRIVATE;
      [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.root|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:prefs:AbstractPreferences.userNode|]    @AccessFlag ;
   }
      global [|java:util:prefs:AbstractPreferences$EventDispatcher|] @@[|java:util:prefs:AbstractPreferences.dispatcher|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:List|] @@[|java:util:prefs:AbstractPreferences.events|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:AbstractPreferences.<clinit>|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1520b4.   v0:= new [|java:util:LinkedList|];
#L1520b8.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L1520be.   @@[|java:util:prefs:AbstractPreferences.events|] := v0  @type object;
#L1520c2.   v0:= new [|java:util:prefs:AbstractPreferences$EventDispatcher|];
#L1520c6.   v1:= "Preference Event Dispatcher" @type (object, string);
#L1520ca.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.<init>|](v0, v1) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type direct;
#L1520d0.   @@[|java:util:prefs:AbstractPreferences.dispatcher|] := v0  @type object;
#L1520d4.   v0:= @@[|java:util:prefs:AbstractPreferences.dispatcher|]   @type object;
#L1520d8.   v1:= 1  @length 4;
#L1520da.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.setDaemon|](v0, v1) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.setDaemon:(Z)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type virtual;
#L1520e0.   v0:= @@[|java:util:prefs:AbstractPreferences.dispatcher|]   @type object;
#L1520e4.   call temp:=  [|java:util:prefs:AbstractPreferences$EventDispatcher.start|](v0) @signature [|Ljava/util/prefs/AbstractPreferences$EventDispatcher;.start:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences$EventDispatcher|] @type virtual;
#L1520ea.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L1520f0.   v0:= temp  @type object;
#L1520f2.   v1:= new [|java:util:prefs:AbstractPreferences$1|];
#L1520f6.   call temp:=  [|java:util:prefs:AbstractPreferences$1.<init>|](v1) @signature [|Ljava/util/prefs/AbstractPreferences$1;.<init>:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences$1|] @type direct;
#L1520fc.   call temp:=  [|java:lang:Runtime.addShutdownHook|](v0, v1) @signature [|Ljava/lang/Runtime;.addShutdownHook:(Ljava/lang/Thread;)V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L152102.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.<init>|] ([|java:util:prefs:AbstractPreferences|] v4 @type (this), [|java:util:prefs:AbstractPreferences|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.<init>:(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L152114.   v1:= 1  @length 4;
#L152116.   v2:= 0  @length 4;
#L152118.   call temp:=  [|java:util:prefs:Preferences.<init>|](v4) @signature [|Ljava/util/prefs/Preferences;.<init>:()V|] @classDescriptor [|java:util:prefs:Preferences|] @type direct;
#L15211e.   if v5 != 0 then goto L152152;
#L152122.   v0:= v1;
#L152124.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15212a.   v3:= temp;
#L15212c.   if v3 != 0 then goto L152156;
#L152130.   v0:= v0 ^~ v1  @type int;
#L152132.   if v0 != 0 then goto L152146;
#L152136.   v0:= "/" @type (object, string);
#L15213a.   call temp:=  [|java:lang:String.indexOf|](v6, v0) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L152140.   v0:= temp;
#L152142.   if v0 < 0 then goto L15215a;
#L152146.   v0:= new [|java:lang:IllegalArgumentException|];
#L15214a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152150.   throw v0;
#L152152.   v0:= v2;
#L152154.   goto L152124;
#L152156.   v1:= v2;
#L152158.   goto L152130;
#L15215a.   if v5 != 0 then goto L1521b6;
#L15215e.   v0:= v4  @type object;
#L152160.   v4.[|java:util:prefs:AbstractPreferences.root|]  := v0 @type object;
#L152164.   v0:= new [|java:util:LinkedList|];
#L152168.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L15216e.   v4.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]  := v0 @type object;
#L152172.   v0:= new [|java:util:LinkedList|];
#L152176.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L15217c.   v4.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]  := v0 @type object;
#L152180.   v4.[|java:util:prefs:AbstractPreferences.isRemoved|]  := v2 @boolean;
#L152184.   v0:= new [|java:util:HashMap|];
#L152188.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L15218e.   v4.[|java:util:prefs:AbstractPreferences.cachedNode|]  := v0 @type object;
#L152192.   v4.[|java:util:prefs:AbstractPreferences.nodeName|]  := v6 @type object;
#L152196.   v4.[|java:util:prefs:AbstractPreferences.parentPref|]  := v5 @type object;
#L15219a.   v0:= new [|java:lang:Object|];
#L15219e.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1521a4.   v4.[|java:util:prefs:AbstractPreferences.lock|]  := v0 @type object;
#L1521a8.   v0:= v4.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L1521ac.   v0:= v0.[|java:util:prefs:AbstractPreferences.userNode|]   @boolean;
#L1521b0.   v4.[|java:util:prefs:AbstractPreferences.userNode|]  := v0 @boolean;
#L1521b4.   return @void ;
#L1521b6.   v0:= v5.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L1521ba.   goto L152160;

   }
    procedure [|java:util:List|] [|java:util:prefs:AbstractPreferences.access$000|] ([|java:util:prefs:AbstractPreferences|] v1 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.access$000:(Ljava/util/prefs/AbstractPreferences;)Ljava/util/List;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1521cc.   v0:= v1.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L1521d0.   return v0  @type object;

   }
    procedure [|java:util:List|] [|java:util:prefs:AbstractPreferences.access$100|] ([|java:util:prefs:AbstractPreferences|] v1 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.access$100:(Ljava/util/prefs/AbstractPreferences;)Ljava/util/List;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1521e4.   v0:= v1.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L1521e8.   return v0  @type object;

   }
    procedure [|java:util:List|] [|java:util:prefs:AbstractPreferences.access$200|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.access$200:()Ljava/util/List;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1521fc.   v0:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L152200.   return v0  @type object;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.checkState|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L152214.   call temp:=  [|java:util:prefs:AbstractPreferences.isRemoved|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.isRemoved:()Z|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15221a.   v0:= temp;
#L15221c.   if v0 == 0 then goto L152230;
#L152220.   v0:= new [|java:lang:IllegalStateException|];
#L152224.   v1:= "This node has been removed" @type (object, string);
#L152228.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15222e.   throw v0;
#L152230.   return @void ;

   }
    procedure [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.getNodeFromBackend|] ([|java:util:prefs:AbstractPreferences|] v4 @type (this), [|boolean|] v5, [|java:util:prefs:AbstractPreferences|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getNodeFromBackend:(ZLjava/util/prefs/AbstractPreferences;Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L152244.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15224a.   v1:= temp;
#L15224c.   v2:= 80  @length 16;
#L152250.   if v1 <= v2 then goto L152292;
#L152254.   v1:= new [|java:lang:IllegalArgumentException|];
#L152258.   v2:= new [|java:lang:StringBuilder|];
#L15225c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L152262.   v3:= "Name '" @type (object, string);
#L152266.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15226c.   v2:= temp  @type object;
#L15226e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L152274.   v2:= temp  @type object;
#L152276.   v3:= "' too long" @type (object, string);
#L15227a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L152280.   v2:= temp  @type object;
#L152282.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L152288.   v2:= temp  @type object;
#L15228a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152290.   throw v1;
#L152292.   if v5 == 0 then goto L1522c8;
#L152296.   call temp:=  [|java:util:prefs:AbstractPreferences.childSpi|](v6, v7) @signature [|Ljava/util/prefs/AbstractPreferences;.childSpi:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15229c.   v0:= temp  @type object;
#L15229e.   v1:= v6.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L1522a2.   call temp:=  [|java:util:Map.put|](v1, v7, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1522a8.   v1:= v0.[|java:util:prefs:AbstractPreferences.newNode|]   @boolean;
#L1522ac.   if v1 == 0 then goto L1522c6;
#L1522b0.   v1:= v6.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L1522b4.   call temp:=  [|java:util:List.size|](v1) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L1522ba.   v1:= temp;
#L1522bc.   if v1 <= 0 then goto L1522c6;
#L1522c0.   call temp:=  [|java:util:prefs:AbstractPreferences.notifyChildAdded|](v6, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.notifyChildAdded:(Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1522c6.   return v0  @type object;
#L1522c8.   call temp:=  [|java:util:prefs:AbstractPreferences.getChild|](v6, v7) @signature [|Ljava/util/prefs/AbstractPreferences;.getChild:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1522ce.   v0:= temp  @type object;
#L1522d0.   goto L1522c6;

   }
    procedure [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.nodeImpl|] ([|java:util:prefs:AbstractPreferences|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|boolean|] v11) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.nodeImpl:(Ljava/lang/String;Z)Ljava/util/prefs/AbstractPreferences;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1522e4.   v7:= "/" @type (object, string);
#L1522e8.   call temp:=  [|java:lang:String.split|](v10, v7) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1522ee.   v5:= temp  @type object;
#L1522f0.   v1:= v9  @type object;
#L1522f2.   v0:= v5  @type object;
#L1522f4.   v3:= v0.length;
#L1522f6.   v2:= 0  @length 4;
#L1522f8.   if v2 >= v3 then goto L15232a;
#L1522fc.   v4:= v0[v2]  @type object;
#L152300.   v8:= v1.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152304.   (@monitorenter v8)
#L152306.   v7:= v1.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L15230a.   call temp:=  [|java:util:Map.get|](v7, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L152310.   v6:= temp  @type object;
#L152312.   v6:= ([|java:util:prefs:AbstractPreferences|])v6;
#L152316.   if v6 != 0 then goto L152322;
#L15231a.   call temp:=  [|java:util:prefs:AbstractPreferences.getNodeFromBackend|](v9, v11, v1, v4) @signature [|Ljava/util/prefs/AbstractPreferences;.getNodeFromBackend:(ZLjava/util/prefs/AbstractPreferences;Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152320.   v6:= temp  @type object;
#L152322.   (@monitorexit v8)
#L152324.   v1:= v6  @type object;
#L152326.   if v1 != 0 then goto L152332;
#L15232a.   return v1  @type object;
#L15232c.   v7:= Exception  @type object;
#L15232e.   (@monitorexit v8)
#L152330.   throw v7;
#L152332.   v2:= v2 + 1;
#L152336.   goto L1522f8;
  catch  [|any|] @[L152306..L152330] goto L15232c;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.notifyChildAdded|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:util:prefs:Preferences|] v4 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.notifyChildAdded:(Ljava/util/prefs/Preferences;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L152354.   v0:= new [|java:util:prefs:AbstractPreferences$NodeAddEvent|];
#L152358.   call temp:=  [|java:util:prefs:AbstractPreferences$NodeAddEvent.<init>|](v0, v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences$NodeAddEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$NodeAddEvent|] @type direct;
#L15235e.   v2:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L152362.   (@monitorenter v2)
#L152364.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L152368.   call temp:=  [|java:util:List.add|](v1, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L15236e.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L152372.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L152378.   (@monitorexit v2)
#L15237a.   return @void ;
#L15237c.   v1:= Exception  @type object;
#L15237e.   (@monitorexit v2)
#L152380.   throw v1;
  catch  [|any|] @[L152364..L152380] goto L15237c;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.notifyChildRemoved|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:util:prefs:Preferences|] v4 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.notifyChildRemoved:(Ljava/util/prefs/Preferences;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1523a0.   v0:= new [|java:util:prefs:AbstractPreferences$NodeRemoveEvent|];
#L1523a4.   call temp:=  [|java:util:prefs:AbstractPreferences$NodeRemoveEvent.<init>|](v0, v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences$NodeRemoveEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences$NodeRemoveEvent|] @type direct;
#L1523aa.   v2:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L1523ae.   (@monitorenter v2)
#L1523b0.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L1523b4.   call temp:=  [|java:util:List.add|](v1, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L1523ba.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L1523be.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1523c4.   (@monitorexit v2)
#L1523c6.   return @void ;
#L1523c8.   v1:= Exception  @type object;
#L1523ca.   (@monitorexit v2)
#L1523cc.   throw v1;
  catch  [|any|] @[L1523b0..L1523cc] goto L1523c8;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.notifyPreferenceChange|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.notifyPreferenceChange:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1523ec.   v0:= new [|java:util:prefs:PreferenceChangeEvent|];
#L1523f0.   call temp:=  [|java:util:prefs:PreferenceChangeEvent.<init>|](v0, v3, v4, v5) @signature [|Ljava/util/prefs/PreferenceChangeEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:PreferenceChangeEvent|] @type direct;
#L1523f6.   v2:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L1523fa.   (@monitorenter v2)
#L1523fc.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L152400.   call temp:=  [|java:util:List.add|](v1, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L152406.   v1:= @@[|java:util:prefs:AbstractPreferences.events|]   @type object;
#L15240a.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L152410.   (@monitorexit v2)
#L152412.   return @void ;
#L152414.   v1:= Exception  @type object;
#L152416.   (@monitorexit v2)
#L152418.   throw v1;
  catch  [|any|] @[L1523fc..L152418] goto L152414;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removeNodeImpl|] ([|java:util:prefs:AbstractPreferences|] v11 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeImpl:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L152438.   v9:= v11.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L15243c.   (@monitorenter v9)
#L15243e.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v11) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152444.   call temp:=  [|java:util:prefs:AbstractPreferences.childrenNamesSpi|](v11) @signature [|Ljava/util/prefs/AbstractPreferences;.childrenNamesSpi:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15244a.   v4:= temp  @type object;
#L15244c.   v0:= v4  @type object;
#L15244e.   v6:= v0.length;
#L152450.   v5:= 0  @length 4;
#L152452.   if v5 >= v6 then goto L152482;
#L152456.   v3:= v0[v5]  @type object;
#L15245a.   v8:= v11.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L15245e.   call temp:=  [|java:util:Map.get|](v8, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L152464.   v8:= temp  @type object;
#L152466.   if v8 != 0 then goto L15247c;
#L15246a.   call temp:=  [|java:util:prefs:AbstractPreferences.childSpi|](v11, v3) @signature [|Ljava/util/prefs/AbstractPreferences;.childSpi:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152470.   v1:= temp  @type object;
#L152472.   v8:= v11.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L152476.   call temp:=  [|java:util:Map.put|](v8, v3, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L15247c.   v5:= v5 + 1;
#L152480.   goto L152452;
#L152482.   v8:= v11.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L152486.   call temp:=  [|java:util:Map.values|](v8) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L15248c.   v7:= temp  @type object;
#L15248e.   call temp:=  [|java:util:Collection.size|](v7) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L152494.   v8:= temp;
#L152496.   v8:= new [|java:util:prefs:AbstractPreferences|][v8];
#L15249a.   call temp:=  [|java:util:Collection.toArray|](v7, v8) @signature [|Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1524a0.   v2:= temp  @type object;
#L1524a2.   v2:= ([|java:util:prefs:AbstractPreferences|][])v2;
#L1524a6.   v0:= v2  @type object;
#L1524a8.   v6:= v0.length;
#L1524aa.   v5:= 0  @length 4;
#L1524ac.   if v5 >= v6 then goto L1524c0;
#L1524b0.   v1:= v0[v5]  @type object;
#L1524b4.   call temp:=  [|java:util:prefs:AbstractPreferences.removeNodeImpl|](v1) @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeImpl:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1524ba.   v5:= v5 + 1;
#L1524be.   goto L1524ac;
#L1524c0.   call temp:=  [|java:util:prefs:AbstractPreferences.removeNodeSpi|](v11) @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeSpi:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1524c6.   v8:= 1  @length 4;
#L1524c8.   v11.[|java:util:prefs:AbstractPreferences.isRemoved|]  := v8 @boolean;
#L1524cc.   v8:= v11.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L1524d0.   v8:= v8.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L1524d4.   v10:= v11.[|java:util:prefs:AbstractPreferences.nodeName|]   @type object;
#L1524d8.   call temp:=  [|java:util:Map.remove|](v8, v10) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1524de.   (@monitorexit v9)
#L1524e0.   v8:= v11.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L1524e4.   v8:= v8.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L1524e8.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L1524ee.   v8:= temp;
#L1524f0.   if v8 <= 0 then goto L1524fe;
#L1524f4.   v8:= v11.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L1524f8.   call temp:=  [|java:util:prefs:AbstractPreferences.notifyChildRemoved|](v8, v11) @signature [|Ljava/util/prefs/AbstractPreferences;.notifyChildRemoved:(Ljava/util/prefs/Preferences;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1524fe.   return @void ;
#L152500.   v8:= Exception  @type object;
#L152502.   (@monitorexit v9)
#L152504.   throw v8;
  catch  [|any|] @[L15243e..L1524e0] goto L152500;
  catch  [|any|] @[L152502..L152504] goto L152500;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.validateName|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.validateName:(Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L15252c.   v0:= "/" @type (object, string);
#L152530.   call temp:=  [|java:lang:String.endsWith|](v3, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152536.   v0:= temp;
#L152538.   if v0 == 0 then goto L15255a;
#L15253c.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L152542.   v0:= temp;
#L152544.   v1:= 1  @length 4;
#L152546.   if v0 <= v1 then goto L15255a;
#L15254a.   v0:= new [|java:lang:IllegalArgumentException|];
#L15254e.   v1:= "Name cannot end with '/'" @type (object, string);
#L152552.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152558.   throw v0;
#L15255a.   v0:= "//" @type (object, string);
#L15255e.   call temp:=  [|java:lang:String.indexOf|](v3, v0) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L152564.   v0:= temp;
#L152566.   if v0 < 0 then goto L15257a;
#L15256a.   v0:= new [|java:lang:IllegalArgumentException|];
#L15256e.   v1:= "Name cannot contain consecutive '/' characters" @type (object, string);
#L152572.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152578.   throw v0;
#L15257a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:prefs:AbstractPreferences.absolutePath|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.absolutePath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15258c.   v0:= v2.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L152590.   if v0 != 0 then goto L15259a;
#L152594.   v0:= "/" @type (object, string);
#L152598.   return v0  @type object;
#L15259a.   v0:= v2.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L15259e.   v1:= v2.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L1525a2.   if v0 != v1 then goto L1525d2;
#L1525a6.   v0:= new [|java:lang:StringBuilder|];
#L1525aa.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1525b0.   v1:= "/" @type (object, string);
#L1525b4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1525ba.   v0:= temp  @type object;
#L1525bc.   v1:= v2.[|java:util:prefs:AbstractPreferences.nodeName|]   @type object;
#L1525c0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1525c6.   v0:= temp  @type object;
#L1525c8.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1525ce.   v0:= temp  @type object;
#L1525d0.   goto L152598;
#L1525d2.   v0:= new [|java:lang:StringBuilder|];
#L1525d6.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1525dc.   v1:= v2.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L1525e0.   call temp:=  [|java:util:prefs:AbstractPreferences.absolutePath|](v1) @signature [|Ljava/util/prefs/AbstractPreferences;.absolutePath:()Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1525e6.   v1:= temp  @type object;
#L1525e8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1525ee.   v0:= temp  @type object;
#L1525f0.   v1:= "/" @type (object, string);
#L1525f4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1525fa.   v0:= temp  @type object;
#L1525fc.   v1:= v2.[|java:util:prefs:AbstractPreferences.nodeName|]   @type object;
#L152600.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L152606.   v0:= temp  @type object;
#L152608.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15260e.   v0:= temp  @type object;
#L152610.   goto L152598;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.addNodeChangeListener|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:util:prefs:NodeChangeListener|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.addNodeChangeListener:(Ljava/util/prefs/NodeChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152624.   if v3 != 0 then goto L152638;
#L152628.   v0:= new [|java:lang:NullPointerException|];
#L15262c.   v1:= "ncl == null" @type (object, string);
#L152630.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152636.   throw v0;
#L152638.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L15263e.   v1:= v2.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L152642.   (@monitorenter v1)
#L152644.   v0:= v2.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L152648.   call temp:=  [|java:util:List.add|](v0, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L15264e.   (@monitorexit v1)
#L152650.   return @void ;
#L152652.   v0:= Exception  @type object;
#L152654.   (@monitorexit v1)
#L152656.   throw v0;
  catch  [|any|] @[L152644..L152656] goto L152652;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.addPreferenceChangeListener|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:util:prefs:PreferenceChangeListener|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.addPreferenceChangeListener:(Ljava/util/prefs/PreferenceChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152674.   if v3 != 0 then goto L152688;
#L152678.   v0:= new [|java:lang:NullPointerException|];
#L15267c.   v1:= "pcl == null" @type (object, string);
#L152680.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152686.   throw v0;
#L152688.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L15268e.   v1:= v2.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L152692.   (@monitorenter v1)
#L152694.   v0:= v2.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L152698.   call temp:=  [|java:util:List.add|](v0, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L15269e.   (@monitorexit v1)
#L1526a0.   return @void ;
#L1526a2.   v0:= Exception  @type object;
#L1526a4.   (@monitorexit v1)
#L1526a6.   throw v0;
  catch  [|any|] @[L152694..L1526a6] goto L1526a2;

   }
    procedure [|java:util:prefs:AbstractPreferences|][] [|java:util:prefs:AbstractPreferences.cachedChildren|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.cachedChildren:()[Ljava/util/prefs/AbstractPreferences;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L1526c4.   v0:= v2.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L1526c8.   call temp:=  [|java:util:Map.values|](v0) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L1526ce.   v0:= temp  @type object;
#L1526d0.   v1:= v2.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L1526d4.   call temp:=  [|java:util:Map.size|](v1) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L1526da.   v1:= temp;
#L1526dc.   v1:= new [|java:util:prefs:AbstractPreferences|][v1];
#L1526e0.   call temp:=  [|java:util:Collection.toArray|](v0, v1) @signature [|Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1526e6.   v0:= temp  @type object;
#L1526e8.   v0:= ([|java:util:prefs:AbstractPreferences|][])v0;
#L1526ec.   return v0  @type object;

   }
    procedure [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.childSpi|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.childSpi:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|][] [|java:util:prefs:AbstractPreferences.childrenNames|] ([|java:util:prefs:AbstractPreferences|] v5 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.childrenNames:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L152700.   v4:= v5.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152704.   (@monitorenter v4)
#L152706.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v5) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L15270c.   v2:= new [|java:util:TreeSet|];
#L152710.   v3:= v5.[|java:util:prefs:AbstractPreferences.cachedNode|]   @type object;
#L152714.   call temp:=  [|java:util:Map.keySet|](v3) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L15271a.   v3:= temp  @type object;
#L15271c.   call temp:=  [|java:util:TreeSet.<init>|](v2, v3) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L152722.   call temp:=  [|java:util:prefs:AbstractPreferences.childrenNamesSpi|](v5) @signature [|Ljava/util/prefs/AbstractPreferences;.childrenNamesSpi:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152728.   v1:= temp  @type object;
#L15272a.   v0:= 0  @length 4;
#L15272c.   v3:= v1.length;
#L15272e.   if v0 >= v3 then goto L152742;
#L152732.   v3:= v1[v0]  @type object;
#L152736.   call temp:=  [|java:util:TreeSet.add|](v2, v3) @signature [|Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L15273c.   v0:= v0 + 1;
#L152740.   goto L15272c;
#L152742.   call temp:=  [|java:util:TreeSet.size|](v2) @signature [|Ljava/util/TreeSet;.size:()I|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L152748.   v3:= temp;
#L15274a.   v3:= new [|java:lang:String|][v3];
#L15274e.   call temp:=  [|java:util:TreeSet.toArray|](v2, v3) @signature [|Ljava/util/TreeSet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L152754.   v3:= temp  @type object;
#L152756.   v3:= ([|java:lang:String|][])v3;
#L15275a.   (@monitorexit v4)
#L15275c.   return v3  @type object;
#L15275e.   v3:= Exception  @type object;
#L152760.   (@monitorexit v4)
#L152762.   throw v3;
  catch  [|any|] @[L152706..L152762] goto L15275e;

   }
    procedure [|java:lang:String|][] [|java:util:prefs:AbstractPreferences.childrenNamesSpi|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.childrenNamesSpi:()[Ljava/lang/String;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.clear|] ([|java:util:prefs:AbstractPreferences|] v6 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L152780.   v5:= v6.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152784.   (@monitorenter v5)
#L152786.   call temp:=  [|java:util:prefs:AbstractPreferences.keys|](v6) @signature [|Ljava/util/prefs/AbstractPreferences;.keys:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15278c.   v0:= temp  @type object;
#L15278e.   v3:= v0.length;
#L152790.   v1:= 0  @length 4;
#L152792.   if v1 >= v3 then goto L1527a6;
#L152796.   v2:= v0[v1]  @type object;
#L15279a.   call temp:=  [|java:util:prefs:AbstractPreferences.remove|](v6, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.remove:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1527a0.   v1:= v1 + 1;
#L1527a4.   goto L152792;
#L1527a6.   (@monitorexit v5)
#L1527a8.   return @void ;
#L1527aa.   v4:= Exception  @type object;
#L1527ac.   (@monitorexit v5)
#L1527ae.   throw v4;
  catch  [|any|] @[L152786..L1527ae] goto L1527aa;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.exportNode|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.exportNode:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1527cc.   if v3 != 0 then goto L1527e0;
#L1527d0.   v0:= new [|java:lang:NullPointerException|];
#L1527d4.   v1:= "ostream == null" @type (object, string);
#L1527d8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1527de.   throw v0;
#L1527e0.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1527e6.   v0:= 0  @length 4;
#L1527e8.   call temp:=  [|java:util:prefs:XMLParser.exportPrefs|](v2, v3, v0) @signature [|Ljava/util/prefs/XMLParser;.exportPrefs:(Ljava/util/prefs/Preferences;Ljava/io/OutputStream;Z)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L1527ee.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.exportSubtree|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.exportSubtree:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152800.   if v3 != 0 then goto L152814;
#L152804.   v0:= new [|java:lang:NullPointerException|];
#L152808.   v1:= "ostream == null" @type (object, string);
#L15280c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152812.   throw v0;
#L152814.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L15281a.   v0:= 1  @length 4;
#L15281c.   call temp:=  [|java:util:prefs:XMLParser.exportPrefs|](v2, v3, v0) @signature [|Ljava/util/prefs/XMLParser;.exportPrefs:(Ljava/util/prefs/Preferences;Ljava/io/OutputStream;Z)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L152822.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.flush|] ([|java:util:prefs:AbstractPreferences|] v4 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L152834.   v3:= v4.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152838.   (@monitorenter v3)
#L15283a.   call temp:=  [|java:util:prefs:AbstractPreferences.flushSpi|](v4) @signature [|Ljava/util/prefs/AbstractPreferences;.flushSpi:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152840.   (@monitorexit v3)
#L152842.   call temp:=  [|java:util:prefs:AbstractPreferences.cachedChildren|](v4) @signature [|Ljava/util/prefs/AbstractPreferences;.cachedChildren:()[Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152848.   v0:= temp  @type object;
#L15284a.   v1:= 0  @length 4;
#L15284c.   v2:= v0.length;
#L15284e.   if v1 >= v2 then goto L152868;
#L152852.   v2:= v0[v1]  @type object;
#L152856.   call temp:=  [|java:util:prefs:AbstractPreferences.flush|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.flush:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15285c.   v1:= v1 + 1;
#L152860.   goto L15284c;
#L152862.   v2:= Exception  @type object;
#L152864.   (@monitorexit v3)
#L152866.   throw v2;
#L152868.   return @void ;
  catch  [|any|] @[L15283a..L152842] goto L152862;
  catch  [|any|] @[L152864..L152866] goto L152862;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.flushSpi|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.flushSpi:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:AbstractPreferences.get|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152890.   if v4 != 0 then goto L1528a4;
#L152894.   v1:= new [|java:lang:NullPointerException|];
#L152898.   v2:= "key == null" @type (object, string);
#L15289c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1528a2.   throw v1;
#L1528a4.   v0:= 0  @length 4;
#L1528a6.   v2:= v3.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L1528aa.   (@monitorenter v2)
#L1528ac.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v3) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1528b2.   call temp:=  [|java:util:prefs:AbstractPreferences.getSpi|](v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences;.getSpi:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1528b8.   v0:= temp  @type object;
#L1528ba.   (@monitorexit v2)
#L1528bc.   if v0 != 0 then goto L1528c8;
#L1528c0.   return v5  @type object;
#L1528c2.   v1:= Exception  @type object;
#L1528c4.   (@monitorexit v2)
#L1528c6.   throw v1;
#L1528c8.   v5:= v0  @type object;
#L1528ca.   goto L1528c0;
#L1528cc.   v1:= Exception  @type object;
#L1528ce.   goto L1528ba;
  catch  [|any|] @[L1528ac..L1528b2] goto L1528c2;
  catch  [|java:lang:Exception|] @[L1528b2..L1528b8] goto L1528cc;
  catch  [|any|] @[L1528b2..L1528b8] goto L1528c2;
  catch  [|any|] @[L1528ba..L1528c6] goto L1528c2;

   }
    procedure [|boolean|] [|java:util:prefs:AbstractPreferences.getBoolean|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getBoolean:(Ljava/lang/String;Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152900.   v1:= 0  @length 4;
#L152902.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v2, v3, v1) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152908.   v0:= temp  @type object;
#L15290a.   if v0 != 0 then goto L152910;
#L15290e.   return v4;
#L152910.   v1:= "true" @type (object, string);
#L152914.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15291a.   v1:= temp;
#L15291c.   if v1 == 0 then goto L152924;
#L152920.   v4:= 1  @length 4;
#L152922.   goto L15290e;
#L152924.   v1:= "false" @type (object, string);
#L152928.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15292e.   v1:= temp;
#L152930.   if v1 == 0 then goto L15290e;
#L152934.   v4:= 0  @length 4;
#L152936.   goto L15290e;

   }
    procedure [|byte|][] [|java:util:prefs:AbstractPreferences.getByteArray|] ([|java:util:prefs:AbstractPreferences|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|byte|][] v6) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getByteArray:(Ljava/lang/String;[B)[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L152948.   v3:= 0  @length 4;
#L15294a.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v4, v5, v3) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152950.   v2:= temp  @type object;
#L152952.   if v2 != 0 then goto L152958;
#L152956.   return v6  @type object;
#L152958.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15295e.   v3:= temp;
#L152960.   if v3 != 0 then goto L15296a;
#L152964.   v6:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L152968.   goto L152956;
#L15296a.   v3:= @@[|java:nio:charset:Charsets.US_ASCII|]   @type object;
#L15296e.   call temp:=  [|java:lang:String.getBytes|](v2, v3) @signature [|Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L152974.   v0:= temp  @type object;
#L152976.   v3:= v0.length;
#L152978.   v3:= v3 % 4;
#L15297c.   if v3 != 0 then goto L152956;
#L152980.   call temp:=  [|libcore:io:Base64.decode|](v0) @signature [|Llibcore/io/Base64;.decode:([B)[B|] @classDescriptor [|libcore:io:Base64|] @type static;
#L152986.   v6:= temp  @type object;
#L152988.   goto L152956;
#L15298a.   v1:= Exception  @type object;
#L15298c.   goto L152956;
  catch  [|java:lang:Exception|] @[L15296a..L152986] goto L15298a;

   }
    procedure [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:AbstractPreferences.getChild|] ([|java:util:prefs:AbstractPreferences|] v8 @type (this), [|java:lang:String|] v9 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getChild:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1529b0.   v7:= v8.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L1529b4.   (@monitorenter v7)
#L1529b6.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v8) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L1529bc.   v5:= 0  @length 4;
#L1529be.   call temp:=  [|java:util:prefs:AbstractPreferences.childrenNames|](v8) @signature [|Ljava/util/prefs/AbstractPreferences;.childrenNames:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1529c4.   v2:= temp  @type object;
#L1529c6.   v0:= v2  @type object;
#L1529c8.   v4:= v0.length;
#L1529ca.   v3:= 0  @length 4;
#L1529cc.   if v3 >= v4 then goto L1529e8;
#L1529d0.   v1:= v0[v3]  @type object;
#L1529d4.   call temp:=  [|java:lang:String.equals|](v1, v9) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1529da.   v6:= temp;
#L1529dc.   if v6 == 0 then goto L1529ec;
#L1529e0.   call temp:=  [|java:util:prefs:AbstractPreferences.childSpi|](v8, v9) @signature [|Ljava/util/prefs/AbstractPreferences;.childSpi:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1529e6.   v5:= temp  @type object;
#L1529e8.   (@monitorexit v7)
#L1529ea.   return v5  @type object;
#L1529ec.   v3:= v3 + 1;
#L1529f0.   goto L1529cc;
#L1529f2.   v6:= Exception  @type object;
#L1529f4.   (@monitorexit v7)
#L1529f6.   throw v6;
  catch  [|any|] @[L1529b6..L1529f6] goto L1529f2;

   }
    procedure [|double|] [|java:util:prefs:AbstractPreferences.getDouble|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|double|] v5) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getDouble:(Ljava/lang/String;D)D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152a14.   v2:= 0  @length 4;
#L152a16.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v3, v4, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152a1c.   v1:= temp  @type object;
#L152a1e.   if v1 != 0 then goto L152a24;
#L152a22.   return v5  @type wide;
#L152a24.   call temp:=  [|java:lang:Double.parseDouble|](v1) @signature [|Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D|] @classDescriptor [|java:lang:Double|] @type static;
#L152a2a.   v5:= temp  @type wide;
#L152a2c.   goto L152a22;
#L152a2e.   v0:= Exception  @type object;
#L152a30.   goto L152a22;
  catch  [|java:lang:NumberFormatException|] @[L152a24..L152a2a] goto L152a2e;

   }
    procedure [|float|] [|java:util:prefs:AbstractPreferences.getFloat|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|float|] v5) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getFloat:(Ljava/lang/String;F)F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152a54.   v2:= 0  @length 4;
#L152a56.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v3, v4, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152a5c.   v1:= temp  @type object;
#L152a5e.   if v1 != 0 then goto L152a64;
#L152a62.   return v5;
#L152a64.   call temp:=  [|java:lang:Float.parseFloat|](v1) @signature [|Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F|] @classDescriptor [|java:lang:Float|] @type static;
#L152a6a.   v5:= temp;
#L152a6c.   goto L152a62;
#L152a6e.   v0:= Exception  @type object;
#L152a70.   goto L152a62;
  catch  [|java:lang:NumberFormatException|] @[L152a64..L152a6a] goto L152a6e;

   }
    procedure [|int|] [|java:util:prefs:AbstractPreferences.getInt|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getInt:(Ljava/lang/String;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152a94.   v2:= 0  @length 4;
#L152a96.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v3, v4, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152a9c.   v1:= temp  @type object;
#L152a9e.   if v1 != 0 then goto L152aa4;
#L152aa2.   return v5;
#L152aa4.   call temp:=  [|java:lang:Integer.parseInt|](v1) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L152aaa.   v5:= temp;
#L152aac.   goto L152aa2;
#L152aae.   v0:= Exception  @type object;
#L152ab0.   goto L152aa2;
  catch  [|java:lang:NumberFormatException|] @[L152aa4..L152aaa] goto L152aae;

   }
    procedure [|long|] [|java:util:prefs:AbstractPreferences.getLong|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|long|] v5) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getLong:(Ljava/lang/String;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152ad4.   v2:= 0  @length 4;
#L152ad6.   call temp:=  [|java:util:prefs:AbstractPreferences.get|](v3, v4, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152adc.   v1:= temp  @type object;
#L152ade.   if v1 != 0 then goto L152ae4;
#L152ae2.   return v5  @type wide;
#L152ae4.   call temp:=  [|java:lang:Long.parseLong|](v1) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J|] @classDescriptor [|java:lang:Long|] @type static;
#L152aea.   v5:= temp  @type wide;
#L152aec.   goto L152ae2;
#L152aee.   v0:= Exception  @type object;
#L152af0.   goto L152ae2;
  catch  [|java:lang:NumberFormatException|] @[L152ae4..L152aea] goto L152aee;

   }
    procedure [|java:lang:String|] [|java:util:prefs:AbstractPreferences.getSpi|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.getSpi:(Ljava/lang/String;)Ljava/lang/String;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:prefs:AbstractPreferences.isRemoved|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.isRemoved:()Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L152b14.   v1:= v2.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152b18.   (@monitorenter v1)
#L152b1a.   v0:= v2.[|java:util:prefs:AbstractPreferences.isRemoved|]   @boolean;
#L152b1e.   (@monitorexit v1)
#L152b20.   return v0;
#L152b22.   v0:= Exception  @type object;
#L152b24.   (@monitorexit v1)
#L152b26.   throw v0;
  catch  [|any|] @[L152b1a..L152b26] goto L152b22;

   }
    procedure [|boolean|] [|java:util:prefs:AbstractPreferences.isUserNode|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.isUserNode:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152b44.   v0:= v2.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L152b48.   call temp:=  [|java:util:prefs:Preferences.userRoot|]() @signature [|Ljava/util/prefs/Preferences;.userRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L152b4e.   v1:= temp  @type object;
#L152b50.   if v0 != v1 then goto L152b58;
#L152b54.   v0:= 1  @length 4;
#L152b56.   return v0;
#L152b58.   v0:= 0  @length 4;
#L152b5a.   goto L152b56;

   }
    procedure [|java:lang:String|][] [|java:util:prefs:AbstractPreferences.keys|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.keys:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152b6c.   v1:= v2.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152b70.   (@monitorenter v1)
#L152b72.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152b78.   call temp:=  [|java:util:prefs:AbstractPreferences.keysSpi|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.keysSpi:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152b7e.   v0:= temp  @type object;
#L152b80.   (@monitorexit v1)
#L152b82.   return v0  @type object;
#L152b84.   v0:= Exception  @type object;
#L152b86.   (@monitorexit v1)
#L152b88.   throw v0;
  catch  [|any|] @[L152b72..L152b88] goto L152b84;

   }
    procedure [|java:lang:String|][] [|java:util:prefs:AbstractPreferences.keysSpi|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.keysSpi:()[Ljava/lang/String;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:AbstractPreferences.name|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.name:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152ba8.   v0:= v1.[|java:util:prefs:AbstractPreferences.nodeName|]   @type object;
#L152bac.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:AbstractPreferences.node|] ([|java:util:prefs:AbstractPreferences|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L152bc0.   v1:= 0  @length 4;
#L152bc2.   v3:= v4.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152bc6.   (@monitorenter v3)
#L152bc8.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v4) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152bce.   call temp:=  [|java:util:prefs:AbstractPreferences.validateName|](v4, v5) @signature [|Ljava/util/prefs/AbstractPreferences;.validateName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152bd4.   call temp:=  [|java:lang:String.isEmpty|](v5) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152bda.   v2:= temp;
#L152bdc.   if v2 == 0 then goto L152be4;
#L152be0.   (@monitorexit v3)
#L152be2.   return v4  @type object;
#L152be4.   v2:= "/" @type (object, string);
#L152be8.   call temp:=  [|java:lang:String.equals|](v2, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152bee.   v2:= temp;
#L152bf0.   if v2 == 0 then goto L152c02;
#L152bf4.   v4:= v4.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L152bf8.   (@monitorexit v3)
#L152bfa.   goto L152be2;
#L152bfc.   v2:= Exception  @type object;
#L152bfe.   (@monitorexit v3)
#L152c00.   throw v2;
#L152c02.   v2:= "/" @type (object, string);
#L152c06.   call temp:=  [|java:lang:String.startsWith|](v5, v2) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152c0c.   v2:= temp;
#L152c0e.   if v2 == 0 then goto L152c2e;
#L152c12.   v1:= v4.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L152c16.   v2:= 1  @length 4;
#L152c18.   call temp:=  [|java:lang:String.substring|](v5, v2) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L152c1e.   v5:= temp  @type object;
#L152c20.   (@monitorexit v3)
#L152c22.   v2:= 1  @length 4;
#L152c24.   call temp:=  [|java:util:prefs:AbstractPreferences.nodeImpl|](v1, v5, v2) @signature [|Ljava/util/prefs/AbstractPreferences;.nodeImpl:(Ljava/lang/String;Z)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152c2a.   v4:= temp  @type object;
#L152c2c.   goto L152be2;
#L152c2e.   v1:= v4  @type object;
#L152c30.   goto L152c20;
#L152c32.   v0:= Exception  @type object;
#L152c34.   v4:= 0  @length 4;
#L152c36.   goto L152be2;
  catch  [|any|] @[L152bc8..L152c00] goto L152bfc;
  catch  [|any|] @[L152c02..L152c22] goto L152bfc;
  catch  [|java:util:prefs:BackingStoreException|] @[L152c24..L152c2a] goto L152c32;

   }
    procedure [|boolean|] [|java:util:prefs:AbstractPreferences.nodeExists|] ([|java:util:prefs:AbstractPreferences|] v7 @type (this), [|java:lang:String|] v8 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.nodeExists:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L152c68.   v3:= 1  @length 4;
#L152c6a.   v4:= 0  @length 4;
#L152c6c.   if v8 != 0 then goto L152c80;
#L152c70.   v3:= new [|java:lang:NullPointerException|];
#L152c74.   v4:= "name == null" @type (object, string);
#L152c78.   call temp:=  [|java:lang:NullPointerException.<init>|](v3, v4) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152c7e.   throw v3;
#L152c80.   v2:= 0  @length 4;
#L152c82.   v5:= v7.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152c86.   (@monitorenter v5)
#L152c88.   call temp:=  [|java:util:prefs:AbstractPreferences.isRemoved|](v7) @signature [|Ljava/util/prefs/AbstractPreferences;.isRemoved:()Z|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152c8e.   v6:= temp;
#L152c90.   if v6 == 0 then goto L152cba;
#L152c94.   call temp:=  [|java:lang:String.isEmpty|](v8) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152c9a.   v3:= temp;
#L152c9c.   if v3 == 0 then goto L152ca4;
#L152ca0.   (@monitorexit v5)
#L152ca2.   return v4;
#L152ca4.   v3:= new [|java:lang:IllegalStateException|];
#L152ca8.   v4:= "This node has been removed" @type (object, string);
#L152cac.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L152cb2.   throw v3;
#L152cb4.   v3:= Exception  @type object;
#L152cb6.   (@monitorexit v5)
#L152cb8.   throw v3;
#L152cba.   call temp:=  [|java:util:prefs:AbstractPreferences.validateName|](v7, v8) @signature [|Ljava/util/prefs/AbstractPreferences;.validateName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152cc0.   call temp:=  [|java:lang:String.isEmpty|](v8) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152cc6.   v6:= temp;
#L152cc8.   if v6 != 0 then goto L152cdc;
#L152ccc.   v6:= "/" @type (object, string);
#L152cd0.   call temp:=  [|java:lang:String.equals|](v6, v8) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152cd6.   v6:= temp;
#L152cd8.   if v6 == 0 then goto L152ce2;
#L152cdc.   (@monitorexit v5)
#L152cde.   v4:= v3;
#L152ce0.   goto L152ca2;
#L152ce2.   v6:= "/" @type (object, string);
#L152ce6.   call temp:=  [|java:lang:String.startsWith|](v8, v6) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L152cec.   v6:= temp;
#L152cee.   if v6 == 0 then goto L152d14;
#L152cf2.   v2:= v7.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L152cf6.   v6:= 1  @length 4;
#L152cf8.   call temp:=  [|java:lang:String.substring|](v8, v6) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L152cfe.   v8:= temp  @type object;
#L152d00.   (@monitorexit v5)
#L152d02.   v5:= 0  @length 4;
#L152d04.   call temp:=  [|java:util:prefs:AbstractPreferences.nodeImpl|](v2, v8, v5) @signature [|Ljava/util/prefs/AbstractPreferences;.nodeImpl:(Ljava/lang/String;Z)Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152d0a.   v1:= temp  @type object;
#L152d0c.   if v1 == 0 then goto L152d18;
#L152d10.   v4:= v3;
#L152d12.   goto L152ca2;
#L152d14.   v2:= v7  @type object;
#L152d16.   goto L152d00;
#L152d18.   v3:= v4;
#L152d1a.   goto L152d10;
#L152d1c.   v0:= Exception  @type object;
#L152d1e.   goto L152ca2;
  catch  [|any|] @[L152c88..L152cb8] goto L152cb4;
  catch  [|any|] @[L152cba..L152d02] goto L152cb4;
  catch  [|java:lang:IllegalArgumentException|] @[L152d04..L152d0a] goto L152d1c;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:AbstractPreferences.parent|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.parent:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152d50.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v1) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152d56.   v0:= v1.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L152d5a.   return v0  @type object;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.put|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152d6c.   if v3 != 0 then goto L152d80;
#L152d70.   v0:= new [|java:lang:NullPointerException|];
#L152d74.   v1:= "key == null" @type (object, string);
#L152d78.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152d7e.   throw v0;
#L152d80.   if v4 != 0 then goto L152d94;
#L152d84.   v0:= new [|java:lang:NullPointerException|];
#L152d88.   v1:= "value == null" @type (object, string);
#L152d8c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L152d92.   throw v0;
#L152d94.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L152d9a.   v0:= temp;
#L152d9c.   v1:= 80  @length 16;
#L152da0.   if v0 > v1 then goto L152db4;
#L152da4.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L152daa.   v0:= temp;
#L152dac.   v1:= 8192  @length 16;
#L152db0.   if v0 <= v1 then goto L152dc0;
#L152db4.   v0:= new [|java:lang:IllegalArgumentException|];
#L152db8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152dbe.   throw v0;
#L152dc0.   v1:= v2.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152dc4.   (@monitorenter v1)
#L152dc6.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152dcc.   call temp:=  [|java:util:prefs:AbstractPreferences.putSpi|](v2, v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences;.putSpi:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152dd2.   (@monitorexit v1)
#L152dd4.   call temp:=  [|java:util:prefs:AbstractPreferences.notifyPreferenceChange|](v2, v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences;.notifyPreferenceChange:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152dda.   return @void ;
#L152ddc.   v0:= Exception  @type object;
#L152dde.   (@monitorexit v1)
#L152de0.   throw v0;
  catch  [|any|] @[L152dc6..L152dd4] goto L152ddc;
  catch  [|any|] @[L152dde..L152de0] goto L152ddc;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putBoolean|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putBoolean:(Ljava/lang/String;Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152e08.   call temp:=  [|java:lang:String.valueOf|](v3) @signature [|Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L152e0e.   v0:= temp  @type object;
#L152e10.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152e16.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putByteArray|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|byte|][] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putByteArray:(Ljava/lang/String;[B)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152e28.   call temp:=  [|libcore:io:Base64.encode|](v3) @signature [|Llibcore/io/Base64;.encode:([B)Ljava/lang/String;|] @classDescriptor [|libcore:io:Base64|] @type static;
#L152e2e.   v0:= temp  @type object;
#L152e30.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152e36.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putDouble|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|double|] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putDouble:(Ljava/lang/String;D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152e48.   call temp:=  [|java:lang:Double.toString|](v3, v4) @signature [|Ljava/lang/Double;.toString:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:Double|] @type static;
#L152e4e.   v0:= temp  @type object;
#L152e50.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152e56.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putFloat|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|float|] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putFloat:(Ljava/lang/String;F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152e68.   call temp:=  [|java:lang:Float.toString|](v3) @signature [|Ljava/lang/Float;.toString:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:Float|] @type static;
#L152e6e.   v0:= temp  @type object;
#L152e70.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152e76.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putInt|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putInt:(Ljava/lang/String;I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152e88.   call temp:=  [|java:lang:Integer.toString|](v3) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L152e8e.   v0:= temp  @type object;
#L152e90.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152e96.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putLong|] ([|java:util:prefs:AbstractPreferences|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|long|] v3) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putLong:(Ljava/lang/String;J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L152ea8.   call temp:=  [|java:lang:Long.toString|](v3, v4) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L152eae.   v0:= temp  @type object;
#L152eb0.   call temp:=  [|java:util:prefs:AbstractPreferences.put|](v1, v2, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152eb6.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.putSpi|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.putSpi:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.remove|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.remove:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152ec8.   v1:= v2.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152ecc.   (@monitorenter v1)
#L152ece.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152ed4.   call temp:=  [|java:util:prefs:AbstractPreferences.removeSpi|](v2, v3) @signature [|Ljava/util/prefs/AbstractPreferences;.removeSpi:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L152eda.   (@monitorexit v1)
#L152edc.   v0:= 0  @length 4;
#L152ede.   call temp:=  [|java:util:prefs:AbstractPreferences.notifyPreferenceChange|](v2, v3, v0) @signature [|Ljava/util/prefs/AbstractPreferences;.notifyPreferenceChange:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152ee4.   return @void ;
#L152ee6.   v0:= Exception  @type object;
#L152ee8.   (@monitorexit v1)
#L152eea.   throw v0;
  catch  [|any|] @[L152ece..L152edc] goto L152ee6;
  catch  [|any|] @[L152ee8..L152eea] goto L152ee6;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removeNode|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removeNode:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L152f10.   v0:= v2.[|java:util:prefs:AbstractPreferences.root|]   @type object;
#L152f14.   if v0 != v2 then goto L152f28;
#L152f18.   v0:= new [|java:lang:UnsupportedOperationException|];
#L152f1c.   v1:= "Cannot remove root node" @type (object, string);
#L152f20.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L152f26.   throw v0;
#L152f28.   v0:= v2.[|java:util:prefs:AbstractPreferences.parentPref|]   @type object;
#L152f2c.   v1:= v0.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L152f30.   (@monitorenter v1)
#L152f32.   call temp:=  [|java:util:prefs:AbstractPreferences.removeNodeImpl|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeImpl:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152f38.   (@monitorexit v1)
#L152f3a.   return @void ;
#L152f3c.   v0:= Exception  @type object;
#L152f3e.   (@monitorexit v1)
#L152f40.   throw v0;
  catch  [|any|] @[L152f32..L152f40] goto L152f3c;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removeNodeChangeListener|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:util:prefs:NodeChangeListener|] v4 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeChangeListener:(Ljava/util/prefs/NodeChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152f60.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v3) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152f66.   v2:= v3.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L152f6a.   (@monitorenter v2)
#L152f6c.   v1:= v3.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L152f70.   call temp:=  [|java:util:List.indexOf|](v1, v4) @signature [|Ljava/util/List;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:List|] @type interface;
#L152f76.   v0:= temp;
#L152f78.   v1:= -1  @length 4;
#L152f7a.   if v0 != v1 then goto L152f90;
#L152f7e.   v1:= new [|java:lang:IllegalArgumentException|];
#L152f82.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152f88.   throw v1;
#L152f8a.   v1:= Exception  @type object;
#L152f8c.   (@monitorexit v2)
#L152f8e.   throw v1;
#L152f90.   v1:= v3.[|java:util:prefs:AbstractPreferences.nodeChangeListeners|]   @type object;
#L152f94.   call temp:=  [|java:util:List.remove|](v1, v0) @signature [|Ljava/util/List;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L152f9a.   (@monitorexit v2)
#L152f9c.   return @void ;
  catch  [|any|] @[L152f6c..L152f8e] goto L152f8a;
  catch  [|any|] @[L152f90..L152f9c] goto L152f8a;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removeNodeSpi|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removeNodeSpi:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removePreferenceChangeListener|] ([|java:util:prefs:AbstractPreferences|] v3 @type (this), [|java:util:prefs:PreferenceChangeListener|] v4 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removePreferenceChangeListener:(Ljava/util/prefs/PreferenceChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L152fc4.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v3) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L152fca.   v2:= v3.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L152fce.   (@monitorenter v2)
#L152fd0.   v1:= v3.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L152fd4.   call temp:=  [|java:util:List.indexOf|](v1, v4) @signature [|Ljava/util/List;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:List|] @type interface;
#L152fda.   v0:= temp;
#L152fdc.   v1:= -1  @length 4;
#L152fde.   if v0 != v1 then goto L152ff4;
#L152fe2.   v1:= new [|java:lang:IllegalArgumentException|];
#L152fe6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L152fec.   throw v1;
#L152fee.   v1:= Exception  @type object;
#L152ff0.   (@monitorexit v2)
#L152ff2.   throw v1;
#L152ff4.   v1:= v3.[|java:util:prefs:AbstractPreferences.preferenceChangeListeners|]   @type object;
#L152ff8.   call temp:=  [|java:util:List.remove|](v1, v0) @signature [|Ljava/util/List;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L152ffe.   (@monitorexit v2)
#L153000.   return @void ;
  catch  [|any|] @[L152fd0..L152ff2] goto L152fee;
  catch  [|any|] @[L152ff4..L153000] goto L152fee;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.removeSpi|] ([|java:lang:String|] v0 @type (object)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.removeSpi:(Ljava/lang/String;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.sync|] ([|java:util:prefs:AbstractPreferences|] v6 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.sync:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L153028.   v5:= v6.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L15302c.   (@monitorenter v5)
#L15302e.   call temp:=  [|java:util:prefs:AbstractPreferences.checkState|](v6) @signature [|Ljava/util/prefs/AbstractPreferences;.checkState:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L153034.   call temp:=  [|java:util:prefs:AbstractPreferences.syncSpi|](v6) @signature [|Ljava/util/prefs/AbstractPreferences;.syncSpi:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L15303a.   (@monitorexit v5)
#L15303c.   call temp:=  [|java:util:prefs:AbstractPreferences.cachedChildren|](v6) @signature [|Ljava/util/prefs/AbstractPreferences;.cachedChildren:()[Ljava/util/prefs/AbstractPreferences;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L153042.   v0:= temp  @type object;
#L153044.   v3:= v0.length;
#L153046.   v2:= 0  @length 4;
#L153048.   if v2 >= v3 then goto L153062;
#L15304c.   v1:= v0[v2]  @type object;
#L153050.   call temp:=  [|java:util:prefs:AbstractPreferences.sync|](v1) @signature [|Ljava/util/prefs/AbstractPreferences;.sync:()V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L153056.   v2:= v2 + 1;
#L15305a.   goto L153048;
#L15305c.   v4:= Exception  @type object;
#L15305e.   (@monitorexit v5)
#L153060.   throw v4;
#L153062.   return @void ;
  catch  [|any|] @[L15302e..L15303c] goto L15305c;
  catch  [|any|] @[L15305e..L153060] goto L15305c;

   }
    procedure [|void|] [|java:util:prefs:AbstractPreferences.syncSpi|] () @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.syncSpi:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:prefs:AbstractPreferences.toString|] ([|java:util:prefs:AbstractPreferences|] v2 @type (this)) @owner [|java:util:prefs:AbstractPreferences|] @signature [|Ljava/util/prefs/AbstractPreferences;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L153088.   v1:= new [|java:lang:StringBuilder|];
#L15308c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L153092.   call temp:=  [|java:util:prefs:AbstractPreferences.isUserNode|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.isUserNode:()Z|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L153098.   v0:= temp;
#L15309a.   if v0 == 0 then goto L1530d0;
#L15309e.   v0:= "User" @type (object, string);
#L1530a2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1530a8.   v0:= temp  @type object;
#L1530aa.   v1:= " Preference Node: " @type (object, string);
#L1530ae.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1530b4.   v0:= temp  @type object;
#L1530b6.   call temp:=  [|java:util:prefs:AbstractPreferences.absolutePath|](v2) @signature [|Ljava/util/prefs/AbstractPreferences;.absolutePath:()Ljava/lang/String;|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1530bc.   v1:= temp  @type object;
#L1530be.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1530c4.   v0:= temp  @type object;
#L1530c6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1530cc.   v0:= temp  @type object;
#L1530ce.   return v0  @type object;
#L1530d0.   v0:= "System" @type (object, string);
#L1530d4.   goto L1530a2;

   }
record [|java:util:prefs:BackingStoreException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:prefs:BackingStoreException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:BackingStoreException.<init>|] ([|java:util:prefs:BackingStoreException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:BackingStoreException|] @signature [|Ljava/util/prefs/BackingStoreException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1530e8.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L1530ee.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:BackingStoreException.<init>|] ([|java:util:prefs:BackingStoreException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:util:prefs:BackingStoreException|] @signature [|Ljava/util/prefs/BackingStoreException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L153100.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L153106.   return @void ;

   }
record [|java:util:prefs:PreferencesFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:PreferencesFactory.systemRoot|] () @owner [|java:util:prefs:PreferencesFactory|] @signature [|Ljava/util/prefs/PreferencesFactory;.systemRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:PreferencesFactory.userRoot|] () @owner [|java:util:prefs:PreferencesFactory|] @signature [|Ljava/util/prefs/PreferencesFactory;.userRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:prefs:FilePreferencesFactoryImpl|]  @type class @AccessFlag  extends  [|java:util:prefs:PreferencesFactory|] {
   }
      global [|java:util:prefs:Preferences|] @@[|java:util:prefs:FilePreferencesFactoryImpl.SYSTEM_ROOT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:prefs:Preferences|] @@[|java:util:prefs:FilePreferencesFactoryImpl.USER_ROOT|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:FilePreferencesFactoryImpl.<clinit>|] () @owner [|java:util:prefs:FilePreferencesFactoryImpl|] @signature [|Ljava/util/prefs/FilePreferencesFactoryImpl;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L153118.   v0:= new [|java:util:prefs:FilePreferencesImpl|];
#L15311c.   v1:= 1  @length 4;
#L15311e.   call temp:=  [|java:util:prefs:FilePreferencesImpl.<init>|](v0, v1) @signature [|Ljava/util/prefs/FilePreferencesImpl;.<init>:(Z)V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type direct;
#L153124.   @@[|java:util:prefs:FilePreferencesFactoryImpl.USER_ROOT|] := v0  @type object;
#L153128.   v0:= new [|java:util:prefs:FilePreferencesImpl|];
#L15312c.   v1:= 0  @length 4;
#L15312e.   call temp:=  [|java:util:prefs:FilePreferencesImpl.<init>|](v0, v1) @signature [|Ljava/util/prefs/FilePreferencesImpl;.<init>:(Z)V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type direct;
#L153134.   @@[|java:util:prefs:FilePreferencesFactoryImpl.SYSTEM_ROOT|] := v0  @type object;
#L153138.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesFactoryImpl.<init>|] ([|java:util:prefs:FilePreferencesFactoryImpl|] v0 @type (this)) @owner [|java:util:prefs:FilePreferencesFactoryImpl|] @signature [|Ljava/util/prefs/FilePreferencesFactoryImpl;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15314c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L153152.   return @void ;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:FilePreferencesFactoryImpl.systemRoot|] ([|java:util:prefs:FilePreferencesFactoryImpl|] v1 @type (this)) @owner [|java:util:prefs:FilePreferencesFactoryImpl|] @signature [|Ljava/util/prefs/FilePreferencesFactoryImpl;.systemRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L153164.   v0:= @@[|java:util:prefs:FilePreferencesFactoryImpl.SYSTEM_ROOT|]   @type object;
#L153168.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:FilePreferencesFactoryImpl.userRoot|] ([|java:util:prefs:FilePreferencesFactoryImpl|] v1 @type (this)) @owner [|java:util:prefs:FilePreferencesFactoryImpl|] @signature [|Ljava/util/prefs/FilePreferencesFactoryImpl;.userRoot:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15317c.   v0:= @@[|java:util:prefs:FilePreferencesFactoryImpl.USER_ROOT|]   @type object;
#L153180.   return v0  @type object;

   }
record [|java:util:prefs:FilePreferencesImpl$1|]  @type class @AccessFlag  extends  [|java:io:FilenameFilter|] {
      [|java:util:prefs:FilePreferencesImpl|] [|java:util:prefs:FilePreferencesImpl$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl$1.<init>|] ([|java:util:prefs:FilePreferencesImpl$1|] v0 @type (this), [|java:util:prefs:FilePreferencesImpl|] v1 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl$1|] @signature [|Ljava/util/prefs/FilePreferencesImpl$1;.<init>:(Ljava/util/prefs/FilePreferencesImpl;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L153194.   v0.[|java:util:prefs:FilePreferencesImpl$1.this$0|]  := v1 @type object;
#L153198.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15319e.   return @void ;

   }
    procedure [|boolean|] [|java:util:prefs:FilePreferencesImpl$1.accept|] ([|java:util:prefs:FilePreferencesImpl$1|] v3 @type (this), [|java:io:File|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl$1|] @signature [|Ljava/util/prefs/FilePreferencesImpl$1;.accept:(Ljava/io/File;Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1531b0.   v0:= new [|java:io:File|];
#L1531b4.   v1:= new [|java:lang:StringBuilder|];
#L1531b8.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1531be.   v2:= v3.[|java:util:prefs:FilePreferencesImpl$1.this$0|]   @type object;
#L1531c2.   call temp:=  [|java:util:prefs:FilePreferencesImpl.access$000|](v2) @signature [|Ljava/util/prefs/FilePreferencesImpl;.access$000:(Ljava/util/prefs/FilePreferencesImpl;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type static;
#L1531c8.   v2:= temp  @type object;
#L1531ca.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1531d0.   v1:= temp  @type object;
#L1531d2.   v2:= @@[|java:io:File.separator|]   @type object;
#L1531d6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1531dc.   v1:= temp  @type object;
#L1531de.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1531e4.   v1:= temp  @type object;
#L1531e6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1531ec.   v1:= temp  @type object;
#L1531ee.   call temp:=  [|java:io:File.<init>|](v0, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L1531f4.   call temp:=  [|java:io:File.isDirectory|](v0) @signature [|Ljava/io/File;.isDirectory:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1531fa.   v0:= temp;
#L1531fc.   return v0;

   }
record [|java:util:prefs:FilePreferencesImpl|]  @type class @AccessFlag   extends [|java:util:prefs:AbstractPreferences|] {
      [|java:io:File|] [|java:util:prefs:FilePreferencesImpl.dir|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:prefs:FilePreferencesImpl.path|]    @AccessFlag PRIVATE;
      [|java:util:Properties|] [|java:util:prefs:FilePreferencesImpl.prefs|]    @AccessFlag PRIVATE;
      [|java:io:File|] [|java:util:prefs:FilePreferencesImpl.prefsFile|]    @AccessFlag PRIVATE;
      [|java:util:Set|] [|java:util:prefs:FilePreferencesImpl.removed|]    @AccessFlag PRIVATE;
      [|java:util:Set|] [|java:util:prefs:FilePreferencesImpl.updated|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:util:prefs:FilePreferencesImpl.PREFS_FILE_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:prefs:FilePreferencesImpl.SYSTEM_HOME|]    @AccessFlag PRIVATE_STATIC;
      global [|java:lang:String|] @@[|java:util:prefs:FilePreferencesImpl.USER_HOME|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.<clinit>|] () @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L153210.   v0:= new [|java:lang:StringBuilder|];
#L153214.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15321a.   v1:= "user.home" @type (object, string);
#L15321e.   call temp:=  [|java:lang:System.getProperty|](v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L153224.   v1:= temp  @type object;
#L153226.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15322c.   v0:= temp  @type object;
#L15322e.   v1:= "/.java/.userPrefs" @type (object, string);
#L153232.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153238.   v0:= temp  @type object;
#L15323a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153240.   v0:= temp  @type object;
#L153242.   @@[|java:util:prefs:FilePreferencesImpl.USER_HOME|] := v0  @type object;
#L153246.   v0:= new [|java:lang:StringBuilder|];
#L15324a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L153250.   v1:= "java.home" @type (object, string);
#L153254.   call temp:=  [|java:lang:System.getProperty|](v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L15325a.   v1:= temp  @type object;
#L15325c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153262.   v0:= temp  @type object;
#L153264.   v1:= "/.systemPrefs" @type (object, string);
#L153268.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15326e.   v0:= temp  @type object;
#L153270.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153276.   v0:= temp  @type object;
#L153278.   @@[|java:util:prefs:FilePreferencesImpl.SYSTEM_HOME|] := v0  @type object;
#L15327c.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.<init>|] ([|java:util:prefs:FilePreferencesImpl|] v2 @type (this), [|java:util:prefs:AbstractPreferences|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.<init>:(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L153290.   call temp:=  [|java:util:prefs:AbstractPreferences.<init>|](v2, v3, v4) @signature [|Ljava/util/prefs/AbstractPreferences;.<init>:(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L153296.   v0:= new [|java:util:HashSet|];
#L15329a.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L1532a0.   v2.[|java:util:prefs:FilePreferencesImpl.removed|]  := v0 @type object;
#L1532a4.   v0:= new [|java:util:HashSet|];
#L1532a8.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L1532ae.   v2.[|java:util:prefs:FilePreferencesImpl.updated|]  := v0 @type object;
#L1532b2.   v0:= new [|java:lang:StringBuilder|];
#L1532b6.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1532bc.   v3:= ([|java:util:prefs:FilePreferencesImpl|])v3;
#L1532c0.   v1:= v3.[|java:util:prefs:FilePreferencesImpl.path|]   @type object;
#L1532c4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1532ca.   v0:= temp  @type object;
#L1532cc.   v1:= @@[|java:io:File.separator|]   @type object;
#L1532d0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1532d6.   v0:= temp  @type object;
#L1532d8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1532de.   v0:= temp  @type object;
#L1532e0.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1532e6.   v0:= temp  @type object;
#L1532e8.   v2.[|java:util:prefs:FilePreferencesImpl.path|]  := v0 @type object;
#L1532ec.   call temp:=  [|java:util:prefs:FilePreferencesImpl.initPrefs|](v2) @signature [|Ljava/util/prefs/FilePreferencesImpl;.initPrefs:()V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type direct;
#L1532f2.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.<init>|] ([|java:util:prefs:FilePreferencesImpl|] v2 @type (this), [|boolean|] v3) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.<init>:(Z)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L153304.   v0:= 0  @length 4;
#L153306.   v1:= "" @type (object, string);
#L15330a.   call temp:=  [|java:util:prefs:AbstractPreferences.<init>|](v2, v0, v1) @signature [|Ljava/util/prefs/AbstractPreferences;.<init>:(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type direct;
#L153310.   v0:= new [|java:util:HashSet|];
#L153314.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L15331a.   v2.[|java:util:prefs:FilePreferencesImpl.removed|]  := v0 @type object;
#L15331e.   v0:= new [|java:util:HashSet|];
#L153322.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L153328.   v2.[|java:util:prefs:FilePreferencesImpl.updated|]  := v0 @type object;
#L15332c.   v2.[|java:util:prefs:FilePreferencesImpl.userNode|]  := v3 @boolean;
#L153330.   if v3 == 0 then goto L153344;
#L153334.   v0:= @@[|java:util:prefs:FilePreferencesImpl.USER_HOME|]   @type object;
#L153338.   v2.[|java:util:prefs:FilePreferencesImpl.path|]  := v0 @type object;
#L15333c.   call temp:=  [|java:util:prefs:FilePreferencesImpl.initPrefs|](v2) @signature [|Ljava/util/prefs/FilePreferencesImpl;.initPrefs:()V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type direct;
#L153342.   return @void ;
#L153344.   v0:= @@[|java:util:prefs:FilePreferencesImpl.SYSTEM_HOME|]   @type object;
#L153348.   goto L153338;

   }
    procedure [|java:lang:String|] [|java:util:prefs:FilePreferencesImpl.access$000|] ([|java:util:prefs:FilePreferencesImpl|] v1 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.access$000:(Ljava/util/prefs/FilePreferencesImpl;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L15335c.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.path|]   @type object;
#L153360.   return v0  @type object;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.initPrefs|] ([|java:util:prefs:FilePreferencesImpl|] v3 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.initPrefs:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L153374.   v0:= new [|java:io:File|];
#L153378.   v1:= v3.[|java:util:prefs:FilePreferencesImpl.path|]   @type object;
#L15337c.   call temp:=  [|java:io:File.<init>|](v0, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L153382.   v3.[|java:util:prefs:FilePreferencesImpl.dir|]  := v0 @type object;
#L153386.   v0:= v3.[|java:util:prefs:FilePreferencesImpl.dir|]   @type object;
#L15338a.   call temp:=  [|java:io:File.exists|](v0) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L153390.   v0:= temp;
#L153392.   if v0 != 0 then goto L1533f2;
#L153396.   v0:= 1  @length 4;
#L153398.   v3.[|java:util:prefs:FilePreferencesImpl.newNode|]  := v0 @boolean;
#L15339c.   v0:= new [|java:io:File|];
#L1533a0.   v1:= new [|java:lang:StringBuilder|];
#L1533a4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1533aa.   v2:= v3.[|java:util:prefs:FilePreferencesImpl.path|]   @type object;
#L1533ae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1533b4.   v1:= temp  @type object;
#L1533b6.   v2:= @@[|java:io:File.separator|]   @type object;
#L1533ba.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1533c0.   v1:= temp  @type object;
#L1533c2.   v2:= "prefs.xml" @type (object, string);
#L1533c6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1533cc.   v1:= temp  @type object;
#L1533ce.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1533d4.   v1:= temp  @type object;
#L1533d6.   call temp:=  [|java:io:File.<init>|](v0, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L1533dc.   v3.[|java:util:prefs:FilePreferencesImpl.prefsFile|]  := v0 @type object;
#L1533e0.   v0:= v3.[|java:util:prefs:FilePreferencesImpl.prefsFile|]   @type object;
#L1533e4.   call temp:=  [|java:util:prefs:XMLParser.readXmlPreferences|](v0) @signature [|Ljava/util/prefs/XMLParser;.readXmlPreferences:(Ljava/io/File;)Ljava/util/Properties;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L1533ea.   v0:= temp  @type object;
#L1533ec.   v3.[|java:util:prefs:FilePreferencesImpl.prefs|]  := v0 @type object;
#L1533f0.   return @void ;
#L1533f2.   v0:= 0  @length 4;
#L1533f4.   goto L153398;

   }
    procedure [|java:util:prefs:AbstractPreferences|] [|java:util:prefs:FilePreferencesImpl.childSpi|] ([|java:util:prefs:FilePreferencesImpl|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.childSpi:(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L153408.   v0:= new [|java:util:prefs:FilePreferencesImpl|];
#L15340c.   call temp:=  [|java:util:prefs:FilePreferencesImpl.<init>|](v0, v1, v2) @signature [|Ljava/util/prefs/FilePreferencesImpl;.<init>:(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type direct;
#L153412.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:util:prefs:FilePreferencesImpl.childrenNamesSpi|] ([|java:util:prefs:FilePreferencesImpl|] v4 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.childrenNamesSpi:()[Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L153424.   v1:= v4.[|java:util:prefs:FilePreferencesImpl.dir|]   @type object;
#L153428.   v2:= new [|java:util:prefs:FilePreferencesImpl$1|];
#L15342c.   call temp:=  [|java:util:prefs:FilePreferencesImpl$1.<init>|](v2, v4) @signature [|Ljava/util/prefs/FilePreferencesImpl$1;.<init>:(Ljava/util/prefs/FilePreferencesImpl;)V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl$1|] @type direct;
#L153432.   call temp:=  [|java:io:File.list|](v1, v2) @signature [|Ljava/io/File;.list:(Ljava/io/FilenameFilter;)[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L153438.   v0:= temp  @type object;
#L15343a.   if v0 != 0 then goto L15349c;
#L15343e.   v1:= new [|java:util:prefs:BackingStoreException|];
#L153442.   v2:= new [|java:lang:StringBuilder|];
#L153446.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15344c.   v3:= "Cannot get child names for " @type (object, string);
#L153450.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153456.   v2:= temp  @type object;
#L153458.   call temp:=  [|java:util:prefs:FilePreferencesImpl.toString|](v4) @signature [|Ljava/util/prefs/FilePreferencesImpl;.toString:()Ljava/lang/String;|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type virtual;
#L15345e.   v3:= temp  @type object;
#L153460.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153466.   v2:= temp  @type object;
#L153468.   v3:= " (path is " @type (object, string);
#L15346c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153472.   v2:= temp  @type object;
#L153474.   v3:= v4.[|java:util:prefs:FilePreferencesImpl.path|]   @type object;
#L153478.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15347e.   v2:= temp  @type object;
#L153480.   v3:= ")" @type (object, string);
#L153484.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15348a.   v2:= temp  @type object;
#L15348c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153492.   v2:= temp  @type object;
#L153494.   call temp:=  [|java:util:prefs:BackingStoreException.<init>|](v1, v2) @signature [|Ljava/util/prefs/BackingStoreException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:BackingStoreException|] @type direct;
#L15349a.   throw v1;
#L15349c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.flushSpi|] ([|java:util:prefs:FilePreferencesImpl|] v6 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.flushSpi:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1534b0.   call temp:=  [|java:util:prefs:FilePreferencesImpl.isRemoved|](v6) @signature [|Ljava/util/prefs/FilePreferencesImpl;.isRemoved:()Z|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type virtual;
#L1534b6.   v4:= temp;
#L1534b8.   if v4 == 0 then goto L1534be;
#L1534bc.   return @void ;
#L1534be.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.prefsFile|]   @type object;
#L1534c2.   call temp:=  [|java:util:prefs:XMLParser.readXmlPreferences|](v4) @signature [|Ljava/util/prefs/XMLParser;.readXmlPreferences:(Ljava/io/File;)Ljava/util/Properties;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L1534c8.   v0:= temp  @type object;
#L1534ca.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.removed|]   @type object;
#L1534ce.   call temp:=  [|java:util:Set.iterator|](v4) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L1534d4.   v2:= temp  @type object;
#L1534d6.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1534dc.   v4:= temp;
#L1534de.   if v4 == 0 then goto L153500;
#L1534e2.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1534e8.   v4:= temp  @type object;
#L1534ea.   call temp:=  [|java:util:Properties.remove|](v0, v4) @signature [|Ljava/util/Properties;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L1534f0.   goto L1534d6;
#L1534f2.   v1:= Exception  @type object;
#L1534f4.   v4:= new [|java:util:prefs:BackingStoreException|];
#L1534f8.   call temp:=  [|java:util:prefs:BackingStoreException.<init>|](v4, v1) @signature [|Ljava/util/prefs/BackingStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:prefs:BackingStoreException|] @type direct;
#L1534fe.   throw v4;
#L153500.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.removed|]   @type object;
#L153504.   call temp:=  [|java:util:Set.clear|](v4) @signature [|Ljava/util/Set;.clear:()V|] @classDescriptor [|java:util:Set|] @type interface;
#L15350a.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.updated|]   @type object;
#L15350e.   call temp:=  [|java:util:Set.iterator|](v4) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L153514.   v2:= temp  @type object;
#L153516.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15351c.   v4:= temp;
#L15351e.   if v4 == 0 then goto L15353e;
#L153522.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L153528.   v3:= temp  @type object;
#L15352a.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L15352e.   call temp:=  [|java:util:Properties.get|](v4, v3) @signature [|Ljava/util/Properties;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L153534.   v4:= temp  @type object;
#L153536.   call temp:=  [|java:util:Properties.put|](v0, v3, v4) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L15353c.   goto L153516;
#L15353e.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.updated|]   @type object;
#L153542.   call temp:=  [|java:util:Set.clear|](v4) @signature [|Ljava/util/Set;.clear:()V|] @classDescriptor [|java:util:Set|] @type interface;
#L153548.   v6.[|java:util:prefs:FilePreferencesImpl.prefs|]  := v0 @type object;
#L15354c.   v4:= v6.[|java:util:prefs:FilePreferencesImpl.prefsFile|]   @type object;
#L153550.   v5:= v6.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L153554.   call temp:=  [|java:util:prefs:XMLParser.writeXmlPreferences|](v4, v5) @signature [|Ljava/util/prefs/XMLParser;.writeXmlPreferences:(Ljava/io/File;Ljava/util/Properties;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L15355a.   goto L1534bc;
  catch  [|java:lang:Exception|] @[L1534b0..L1534f0] goto L1534f2;
  catch  [|java:lang:Exception|] @[L153500..L15355a] goto L1534f2;

   }
    procedure [|java:lang:String|] [|java:util:prefs:FilePreferencesImpl.getSpi|] ([|java:util:prefs:FilePreferencesImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.getSpi:(Ljava/lang/String;)Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L153584.   v1:= v2.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L153588.   if v1 != 0 then goto L15359c;
#L15358c.   v1:= v2.[|java:util:prefs:FilePreferencesImpl.prefsFile|]   @type object;
#L153590.   call temp:=  [|java:util:prefs:XMLParser.readXmlPreferences|](v1) @signature [|Ljava/util/prefs/XMLParser;.readXmlPreferences:(Ljava/io/File;)Ljava/util/Properties;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153596.   v1:= temp  @type object;
#L153598.   v2.[|java:util:prefs:FilePreferencesImpl.prefs|]  := v1 @type object;
#L15359c.   v1:= v2.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L1535a0.   call temp:=  [|java:util:Properties.getProperty|](v1, v3) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L1535a6.   v1:= temp  @type object;
#L1535a8.   return v1  @type object;
#L1535aa.   v0:= Exception  @type object;
#L1535ac.   v1:= 0  @length 4;
#L1535ae.   goto L1535a8;
  catch  [|java:lang:Exception|] @[L153584..L1535a6] goto L1535aa;

   }
    procedure [|java:lang:String|][] [|java:util:prefs:FilePreferencesImpl.keysSpi|] ([|java:util:prefs:FilePreferencesImpl|] v2 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.keysSpi:()[Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1535d0.   v1:= v2.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L1535d4.   call temp:=  [|java:util:Properties.keySet|](v1) @signature [|Ljava/util/Properties;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L1535da.   v0:= temp  @type object;
#L1535dc.   call temp:=  [|java:util:Set.size|](v0) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L1535e2.   v1:= temp;
#L1535e4.   v1:= new [|java:lang:String|][v1];
#L1535e8.   call temp:=  [|java:util:Set.toArray|](v0, v1) @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L1535ee.   v1:= temp  @type object;
#L1535f0.   v1:= ([|java:lang:String|][])v1;
#L1535f4.   return v1  @type object;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.putSpi|] ([|java:util:prefs:FilePreferencesImpl|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.putSpi:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L153608.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L15360c.   call temp:=  [|java:util:Properties.setProperty|](v0, v2, v3) @signature [|Ljava/util/Properties;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L153612.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.updated|]   @type object;
#L153616.   call temp:=  [|java:util:Set.add|](v0, v2) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L15361c.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.removeNodeSpi|] ([|java:util:prefs:FilePreferencesImpl|] v4 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.removeNodeSpi:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L153630.   v1:= v4.[|java:util:prefs:FilePreferencesImpl.prefsFile|]   @type object;
#L153634.   call temp:=  [|java:io:File.delete|](v1) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L15363a.   v1:= v4.[|java:util:prefs:FilePreferencesImpl.dir|]   @type object;
#L15363e.   call temp:=  [|java:io:File.delete|](v1) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L153644.   v0:= temp;
#L153646.   if v0 != 0 then goto L153684;
#L15364a.   v1:= new [|java:util:prefs:BackingStoreException|];
#L15364e.   v2:= new [|java:lang:StringBuilder|];
#L153652.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L153658.   v3:= "Cannot remove " @type (object, string);
#L15365c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153662.   v2:= temp  @type object;
#L153664.   call temp:=  [|java:util:prefs:FilePreferencesImpl.toString|](v4) @signature [|Ljava/util/prefs/FilePreferencesImpl;.toString:()Ljava/lang/String;|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type virtual;
#L15366a.   v3:= temp  @type object;
#L15366c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153672.   v2:= temp  @type object;
#L153674.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15367a.   v2:= temp  @type object;
#L15367c.   call temp:=  [|java:util:prefs:BackingStoreException.<init>|](v1, v2) @signature [|Ljava/util/prefs/BackingStoreException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:BackingStoreException|] @type direct;
#L153682.   throw v1;
#L153684.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.removeSpi|] ([|java:util:prefs:FilePreferencesImpl|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.removeSpi:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L153698.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.prefs|]   @type object;
#L15369c.   call temp:=  [|java:util:Properties.remove|](v0, v2) @signature [|Ljava/util/Properties;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L1536a2.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.updated|]   @type object;
#L1536a6.   call temp:=  [|java:util:Set.remove|](v0, v2) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L1536ac.   v0:= v1.[|java:util:prefs:FilePreferencesImpl.removed|]   @type object;
#L1536b0.   call temp:=  [|java:util:Set.add|](v0, v2) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L1536b6.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:FilePreferencesImpl.syncSpi|] ([|java:util:prefs:FilePreferencesImpl|] v0 @type (this)) @owner [|java:util:prefs:FilePreferencesImpl|] @signature [|Ljava/util/prefs/FilePreferencesImpl;.syncSpi:()V|] @Access PROTECTED {
      local temp ;
      
#L1536c8.   call temp:=  [|java:util:prefs:FilePreferencesImpl.flushSpi|](v0) @signature [|Ljava/util/prefs/FilePreferencesImpl;.flushSpi:()V|] @classDescriptor [|java:util:prefs:FilePreferencesImpl|] @type virtual;
#L1536ce.   return @void ;

   }
record [|java:util:prefs:InvalidPreferencesFormatException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:prefs:InvalidPreferencesFormatException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:InvalidPreferencesFormatException.<init>|] ([|java:util:prefs:InvalidPreferencesFormatException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:prefs:InvalidPreferencesFormatException|] @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1536e0.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L1536e6.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:InvalidPreferencesFormatException.<init>|] ([|java:util:prefs:InvalidPreferencesFormatException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:util:prefs:InvalidPreferencesFormatException|] @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1536f8.   call temp:=  [|java:lang:Exception.<init>|](v0, v1, v2) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L1536fe.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:InvalidPreferencesFormatException.<init>|] ([|java:util:prefs:InvalidPreferencesFormatException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:util:prefs:InvalidPreferencesFormatException|] @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L153710.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L153716.   return @void ;

   }
record [|java:util:prefs:NodeChangeListener|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:EventListener|] {
   }
    procedure [|void|] [|java:util:prefs:NodeChangeListener.childAdded|] ([|java:util:prefs:NodeChangeEvent|] v0 @type (object)) @owner [|java:util:prefs:NodeChangeListener|] @signature [|Ljava/util/prefs/NodeChangeListener;.childAdded:(Ljava/util/prefs/NodeChangeEvent;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:prefs:NodeChangeListener.childRemoved|] ([|java:util:prefs:NodeChangeEvent|] v0 @type (object)) @owner [|java:util:prefs:NodeChangeListener|] @signature [|Ljava/util/prefs/NodeChangeListener;.childRemoved:(Ljava/util/prefs/NodeChangeEvent;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:w3c:dom:NodeList|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|org:w3c:dom:NodeList.getLength|] () @owner [|org:w3c:dom:NodeList|] @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:w3c:dom:Node|] [|org:w3c:dom:NodeList.item|] ([|int|] v0) @owner [|org:w3c:dom:NodeList|] @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:prefs:NodeSet|]  @type class @AccessFlag  extends  [|org:w3c:dom:NodeList|] {
      [|java:util:ArrayList|] [|java:util:prefs:NodeSet.list|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:prefs:NodeSet.<init>|] ([|java:util:prefs:NodeSet|] v2 @type (this), [|java:util:Iterator|] v3 @type (object)) @owner [|java:util:prefs:NodeSet|] @signature [|Ljava/util/prefs/NodeSet;.<init>:(Ljava/util/Iterator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L153728.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15372e.   v0:= new [|java:util:ArrayList|];
#L153732.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L153738.   v2.[|java:util:prefs:NodeSet.list|]  := v0 @type object;
#L15373c.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L153742.   v0:= temp;
#L153744.   if v0 == 0 then goto L15375c;
#L153748.   v0:= v2.[|java:util:prefs:NodeSet.list|]   @type object;
#L15374c.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L153752.   v1:= temp  @type object;
#L153754.   call temp:=  [|java:util:ArrayList.add|](v0, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L15375a.   goto L15373c;
#L15375c.   return @void ;

   }
    procedure [|int|] [|java:util:prefs:NodeSet.getLength|] ([|java:util:prefs:NodeSet|] v1 @type (this)) @owner [|java:util:prefs:NodeSet|] @signature [|Ljava/util/prefs/NodeSet;.getLength:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L153770.   v0:= v1.[|java:util:prefs:NodeSet.list|]   @type object;
#L153774.   call temp:=  [|java:util:ArrayList.size|](v0) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L15377a.   v0:= temp;
#L15377c.   return v0;

   }
    procedure [|org:w3c:dom:Node|] [|java:util:prefs:NodeSet.item|] ([|java:util:prefs:NodeSet|] v4 @type (this), [|int|] v5) @owner [|java:util:prefs:NodeSet|] @signature [|Ljava/util/prefs/NodeSet;.item:(I)Lorg/w3c/dom/Node;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L153790.   v2:= 0  @length 4;
#L153792.   v3:= v4.[|java:util:prefs:NodeSet.list|]   @type object;
#L153796.   call temp:=  [|java:util:ArrayList.get|](v3, v5) @signature [|Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L15379c.   v3:= temp  @type object;
#L15379e.   v0:= v3  @type object;
#L1537a0.   v0:= ([|org:w3c:dom:Node|])v0;
#L1537a4.   v2:= v0  @type object;
#L1537a6.   v3:= v2  @type object;
#L1537a8.   return v3  @type object;
#L1537aa.   v1:= Exception  @type object;
#L1537ac.   v3:= 0  @length 4;
#L1537ae.   goto L1537a8;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L153792..L1537a6] goto L1537aa;

   }
record [|java:util:prefs:PreferenceChangeEvent|]  @type class @AccessFlag PUBLIC  extends [|java:util:EventObject|], [|java:io:Serializable|] {
      [|java:lang:String|] [|java:util:prefs:PreferenceChangeEvent.key|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:prefs:Preferences|] [|java:util:prefs:PreferenceChangeEvent.node|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:util:prefs:PreferenceChangeEvent.value|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:prefs:PreferenceChangeEvent.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:prefs:PreferenceChangeEvent.<init>|] ([|java:util:prefs:PreferenceChangeEvent|] v0 @type (this), [|java:util:prefs:Preferences|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.<init>:(Ljava/util/prefs/Preferences;Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1537d0.   call temp:=  [|java:util:EventObject.<init>|](v0, v1) @signature [|Ljava/util/EventObject;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:EventObject|] @type direct;
#L1537d6.   v0.[|java:util:prefs:PreferenceChangeEvent.node|]  := v1 @type object;
#L1537da.   v0.[|java:util:prefs:PreferenceChangeEvent.key|]  := v2 @type object;
#L1537de.   v0.[|java:util:prefs:PreferenceChangeEvent.value|]  := v3 @type object;
#L1537e2.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:PreferenceChangeEvent.readObject|] ([|java:util:prefs:PreferenceChangeEvent|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1537f4.   v0:= new [|java:io:NotSerializableException|];
#L1537f8.   call temp:=  [|java:io:NotSerializableException.<init>|](v0) @signature [|Ljava/io/NotSerializableException;.<init>:()V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1537fe.   throw v0;

   }
    procedure [|void|] [|java:util:prefs:PreferenceChangeEvent.writeObject|] ([|java:util:prefs:PreferenceChangeEvent|] v1 @type (this), [|java:io:ObjectOutputStream|] v2 @type (object)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L153810.   v0:= new [|java:io:NotSerializableException|];
#L153814.   call temp:=  [|java:io:NotSerializableException.<init>|](v0) @signature [|Ljava/io/NotSerializableException;.<init>:()V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L15381a.   throw v0;

   }
    procedure [|java:lang:String|] [|java:util:prefs:PreferenceChangeEvent.getKey|] ([|java:util:prefs:PreferenceChangeEvent|] v1 @type (this)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.getKey:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15382c.   v0:= v1.[|java:util:prefs:PreferenceChangeEvent.key|]   @type object;
#L153830.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:prefs:PreferenceChangeEvent.getNewValue|] ([|java:util:prefs:PreferenceChangeEvent|] v1 @type (this)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.getNewValue:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L153844.   v0:= v1.[|java:util:prefs:PreferenceChangeEvent.value|]   @type object;
#L153848.   return v0  @type object;

   }
    procedure [|java:util:prefs:Preferences|] [|java:util:prefs:PreferenceChangeEvent.getNode|] ([|java:util:prefs:PreferenceChangeEvent|] v1 @type (this)) @owner [|java:util:prefs:PreferenceChangeEvent|] @signature [|Ljava/util/prefs/PreferenceChangeEvent;.getNode:()Ljava/util/prefs/Preferences;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15385c.   v0:= v1.[|java:util:prefs:PreferenceChangeEvent.node|]   @type object;
#L153860.   return v0  @type object;

   }
record [|java:util:prefs:PreferenceChangeListener|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:EventListener|] {
   }
    procedure [|void|] [|java:util:prefs:PreferenceChangeListener.preferenceChange|] ([|java:util:prefs:PreferenceChangeEvent|] v0 @type (object)) @owner [|java:util:prefs:PreferenceChangeListener|] @signature [|Ljava/util/prefs/PreferenceChangeListener;.preferenceChange:(Ljava/util/prefs/PreferenceChangeEvent;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:prefs:XMLParser$1|]  @type class @AccessFlag FINAL extends  [|org:xml:sax:EntityResolver|] {
   }
    procedure [|void|] [|java:util:prefs:XMLParser$1.<init>|] ([|java:util:prefs:XMLParser$1|] v0 @type (this)) @owner [|java:util:prefs:XMLParser$1|] @signature [|Ljava/util/prefs/XMLParser$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L153874.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15387a.   return @void ;

   }
    procedure [|org:xml:sax:InputSource|] [|java:util:prefs:XMLParser$1.resolveEntity|] ([|java:util:prefs:XMLParser$1|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:util:prefs:XMLParser$1|] @signature [|Ljava/util/prefs/XMLParser$1;.resolveEntity:(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15388c.   v1:= "http://java.sun.com/dtd/preferences.dtd" @type (object, string);
#L153890.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L153896.   v1:= temp;
#L153898.   if v1 == 0 then goto L1538c0;
#L15389c.   v0:= new [|org:xml:sax:InputSource|];
#L1538a0.   v1:= new [|java:io:StringReader|];
#L1538a4.   v2:= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>    <!ELEMENT preferences (root)>    <!ATTLIST preferences EXTERNAL_XML_VERSION CDATA \"0.0\" >    <!ELEMENT root (map, node*) >    <!ATTLIST root type (system|user) #REQUIRED >    <!ELEMENT node (map, node*) >    <!ATTLIST node name CDATA #REQUIRED >    <!ELEMENT map (entry*) >    <!ELEMENT entry EMPTY >    <!ATTLIST entry key   CDATA #REQUIRED value CDATA #REQUIRED >" @type (object, string);
#L1538a8.   call temp:=  [|java:io:StringReader.<init>|](v1, v2) @signature [|Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L1538ae.   call temp:=  [|org:xml:sax:InputSource.<init>|](v0, v1) @signature [|Lorg/xml/sax/InputSource;.<init>:(Ljava/io/Reader;)V|] @classDescriptor [|org:xml:sax:InputSource|] @type direct;
#L1538b4.   v1:= "http://java.sun.com/dtd/preferences.dtd" @type (object, string);
#L1538b8.   call temp:=  [|org:xml:sax:InputSource.setSystemId|](v0, v1) @signature [|Lorg/xml/sax/InputSource;.setSystemId:(Ljava/lang/String;)V|] @classDescriptor [|org:xml:sax:InputSource|] @type virtual;
#L1538be.   return v0  @type object;
#L1538c0.   v1:= new [|org:xml:sax:SAXException|];
#L1538c4.   v2:= new [|java:lang:StringBuilder|];
#L1538c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1538ce.   v3:= "Invalid DOCTYPE declaration " @type (object, string);
#L1538d2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1538d8.   v2:= temp  @type object;
#L1538da.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1538e0.   v2:= temp  @type object;
#L1538e2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1538e8.   v2:= temp  @type object;
#L1538ea.   call temp:=  [|org:xml:sax:SAXException.<init>|](v1, v2) @signature [|Lorg/xml/sax/SAXException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:xml:sax:SAXException|] @type direct;
#L1538f0.   throw v1;

   }
record [|java:util:prefs:XMLParser$2|]  @type class @AccessFlag FINAL extends  [|org:xml:sax:ErrorHandler|] {
   }
    procedure [|void|] [|java:util:prefs:XMLParser$2.<init>|] ([|java:util:prefs:XMLParser$2|] v0 @type (this)) @owner [|java:util:prefs:XMLParser$2|] @signature [|Ljava/util/prefs/XMLParser$2;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L153904.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15390a.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser$2.error|] ([|java:util:prefs:XMLParser$2|] v0 @type (this), [|org:xml:sax:SAXParseException|] v1 @type (object)) @owner [|java:util:prefs:XMLParser$2|] @signature [|Ljava/util/prefs/XMLParser$2;.error:(Lorg/xml/sax/SAXParseException;)V|] @Access PUBLIC {
      local temp ;
      
#L15391c.   throw v1;

   }
    procedure [|void|] [|java:util:prefs:XMLParser$2.fatalError|] ([|java:util:prefs:XMLParser$2|] v0 @type (this), [|org:xml:sax:SAXParseException|] v1 @type (object)) @owner [|java:util:prefs:XMLParser$2|] @signature [|Ljava/util/prefs/XMLParser$2;.fatalError:(Lorg/xml/sax/SAXParseException;)V|] @Access PUBLIC {
      local temp ;
      
#L153930.   throw v1;

   }
    procedure [|void|] [|java:util:prefs:XMLParser$2.warning|] ([|java:util:prefs:XMLParser$2|] v0 @type (this), [|org:xml:sax:SAXParseException|] v1 @type (object)) @owner [|java:util:prefs:XMLParser$2|] @signature [|Ljava/util/prefs/XMLParser$2;.warning:(Lorg/xml/sax/SAXParseException;)V|] @Access PUBLIC {
      local temp ;
      
#L153944.   throw v1;

   }
record [|java:util:prefs:XMLParser|]  @type class @AccessFlag   {
   }
      global [|java:lang:String|] @@[|java:util:prefs:XMLParser.DOCTYPE|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:prefs:XMLParser.FILE_PREFS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:prefs:XMLParser.HEADER|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:prefs:XMLParser.PREFS_DTD|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:String|] @@[|java:util:prefs:XMLParser.PREFS_DTD_NAME|]    @AccessFlag STATIC_FINAL;
      global [|float|] @@[|java:util:prefs:XMLParser.XML_VERSION|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|javax:xml:parsers:DocumentBuilder|] @@[|java:util:prefs:XMLParser.builder|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:prefs:XMLParser.indent|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:util:prefs:XMLParser.<clinit>|] () @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L153958.   v2:= -1  @length 4;
#L15395a.   @@[|java:util:prefs:XMLParser.indent|] := v2;
#L15395e.   call temp:=  [|javax:xml:parsers:DocumentBuilderFactory.newInstance|]() @signature [|Ljavax/xml/parsers/DocumentBuilderFactory;.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;|] @classDescriptor [|javax:xml:parsers:DocumentBuilderFactory|] @type static;
#L153964.   v1:= temp  @type object;
#L153966.   v2:= 0  @length 4;
#L153968.   call temp:=  [|javax:xml:parsers:DocumentBuilderFactory.setValidating|](v1, v2) @signature [|Ljavax/xml/parsers/DocumentBuilderFactory;.setValidating:(Z)V|] @classDescriptor [|javax:xml:parsers:DocumentBuilderFactory|] @type virtual;
#L15396e.   call temp:=  [|javax:xml:parsers:DocumentBuilderFactory.newDocumentBuilder|](v1) @signature [|Ljavax/xml/parsers/DocumentBuilderFactory;.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;|] @classDescriptor [|javax:xml:parsers:DocumentBuilderFactory|] @type virtual;
#L153974.   v2:= temp  @type object;
#L153976.   @@[|java:util:prefs:XMLParser.builder|] := v2  @type object;
#L15397a.   v2:= @@[|java:util:prefs:XMLParser.builder|]   @type object;
#L15397e.   v3:= new [|java:util:prefs:XMLParser$1|];
#L153982.   call temp:=  [|java:util:prefs:XMLParser$1.<init>|](v3) @signature [|Ljava/util/prefs/XMLParser$1;.<init>:()V|] @classDescriptor [|java:util:prefs:XMLParser$1|] @type direct;
#L153988.   call temp:=  [|javax:xml:parsers:DocumentBuilder.setEntityResolver|](v2, v3) @signature [|Ljavax/xml/parsers/DocumentBuilder;.setEntityResolver:(Lorg/xml/sax/EntityResolver;)V|] @classDescriptor [|javax:xml:parsers:DocumentBuilder|] @type virtual;
#L15398e.   v2:= @@[|java:util:prefs:XMLParser.builder|]   @type object;
#L153992.   v3:= new [|java:util:prefs:XMLParser$2|];
#L153996.   call temp:=  [|java:util:prefs:XMLParser$2.<init>|](v3) @signature [|Ljava/util/prefs/XMLParser$2;.<init>:()V|] @classDescriptor [|java:util:prefs:XMLParser$2|] @type direct;
#L15399c.   call temp:=  [|javax:xml:parsers:DocumentBuilder.setErrorHandler|](v2, v3) @signature [|Ljavax/xml/parsers/DocumentBuilder;.setErrorHandler:(Lorg/xml/sax/ErrorHandler;)V|] @classDescriptor [|javax:xml:parsers:DocumentBuilder|] @type virtual;
#L1539a2.   return @void ;
#L1539a4.   v0:= Exception  @type object;
#L1539a6.   v2:= new [|java:lang:Error|];
#L1539aa.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1539b0.   throw v2;
  catch  [|javax:xml:parsers:ParserConfigurationException|] @[L15396e..L15397a] goto L1539a4;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.<init>|] ([|java:util:prefs:XMLParser|] v0 @type (this)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1539d4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1539da.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.exportEntries|] ([|java:util:prefs:Preferences|] v5 @type (object), [|java:io:BufferedWriter|] v6 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.exportEntries:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1539ec.   call temp:=  [|java:util:prefs:Preferences.keys|](v5) @signature [|Ljava/util/prefs/Preferences;.keys:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L1539f2.   v1:= temp  @type object;
#L1539f4.   v3:= v1.length;
#L1539f6.   v2:= new [|java:lang:String|][v3];
#L1539fa.   v0:= 0  @length 4;
#L1539fc.   v3:= v1.length;
#L1539fe.   if v0 >= v3 then goto L153a1a;
#L153a02.   v3:= v1[v0]  @type object;
#L153a06.   v4:= 0  @length 4;
#L153a08.   call temp:=  [|java:util:prefs:Preferences.get|](v5, v3, v4) @signature [|Ljava/util/prefs/Preferences;.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L153a0e.   v3:= temp  @type object;
#L153a10.   v2[v0]:= v3  @type object;
#L153a14.   v0:= v0 + 1;
#L153a18.   goto L1539fc;
#L153a1a.   call temp:=  [|java:util:prefs:XMLParser.exportEntries|](v1, v2, v6) @signature [|Ljava/util/prefs/XMLParser;.exportEntries:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153a20.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.exportEntries|] ([|java:lang:String|][] v8 @type (object), [|java:lang:String|][] v9 @type (object), [|java:io:BufferedWriter|] v10 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.exportEntries:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L153a34.   v7:= 2  @length 4;
#L153a36.   v6:= 1  @length 4;
#L153a38.   v5:= 0  @length 4;
#L153a3a.   v1:= v8.length;
#L153a3c.   if v1 != 0 then goto L153a4c;
#L153a40.   v1:= "map" @type (object, string);
#L153a44.   call temp:=  [|java:util:prefs:XMLParser.flushEmptyElement|](v1, v10) @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153a4a.   return @void ;
#L153a4c.   v1:= "map" @type (object, string);
#L153a50.   call temp:=  [|java:util:prefs:XMLParser.flushStartTag|](v1, v10) @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153a56.   v0:= 0  @length 4;
#L153a58.   v1:= v8.length;
#L153a5a.   if v0 >= v1 then goto L153a9e;
#L153a5e.   v1:= v9[v0]  @type object;
#L153a62.   if v1 == 0 then goto L153a98;
#L153a66.   v1:= "entry" @type (object, string);
#L153a6a.   v2:= new [|java:lang:String|][v7];
#L153a6e.   v3:= "key" @type (object, string);
#L153a72.   v2[v5]:= v3  @type object;
#L153a76.   v3:= "value" @type (object, string);
#L153a7a.   v2[v6]:= v3  @type object;
#L153a7e.   v3:= new [|java:lang:String|][v7];
#L153a82.   v4:= v8[v0]  @type object;
#L153a86.   v3[v5]:= v4  @type object;
#L153a8a.   v4:= v9[v0]  @type object;
#L153a8e.   v3[v6]:= v4  @type object;
#L153a92.   call temp:=  [|java:util:prefs:XMLParser.flushEmptyElement|](v1, v2, v3, v10) @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153a98.   v0:= v0 + 1;
#L153a9c.   goto L153a58;
#L153a9e.   v1:= "map" @type (object, string);
#L153aa2.   call temp:=  [|java:util:prefs:XMLParser.flushEndTag|](v1, v10) @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153aa8.   goto L153a4a;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.exportNode|] ([|java:util:StringTokenizer|] v6 @type (object), [|java:util:prefs:Preferences|] v7 @type (object), [|boolean|] v8, [|java:io:BufferedWriter|] v9 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.exportNode:(Ljava/util/StringTokenizer;Ljava/util/prefs/Preferences;ZLjava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L153abc.   v5:= 1  @length 4;
#L153abe.   v4:= 0  @length 4;
#L153ac0.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v6) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L153ac6.   v1:= temp;
#L153ac8.   if v1 == 0 then goto L153b18;
#L153acc.   call temp:=  [|java:util:StringTokenizer.nextToken|](v6) @signature [|Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L153ad2.   v0:= temp  @type object;
#L153ad4.   v1:= "node" @type (object, string);
#L153ad8.   v2:= new [|java:lang:String|][v5];
#L153adc.   v3:= "name" @type (object, string);
#L153ae0.   v2[v4]:= v3  @type object;
#L153ae4.   v3:= new [|java:lang:String|][v5];
#L153ae8.   v3[v4]:= v0  @type object;
#L153aec.   call temp:=  [|java:util:prefs:XMLParser.flushStartTag|](v1, v2, v3, v9) @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153af2.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v6) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L153af8.   v1:= temp;
#L153afa.   if v1 == 0 then goto L153b1a;
#L153afe.   v1:= "map" @type (object, string);
#L153b02.   call temp:=  [|java:util:prefs:XMLParser.flushEmptyElement|](v1, v9) @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153b08.   call temp:=  [|java:util:prefs:XMLParser.exportNode|](v6, v7, v8, v9) @signature [|Ljava/util/prefs/XMLParser;.exportNode:(Ljava/util/StringTokenizer;Ljava/util/prefs/Preferences;ZLjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153b0e.   v1:= "node" @type (object, string);
#L153b12.   call temp:=  [|java:util:prefs:XMLParser.flushEndTag|](v1, v9) @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153b18.   return @void ;
#L153b1a.   call temp:=  [|java:util:prefs:XMLParser.exportEntries|](v7, v9) @signature [|Ljava/util/prefs/XMLParser;.exportEntries:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153b20.   if v8 == 0 then goto L153b0e;
#L153b24.   call temp:=  [|java:util:prefs:XMLParser.exportSubTree|](v7, v9) @signature [|Ljava/util/prefs/XMLParser;.exportSubTree:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153b2a.   goto L153b0e;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.exportPrefs|] ([|java:util:prefs:Preferences|] v8 @type (object), [|java:io:OutputStream|] v9 @type (object), [|boolean|] v10) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.exportPrefs:(Ljava/util/prefs/Preferences;Ljava/io/OutputStream;Z)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L153b3c.   v7:= 1  @length 4;
#L153b3e.   v6:= 0  @length 4;
#L153b40.   v2:= -1  @length 4;
#L153b42.   @@[|java:util:prefs:XMLParser.indent|] := v2;
#L153b46.   v1:= new [|java:io:BufferedWriter|];
#L153b4a.   v2:= new [|java:io:OutputStreamWriter|];
#L153b4e.   v3:= "UTF-8" @type (object, string);
#L153b52.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v2, v9, v3) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L153b58.   call temp:=  [|java:io:BufferedWriter.<init>|](v1, v2) @signature [|Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L153b5e.   v2:= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" @type (object, string);
#L153b62.   call temp:=  [|java:io:BufferedWriter.write|](v1, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b68.   call temp:=  [|java:io:BufferedWriter.newLine|](v1) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b6e.   call temp:=  [|java:io:BufferedWriter.newLine|](v1) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b74.   v2:= "<!DOCTYPE preferences SYSTEM" @type (object, string);
#L153b78.   call temp:=  [|java:io:BufferedWriter.write|](v1, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b7e.   v2:= " '" @type (object, string);
#L153b82.   call temp:=  [|java:io:BufferedWriter.write|](v1, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b88.   v2:= "http://java.sun.com/dtd/preferences.dtd" @type (object, string);
#L153b8c.   call temp:=  [|java:io:BufferedWriter.write|](v1, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b92.   v2:= "'>" @type (object, string);
#L153b96.   call temp:=  [|java:io:BufferedWriter.write|](v1, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153b9c.   call temp:=  [|java:io:BufferedWriter.newLine|](v1) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153ba2.   call temp:=  [|java:io:BufferedWriter.newLine|](v1) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153ba8.   v2:= "preferences" @type (object, string);
#L153bac.   v3:= new [|java:lang:String|][v7];
#L153bb0.   v4:= "EXTERNAL_XML_VERSION" @type (object, string);
#L153bb4.   v3[v6]:= v4  @type object;
#L153bb8.   v4:= new [|java:lang:String|][v7];
#L153bbc.   v5:= 1065353216  @length high16;
#L153bc0.   call temp:=  [|java:lang:String.valueOf|](v5) @signature [|Ljava/lang/String;.valueOf:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L153bc6.   v5:= temp  @type object;
#L153bc8.   v4[v6]:= v5  @type object;
#L153bcc.   call temp:=  [|java:util:prefs:XMLParser.flushStartTag|](v2, v3, v4, v1) @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153bd2.   v3:= "root" @type (object, string);
#L153bd6.   v4:= new [|java:lang:String|][v7];
#L153bda.   v2:= "type" @type (object, string);
#L153bde.   v4[v6]:= v2  @type object;
#L153be2.   v5:= new [|java:lang:String|][v7];
#L153be6.   call temp:=  [|java:util:prefs:Preferences.isUserNode|](v8) @signature [|Ljava/util/prefs/Preferences;.isUserNode:()Z|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L153bec.   v2:= temp;
#L153bee.   if v2 == 0 then goto L153c44;
#L153bf2.   v2:= "user" @type (object, string);
#L153bf6.   v5[v6]:= v2  @type object;
#L153bfa.   call temp:=  [|java:util:prefs:XMLParser.flushStartTag|](v3, v4, v5, v1) @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153c00.   v2:= "map" @type (object, string);
#L153c04.   call temp:=  [|java:util:prefs:XMLParser.flushEmptyElement|](v2, v1) @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153c0a.   v0:= new [|java:util:StringTokenizer|];
#L153c0e.   call temp:=  [|java:util:prefs:Preferences.absolutePath|](v8) @signature [|Ljava/util/prefs/Preferences;.absolutePath:()Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L153c14.   v2:= temp  @type object;
#L153c16.   v3:= "/" @type (object, string);
#L153c1a.   call temp:=  [|java:util:StringTokenizer.<init>|](v0, v2, v3) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L153c20.   call temp:=  [|java:util:prefs:XMLParser.exportNode|](v0, v8, v10, v1) @signature [|Ljava/util/prefs/XMLParser;.exportNode:(Ljava/util/StringTokenizer;Ljava/util/prefs/Preferences;ZLjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153c26.   v2:= "root" @type (object, string);
#L153c2a.   call temp:=  [|java:util:prefs:XMLParser.flushEndTag|](v2, v1) @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153c30.   v2:= "preferences" @type (object, string);
#L153c34.   call temp:=  [|java:util:prefs:XMLParser.flushEndTag|](v2, v1) @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153c3a.   call temp:=  [|java:io:BufferedWriter.flush|](v1) @signature [|Ljava/io/BufferedWriter;.flush:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153c40.   v1:= 0  @length 4;
#L153c42.   return @void ;
#L153c44.   v2:= "system" @type (object, string);
#L153c48.   goto L153bf6;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.exportSubTree|] ([|java:util:prefs:Preferences|] v9 @type (object), [|java:io:BufferedWriter|] v10 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.exportSubTree:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L153c5c.   v8:= 1  @length 4;
#L153c5e.   v7:= 0  @length 4;
#L153c60.   call temp:=  [|java:util:prefs:Preferences.childrenNames|](v9) @signature [|Ljava/util/prefs/Preferences;.childrenNames:()[Ljava/lang/String;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L153c66.   v2:= temp  @type object;
#L153c68.   v3:= v2.length;
#L153c6a.   if v3 <= 0 then goto L153cc0;
#L153c6e.   v1:= 0  @length 4;
#L153c70.   v3:= v2.length;
#L153c72.   if v1 >= v3 then goto L153cc0;
#L153c76.   v3:= v2[v1]  @type object;
#L153c7a.   call temp:=  [|java:util:prefs:Preferences.node|](v9, v3) @signature [|Ljava/util/prefs/Preferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L153c80.   v0:= temp  @type object;
#L153c82.   v3:= "node" @type (object, string);
#L153c86.   v4:= new [|java:lang:String|][v8];
#L153c8a.   v5:= "name" @type (object, string);
#L153c8e.   v4[v7]:= v5  @type object;
#L153c92.   v5:= new [|java:lang:String|][v8];
#L153c96.   v6:= v2[v1]  @type object;
#L153c9a.   v5[v7]:= v6  @type object;
#L153c9e.   call temp:=  [|java:util:prefs:XMLParser.flushStartTag|](v3, v4, v5, v10) @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153ca4.   call temp:=  [|java:util:prefs:XMLParser.exportEntries|](v0, v10) @signature [|Ljava/util/prefs/XMLParser;.exportEntries:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153caa.   call temp:=  [|java:util:prefs:XMLParser.exportSubTree|](v0, v10) @signature [|Ljava/util/prefs/XMLParser;.exportSubTree:(Ljava/util/prefs/Preferences;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153cb0.   v3:= "node" @type (object, string);
#L153cb4.   call temp:=  [|java:util:prefs:XMLParser.flushEndTag|](v3, v10) @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153cba.   v1:= v1 + 1;
#L153cbe.   goto L153c70;
#L153cc0.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushEmptyElement|] ([|java:lang:String|] v1 @type (object), [|java:io:BufferedWriter|] v2 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L153cd4.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153cd8.   v0:= v0 + 1;
#L153cdc.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153ce0.   call temp:=  [|java:util:prefs:XMLParser.flushIndent|](v0, v2) @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153ce6.   v0:= "<" @type (object, string);
#L153cea.   call temp:=  [|java:io:BufferedWriter.write|](v2, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153cf0.   call temp:=  [|java:io:BufferedWriter.write|](v2, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153cf6.   v0:= " />" @type (object, string);
#L153cfa.   call temp:=  [|java:io:BufferedWriter.write|](v2, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d00.   call temp:=  [|java:io:BufferedWriter.newLine|](v2) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d06.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153d0a.   v0:= v0 + -1;
#L153d0e.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153d12.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushEmptyElement|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|][] v2 @type (object), [|java:lang:String|][] v3 @type (object), [|java:io:BufferedWriter|] v4 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushEmptyElement:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L153d24.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153d28.   v0:= v0 + 1;
#L153d2c.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153d30.   call temp:=  [|java:util:prefs:XMLParser.flushIndent|](v0, v4) @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153d36.   v0:= "<" @type (object, string);
#L153d3a.   call temp:=  [|java:io:BufferedWriter.write|](v4, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d40.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d46.   call temp:=  [|java:util:prefs:XMLParser.flushPairs|](v2, v3, v4) @signature [|Ljava/util/prefs/XMLParser;.flushPairs:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153d4c.   v0:= " />" @type (object, string);
#L153d50.   call temp:=  [|java:io:BufferedWriter.write|](v4, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d56.   call temp:=  [|java:io:BufferedWriter.newLine|](v4) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d5c.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153d60.   v0:= v0 + -1;
#L153d64.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153d68.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushEndTag|] ([|java:lang:String|] v2 @type (object), [|java:io:BufferedWriter|] v3 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushEndTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L153d7c.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153d80.   v1:= v0 + -1;
#L153d84.   @@[|java:util:prefs:XMLParser.indent|] := v1;
#L153d88.   call temp:=  [|java:util:prefs:XMLParser.flushIndent|](v0, v3) @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153d8e.   v0:= "</" @type (object, string);
#L153d92.   call temp:=  [|java:io:BufferedWriter.write|](v3, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d98.   call temp:=  [|java:io:BufferedWriter.write|](v3, v2) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153d9e.   v0:= ">" @type (object, string);
#L153da2.   call temp:=  [|java:io:BufferedWriter.write|](v3, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153da8.   call temp:=  [|java:io:BufferedWriter.newLine|](v3) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153dae.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushIndent|] ([|int|] v2, [|java:io:BufferedWriter|] v3 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L153dc0.   v0:= 0  @length 4;
#L153dc2.   if v0 >= v2 then goto L153dd6;
#L153dc6.   v1:= "  " @type (object, string);
#L153dca.   call temp:=  [|java:io:BufferedWriter.write|](v3, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153dd0.   v0:= v0 + 1;
#L153dd4.   goto L153dc2;
#L153dd6.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushPairs|] ([|java:lang:String|][] v2 @type (object), [|java:lang:String|][] v3 @type (object), [|java:io:BufferedWriter|] v4 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushPairs:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L153de8.   v0:= 0  @length 4;
#L153dea.   v1:= v2.length;
#L153dec.   if v0 >= v1 then goto L153e30;
#L153df0.   v1:= " " @type (object, string);
#L153df4.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153dfa.   v1:= v2[v0]  @type object;
#L153dfe.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e04.   v1:= "=\"" @type (object, string);
#L153e08.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e0e.   v1:= v3[v0]  @type object;
#L153e12.   call temp:=  [|java:util:prefs:XMLParser.htmlEncode|](v1) @signature [|Ljava/util/prefs/XMLParser;.htmlEncode:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153e18.   v1:= temp  @type object;
#L153e1a.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e20.   v1:= "\"" @type (object, string);
#L153e24.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e2a.   v0:= v0 + 1;
#L153e2e.   goto L153dea;
#L153e30.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushStartTag|] ([|java:lang:String|] v1 @type (object), [|java:io:BufferedWriter|] v2 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L153e44.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153e48.   v0:= v0 + 1;
#L153e4c.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153e50.   call temp:=  [|java:util:prefs:XMLParser.flushIndent|](v0, v2) @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153e56.   v0:= "<" @type (object, string);
#L153e5a.   call temp:=  [|java:io:BufferedWriter.write|](v2, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e60.   call temp:=  [|java:io:BufferedWriter.write|](v2, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e66.   v0:= ">" @type (object, string);
#L153e6a.   call temp:=  [|java:io:BufferedWriter.write|](v2, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e70.   call temp:=  [|java:io:BufferedWriter.newLine|](v2) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153e76.   return @void ;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.flushStartTag|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|][] v2 @type (object), [|java:lang:String|][] v3 @type (object), [|java:io:BufferedWriter|] v4 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.flushStartTag:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L153e88.   v0:= @@[|java:util:prefs:XMLParser.indent|] ;
#L153e8c.   v0:= v0 + 1;
#L153e90.   @@[|java:util:prefs:XMLParser.indent|] := v0;
#L153e94.   call temp:=  [|java:util:prefs:XMLParser.flushIndent|](v0, v4) @signature [|Ljava/util/prefs/XMLParser;.flushIndent:(ILjava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153e9a.   v0:= "<" @type (object, string);
#L153e9e.   call temp:=  [|java:io:BufferedWriter.write|](v4, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153ea4.   call temp:=  [|java:io:BufferedWriter.write|](v4, v1) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153eaa.   call temp:=  [|java:util:prefs:XMLParser.flushPairs|](v2, v3, v4) @signature [|Ljava/util/prefs/XMLParser;.flushPairs:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L153eb0.   v0:= ">" @type (object, string);
#L153eb4.   call temp:=  [|java:io:BufferedWriter.write|](v4, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153eba.   call temp:=  [|java:io:BufferedWriter.newLine|](v4) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L153ec0.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:prefs:XMLParser.htmlEncode|] ([|java:lang:String|] v4 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.htmlEncode:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L153ed4.   v2:= new [|java:lang:StringBuilder|];
#L153ed8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L153ede.   v1:= 0  @length 4;
#L153ee0.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L153ee6.   v3:= temp;
#L153ee8.   if v1 >= v3 then goto L153f36;
#L153eec.   call temp:=  [|java:lang:String.charAt|](v4, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L153ef2.   v0:= temp;
#L153ef4.   goto L153f40;
#L153efa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f00.   v1:= v1 + 1;
#L153f04.   goto L153ee0;
#L153f06.   v3:= "&lt;" @type (object, string);
#L153f0a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f10.   goto L153f00;
#L153f12.   v3:= "&gt;" @type (object, string);
#L153f16.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f1c.   goto L153f00;
#L153f1e.   v3:= "&amp;" @type (object, string);
#L153f22.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f28.   goto L153f00;
#L153f2a.   v3:= "&quot;" @type (object, string);
#L153f2e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f34.   goto L153f00;
#L153f36.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153f3c.   v3:= temp  @type object;
#L153f3e.   return v3  @type object;
#L153f40.   switch v0
                 | 34 => goto L153f2a
                 | 38 => goto L153f1e
                 | 60 => goto L153f06
                 | 62 => goto L153f12
                 | => goto L153efa;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.importPrefs|] ([|java:io:InputStream|] v10 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.importPrefs:(Ljava/io/InputStream;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L153f74.   v7:= @@[|java:util:prefs:XMLParser.builder|]   @type object;
#L153f78.   v8:= new [|org:xml:sax:InputSource|];
#L153f7c.   call temp:=  [|org:xml:sax:InputSource.<init>|](v8, v10) @signature [|Lorg/xml/sax/InputSource;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|org:xml:sax:InputSource|] @type direct;
#L153f82.   call temp:=  [|javax:xml:parsers:DocumentBuilder.parse|](v7, v8) @signature [|Ljavax/xml/parsers/DocumentBuilder;.parse:(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;|] @classDescriptor [|javax:xml:parsers:DocumentBuilder|] @type virtual;
#L153f88.   v0:= temp  @type object;
#L153f8a.   call temp:=  [|org:w3c:dom:Document.getDocumentElement|](v0) @signature [|Lorg/w3c/dom/Document;.getDocumentElement:()Lorg/w3c/dom/Element;|] @classDescriptor [|org:w3c:dom:Document|] @type interface;
#L153f90.   v2:= temp  @type object;
#L153f92.   v7:= "EXTERNAL_XML_VERSION" @type (object, string);
#L153f96.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v2, v7) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L153f9c.   v6:= temp  @type object;
#L153f9e.   if v6 == 0 then goto L154002;
#L153fa2.   call temp:=  [|java:lang:Float.parseFloat|](v6) @signature [|Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F|] @classDescriptor [|java:lang:Float|] @type static;
#L153fa8.   v7:= temp;
#L153faa.   v8:= 1065353216  @length high16;
#L153fae.   v7:= cmpl(v7,v8);
#L153fb2.   if v7 <= 0 then goto L154002;
#L153fb6.   v7:= new [|java:util:prefs:InvalidPreferencesFormatException|];
#L153fba.   v8:= new [|java:lang:StringBuilder|];
#L153fbe.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L153fc4.   v9:= "Preferences version " @type (object, string);
#L153fc8.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153fce.   v8:= temp  @type object;
#L153fd0.   call temp:=  [|java:lang:StringBuilder.append|](v8, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153fd6.   v8:= temp  @type object;
#L153fd8.   v9:= " is not supported" @type (object, string);
#L153fdc.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153fe2.   v8:= temp  @type object;
#L153fe4.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L153fea.   v8:= temp  @type object;
#L153fec.   call temp:=  [|java:util:prefs:InvalidPreferencesFormatException.<init>|](v7, v8) @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:InvalidPreferencesFormatException|] @type direct;
#L153ff2.   throw v7;
#L153ff4.   v1:= Exception  @type object;
#L153ff6.   v7:= new [|java:util:prefs:InvalidPreferencesFormatException|];
#L153ffa.   call temp:=  [|java:util:prefs:InvalidPreferencesFormatException.<init>|](v7, v1) @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:prefs:InvalidPreferencesFormatException|] @type direct;
#L154000.   throw v7;
#L154002.   v7:= "root" @type (object, string);
#L154006.   call temp:=  [|org:w3c:dom:Element.getElementsByTagName|](v2, v7) @signature [|Lorg/w3c/dom/Element;.getElementsByTagName:(Ljava/lang/String;)Lorg/w3c/dom/NodeList;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L15400c.   v7:= temp  @type object;
#L15400e.   v8:= 0  @length 4;
#L154010.   call temp:=  [|org:w3c:dom:NodeList.item|](v7, v8) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154016.   v4:= temp  @type object;
#L154018.   v4:= ([|org:w3c:dom:Element|])v4;
#L15401c.   v3:= 0  @length 4;
#L15401e.   v7:= "type" @type (object, string);
#L154022.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v4, v7) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L154028.   v5:= temp  @type object;
#L15402a.   v7:= "user" @type (object, string);
#L15402e.   call temp:=  [|java:lang:String.equals|](v5, v7) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L154034.   v7:= temp;
#L154036.   if v7 == 0 then goto L15404a;
#L15403a.   call temp:=  [|java:util:prefs:Preferences.userRoot|]() @signature [|Ljava/util/prefs/Preferences;.userRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L154040.   v3:= temp  @type object;
#L154042.   call temp:=  [|java:util:prefs:XMLParser.loadNode|](v3, v4) @signature [|Ljava/util/prefs/XMLParser;.loadNode:(Ljava/util/prefs/Preferences;Lorg/w3c/dom/Element;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L154048.   return @void ;
#L15404a.   call temp:=  [|java:util:prefs:Preferences.systemRoot|]() @signature [|Ljava/util/prefs/Preferences;.systemRoot:()Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type static;
#L154050.   v3:= temp  @type object;
#L154052.   goto L154042;
#L154054.   v1:= Exception  @type object;
#L154056.   v7:= new [|java:util:prefs:InvalidPreferencesFormatException|];
#L15405a.   call temp:=  [|java:util:prefs:InvalidPreferencesFormatException.<init>|](v7, v1) @signature [|Ljava/util/prefs/InvalidPreferencesFormatException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:prefs:InvalidPreferencesFormatException|] @type direct;
#L154060.   throw v7;
  catch  [|javax:xml:parsers:FactoryConfigurationError|] @[L153f74..L153ff4] goto L153ff4;
  catch  [|org:xml:sax:SAXException|] @[L153f74..L153ff4] goto L154054;
  catch  [|javax:xml:parsers:FactoryConfigurationError|] @[L154002..L154050] goto L153ff4;
  catch  [|org:xml:sax:SAXException|] @[L154002..L154050] goto L154054;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.loadNode|] ([|java:util:prefs:Preferences|] v14 @type (object), [|org:w3c:dom:Element|] v15 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.loadNode:(Ljava/util/prefs/Preferences;Lorg/w3c/dom/Element;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L15408c.   v12:= "node" @type (object, string);
#L154090.   call temp:=  [|java:util:prefs:XMLParser.selectNodeList|](v15, v12) @signature [|Ljava/util/prefs/XMLParser;.selectNodeList:(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/NodeList;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L154096.   v3:= temp  @type object;
#L154098.   v12:= "map/entry" @type (object, string);
#L15409c.   call temp:=  [|java:util:prefs:XMLParser.selectNodeList|](v15, v12) @signature [|Ljava/util/prefs/XMLParser;.selectNodeList:(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/NodeList;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L1540a2.   v4:= temp  @type object;
#L1540a4.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v3) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L1540aa.   v2:= temp;
#L1540ac.   v10:= new [|java:util:prefs:Preferences|][v2];
#L1540b0.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v4) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L1540b6.   v6:= temp;
#L1540b8.   v12:= v14  @type object;
#L1540ba.   v12:= ([|java:util:prefs:AbstractPreferences|])v12;
#L1540be.   v13:= v12.[|java:util:prefs:AbstractPreferences.lock|]   @type object;
#L1540c2.   (@monitorenter v13)
#L1540c4.   v0:= v14  @type object;
#L1540c6.   v0:= ([|java:util:prefs:AbstractPreferences|])v0;
#L1540ca.   v12:= v0  @type object;
#L1540cc.   call temp:=  [|java:util:prefs:AbstractPreferences.isRemoved|](v12) @signature [|Ljava/util/prefs/AbstractPreferences;.isRemoved:()Z|] @classDescriptor [|java:util:prefs:AbstractPreferences|] @type virtual;
#L1540d2.   v12:= temp;
#L1540d4.   if v12 == 0 then goto L1540dc;
#L1540d8.   (@monitorexit v13)
#L1540da.   return @void ;
#L1540dc.   v7:= 0  @length 4;
#L1540de.   if v7 >= v6 then goto L154112;
#L1540e2.   call temp:=  [|org:w3c:dom:NodeList.item|](v4, v7) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L1540e8.   v5:= temp  @type object;
#L1540ea.   v5:= ([|org:w3c:dom:Element|])v5;
#L1540ee.   v12:= "key" @type (object, string);
#L1540f2.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v5, v12) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L1540f8.   v8:= temp  @type object;
#L1540fa.   v12:= "value" @type (object, string);
#L1540fe.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v5, v12) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L154104.   v11:= temp  @type object;
#L154106.   call temp:=  [|java:util:prefs:Preferences.put|](v14, v8, v11) @signature [|Ljava/util/prefs/Preferences;.put:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L15410c.   v7:= v7 + 1;
#L154110.   goto L1540de;
#L154112.   v7:= 0  @length 4;
#L154114.   if v7 >= v2 then goto L154142;
#L154118.   call temp:=  [|org:w3c:dom:NodeList.item|](v3, v7) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L15411e.   v1:= temp  @type object;
#L154120.   v1:= ([|org:w3c:dom:Element|])v1;
#L154124.   v12:= "name" @type (object, string);
#L154128.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v1, v12) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L15412e.   v9:= temp  @type object;
#L154130.   call temp:=  [|java:util:prefs:Preferences.node|](v14, v9) @signature [|Ljava/util/prefs/Preferences;.node:(Ljava/lang/String;)Ljava/util/prefs/Preferences;|] @classDescriptor [|java:util:prefs:Preferences|] @type virtual;
#L154136.   v12:= temp  @type object;
#L154138.   v10[v7]:= v12  @type object;
#L15413c.   v7:= v7 + 1;
#L154140.   goto L154114;
#L154142.   (@monitorexit v13)
#L154144.   v7:= 0  @length 4;
#L154146.   if v7 >= v2 then goto L1540da;
#L15414a.   v13:= v10[v7]  @type object;
#L15414e.   call temp:=  [|org:w3c:dom:NodeList.item|](v3, v7) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154154.   v12:= temp  @type object;
#L154156.   v12:= ([|org:w3c:dom:Element|])v12;
#L15415a.   call temp:=  [|java:util:prefs:XMLParser.loadNode|](v13, v12) @signature [|Ljava/util/prefs/XMLParser;.loadNode:(Ljava/util/prefs/Preferences;Lorg/w3c/dom/Element;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L154160.   v7:= v7 + 1;
#L154164.   goto L154146;
#L154166.   v12:= Exception  @type object;
#L154168.   (@monitorexit v13)
#L15416a.   throw v12;
  catch  [|any|] @[L1540c4..L154144] goto L154166;
  catch  [|any|] @[L154168..L15416a] goto L154166;

   }
    procedure [|java:util:Properties|] [|java:util:prefs:XMLParser.readXmlPreferences|] ([|java:io:File|] v12 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.readXmlPreferences:(Ljava/io/File;)Ljava/util/Properties;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L154190.   v8:= new [|java:util:Properties|];
#L154194.   call temp:=  [|java:util:Properties.<init>|](v8) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L15419a.   call temp:=  [|java:io:File.exists|](v12) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1541a0.   v10:= temp;
#L1541a2.   if v10 != 0 then goto L1541b6;
#L1541a6.   call temp:=  [|java:io:File.getParentFile|](v12) @signature [|Ljava/io/File;.getParentFile:()Ljava/io/File;|] @classDescriptor [|java:io:File|] @type virtual;
#L1541ac.   v10:= temp  @type object;
#L1541ae.   call temp:=  [|java:io:File.mkdirs|](v10) @signature [|Ljava/io/File;.mkdirs:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1541b4.   return v8  @type object;
#L1541b6.   call temp:=  [|java:io:File.canRead|](v12) @signature [|Ljava/io/File;.canRead:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1541bc.   v10:= temp;
#L1541be.   if v10 == 0 then goto L154258;
#L1541c2.   v6:= 0  @length 4;
#L1541c4.   v7:= new [|java:io:InputStreamReader|];
#L1541c8.   v10:= new [|java:io:FileInputStream|];
#L1541cc.   call temp:=  [|java:io:FileInputStream.<init>|](v10, v12) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L1541d2.   v11:= "UTF-8" @type (object, string);
#L1541d6.   call temp:=  [|java:io:InputStreamReader.<init>|](v7, v10, v11) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L1541dc.   v10:= @@[|java:util:prefs:XMLParser.builder|]   @type object;
#L1541e0.   v11:= new [|org:xml:sax:InputSource|];
#L1541e4.   call temp:=  [|org:xml:sax:InputSource.<init>|](v11, v7) @signature [|Lorg/xml/sax/InputSource;.<init>:(Ljava/io/Reader;)V|] @classDescriptor [|org:xml:sax:InputSource|] @type direct;
#L1541ea.   call temp:=  [|javax:xml:parsers:DocumentBuilder.parse|](v10, v11) @signature [|Ljavax/xml/parsers/DocumentBuilder;.parse:(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;|] @classDescriptor [|javax:xml:parsers:DocumentBuilder|] @type virtual;
#L1541f0.   v0:= temp  @type object;
#L1541f2.   call temp:=  [|org:w3c:dom:Document.getDocumentElement|](v0) @signature [|Lorg/w3c/dom/Document;.getDocumentElement:()Lorg/w3c/dom/Element;|] @classDescriptor [|org:w3c:dom:Document|] @type interface;
#L1541f8.   v10:= temp  @type object;
#L1541fa.   v11:= "entry" @type (object, string);
#L1541fe.   call temp:=  [|java:util:prefs:XMLParser.selectNodeList|](v10, v11) @signature [|Ljava/util/prefs/XMLParser;.selectNodeList:(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/NodeList;|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L154204.   v1:= temp  @type object;
#L154206.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v1) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L15420c.   v4:= temp;
#L15420e.   v2:= 0  @length 4;
#L154210.   if v2 >= v4 then goto L154244;
#L154214.   call temp:=  [|org:w3c:dom:NodeList.item|](v1, v2) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L15421a.   v5:= temp  @type object;
#L15421c.   v5:= ([|org:w3c:dom:Element|])v5;
#L154220.   v10:= "key" @type (object, string);
#L154224.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v5, v10) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L15422a.   v3:= temp  @type object;
#L15422c.   v10:= "value" @type (object, string);
#L154230.   call temp:=  [|org:w3c:dom:Element.getAttribute|](v5, v10) @signature [|Lorg/w3c/dom/Element;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L154236.   v9:= temp  @type object;
#L154238.   call temp:=  [|java:util:Properties.setProperty|](v8, v3, v9) @signature [|Ljava/util/Properties;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L15423e.   v2:= v2 + 1;
#L154242.   goto L154210;
#L154244.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v7) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L15424a.   v6:= v7  @type object;
#L15424c.   goto L1541b4;
#L15424e.   v10:= Exception  @type object;
#L154250.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v6) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L154256.   throw v10;
#L154258.   call temp:=  [|java:io:File.delete|](v12) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L15425e.   goto L1541b4;
#L154260.   v10:= Exception  @type object;
#L154262.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v6) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L154268.   goto L1541b4;
#L15426a.   v10:= Exception  @type object;
#L15426c.   v6:= v7  @type object;
#L15426e.   goto L154250;
#L154270.   v10:= Exception  @type object;
#L154272.   goto L154262;
#L154274.   v10:= Exception  @type object;
#L154276.   goto L154262;
#L154278.   v10:= Exception  @type object;
#L15427a.   goto L154262;
#L15427c.   v10:= Exception  @type object;
#L15427e.   goto L154262;
#L154280.   v10:= Exception  @type object;
#L154282.   v6:= v7  @type object;
#L154284.   goto L154262;
#L154286.   v10:= Exception  @type object;
#L154288.   v6:= v7  @type object;
#L15428a.   goto L154262;
#L15428c.   v10:= Exception  @type object;
#L15428e.   v6:= v7  @type object;
#L154290.   goto L154262;
#L154292.   v10:= Exception  @type object;
#L154294.   v6:= v7  @type object;
#L154296.   goto L154262;
#L154298.   v10:= Exception  @type object;
#L15429a.   v6:= v7  @type object;
#L15429c.   goto L154262;
#L15429e.   v10:= Exception  @type object;
#L1542a0.   v6:= v7  @type object;
#L1542a2.   goto L154262;
#L1542a4.   v10:= Exception  @type object;
#L1542a6.   v6:= v7  @type object;
#L1542a8.   goto L154262;
#L1542aa.   v10:= Exception  @type object;
#L1542ac.   v6:= v7  @type object;
#L1542ae.   goto L154262;
#L1542b0.   v10:= Exception  @type object;
#L1542b2.   v6:= v7  @type object;
#L1542b4.   goto L154262;
#L1542b6.   v10:= Exception  @type object;
#L1542b8.   v6:= v7  @type object;
#L1542ba.   goto L154262;
#L1542bc.   v10:= Exception  @type object;
#L1542be.   v6:= v7  @type object;
#L1542c0.   goto L154262;
#L1542c2.   v10:= Exception  @type object;
#L1542c4.   v6:= v7  @type object;
#L1542c6.   goto L154262;
#L1542c8.   v10:= Exception  @type object;
#L1542ca.   v6:= v7  @type object;
#L1542cc.   goto L154262;
#L1542ce.   v10:= Exception  @type object;
#L1542d0.   v6:= v7  @type object;
#L1542d2.   goto L154262;
#L1542d4.   v10:= Exception  @type object;
#L1542d6.   v6:= v7  @type object;
#L1542d8.   goto L154262;
#L1542da.   v10:= Exception  @type object;
#L1542dc.   goto L154262;
#L1542de.   v10:= Exception  @type object;
#L1542e0.   v6:= v7  @type object;
#L1542e2.   goto L154262;
  catch  [|java:io:IOException|] @[L1541c4..L1541c8] goto L1542da;
  catch  [|org:xml:sax:SAXException|] @[L1541c4..L1541c8] goto L154260;
  catch  [|any|] @[L1541c4..L1541c8] goto L15424e;
  catch  [|java:io:IOException|] @[L1541c8..L1541cc] goto L1542da;
  catch  [|org:xml:sax:SAXException|] @[L1541c8..L1541cc] goto L154270;
  catch  [|any|] @[L1541c8..L1541cc] goto L15424e;
  catch  [|java:io:IOException|] @[L1541cc..L1541d2] goto L1542da;
  catch  [|org:xml:sax:SAXException|] @[L1541cc..L1541d2] goto L154274;
  catch  [|any|] @[L1541cc..L1541d2] goto L15424e;
  catch  [|java:io:IOException|] @[L1541d2..L1541d6] goto L1542da;
  catch  [|org:xml:sax:SAXException|] @[L1541d2..L1541d6] goto L154278;
  catch  [|any|] @[L1541d2..L1541d6] goto L15424e;
  catch  [|java:io:IOException|] @[L1541d6..L1541dc] goto L1542da;
  catch  [|org:xml:sax:SAXException|] @[L1541d6..L1541dc] goto L15427c;
  catch  [|any|] @[L1541d6..L1541dc] goto L15424e;
  catch  [|java:io:IOException|] @[L1541dc..L1541e0] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541dc..L1541e0] goto L154280;
  catch  [|any|] @[L1541dc..L1541e0] goto L15426a;
  catch  [|java:io:IOException|] @[L1541e0..L1541e4] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541e0..L1541e4] goto L154286;
  catch  [|any|] @[L1541e0..L1541e4] goto L15426a;
  catch  [|java:io:IOException|] @[L1541e4..L1541ea] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541e4..L1541ea] goto L15428c;
  catch  [|any|] @[L1541e4..L1541ea] goto L15426a;
  catch  [|java:io:IOException|] @[L1541ea..L1541f0] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541ea..L1541f0] goto L154292;
  catch  [|any|] @[L1541ea..L1541f0] goto L15426a;
  catch  [|java:io:IOException|] @[L1541f2..L1541f8] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541f2..L1541f8] goto L154298;
  catch  [|any|] @[L1541f2..L1541f8] goto L15426a;
  catch  [|java:io:IOException|] @[L1541fa..L1541fe] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541fa..L1541fe] goto L15429e;
  catch  [|any|] @[L1541fa..L1541fe] goto L15426a;
  catch  [|java:io:IOException|] @[L1541fe..L154204] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L1541fe..L154204] goto L1542a4;
  catch  [|any|] @[L1541fe..L154204] goto L15426a;
  catch  [|java:io:IOException|] @[L154206..L15420c] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154206..L15420c] goto L1542aa;
  catch  [|any|] @[L154206..L15420c] goto L15426a;
  catch  [|java:io:IOException|] @[L154214..L15421a] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154214..L15421a] goto L1542b0;
  catch  [|any|] @[L154214..L15421a] goto L15426a;
  catch  [|java:io:IOException|] @[L15421c..L154220] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L15421c..L154220] goto L1542b6;
  catch  [|any|] @[L15421c..L154220] goto L15426a;
  catch  [|java:io:IOException|] @[L154220..L154224] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154220..L154224] goto L1542bc;
  catch  [|any|] @[L154220..L154224] goto L15426a;
  catch  [|java:io:IOException|] @[L154224..L15422a] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154224..L15422a] goto L1542c2;
  catch  [|any|] @[L154224..L15422a] goto L15426a;
  catch  [|java:io:IOException|] @[L15422c..L154230] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L15422c..L154230] goto L1542c8;
  catch  [|any|] @[L15422c..L154230] goto L15426a;
  catch  [|java:io:IOException|] @[L154230..L154236] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154230..L154236] goto L1542ce;
  catch  [|any|] @[L154230..L154236] goto L15426a;
  catch  [|java:io:IOException|] @[L154238..L15423e] goto L1542de;
  catch  [|org:xml:sax:SAXException|] @[L154238..L15423e] goto L1542d4;
  catch  [|any|] @[L154238..L15423e] goto L15426a;

   }
    procedure [|org:w3c:dom:NodeList|] [|java:util:prefs:XMLParser.selectNodeList|] ([|org:w3c:dom:Element|] v13 @type (object), [|java:lang:String|] v14 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.selectNodeList:(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/NodeList;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L154444.   v12:= 1  @length 4;
#L154446.   v11:= 0  @length 4;
#L154448.   v7:= 0  @length 4;
#L15444a.   v2:= new [|java:util:ArrayList|];
#L15444e.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L154454.   v9:= "/" @type (object, string);
#L154458.   call temp:=  [|java:lang:String.split|](v14, v9) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L15445e.   v6:= temp  @type object;
#L154460.   call temp:=  [|org:w3c:dom:Element.getChildNodes|](v13) @signature [|Lorg/w3c/dom/Element;.getChildNodes:()Lorg/w3c/dom/NodeList;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L154466.   v0:= temp  @type object;
#L154468.   v9:= v6[v11]  @type object;
#L15446c.   v10:= "entry" @type (object, string);
#L154470.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L154476.   v9:= temp;
#L154478.   if v9 != 0 then goto L154490;
#L15447c.   v9:= v6[v11]  @type object;
#L154480.   v10:= "node" @type (object, string);
#L154484.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15448a.   v9:= temp;
#L15448c.   if v9 == 0 then goto L1544dc;
#L154490.   v1:= 0  @length 4;
#L154492.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v0) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154498.   v9:= temp;
#L15449a.   if v1 >= v9 then goto L15459e;
#L15449e.   call temp:=  [|org:w3c:dom:NodeList.item|](v0, v1) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L1544a4.   v4:= temp  @type object;
#L1544a6.   v9:= instanceof @varname v4 @type [|org:w3c:dom:Element|];
#L1544aa.   if v9 == 0 then goto L1544d6;
#L1544ae.   v9:= v4  @type object;
#L1544b0.   v9:= ([|org:w3c:dom:Element|])v9;
#L1544b4.   call temp:=  [|org:w3c:dom:Element.getNodeName|](v9) @signature [|Lorg/w3c/dom/Element;.getNodeName:()Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L1544ba.   v9:= temp  @type object;
#L1544bc.   v10:= v6[v11]  @type object;
#L1544c0.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1544c6.   v9:= temp;
#L1544c8.   if v9 == 0 then goto L1544d6;
#L1544cc.   v4:= ([|org:w3c:dom:Node|])v4;
#L1544d0.   call temp:=  [|java:util:ArrayList.add|](v2, v4) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1544d6.   v1:= v1 + 1;
#L1544da.   goto L154492;
#L1544dc.   v9:= v6[v11]  @type object;
#L1544e0.   v10:= "map" @type (object, string);
#L1544e4.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1544ea.   v9:= temp;
#L1544ec.   if v9 == 0 then goto L15459e;
#L1544f0.   v9:= v6[v12]  @type object;
#L1544f4.   v10:= "entry" @type (object, string);
#L1544f8.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1544fe.   v9:= temp;
#L154500.   if v9 == 0 then goto L15459e;
#L154504.   v1:= 0  @length 4;
#L154506.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v0) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L15450c.   v9:= temp;
#L15450e.   if v1 >= v9 then goto L15459e;
#L154512.   call temp:=  [|org:w3c:dom:NodeList.item|](v0, v1) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154518.   v4:= temp  @type object;
#L15451a.   v9:= instanceof @varname v4 @type [|org:w3c:dom:Element|];
#L15451e.   if v9 == 0 then goto L154598;
#L154522.   v9:= v4  @type object;
#L154524.   v9:= ([|org:w3c:dom:Element|])v9;
#L154528.   call temp:=  [|org:w3c:dom:Element.getNodeName|](v9) @signature [|Lorg/w3c/dom/Element;.getNodeName:()Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L15452e.   v9:= temp  @type object;
#L154530.   v10:= v6[v11]  @type object;
#L154534.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15453a.   v9:= temp;
#L15453c.   if v9 == 0 then goto L154598;
#L154540.   v4:= ([|org:w3c:dom:Node|])v4;
#L154544.   call temp:=  [|org:w3c:dom:Node.getChildNodes|](v4) @signature [|Lorg/w3c/dom/Node;.getChildNodes:()Lorg/w3c/dom/NodeList;|] @classDescriptor [|org:w3c:dom:Node|] @type interface;
#L15454a.   v5:= temp  @type object;
#L15454c.   v3:= 0  @length 4;
#L15454e.   call temp:=  [|org:w3c:dom:NodeList.getLength|](v5) @signature [|Lorg/w3c/dom/NodeList;.getLength:()I|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154554.   v9:= temp;
#L154556.   if v3 >= v9 then goto L154598;
#L15455a.   call temp:=  [|org:w3c:dom:NodeList.item|](v5, v3) @signature [|Lorg/w3c/dom/NodeList;.item:(I)Lorg/w3c/dom/Node;|] @classDescriptor [|org:w3c:dom:NodeList|] @type interface;
#L154560.   v8:= temp  @type object;
#L154562.   v9:= instanceof @varname v8 @type [|org:w3c:dom:Element|];
#L154566.   if v9 == 0 then goto L154592;
#L15456a.   v9:= v8  @type object;
#L15456c.   v9:= ([|org:w3c:dom:Element|])v9;
#L154570.   call temp:=  [|org:w3c:dom:Element.getNodeName|](v9) @signature [|Lorg/w3c/dom/Element;.getNodeName:()Ljava/lang/String;|] @classDescriptor [|org:w3c:dom:Element|] @type interface;
#L154576.   v9:= temp  @type object;
#L154578.   v10:= v6[v12]  @type object;
#L15457c.   call temp:=  [|java:lang:String.equals|](v9, v10) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L154582.   v9:= temp;
#L154584.   if v9 == 0 then goto L154592;
#L154588.   v8:= ([|org:w3c:dom:Node|])v8;
#L15458c.   call temp:=  [|java:util:ArrayList.add|](v2, v8) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L154592.   v3:= v3 + 1;
#L154596.   goto L15454e;
#L154598.   v1:= v1 + 1;
#L15459c.   goto L154506;
#L15459e.   v7:= new [|java:util:prefs:NodeSet|];
#L1545a2.   call temp:=  [|java:util:ArrayList.iterator|](v2) @signature [|Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1545a8.   v9:= temp  @type object;
#L1545aa.   call temp:=  [|java:util:prefs:NodeSet.<init>|](v7, v9) @signature [|Ljava/util/prefs/NodeSet;.<init>:(Ljava/util/Iterator;)V|] @classDescriptor [|java:util:prefs:NodeSet|] @type direct;
#L1545b0.   return v7  @type object;

   }
    procedure [|void|] [|java:util:prefs:XMLParser.writeXmlPreferences|] ([|java:io:File|] v11 @type (object), [|java:util:Properties|] v12 @type (object)) @owner [|java:util:prefs:XMLParser|] @signature [|Ljava/util/prefs/XMLParser;.writeXmlPreferences:(Ljava/io/File;Ljava/util/Properties;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L1545c4.   call temp:=  [|java:io:File.getParentFile|](v11) @signature [|Ljava/io/File;.getParentFile:()Ljava/io/File;|] @classDescriptor [|java:io:File|] @type virtual;
#L1545ca.   v5:= temp  @type object;
#L1545cc.   v6:= new [|java:io:File|];
#L1545d0.   v8:= new [|java:lang:StringBuilder|];
#L1545d4.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1545da.   v9:= "prefs-" @type (object, string);
#L1545de.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1545e4.   v8:= temp  @type object;
#L1545e6.   call temp:=  [|java:util:UUID.randomUUID|]() @signature [|Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;|] @classDescriptor [|java:util:UUID|] @type static;
#L1545ec.   v9:= temp  @type object;
#L1545ee.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1545f4.   v8:= temp  @type object;
#L1545f6.   v9:= ".xml.tmp" @type (object, string);
#L1545fa.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154600.   v8:= temp  @type object;
#L154602.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154608.   v8:= temp  @type object;
#L15460a.   call temp:=  [|java:io:File.<init>|](v6, v5, v8) @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L154610.   v3:= 0  @length 4;
#L154612.   v4:= new [|java:io:BufferedWriter|];
#L154616.   v8:= new [|java:io:OutputStreamWriter|];
#L15461a.   v9:= new [|java:io:FileOutputStream|];
#L15461e.   call temp:=  [|java:io:FileOutputStream.<init>|](v9, v6) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L154624.   v10:= "UTF-8" @type (object, string);
#L154628.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v8, v9, v10) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L15462e.   call temp:=  [|java:io:BufferedWriter.<init>|](v4, v8) @signature [|Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L154634.   v8:= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" @type (object, string);
#L154638.   call temp:=  [|java:io:BufferedWriter.write|](v4, v8) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L15463e.   call temp:=  [|java:io:BufferedWriter.newLine|](v4) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L154644.   v8:= "<!DOCTYPE map SYSTEM 'http://java.sun.com/dtd/preferences.dtd'>" @type (object, string);
#L154648.   call temp:=  [|java:io:BufferedWriter.write|](v4, v8) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L15464e.   call temp:=  [|java:io:BufferedWriter.newLine|](v4) @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L154654.   call temp:=  [|java:util:Properties.keySet|](v12) @signature [|Ljava/util/Properties;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L15465a.   v8:= temp  @type object;
#L15465c.   call temp:=  [|java:util:Properties.size|](v12) @signature [|Ljava/util/Properties;.size:()I|] @classDescriptor [|java:util:Properties|] @type virtual;
#L154662.   v9:= temp;
#L154664.   v9:= new [|java:lang:String|][v9];
#L154668.   call temp:=  [|java:util:Set.toArray|](v8, v9) @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L15466e.   v1:= temp  @type object;
#L154670.   v1:= ([|java:lang:String|][])v1;
#L154674.   v2:= v1.length;
#L154676.   v7:= new [|java:lang:String|][v2];
#L15467a.   v0:= 0  @length 4;
#L15467c.   if v0 >= v2 then goto L154696;
#L154680.   v8:= v1[v0]  @type object;
#L154684.   call temp:=  [|java:util:Properties.getProperty|](v12, v8) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L15468a.   v8:= temp  @type object;
#L15468c.   v7[v0]:= v8  @type object;
#L154690.   v0:= v0 + 1;
#L154694.   goto L15467c;
#L154696.   call temp:=  [|java:util:prefs:XMLParser.exportEntries|](v1, v7, v4) @signature [|Ljava/util/prefs/XMLParser;.exportEntries:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/BufferedWriter;)V|] @classDescriptor [|java:util:prefs:XMLParser|] @type static;
#L15469c.   call temp:=  [|java:io:BufferedWriter.close|](v4) @signature [|Ljava/io/BufferedWriter;.close:()V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L1546a2.   call temp:=  [|java:io:File.renameTo|](v6, v11) @signature [|Ljava/io/File;.renameTo:(Ljava/io/File;)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1546a8.   v8:= temp;
#L1546aa.   if v8 != 0 then goto L1546f2;
#L1546ae.   v8:= new [|java:io:IOException|];
#L1546b2.   v9:= new [|java:lang:StringBuilder|];
#L1546b6.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1546bc.   v10:= "Failed to write preferences to " @type (object, string);
#L1546c0.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1546c6.   v9:= temp  @type object;
#L1546c8.   call temp:=  [|java:lang:StringBuilder.append|](v9, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1546ce.   v9:= temp  @type object;
#L1546d0.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1546d6.   v9:= temp  @type object;
#L1546d8.   call temp:=  [|java:io:IOException.<init>|](v8, v9) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1546de.   throw v8;
#L1546e0.   v8:= Exception  @type object;
#L1546e2.   v3:= v4  @type object;
#L1546e4.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1546ea.   call temp:=  [|java:io:File.delete|](v6) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1546f0.   throw v8;
#L1546f2.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v4) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1546f8.   call temp:=  [|java:io:File.delete|](v6) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1546fe.   return @void ;
#L154700.   v8:= Exception  @type object;
#L154702.   goto L1546e4;
  catch  [|any|] @[L154612..L154634] goto L154700;
  catch  [|any|] @[L154634..L1546e0] goto L1546e0;

   }
record [|java:util:regex:MatchResult|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|java:util:regex:MatchResult.end|] () @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.end:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:regex:MatchResult.end|] ([|int|] v0) @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.end:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:regex:MatchResult.group|] () @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.group:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:regex:MatchResult.group|] ([|int|] v0) @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.group:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:regex:MatchResult.groupCount|] () @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.groupCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:regex:MatchResult.start|] () @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.start:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:regex:MatchResult.start|] ([|int|] v0) @owner [|java:util:regex:MatchResult|] @signature [|Ljava/util/regex/MatchResult;.start:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:regex:MatchResultImpl|]  @type class @AccessFlag  extends  [|java:util:regex:MatchResult|] {
      [|int|][] [|java:util:regex:MatchResultImpl.offsets|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:regex:MatchResultImpl.text|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:regex:MatchResultImpl.<init>|] ([|java:util:regex:MatchResultImpl|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|][] v3) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.<init>:(Ljava/lang/String;[I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L15472c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L154732.   v1.[|java:util:regex:MatchResultImpl.text|]  := v2 @type object;
#L154736.   call temp:=  [|int[].clone|](v3) @signature [|[I.clone:()Ljava/lang/Object;|] @classDescriptor [|int[]|] @type virtual;
#L15473c.   v0:= temp  @type object;
#L15473e.   v0:= ([|int|][])v0;
#L154742.   v1.[|java:util:regex:MatchResultImpl.offsets|]  := v0 @type object;
#L154746.   return @void ;

   }
    procedure [|int|] [|java:util:regex:MatchResultImpl.end|] ([|java:util:regex:MatchResultImpl|] v1 @type (this)) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.end:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154758.   v0:= 0  @length 4;
#L15475a.   call temp:=  [|java:util:regex:MatchResultImpl.end|](v1, v0) @signature [|Ljava/util/regex/MatchResultImpl;.end:(I)I|] @classDescriptor [|java:util:regex:MatchResultImpl|] @type virtual;
#L154760.   v0:= temp;
#L154762.   return v0;

   }
    procedure [|int|] [|java:util:regex:MatchResultImpl.end|] ([|java:util:regex:MatchResultImpl|] v2 @type (this), [|int|] v3) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.end:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154774.   v0:= v2.[|java:util:regex:MatchResultImpl.offsets|]   @type object;
#L154778.   v1:= v3 * 2;
#L15477c.   v1:= v1 + 1;
#L154780.   v0:= v0[v1];
#L154784.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:regex:MatchResultImpl.group|] ([|java:util:regex:MatchResultImpl|] v3 @type (this)) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.group:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154798.   v0:= v3.[|java:util:regex:MatchResultImpl.text|]   @type object;
#L15479c.   call temp:=  [|java:util:regex:MatchResultImpl.start|](v3) @signature [|Ljava/util/regex/MatchResultImpl;.start:()I|] @classDescriptor [|java:util:regex:MatchResultImpl|] @type virtual;
#L1547a2.   v1:= temp;
#L1547a4.   call temp:=  [|java:util:regex:MatchResultImpl.end|](v3) @signature [|Ljava/util/regex/MatchResultImpl;.end:()I|] @classDescriptor [|java:util:regex:MatchResultImpl|] @type virtual;
#L1547aa.   v2:= temp;
#L1547ac.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1547b2.   v0:= temp  @type object;
#L1547b4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:MatchResultImpl.group|] ([|java:util:regex:MatchResultImpl|] v5 @type (this), [|int|] v6) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.group:(I)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1547c8.   v4:= -1  @length 4;
#L1547ca.   v2:= v5.[|java:util:regex:MatchResultImpl.offsets|]   @type object;
#L1547ce.   v3:= v6 * 2;
#L1547d2.   v0:= v2[v3];
#L1547d6.   v2:= v5.[|java:util:regex:MatchResultImpl.offsets|]   @type object;
#L1547da.   v3:= v6 * 2;
#L1547de.   v3:= v3 + 1;
#L1547e2.   v1:= v2[v3];
#L1547e6.   if v0 == v4 then goto L1547ee;
#L1547ea.   if v1 != v4 then goto L1547f2;
#L1547ee.   v2:= 0  @length 4;
#L1547f0.   return v2  @type object;
#L1547f2.   v2:= v5.[|java:util:regex:MatchResultImpl.text|]   @type object;
#L1547f6.   call temp:=  [|java:lang:String.substring|](v2, v0, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1547fc.   v2:= temp  @type object;
#L1547fe.   goto L1547f0;

   }
    procedure [|int|] [|java:util:regex:MatchResultImpl.groupCount|] ([|java:util:regex:MatchResultImpl|] v1 @type (this)) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.groupCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154810.   v0:= v1.[|java:util:regex:MatchResultImpl.offsets|]   @type object;
#L154814.   v0:= v0.length;
#L154816.   v0:= v0 / 2;
#L15481a.   v0:= v0 + -1;
#L15481e.   return v0;

   }
    procedure [|int|] [|java:util:regex:MatchResultImpl.start|] ([|java:util:regex:MatchResultImpl|] v1 @type (this)) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.start:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154830.   v0:= 0  @length 4;
#L154832.   call temp:=  [|java:util:regex:MatchResultImpl.start|](v1, v0) @signature [|Ljava/util/regex/MatchResultImpl;.start:(I)I|] @classDescriptor [|java:util:regex:MatchResultImpl|] @type virtual;
#L154838.   v0:= temp;
#L15483a.   return v0;

   }
    procedure [|int|] [|java:util:regex:MatchResultImpl.start|] ([|java:util:regex:MatchResultImpl|] v2 @type (this), [|int|] v3) @owner [|java:util:regex:MatchResultImpl|] @signature [|Ljava/util/regex/MatchResultImpl;.start:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15484c.   v0:= v2.[|java:util:regex:MatchResultImpl.offsets|]   @type object;
#L154850.   v1:= v3 * 2;
#L154854.   v0:= v0[v1];
#L154858.   return v0;

   }
record [|java:util:regex:Matcher|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:util:regex:MatchResult|] {
      [|int|] [|java:util:regex:Matcher.address|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:regex:Matcher.anchoringBounds|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:regex:Matcher.appendPos|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:regex:Matcher.input|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:regex:Matcher.matchFound|]    @AccessFlag PRIVATE;
      [|int|][] [|java:util:regex:Matcher.matchOffsets|]    @AccessFlag PRIVATE;
      [|java:util:regex:Pattern|] [|java:util:regex:Matcher.pattern|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:regex:Matcher.regionEnd|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:regex:Matcher.regionStart|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:regex:Matcher.transparentBounds|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:regex:Matcher.<init>|] ([|java:util:regex:Matcher|] v1 @type (this), [|java:util:regex:Pattern|] v2 @type (object), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.<init>:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L15486c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L154872.   v0:= 1  @length 4;
#L154874.   v1.[|java:util:regex:Matcher.anchoringBounds|]  := v0 @boolean;
#L154878.   call temp:=  [|java:util:regex:Matcher.usePattern|](v1, v2) @signature [|Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L15487e.   call temp:=  [|java:util:regex:Matcher.reset|](v1, v3) @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154884.   return @void ;

   }
    procedure [|void|] [|java:util:regex:Matcher.appendEvaluated|] ([|java:util:regex:Matcher|] v6 @type (this), [|java:lang:StringBuffer|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.appendEvaluated:(Ljava/lang/StringBuffer;Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L154898.   v2:= 0  @length 4;
#L15489a.   v1:= 0  @length 4;
#L15489c.   v3:= 0  @length 4;
#L15489e.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1548a4.   v4:= temp;
#L1548a6.   if v3 >= v4 then goto L15490c;
#L1548aa.   call temp:=  [|java:lang:String.charAt|](v8, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L1548b0.   v0:= temp;
#L1548b2.   v4:= 92  @length 16;
#L1548b6.   if v0 != v4 then goto L1548c6;
#L1548ba.   if v2 != 0 then goto L1548c6;
#L1548be.   v2:= 1  @length 4;
#L1548c0.   v3:= v3 + 1;
#L1548c4.   goto L15489e;
#L1548c6.   v4:= 36  @length 16;
#L1548ca.   if v0 != v4 then goto L1548d6;
#L1548ce.   if v2 != 0 then goto L1548d6;
#L1548d2.   v1:= 1  @length 4;
#L1548d4.   goto L1548c0;
#L1548d6.   v4:= 48  @length 16;
#L1548da.   if v0 < v4 then goto L154900;
#L1548de.   v4:= 57  @length 16;
#L1548e2.   if v0 > v4 then goto L154900;
#L1548e6.   if v1 == 0 then goto L154900;
#L1548ea.   v4:= v0 + -48;
#L1548ee.   call temp:=  [|java:util:regex:Matcher.group|](v6, v4) @signature [|Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L1548f4.   v4:= temp  @type object;
#L1548f6.   call temp:=  [|java:lang:StringBuffer.append|](v7, v4) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L1548fc.   v1:= 0  @length 4;
#L1548fe.   goto L1548c0;
#L154900.   call temp:=  [|java:lang:StringBuffer.append|](v7, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L154906.   v1:= 0  @length 4;
#L154908.   v2:= 0  @length 4;
#L15490a.   goto L1548c0;
#L15490c.   if v2 == 0 then goto L154924;
#L154910.   v4:= new [|java:lang:ArrayIndexOutOfBoundsException|];
#L154914.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15491a.   v5:= temp;
#L15491c.   call temp:=  [|java:lang:ArrayIndexOutOfBoundsException.<init>|](v4, v5) @signature [|Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(I)V|] @classDescriptor [|java:lang:ArrayIndexOutOfBoundsException|] @type direct;
#L154922.   throw v4;
#L154924.   return @void ;

   }
    procedure [|void|] [|java:util:regex:Matcher.closeImpl|] ([|int|] v0) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.closeImpl:(I)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:regex:Matcher.ensureMatch|] ([|java:util:regex:Matcher|] v2 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.ensureMatch:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L154938.   v0:= v2.[|java:util:regex:Matcher.matchFound|]   @boolean;
#L15493c.   if v0 != 0 then goto L154950;
#L154940.   v0:= new [|java:lang:IllegalStateException|];
#L154944.   v1:= "No successful match so far" @type (object, string);
#L154948.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15494e.   throw v0;
#L154950.   return @void ;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.findImpl|] ([|int|] v0, [|java:lang:String|] v1 @type (object), [|int|] v2, [|int|][] v3) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.findImpl:(ILjava/lang/String;I[I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:util:regex:Matcher.findNextImpl|] ([|int|] v0, [|java:lang:String|] v1 @type (object), [|int|][] v2) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.findNextImpl:(ILjava/lang/String;[I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:regex:Matcher.groupCountImpl|] ([|int|] v0) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.groupCountImpl:(I)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:util:regex:Matcher.hitEndImpl|] ([|int|] v0) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.hitEndImpl:(I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:util:regex:Matcher.lookingAtImpl|] ([|int|] v0, [|java:lang:String|] v1 @type (object), [|int|][] v2) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.lookingAtImpl:(ILjava/lang/String;[I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:util:regex:Matcher.matchesImpl|] ([|int|] v0, [|java:lang:String|] v1 @type (object), [|int|][] v2) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.matchesImpl:(ILjava/lang/String;[I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:regex:Matcher.openImpl|] ([|int|] v0) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.openImpl:(I)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:regex:Matcher.quoteReplacement|] ([|java:lang:String|] v5 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.quoteReplacement:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L154964.   v4:= 92  @length 16;
#L154968.   v2:= new [|java:lang:StringBuilder|];
#L15496c.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154972.   v3:= temp;
#L154974.   call temp:=  [|java:lang:StringBuilder.<init>|](v2, v3) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15497a.   v1:= 0  @length 4;
#L15497c.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154982.   v3:= temp;
#L154984.   if v1 >= v3 then goto L1549ae;
#L154988.   call temp:=  [|java:lang:String.charAt|](v5, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L15498e.   v0:= temp;
#L154990.   if v0 == v4 then goto L15499c;
#L154994.   v3:= 36  @length 16;
#L154998.   if v0 != v3 then goto L1549a2;
#L15499c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1549a2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1549a8.   v1:= v1 + 1;
#L1549ac.   goto L15497c;
#L1549ae.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1549b4.   v3:= temp  @type object;
#L1549b6.   return v3  @type object;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.requireEndImpl|] ([|int|] v0) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.requireEndImpl:(I)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.reset|] ([|java:util:regex:Matcher|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;II)Ljava/util/regex/Matcher;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1549c8.   v1:= 0  @length 4;
#L1549ca.   if v3 != 0 then goto L1549da;
#L1549ce.   v0:= new [|java:lang:IllegalArgumentException|];
#L1549d2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1549d8.   throw v0;
#L1549da.   if v4 < 0 then goto L1549fe;
#L1549de.   if v5 < 0 then goto L1549fe;
#L1549e2.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L1549e8.   v0:= temp;
#L1549ea.   if v4 > v0 then goto L1549fe;
#L1549ee.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L1549f4.   v0:= temp;
#L1549f6.   if v5 > v0 then goto L1549fe;
#L1549fa.   if v4 <= v5 then goto L154a0a;
#L1549fe.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L154a02.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L154a08.   throw v0;
#L154a0a.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L154a10.   v0:= temp  @type object;
#L154a12.   v2.[|java:util:regex:Matcher.input|]  := v0 @type object;
#L154a16.   v2.[|java:util:regex:Matcher.regionStart|]  := v4;
#L154a1a.   v2.[|java:util:regex:Matcher.regionEnd|]  := v5;
#L154a1e.   call temp:=  [|java:util:regex:Matcher.resetForInput|](v2) @signature [|Ljava/util/regex/Matcher;.resetForInput:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154a24.   v2.[|java:util:regex:Matcher.matchFound|]  := v1 @boolean;
#L154a28.   v2.[|java:util:regex:Matcher.appendPos|]  := v1;
#L154a2c.   return v2  @type object;

   }
    procedure [|void|] [|java:util:regex:Matcher.resetForInput|] ([|java:util:regex:Matcher|] v4 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.resetForInput:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L154a40.   v0:= v4.[|java:util:regex:Matcher.address|] ;
#L154a44.   v1:= v4.[|java:util:regex:Matcher.input|]   @type object;
#L154a48.   v2:= v4.[|java:util:regex:Matcher.regionStart|] ;
#L154a4c.   v3:= v4.[|java:util:regex:Matcher.regionEnd|] ;
#L154a50.   call temp:=  [|java:util:regex:Matcher.setInputImpl|](v0, v1, v2, v3) @signature [|Ljava/util/regex/Matcher;.setInputImpl:(ILjava/lang/String;II)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154a56.   v0:= v4.[|java:util:regex:Matcher.address|] ;
#L154a5a.   v1:= v4.[|java:util:regex:Matcher.anchoringBounds|]   @boolean;
#L154a5e.   call temp:=  [|java:util:regex:Matcher.useAnchoringBoundsImpl|](v0, v1) @signature [|Ljava/util/regex/Matcher;.useAnchoringBoundsImpl:(IZ)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154a64.   v0:= v4.[|java:util:regex:Matcher.address|] ;
#L154a68.   v1:= v4.[|java:util:regex:Matcher.transparentBounds|]   @boolean;
#L154a6c.   call temp:=  [|java:util:regex:Matcher.useTransparentBoundsImpl|](v0, v1) @signature [|Ljava/util/regex/Matcher;.useTransparentBoundsImpl:(IZ)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154a72.   return @void ;

   }
    procedure [|void|] [|java:util:regex:Matcher.setInputImpl|] ([|int|] v0, [|java:lang:String|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.setInputImpl:(ILjava/lang/String;II)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:regex:Matcher.useAnchoringBoundsImpl|] ([|int|] v0, [|boolean|] v1) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.useAnchoringBoundsImpl:(IZ)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:regex:Matcher.useTransparentBoundsImpl|] ([|int|] v0, [|boolean|] v1) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.useTransparentBoundsImpl:(IZ)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.appendReplacement|] ([|java:util:regex:Matcher|] v3 @type (this), [|java:lang:StringBuffer|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.appendReplacement:(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154a84.   v0:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154a88.   v1:= v3.[|java:util:regex:Matcher.appendPos|] ;
#L154a8c.   call temp:=  [|java:util:regex:Matcher.start|](v3) @signature [|Ljava/util/regex/Matcher;.start:()I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154a92.   v2:= temp;
#L154a94.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L154a9a.   v0:= temp  @type object;
#L154a9c.   call temp:=  [|java:lang:StringBuffer.append|](v4, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L154aa2.   call temp:=  [|java:util:regex:Matcher.appendEvaluated|](v3, v4, v5) @signature [|Ljava/util/regex/Matcher;.appendEvaluated:(Ljava/lang/StringBuffer;Ljava/lang/String;)V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154aa8.   call temp:=  [|java:util:regex:Matcher.end|](v3) @signature [|Ljava/util/regex/Matcher;.end:()I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154aae.   v0:= temp;
#L154ab0.   v3.[|java:util:regex:Matcher.appendPos|]  := v0;
#L154ab4.   return v3  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:util:regex:Matcher.appendTail|] ([|java:util:regex:Matcher|] v3 @type (this), [|java:lang:StringBuffer|] v4 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.appendTail:(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154ac8.   v0:= v3.[|java:util:regex:Matcher.appendPos|] ;
#L154acc.   v1:= v3.[|java:util:regex:Matcher.regionEnd|] ;
#L154ad0.   if v0 >= v1 then goto L154aee;
#L154ad4.   v0:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154ad8.   v1:= v3.[|java:util:regex:Matcher.appendPos|] ;
#L154adc.   v2:= v3.[|java:util:regex:Matcher.regionEnd|] ;
#L154ae0.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L154ae6.   v0:= temp  @type object;
#L154ae8.   call temp:=  [|java:lang:StringBuffer.append|](v4, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L154aee.   return v4  @type object;

   }
    procedure [|int|] [|java:util:regex:Matcher.end|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.end:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154b00.   v0:= 0  @length 4;
#L154b02.   call temp:=  [|java:util:regex:Matcher.end|](v1, v0) @signature [|Ljava/util/regex/Matcher;.end:(I)I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154b08.   v0:= temp;
#L154b0a.   return v0;

   }
    procedure [|int|] [|java:util:regex:Matcher.end|] ([|java:util:regex:Matcher|] v2 @type (this), [|int|] v3) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.end:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154b1c.   call temp:=  [|java:util:regex:Matcher.ensureMatch|](v2) @signature [|Ljava/util/regex/Matcher;.ensureMatch:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154b22.   v0:= v2.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154b26.   v1:= v3 * 2;
#L154b2a.   v1:= v1 + 1;
#L154b2e.   v0:= v0[v1];
#L154b32.   return v0;

   }
    procedure [|void|] [|java:util:regex:Matcher.finalize|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L154b44.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L154b48.   call temp:=  [|java:util:regex:Matcher.closeImpl|](v0) @signature [|Ljava/util/regex/Matcher;.closeImpl:(I)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154b4e.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L154b54.   return @void ;
#L154b56.   v0:= Exception  @type object;
#L154b58.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L154b5e.   throw v0;
  catch  [|any|] @[L154b44..L154b4e] goto L154b56;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.find|] ([|java:util:regex:Matcher|] v3 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.find:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154b7c.   v0:= v3.[|java:util:regex:Matcher.address|] ;
#L154b80.   v1:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154b84.   v2:= v3.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154b88.   call temp:=  [|java:util:regex:Matcher.findNextImpl|](v0, v1, v2) @signature [|Ljava/util/regex/Matcher;.findNextImpl:(ILjava/lang/String;[I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154b8e.   v0:= temp;
#L154b90.   v3.[|java:util:regex:Matcher.matchFound|]  := v0 @boolean;
#L154b94.   v0:= v3.[|java:util:regex:Matcher.matchFound|]   @boolean;
#L154b98.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.find|] ([|java:util:regex:Matcher|] v3 @type (this), [|int|] v4) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.find:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154bac.   if v4 < 0 then goto L154bc0;
#L154bb0.   v0:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154bb4.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154bba.   v0:= temp;
#L154bbc.   if v4 <= v0 then goto L154c12;
#L154bc0.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L154bc4.   v1:= new [|java:lang:StringBuilder|];
#L154bc8.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L154bce.   v2:= "start=" @type (object, string);
#L154bd2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154bd8.   v1:= temp  @type object;
#L154bda.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154be0.   v1:= temp  @type object;
#L154be2.   v2:= "; length=" @type (object, string);
#L154be6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154bec.   v1:= temp  @type object;
#L154bee.   v2:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154bf2.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154bf8.   v2:= temp;
#L154bfa.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154c00.   v1:= temp  @type object;
#L154c02.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L154c08.   v1:= temp  @type object;
#L154c0a.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L154c10.   throw v0;
#L154c12.   v0:= v3.[|java:util:regex:Matcher.address|] ;
#L154c16.   v1:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154c1a.   v2:= v3.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154c1e.   call temp:=  [|java:util:regex:Matcher.findImpl|](v0, v1, v4, v2) @signature [|Ljava/util/regex/Matcher;.findImpl:(ILjava/lang/String;I[I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154c24.   v0:= temp;
#L154c26.   v3.[|java:util:regex:Matcher.matchFound|]  := v0 @boolean;
#L154c2a.   v0:= v3.[|java:util:regex:Matcher.matchFound|]   @boolean;
#L154c2e.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:regex:Matcher.group|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.group:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154c40.   v0:= 0  @length 4;
#L154c42.   call temp:=  [|java:util:regex:Matcher.group|](v1, v0) @signature [|Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154c48.   v0:= temp  @type object;
#L154c4a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:Matcher.group|] ([|java:util:regex:Matcher|] v5 @type (this), [|int|] v6) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L154c5c.   v4:= -1  @length 4;
#L154c5e.   call temp:=  [|java:util:regex:Matcher.ensureMatch|](v5) @signature [|Ljava/util/regex/Matcher;.ensureMatch:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154c64.   v2:= v5.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154c68.   v3:= v6 * 2;
#L154c6c.   v0:= v2[v3];
#L154c70.   v2:= v5.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154c74.   v3:= v6 * 2;
#L154c78.   v3:= v3 + 1;
#L154c7c.   v1:= v2[v3];
#L154c80.   if v0 == v4 then goto L154c88;
#L154c84.   if v1 != v4 then goto L154c8c;
#L154c88.   v2:= 0  @length 4;
#L154c8a.   return v2  @type object;
#L154c8c.   v2:= v5.[|java:util:regex:Matcher.input|]   @type object;
#L154c90.   call temp:=  [|java:lang:String.substring|](v2, v0, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L154c96.   v2:= temp  @type object;
#L154c98.   goto L154c8a;

   }
    procedure [|int|] [|java:util:regex:Matcher.groupCount|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.groupCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154cac.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L154cb0.   call temp:=  [|java:util:regex:Matcher.groupCountImpl|](v0) @signature [|Ljava/util/regex/Matcher;.groupCountImpl:(I)I|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154cb6.   v0:= temp;
#L154cb8.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.hasAnchoringBounds|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.hasAnchoringBounds:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154ccc.   v0:= v1.[|java:util:regex:Matcher.anchoringBounds|]   @boolean;
#L154cd0.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.hasTransparentBounds|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.hasTransparentBounds:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154ce4.   v0:= v1.[|java:util:regex:Matcher.transparentBounds|]   @boolean;
#L154ce8.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.hitEnd|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.hitEnd:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154cfc.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L154d00.   call temp:=  [|java:util:regex:Matcher.hitEndImpl|](v0) @signature [|Ljava/util/regex/Matcher;.hitEndImpl:(I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154d06.   v0:= temp;
#L154d08.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.lookingAt|] ([|java:util:regex:Matcher|] v3 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.lookingAt:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154d1c.   v0:= v3.[|java:util:regex:Matcher.address|] ;
#L154d20.   v1:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154d24.   v2:= v3.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154d28.   call temp:=  [|java:util:regex:Matcher.lookingAtImpl|](v0, v1, v2) @signature [|Ljava/util/regex/Matcher;.lookingAtImpl:(ILjava/lang/String;[I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154d2e.   v0:= temp;
#L154d30.   v3.[|java:util:regex:Matcher.matchFound|]  := v0 @boolean;
#L154d34.   v0:= v3.[|java:util:regex:Matcher.matchFound|]   @boolean;
#L154d38.   return v0;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.matches|] ([|java:util:regex:Matcher|] v3 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.matches:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154d4c.   v0:= v3.[|java:util:regex:Matcher.address|] ;
#L154d50.   v1:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154d54.   v2:= v3.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154d58.   call temp:=  [|java:util:regex:Matcher.matchesImpl|](v0, v1, v2) @signature [|Ljava/util/regex/Matcher;.matchesImpl:(ILjava/lang/String;[I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154d5e.   v0:= temp;
#L154d60.   v3.[|java:util:regex:Matcher.matchFound|]  := v0 @boolean;
#L154d64.   v0:= v3.[|java:util:regex:Matcher.matchFound|]   @boolean;
#L154d68.   return v0;

   }
    procedure [|java:util:regex:Pattern|] [|java:util:regex:Matcher.pattern|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.pattern:()Ljava/util/regex/Pattern;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154d7c.   v0:= v1.[|java:util:regex:Matcher.pattern|]   @type object;
#L154d80.   return v0  @type object;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.region|] ([|java:util:regex:Matcher|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154d94.   v0:= v1.[|java:util:regex:Matcher.input|]   @type object;
#L154d98.   call temp:=  [|java:util:regex:Matcher.reset|](v1, v0, v2, v3) @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;II)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154d9e.   v0:= temp  @type object;
#L154da0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:regex:Matcher.regionEnd|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.regionEnd:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154db4.   v0:= v1.[|java:util:regex:Matcher.regionEnd|] ;
#L154db8.   return v0;

   }
    procedure [|int|] [|java:util:regex:Matcher.regionStart|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.regionStart:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154dcc.   v0:= v1.[|java:util:regex:Matcher.regionStart|] ;
#L154dd0.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:regex:Matcher.replaceAll|] ([|java:util:regex:Matcher|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154de4.   call temp:=  [|java:util:regex:Matcher.reset|](v2) @signature [|Ljava/util/regex/Matcher;.reset:()Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154dea.   v0:= new [|java:lang:StringBuffer|];
#L154dee.   v1:= v2.[|java:util:regex:Matcher.input|]   @type object;
#L154df2.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154df8.   v1:= temp;
#L154dfa.   call temp:=  [|java:lang:StringBuffer.<init>|](v0, v1) @signature [|Ljava/lang/StringBuffer;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L154e00.   call temp:=  [|java:util:regex:Matcher.find|](v2) @signature [|Ljava/util/regex/Matcher;.find:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e06.   v1:= temp;
#L154e08.   if v1 == 0 then goto L154e14;
#L154e0c.   call temp:=  [|java:util:regex:Matcher.appendReplacement|](v2, v0, v3) @signature [|Ljava/util/regex/Matcher;.appendReplacement:(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e12.   goto L154e00;
#L154e14.   call temp:=  [|java:util:regex:Matcher.appendTail|](v2, v0) @signature [|Ljava/util/regex/Matcher;.appendTail:(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e1a.   v1:= temp  @type object;
#L154e1c.   call temp:=  [|java:lang:StringBuffer.toString|](v1) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L154e22.   v1:= temp  @type object;
#L154e24.   return v1  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:Matcher.replaceFirst|] ([|java:util:regex:Matcher|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154e38.   call temp:=  [|java:util:regex:Matcher.reset|](v2) @signature [|Ljava/util/regex/Matcher;.reset:()Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e3e.   v0:= new [|java:lang:StringBuffer|];
#L154e42.   v1:= v2.[|java:util:regex:Matcher.input|]   @type object;
#L154e46.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154e4c.   v1:= temp;
#L154e4e.   call temp:=  [|java:lang:StringBuffer.<init>|](v0, v1) @signature [|Ljava/lang/StringBuffer;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L154e54.   call temp:=  [|java:util:regex:Matcher.find|](v2) @signature [|Ljava/util/regex/Matcher;.find:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e5a.   v1:= temp;
#L154e5c.   if v1 == 0 then goto L154e66;
#L154e60.   call temp:=  [|java:util:regex:Matcher.appendReplacement|](v2, v0, v3) @signature [|Ljava/util/regex/Matcher;.appendReplacement:(Ljava/lang/StringBuffer;Ljava/lang/String;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e66.   call temp:=  [|java:util:regex:Matcher.appendTail|](v2, v0) @signature [|Ljava/util/regex/Matcher;.appendTail:(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154e6c.   v1:= temp  @type object;
#L154e6e.   call temp:=  [|java:lang:StringBuffer.toString|](v1) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L154e74.   v1:= temp  @type object;
#L154e76.   return v1  @type object;

   }
    procedure [|boolean|] [|java:util:regex:Matcher.requireEnd|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.requireEnd:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154e88.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L154e8c.   call temp:=  [|java:util:regex:Matcher.requireEndImpl|](v0) @signature [|Ljava/util/regex/Matcher;.requireEndImpl:(I)Z|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154e92.   v0:= temp;
#L154e94.   return v0;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.reset|] ([|java:util:regex:Matcher|] v3 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.reset:()Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154ea8.   v0:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154eac.   v1:= 0  @length 4;
#L154eae.   v2:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154eb2.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L154eb8.   v2:= temp;
#L154eba.   call temp:=  [|java:util:regex:Matcher.reset|](v3, v0, v1, v2) @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;II)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154ec0.   v0:= temp  @type object;
#L154ec2.   return v0  @type object;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.reset|] ([|java:util:regex:Matcher|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154ed4.   v0:= 0  @length 4;
#L154ed6.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L154edc.   v1:= temp;
#L154ede.   call temp:=  [|java:util:regex:Matcher.reset|](v2, v3, v0, v1) @signature [|Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;II)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154ee4.   v0:= temp  @type object;
#L154ee6.   return v0  @type object;

   }
    procedure [|int|] [|java:util:regex:Matcher.start|] ([|java:util:regex:Matcher|] v1 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.start:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154ef8.   v0:= 0  @length 4;
#L154efa.   call temp:=  [|java:util:regex:Matcher.start|](v1, v0) @signature [|Ljava/util/regex/Matcher;.start:(I)I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154f00.   v0:= temp;
#L154f02.   return v0;

   }
    procedure [|int|] [|java:util:regex:Matcher.start|] ([|java:util:regex:Matcher|] v2 @type (this), [|int|] v3) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.start:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154f14.   call temp:=  [|java:util:regex:Matcher.ensureMatch|](v2) @signature [|Ljava/util/regex/Matcher;.ensureMatch:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154f1a.   v0:= v2.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154f1e.   v1:= v3 * 2;
#L154f22.   v0:= v0[v1];
#L154f26.   return v0;

   }
    procedure [|java:util:regex:MatchResult|] [|java:util:regex:Matcher.toMatchResult|] ([|java:util:regex:Matcher|] v3 @type (this)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.toMatchResult:()Ljava/util/regex/MatchResult;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L154f38.   call temp:=  [|java:util:regex:Matcher.ensureMatch|](v3) @signature [|Ljava/util/regex/Matcher;.ensureMatch:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154f3e.   v0:= new [|java:util:regex:MatchResultImpl|];
#L154f42.   v1:= v3.[|java:util:regex:Matcher.input|]   @type object;
#L154f46.   v2:= v3.[|java:util:regex:Matcher.matchOffsets|]   @type object;
#L154f4a.   call temp:=  [|java:util:regex:MatchResultImpl.<init>|](v0, v1, v2) @signature [|Ljava/util/regex/MatchResultImpl;.<init>:(Ljava/lang/String;[I)V|] @classDescriptor [|java:util:regex:MatchResultImpl|] @type direct;
#L154f50.   return v0  @type object;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.useAnchoringBounds|] ([|java:util:regex:Matcher|] v1 @type (this), [|boolean|] v2) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154f64.   v1.[|java:util:regex:Matcher.anchoringBounds|]  := v2 @boolean;
#L154f68.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L154f6c.   call temp:=  [|java:util:regex:Matcher.useAnchoringBoundsImpl|](v0, v2) @signature [|Ljava/util/regex/Matcher;.useAnchoringBoundsImpl:(IZ)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154f72.   return v1  @type object;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.usePattern|] ([|java:util:regex:Matcher|] v2 @type (this), [|java:util:regex:Pattern|] v3 @type (object)) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L154f84.   v1:= 0  @length 4;
#L154f86.   if v3 != 0 then goto L154f96;
#L154f8a.   v0:= new [|java:lang:IllegalArgumentException|];
#L154f8e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L154f94.   throw v0;
#L154f96.   v2.[|java:util:regex:Matcher.pattern|]  := v3 @type object;
#L154f9a.   v0:= v2.[|java:util:regex:Matcher.address|] ;
#L154f9e.   if v0 == 0 then goto L154fb0;
#L154fa2.   v0:= v2.[|java:util:regex:Matcher.address|] ;
#L154fa6.   call temp:=  [|java:util:regex:Matcher.closeImpl|](v0) @signature [|Ljava/util/regex/Matcher;.closeImpl:(I)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154fac.   v2.[|java:util:regex:Matcher.address|]  := v1;
#L154fb0.   v0:= v3.[|java:util:regex:Pattern.address|] ;
#L154fb4.   call temp:=  [|java:util:regex:Matcher.openImpl|](v0) @signature [|Ljava/util/regex/Matcher;.openImpl:(I)I|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L154fba.   v0:= temp;
#L154fbc.   v2.[|java:util:regex:Matcher.address|]  := v0;
#L154fc0.   v0:= v2.[|java:util:regex:Matcher.input|]   @type object;
#L154fc4.   if v0 == 0 then goto L154fce;
#L154fc8.   call temp:=  [|java:util:regex:Matcher.resetForInput|](v2) @signature [|Ljava/util/regex/Matcher;.resetForInput:()V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L154fce.   call temp:=  [|java:util:regex:Matcher.groupCount|](v2) @signature [|Ljava/util/regex/Matcher;.groupCount:()I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L154fd4.   v0:= temp;
#L154fd6.   v0:= v0 + 1;
#L154fda.   v0:= v0 * 2;
#L154fde.   v0:= new [|int|][v0];
#L154fe2.   v2.[|java:util:regex:Matcher.matchOffsets|]  := v0 @type object;
#L154fe6.   v2.[|java:util:regex:Matcher.matchFound|]  := v1 @boolean;
#L154fea.   return v2  @type object;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Matcher.useTransparentBounds|] ([|java:util:regex:Matcher|] v1 @type (this), [|boolean|] v2) @owner [|java:util:regex:Matcher|] @signature [|Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L154ffc.   v1.[|java:util:regex:Matcher.transparentBounds|]  := v2 @boolean;
#L155000.   v0:= v1.[|java:util:regex:Matcher.address|] ;
#L155004.   call temp:=  [|java:util:regex:Matcher.useTransparentBoundsImpl|](v0, v2) @signature [|Ljava/util/regex/Matcher;.useTransparentBoundsImpl:(IZ)V|] @classDescriptor [|java:util:regex:Matcher|] @type static;
#L15500a.   return v1  @type object;

   }
record [|java:util:regex:Pattern|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:io:Serializable|] {
      [|int|] [|java:util:regex:Pattern.address|]    @AccessFlag TRANSIENT;
      [|int|] [|java:util:regex:Pattern.flags|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:util:regex:Pattern.pattern|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:util:regex:Pattern.CANON_EQ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.CASE_INSENSITIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.COMMENTS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.DOTALL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.LITERAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.MULTILINE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.UNICODE_CASE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:regex:Pattern.UNIX_LINES|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:util:regex:Pattern.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:regex:Pattern.<init>|] ([|java:util:regex:Pattern|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15501c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L155022.   v0:= v4 ^& 128;
#L155026.   if v0 == 0 then goto L15503a;
#L15502a.   v0:= new [|java:lang:UnsupportedOperationException|];
#L15502e.   v1:= "CANON_EQ flag not supported" @type (object, string);
#L155032.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L155038.   throw v0;
#L15503a.   v2.[|java:util:regex:Pattern.pattern|]  := v3 @type object;
#L15503e.   v2.[|java:util:regex:Pattern.flags|]  := v4;
#L155042.   call temp:=  [|java:util:regex:Pattern.compile|](v2) @signature [|Ljava/util/regex/Pattern;.compile:()V|] @classDescriptor [|java:util:regex:Pattern|] @type direct;
#L155048.   return @void ;

   }
    procedure [|void|] [|java:util:regex:Pattern.closeImpl|] ([|int|] v0) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.closeImpl:(I)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:util:regex:Pattern|] [|java:util:regex:Pattern.compile|] ([|java:lang:String|] v2 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L15505c.   v0:= new [|java:util:regex:Pattern|];
#L155060.   v1:= 0  @length 4;
#L155062.   call temp:=  [|java:util:regex:Pattern.<init>|](v0, v2, v1) @signature [|Ljava/util/regex/Pattern;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:regex:Pattern|] @type direct;
#L155068.   return v0  @type object;

   }
    procedure [|java:util:regex:Pattern|] [|java:util:regex:Pattern.compile|] ([|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L15507c.   v0:= new [|java:util:regex:Pattern|];
#L155080.   call temp:=  [|java:util:regex:Pattern.<init>|](v0, v1, v2) @signature [|Ljava/util/regex/Pattern;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:regex:Pattern|] @type direct;
#L155086.   return v0  @type object;

   }
    procedure [|void|] [|java:util:regex:Pattern.compile|] ([|java:util:regex:Pattern|] v4 @type (this)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.compile:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L155098.   v2:= v4.[|java:util:regex:Pattern.pattern|]   @type object;
#L15509c.   if v2 != 0 then goto L1550b0;
#L1550a0.   v2:= new [|java:lang:NullPointerException|];
#L1550a4.   v3:= "pattern == null" @type (object, string);
#L1550a8.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1550ae.   throw v2;
#L1550b0.   v1:= v4.[|java:util:regex:Pattern.pattern|]   @type object;
#L1550b4.   v2:= v4.[|java:util:regex:Pattern.flags|] ;
#L1550b8.   v2:= v2 ^& 16;
#L1550bc.   if v2 == 0 then goto L1550cc;
#L1550c0.   v2:= v4.[|java:util:regex:Pattern.pattern|]   @type object;
#L1550c4.   call temp:=  [|java:util:regex:Pattern.quote|](v2) @signature [|Ljava/util/regex/Pattern;.quote:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L1550ca.   v1:= temp  @type object;
#L1550cc.   v2:= v4.[|java:util:regex:Pattern.flags|] ;
#L1550d0.   v0:= v2 ^& 47;
#L1550d4.   call temp:=  [|java:util:regex:Pattern.compileImpl|](v1, v0) @signature [|Ljava/util/regex/Pattern;.compileImpl:(Ljava/lang/String;I)I|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L1550da.   v2:= temp;
#L1550dc.   v4.[|java:util:regex:Pattern.address|]  := v2;
#L1550e0.   return @void ;

   }
    procedure [|int|] [|java:util:regex:Pattern.compileImpl|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.compileImpl:(Ljava/lang/String;I)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:util:regex:Pattern.matches|] ([|java:lang:String|] v3 @type (object), [|java:lang:CharSequence|] v4 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1550f4.   v0:= new [|java:util:regex:Matcher|];
#L1550f8.   v1:= new [|java:util:regex:Pattern|];
#L1550fc.   v2:= 0  @length 4;
#L1550fe.   call temp:=  [|java:util:regex:Pattern.<init>|](v1, v3, v2) @signature [|Ljava/util/regex/Pattern;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:regex:Pattern|] @type direct;
#L155104.   call temp:=  [|java:util:regex:Matcher.<init>|](v0, v1, v4) @signature [|Ljava/util/regex/Matcher;.<init>:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L15510a.   call temp:=  [|java:util:regex:Matcher.matches|](v0) @signature [|Ljava/util/regex/Matcher;.matches:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L155110.   v0:= temp;
#L155112.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:regex:Pattern.quote|] ([|java:lang:String|] v5 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.quote:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L155124.   v2:= new [|java:lang:StringBuilder|];
#L155128.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15512e.   v3:= "\\Q" @type (object, string);
#L155132.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155138.   v0:= 0  @length 4;
#L15513a.   v3:= "\\E" @type (object, string);
#L15513e.   call temp:=  [|java:lang:String.indexOf|](v5, v3, v0) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L155144.   v1:= temp;
#L155146.   if v1 < 0 then goto L15516e;
#L15514a.   v3:= v1 + 2;
#L15514e.   call temp:=  [|java:lang:String.substring|](v5, v0, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L155154.   v3:= temp  @type object;
#L155156.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15515c.   v3:= temp  @type object;
#L15515e.   v4:= "\\\\E\\Q" @type (object, string);
#L155162.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155168.   v0:= v1 + 2;
#L15516c.   goto L15513a;
#L15516e.   call temp:=  [|java:lang:String.substring|](v5, v0) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L155174.   v3:= temp  @type object;
#L155176.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15517c.   v3:= temp  @type object;
#L15517e.   v4:= "\\E" @type (object, string);
#L155182.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155188.   v3:= temp  @type object;
#L15518a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155190.   v3:= temp  @type object;
#L155192.   return v3  @type object;

   }
    procedure [|void|] [|java:util:regex:Pattern.readObject|] ([|java:util:regex:Pattern|] v0 @type (this), [|java:io:ObjectInputStream|] v1 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
      
#L1551a4.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v1) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1551aa.   call temp:=  [|java:util:regex:Pattern.compile|](v0) @signature [|Ljava/util/regex/Pattern;.compile:()V|] @classDescriptor [|java:util:regex:Pattern|] @type direct;
#L1551b0.   return @void ;

   }
    procedure [|void|] [|java:util:regex:Pattern.finalize|] ([|java:util:regex:Pattern|] v1 @type (this)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1551c4.   v0:= v1.[|java:util:regex:Pattern.address|] ;
#L1551c8.   call temp:=  [|java:util:regex:Pattern.closeImpl|](v0) @signature [|Ljava/util/regex/Pattern;.closeImpl:(I)V|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L1551ce.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1551d4.   return @void ;
#L1551d6.   v0:= Exception  @type object;
#L1551d8.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1551de.   throw v0;
  catch  [|any|] @[L1551c4..L1551ce] goto L1551d6;

   }
    procedure [|int|] [|java:util:regex:Pattern.flags|] ([|java:util:regex:Pattern|] v1 @type (this)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.flags:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1551fc.   v0:= v1.[|java:util:regex:Pattern.flags|] ;
#L155200.   return v0;

   }
    procedure [|java:util:regex:Matcher|] [|java:util:regex:Pattern.matcher|] ([|java:util:regex:Pattern|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L155214.   v0:= new [|java:util:regex:Matcher|];
#L155218.   call temp:=  [|java:util:regex:Matcher.<init>|](v0, v1, v2) @signature [|Ljava/util/regex/Matcher;.<init>:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L15521e.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:Pattern.pattern|] ([|java:util:regex:Pattern|] v1 @type (this)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L155230.   v0:= v1.[|java:util:regex:Pattern.pattern|]   @type object;
#L155234.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:util:regex:Pattern.split|] ([|java:util:regex:Pattern|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L155248.   v0:= 0  @length 4;
#L15524a.   call temp:=  [|java:util:regex:Pattern.split|](v1, v2, v0) @signature [|Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;I)[Ljava/lang/String;|] @classDescriptor [|java:util:regex:Pattern|] @type virtual;
#L155250.   v0:= temp  @type object;
#L155252.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:util:regex:Pattern.split|] ([|java:util:regex:Pattern|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object), [|int|] v4) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;I)[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155264.   v0:= v2.[|java:util:regex:Pattern.pattern|]   @type object;
#L155268.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L15526e.   v1:= temp  @type object;
#L155270.   call temp:=  [|java:util:regex:Splitter.split|](v2, v0, v1, v4) @signature [|Ljava/util/regex/Splitter;.split:(Ljava/util/regex/Pattern;Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;|] @classDescriptor [|java:util:regex:Splitter|] @type static;
#L155276.   v0:= temp  @type object;
#L155278.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:Pattern.toString|] ([|java:util:regex:Pattern|] v1 @type (this)) @owner [|java:util:regex:Pattern|] @signature [|Ljava/util/regex/Pattern;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15528c.   v0:= v1.[|java:util:regex:Pattern.pattern|]   @type object;
#L155290.   return v0  @type object;

   }
record [|java:util:regex:PatternSyntaxException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalArgumentException|] {
      [|java:lang:String|] [|java:util:regex:PatternSyntaxException.desc|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:regex:PatternSyntaxException.index|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:util:regex:PatternSyntaxException.pattern|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:util:regex:PatternSyntaxException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:regex:PatternSyntaxException.<init>|] ([|java:util:regex:PatternSyntaxException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:util:regex:PatternSyntaxException|] @signature [|Ljava/util/regex/PatternSyntaxException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1552a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1552aa.   v0:= -1  @length 4;
#L1552ac.   v1.[|java:util:regex:PatternSyntaxException.index|]  := v0;
#L1552b0.   v1.[|java:util:regex:PatternSyntaxException.desc|]  := v2 @type object;
#L1552b4.   v1.[|java:util:regex:PatternSyntaxException.pattern|]  := v3 @type object;
#L1552b8.   v1.[|java:util:regex:PatternSyntaxException.index|]  := v4;
#L1552bc.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:regex:PatternSyntaxException.getDescription|] ([|java:util:regex:PatternSyntaxException|] v1 @type (this)) @owner [|java:util:regex:PatternSyntaxException|] @signature [|Ljava/util/regex/PatternSyntaxException;.getDescription:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1552d0.   v0:= v1.[|java:util:regex:PatternSyntaxException.desc|]   @type object;
#L1552d4.   return v0  @type object;

   }
    procedure [|int|] [|java:util:regex:PatternSyntaxException.getIndex|] ([|java:util:regex:PatternSyntaxException|] v1 @type (this)) @owner [|java:util:regex:PatternSyntaxException|] @signature [|Ljava/util/regex/PatternSyntaxException;.getIndex:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1552e8.   v0:= v1.[|java:util:regex:PatternSyntaxException.index|] ;
#L1552ec.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:regex:PatternSyntaxException.getMessage|] ([|java:util:regex:PatternSyntaxException|] v5 @type (this)) @owner [|java:util:regex:PatternSyntaxException|] @signature [|Ljava/util/regex/PatternSyntaxException;.getMessage:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L155300.   v4:= 32  @length 16;
#L155304.   v3:= 10  @length 16;
#L155308.   v0:= new [|java:lang:StringBuilder|];
#L15530c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L155312.   v2:= v5.[|java:util:regex:PatternSyntaxException.desc|]   @type object;
#L155316.   if v2 == 0 then goto L155324;
#L15531a.   v2:= v5.[|java:util:regex:PatternSyntaxException.desc|]   @type object;
#L15531e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155324.   v2:= v5.[|java:util:regex:PatternSyntaxException.index|] ;
#L155328.   if v2 < 0 then goto L155358;
#L15532c.   v2:= v5.[|java:util:regex:PatternSyntaxException.desc|]   @type object;
#L155330.   if v2 == 0 then goto L15533a;
#L155334.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15533a.   v2:= "near index " @type (object, string);
#L15533e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155344.   v2:= v5.[|java:util:regex:PatternSyntaxException.index|] ;
#L155348.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15534e.   v2:= 58  @length 16;
#L155352.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155358.   v2:= v5.[|java:util:regex:PatternSyntaxException.pattern|]   @type object;
#L15535c.   if v2 == 0 then goto L15539c;
#L155360.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155366.   v2:= v5.[|java:util:regex:PatternSyntaxException.pattern|]   @type object;
#L15536a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155370.   v2:= v5.[|java:util:regex:PatternSyntaxException.index|] ;
#L155374.   if v2 < 0 then goto L15539c;
#L155378.   v2:= v5.[|java:util:regex:PatternSyntaxException.index|] ;
#L15537c.   v1:= new [|char|][v2];
#L155380.   call temp:=  [|java:util:Arrays.fill|](v1, v4) @signature [|Ljava/util/Arrays;.fill:([CC)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L155386.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15538c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155392.   v2:= 94  @length 16;
#L155396.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15539c.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1553a2.   v2:= temp  @type object;
#L1553a4.   return v2  @type object;

   }
    procedure [|java:lang:String|] [|java:util:regex:PatternSyntaxException.getPattern|] ([|java:util:regex:PatternSyntaxException|] v1 @type (this)) @owner [|java:util:regex:PatternSyntaxException|] @signature [|Ljava/util/regex/PatternSyntaxException;.getPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1553b8.   v0:= v1.[|java:util:regex:PatternSyntaxException.pattern|]   @type object;
#L1553bc.   return v0  @type object;

   }
record [|java:util:regex:Splitter|]  @type class @AccessFlag PUBLIC  {
   }
      global [|java:lang:String|] @@[|java:util:regex:Splitter.METACHARACTERS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:regex:Splitter.<init>|] ([|java:util:regex:Splitter|] v0 @type (this)) @owner [|java:util:regex:Splitter|] @signature [|Ljava/util/regex/Splitter;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1553d0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1553d6.   return @void ;

   }
    procedure [|java:lang:String|][] [|java:util:regex:Splitter.fastSplit|] ([|java:lang:String|] v11 @type (object), [|java:lang:String|] v12 @type (object), [|int|] v13) @owner [|java:util:regex:Splitter|] @signature [|Ljava/util/regex/Splitter;.fastSplit:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L1553e8.   v10:= 0  @length 4;
#L1553ea.   v6:= 0  @length 4;
#L1553ec.   v9:= 1  @length 4;
#L1553ee.   v8:= -1  @length 4;
#L1553f0.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1553f6.   v3:= temp;
#L1553f8.   if v3 != 0 then goto L1553fe;
#L1553fc.   return v6  @type object;
#L1553fe.   call temp:=  [|java:lang:String.charAt|](v11, v10) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L155404.   v1:= temp;
#L155406.   if v3 != v9 then goto L155434;
#L15540a.   v7:= "\\?*+[](){}^$.|" @type (object, string);
#L15540e.   call temp:=  [|java:lang:String.indexOf|](v7, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L155414.   v7:= temp;
#L155416.   if v7 != v8 then goto L155434;
#L15541a.   call temp:=  [|java:lang:String.isEmpty|](v12) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L155420.   v6:= temp;
#L155422.   if v6 == 0 then goto L15545c;
#L155426.   v6:= new [|java:lang:String|][v9];
#L15542a.   v7:= "" @type (object, string);
#L15542e.   v6[v10]:= v7  @type object;
#L155432.   goto L1553fc;
#L155434.   v7:= 2  @length 4;
#L155436.   if v3 != v7 then goto L1553fc;
#L15543a.   v7:= 92  @length 16;
#L15543e.   if v1 != v7 then goto L1553fc;
#L155442.   call temp:=  [|java:lang:String.charAt|](v11, v9) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L155448.   v1:= temp;
#L15544a.   v7:= "\\?*+[](){}^$.|" @type (object, string);
#L15544e.   call temp:=  [|java:lang:String.indexOf|](v7, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L155454.   v7:= temp;
#L155456.   if v7 != v8 then goto L15541a;
#L15545a.   goto L1553fc;
#L15545c.   v4:= new [|java:util:ArrayList|];
#L155460.   call temp:=  [|java:util:ArrayList.<init>|](v4) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L155466.   if v13 > 0 then goto L1554a2;
#L15546a.    v5:= nan;
#L155470.   v0:= 0  @length 4;
#L155472.   call temp:=  [|java:lang:String.indexOf|](v12, v1, v0) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L155478.   v2:= temp;
#L15547a.   if v2 == v8 then goto L1554a6;
#L15547e.   call temp:=  [|java:util:ArrayList.size|](v4) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L155484.   v6:= temp;
#L155486.   v6:= v6 + 1;
#L15548a.   if v6 >= v5 then goto L1554a6;
#L15548e.   call temp:=  [|java:lang:String.substring|](v12, v0, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L155494.   v6:= temp  @type object;
#L155496.   call temp:=  [|java:util:ArrayList.add|](v4, v6) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L15549c.   v0:= v2 + 1;
#L1554a0.   goto L155472;
#L1554a2.   v5:= v13;
#L1554a4.   goto L155470;
#L1554a6.   call temp:=  [|java:util:regex:Splitter.finishSplit|](v4, v12, v0, v5, v13) @signature [|Ljava/util/regex/Splitter;.finishSplit:(Ljava/util/List;Ljava/lang/String;III)[Ljava/lang/String;|] @classDescriptor [|java:util:regex:Splitter|] @type static;
#L1554ac.   v6:= temp  @type object;
#L1554ae.   goto L1553fc;

   }
    procedure [|java:lang:String|][] [|java:util:regex:Splitter.finishSplit|] ([|java:util:List|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|int|] v4, [|int|] v5, [|int|] v6) @owner [|java:util:regex:Splitter|] @signature [|Ljava/util/regex/Splitter;.finishSplit:(Ljava/util/List;Ljava/lang/String;III)[Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L1554c0.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1554c6.   v1:= temp;
#L1554c8.   if v4 >= v1 then goto L155512;
#L1554cc.   call temp:=  [|java:lang:String.substring|](v3, v4) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1554d2.   v1:= temp  @type object;
#L1554d4.   call temp:=  [|java:util:List.add|](v2, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L1554da.   if v6 != 0 then goto L155522;
#L1554de.   call temp:=  [|java:util:List.size|](v2) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L1554e4.   v1:= temp;
#L1554e6.   v0:= v1 + -1;
#L1554ea.   if v0 < 0 then goto L155522;
#L1554ee.   call temp:=  [|java:util:List.get|](v2, v0) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L1554f4.   v1:= temp  @type object;
#L1554f6.   v1:= ([|java:lang:String|])v1;
#L1554fa.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L155500.   v1:= temp;
#L155502.   if v1 == 0 then goto L155522;
#L155506.   call temp:=  [|java:util:List.remove|](v2, v0) @signature [|Ljava/util/List;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L15550c.   v0:= v0 + -1;
#L155510.   goto L1554ea;
#L155512.   if v6 == 0 then goto L1554da;
#L155516.   v1:= "" @type (object, string);
#L15551a.   call temp:=  [|java:util:List.add|](v2, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L155520.   goto L1554da;
#L155522.   call temp:=  [|java:util:List.size|](v2) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L155528.   v1:= temp;
#L15552a.   v1:= new [|java:lang:String|][v1];
#L15552e.   call temp:=  [|java:util:List.toArray|](v2, v1) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L155534.   v1:= temp  @type object;
#L155536.   v1:= ([|java:lang:String|][])v1;
#L15553a.   return v1  @type object;

   }
    procedure [|java:lang:String|][] [|java:util:regex:Splitter.split|] ([|java:util:regex:Pattern|] v7 @type (object), [|java:lang:String|] v8 @type (object), [|java:lang:String|] v9 @type (object), [|int|] v10) @owner [|java:util:regex:Splitter|] @signature [|Ljava/util/regex/Splitter;.split:(Ljava/util/regex/Pattern;Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15554c.   call temp:=  [|java:util:regex:Splitter.fastSplit|](v8, v9, v10) @signature [|Ljava/util/regex/Splitter;.fastSplit:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;|] @classDescriptor [|java:util:regex:Splitter|] @type static;
#L155552.   v1:= temp  @type object;
#L155554.   if v1 == 0 then goto L15555a;
#L155558.   return v1  @type object;
#L15555a.   call temp:=  [|java:lang:String.isEmpty|](v9) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L155560.   v5:= temp;
#L155562.   if v5 == 0 then goto L155578;
#L155566.   v5:= 1  @length 4;
#L155568.   v1:= new [|java:lang:String|][v5];
#L15556c.   v5:= 0  @length 4;
#L15556e.   v6:= "" @type (object, string);
#L155572.   v1[v5]:= v6  @type object;
#L155576.   goto L155558;
#L155578.   v2:= new [|java:util:ArrayList|];
#L15557c.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L155582.   if v10 > 0 then goto L1555d4;
#L155586.    v4:= nan;
#L15558c.   v3:= new [|java:util:regex:Matcher|];
#L155590.   call temp:=  [|java:util:regex:Matcher.<init>|](v3, v7, v9) @signature [|Ljava/util/regex/Matcher;.<init>:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V|] @classDescriptor [|java:util:regex:Matcher|] @type direct;
#L155596.   v0:= 0  @length 4;
#L155598.   call temp:=  [|java:util:regex:Matcher.find|](v3) @signature [|Ljava/util/regex/Matcher;.find:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L15559e.   v5:= temp;
#L1555a0.   if v5 == 0 then goto L1555d8;
#L1555a4.   call temp:=  [|java:util:ArrayList.size|](v2) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1555aa.   v5:= temp;
#L1555ac.   v5:= v5 + 1;
#L1555b0.   if v5 >= v4 then goto L1555d8;
#L1555b4.   call temp:=  [|java:util:regex:Matcher.start|](v3) @signature [|Ljava/util/regex/Matcher;.start:()I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L1555ba.   v5:= temp;
#L1555bc.   call temp:=  [|java:lang:String.substring|](v9, v0, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1555c2.   v5:= temp  @type object;
#L1555c4.   call temp:=  [|java:util:ArrayList.add|](v2, v5) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1555ca.   call temp:=  [|java:util:regex:Matcher.end|](v3) @signature [|Ljava/util/regex/Matcher;.end:()I|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L1555d0.   v0:= temp;
#L1555d2.   goto L155598;
#L1555d4.   v4:= v10;
#L1555d6.   goto L15558c;
#L1555d8.   call temp:=  [|java:util:regex:Splitter.finishSplit|](v2, v9, v0, v4, v10) @signature [|Ljava/util/regex/Splitter;.finishSplit:(Ljava/util/List;Ljava/lang/String;III)[Ljava/lang/String;|] @classDescriptor [|java:util:regex:Splitter|] @type static;
#L1555de.   v1:= temp  @type object;
#L1555e0.   goto L155558;

   }
record [|java:util:spi:CurrencyNameProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:util:spi:CurrencyNameProvider.<init>|] ([|java:util:spi:CurrencyNameProvider|] v0 @type (this)) @owner [|java:util:spi:CurrencyNameProvider|] @signature [|Ljava/util/spi/CurrencyNameProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1555f4.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L1555fa.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:spi:CurrencyNameProvider.getSymbol|] ([|java:lang:String|] v0 @type (object), [|java:util:Locale|] v1 @type (object)) @owner [|java:util:spi:CurrencyNameProvider|] @signature [|Ljava/util/spi/CurrencyNameProvider;.getSymbol:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:spi:LocaleNameProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:util:spi:LocaleNameProvider.<init>|] ([|java:util:spi:LocaleNameProvider|] v0 @type (this)) @owner [|java:util:spi:LocaleNameProvider|] @signature [|Ljava/util/spi/LocaleNameProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L15560c.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L155612.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:spi:LocaleNameProvider.getDisplayCountry|] ([|java:lang:String|] v0 @type (object), [|java:util:Locale|] v1 @type (object)) @owner [|java:util:spi:LocaleNameProvider|] @signature [|Ljava/util/spi/LocaleNameProvider;.getDisplayCountry:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:spi:LocaleNameProvider.getDisplayLanguage|] ([|java:lang:String|] v0 @type (object), [|java:util:Locale|] v1 @type (object)) @owner [|java:util:spi:LocaleNameProvider|] @signature [|Ljava/util/spi/LocaleNameProvider;.getDisplayLanguage:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:spi:LocaleNameProvider.getDisplayVariant|] ([|java:lang:String|] v0 @type (object), [|java:util:Locale|] v1 @type (object)) @owner [|java:util:spi:LocaleNameProvider|] @signature [|Ljava/util/spi/LocaleNameProvider;.getDisplayVariant:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:spi:TimeZoneNameProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:util:spi:TimeZoneNameProvider.<init>|] ([|java:util:spi:TimeZoneNameProvider|] v0 @type (this)) @owner [|java:util:spi:TimeZoneNameProvider|] @signature [|Ljava/util/spi/TimeZoneNameProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L155624.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L15562a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:spi:TimeZoneNameProvider.getDisplayName|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1, [|int|] v2, [|java:util:Locale|] v3 @type (object)) @owner [|java:util:spi:TimeZoneNameProvider|] @signature [|Ljava/util/spi/TimeZoneNameProvider;.getDisplayName:(Ljava/lang/String;ZILjava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:zip:Checksum|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|long|] [|java:util:zip:Checksum.getValue|] () @owner [|java:util:zip:Checksum|] @signature [|Ljava/util/zip/Checksum;.getValue:()J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:zip:Checksum.reset|] () @owner [|java:util:zip:Checksum|] @signature [|Ljava/util/zip/Checksum;.reset:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:zip:Checksum.update|] ([|int|] v0) @owner [|java:util:zip:Checksum|] @signature [|Ljava/util/zip/Checksum;.update:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:zip:Checksum.update|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:util:zip:Checksum|] @signature [|Ljava/util/zip/Checksum;.update:([BII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:zip:Adler32|]  @type class @AccessFlag PUBLIC extends  [|java:util:zip:Checksum|] {
      [|long|] [|java:util:zip:Adler32.adler|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:zip:Adler32.<init>|] ([|java:util:zip:Adler32|] v2 @type (this)) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15563c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L155642.   v0:= 1  @length wide16;
#L155646.   v2.[|java:util:zip:Adler32.adler|]  := v0 @wide;
#L15564a.   return @void ;

   }
    procedure [|long|] [|java:util:zip:Adler32.updateByteImpl|] ([|int|] v0, [|long|] v1) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.updateByteImpl:(IJ)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Adler32.updateImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.updateImpl:([BIIJ)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Adler32.getValue|] ([|java:util:zip:Adler32|] v2 @type (this)) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.getValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15565c.   v0:= v2.[|java:util:zip:Adler32.adler|]   @wide;
#L155660.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:zip:Adler32.reset|] ([|java:util:zip:Adler32|] v2 @type (this)) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155674.   v0:= 1  @length wide16;
#L155678.   v2.[|java:util:zip:Adler32.adler|]  := v0 @wide;
#L15567c.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Adler32.update|] ([|java:util:zip:Adler32|] v2 @type (this), [|int|] v3) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.update:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155690.   v0:= v2.[|java:util:zip:Adler32.adler|]   @wide;
#L155694.   call temp:=  [|java:util:zip:Adler32.updateByteImpl|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Adler32;.updateByteImpl:(IJ)J|] @classDescriptor [|java:util:zip:Adler32|] @type direct;
#L15569a.   v0:= temp  @type wide;
#L15569c.   v2.[|java:util:zip:Adler32.adler|]  := v0 @wide;
#L1556a0.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Adler32.update|] ([|java:util:zip:Adler32|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.update:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1556b4.   v0:= 0  @length 4;
#L1556b6.   v1:= v3.length;
#L1556b8.   call temp:=  [|java:util:zip:Adler32.update|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Adler32;.update:([BII)V|] @classDescriptor [|java:util:zip:Adler32|] @type virtual;
#L1556be.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Adler32.update|] ([|java:util:zip:Adler32|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:Adler32|] @signature [|Ljava/util/zip/Adler32;.update:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1556d0.   v0:= v7.length;
#L1556d2.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L1556d8.   v4:= v6.[|java:util:zip:Adler32.adler|]   @wide;
#L1556dc.   v0:= v6  @type object;
#L1556de.   v1:= v7  @type object;
#L1556e0.   v2:= v8;
#L1556e2.   v3:= v9;
#L1556e4.   call temp:=  [|java:util:zip:Adler32.updateImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Adler32;.updateImpl:([BIIJ)J|] @classDescriptor [|java:util:zip:Adler32|] @type direct;
#L1556ea.   v0:= temp  @type wide;
#L1556ec.   v6.[|java:util:zip:Adler32.adler|]  := v0 @wide;
#L1556f0.   return @void ;

   }
record [|java:util:zip:CRC32|]  @type class @AccessFlag PUBLIC extends  [|java:util:zip:Checksum|] {
      [|long|] [|java:util:zip:CRC32.crc|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:zip:CRC32.tbytes|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:zip:CRC32.<init>|] ([|java:util:zip:CRC32|] v2 @type (this)) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L155704.   v0:= 0  @length wide16;
#L155708.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15570e.   v2.[|java:util:zip:CRC32.crc|]  := v0 @wide;
#L155712.   v2.[|java:util:zip:CRC32.tbytes|]  := v0 @wide;
#L155716.   return @void ;

   }
    procedure [|long|] [|java:util:zip:CRC32.updateByteImpl|] ([|byte|] v0, [|long|] v1) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.updateByteImpl:(BJ)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:CRC32.updateImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.updateImpl:([BIIJ)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:CRC32.getValue|] ([|java:util:zip:CRC32|] v2 @type (this)) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155728.   v0:= v2.[|java:util:zip:CRC32.crc|]   @wide;
#L15572c.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:zip:CRC32.reset|] ([|java:util:zip:CRC32|] v2 @type (this)) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155740.   v0:= 0  @length wide16;
#L155744.   v2.[|java:util:zip:CRC32.crc|]  := v0 @wide;
#L155748.   v2.[|java:util:zip:CRC32.tbytes|]  := v0 @wide;
#L15574c.   return @void ;

   }
    procedure [|void|] [|java:util:zip:CRC32.update|] ([|java:util:zip:CRC32|] v3 @type (this), [|int|] v4) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.update:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L155760.   v0:= (byte)v4  @type i2b;
#L155762.   v1:= v3.[|java:util:zip:CRC32.crc|]   @wide;
#L155766.   call temp:=  [|java:util:zip:CRC32.updateByteImpl|](v3, v0, v1, v2) @signature [|Ljava/util/zip/CRC32;.updateByteImpl:(BJ)J|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L15576c.   v0:= temp  @type wide;
#L15576e.   v3.[|java:util:zip:CRC32.crc|]  := v0 @wide;
#L155772.   return @void ;

   }
    procedure [|void|] [|java:util:zip:CRC32.update|] ([|java:util:zip:CRC32|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.update:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155784.   v0:= 0  @length 4;
#L155786.   v1:= v3.length;
#L155788.   call temp:=  [|java:util:zip:CRC32.update|](v2, v3, v0, v1) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15578e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:CRC32.update|] ([|java:util:zip:CRC32|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:CRC32|] @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1557a0.   v0:= v7.length;
#L1557a2.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L1557a8.   v0:= v6.[|java:util:zip:CRC32.tbytes|]   @wide;
#L1557ac.   v2:= (long)v9  @type i2l;
#L1557ae.   v0:= v0 + v2  @type long;
#L1557b0.   v6.[|java:util:zip:CRC32.tbytes|]  := v0 @wide;
#L1557b4.   v4:= v6.[|java:util:zip:CRC32.crc|]   @wide;
#L1557b8.   v0:= v6  @type object;
#L1557ba.   v1:= v7  @type object;
#L1557bc.   v2:= v8;
#L1557be.   v3:= v9;
#L1557c0.   call temp:=  [|java:util:zip:CRC32.updateImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/CRC32;.updateImpl:([BIIJ)J|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L1557c6.   v0:= temp  @type wide;
#L1557c8.   v6.[|java:util:zip:CRC32.crc|]  := v0 @wide;
#L1557cc.   return @void ;

   }
record [|java:util:zip:CheckedInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|java:util:zip:Checksum|] [|java:util:zip:CheckedInputStream.check|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:zip:CheckedInputStream.<init>|] ([|java:util:zip:CheckedInputStream|] v0 @type (this), [|java:io:InputStream|] v1 @type (object), [|java:util:zip:Checksum|] v2 @type (object)) @owner [|java:util:zip:CheckedInputStream|] @signature [|Ljava/util/zip/CheckedInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Checksum;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1557e0.   call temp:=  [|java:io:FilterInputStream.<init>|](v0, v1) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L1557e6.   v0.[|java:util:zip:CheckedInputStream.check|]  := v2 @type object;
#L1557ea.   return @void ;

   }
    procedure [|java:util:zip:Checksum|] [|java:util:zip:CheckedInputStream.getChecksum|] ([|java:util:zip:CheckedInputStream|] v1 @type (this)) @owner [|java:util:zip:CheckedInputStream|] @signature [|Ljava/util/zip/CheckedInputStream;.getChecksum:()Ljava/util/zip/Checksum;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1557fc.   v0:= v1.[|java:util:zip:CheckedInputStream.check|]   @type object;
#L155800.   return v0  @type object;

   }
    procedure [|int|] [|java:util:zip:CheckedInputStream.read|] ([|java:util:zip:CheckedInputStream|] v2 @type (this)) @owner [|java:util:zip:CheckedInputStream|] @signature [|Ljava/util/zip/CheckedInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155814.   v1:= v2.[|java:util:zip:CheckedInputStream.in|]   @type object;
#L155818.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L15581e.   v0:= temp;
#L155820.   v1:= -1  @length 4;
#L155822.   if v0 == v1 then goto L155830;
#L155826.   v1:= v2.[|java:util:zip:CheckedInputStream.check|]   @type object;
#L15582a.   call temp:=  [|java:util:zip:Checksum.update|](v1, v0) @signature [|Ljava/util/zip/Checksum;.update:(I)V|] @classDescriptor [|java:util:zip:Checksum|] @type interface;
#L155830.   return v0;

   }
    procedure [|int|] [|java:util:zip:CheckedInputStream.read|] ([|java:util:zip:CheckedInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:util:zip:CheckedInputStream|] @signature [|Ljava/util/zip/CheckedInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155844.   v1:= v2.[|java:util:zip:CheckedInputStream.in|]   @type object;
#L155848.   call temp:=  [|java:io:InputStream.read|](v1, v3, v4, v5) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L15584e.   v0:= temp;
#L155850.   v1:= -1  @length 4;
#L155852.   if v0 == v1 then goto L155860;
#L155856.   v1:= v2.[|java:util:zip:CheckedInputStream.check|]   @type object;
#L15585a.   call temp:=  [|java:util:zip:Checksum.update|](v1, v3, v4, v0) @signature [|Ljava/util/zip/Checksum;.update:([BII)V|] @classDescriptor [|java:util:zip:Checksum|] @type interface;
#L155860.   return v0;

   }
    procedure [|long|] [|java:util:zip:CheckedInputStream.skip|] ([|java:util:zip:CheckedInputStream|] v2 @type (this), [|long|] v3) @owner [|java:util:zip:CheckedInputStream|] @signature [|Ljava/util/zip/CheckedInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155874.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L15587a.   v0:= temp  @type wide;
#L15587c.   return v0  @type wide;

   }
record [|java:util:zip:CheckedOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|] {
      [|java:util:zip:Checksum|] [|java:util:zip:CheckedOutputStream.check|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:zip:CheckedOutputStream.<init>|] ([|java:util:zip:CheckedOutputStream|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object), [|java:util:zip:Checksum|] v2 @type (object)) @owner [|java:util:zip:CheckedOutputStream|] @signature [|Ljava/util/zip/CheckedOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Checksum;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L155890.   call temp:=  [|java:io:FilterOutputStream.<init>|](v0, v1) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L155896.   v0.[|java:util:zip:CheckedOutputStream.check|]  := v2 @type object;
#L15589a.   return @void ;

   }
    procedure [|java:util:zip:Checksum|] [|java:util:zip:CheckedOutputStream.getChecksum|] ([|java:util:zip:CheckedOutputStream|] v1 @type (this)) @owner [|java:util:zip:CheckedOutputStream|] @signature [|Ljava/util/zip/CheckedOutputStream;.getChecksum:()Ljava/util/zip/Checksum;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1558ac.   v0:= v1.[|java:util:zip:CheckedOutputStream.check|]   @type object;
#L1558b0.   return v0  @type object;

   }
    procedure [|void|] [|java:util:zip:CheckedOutputStream.write|] ([|java:util:zip:CheckedOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:util:zip:CheckedOutputStream|] @signature [|Ljava/util/zip/CheckedOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1558c4.   v0:= v1.[|java:util:zip:CheckedOutputStream.out|]   @type object;
#L1558c8.   call temp:=  [|java:io:OutputStream.write|](v0, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1558ce.   v0:= v1.[|java:util:zip:CheckedOutputStream.check|]   @type object;
#L1558d2.   call temp:=  [|java:util:zip:Checksum.update|](v0, v2) @signature [|Ljava/util/zip/Checksum;.update:(I)V|] @classDescriptor [|java:util:zip:Checksum|] @type interface;
#L1558d8.   return @void ;

   }
    procedure [|void|] [|java:util:zip:CheckedOutputStream.write|] ([|java:util:zip:CheckedOutputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:util:zip:CheckedOutputStream|] @signature [|Ljava/util/zip/CheckedOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1558ec.   v0:= v1.[|java:util:zip:CheckedOutputStream.out|]   @type object;
#L1558f0.   call temp:=  [|java:io:OutputStream.write|](v0, v2, v3, v4) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1558f6.   v0:= v1.[|java:util:zip:CheckedOutputStream.check|]   @type object;
#L1558fa.   call temp:=  [|java:util:zip:Checksum.update|](v0, v2, v3, v4) @signature [|Ljava/util/zip/Checksum;.update:([BII)V|] @classDescriptor [|java:util:zip:Checksum|] @type interface;
#L155900.   return @void ;

   }
record [|java:util:zip:DataFormatException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:zip:DataFormatException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:DataFormatException.<init>|] ([|java:util:zip:DataFormatException|] v0 @type (this)) @owner [|java:util:zip:DataFormatException|] @signature [|Ljava/util/zip/DataFormatException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L155914.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L15591a.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DataFormatException.<init>|] ([|java:util:zip:DataFormatException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:zip:DataFormatException|] @signature [|Ljava/util/zip/DataFormatException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15592c.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L155932.   return @void ;

   }
record [|java:util:zip:Deflater|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|java:util:zip:Deflater.compressLevel|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:zip:Deflater.finished|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:Deflater.flushParm|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:util:zip:Deflater.guard|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:zip:Deflater.inLength|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:Deflater.inRead|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:util:zip:Deflater.inputBuffer|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:Deflater.strategy|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:zip:Deflater.streamHandle|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:zip:Deflater.BEST_COMPRESSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.BEST_SPEED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.DEFAULT_COMPRESSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.DEFAULT_STRATEGY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.DEFLATED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.FILTERED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.FINISH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.FULL_FLUSH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.HUFFMAN_ONLY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.NO_COMPRESSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.NO_FLUSH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:Deflater.SYNC_FLUSH|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:Deflater.<init>|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L155944.   v0:= -1  @length 4;
#L155946.   v1:= 0  @length 4;
#L155948.   call temp:=  [|java:util:zip:Deflater.<init>|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.<init>:(IZ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L15594e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.<init>|] ([|java:util:zip:Deflater|] v1 @type (this), [|int|] v2) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L155960.   v0:= 0  @length 4;
#L155962.   call temp:=  [|java:util:zip:Deflater.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/Deflater;.<init>:(IZ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155968.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.<init>|] ([|java:util:zip:Deflater|] v3 @type (this), [|int|] v4, [|boolean|] v5) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.<init>:(IZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15597c.   v0:= 0  @length 4;
#L15597e.   v2:= -1  @length 4;
#L155980.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L155986.   v3.[|java:util:zip:Deflater.flushParm|]  := v0;
#L15598a.   v3.[|java:util:zip:Deflater.compressLevel|]  := v2;
#L15598e.   v3.[|java:util:zip:Deflater.strategy|]  := v0;
#L155992.   v0:= -1  @length wide16;
#L155996.   v3.[|java:util:zip:Deflater.streamHandle|]  := v0 @wide;
#L15599a.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L1559a0.   v0:= temp  @type object;
#L1559a2.   v3.[|java:util:zip:Deflater.guard|]  := v0 @type object;
#L1559a6.   if v4 < v2 then goto L1559b2;
#L1559aa.   v0:= 9  @length 16;
#L1559ae.   if v4 <= v0 then goto L1559be;
#L1559b2.   v0:= new [|java:lang:IllegalArgumentException|];
#L1559b6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1559bc.   throw v0;
#L1559be.   v3.[|java:util:zip:Deflater.compressLevel|]  := v4;
#L1559c2.   v0:= v3.[|java:util:zip:Deflater.compressLevel|] ;
#L1559c6.   v1:= v3.[|java:util:zip:Deflater.strategy|] ;
#L1559ca.   call temp:=  [|java:util:zip:Deflater.createStream|](v3, v0, v1, v5) @signature [|Ljava/util/zip/Deflater;.createStream:(IIZ)J|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L1559d0.   v0:= temp  @type wide;
#L1559d2.   v3.[|java:util:zip:Deflater.streamHandle|]  := v0 @wide;
#L1559d6.   v0:= v3.[|java:util:zip:Deflater.guard|]   @type object;
#L1559da.   v1:= "end" @type (object, string);
#L1559de.   call temp:=  [|dalvik:system:CloseGuard.open|](v0, v1) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L1559e4.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.checkOpen|] ([|java:util:zip:Deflater|] v4 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1559f8.   v0:= v4.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L1559fc.   v2:= -1  @length wide16;
#L155a00.   v0:= cmp(v0,v2);
#L155a04.   if v0 != 0 then goto L155a18;
#L155a08.   v0:= new [|java:lang:IllegalStateException|];
#L155a0c.   v1:= "attempt to use Deflater after calling end" @type (object, string);
#L155a10.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L155a16.   throw v0;
#L155a18.   return @void ;

   }
    procedure [|long|] [|java:util:zip:Deflater.createStream|] ([|int|] v0, [|int|] v1, [|boolean|] v2) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.createStream:(IIZ)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Deflater.deflateImpl|] ([|java:util:zip:Deflater|] v7 @type (this), [|byte|][] v8, [|int|] v9, [|int|] v10, [|int|] v11) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.deflateImpl:([BIII)I|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L155a2c.   (@monitorenter v7)
#L155a2e.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v7) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155a34.   v0:= v8.length;
#L155a36.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v9, v10) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L155a3c.   v0:= v7.[|java:util:zip:Deflater.inputBuffer|]   @type object;
#L155a40.   if v0 != 0 then goto L155a4e;
#L155a44.   v0:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L155a48.   call temp:=  [|java:util:zip:Deflater.setInput|](v7, v0) @signature [|Ljava/util/zip/Deflater;.setInput:([B)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L155a4e.   v4:= v7.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155a52.   v0:= v7  @type object;
#L155a54.   v1:= v8  @type object;
#L155a56.   v2:= v9;
#L155a58.   v3:= v10;
#L155a5a.   v6:= v11;
#L155a5c.   call temp:=  [|java:util:zip:Deflater.deflateImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/zip/Deflater;.deflateImpl:([BIIJI)I|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155a62.   v0:= temp;
#L155a64.   (@monitorexit v7)
#L155a66.   return v0;
#L155a68.   v0:= Exception  @type object;
#L155a6a.   (@monitorexit v7)
#L155a6c.   throw v0;
  catch  [|any|] @[L155a2e..L155a62] goto L155a68;

   }
    procedure [|int|] [|java:util:zip:Deflater.deflateImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3, [|int|] v5) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.deflateImpl:([BIIJI)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Deflater.endImpl|] ([|java:util:zip:Deflater|] v4 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.endImpl:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L155a8c.   v2:= -1  @length wide16;
#L155a90.   v0:= v4.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155a94.   v0:= cmp(v0,v2);
#L155a98.   if v0 == 0 then goto L155ab0;
#L155a9c.   v0:= v4.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155aa0.   call temp:=  [|java:util:zip:Deflater.endImpl|](v4, v0, v1) @signature [|Ljava/util/zip/Deflater;.endImpl:(J)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155aa6.   v0:= 0  @length 4;
#L155aa8.   v4.[|java:util:zip:Deflater.inputBuffer|]  := v0 @type object;
#L155aac.   v4.[|java:util:zip:Deflater.streamHandle|]  := v2 @wide;
#L155ab0.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.endImpl|] ([|long|] v0) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.endImpl:(J)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Deflater.getAdlerImpl|] ([|long|] v0) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getAdlerImpl:(J)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Deflater.getTotalInImpl|] ([|long|] v0) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getTotalInImpl:(J)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Deflater.getTotalOutImpl|] ([|long|] v0) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getTotalOutImpl:(J)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Deflater.resetImpl|] ([|long|] v0) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.resetImpl:(J)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Deflater.setDictionaryImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setDictionaryImpl:([BIIJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Deflater.setInputImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setInputImpl:([BIIJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Deflater.setLevelsImpl|] ([|int|] v0, [|int|] v1, [|long|] v2) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setLevelsImpl:(IIJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Deflater.deflate|] ([|java:util:zip:Deflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.deflate:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155ac4.   v0:= 0  @length 4;
#L155ac6.   v1:= v3.length;
#L155ac8.   call temp:=  [|java:util:zip:Deflater.deflate|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Deflater;.deflate:([BII)I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L155ace.   v0:= temp;
#L155ad0.   return v0;

   }
    procedure [|int|] [|java:util:zip:Deflater.deflate|] ([|java:util:zip:Deflater|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.deflate:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L155ae4.   (@monitorenter v1)
#L155ae6.   v0:= v1.[|java:util:zip:Deflater.flushParm|] ;
#L155aea.   call temp:=  [|java:util:zip:Deflater.deflateImpl|](v1, v2, v3, v4, v0) @signature [|Ljava/util/zip/Deflater;.deflateImpl:([BIII)I|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155af0.   v0:= temp;
#L155af2.   (@monitorexit v1)
#L155af4.   return v0;
#L155af6.   v0:= Exception  @type object;
#L155af8.   (@monitorexit v1)
#L155afa.   throw v0;
  catch  [|any|] @[L155ae6..L155af0] goto L155af6;

   }
    procedure [|int|] [|java:util:zip:Deflater.deflate|] ([|java:util:zip:Deflater|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6, [|int|] v7) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.deflate:([BIII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L155b18.   (@monitorenter v3)
#L155b1a.   if v7 == 0 then goto L155b62;
#L155b1e.   v0:= 2  @length 4;
#L155b20.   if v7 == v0 then goto L155b62;
#L155b24.   v0:= 3  @length 4;
#L155b26.   if v7 == v0 then goto L155b62;
#L155b2a.   v0:= new [|java:lang:IllegalArgumentException|];
#L155b2e.   v1:= new [|java:lang:StringBuilder|];
#L155b32.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L155b38.   v2:= "Bad flush value: " @type (object, string);
#L155b3c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155b42.   v1:= temp  @type object;
#L155b44.   call temp:=  [|java:lang:StringBuilder.append|](v1, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155b4a.   v1:= temp  @type object;
#L155b4c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155b52.   v1:= temp  @type object;
#L155b54.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L155b5a.   throw v0;
#L155b5c.   v0:= Exception  @type object;
#L155b5e.   (@monitorexit v3)
#L155b60.   throw v0;
#L155b62.   call temp:=  [|java:util:zip:Deflater.deflateImpl|](v3, v4, v5, v6, v7) @signature [|Ljava/util/zip/Deflater;.deflateImpl:([BIII)I|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155b68.   v0:= temp;
#L155b6a.   (@monitorexit v3)
#L155b6c.   return v0;
  catch  [|any|] @[L155b2a..L155b5c] goto L155b5c;
  catch  [|any|] @[L155b62..L155b68] goto L155b5c;

   }
    procedure [|void|] [|java:util:zip:Deflater.end|] ([|java:util:zip:Deflater|] v1 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.end:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L155b94.   (@monitorenter v1)
#L155b96.   v0:= v1.[|java:util:zip:Deflater.guard|]   @type object;
#L155b9a.   call temp:=  [|dalvik:system:CloseGuard.close|](v0) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L155ba0.   call temp:=  [|java:util:zip:Deflater.endImpl|](v1) @signature [|Ljava/util/zip/Deflater;.endImpl:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155ba6.   (@monitorexit v1)
#L155ba8.   return @void ;
#L155baa.   v0:= Exception  @type object;
#L155bac.   (@monitorexit v1)
#L155bae.   throw v0;
  catch  [|any|] @[L155b96..L155ba6] goto L155baa;

   }
    procedure [|void|] [|java:util:zip:Deflater.finalize|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L155bcc.   v1:= v2.[|java:util:zip:Deflater.guard|]   @type object;
#L155bd0.   if v1 == 0 then goto L155bde;
#L155bd4.   v1:= v2.[|java:util:zip:Deflater.guard|]   @type object;
#L155bd8.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v1) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L155bde.   (@monitorenter v2)
#L155be0.   call temp:=  [|java:util:zip:Deflater.end|](v2) @signature [|Ljava/util/zip/Deflater;.end:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L155be6.   call temp:=  [|java:util:zip:Deflater.endImpl|](v2) @signature [|Ljava/util/zip/Deflater;.endImpl:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155bec.   (@monitorexit v2)
#L155bee.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L155bf4.   return @void ;
#L155bf6.   v1:= Exception  @type object;
#L155bf8.   (@monitorexit v2)
#L155bfa.   throw v1;
#L155bfc.   v1:= Exception  @type object;
#L155bfe.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L155c04.   throw v1;
#L155c06.   v0:= Exception  @type object;
#L155c08.   v1:= new [|java:lang:AssertionError|];
#L155c0c.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L155c12.   throw v1;
#L155c14.   v0:= Exception  @type object;
#L155c16.   v1:= new [|java:lang:AssertionError|];
#L155c1a.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L155c20.   throw v1;
  catch  [|any|] @[L155bcc..L155be0] goto L155bfc;
  catch  [|any|] @[L155be0..L155bee] goto L155bf6;
  catch  [|java:lang:Throwable|] @[L155bee..L155bf4] goto L155c14;
  catch  [|any|] @[L155bf8..L155bfa] goto L155bf6;
  catch  [|any|] @[L155bfa..L155bfc] goto L155bfc;
  catch  [|java:lang:Throwable|] @[L155bfe..L155c04] goto L155c06;

   }
    procedure [|void|] [|java:util:zip:Deflater.finish|] ([|java:util:zip:Deflater|] v1 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.finish:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L155c74.   (@monitorenter v1)
#L155c76.   v0:= 4  @length 4;
#L155c78.   v1.[|java:util:zip:Deflater.flushParm|]  := v0;
#L155c7c.   (@monitorexit v1)
#L155c7e.   return @void ;
#L155c80.   v0:= Exception  @type object;
#L155c82.   (@monitorexit v1)
#L155c84.   throw v0;
  catch  [|any|] @[L155c78..L155c7c] goto L155c80;

   }
    procedure [|boolean|] [|java:util:zip:Deflater.finished|] ([|java:util:zip:Deflater|] v1 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.finished:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L155ca4.   (@monitorenter v1)
#L155ca6.   v0:= v1.[|java:util:zip:Deflater.finished|]   @boolean;
#L155caa.   (@monitorexit v1)
#L155cac.   return v0;
#L155cae.   v0:= Exception  @type object;
#L155cb0.   (@monitorexit v1)
#L155cb2.   throw v0;
  catch  [|any|] @[L155ca6..L155caa] goto L155cae;

   }
    procedure [|int|] [|java:util:zip:Deflater.getAdler|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getAdler:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155cd0.   (@monitorenter v2)
#L155cd2.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155cd8.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155cdc.   call temp:=  [|java:util:zip:Deflater.getAdlerImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.getAdlerImpl:(J)I|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155ce2.   v0:= temp;
#L155ce4.   (@monitorexit v2)
#L155ce6.   return v0;
#L155ce8.   v0:= Exception  @type object;
#L155cea.   (@monitorexit v2)
#L155cec.   throw v0;
  catch  [|any|] @[L155cd2..L155ce2] goto L155ce8;

   }
    procedure [|long|] [|java:util:zip:Deflater.getBytesRead|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getBytesRead:()J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155d0c.   (@monitorenter v2)
#L155d0e.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d14.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155d18.   call temp:=  [|java:util:zip:Deflater.getTotalInImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.getTotalInImpl:(J)J|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d1e.   v0:= temp  @type wide;
#L155d20.   (@monitorexit v2)
#L155d22.   return v0  @type wide;
#L155d24.   v0:= Exception  @type object;
#L155d26.   (@monitorexit v2)
#L155d28.   throw v0;
  catch  [|any|] @[L155d0e..L155d1e] goto L155d24;

   }
    procedure [|long|] [|java:util:zip:Deflater.getBytesWritten|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getBytesWritten:()J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155d48.   (@monitorenter v2)
#L155d4a.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d50.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155d54.   call temp:=  [|java:util:zip:Deflater.getTotalOutImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.getTotalOutImpl:(J)J|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d5a.   v0:= temp  @type wide;
#L155d5c.   (@monitorexit v2)
#L155d5e.   return v0  @type wide;
#L155d60.   v0:= Exception  @type object;
#L155d62.   (@monitorexit v2)
#L155d64.   throw v0;
  catch  [|any|] @[L155d4a..L155d5a] goto L155d60;

   }
    procedure [|int|] [|java:util:zip:Deflater.getTotalIn|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getTotalIn:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155d84.   (@monitorenter v2)
#L155d86.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d8c.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155d90.   call temp:=  [|java:util:zip:Deflater.getTotalInImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.getTotalInImpl:(J)J|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155d96.   v0:= temp  @type wide;
#L155d98.   v0:= (int)v0  @type l2i;
#L155d9a.   (@monitorexit v2)
#L155d9c.   return v0;
#L155d9e.   v0:= Exception  @type object;
#L155da0.   (@monitorexit v2)
#L155da2.   throw v0;
  catch  [|any|] @[L155d86..L155d96] goto L155d9e;

   }
    procedure [|int|] [|java:util:zip:Deflater.getTotalOut|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.getTotalOut:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155dc0.   (@monitorenter v2)
#L155dc2.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155dc8.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155dcc.   call temp:=  [|java:util:zip:Deflater.getTotalOutImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.getTotalOutImpl:(J)J|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155dd2.   v0:= temp  @type wide;
#L155dd4.   v0:= (int)v0  @type l2i;
#L155dd6.   (@monitorexit v2)
#L155dd8.   return v0;
#L155dda.   v0:= Exception  @type object;
#L155ddc.   (@monitorexit v2)
#L155dde.   throw v0;
  catch  [|any|] @[L155dc2..L155dd2] goto L155dda;

   }
    procedure [|boolean|] [|java:util:zip:Deflater.needsInput|] ([|java:util:zip:Deflater|] v3 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.needsInput:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L155dfc.   v0:= 1  @length 4;
#L155dfe.   (@monitorenter v3)
#L155e00.   v1:= v3.[|java:util:zip:Deflater.inputBuffer|]   @type object;
#L155e04.   if v1 != 0 then goto L155e0c;
#L155e08.   (@monitorexit v3)
#L155e0a.   return v0;
#L155e0c.   v1:= v3.[|java:util:zip:Deflater.inRead|] ;
#L155e10.   v2:= v3.[|java:util:zip:Deflater.inLength|] ;
#L155e14.   if v1 == v2 then goto L155e08;
#L155e18.   v0:= 0  @length 4;
#L155e1a.   goto L155e08;
#L155e1c.   v0:= Exception  @type object;
#L155e1e.   (@monitorexit v3)
#L155e20.   throw v0;
  catch  [|any|] @[L155e00..L155e04] goto L155e1c;
  catch  [|any|] @[L155e0c..L155e14] goto L155e1c;

   }
    procedure [|void|] [|java:util:zip:Deflater.reset|] ([|java:util:zip:Deflater|] v2 @type (this)) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L155e48.   (@monitorenter v2)
#L155e4a.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v2) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155e50.   v0:= 0  @length 4;
#L155e52.   v2.[|java:util:zip:Deflater.flushParm|]  := v0;
#L155e56.   v0:= 0  @length 4;
#L155e58.   v2.[|java:util:zip:Deflater.finished|]  := v0 @boolean;
#L155e5c.   v0:= v2.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155e60.   call temp:=  [|java:util:zip:Deflater.resetImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Deflater;.resetImpl:(J)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155e66.   v0:= 0  @length 4;
#L155e68.   v2.[|java:util:zip:Deflater.inputBuffer|]  := v0 @type object;
#L155e6c.   (@monitorexit v2)
#L155e6e.   return @void ;
#L155e70.   v0:= Exception  @type object;
#L155e72.   (@monitorexit v2)
#L155e74.   throw v0;
  catch  [|any|] @[L155e4a..L155e6c] goto L155e70;

   }
    procedure [|void|] [|java:util:zip:Deflater.setDictionary|] ([|java:util:zip:Deflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setDictionary:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155e94.   v0:= 0  @length 4;
#L155e96.   v1:= v3.length;
#L155e98.   call temp:=  [|java:util:zip:Deflater.setDictionary|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Deflater;.setDictionary:([BII)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L155e9e.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.setDictionary|] ([|java:util:zip:Deflater|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setDictionary:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L155eb0.   (@monitorenter v6)
#L155eb2.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v6) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155eb8.   v0:= v7.length;
#L155eba.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L155ec0.   v4:= v6.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155ec4.   v0:= v6  @type object;
#L155ec6.   v1:= v7  @type object;
#L155ec8.   v2:= v8;
#L155eca.   v3:= v9;
#L155ecc.   call temp:=  [|java:util:zip:Deflater.setDictionaryImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Deflater;.setDictionaryImpl:([BIIJ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155ed2.   (@monitorexit v6)
#L155ed4.   return @void ;
#L155ed6.   v0:= Exception  @type object;
#L155ed8.   (@monitorexit v6)
#L155eda.   throw v0;
  catch  [|any|] @[L155eb2..L155ed2] goto L155ed6;

   }
    procedure [|void|] [|java:util:zip:Deflater.setInput|] ([|java:util:zip:Deflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setInput:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L155ef8.   v0:= 0  @length 4;
#L155efa.   v1:= v3.length;
#L155efc.   call temp:=  [|java:util:zip:Deflater.setInput|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Deflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L155f02.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Deflater.setInput|] ([|java:util:zip:Deflater|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setInput:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L155f14.   (@monitorenter v6)
#L155f16.   call temp:=  [|java:util:zip:Deflater.checkOpen|](v6) @signature [|Ljava/util/zip/Deflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155f1c.   v0:= v7.length;
#L155f1e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L155f24.   v6.[|java:util:zip:Deflater.inLength|]  := v9;
#L155f28.   v0:= 0  @length 4;
#L155f2a.   v6.[|java:util:zip:Deflater.inRead|]  := v0;
#L155f2e.   v0:= v6.[|java:util:zip:Deflater.inputBuffer|]   @type object;
#L155f32.   if v0 != 0 then goto L155f48;
#L155f36.   v0:= v6.[|java:util:zip:Deflater.compressLevel|] ;
#L155f3a.   v1:= v6.[|java:util:zip:Deflater.strategy|] ;
#L155f3e.   v2:= v6.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155f42.   call temp:=  [|java:util:zip:Deflater.setLevelsImpl|](v6, v0, v1, v2, v3) @signature [|Ljava/util/zip/Deflater;.setLevelsImpl:(IIJ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155f48.   v6.[|java:util:zip:Deflater.inputBuffer|]  := v7 @type object;
#L155f4c.   v4:= v6.[|java:util:zip:Deflater.streamHandle|]   @wide;
#L155f50.   v0:= v6  @type object;
#L155f52.   v1:= v7  @type object;
#L155f54.   v2:= v8;
#L155f56.   v3:= v9;
#L155f58.   call temp:=  [|java:util:zip:Deflater.setInputImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Deflater;.setInputImpl:([BIIJ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L155f5e.   (@monitorexit v6)
#L155f60.   return @void ;
#L155f62.   v0:= Exception  @type object;
#L155f64.   (@monitorexit v6)
#L155f66.   throw v0;
  catch  [|any|] @[L155f16..L155f5e] goto L155f62;

   }
    procedure [|void|] [|java:util:zip:Deflater.setLevel|] ([|java:util:zip:Deflater|] v3 @type (this), [|int|] v4) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setLevel:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L155f84.   (@monitorenter v3)
#L155f86.   v0:= -1  @length 4;
#L155f88.   if v4 < v0 then goto L155f94;
#L155f8c.   v0:= 9  @length 16;
#L155f90.   if v4 <= v0 then goto L155fcc;
#L155f94.   v0:= new [|java:lang:IllegalArgumentException|];
#L155f98.   v1:= new [|java:lang:StringBuilder|];
#L155f9c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L155fa2.   v2:= "Bad level: " @type (object, string);
#L155fa6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155fac.   v1:= temp  @type object;
#L155fae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155fb4.   v1:= temp  @type object;
#L155fb6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L155fbc.   v1:= temp  @type object;
#L155fbe.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L155fc4.   throw v0;
#L155fc6.   v0:= Exception  @type object;
#L155fc8.   (@monitorexit v3)
#L155fca.   throw v0;
#L155fcc.   v0:= v3.[|java:util:zip:Deflater.inputBuffer|]   @type object;
#L155fd0.   if v0 == 0 then goto L155fe4;
#L155fd4.   v0:= new [|java:lang:IllegalStateException|];
#L155fd8.   v1:= "setLevel cannot be called after setInput" @type (object, string);
#L155fdc.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L155fe2.   throw v0;
#L155fe4.   v3.[|java:util:zip:Deflater.compressLevel|]  := v4;
#L155fe8.   (@monitorexit v3)
#L155fea.   return @void ;
  catch  [|any|] @[L155f94..L155fc6] goto L155fc6;
  catch  [|any|] @[L155fcc..L155fe8] goto L155fc6;

   }
    procedure [|void|] [|java:util:zip:Deflater.setStrategy|] ([|java:util:zip:Deflater|] v3 @type (this), [|int|] v4) @owner [|java:util:zip:Deflater|] @signature [|Ljava/util/zip/Deflater;.setStrategy:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L156010.   (@monitorenter v3)
#L156012.   if v4 < 0 then goto L15601c;
#L156016.   v0:= 2  @length 4;
#L156018.   if v4 <= v0 then goto L156054;
#L15601c.   v0:= new [|java:lang:IllegalArgumentException|];
#L156020.   v1:= new [|java:lang:StringBuilder|];
#L156024.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15602a.   v2:= "Bad strategy: " @type (object, string);
#L15602e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L156034.   v1:= temp  @type object;
#L156036.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15603c.   v1:= temp  @type object;
#L15603e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L156044.   v1:= temp  @type object;
#L156046.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15604c.   throw v0;
#L15604e.   v0:= Exception  @type object;
#L156050.   (@monitorexit v3)
#L156052.   throw v0;
#L156054.   v0:= v3.[|java:util:zip:Deflater.inputBuffer|]   @type object;
#L156058.   if v0 == 0 then goto L15606c;
#L15605c.   v0:= new [|java:lang:IllegalStateException|];
#L156060.   v1:= "setStrategy cannot be called after setInput" @type (object, string);
#L156064.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15606a.   throw v0;
#L15606c.   v3.[|java:util:zip:Deflater.strategy|]  := v4;
#L156070.   (@monitorexit v3)
#L156072.   return @void ;
  catch  [|any|] @[L15601c..L15604e] goto L15604e;
  catch  [|any|] @[L156054..L156070] goto L15604e;

   }
record [|java:util:zip:DeflaterInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|boolean|] [|java:util:zip:DeflaterInputStream.available|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:util:zip:DeflaterInputStream.buf|]    @AccessFlag PROTECTED_FINAL;
      [|boolean|] [|java:util:zip:DeflaterInputStream.closed|]    @AccessFlag PRIVATE;
      [|java:util:zip:Deflater|] [|java:util:zip:DeflaterInputStream.def|]    @AccessFlag PROTECTED_FINAL;
   }
      global [|int|] @@[|java:util:zip:DeflaterInputStream.DEFAULT_BUFFER_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:DeflaterInputStream.<init>|] ([|java:util:zip:DeflaterInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L156098.   v0:= new [|java:util:zip:Deflater|];
#L15609c.   call temp:=  [|java:util:zip:Deflater.<init>|](v0) @signature [|Ljava/util/zip/Deflater;.<init>:()V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L1560a2.   v1:= 1024  @length 16;
#L1560a6.   call temp:=  [|java:util:zip:DeflaterInputStream.<init>|](v2, v3, v0, v1) @signature [|Ljava/util/zip/DeflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Deflater;I)V|] @classDescriptor [|java:util:zip:DeflaterInputStream|] @type direct;
#L1560ac.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.<init>|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object), [|java:util:zip:Deflater|] v3 @type (object)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Deflater;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1560c0.   v0:= 1024  @length 16;
#L1560c4.   call temp:=  [|java:util:zip:DeflaterInputStream.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/zip/DeflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Deflater;I)V|] @classDescriptor [|java:util:zip:DeflaterInputStream|] @type direct;
#L1560ca.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.<init>|] ([|java:util:zip:DeflaterInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|java:util:zip:Deflater|] v4 @type (object), [|int|] v5) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Deflater;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1560dc.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L1560e2.   v0:= 0  @length 4;
#L1560e4.   v2.[|java:util:zip:DeflaterInputStream.closed|]  := v0 @boolean;
#L1560e8.   v0:= 1  @length 4;
#L1560ea.   v2.[|java:util:zip:DeflaterInputStream.available|]  := v0 @boolean;
#L1560ee.   if v3 != 0 then goto L156102;
#L1560f2.   v0:= new [|java:lang:NullPointerException|];
#L1560f6.   v1:= "in == null" @type (object, string);
#L1560fa.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L156100.   throw v0;
#L156102.   if v4 != 0 then goto L156116;
#L156106.   v0:= new [|java:lang:NullPointerException|];
#L15610a.   v1:= "deflater == null" @type (object, string);
#L15610e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L156114.   throw v0;
#L156116.   if v5 > 0 then goto L156126;
#L15611a.   v0:= new [|java:lang:IllegalArgumentException|];
#L15611e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L156124.   throw v0;
#L156126.   v2.[|java:util:zip:DeflaterInputStream.def|]  := v4 @type object;
#L15612a.   v0:= new [|byte|][v5];
#L15612e.   v2.[|java:util:zip:DeflaterInputStream.buf|]  := v0 @type object;
#L156132.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.checkClosed|] ([|java:util:zip:DeflaterInputStream|] v2 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L156144.   v0:= v2.[|java:util:zip:DeflaterInputStream.closed|]   @boolean;
#L156148.   if v0 == 0 then goto L15615c;
#L15614c.   v0:= new [|java:io:IOException|];
#L156150.   v1:= "Stream is closed" @type (object, string);
#L156154.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L15615a.   throw v0;
#L15615c.   return @void ;

   }
    procedure [|int|] [|java:util:zip:DeflaterInputStream.available|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156170.   call temp:=  [|java:util:zip:DeflaterInputStream.checkClosed|](v1) @signature [|Ljava/util/zip/DeflaterInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:DeflaterInputStream|] @type direct;
#L156176.   v0:= v1.[|java:util:zip:DeflaterInputStream.available|]   @boolean;
#L15617a.   if v0 == 0 then goto L156182;
#L15617e.   v0:= 1  @length 4;
#L156180.   return v0;
#L156182.   v0:= 0  @length 4;
#L156184.   goto L156180;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.close|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156198.   v0:= 1  @length 4;
#L15619a.   v1.[|java:util:zip:DeflaterInputStream.closed|]  := v0 @boolean;
#L15619e.   v0:= v1.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L1561a2.   call temp:=  [|java:util:zip:Deflater.end|](v0) @signature [|Ljava/util/zip/Deflater;.end:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L1561a8.   v0:= v1.[|java:util:zip:DeflaterInputStream.in|]   @type object;
#L1561ac.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L1561b2.   return @void ;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.mark|] ([|java:util:zip:DeflaterInputStream|] v0 @type (this), [|int|] v1) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
      
#L1561c4.   return @void ;

   }
    procedure [|boolean|] [|java:util:zip:DeflaterInputStream.markSupported|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1561d8.   v0:= 0  @length 4;
#L1561da.   return v0;

   }
    procedure [|int|] [|java:util:zip:DeflaterInputStream.read|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1561ec.   call temp:=  [|libcore:io:Streams.readSingleByte|](v1) @signature [|Llibcore/io/Streams;.readSingleByte:(Ljava/io/InputStream;)I|] @classDescriptor [|libcore:io:Streams|] @type static;
#L1561f2.   v0:= temp;
#L1561f4.   return v0;

   }
    procedure [|int|] [|java:util:zip:DeflaterInputStream.read|] ([|java:util:zip:DeflaterInputStream|] v9 @type (this), [|byte|][] v10, [|int|] v11, [|int|] v12) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L156208.   v4:= -1  @length 4;
#L15620a.   v3:= 0  @length 4;
#L15620c.   call temp:=  [|java:util:zip:DeflaterInputStream.checkClosed|](v9) @signature [|Ljava/util/zip/DeflaterInputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:DeflaterInputStream|] @type direct;
#L156212.   v5:= v10.length;
#L156214.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v5, v11, v12) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L15621a.   if v12 != 0 then goto L156222;
#L15621e.   v2:= v3;
#L156220.   return v2;
#L156222.   v5:= v9.[|java:util:zip:DeflaterInputStream.available|]   @boolean;
#L156226.   if v5 != 0 then goto L15622e;
#L15622a.   v2:= v4;
#L15622c.   goto L156220;
#L15622e.   v2:= 0  @length 4;
#L156230.   if v2 >= v12 then goto L156298;
#L156234.   v5:= v9.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L156238.   call temp:=  [|java:util:zip:Deflater.finished|](v5) @signature [|Ljava/util/zip/Deflater;.finished:()Z|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L15623e.   v5:= temp;
#L156240.   if v5 != 0 then goto L156298;
#L156244.   v5:= v9.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L156248.   call temp:=  [|java:util:zip:Deflater.needsInput|](v5) @signature [|Ljava/util/zip/Deflater;.needsInput:()Z|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L15624e.   v5:= temp;
#L156250.   if v5 == 0 then goto L156272;
#L156254.   v5:= v9.[|java:util:zip:DeflaterInputStream.in|]   @type object;
#L156258.   v6:= v9.[|java:util:zip:DeflaterInputStream.buf|]   @type object;
#L15625c.   call temp:=  [|java:io:InputStream.read|](v5, v6) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L156262.   v1:= temp;
#L156264.   if v1 != v4 then goto L1562a4;
#L156268.   v5:= v9.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L15626c.   call temp:=  [|java:util:zip:Deflater.finish|](v5) @signature [|Ljava/util/zip/Deflater;.finish:()V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L156272.   v5:= v9.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L156276.   v6:= v9.[|java:util:zip:DeflaterInputStream.buf|]   @type object;
#L15627a.   v7:= v9.[|java:util:zip:DeflaterInputStream.buf|]   @type object;
#L15627e.   v7:= v7.length;
#L156280.   v8:= v12 - v2  @type int;
#L156284.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L15628a.   v7:= temp;
#L15628c.   call temp:=  [|java:util:zip:Deflater.deflate|](v5, v6, v3, v7) @signature [|Ljava/util/zip/Deflater;.deflate:([BII)I|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L156292.   v0:= temp;
#L156294.   if v0 != v4 then goto L1562b4;
#L156298.   if v2 != 0 then goto L156220;
#L15629c.   v2:= -1  @length 4;
#L15629e.   v9.[|java:util:zip:DeflaterInputStream.available|]  := v3 @boolean;
#L1562a2.   goto L156220;
#L1562a4.   v5:= v9.[|java:util:zip:DeflaterInputStream.def|]   @type object;
#L1562a8.   v6:= v9.[|java:util:zip:DeflaterInputStream.buf|]   @type object;
#L1562ac.   call temp:=  [|java:util:zip:Deflater.setInput|](v5, v6, v3, v1) @signature [|Ljava/util/zip/Deflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Deflater|] @type virtual;
#L1562b2.   goto L156272;
#L1562b4.   v5:= v9.[|java:util:zip:DeflaterInputStream.buf|]   @type object;
#L1562b8.   v6:= v11 + v2  @type int;
#L1562bc.   call temp:=  [|java:lang:System.arraycopy|](v5, v3, v10, v6, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1562c2.   v2:= v2 + v0  @type int;
#L1562c4.   goto L156230;

   }
    procedure [|void|] [|java:util:zip:DeflaterInputStream.reset|] ([|java:util:zip:DeflaterInputStream|] v1 @type (this)) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1562d8.   v0:= new [|java:io:IOException|];
#L1562dc.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1562e2.   throw v0;

   }
    procedure [|long|] [|java:util:zip:DeflaterInputStream.skip|] ([|java:util:zip:DeflaterInputStream|] v2 @type (this), [|long|] v3) @owner [|java:util:zip:DeflaterInputStream|] @signature [|Ljava/util/zip/DeflaterInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1562f4.    v0:= nan  @length wide32;
#L1562fa.   call temp:=  [|java:lang:Math.min|](v0, v1, v3, v4) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L156300.   v3:= temp  @type wide;
#L156302.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L156308.   v0:= temp  @type wide;
#L15630a.   return v0  @type wide;

   }
record [|java:util:zip:GZIPInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:InflaterInputStream|] {
      [|java:util:zip:CRC32|] [|java:util:zip:GZIPInputStream.crc|]    @AccessFlag PROTECTED;
      [|boolean|] [|java:util:zip:GZIPInputStream.eos|]    @AccessFlag PROTECTED;
   }
      global [|int|] @@[|java:util:zip:GZIPInputStream.FCOMMENT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:GZIPInputStream.FEXTRA|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:GZIPInputStream.FHCRC|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:GZIPInputStream.FNAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:zip:GZIPInputStream.GZIP_MAGIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:GZIPInputStream.<init>|] ([|java:util:zip:GZIPInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15631c.   v0:= 512  @length 16;
#L156320.   call temp:=  [|java:util:zip:GZIPInputStream.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/GZIPInputStream;.<init>:(Ljava/io/InputStream;I)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L156326.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPInputStream.<init>|] ([|java:util:zip:GZIPInputStream|] v13 @type (this), [|java:io:InputStream|] v14 @type (object), [|int|] v15) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.<init>:(Ljava/io/InputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L156338.   v11:= 2  @length 4;
#L15633a.   v2:= 1  @length 4;
#L15633c.   v8:= 0  @length 4;
#L15633e.   v9:= new [|java:util:zip:Inflater|];
#L156342.   call temp:=  [|java:util:zip:Inflater.<init>|](v9, v2) @signature [|Ljava/util/zip/Inflater;.<init>:(Z)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156348.   call temp:=  [|java:util:zip:InflaterInputStream.<init>|](v13, v14, v9, v15) @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L15634e.   v9:= new [|java:util:zip:CRC32|];
#L156352.   call temp:=  [|java:util:zip:CRC32.<init>|](v9) @signature [|Ljava/util/zip/CRC32;.<init>:()V|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L156358.   v13.[|java:util:zip:GZIPInputStream.crc|]  := v9 @type object;
#L15635c.   v13.[|java:util:zip:GZIPInputStream.eos|]  := v8 @boolean;
#L156360.   v9:= 10  @length 16;
#L156364.   v3:= new [|byte|][v9];
#L156368.   v9:= v3.length;
#L15636a.   call temp:=  [|java:util:zip:GZIPInputStream.readFully|](v13, v3, v8, v9) @signature [|Ljava/util/zip/GZIPInputStream;.readFully:([BII)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L156370.   v9:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L156374.   call temp:=  [|libcore:io:Memory.peekShort|](v3, v8, v9) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L15637a.   v5:= temp;
#L15637c.   v9:= -29921  @length 16;
#L156380.   if v5 == v9 then goto L1563ac;
#L156384.   v9:= new [|java:io:IOException|];
#L156388.   v10:= "unknown format (magic number %x)" @type (object, string);
#L15638c.   v11:= new [|java:lang:Object|][v2];
#L156390.   call temp:=  [|java:lang:Short.valueOf|](v5) @signature [|Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;|] @classDescriptor [|java:lang:Short|] @type static;
#L156396.   v12:= temp  @type object;
#L156398.   v11[v8]:= v12  @type object;
#L15639c.   call temp:=  [|java:lang:String.format|](v10, v11) @signature [|Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L1563a2.   v8:= temp  @type object;
#L1563a4.   call temp:=  [|java:io:IOException.<init>|](v9, v8) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1563aa.   throw v9;
#L1563ac.   v9:= 3  @length 4;
#L1563ae.   v1:= v3[v9]  @byte;
#L1563b2.   v9:= v1 ^& 2;
#L1563b6.   if v9 == 0 then goto L156432;
#L1563ba.   if v2 == 0 then goto L1563ca;
#L1563be.   v9:= v13.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L1563c2.   v10:= v3.length;
#L1563c4.   call temp:=  [|java:util:zip:CRC32.update|](v9, v3, v8, v10) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L1563ca.   v9:= v1 ^& 4;
#L1563ce.   if v9 == 0 then goto L156450;
#L1563d2.   call temp:=  [|java:util:zip:GZIPInputStream.readFully|](v13, v3, v8, v11) @signature [|Ljava/util/zip/GZIPInputStream;.readFully:([BII)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L1563d8.   if v2 == 0 then goto L1563e6;
#L1563dc.   v9:= v13.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L1563e0.   call temp:=  [|java:util:zip:CRC32.update|](v9, v3, v8, v11) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L1563e6.   v9:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L1563ea.   call temp:=  [|libcore:io:Memory.peekShort|](v3, v8, v9) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L1563f0.   v9:= temp;
#L1563f2.    v10:= 0.000000;
#L1563f8.   v4:= v9 ^& v10  @type int;
#L1563fc.   if v4 <= 0 then goto L156450;
#L156400.   v9:= v13.[|java:util:zip:GZIPInputStream.buf|]   @type object;
#L156404.   v9:= v9.length;
#L156406.   if v4 <= v9 then goto L156436;
#L15640a.   v9:= v13.[|java:util:zip:GZIPInputStream.buf|]   @type object;
#L15640e.   v6:= v9.length;
#L156410.   v9:= v13.[|java:util:zip:GZIPInputStream.in|]   @type object;
#L156414.   v10:= v13.[|java:util:zip:GZIPInputStream.buf|]   @type object;
#L156418.   call temp:=  [|java:io:InputStream.read|](v9, v10, v8, v6) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L15641e.   v7:= temp;
#L156420.   v9:= -1  @length 4;
#L156422.   if v7 != v9 then goto L15643a;
#L156426.   v8:= new [|java:io:EOFException|];
#L15642a.   call temp:=  [|java:io:EOFException.<init>|](v8) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L156430.   throw v8;
#L156432.   v2:= v8;
#L156434.   goto L1563ba;
#L156436.   v6:= v4;
#L156438.   goto L156410;
#L15643a.   if v2 == 0 then goto L15644c;
#L15643e.   v9:= v13.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L156442.   v10:= v13.[|java:util:zip:GZIPInputStream.buf|]   @type object;
#L156446.   call temp:=  [|java:util:zip:CRC32.update|](v9, v10, v8, v7) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15644c.   v4:= v4 - v7  @type int;
#L15644e.   goto L1563fc;
#L156450.   v9:= v1 ^& 8;
#L156454.   if v9 == 0 then goto L15645e;
#L156458.   call temp:=  [|java:util:zip:GZIPInputStream.readZeroTerminated|](v13, v2) @signature [|Ljava/util/zip/GZIPInputStream;.readZeroTerminated:(Z)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L15645e.   v9:= v1 ^& 16;
#L156462.   if v9 == 0 then goto L15646c;
#L156466.   call temp:=  [|java:util:zip:GZIPInputStream.readZeroTerminated|](v13, v2) @signature [|Ljava/util/zip/GZIPInputStream;.readZeroTerminated:(Z)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L15646c.   if v2 == 0 then goto L1564b0;
#L156470.   call temp:=  [|java:util:zip:GZIPInputStream.readFully|](v13, v3, v8, v11) @signature [|Ljava/util/zip/GZIPInputStream;.readFully:([BII)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L156476.   v9:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L15647a.   call temp:=  [|libcore:io:Memory.peekShort|](v3, v8, v9) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L156480.   v0:= temp;
#L156482.   v8:= v13.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L156486.   call temp:=  [|java:util:zip:CRC32.getValue|](v8) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15648c.   v8:= temp  @type wide;
#L15648e.   v8:= (int)v8  @type l2i;
#L156490.   v8:= (short)v8  @type i2s;
#L156492.   if v8 == v0 then goto L1564a6;
#L156496.   v8:= new [|java:io:IOException|];
#L15649a.   v9:= "CRC mismatch" @type (object, string);
#L15649e.   call temp:=  [|java:io:IOException.<init>|](v8, v9) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1564a4.   throw v8;
#L1564a6.   v8:= v13.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L1564aa.   call temp:=  [|java:util:zip:CRC32.reset|](v8) @signature [|Ljava/util/zip/CRC32;.reset:()V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L1564b0.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPInputStream.readFully|] ([|java:util:zip:GZIPInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.readFully:([BII)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1564c4.   if v5 <= 0 then goto L1564ec;
#L1564c8.   v1:= v2.[|java:util:zip:GZIPInputStream.in|]   @type object;
#L1564cc.   call temp:=  [|java:io:InputStream.read|](v1, v3, v4, v5) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L1564d2.   v0:= temp;
#L1564d4.   v1:= -1  @length 4;
#L1564d6.   if v0 != v1 then goto L1564e6;
#L1564da.   v1:= new [|java:io:EOFException|];
#L1564de.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L1564e4.   throw v1;
#L1564e6.   v4:= v4 + v0  @type int;
#L1564e8.   v5:= v5 - v0  @type int;
#L1564ea.   goto L1564c4;
#L1564ec.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPInputStream.readZeroTerminated|] ([|java:util:zip:GZIPInputStream|] v2 @type (this), [|boolean|] v3) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.readZeroTerminated:(Z)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L156500.   v1:= v2.[|java:util:zip:GZIPInputStream.in|]   @type object;
#L156504.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L15650a.   v0:= temp;
#L15650c.   if v0 <= 0 then goto L156520;
#L156510.   if v3 == 0 then goto L156500;
#L156514.   v1:= v2.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L156518.   call temp:=  [|java:util:zip:CRC32.update|](v1, v0) @signature [|Ljava/util/zip/CRC32;.update:(I)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15651e.   goto L156500;
#L156520.   v1:= -1  @length 4;
#L156522.   if v0 != v1 then goto L156532;
#L156526.   v1:= new [|java:io:EOFException|];
#L15652a.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L156530.   throw v1;
#L156532.   if v3 == 0 then goto L156540;
#L156536.   v1:= v2.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L15653a.   call temp:=  [|java:util:zip:CRC32.update|](v1, v0) @signature [|Ljava/util/zip/CRC32;.update:(I)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L156540.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPInputStream.verifyCrc|] ([|java:util:zip:GZIPInputStream|] v7 @type (this)) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.verifyCrc:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L156554.   v6:= 0  @length 4;
#L156556.   v1:= 8  @length 16;
#L15655a.   v4:= v7.[|java:util:zip:GZIPInputStream.inf|]   @type object;
#L15655e.   call temp:=  [|java:util:zip:Inflater.getRemaining|](v4) @signature [|Ljava/util/zip/Inflater;.getRemaining:()I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156564.   v2:= temp;
#L156566.   v3:= 8  @length 16;
#L15656a.   v0:= new [|byte|][v1];
#L15656e.   if v2 <= v1 then goto L1565ba;
#L156572.   v4:= v7.[|java:util:zip:GZIPInputStream.buf|]   @type object;
#L156576.   v5:= v7.[|java:util:zip:GZIPInputStream.len|] ;
#L15657a.   v5:= v5 - v2  @type int;
#L15657c.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v6, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L156582.   v4:= v1 - 8;
#L156586.   call temp:=  [|java:util:zip:GZIPInputStream.readFully|](v7, v0, v1, v4) @signature [|Ljava/util/zip/GZIPInputStream;.readFully:([BII)V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L15658c.   v4:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L156590.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v6, v4) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L156596.   v4:= temp;
#L156598.   v5:= v7.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L15659c.   call temp:=  [|java:util:zip:CRC32.getValue|](v5) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L1565a2.   v5:= temp  @type wide;
#L1565a4.   v5:= (int)v5  @type l2i;
#L1565a6.   if v4 == v5 then goto L1565be;
#L1565aa.   v4:= new [|java:io:IOException|];
#L1565ae.   v5:= "CRC mismatch" @type (object, string);
#L1565b2.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1565b8.   throw v4;
#L1565ba.   v1:= v2;
#L1565bc.   goto L156572;
#L1565be.   v4:= 4  @length 4;
#L1565c0.   v5:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L1565c4.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v4, v5) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L1565ca.   v4:= temp;
#L1565cc.   v5:= v7.[|java:util:zip:GZIPInputStream.inf|]   @type object;
#L1565d0.   call temp:=  [|java:util:zip:Inflater.getTotalOut|](v5) @signature [|Ljava/util/zip/Inflater;.getTotalOut:()I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L1565d6.   v5:= temp;
#L1565d8.   if v4 == v5 then goto L1565ec;
#L1565dc.   v4:= new [|java:io:IOException|];
#L1565e0.   v5:= "Size mismatch" @type (object, string);
#L1565e4.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1565ea.   throw v4;
#L1565ec.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPInputStream.close|] ([|java:util:zip:GZIPInputStream|] v1 @type (this)) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156600.   v0:= 1  @length 4;
#L156602.   v1.[|java:util:zip:GZIPInputStream.eos|]  := v0 @boolean;
#L156606.   call temp:=  [|java:util:zip:InflaterInputStream.close|](v1) @signature [|Ljava/util/zip/InflaterInputStream;.close:()V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type super;
#L15660c.   return @void ;

   }
    procedure [|int|] [|java:util:zip:GZIPInputStream.read|] ([|java:util:zip:GZIPInputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:util:zip:GZIPInputStream|] @signature [|Ljava/util/zip/GZIPInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L156620.   v1:= -1  @length 4;
#L156622.   v2:= v3.[|java:util:zip:GZIPInputStream.closed|]   @boolean;
#L156626.   if v2 == 0 then goto L15663a;
#L15662a.   v1:= new [|java:io:IOException|];
#L15662e.   v2:= "Stream is closed" @type (object, string);
#L156632.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L156638.   throw v1;
#L15663a.   v2:= v3.[|java:util:zip:GZIPInputStream.eos|]   @boolean;
#L15663e.   if v2 == 0 then goto L156646;
#L156642.   v0:= v1;
#L156644.   return v0;
#L156646.   v2:= v4.length;
#L156648.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v2, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L15664e.   call temp:=  [|java:util:zip:InflaterInputStream.read|](v3, v4, v5, v6) @signature [|Ljava/util/zip/InflaterInputStream;.read:([BII)I|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type super;
#L156654.   v0:= temp;
#L156656.   v2:= v3.[|java:util:zip:GZIPInputStream.eof|]   @boolean;
#L15665a.   v3.[|java:util:zip:GZIPInputStream.eos|]  := v2 @boolean;
#L15665e.   if v0 == v1 then goto L15666c;
#L156662.   v1:= v3.[|java:util:zip:GZIPInputStream.crc|]   @type object;
#L156666.   call temp:=  [|java:util:zip:CRC32.update|](v1, v4, v5, v0) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15666c.   v1:= v3.[|java:util:zip:GZIPInputStream.eos|]   @boolean;
#L156670.   if v1 == 0 then goto L156644;
#L156674.   call temp:=  [|java:util:zip:GZIPInputStream.verifyCrc|](v3) @signature [|Ljava/util/zip/GZIPInputStream;.verifyCrc:()V|] @classDescriptor [|java:util:zip:GZIPInputStream|] @type direct;
#L15667a.   goto L156644;
#L15667c.   v1:= Exception  @type object;
#L15667e.   v2:= v3.[|java:util:zip:GZIPInputStream.eof|]   @boolean;
#L156682.   v3.[|java:util:zip:GZIPInputStream.eos|]  := v2 @boolean;
#L156686.   throw v1;
  catch  [|any|] @[L15664e..L156654] goto L15667c;

   }
record [|java:util:zip:GZIPOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:util:zip:DeflaterOutputStream|] {
      [|java:util:zip:CRC32|] [|java:util:zip:GZIPOutputStream.crc|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:util:zip:GZIPOutputStream.<init>|] ([|java:util:zip:GZIPOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1566a4.   v0:= 512  @length 16;
#L1566a8.   call temp:=  [|java:util:zip:GZIPOutputStream.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/GZIPOutputStream;.<init>:(Ljava/io/OutputStream;I)V|] @classDescriptor [|java:util:zip:GZIPOutputStream|] @type direct;
#L1566ae.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPOutputStream.<init>|] ([|java:util:zip:GZIPOutputStream|] v4 @type (this), [|java:io:OutputStream|] v5 @type (object), [|int|] v6) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.<init>:(Ljava/io/OutputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1566c0.   v3:= 0  @length 4;
#L1566c2.   v0:= new [|java:util:zip:Deflater|];
#L1566c6.   v1:= -1  @length 4;
#L1566c8.   v2:= 1  @length 4;
#L1566ca.   call temp:=  [|java:util:zip:Deflater.<init>|](v0, v1, v2) @signature [|Ljava/util/zip/Deflater;.<init>:(IZ)V|] @classDescriptor [|java:util:zip:Deflater|] @type direct;
#L1566d0.   call temp:=  [|java:util:zip:DeflaterOutputStream.<init>|](v4, v5, v0, v6) @signature [|Ljava/util/zip/DeflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;I)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type direct;
#L1566d6.   v0:= new [|java:util:zip:CRC32|];
#L1566da.   call temp:=  [|java:util:zip:CRC32.<init>|](v0) @signature [|Ljava/util/zip/CRC32;.<init>:()V|] @classDescriptor [|java:util:zip:CRC32|] @type direct;
#L1566e0.   v4.[|java:util:zip:GZIPOutputStream.crc|]  := v0 @type object;
#L1566e4.    v0:= 0.000000;
#L1566ea.   call temp:=  [|java:util:zip:GZIPOutputStream.writeShort|](v4, v0) @signature [|Ljava/util/zip/GZIPOutputStream;.writeShort:(I)I|] @classDescriptor [|java:util:zip:GZIPOutputStream|] @type direct;
#L1566f0.   v0:= v4.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L1566f4.   v1:= 8  @length 16;
#L1566f8.   call temp:=  [|java:io:OutputStream.write|](v0, v1) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1566fe.   v0:= v4.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L156702.   call temp:=  [|java:io:OutputStream.write|](v0, v3) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156708.   v0:= 0  @length wide16;
#L15670c.   call temp:=  [|java:util:zip:GZIPOutputStream.writeLong|](v4, v0, v1) @signature [|Ljava/util/zip/GZIPOutputStream;.writeLong:(J)J|] @classDescriptor [|java:util:zip:GZIPOutputStream|] @type direct;
#L156712.   v0:= v4.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L156716.   call temp:=  [|java:io:OutputStream.write|](v0, v3) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15671c.   v0:= v4.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L156720.   call temp:=  [|java:io:OutputStream.write|](v0, v3) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156726.   return @void ;

   }
    procedure [|long|] [|java:util:zip:GZIPOutputStream.writeLong|] ([|java:util:zip:GZIPOutputStream|] v3 @type (this), [|long|] v4) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.writeLong:(J)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L156738.   v0:= (int)v4  @type l2i;
#L15673a.   v1:= v3.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L15673e.   v2:= v0 ^& 255;
#L156742.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156748.   v1:= v3.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L15674c.   v2:= v0 ^> 8;
#L156750.   v2:= v2 ^& 255;
#L156754.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15675a.   v1:= v3.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L15675e.   v2:= v0 ^> 16;
#L156762.   v2:= v2 ^& 255;
#L156766.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15676c.   v1:= v3.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L156770.   v2:= v0 ^> 24;
#L156774.   v2:= v2 ^& 255;
#L156778.   call temp:=  [|java:io:OutputStream.write|](v1, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15677e.   return v4  @type wide;

   }
    procedure [|int|] [|java:util:zip:GZIPOutputStream.writeShort|] ([|java:util:zip:GZIPOutputStream|] v2 @type (this), [|int|] v3) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.writeShort:(I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L156790.   v0:= v2.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L156794.   v1:= v3 ^& 255;
#L156798.   call temp:=  [|java:io:OutputStream.write|](v0, v1) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15679e.   v0:= v2.[|java:util:zip:GZIPOutputStream.out|]   @type object;
#L1567a2.   v1:= v3 ^> 8;
#L1567a6.   v1:= v1 ^& 255;
#L1567aa.   call temp:=  [|java:io:OutputStream.write|](v0, v1) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1567b0.   return v3;

   }
    procedure [|void|] [|java:util:zip:GZIPOutputStream.finish|] ([|java:util:zip:GZIPOutputStream|] v2 @type (this)) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.finish:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1567c4.   call temp:=  [|java:util:zip:DeflaterOutputStream.finish|](v2) @signature [|Ljava/util/zip/DeflaterOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type super;
#L1567ca.   v0:= v2.[|java:util:zip:GZIPOutputStream.crc|]   @type object;
#L1567ce.   call temp:=  [|java:util:zip:CRC32.getValue|](v0) @signature [|Ljava/util/zip/CRC32;.getValue:()J|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L1567d4.   v0:= temp  @type wide;
#L1567d6.   call temp:=  [|java:util:zip:GZIPOutputStream.writeLong|](v2, v0, v1) @signature [|Ljava/util/zip/GZIPOutputStream;.writeLong:(J)J|] @classDescriptor [|java:util:zip:GZIPOutputStream|] @type direct;
#L1567dc.   v0:= v2.[|java:util:zip:GZIPOutputStream.crc|]   @type object;
#L1567e0.   v0:= v0.[|java:util:zip:CRC32.tbytes|]   @wide;
#L1567e4.   call temp:=  [|java:util:zip:GZIPOutputStream.writeLong|](v2, v0, v1) @signature [|Ljava/util/zip/GZIPOutputStream;.writeLong:(J)J|] @classDescriptor [|java:util:zip:GZIPOutputStream|] @type direct;
#L1567ea.   return @void ;

   }
    procedure [|void|] [|java:util:zip:GZIPOutputStream.write|] ([|java:util:zip:GZIPOutputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:util:zip:GZIPOutputStream|] @signature [|Ljava/util/zip/GZIPOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1567fc.   call temp:=  [|java:util:zip:DeflaterOutputStream.write|](v1, v2, v3, v4) @signature [|Ljava/util/zip/DeflaterOutputStream;.write:([BII)V|] @classDescriptor [|java:util:zip:DeflaterOutputStream|] @type super;
#L156802.   v0:= v1.[|java:util:zip:GZIPOutputStream.crc|]   @type object;
#L156806.   call temp:=  [|java:util:zip:CRC32.update|](v0, v2, v3, v4) @signature [|Ljava/util/zip/CRC32;.update:([BII)V|] @classDescriptor [|java:util:zip:CRC32|] @type virtual;
#L15680c.   return @void ;

   }
record [|java:util:zip:Inflater|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|java:util:zip:Inflater.finished|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:util:zip:Inflater.guard|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:zip:Inflater.inLength|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:zip:Inflater.inRead|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:zip:Inflater.needsDictionary|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:zip:Inflater.streamHandle|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:zip:Inflater.<init>|] ([|java:util:zip:Inflater|] v1 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L156820.   v0:= 0  @length 4;
#L156822.   call temp:=  [|java:util:zip:Inflater.<init>|](v1, v0) @signature [|Ljava/util/zip/Inflater;.<init>:(Z)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156828.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Inflater.<init>|] ([|java:util:zip:Inflater|] v2 @type (this), [|boolean|] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15683c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L156842.   v0:= -1  @length wide16;
#L156846.   v2.[|java:util:zip:Inflater.streamHandle|]  := v0 @wide;
#L15684a.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L156850.   v0:= temp  @type object;
#L156852.   v2.[|java:util:zip:Inflater.guard|]  := v0 @type object;
#L156856.   call temp:=  [|java:util:zip:Inflater.createStream|](v2, v3) @signature [|Ljava/util/zip/Inflater;.createStream:(Z)J|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L15685c.   v0:= temp  @type wide;
#L15685e.   v2.[|java:util:zip:Inflater.streamHandle|]  := v0 @wide;
#L156862.   v0:= v2.[|java:util:zip:Inflater.guard|]   @type object;
#L156866.   v1:= "end" @type (object, string);
#L15686a.   call temp:=  [|dalvik:system:CloseGuard.open|](v0, v1) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L156870.   return @void ;

   }
    procedure [|void|] [|java:util:zip:Inflater.checkOpen|] ([|java:util:zip:Inflater|] v4 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L156884.   v0:= v4.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156888.   v2:= -1  @length wide16;
#L15688c.   v0:= cmp(v0,v2);
#L156890.   if v0 != 0 then goto L1568a4;
#L156894.   v0:= new [|java:lang:IllegalStateException|];
#L156898.   v1:= "attempt to use Inflater after calling end" @type (object, string);
#L15689c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1568a2.   throw v0;
#L1568a4.   return @void ;

   }
    procedure [|long|] [|java:util:zip:Inflater.createStream|] ([|boolean|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.createStream:(Z)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Inflater.endImpl|] ([|long|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.endImpl:(J)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Inflater.getAdlerImpl|] ([|long|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getAdlerImpl:(J)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Inflater.getTotalInImpl|] ([|long|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getTotalInImpl:(J)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:util:zip:Inflater.getTotalOutImpl|] ([|long|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getTotalOutImpl:(J)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Inflater.inflateImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.inflateImpl:([BIIJ)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Inflater.resetImpl|] ([|long|] v0) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.resetImpl:(J)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Inflater.setDictionaryImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setDictionaryImpl:([BIIJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:util:zip:Inflater.setFileInputImpl|] ([|java:io:FileDescriptor|] v0 @type (object), [|long|] v1, [|int|] v3, [|long|] v4) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setFileInputImpl:(Ljava/io/FileDescriptor;JIJ)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Inflater.setInputImpl|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|long|] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setInputImpl:([BIIJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:util:zip:Inflater.end|] ([|java:util:zip:Inflater|] v4 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.end:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1568b8.   v2:= -1  @length wide16;
#L1568bc.   (@monitorenter v4)
#L1568be.   v0:= v4.[|java:util:zip:Inflater.guard|]   @type object;
#L1568c2.   call temp:=  [|dalvik:system:CloseGuard.close|](v0) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L1568c8.   v0:= v4.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L1568cc.   v0:= cmp(v0,v2);
#L1568d0.   if v0 == 0 then goto L1568f2;
#L1568d4.   v0:= v4.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L1568d8.   call temp:=  [|java:util:zip:Inflater.endImpl|](v4, v0, v1) @signature [|Ljava/util/zip/Inflater;.endImpl:(J)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L1568de.   v0:= 0  @length 4;
#L1568e0.   v4.[|java:util:zip:Inflater.inRead|]  := v0;
#L1568e4.   v0:= 0  @length 4;
#L1568e6.   v4.[|java:util:zip:Inflater.inLength|]  := v0;
#L1568ea.   v0:= -1  @length wide16;
#L1568ee.   v4.[|java:util:zip:Inflater.streamHandle|]  := v0 @wide;
#L1568f2.   (@monitorexit v4)
#L1568f4.   return @void ;
#L1568f6.   v0:= Exception  @type object;
#L1568f8.   (@monitorexit v4)
#L1568fa.   throw v0;
  catch  [|any|] @[L1568be..L1568f2] goto L1568f6;

   }
    procedure [|void|] [|java:util:zip:Inflater.finalize|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L156918.   v1:= v2.[|java:util:zip:Inflater.guard|]   @type object;
#L15691c.   if v1 == 0 then goto L15692a;
#L156920.   v1:= v2.[|java:util:zip:Inflater.guard|]   @type object;
#L156924.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v1) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L15692a.   call temp:=  [|java:util:zip:Inflater.end|](v2) @signature [|Ljava/util/zip/Inflater;.end:()V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156930.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L156936.   return @void ;
#L156938.   v1:= Exception  @type object;
#L15693a.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L156940.   throw v1;
#L156942.   v0:= Exception  @type object;
#L156944.   v1:= new [|java:lang:AssertionError|];
#L156948.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L15694e.   throw v1;
#L156950.   v0:= Exception  @type object;
#L156952.   v1:= new [|java:lang:AssertionError|];
#L156956.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L15695c.   throw v1;
  catch  [|any|] @[L156918..L156930] goto L156938;
  catch  [|java:lang:Throwable|] @[L156930..L156936] goto L156950;
  catch  [|java:lang:Throwable|] @[L15693a..L156940] goto L156942;

   }
    procedure [|boolean|] [|java:util:zip:Inflater.finished|] ([|java:util:zip:Inflater|] v1 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.finished:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L156994.   (@monitorenter v1)
#L156996.   v0:= v1.[|java:util:zip:Inflater.finished|]   @boolean;
#L15699a.   (@monitorexit v1)
#L15699c.   return v0;
#L15699e.   v0:= Exception  @type object;
#L1569a0.   (@monitorexit v1)
#L1569a2.   throw v0;
  catch  [|any|] @[L156996..L15699a] goto L15699e;

   }
    procedure [|int|] [|java:util:zip:Inflater.getAdler|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getAdler:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L1569c0.   (@monitorenter v2)
#L1569c2.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v2) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L1569c8.   v0:= v2.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L1569cc.   call temp:=  [|java:util:zip:Inflater.getAdlerImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Inflater;.getAdlerImpl:(J)I|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L1569d2.   v0:= temp;
#L1569d4.   (@monitorexit v2)
#L1569d6.   return v0;
#L1569d8.   v0:= Exception  @type object;
#L1569da.   (@monitorexit v2)
#L1569dc.   throw v0;
  catch  [|any|] @[L1569c2..L1569d2] goto L1569d8;

   }
    procedure [|long|] [|java:util:zip:Inflater.getBytesRead|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getBytesRead:()J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L1569fc.   (@monitorenter v2)
#L1569fe.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v2) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156a04.   v0:= v2.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156a08.   call temp:=  [|java:util:zip:Inflater.getTotalInImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Inflater;.getTotalInImpl:(J)J|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156a0e.   v0:= temp  @type wide;
#L156a10.   (@monitorexit v2)
#L156a12.   return v0  @type wide;
#L156a14.   v0:= Exception  @type object;
#L156a16.   (@monitorexit v2)
#L156a18.   throw v0;
  catch  [|any|] @[L1569fe..L156a0e] goto L156a14;

   }
    procedure [|long|] [|java:util:zip:Inflater.getBytesWritten|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getBytesWritten:()J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156a38.   (@monitorenter v2)
#L156a3a.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v2) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156a40.   v0:= v2.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156a44.   call temp:=  [|java:util:zip:Inflater.getTotalOutImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Inflater;.getTotalOutImpl:(J)J|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156a4a.   v0:= temp  @type wide;
#L156a4c.   (@monitorexit v2)
#L156a4e.   return v0  @type wide;
#L156a50.   v0:= Exception  @type object;
#L156a52.   (@monitorexit v2)
#L156a54.   throw v0;
  catch  [|any|] @[L156a3a..L156a4a] goto L156a50;

   }
    procedure [|int|] [|java:util:zip:Inflater.getRemaining|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getRemaining:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156a74.   (@monitorenter v2)
#L156a76.   v0:= v2.[|java:util:zip:Inflater.inLength|] ;
#L156a7a.   v1:= v2.[|java:util:zip:Inflater.inRead|] ;
#L156a7e.   v0:= v0 - v1  @type int;
#L156a80.   (@monitorexit v2)
#L156a82.   return v0;
#L156a84.   v0:= Exception  @type object;
#L156a86.   (@monitorexit v2)
#L156a88.   throw v0;
  catch  [|any|] @[L156a76..L156a7e] goto L156a84;

   }
    procedure [|int|] [|java:util:zip:Inflater.getTotalIn|] ([|java:util:zip:Inflater|] v4 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getTotalIn:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L156aa8.   (@monitorenter v4)
#L156aaa.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v4) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156ab0.   v0:= v4.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156ab4.   call temp:=  [|java:util:zip:Inflater.getTotalInImpl|](v4, v0, v1) @signature [|Ljava/util/zip/Inflater;.getTotalInImpl:(J)J|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156aba.   v0:= temp  @type wide;
#L156abc.    v2:= nan  @length wide32;
#L156ac2.   call temp:=  [|java:lang:Math.min|](v0, v1, v2, v3) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L156ac8.   v0:= temp  @type wide;
#L156aca.   v0:= (int)v0  @type l2i;
#L156acc.   (@monitorexit v4)
#L156ace.   return v0;
#L156ad0.   v0:= Exception  @type object;
#L156ad2.   (@monitorexit v4)
#L156ad4.   throw v0;
  catch  [|any|] @[L156aaa..L156ac8] goto L156ad0;

   }
    procedure [|int|] [|java:util:zip:Inflater.getTotalOut|] ([|java:util:zip:Inflater|] v4 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.getTotalOut:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L156af4.   (@monitorenter v4)
#L156af6.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v4) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156afc.   v0:= v4.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156b00.   call temp:=  [|java:util:zip:Inflater.getTotalOutImpl|](v4, v0, v1) @signature [|Ljava/util/zip/Inflater;.getTotalOutImpl:(J)J|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156b06.   v0:= temp  @type wide;
#L156b08.    v2:= nan  @length wide32;
#L156b0e.   call temp:=  [|java:lang:Math.min|](v0, v1, v2, v3) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L156b14.   v0:= temp  @type wide;
#L156b16.   v0:= (int)v0  @type l2i;
#L156b18.   (@monitorexit v4)
#L156b1a.   return v0;
#L156b1c.   v0:= Exception  @type object;
#L156b1e.   (@monitorexit v4)
#L156b20.   throw v0;
  catch  [|any|] @[L156af6..L156b14] goto L156b1c;

   }
    procedure [|int|] [|java:util:zip:Inflater.inflate|] ([|java:util:zip:Inflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.inflate:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L156b40.   v0:= 0  @length 4;
#L156b42.   v1:= v3.length;
#L156b44.   call temp:=  [|java:util:zip:Inflater.inflate|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Inflater;.inflate:([BII)I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156b4a.   v0:= temp;
#L156b4c.   return v0;

   }
    procedure [|int|] [|java:util:zip:Inflater.inflate|] ([|java:util:zip:Inflater|] v8 @type (this), [|byte|][] v9, [|int|] v10, [|int|] v11) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.inflate:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L156b60.   v7:= 0  @length 4;
#L156b62.   (@monitorenter v8)
#L156b64.   v0:= v9.length;
#L156b66.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v10, v11) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L156b6c.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v8) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156b72.   call temp:=  [|java:util:zip:Inflater.needsInput|](v8) @signature [|Ljava/util/zip/Inflater;.needsInput:()Z|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156b78.   v0:= temp;
#L156b7a.   if v0 == 0 then goto L156b82;
#L156b7e.   (@monitorexit v8)
#L156b80.   return v7;
#L156b82.   v6:= v8.[|java:util:zip:Inflater.needsDictionary|]   @boolean;
#L156b86.   v0:= 0  @length 4;
#L156b88.   v8.[|java:util:zip:Inflater.needsDictionary|]  := v0 @boolean;
#L156b8c.   v4:= v8.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156b90.   v0:= v8  @type object;
#L156b92.   v1:= v9  @type object;
#L156b94.   v2:= v10;
#L156b96.   v3:= v11;
#L156b98.   call temp:=  [|java:util:zip:Inflater.inflateImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Inflater;.inflateImpl:([BIIJ)I|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156b9e.   v7:= temp;
#L156ba0.   v0:= v8.[|java:util:zip:Inflater.needsDictionary|]   @boolean;
#L156ba4.   if v0 == 0 then goto L156b7e;
#L156ba8.   if v6 == 0 then goto L156b7e;
#L156bac.   v0:= new [|java:util:zip:DataFormatException|];
#L156bb0.   v1:= "Needs dictionary" @type (object, string);
#L156bb4.   call temp:=  [|java:util:zip:DataFormatException.<init>|](v0, v1) @signature [|Ljava/util/zip/DataFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:zip:DataFormatException|] @type direct;
#L156bba.   throw v0;
#L156bbc.   v0:= Exception  @type object;
#L156bbe.   (@monitorexit v8)
#L156bc0.   throw v0;
  catch  [|any|] @[L156b64..L156b78] goto L156bbc;
  catch  [|any|] @[L156b82..L156bbc] goto L156bbc;

   }
    procedure [|boolean|] [|java:util:zip:Inflater.needsDictionary|] ([|java:util:zip:Inflater|] v1 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.needsDictionary:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L156be8.   (@monitorenter v1)
#L156bea.   v0:= v1.[|java:util:zip:Inflater.needsDictionary|]   @boolean;
#L156bee.   (@monitorexit v1)
#L156bf0.   return v0;
#L156bf2.   v0:= Exception  @type object;
#L156bf4.   (@monitorexit v1)
#L156bf6.   throw v0;
  catch  [|any|] @[L156bea..L156bee] goto L156bf2;

   }
    procedure [|boolean|] [|java:util:zip:Inflater.needsInput|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.needsInput:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156c14.   (@monitorenter v2)
#L156c16.   v0:= v2.[|java:util:zip:Inflater.inRead|] ;
#L156c1a.   v1:= v2.[|java:util:zip:Inflater.inLength|] ;
#L156c1e.   if v0 != v1 then goto L156c28;
#L156c22.   v0:= 1  @length 4;
#L156c24.   (@monitorexit v2)
#L156c26.   return v0;
#L156c28.   v0:= 0  @length 4;
#L156c2a.   goto L156c24;
#L156c2c.   v0:= Exception  @type object;
#L156c2e.   (@monitorexit v2)
#L156c30.   throw v0;
  catch  [|any|] @[L156c16..L156c1e] goto L156c2c;

   }
    procedure [|void|] [|java:util:zip:Inflater.reset|] ([|java:util:zip:Inflater|] v2 @type (this)) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156c50.   (@monitorenter v2)
#L156c52.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v2) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156c58.   v0:= 0  @length 4;
#L156c5a.   v2.[|java:util:zip:Inflater.finished|]  := v0 @boolean;
#L156c5e.   v0:= 0  @length 4;
#L156c60.   v2.[|java:util:zip:Inflater.needsDictionary|]  := v0 @boolean;
#L156c64.   v0:= 0  @length 4;
#L156c66.   v2.[|java:util:zip:Inflater.inRead|]  := v0;
#L156c6a.   v2.[|java:util:zip:Inflater.inLength|]  := v0;
#L156c6e.   v0:= v2.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156c72.   call temp:=  [|java:util:zip:Inflater.resetImpl|](v2, v0, v1) @signature [|Ljava/util/zip/Inflater;.resetImpl:(J)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156c78.   (@monitorexit v2)
#L156c7a.   return @void ;
#L156c7c.   v0:= Exception  @type object;
#L156c7e.   (@monitorexit v2)
#L156c80.   throw v0;
  catch  [|any|] @[L156c52..L156c78] goto L156c7c;

   }
    procedure [|void|] [|java:util:zip:Inflater.setDictionary|] ([|java:util:zip:Inflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setDictionary:([B)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156ca0.   (@monitorenter v2)
#L156ca2.   v0:= 0  @length 4;
#L156ca4.   v1:= v3.length;
#L156ca6.   call temp:=  [|java:util:zip:Inflater.setDictionary|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Inflater;.setDictionary:([BII)V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156cac.   (@monitorexit v2)
#L156cae.   return @void ;
#L156cb0.   v0:= Exception  @type object;
#L156cb2.   (@monitorexit v2)
#L156cb4.   throw v0;
  catch  [|any|] @[L156ca4..L156cac] goto L156cb0;

   }
    procedure [|void|] [|java:util:zip:Inflater.setDictionary|] ([|java:util:zip:Inflater|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setDictionary:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L156cd4.   (@monitorenter v6)
#L156cd6.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v6) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156cdc.   v0:= v7.length;
#L156cde.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L156ce4.   v4:= v6.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156ce8.   v0:= v6  @type object;
#L156cea.   v1:= v7  @type object;
#L156cec.   v2:= v8;
#L156cee.   v3:= v9;
#L156cf0.   call temp:=  [|java:util:zip:Inflater.setDictionaryImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Inflater;.setDictionaryImpl:([BIIJ)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156cf6.   (@monitorexit v6)
#L156cf8.   return @void ;
#L156cfa.   v0:= Exception  @type object;
#L156cfc.   (@monitorexit v6)
#L156cfe.   throw v0;
  catch  [|any|] @[L156cd6..L156cf6] goto L156cfa;

   }
    procedure [|int|] [|java:util:zip:Inflater.setFileInput|] ([|java:util:zip:Inflater|] v7 @type (this), [|java:io:FileDescriptor|] v8 @type (object), [|long|] v9, [|int|] v11) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setFileInput:(Ljava/io/FileDescriptor;JI)I|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L156d1c.   (@monitorenter v7)
#L156d1e.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v7) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156d24.   v0:= 0  @length 4;
#L156d26.   v7.[|java:util:zip:Inflater.inRead|]  := v0;
#L156d2a.   v5:= v7.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156d2e.   v0:= v7  @type object;
#L156d30.   v1:= v8  @type object;
#L156d32.   v2:= v9  @type wide;
#L156d34.   v4:= v11;
#L156d36.   call temp:=  [|java:util:zip:Inflater.setFileInputImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/zip/Inflater;.setFileInputImpl:(Ljava/io/FileDescriptor;JIJ)I|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156d3c.   v0:= temp;
#L156d3e.   v7.[|java:util:zip:Inflater.inLength|]  := v0;
#L156d42.   v0:= v7.[|java:util:zip:Inflater.inLength|] ;
#L156d46.   (@monitorexit v7)
#L156d48.   return v0;
#L156d4a.   v0:= Exception  @type object;
#L156d4c.   (@monitorexit v7)
#L156d4e.   throw v0;
  catch  [|any|] @[L156d1e..L156d46] goto L156d4a;

   }
    procedure [|void|] [|java:util:zip:Inflater.setInput|] ([|java:util:zip:Inflater|] v2 @type (this), [|byte|][] v3) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setInput:([B)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L156d6c.   (@monitorenter v2)
#L156d6e.   v0:= 0  @length 4;
#L156d70.   v1:= v3.length;
#L156d72.   call temp:=  [|java:util:zip:Inflater.setInput|](v2, v3, v0, v1) @signature [|Ljava/util/zip/Inflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156d78.   (@monitorexit v2)
#L156d7a.   return @void ;
#L156d7c.   v0:= Exception  @type object;
#L156d7e.   (@monitorexit v2)
#L156d80.   throw v0;
  catch  [|any|] @[L156d70..L156d78] goto L156d7c;

   }
    procedure [|void|] [|java:util:zip:Inflater.setInput|] ([|java:util:zip:Inflater|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:util:zip:Inflater|] @signature [|Ljava/util/zip/Inflater;.setInput:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L156da0.   (@monitorenter v6)
#L156da2.   call temp:=  [|java:util:zip:Inflater.checkOpen|](v6) @signature [|Ljava/util/zip/Inflater;.checkOpen:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156da8.   v0:= v7.length;
#L156daa.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L156db0.   v0:= 0  @length 4;
#L156db2.   v6.[|java:util:zip:Inflater.inRead|]  := v0;
#L156db6.   v6.[|java:util:zip:Inflater.inLength|]  := v9;
#L156dba.   v4:= v6.[|java:util:zip:Inflater.streamHandle|]   @wide;
#L156dbe.   v0:= v6  @type object;
#L156dc0.   v1:= v7  @type object;
#L156dc2.   v2:= v8;
#L156dc4.   v3:= v9;
#L156dc6.   call temp:=  [|java:util:zip:Inflater.setInputImpl|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/zip/Inflater;.setInputImpl:([BIIJ)V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156dcc.   (@monitorexit v6)
#L156dce.   return @void ;
#L156dd0.   v0:= Exception  @type object;
#L156dd2.   (@monitorexit v6)
#L156dd4.   throw v0;
  catch  [|any|] @[L156da2..L156dcc] goto L156dd0;

   }
record [|java:util:zip:InflaterOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|] {
      [|byte|][] [|java:util:zip:InflaterOutputStream.buf|]    @AccessFlag PROTECTED_FINAL;
      [|boolean|] [|java:util:zip:InflaterOutputStream.closed|]    @AccessFlag PRIVATE;
      [|java:util:zip:Inflater|] [|java:util:zip:InflaterOutputStream.inf|]    @AccessFlag PROTECTED_FINAL;
   }
      global [|int|] @@[|java:util:zip:InflaterOutputStream.DEFAULT_BUFFER_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:InflaterOutputStream.<init>|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L156df4.   v0:= new [|java:util:zip:Inflater|];
#L156df8.   call temp:=  [|java:util:zip:Inflater.<init>|](v0) @signature [|Ljava/util/zip/Inflater;.<init>:()V|] @classDescriptor [|java:util:zip:Inflater|] @type direct;
#L156dfe.   call temp:=  [|java:util:zip:InflaterOutputStream.<init>|](v1, v2, v0) @signature [|Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Inflater;)V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156e04.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.<init>|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|java:util:zip:Inflater|] v3 @type (object)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Inflater;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L156e18.   v0:= 1024  @length 16;
#L156e1c.   call temp:=  [|java:util:zip:InflaterOutputStream.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Inflater;I)V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156e22.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.<init>|] ([|java:util:zip:InflaterOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|java:util:zip:Inflater|] v4 @type (object), [|int|] v5) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.<init>:(Ljava/io/OutputStream;Ljava/util/zip/Inflater;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L156e34.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L156e3a.   v0:= 0  @length 4;
#L156e3c.   v2.[|java:util:zip:InflaterOutputStream.closed|]  := v0 @boolean;
#L156e40.   if v3 != 0 then goto L156e54;
#L156e44.   v0:= new [|java:lang:NullPointerException|];
#L156e48.   v1:= "out == null" @type (object, string);
#L156e4c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L156e52.   throw v0;
#L156e54.   if v4 != 0 then goto L156e68;
#L156e58.   v0:= new [|java:lang:NullPointerException|];
#L156e5c.   v1:= "inf == null" @type (object, string);
#L156e60.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L156e66.   throw v0;
#L156e68.   if v5 > 0 then goto L156e78;
#L156e6c.   v0:= new [|java:lang:IllegalArgumentException|];
#L156e70.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L156e76.   throw v0;
#L156e78.   v2.[|java:util:zip:InflaterOutputStream.inf|]  := v4 @type object;
#L156e7c.   v0:= new [|byte|][v5];
#L156e80.   v2.[|java:util:zip:InflaterOutputStream.buf|]  := v0 @type object;
#L156e84.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.checkClosed|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L156e98.   v0:= v1.[|java:util:zip:InflaterOutputStream.closed|]   @boolean;
#L156e9c.   if v0 == 0 then goto L156eac;
#L156ea0.   v0:= new [|java:io:IOException|];
#L156ea4.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L156eaa.   throw v0;
#L156eac.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.write|] ([|java:util:zip:InflaterOutputStream|] v5 @type (this)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.write:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L156ec0.   v2:= v5.[|java:util:zip:InflaterOutputStream.inf|]   @type object;
#L156ec4.   v3:= v5.[|java:util:zip:InflaterOutputStream.buf|]   @type object;
#L156ec8.   call temp:=  [|java:util:zip:Inflater.inflate|](v2, v3) @signature [|Ljava/util/zip/Inflater;.inflate:([B)I|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156ece.   v1:= temp;
#L156ed0.   if v1 <= 0 then goto L156ef4;
#L156ed4.   v2:= v5.[|java:util:zip:InflaterOutputStream.out|]   @type object;
#L156ed8.   v3:= v5.[|java:util:zip:InflaterOutputStream.buf|]   @type object;
#L156edc.   v4:= 0  @length 4;
#L156ede.   call temp:=  [|java:io:OutputStream.write|](v2, v3, v4, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156ee4.   goto L156ec0;
#L156ee6.   v0:= Exception  @type object;
#L156ee8.   v2:= new [|java:util:zip:ZipException|];
#L156eec.   call temp:=  [|java:util:zip:ZipException.<init>|](v2) @signature [|Ljava/util/zip/ZipException;.<init>:()V|] @classDescriptor [|java:util:zip:ZipException|] @type direct;
#L156ef2.   throw v2;
#L156ef4.   return @void ;
  catch  [|java:util:zip:DataFormatException|] @[L156ec0..L156ee4] goto L156ee6;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.close|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156f18.   v0:= v1.[|java:util:zip:InflaterOutputStream.closed|]   @boolean;
#L156f1c.   if v0 != 0 then goto L156f40;
#L156f20.   call temp:=  [|java:util:zip:InflaterOutputStream.finish|](v1) @signature [|Ljava/util/zip/InflaterOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type virtual;
#L156f26.   v0:= v1.[|java:util:zip:InflaterOutputStream.inf|]   @type object;
#L156f2a.   call temp:=  [|java:util:zip:Inflater.end|](v0) @signature [|Ljava/util/zip/Inflater;.end:()V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156f30.   v0:= v1.[|java:util:zip:InflaterOutputStream.out|]   @type object;
#L156f34.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156f3a.   v0:= 1  @length 4;
#L156f3c.   v1.[|java:util:zip:InflaterOutputStream.closed|]  := v0 @boolean;
#L156f40.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.finish|] ([|java:util:zip:InflaterOutputStream|] v0 @type (this)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.finish:()V|] @Access PUBLIC {
      local temp ;
      
#L156f54.   call temp:=  [|java:util:zip:InflaterOutputStream.checkClosed|](v0) @signature [|Ljava/util/zip/InflaterOutputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156f5a.   call temp:=  [|java:util:zip:InflaterOutputStream.write|](v0) @signature [|Ljava/util/zip/InflaterOutputStream;.write:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156f60.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.flush|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this)) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156f74.   call temp:=  [|java:util:zip:InflaterOutputStream.finish|](v1) @signature [|Ljava/util/zip/InflaterOutputStream;.finish:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type virtual;
#L156f7a.   v0:= v1.[|java:util:zip:InflaterOutputStream.out|]   @type object;
#L156f7e.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L156f84.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.write|] ([|java:util:zip:InflaterOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L156f98.   v3:= 1  @length 4;
#L156f9a.   v2:= 0  @length 4;
#L156f9c.   v0:= new [|byte|][v3];
#L156fa0.   v1:= (byte)v5  @type i2b;
#L156fa2.   v0[v2]:= v1  @byte;
#L156fa6.   call temp:=  [|java:util:zip:InflaterOutputStream.write|](v4, v0, v2, v3) @signature [|Ljava/util/zip/InflaterOutputStream;.write:([BII)V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type virtual;
#L156fac.   return @void ;

   }
    procedure [|void|] [|java:util:zip:InflaterOutputStream.write|] ([|java:util:zip:InflaterOutputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:util:zip:InflaterOutputStream|] @signature [|Ljava/util/zip/InflaterOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L156fc0.   call temp:=  [|java:util:zip:InflaterOutputStream.checkClosed|](v1) @signature [|Ljava/util/zip/InflaterOutputStream;.checkClosed:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156fc6.   v0:= v2.length;
#L156fc8.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L156fce.   v0:= v1.[|java:util:zip:InflaterOutputStream.inf|]   @type object;
#L156fd2.   call temp:=  [|java:util:zip:Inflater.setInput|](v0, v2, v3, v4) @signature [|Ljava/util/zip/Inflater;.setInput:([BII)V|] @classDescriptor [|java:util:zip:Inflater|] @type virtual;
#L156fd8.   call temp:=  [|java:util:zip:InflaterOutputStream.write|](v1) @signature [|Ljava/util/zip/InflaterOutputStream;.write:()V|] @classDescriptor [|java:util:zip:InflaterOutputStream|] @type direct;
#L156fde.   return @void ;

   }
record [|java:util:zip:ZipError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:InternalError|] {
   }
      global [|long|] @@[|java:util:zip:ZipError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:zip:ZipError.<init>|] ([|java:util:zip:ZipError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:zip:ZipError|] @signature [|Ljava/util/zip/ZipError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L156ff0.   call temp:=  [|java:lang:InternalError.<init>|](v0, v1) @signature [|Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L156ff6.   return @void ;

   }
record [|java:util:zip:ZipFile$1|]  @type class @AccessFlag  extends  [|java:util:Enumeration|] {
      [|java:util:zip:ZipFile|] [|java:util:zip:ZipFile$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:util:Iterator|] [|java:util:zip:ZipFile$1.val$iterator|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:zip:ZipFile$1.<init>|] ([|java:util:zip:ZipFile$1|] v0 @type (this), [|java:util:zip:ZipFile|] v1 @type (object), [|java:util:Iterator|] v2 @type (object)) @owner [|java:util:zip:ZipFile$1|] @signature [|Ljava/util/zip/ZipFile$1;.<init>:(Ljava/util/zip/ZipFile;Ljava/util/Iterator;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L157008.   v0.[|java:util:zip:ZipFile$1.this$0|]  := v1 @type object;
#L15700c.   v0.[|java:util:zip:ZipFile$1.val$iterator|]  := v2 @type object;
#L157010.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L157016.   return @void ;

   }
    procedure [|boolean|] [|java:util:zip:ZipFile$1.hasMoreElements|] ([|java:util:zip:ZipFile$1|] v1 @type (this)) @owner [|java:util:zip:ZipFile$1|] @signature [|Ljava/util/zip/ZipFile$1;.hasMoreElements:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L157028.   v0:= v1.[|java:util:zip:ZipFile$1.this$0|]   @type object;
#L15702c.   call temp:=  [|java:util:zip:ZipFile.access$000|](v0) @signature [|Ljava/util/zip/ZipFile;.access$000:(Ljava/util/zip/ZipFile;)V|] @classDescriptor [|java:util:zip:ZipFile|] @type static;
#L157032.   v0:= v1.[|java:util:zip:ZipFile$1.val$iterator|]   @type object;
#L157036.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15703c.   v0:= temp;
#L15703e.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:zip:ZipFile$1.nextElement|] ([|java:util:zip:ZipFile$1|] v1 @type (this)) @owner [|java:util:zip:ZipFile$1|] @signature [|Ljava/util/zip/ZipFile$1;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L157050.   call temp:=  [|java:util:zip:ZipFile$1.nextElement|](v1) @signature [|Ljava/util/zip/ZipFile$1;.nextElement:()Ljava/util/zip/ZipEntry;|] @classDescriptor [|java:util:zip:ZipFile$1|] @type virtual;
#L157056.   v0:= temp  @type object;
#L157058.   return v0  @type object;

   }
    procedure [|java:util:zip:ZipEntry|] [|java:util:zip:ZipFile$1.nextElement|] ([|java:util:zip:ZipFile$1|] v1 @type (this)) @owner [|java:util:zip:ZipFile$1|] @signature [|Ljava/util/zip/ZipFile$1;.nextElement:()Ljava/util/zip/ZipEntry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15706c.   v0:= v1.[|java:util:zip:ZipFile$1.this$0|]   @type object;
#L157070.   call temp:=  [|java:util:zip:ZipFile.access$000|](v0) @signature [|Ljava/util/zip/ZipFile;.access$000:(Ljava/util/zip/ZipFile;)V|] @classDescriptor [|java:util:zip:ZipFile|] @type static;
#L157076.   v0:= v1.[|java:util:zip:ZipFile$1.val$iterator|]   @type object;
#L15707a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L157080.   v0:= temp  @type object;
#L157082.   v0:= ([|java:util:zip:ZipEntry|])v0;
#L157086.   return v0  @type object;

   }
record [|java:util:zip:ZipFile$RAFStream|]  @type class @AccessFlag   extends [|java:io:InputStream|] {
      [|long|] [|java:util:zip:ZipFile$RAFStream.mLength|]    @AccessFlag ;
      [|long|] [|java:util:zip:ZipFile$RAFStream.mOffset|]    @AccessFlag ;
      [|java:io:RandomAccessFile|] [|java:util:zip:ZipFile$RAFStream.mSharedRaf|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:zip:ZipFile$RAFStream.<init>|] ([|java:util:zip:ZipFile$RAFStream|] v2 @type (this), [|java:io:RandomAccessFile|] v3 @type (object), [|long|] v4) @owner [|java:util:zip:ZipFile$RAFStream|] @signature [|Ljava/util/zip/ZipFile$RAFStream;.<init>:(Ljava/io/RandomAccessFile;J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L157098.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L15709e.   v2.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]  := v3 @type object;
#L1570a2.   v2.[|java:util:zip:ZipFile$RAFStream.mOffset|]  := v4 @wide;
#L1570a6.   call temp:=  [|java:io:RandomAccessFile.length|](v3) @signature [|Ljava/io/RandomAccessFile;.length:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L1570ac.   v0:= temp  @type wide;
#L1570ae.   v2.[|java:util:zip:ZipFile$RAFStream.mLength|]  := v0 @wide;
#L1570b2.   return @void ;

   }
    procedure [|int|] [|java:util:zip:ZipFile$RAFStream.available|] ([|java:util:zip:ZipFile$RAFStream|] v4 @type (this)) @owner [|java:util:zip:ZipFile$RAFStream|] @signature [|Ljava/util/zip/ZipFile$RAFStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1570c4.   v0:= v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L1570c8.   v2:= v4.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L1570cc.   v0:= cmp(v0,v2);
#L1570d0.   if v0 >= 0 then goto L1570d8;
#L1570d4.   v0:= 1  @length 4;
#L1570d6.   return v0;
#L1570d8.   v0:= 0  @length 4;
#L1570da.   goto L1570d6;

   }
    procedure [|int|] [|java:util:zip:ZipFile$RAFStream.read|] ([|java:util:zip:ZipFile$RAFStream|] v1 @type (this)) @owner [|java:util:zip:ZipFile$RAFStream|] @signature [|Ljava/util/zip/ZipFile$RAFStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1570ec.   call temp:=  [|libcore:io:Streams.readSingleByte|](v1) @signature [|Llibcore/io/Streams;.readSingleByte:(Ljava/io/InputStream;)I|] @classDescriptor [|libcore:io:Streams|] @type static;
#L1570f2.   v0:= temp;
#L1570f4.   return v0;

   }
    procedure [|int|] [|java:util:zip:ZipFile$RAFStream.read|] ([|java:util:zip:ZipFile$RAFStream|] v9 @type (this), [|byte|][] v10, [|int|] v11, [|int|] v12) @owner [|java:util:zip:ZipFile$RAFStream|] @signature [|Ljava/util/zip/ZipFile$RAFStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L157108.   v2:= v9.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]   @type object;
#L15710c.   (@monitorenter v2)
#L15710e.   v1:= v9.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]   @type object;
#L157112.   v3:= v9.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L157116.   call temp:=  [|java:io:RandomAccessFile.seek|](v1, v3, v4) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L15711c.   v3:= (long)v12  @type i2l;
#L15711e.   v5:= v9.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L157122.   v7:= v9.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L157126.   v5:= v5 - v7  @type long;
#L157128.   v1:= cmp(v3,v5);
#L15712c.   if v1 <= 0 then goto L15713c;
#L157130.   v3:= v9.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L157134.   v5:= v9.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L157138.   v3:= v3 - v5  @type long;
#L15713a.   v12:= (int)v3  @type l2i;
#L15713c.   v1:= v9.[|java:util:zip:ZipFile$RAFStream.mSharedRaf|]   @type object;
#L157140.   call temp:=  [|java:io:RandomAccessFile.read|](v1, v10, v11, v12) @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L157146.   v0:= temp;
#L157148.   if v0 <= 0 then goto L15715c;
#L15714c.   v3:= v9.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L157150.   v5:= (long)v0  @type i2l;
#L157152.   v3:= v3 + v5  @type long;
#L157154.   v9.[|java:util:zip:ZipFile$RAFStream.mOffset|]  := v3 @wide;
#L157158.   (@monitorexit v2)
#L15715a.   return v0;
#L15715c.   v0:= -1  @length 4;
#L15715e.   (@monitorexit v2)
#L157160.   goto L15715a;
#L157162.   v1:= Exception  @type object;
#L157164.   (@monitorexit v2)
#L157166.   throw v1;
  catch  [|any|] @[L15710e..L157166] goto L157162;

   }
    procedure [|long|] [|java:util:zip:ZipFile$RAFStream.skip|] ([|java:util:zip:ZipFile$RAFStream|] v4 @type (this), [|long|] v5) @owner [|java:util:zip:ZipFile$RAFStream|] @signature [|Ljava/util/zip/ZipFile$RAFStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L157184.   v0:= v4.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L157188.   v2:= v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L15718c.   v0:= v0 - v2  @type long;
#L15718e.   v0:= cmp(v5,v0);
#L157192.   if v0 <= 0 then goto L1571a2;
#L157196.   v0:= v4.[|java:util:zip:ZipFile$RAFStream.mLength|]   @wide;
#L15719a.   v2:= v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L15719e.   v5:= v0 - v2  @type long;
#L1571a2.   v0:= v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]   @wide;
#L1571a6.   v0:= v0 + v5  @type long;
#L1571a8.   v4.[|java:util:zip:ZipFile$RAFStream.mOffset|]  := v0 @wide;
#L1571ac.   return v5  @type wide;

   }
record [|java:util:zip:ZipFile$ZipInflaterInputStream|]  @type class @AccessFlag   extends [|java:util:zip:InflaterInputStream|] {
      [|long|] [|java:util:zip:ZipFile$ZipInflaterInputStream.bytesRead|]    @AccessFlag ;
      [|java:util:zip:ZipEntry|] [|java:util:zip:ZipFile$ZipInflaterInputStream.entry|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:zip:ZipFile$ZipInflaterInputStream.<init>|] ([|java:util:zip:ZipFile$ZipInflaterInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|java:util:zip:Inflater|] v4 @type (object), [|int|] v5, [|java:util:zip:ZipEntry|] v6 @type (object)) @owner [|java:util:zip:ZipFile$ZipInflaterInputStream|] @signature [|Ljava/util/zip/ZipFile$ZipInflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;ILjava/util/zip/ZipEntry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1571c0.   call temp:=  [|java:util:zip:InflaterInputStream.<init>|](v2, v3, v4, v5) @signature [|Ljava/util/zip/InflaterInputStream;.<init>:(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type direct;
#L1571c6.   v0:= 0  @length wide16;
#L1571ca.   v2.[|java:util:zip:ZipFile$ZipInflaterInputStream.bytesRead|]  := v0 @wide;
#L1571ce.   v2.[|java:util:zip:ZipFile$ZipInflaterInputStream.entry|]  := v6 @type object;
#L1571d2.   return @void ;

   }
    procedure [|int|] [|java:util:zip:ZipFile$ZipInflaterInputStream.available|] ([|java:util:zip:ZipFile$ZipInflaterInputStream|] v4 @type (this)) @owner [|java:util:zip:ZipFile$ZipInflaterInputStream|] @signature [|Ljava/util/zip/ZipFile$ZipInflaterInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1571e4.   v0:= 0  @length 4;
#L1571e6.   v1:= v4.[|java:util:zip:ZipFile$ZipInflaterInputStream.closed|]   @boolean;
#L1571ea.   if v1 == 0 then goto L1571f0;
#L1571ee.   return v0;
#L1571f0.   call temp:=  [|java:util:zip:InflaterInputStream.available|](v4) @signature [|Ljava/util/zip/InflaterInputStream;.available:()I|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type super;
#L1571f6.   v1:= temp;
#L1571f8.   if v1 == 0 then goto L1571ee;
#L1571fc.   v0:= v4.[|java:util:zip:ZipFile$ZipInflaterInputStream.entry|]   @type object;
#L157200.   call temp:=  [|java:util:zip:ZipEntry.getSize|](v0) @signature [|Ljava/util/zip/ZipEntry;.getSize:()J|] @classDescriptor [|java:util:zip:ZipEntry|] @type virtual;
#L157206.   v0:= temp  @type wide;
#L157208.   v2:= v4.[|java:util:zip:ZipFile$ZipInflaterInputStream.bytesRead|]   @wide;
#L15720c.   v0:= v0 - v2  @type long;
#L15720e.   v0:= (int)v0  @type l2i;
#L157210.   goto L1571ee;

   }
    procedure [|int|] [|java:util:zip:ZipFile$ZipInflaterInputStream.read|] ([|java:util:zip:ZipFile$ZipInflaterInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|java:util:zip:ZipFile$ZipInflaterInputStream|] @signature [|Ljava/util/zip/ZipFile$ZipInflaterInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L157224.   call temp:=  [|java:util:zip:InflaterInputStream.read|](v5, v6, v7, v8) @signature [|Ljava/util/zip/InflaterInputStream;.read:([BII)I|] @classDescriptor [|java:util:zip:InflaterInputStream|] @type super;
#L15722a.   v0:= temp;
#L15722c.   v1:= -1  @length 4;
#L15722e.   if v0 == v1 then goto L15723e;
#L157232.   v1:= v5.[|java:util:zip:ZipFile$ZipInflaterInputStream.bytesRead|]   @wide;
#L157236.   v3:= (long)v0  @type i2l;
#L157238.   v1:= v1 + v3  @type long;
#L15723a.   v5.[|java:util:zip:ZipFile$ZipInflaterInputStream.bytesRead|]  := v1 @wide;
#L15723e.   return v0;

   }
record [|javax:crypto:BadPaddingException|]  @type class @AccessFlag PUBLIC  extends [|java:security:GeneralSecurityException|] {
   }
      global [|long|] @@[|javax:crypto:BadPaddingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:BadPaddingException.<init>|] ([|javax:crypto:BadPaddingException|] v0 @type (this)) @owner [|javax:crypto:BadPaddingException|] @signature [|Ljavax/crypto/BadPaddingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L157250.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0) @signature [|Ljava/security/GeneralSecurityException;.<init>:()V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L157256.   return @void ;

   }
    procedure [|void|] [|javax:crypto:BadPaddingException.<init>|] ([|javax:crypto:BadPaddingException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:BadPaddingException|] @signature [|Ljavax/crypto/BadPaddingException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L157268.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0, v1) @signature [|Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15726e.   return @void ;

   }
record [|javax:crypto:Cipher|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|javax:crypto:Cipher.mode|]    @AccessFlag PRIVATE;
      [|java:security:Provider|] [|javax:crypto:Cipher.provider|]    @AccessFlag PRIVATE;
      [|javax:crypto:CipherSpi|] [|javax:crypto:Cipher.spiImpl|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|javax:crypto:Cipher.transformation|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|javax:crypto:Cipher.DECRYPT_MODE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.ENCRYPT_MODE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:Cipher.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.PRIVATE_KEY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.PUBLIC_KEY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.SECRET_KEY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|javax:crypto:Cipher.SERVICE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.UNWRAP_MODE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|javax:crypto:Cipher.WRAP_MODE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:security:SecureRandom|] @@[|javax:crypto:Cipher.secureRandom|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|javax:crypto:Cipher.<clinit>|] () @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L157280.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L157284.   v1:= "Cipher" @type (object, string);
#L157288.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L15728e.   @@[|javax:crypto:Cipher.ENGINE|] := v0  @type object;
#L157292.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.<init>|] ([|javax:crypto:Cipher|] v2 @type (this), [|javax:crypto:CipherSpi|] v3 @type (object), [|java:security:Provider|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.<init>:(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1572a4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1572aa.   if v3 != 0 then goto L1572be;
#L1572ae.   v0:= new [|java:lang:NullPointerException|];
#L1572b2.   v1:= "cipherSpi == null" @type (object, string);
#L1572b6.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1572bc.   throw v0;
#L1572be.   v0:= instanceof @varname v3 @type [|org:apache:harmony:crypto:internal:NullCipherSpi|];
#L1572c2.   if v0 != 0 then goto L1572da;
#L1572c6.   if v4 != 0 then goto L1572da;
#L1572ca.   v0:= new [|java:lang:NullPointerException|];
#L1572ce.   v1:= "provider == null" @type (object, string);
#L1572d2.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1572d8.   throw v0;
#L1572da.   v2.[|javax:crypto:Cipher.provider|]  := v4 @type object;
#L1572de.   v2.[|javax:crypto:Cipher.transformation|]  := v5 @type object;
#L1572e2.   v2.[|javax:crypto:Cipher.spiImpl|]  := v3 @type object;
#L1572e6.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.checkInputOffsetAndCount|] ([|int|] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.checkInputOffsetAndCount:(III)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1572f8.   v0:= v4 ^| v5  @type int;
#L1572fc.   if v0 < 0 then goto L15730c;
#L157300.   if v4 > v3 then goto L15730c;
#L157304.   v0:= v3 - v4  @type int;
#L157308.   if v0 >= v5 then goto L157366;
#L15730c.   v0:= new [|java:lang:IllegalArgumentException|];
#L157310.   v1:= new [|java:lang:StringBuilder|];
#L157314.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15731a.   v2:= "input.length=" @type (object, string);
#L15731e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157324.   v1:= temp  @type object;
#L157326.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15732c.   v1:= temp  @type object;
#L15732e.   v2:= "; inputOffset=" @type (object, string);
#L157332.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157338.   v1:= temp  @type object;
#L15733a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157340.   v1:= temp  @type object;
#L157342.   v2:= "; inputLen=" @type (object, string);
#L157346.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15734c.   v1:= temp  @type object;
#L15734e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157354.   v1:= temp  @type object;
#L157356.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15735c.   v1:= temp  @type object;
#L15735e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157364.   throw v0;
#L157366.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.checkMode|] ([|javax:crypto:Cipher|] v3 @type (this), [|int|] v4) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.checkMode:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L157378.   v0:= 1  @length 4;
#L15737a.   if v4 == v0 then goto L1573c2;
#L15737e.   v0:= 2  @length 4;
#L157380.   if v4 == v0 then goto L1573c2;
#L157384.   v0:= 4  @length 4;
#L157386.   if v4 == v0 then goto L1573c2;
#L15738a.   v0:= 3  @length 4;
#L15738c.   if v4 == v0 then goto L1573c2;
#L157390.   v0:= new [|java:security:InvalidParameterException|];
#L157394.   v1:= new [|java:lang:StringBuilder|];
#L157398.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15739e.   v2:= "Invalid mode: " @type (object, string);
#L1573a2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1573a8.   v1:= temp  @type object;
#L1573aa.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1573b0.   v1:= temp  @type object;
#L1573b2.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1573b8.   v1:= temp  @type object;
#L1573ba.   call temp:=  [|java:security:InvalidParameterException.<init>|](v0, v1) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1573c0.   throw v0;
#L1573c2.   return @void ;

   }
    procedure [|java:lang:String|][] [|javax:crypto:Cipher.checkTransformation|] ([|java:lang:String|] v8 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.checkTransformation:(Ljava/lang/String;)[Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1573d4.   v7:= 3  @length 4;
#L1573d6.   v6:= 2  @length 4;
#L1573d8.   v5:= 1  @length 4;
#L1573da.   v4:= "/" @type (object, string);
#L1573de.   call temp:=  [|java:lang:String.startsWith|](v8, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1573e4.   v4:= temp;
#L1573e6.   if v4 == 0 then goto L1573f2;
#L1573ea.   call temp:=  [|java:lang:String.substring|](v8, v5) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1573f0.   v8:= temp  @type object;
#L1573f2.   v4:= "/" @type (object, string);
#L1573f6.   call temp:=  [|java:lang:String.split|](v8, v4) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1573fc.   v2:= temp  @type object;
#L1573fe.   v4:= v2.length;
#L157400.   if v4 <= v7 then goto L15740e;
#L157404.   call temp:=  [|javax:crypto:Cipher.invalidTransformation|](v8) @signature [|Ljavax/crypto/Cipher;.invalidTransformation:(Ljava/lang/String;)Ljava/security/NoSuchAlgorithmException;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15740a.   v4:= temp  @type object;
#L15740c.   throw v4;
#L15740e.   v3:= new [|java:lang:String|][v7];
#L157412.   v0:= 0  @length 4;
#L157414.   v4:= v2.length;
#L157416.   if v0 >= v4 then goto L15743c;
#L15741a.   v4:= v2[v0]  @type object;
#L15741e.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L157424.   v1:= temp  @type object;
#L157426.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15742c.   v4:= temp;
#L15742e.   if v4 != 0 then goto L157436;
#L157432.   v3[v0]:= v1  @type object;
#L157436.   v0:= v0 + 1;
#L15743a.   goto L157414;
#L15743c.   v4:= 0  @length 4;
#L15743e.   v4:= v3[v4]  @type object;
#L157442.   if v4 != 0 then goto L157450;
#L157446.   call temp:=  [|javax:crypto:Cipher.invalidTransformation|](v8) @signature [|Ljavax/crypto/Cipher;.invalidTransformation:(Ljava/lang/String;)Ljava/security/NoSuchAlgorithmException;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15744c.   v4:= temp  @type object;
#L15744e.   throw v4;
#L157450.   v4:= v3[v5]  @type object;
#L157454.   if v4 != 0 then goto L157460;
#L157458.   v4:= v3[v6]  @type object;
#L15745c.   if v4 == 0 then goto L15747a;
#L157460.   v4:= v3[v5]  @type object;
#L157464.   if v4 == 0 then goto L157470;
#L157468.   v4:= v3[v6]  @type object;
#L15746c.   if v4 != 0 then goto L15747a;
#L157470.   call temp:=  [|javax:crypto:Cipher.invalidTransformation|](v8) @signature [|Ljavax/crypto/Cipher;.invalidTransformation:(Ljava/lang/String;)Ljava/security/NoSuchAlgorithmException;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L157476.   v4:= temp  @type object;
#L157478.   throw v4;
#L15747a.   return v3  @type object;

   }
    procedure [|javax:crypto:Cipher|] [|javax:crypto:Cipher.getCipher|] ([|java:lang:String|] v16 @type (object), [|java:security:Provider|] v17 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getCipher:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @Access PRIVATE_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L15748c.   v13:= new [|javax:crypto:Cipher|];
#L157490.   (@monitorenter v13)
#L157492.   if v16 == 0 then goto L1574a2;
#L157496.   call temp:=  [|java:lang:String.isEmpty|](v16) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15749c.   v12:= temp;
#L15749e.   if v12 == 0 then goto L1574b2;
#L1574a2.   call temp:=  [|javax:crypto:Cipher.invalidTransformation|](v16) @signature [|Ljavax/crypto/Cipher;.invalidTransformation:(Ljava/lang/String;)Ljava/security/NoSuchAlgorithmException;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1574a8.   v12:= temp  @type object;
#L1574aa.   throw v12;
#L1574ac.   v12:= Exception  @type object;
#L1574ae.   (@monitorexit v13)
#L1574b0.   throw v12;
#L1574b2.   call temp:=  [|javax:crypto:Cipher.checkTransformation|](v16) @signature [|Ljavax/crypto/Cipher;.checkTransformation:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1574b8.   v11:= temp  @type object;
#L1574ba.   v8:= 0  @length 4;
#L1574bc.   v7:= 0  @length 4;
#L1574be.   v5:= 0  @length 4;
#L1574c0.   v4:= v17  @type object;
#L1574c4.   v12:= 1  @length 4;
#L1574c6.   v12:= v11[v12]  @type object;
#L1574ca.   if v12 != 0 then goto L15752e;
#L1574ce.   v12:= 2  @length 4;
#L1574d0.   v12:= v11[v12]  @type object;
#L1574d4.   if v12 != 0 then goto L15752e;
#L1574d8.   if v17 != 0 then goto L157512;
#L1574dc.   v12:= @@[|javax:crypto:Cipher.ENGINE|]   @type object;
#L1574e0.   v14:= 0  @length 4;
#L1574e2.   v14:= v11[v14]  @type object;
#L1574e6.   v15:= 0  @length 4;
#L1574e8.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v12, v14, v15) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L1574ee.   v9:= temp  @type object;
#L1574f0.   v5:= v9.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L1574f4.   v4:= v9.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L1574f8.   v2:= v5  @type object;
#L1574fa.   if v2 == 0 then goto L157502;
#L1574fe.   if v4 != 0 then goto L1576a0;
#L157502.   v12:= new [|java:security:NoSuchAlgorithmException|];
#L157506.   v0:= v16  @type object;
#L15750a.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v12, v0) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L157510.   throw v12;
#L157512.   v12:= @@[|javax:crypto:Cipher.ENGINE|]   @type object;
#L157516.   v14:= 0  @length 4;
#L157518.   v14:= v11[v14]  @type object;
#L15751c.   v15:= 0  @length 4;
#L15751e.   v0:= v17  @type object;
#L157522.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v12, v14, v0, v15) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L157528.   v5:= temp  @type object;
#L15752a.   v2:= v5  @type object;
#L15752c.   goto L1574fa;
#L15752e.   v12:= 4  @length 4;
#L157530.   v10:= new [|java:lang:String|][v12];
#L157534.   v12:= 0  @length 4;
#L157536.   v14:= new [|java:lang:StringBuilder|];
#L15753a.   call temp:=  [|java:lang:StringBuilder.<init>|](v14) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L157540.   v15:= 0  @length 4;
#L157542.   v15:= v11[v15]  @type object;
#L157546.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15754c.   v14:= temp  @type object;
#L15754e.   v15:= "/" @type (object, string);
#L157552.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157558.   v14:= temp  @type object;
#L15755a.   v15:= 1  @length 4;
#L15755c.   v15:= v11[v15]  @type object;
#L157560.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157566.   v14:= temp  @type object;
#L157568.   v15:= "/" @type (object, string);
#L15756c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157572.   v14:= temp  @type object;
#L157574.   v15:= 2  @length 4;
#L157576.   v15:= v11[v15]  @type object;
#L15757a.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157580.   v14:= temp  @type object;
#L157582.   call temp:=  [|java:lang:StringBuilder.toString|](v14) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157588.   v14:= temp  @type object;
#L15758a.   v10[v12]:= v14  @type object;
#L15758e.   v12:= 1  @length 4;
#L157590.   v14:= new [|java:lang:StringBuilder|];
#L157594.   call temp:=  [|java:lang:StringBuilder.<init>|](v14) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15759a.   v15:= 0  @length 4;
#L15759c.   v15:= v11[v15]  @type object;
#L1575a0.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575a6.   v14:= temp  @type object;
#L1575a8.   v15:= "/" @type (object, string);
#L1575ac.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575b2.   v14:= temp  @type object;
#L1575b4.   v15:= 1  @length 4;
#L1575b6.   v15:= v11[v15]  @type object;
#L1575ba.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575c0.   v14:= temp  @type object;
#L1575c2.   call temp:=  [|java:lang:StringBuilder.toString|](v14) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575c8.   v14:= temp  @type object;
#L1575ca.   v10[v12]:= v14  @type object;
#L1575ce.   v12:= 2  @length 4;
#L1575d0.   v14:= new [|java:lang:StringBuilder|];
#L1575d4.   call temp:=  [|java:lang:StringBuilder.<init>|](v14) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1575da.   v15:= 0  @length 4;
#L1575dc.   v15:= v11[v15]  @type object;
#L1575e0.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575e6.   v14:= temp  @type object;
#L1575e8.   v15:= "//" @type (object, string);
#L1575ec.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1575f2.   v14:= temp  @type object;
#L1575f4.   v15:= 2  @length 4;
#L1575f6.   v15:= v11[v15]  @type object;
#L1575fa.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157600.   v14:= temp  @type object;
#L157602.   call temp:=  [|java:lang:StringBuilder.toString|](v14) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157608.   v14:= temp  @type object;
#L15760a.   v10[v12]:= v14  @type object;
#L15760e.   v12:= 3  @length 4;
#L157610.   v14:= 0  @length 4;
#L157612.   v14:= v11[v14]  @type object;
#L157616.   v10[v12]:= v14  @type object;
#L15761a.   v6:= 0  @length 4;
#L15761c.   v12:= v10.length;
#L15761e.   if v6 >= v12 then goto L157640;
#L157622.   if v17 != 0 then goto L15764c;
#L157626.   v12:= @@[|javax:crypto:Cipher.ENGINE|]   @type object;
#L15762a.   v14:= v10[v6]  @type object;
#L15762e.   v15:= 0  @length 4;
#L157630.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v12, v14, v15) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L157636.   v9:= temp  @type object;
#L157638.   v5:= v9.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L15763c.   v4:= v9.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L157640.   goto L157704;
#L157646.   v2:= v5  @type object;
#L157648.   goto L1574fa;
#L15764c.   v12:= @@[|javax:crypto:Cipher.ENGINE|]   @type object;
#L157650.   v14:= v10[v6]  @type object;
#L157654.   v15:= 0  @length 4;
#L157656.   v0:= v17  @type object;
#L15765a.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v12, v14, v0, v15) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L157660.   v5:= temp  @type object;
#L157662.   goto L157640;
#L157664.   v3:= Exception  @type object;
#L157666.   v12:= v10.length;
#L157668.   v12:= v12 + -1;
#L15766c.   if v6 != v12 then goto L157680;
#L157670.   v12:= new [|java:security:NoSuchAlgorithmException|];
#L157674.   v0:= v16  @type object;
#L157678.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v12, v0, v3) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15767e.   throw v12;
#L157680.   v6:= v6 + 1;
#L157684.   goto L15761c;
#L157686.   v8:= 1  @length 4;
#L157688.   v2:= v5  @type object;
#L15768a.   goto L1574fa;
#L15768e.   v7:= 1  @length 4;
#L157690.   v2:= v5  @type object;
#L157692.   goto L1574fa;
#L157696.   v8:= 1  @length 4;
#L157698.   v7:= 1  @length 4;
#L15769a.   v2:= v5  @type object;
#L15769c.   goto L1574fa;
#L1576a0.   v12:= instanceof @varname v2 @type [|javax:crypto:CipherSpi|];
#L1576a4.   if v12 != 0 then goto L1576c4;
#L1576a8.   v12:= new [|java:security:NoSuchAlgorithmException|];
#L1576ac.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1576b2.   v14:= temp  @type object;
#L1576b4.   call temp:=  [|java:lang:Class.getName|](v14) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1576ba.   v14:= temp  @type object;
#L1576bc.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v12, v14) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1576c2.   throw v12;
#L1576c4.   v2:= ([|javax:crypto:CipherSpi|])v2;
#L1576c8.   v1:= new [|javax:crypto:Cipher|];
#L1576cc.   v0:= v16  @type object;
#L1576d0.   call temp:=  [|javax:crypto:Cipher.<init>|](v1, v2, v4, v0) @signature [|Ljavax/crypto/Cipher;.<init>:(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L1576d6.   if v7 == 0 then goto L1576ea;
#L1576da.   v12:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L1576de.   v14:= 1  @length 4;
#L1576e0.   v14:= v11[v14]  @type object;
#L1576e4.   call temp:=  [|javax:crypto:CipherSpi.engineSetMode|](v12, v14) @signature [|Ljavax/crypto/CipherSpi;.engineSetMode:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1576ea.   if v8 == 0 then goto L1576fe;
#L1576ee.   v12:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L1576f2.   v14:= 2  @length 4;
#L1576f4.   v14:= v11[v14]  @type object;
#L1576f8.   call temp:=  [|javax:crypto:CipherSpi.engineSetPadding|](v12, v14) @signature [|Ljavax/crypto/CipherSpi;.engineSetPadding:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1576fe.   (@monitorexit v13)
#L157700.   return v1  @type object;
#L157702.   
#L157704.   switch  v6
                 | 1 => goto L157686
                 | 2 => goto L15768e
                 | 3 => goto L157696
                 | => goto L157646;
  catch  [|any|] @[L157496..L1574ac] goto L1574ac;
  catch  [|any|] @[L1574b2..L15761e] goto L1574ac;
  catch  [|java:security:NoSuchAlgorithmException|] @[L157626..L157660] goto L157664;
  catch  [|any|] @[L157626..L157660] goto L1574ac;
  catch  [|any|] @[L157666..L1576fe] goto L1574ac;

   }
    procedure [|javax:crypto:Cipher|] [|javax:crypto:Cipher.getInstance|] ([|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L157754.   v0:= 0  @length 4;
#L157756.   call temp:=  [|javax:crypto:Cipher.getCipher|](v1, v0) @signature [|Ljavax/crypto/Cipher;.getCipher:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15775c.   v0:= temp  @type object;
#L15775e.   return v0  @type object;

   }
    procedure [|javax:crypto:Cipher|] [|javax:crypto:Cipher.getInstance|] ([|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L157770.   if v5 != 0 then goto L157784;
#L157774.   v1:= new [|java:lang:IllegalArgumentException|];
#L157778.   v2:= "provider == null" @type (object, string);
#L15777c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157782.   throw v1;
#L157784.   call temp:=  [|java:security:Security.getProvider|](v5) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L15778a.   v0:= temp  @type object;
#L15778c.   if v0 != 0 then goto L1577c2;
#L157790.   v1:= new [|java:security:NoSuchProviderException|];
#L157794.   v2:= new [|java:lang:StringBuilder|];
#L157798.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15779e.   v3:= "Provider not available: " @type (object, string);
#L1577a2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1577a8.   v2:= temp  @type object;
#L1577aa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1577b0.   v2:= temp  @type object;
#L1577b2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1577b8.   v2:= temp  @type object;
#L1577ba.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v2) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L1577c0.   throw v1;
#L1577c2.   call temp:=  [|javax:crypto:Cipher.getInstance|](v4, v0) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1577c8.   v1:= temp  @type object;
#L1577ca.   return v1  @type object;

   }
    procedure [|javax:crypto:Cipher|] [|javax:crypto:Cipher.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L1577dc.   if v4 != 0 then goto L1577f0;
#L1577e0.   v1:= new [|java:lang:IllegalArgumentException|];
#L1577e4.   v2:= "provider == null" @type (object, string);
#L1577e8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1577ee.   throw v1;
#L1577f0.   call temp:=  [|javax:crypto:Cipher.getCipher|](v3, v4) @signature [|Ljavax/crypto/Cipher;.getCipher:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1577f6.   v0:= temp  @type object;
#L1577f8.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:Cipher.getMaxAllowedKeyLength|] ([|java:lang:String|] v2 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getMaxAllowedKeyLength:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L15780c.   if v2 != 0 then goto L157820;
#L157810.   v0:= new [|java:lang:NullPointerException|];
#L157814.   v1:= "transformation == null" @type (object, string);
#L157818.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15781e.   throw v0;
#L157820.   call temp:=  [|javax:crypto:Cipher.checkTransformation|](v2) @signature [|Ljavax/crypto/Cipher;.checkTransformation:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L157826.    v0:= nan;
#L15782c.   return v0;

   }
    procedure [|java:security:spec:AlgorithmParameterSpec|] [|javax:crypto:Cipher.getMaxAllowedParameterSpec|] ([|java:lang:String|] v2 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getMaxAllowedParameterSpec:(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157840.   if v2 != 0 then goto L157854;
#L157844.   v0:= new [|java:lang:NullPointerException|];
#L157848.   v1:= "transformation == null" @type (object, string);
#L15784c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L157852.   throw v0;
#L157854.   call temp:=  [|javax:crypto:Cipher.checkTransformation|](v2) @signature [|Ljavax/crypto/Cipher;.checkTransformation:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15785a.   v0:= 0  @length 4;
#L15785c.   return v0  @type object;

   }
    procedure [|java:security:NoSuchAlgorithmException|] [|javax:crypto:Cipher.invalidTransformation|] ([|java:lang:String|] v3 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.invalidTransformation:(Ljava/lang/String;)Ljava/security/NoSuchAlgorithmException;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L157870.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L157874.   v1:= new [|java:lang:StringBuilder|];
#L157878.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15787e.   v2:= "Invalid transformation: " @type (object, string);
#L157882.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157888.   v1:= temp  @type object;
#L15788a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157890.   v1:= temp  @type object;
#L157892.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157898.   v1:= temp  @type object;
#L15789a.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1578a0.   throw v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1578b4.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L1578b8.   v1:= 1  @length 4;
#L1578ba.   if v0 == v1 then goto L1578d4;
#L1578be.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L1578c2.   v1:= 2  @length 4;
#L1578c4.   if v0 == v1 then goto L1578d4;
#L1578c8.   v0:= new [|java:lang:IllegalStateException|];
#L1578cc.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1578d2.   throw v0;
#L1578d4.   if v3 != v4 then goto L1578e8;
#L1578d8.   v0:= new [|java:lang:IllegalArgumentException|];
#L1578dc.   v1:= "input == output" @type (object, string);
#L1578e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1578e6.   throw v0;
#L1578e8.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L1578ec.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v3, v4) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1578f2.   v0:= temp;
#L1578f4.   return v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v6 @type (this), [|byte|][] v7, [|int|] v8) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:([BI)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L157908.   v2:= 0  @length 4;
#L15790a.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L15790e.   v1:= 1  @length 4;
#L157910.   if v0 == v1 then goto L15792a;
#L157914.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L157918.   v1:= 2  @length 4;
#L15791a.   if v0 == v1 then goto L15792a;
#L15791e.   v0:= new [|java:lang:IllegalStateException|];
#L157922.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157928.   throw v0;
#L15792a.   if v8 >= 0 then goto L157960;
#L15792e.   v0:= new [|java:lang:IllegalArgumentException|];
#L157932.   v1:= new [|java:lang:StringBuilder|];
#L157936.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15793c.   v2:= "outputOffset < 0. outputOffset=" @type (object, string);
#L157940.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157946.   v1:= temp  @type object;
#L157948.   call temp:=  [|java:lang:StringBuilder.append|](v1, v8) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15794e.   v1:= temp  @type object;
#L157950.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157956.   v1:= temp  @type object;
#L157958.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15795e.   throw v0;
#L157960.   v0:= v6.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157964.   v1:= 0  @length 4;
#L157966.   v3:= v2;
#L157968.   v4:= v7  @type object;
#L15796a.   v5:= v8;
#L15796c.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII[BI)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157972.   v0:= temp;
#L157974.   return v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9, [|byte|][] v10) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:([BII[B)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L157988.   v5:= 0  @length 4;
#L15798a.   v0:= v6  @type object;
#L15798c.   v1:= v7  @type object;
#L15798e.   v2:= v8;
#L157990.   v3:= v9;
#L157992.   v4:= v10  @type object;
#L157994.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/Cipher;.doFinal:([BII[BI)I|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15799a.   v0:= temp;
#L15799c.   return v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9, [|byte|][] v10, [|int|] v11) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:([BII[BI)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1579b0.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L1579b4.   v1:= 1  @length 4;
#L1579b6.   if v0 == v1 then goto L1579d0;
#L1579ba.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L1579be.   v1:= 2  @length 4;
#L1579c0.   if v0 == v1 then goto L1579d0;
#L1579c4.   v0:= new [|java:lang:IllegalStateException|];
#L1579c8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1579ce.   throw v0;
#L1579d0.   v0:= v7.length;
#L1579d2.   call temp:=  [|javax:crypto:Cipher.checkInputOffsetAndCount|](v0, v8, v9) @signature [|Ljavax/crypto/Cipher;.checkInputOffsetAndCount:(III)V|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1579d8.   v0:= v6.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L1579dc.   v1:= v7  @type object;
#L1579de.   v2:= v8;
#L1579e0.   v3:= v9;
#L1579e2.   v4:= v10  @type object;
#L1579e4.   v5:= v11;
#L1579e6.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII[BI)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1579ec.   v0:= temp;
#L1579ee.   return v0;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v3 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L157a00.   v2:= 0  @length 4;
#L157a02.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157a06.   v1:= 1  @length 4;
#L157a08.   if v0 == v1 then goto L157a22;
#L157a0c.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157a10.   v1:= 2  @length 4;
#L157a12.   if v0 == v1 then goto L157a22;
#L157a16.   v0:= new [|java:lang:IllegalStateException|];
#L157a1a.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157a20.   throw v0;
#L157a22.   v0:= v3.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157a26.   v1:= 0  @length 4;
#L157a28.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v1, v2, v2) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157a2e.   v0:= temp  @type object;
#L157a30.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L157a44.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157a48.   v1:= 1  @length 4;
#L157a4a.   if v0 == v1 then goto L157a64;
#L157a4e.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157a52.   v1:= 2  @length 4;
#L157a54.   if v0 == v1 then goto L157a64;
#L157a58.   v0:= new [|java:lang:IllegalStateException|];
#L157a5c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157a62.   throw v0;
#L157a64.   v0:= v3.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157a68.   v1:= 0  @length 4;
#L157a6a.   v2:= v4.length;
#L157a6c.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v4, v1, v2) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157a72.   v0:= temp  @type object;
#L157a74.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.doFinal|] ([|javax:crypto:Cipher|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.doFinal:([BII)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157a88.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157a8c.   v1:= 1  @length 4;
#L157a8e.   if v0 == v1 then goto L157aa8;
#L157a92.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157a96.   v1:= 2  @length 4;
#L157a98.   if v0 == v1 then goto L157aa8;
#L157a9c.   v0:= new [|java:lang:IllegalStateException|];
#L157aa0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157aa6.   throw v0;
#L157aa8.   v0:= v3.length;
#L157aaa.   call temp:=  [|javax:crypto:Cipher.checkInputOffsetAndCount|](v0, v4, v5) @signature [|Ljavax/crypto/Cipher;.checkInputOffsetAndCount:(III)V|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L157ab0.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157ab4.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v0, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157aba.   v0:= temp  @type object;
#L157abc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:Cipher.getAlgorithm|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157ad0.   v0:= v1.[|javax:crypto:Cipher.transformation|]   @type object;
#L157ad4.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:Cipher.getBlockSize|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getBlockSize:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157ae8.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157aec.   call temp:=  [|javax:crypto:CipherSpi.engineGetBlockSize|](v0) @signature [|Ljavax/crypto/CipherSpi;.engineGetBlockSize:()I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157af2.   v0:= temp;
#L157af4.   return v0;

   }
    procedure [|javax:crypto:ExemptionMechanism|] [|javax:crypto:Cipher.getExemptionMechanism|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getExemptionMechanism:()Ljavax/crypto/ExemptionMechanism;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157b08.   v0:= 0  @length 4;
#L157b0a.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.getIV|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getIV:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157b1c.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157b20.   call temp:=  [|javax:crypto:CipherSpi.engineGetIV|](v0) @signature [|Ljavax/crypto/CipherSpi;.engineGetIV:()[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157b26.   v0:= temp  @type object;
#L157b28.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:Cipher.getOutputSize|] ([|javax:crypto:Cipher|] v2 @type (this), [|int|] v3) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getOutputSize:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157b3c.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157b40.   if v0 != 0 then goto L157b54;
#L157b44.   v0:= new [|java:lang:IllegalStateException|];
#L157b48.   v1:= "Cipher has not yet been initialized" @type (object, string);
#L157b4c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157b52.   throw v0;
#L157b54.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157b58.   call temp:=  [|javax:crypto:CipherSpi.engineGetOutputSize|](v0, v3) @signature [|Ljavax/crypto/CipherSpi;.engineGetOutputSize:(I)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157b5e.   v0:= temp;
#L157b60.   return v0;

   }
    procedure [|java:security:AlgorithmParameters|] [|javax:crypto:Cipher.getParameters|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getParameters:()Ljava/security/AlgorithmParameters;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157b74.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157b78.   call temp:=  [|javax:crypto:CipherSpi.engineGetParameters|](v0) @signature [|Ljavax/crypto/CipherSpi;.engineGetParameters:()Ljava/security/AlgorithmParameters;|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157b7e.   v0:= temp  @type object;
#L157b80.   return v0  @type object;

   }
    procedure [|java:security:Provider|] [|javax:crypto:Cipher.getProvider|] ([|javax:crypto:Cipher|] v1 @type (this)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157b94.   v0:= v1.[|javax:crypto:Cipher.provider|]   @type object;
#L157b98.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157bac.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157bb0.   if v0 != 0 then goto L157bc2;
#L157bb4.   v0:= new [|java:security:SecureRandom|];
#L157bb8.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L157bbe.   @@[|javax:crypto:Cipher.secureRandom|] := v0  @type object;
#L157bc2.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157bc6.   call temp:=  [|javax:crypto:Cipher.init|](v1, v2, v3, v0) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L157bcc.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object), [|java:security:AlgorithmParameters|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157be0.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157be4.   if v0 != 0 then goto L157bf6;
#L157be8.   v0:= new [|java:security:SecureRandom|];
#L157bec.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L157bf2.   @@[|javax:crypto:Cipher.secureRandom|] := v0  @type object;
#L157bf6.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157bfa.   call temp:=  [|javax:crypto:Cipher.init|](v1, v2, v3, v4, v0) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L157c00.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object), [|java:security:AlgorithmParameters|] v4 @type (object), [|java:security:SecureRandom|] v5 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157c14.   call temp:=  [|javax:crypto:Cipher.checkMode|](v1, v2) @signature [|Ljavax/crypto/Cipher;.checkMode:(I)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L157c1a.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157c1e.   call temp:=  [|javax:crypto:CipherSpi.engineInit|](v0, v2, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157c24.   v1.[|javax:crypto:Cipher.mode|]  := v2;
#L157c28.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object), [|java:security:SecureRandom|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157c3c.   call temp:=  [|javax:crypto:Cipher.checkMode|](v1, v2) @signature [|Ljavax/crypto/Cipher;.checkMode:(I)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L157c42.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157c46.   call temp:=  [|javax:crypto:CipherSpi.engineInit|](v0, v2, v3, v4) @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157c4c.   v1.[|javax:crypto:Cipher.mode|]  := v2;
#L157c50.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157c64.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157c68.   if v0 != 0 then goto L157c7a;
#L157c6c.   v0:= new [|java:security:SecureRandom|];
#L157c70.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L157c76.   @@[|javax:crypto:Cipher.secureRandom|] := v0  @type object;
#L157c7a.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157c7e.   call temp:=  [|javax:crypto:Cipher.init|](v1, v2, v3, v4, v0) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L157c84.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:Key|] v3 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v4 @type (object), [|java:security:SecureRandom|] v5 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157c98.   call temp:=  [|javax:crypto:Cipher.checkMode|](v1, v2) @signature [|Ljavax/crypto/Cipher;.checkMode:(I)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L157c9e.   v0:= v1.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157ca2.   call temp:=  [|javax:crypto:CipherSpi.engineInit|](v0, v2, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157ca8.   v1.[|javax:crypto:Cipher.mode|]  := v2;
#L157cac.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v1 @type (this), [|int|] v2, [|java:security:cert:Certificate|] v3 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/cert/Certificate;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L157cc0.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157cc4.   if v0 != 0 then goto L157cd6;
#L157cc8.   v0:= new [|java:security:SecureRandom|];
#L157ccc.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L157cd2.   @@[|javax:crypto:Cipher.secureRandom|] := v0  @type object;
#L157cd6.   v0:= @@[|javax:crypto:Cipher.secureRandom|]   @type object;
#L157cda.   call temp:=  [|javax:crypto:Cipher.init|](v1, v2, v3, v0) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L157ce0.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Cipher.init|] ([|javax:crypto:Cipher|] v7 @type (this), [|int|] v8, [|java:security:cert:Certificate|] v9 @type (object), [|java:security:SecureRandom|] v10 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L157cf4.   v6:= 3  @length 4;
#L157cf6.   call temp:=  [|javax:crypto:Cipher.checkMode|](v7, v8) @signature [|Ljavax/crypto/Cipher;.checkMode:(I)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L157cfc.   v5:= instanceof @varname v9 @type [|java:security:cert:X509Certificate|];
#L157d00.   if v5 == 0 then goto L157da8;
#L157d04.   v5:= v9  @type object;
#L157d06.   v5:= ([|java:security:cert:X509Certificate|])v5;
#L157d0a.   call temp:=  [|java:security:cert:X509Certificate.getCriticalExtensionOIDs|](v5) @signature [|Ljava/security/cert/X509Certificate;.getCriticalExtensionOIDs:()Ljava/util/Set;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L157d10.   v0:= temp  @type object;
#L157d12.   v1:= 0  @length 4;
#L157d14.   if v0 == 0 then goto L157da8;
#L157d18.   call temp:=  [|java:util:Set.isEmpty|](v0) @signature [|Ljava/util/Set;.isEmpty:()Z|] @classDescriptor [|java:util:Set|] @type interface;
#L157d1e.   v5:= temp;
#L157d20.   if v5 != 0 then goto L157da8;
#L157d24.   call temp:=  [|java:util:Set.iterator|](v0) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L157d2a.   v2:= temp  @type object;
#L157d2c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L157d32.   v5:= temp;
#L157d34.   if v5 == 0 then goto L157d56;
#L157d38.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L157d3e.   v4:= temp  @type object;
#L157d40.   v4:= ([|java:lang:String|])v4;
#L157d44.   v5:= "2.5.29.15" @type (object, string);
#L157d48.   call temp:=  [|java:lang:String.equals|](v4, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L157d4e.   v5:= temp;
#L157d50.   if v5 == 0 then goto L157d2c;
#L157d54.   v1:= 1  @length 4;
#L157d56.   if v1 == 0 then goto L157da8;
#L157d5a.   v5:= v9  @type object;
#L157d5c.   v5:= ([|java:security:cert:X509Certificate|])v5;
#L157d60.   call temp:=  [|java:security:cert:X509Certificate.getKeyUsage|](v5) @signature [|Ljava/security/cert/X509Certificate;.getKeyUsage:()[Z|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L157d66.   v3:= temp  @type object;
#L157d68.   if v3 == 0 then goto L157da8;
#L157d6c.   v5:= 1  @length 4;
#L157d6e.   if v8 != v5 then goto L157d8a;
#L157d72.   v5:= v3[v6]  @boolean;
#L157d76.   if v5 != 0 then goto L157d8a;
#L157d7a.   v5:= new [|java:security:InvalidKeyException|];
#L157d7e.   v6:= "The public key in the certificate cannot be used for ENCRYPT_MODE" @type (object, string);
#L157d82.   call temp:=  [|java:security:InvalidKeyException.<init>|](v5, v6) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L157d88.   throw v5;
#L157d8a.   if v8 != v6 then goto L157da8;
#L157d8e.   v5:= 2  @length 4;
#L157d90.   v5:= v3[v5]  @boolean;
#L157d94.   if v5 != 0 then goto L157da8;
#L157d98.   v5:= new [|java:security:InvalidKeyException|];
#L157d9c.   v6:= "The public key in the certificate cannot be used for WRAP_MODE" @type (object, string);
#L157da0.   call temp:=  [|java:security:InvalidKeyException.<init>|](v5, v6) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L157da6.   throw v5;
#L157da8.   v5:= v7.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157dac.   call temp:=  [|java:security:cert:Certificate.getPublicKey|](v9) @signature [|Ljava/security/cert/Certificate;.getPublicKey:()Ljava/security/PublicKey;|] @classDescriptor [|java:security:cert:Certificate|] @type virtual;
#L157db2.   v6:= temp  @type object;
#L157db4.   call temp:=  [|javax:crypto:CipherSpi.engineInit|](v5, v8, v6, v10) @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157dba.   v7.[|javax:crypto:Cipher.mode|]  := v8;
#L157dbe.   return @void ;

   }
    procedure [|java:security:Key|] [|javax:crypto:Cipher.unwrap|] ([|javax:crypto:Cipher|] v2 @type (this), [|byte|][] v3, [|java:lang:String|] v4 @type (object), [|int|] v5) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.unwrap:([BLjava/lang/String;I)Ljava/security/Key;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157dd0.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157dd4.   v1:= 4  @length 4;
#L157dd6.   if v0 == v1 then goto L157de6;
#L157dda.   v0:= new [|java:lang:IllegalStateException|];
#L157dde.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157de4.   throw v0;
#L157de6.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157dea.   call temp:=  [|javax:crypto:CipherSpi.engineUnwrap|](v0, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineUnwrap:([BLjava/lang/String;I)Ljava/security/Key;|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157df0.   v0:= temp  @type object;
#L157df2.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:Cipher.update|] ([|javax:crypto:Cipher|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.update:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157e04.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157e08.   v1:= 1  @length 4;
#L157e0a.   if v0 == v1 then goto L157e24;
#L157e0e.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157e12.   v1:= 2  @length 4;
#L157e14.   if v0 == v1 then goto L157e24;
#L157e18.   v0:= new [|java:lang:IllegalStateException|];
#L157e1c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157e22.   throw v0;
#L157e24.   if v3 != v4 then goto L157e38;
#L157e28.   v0:= new [|java:lang:IllegalArgumentException|];
#L157e2c.   v1:= "input == output" @type (object, string);
#L157e30.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157e36.   throw v0;
#L157e38.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157e3c.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v0, v3, v4) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157e42.   v0:= temp;
#L157e44.   return v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.update|] ([|javax:crypto:Cipher|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9, [|byte|][] v10) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.update:([BII[B)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L157e58.   v5:= 0  @length 4;
#L157e5a.   v0:= v6  @type object;
#L157e5c.   v1:= v7  @type object;
#L157e5e.   v2:= v8;
#L157e60.   v3:= v9;
#L157e62.   v4:= v10  @type object;
#L157e64.   call temp:=  [|javax:crypto:Cipher.update|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/Cipher;.update:([BII[BI)I|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L157e6a.   v0:= temp;
#L157e6c.   return v0;

   }
    procedure [|int|] [|javax:crypto:Cipher.update|] ([|javax:crypto:Cipher|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9, [|byte|][] v10, [|int|] v11) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.update:([BII[BI)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L157e80.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L157e84.   v1:= 1  @length 4;
#L157e86.   if v0 == v1 then goto L157ea0;
#L157e8a.   v0:= v6.[|javax:crypto:Cipher.mode|] ;
#L157e8e.   v1:= 2  @length 4;
#L157e90.   if v0 == v1 then goto L157ea0;
#L157e94.   v0:= new [|java:lang:IllegalStateException|];
#L157e98.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157e9e.   throw v0;
#L157ea0.   if v7 != 0 then goto L157eb4;
#L157ea4.   v0:= new [|java:lang:IllegalArgumentException|];
#L157ea8.   v1:= "input == null" @type (object, string);
#L157eac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157eb2.   throw v0;
#L157eb4.   if v10 != 0 then goto L157ec8;
#L157eb8.   v0:= new [|java:lang:IllegalArgumentException|];
#L157ebc.   v1:= "output == null" @type (object, string);
#L157ec0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157ec6.   throw v0;
#L157ec8.   if v11 >= 0 then goto L157efe;
#L157ecc.   v0:= new [|java:lang:IllegalArgumentException|];
#L157ed0.   v1:= new [|java:lang:StringBuilder|];
#L157ed4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L157eda.   v2:= "outputOffset < 0. outputOffset=" @type (object, string);
#L157ede.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157ee4.   v1:= temp  @type object;
#L157ee6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157eec.   v1:= temp  @type object;
#L157eee.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L157ef4.   v1:= temp  @type object;
#L157ef6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157efc.   throw v0;
#L157efe.   v0:= v7.length;
#L157f00.   call temp:=  [|javax:crypto:Cipher.checkInputOffsetAndCount|](v0, v8, v9) @signature [|Ljavax/crypto/Cipher;.checkInputOffsetAndCount:(III)V|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L157f06.   v0:= v7.length;
#L157f08.   if v0 != 0 then goto L157f10;
#L157f0c.   v0:= 0  @length 4;
#L157f0e.   return v0;
#L157f10.   v0:= v6.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157f14.   v1:= v7  @type object;
#L157f16.   v2:= v8;
#L157f18.   v3:= v9;
#L157f1a.   v4:= v10  @type object;
#L157f1c.   v5:= v11;
#L157f1e.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII[BI)I|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157f24.   v0:= temp;
#L157f26.   goto L157f0e;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.update|] ([|javax:crypto:Cipher|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.update:([B)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L157f38.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157f3c.   v1:= 1  @length 4;
#L157f3e.   if v0 == v1 then goto L157f58;
#L157f42.   v0:= v3.[|javax:crypto:Cipher.mode|] ;
#L157f46.   v1:= 2  @length 4;
#L157f48.   if v0 == v1 then goto L157f58;
#L157f4c.   v0:= new [|java:lang:IllegalStateException|];
#L157f50.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157f56.   throw v0;
#L157f58.   if v4 != 0 then goto L157f6c;
#L157f5c.   v0:= new [|java:lang:IllegalArgumentException|];
#L157f60.   v1:= "input == null" @type (object, string);
#L157f64.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157f6a.   throw v0;
#L157f6c.   v0:= v4.length;
#L157f6e.   if v0 != 0 then goto L157f76;
#L157f72.   v0:= 0  @length 4;
#L157f74.   return v0  @type object;
#L157f76.   v0:= v3.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157f7a.   v1:= 0  @length 4;
#L157f7c.   v2:= v4.length;
#L157f7e.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v0, v4, v1, v2) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157f84.   v0:= temp  @type object;
#L157f86.   goto L157f74;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.update|] ([|javax:crypto:Cipher|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.update:([BII)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157f98.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157f9c.   v1:= 1  @length 4;
#L157f9e.   if v0 == v1 then goto L157fb8;
#L157fa2.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L157fa6.   v1:= 2  @length 4;
#L157fa8.   if v0 == v1 then goto L157fb8;
#L157fac.   v0:= new [|java:lang:IllegalStateException|];
#L157fb0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L157fb6.   throw v0;
#L157fb8.   if v3 != 0 then goto L157fcc;
#L157fbc.   v0:= new [|java:lang:IllegalArgumentException|];
#L157fc0.   v1:= "input == null" @type (object, string);
#L157fc4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L157fca.   throw v0;
#L157fcc.   v0:= v3.length;
#L157fce.   call temp:=  [|javax:crypto:Cipher.checkInputOffsetAndCount|](v0, v4, v5) @signature [|Ljavax/crypto/Cipher;.checkInputOffsetAndCount:(III)V|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L157fd4.   v0:= v3.length;
#L157fd6.   if v0 != 0 then goto L157fde;
#L157fda.   v0:= 0  @length 4;
#L157fdc.   return v0  @type object;
#L157fde.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L157fe2.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v0, v3, v4, v5) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L157fe8.   v0:= temp  @type object;
#L157fea.   goto L157fdc;

   }
    procedure [|byte|][] [|javax:crypto:Cipher.wrap|] ([|javax:crypto:Cipher|] v2 @type (this), [|java:security:Key|] v3 @type (object)) @owner [|javax:crypto:Cipher|] @signature [|Ljavax/crypto/Cipher;.wrap:(Ljava/security/Key;)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L157ffc.   v0:= v2.[|javax:crypto:Cipher.mode|] ;
#L158000.   v1:= 3  @length 4;
#L158002.   if v0 == v1 then goto L158012;
#L158006.   v0:= new [|java:lang:IllegalStateException|];
#L15800a.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L158010.   throw v0;
#L158012.   v0:= v2.[|javax:crypto:Cipher.spiImpl|]   @type object;
#L158016.   call temp:=  [|javax:crypto:CipherSpi.engineWrap|](v0, v3) @signature [|Ljavax/crypto/CipherSpi;.engineWrap:(Ljava/security/Key;)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L15801c.   v0:= temp  @type object;
#L15801e.   return v0  @type object;

   }
record [|javax:crypto:CipherInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|javax:crypto:Cipher|] [|javax:crypto:CipherInputStream.cipher|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|javax:crypto:CipherInputStream.finished|]    @AccessFlag PRIVATE;
      [|byte|][] [|javax:crypto:CipherInputStream.inputBuffer|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|javax:crypto:CipherInputStream.outputBuffer|]    @AccessFlag PRIVATE;
      [|int|] [|javax:crypto:CipherInputStream.outputIndex|]    @AccessFlag PRIVATE;
      [|int|] [|javax:crypto:CipherInputStream.outputLength|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|javax:crypto:CipherInputStream.I_BUFFER_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:CipherInputStream.<init>|] ([|javax:crypto:CipherInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158030.   v0:= new [|javax:crypto:NullCipher|];
#L158034.   call temp:=  [|javax:crypto:NullCipher.<init>|](v0) @signature [|Ljavax/crypto/NullCipher;.<init>:()V|] @classDescriptor [|javax:crypto:NullCipher|] @type direct;
#L15803a.   call temp:=  [|javax:crypto:CipherInputStream.<init>|](v1, v2, v0) @signature [|Ljavax/crypto/CipherInputStream;.<init>:(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V|] @classDescriptor [|javax:crypto:CipherInputStream|] @type direct;
#L158040.   return @void ;

   }
    procedure [|void|] [|javax:crypto:CipherInputStream.<init>|] ([|javax:crypto:CipherInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object), [|javax:crypto:Cipher|] v3 @type (object)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.<init>:(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158054.   call temp:=  [|java:io:FilterInputStream.<init>|](v1, v2) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L15805a.   v0:= 20  @length 16;
#L15805e.   v0:= new [|byte|][v0];
#L158062.   v1.[|javax:crypto:CipherInputStream.inputBuffer|]  := v0 @type object;
#L158066.   v1.[|javax:crypto:CipherInputStream.cipher|]  := v3 @type object;
#L15806a.   return @void ;

   }
    procedure [|int|] [|javax:crypto:CipherInputStream.available|] ([|javax:crypto:CipherInputStream|] v1 @type (this)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15807c.   v0:= 0  @length 4;
#L15807e.   return v0;

   }
    procedure [|void|] [|javax:crypto:CipherInputStream.close|] ([|javax:crypto:CipherInputStream|] v1 @type (this)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L158090.   v0:= v1.[|javax:crypto:CipherInputStream.in|]   @type object;
#L158094.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L15809a.   v0:= v1.[|javax:crypto:CipherInputStream.cipher|]   @type object;
#L15809e.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0) @signature [|Ljavax/crypto/Cipher;.doFinal:()[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1580a4.   return @void ;
#L1580a6.   v0:= Exception  @type object;
#L1580a8.   goto L1580a4;
  catch  [|java:security:GeneralSecurityException|] @[L15809a..L1580a4] goto L1580a6;

   }
    procedure [|boolean|] [|javax:crypto:CipherInputStream.markSupported|] ([|javax:crypto:CipherInputStream|] v1 @type (this)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1580cc.   v0:= 0  @length 4;
#L1580ce.   return v0;

   }
    procedure [|int|] [|javax:crypto:CipherInputStream.read|] ([|javax:crypto:CipherInputStream|] v9 @type (this)) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1580e0.   v8:= -1  @length 4;
#L1580e2.   v2:= 0  @length 4;
#L1580e4.   v0:= v9.[|javax:crypto:CipherInputStream.finished|]   @boolean;
#L1580e8.   if v0 == 0 then goto L158116;
#L1580ec.   v0:= v9.[|javax:crypto:CipherInputStream.outputIndex|] ;
#L1580f0.   v1:= v9.[|javax:crypto:CipherInputStream.outputLength|] ;
#L1580f4.   if v0 != v1 then goto L1580fc;
#L1580f8.   v0:= v8;
#L1580fa.   return v0;
#L1580fc.   v0:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L158100.   v1:= v9.[|javax:crypto:CipherInputStream.outputIndex|] ;
#L158104.   v2:= v1 + 1;
#L158108.   v9.[|javax:crypto:CipherInputStream.outputIndex|]  := v2;
#L15810c.   v0:= v0[v1]  @byte;
#L158110.   v0:= v0 ^& 255;
#L158114.   goto L1580fa;
#L158116.   v0:= v9.[|javax:crypto:CipherInputStream.outputIndex|] ;
#L15811a.   v1:= v9.[|javax:crypto:CipherInputStream.outputLength|] ;
#L15811e.   if v0 >= v1 then goto L15813c;
#L158122.   v0:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L158126.   v1:= v9.[|javax:crypto:CipherInputStream.outputIndex|] ;
#L15812a.   v2:= v1 + 1;
#L15812e.   v9.[|javax:crypto:CipherInputStream.outputIndex|]  := v2;
#L158132.   v0:= v0[v1]  @byte;
#L158136.   v0:= v0 ^& 255;
#L15813a.   goto L1580fa;
#L15813c.   v9.[|javax:crypto:CipherInputStream.outputIndex|]  := v2;
#L158140.   v9.[|javax:crypto:CipherInputStream.outputLength|]  := v2;
#L158144.   v0:= v9.[|javax:crypto:CipherInputStream.outputLength|] ;
#L158148.   if v0 != 0 then goto L1581a8;
#L15814c.   v0:= v9.[|javax:crypto:CipherInputStream.cipher|]   @type object;
#L158150.   v1:= v9.[|javax:crypto:CipherInputStream.inputBuffer|]   @type object;
#L158154.   v1:= v1.length;
#L158156.   call temp:=  [|javax:crypto:Cipher.getOutputSize|](v0, v1) @signature [|Ljavax/crypto/Cipher;.getOutputSize:(I)I|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15815c.   v7:= temp;
#L15815e.   v0:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L158162.   if v0 == 0 then goto L158170;
#L158166.   v0:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L15816a.   v0:= v0.length;
#L15816c.   if v0 >= v7 then goto L158178;
#L158170.   v0:= new [|byte|][v7];
#L158174.   v9.[|javax:crypto:CipherInputStream.outputBuffer|]  := v0 @type object;
#L158178.   v0:= v9.[|javax:crypto:CipherInputStream.in|]   @type object;
#L15817c.   v1:= v9.[|javax:crypto:CipherInputStream.inputBuffer|]   @type object;
#L158180.   call temp:=  [|java:io:InputStream.read|](v0, v1) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L158186.   v3:= temp;
#L158188.   if v3 != v8 then goto L1581c8;
#L15818c.   v0:= v9.[|javax:crypto:CipherInputStream.cipher|]   @type object;
#L158190.   v1:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L158194.   v2:= 0  @length 4;
#L158196.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v1, v2) @signature [|Ljavax/crypto/Cipher;.doFinal:([BI)I|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15819c.   v0:= temp;
#L15819e.   v9.[|javax:crypto:CipherInputStream.outputLength|]  := v0;
#L1581a2.   v0:= 1  @length 4;
#L1581a4.   v9.[|javax:crypto:CipherInputStream.finished|]  := v0 @boolean;
#L1581a8.   call temp:=  [|javax:crypto:CipherInputStream.read|](v9) @signature [|Ljavax/crypto/CipherInputStream;.read:()I|] @classDescriptor [|javax:crypto:CipherInputStream|] @type virtual;
#L1581ae.   v0:= temp;
#L1581b0.   goto L1580fa;
#L1581b2.   v6:= Exception  @type object;
#L1581b4.   v0:= new [|java:io:IOException|];
#L1581b8.   call temp:=  [|java:lang:Exception.getMessage|](v6) @signature [|Ljava/lang/Exception;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L1581be.   v1:= temp  @type object;
#L1581c0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1581c6.   throw v0;
#L1581c8.   v0:= v9.[|javax:crypto:CipherInputStream.cipher|]   @type object;
#L1581cc.   v1:= v9.[|javax:crypto:CipherInputStream.inputBuffer|]   @type object;
#L1581d0.   v2:= 0  @length 4;
#L1581d2.   v4:= v9.[|javax:crypto:CipherInputStream.outputBuffer|]   @type object;
#L1581d6.   v5:= 0  @length 4;
#L1581d8.   call temp:=  [|javax:crypto:Cipher.update|](v0, v1, v2, v3, v4, v5) @signature [|Ljavax/crypto/Cipher;.update:([BII[BI)I|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1581de.   v0:= temp;
#L1581e0.   v9.[|javax:crypto:CipherInputStream.outputLength|]  := v0;
#L1581e4.   goto L158144;
#L1581e6.   v6:= Exception  @type object;
#L1581e8.   v0:= new [|java:lang:AssertionError|];
#L1581ec.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v6) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L1581f2.   throw v0;
  catch  [|java:lang:Exception|] @[L15818c..L1581a2] goto L1581b2;
  catch  [|javax:crypto:ShortBufferException|] @[L1581c8..L1581e4] goto L1581e6;

   }
    procedure [|int|] [|javax:crypto:CipherInputStream.read|] ([|javax:crypto:CipherInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L158220.   v2:= -1  @length 4;
#L158222.   v3:= v5.[|javax:crypto:CipherInputStream.in|]   @type object;
#L158226.   if v3 != 0 then goto L15823a;
#L15822a.   v2:= new [|java:lang:NullPointerException|];
#L15822e.   v3:= "in == null" @type (object, string);
#L158232.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158238.   throw v2;
#L15823a.   v1:= 0  @length 4;
#L15823c.   if v1 >= v8 then goto L158252;
#L158240.   call temp:=  [|javax:crypto:CipherInputStream.read|](v5) @signature [|Ljavax/crypto/CipherInputStream;.read:()I|] @classDescriptor [|javax:crypto:CipherInputStream|] @type virtual;
#L158246.   v0:= temp;
#L158248.   if v0 != v2 then goto L158254;
#L15824c.   if v1 != 0 then goto L158252;
#L158250.   v1:= v2;
#L158252.   return v1;
#L158254.   if v6 == 0 then goto L158262;
#L158258.   v3:= v7 + v1  @type int;
#L15825c.   v4:= (byte)v0  @type i2b;
#L15825e.   v6[v3]:= v4  @byte;
#L158262.   v1:= v1 + 1;
#L158266.   goto L15823c;

   }
    procedure [|long|] [|javax:crypto:CipherInputStream.skip|] ([|javax:crypto:CipherInputStream|] v2 @type (this), [|long|] v3) @owner [|javax:crypto:CipherInputStream|] @signature [|Ljavax/crypto/CipherInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L158278.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L15827e.   v0:= temp  @type wide;
#L158280.   return v0  @type wide;

   }
record [|javax:crypto:CipherOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|] {
      [|javax:crypto:Cipher|] [|javax:crypto:CipherOutputStream.cipher|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.<init>|] ([|javax:crypto:CipherOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158294.   v0:= new [|javax:crypto:NullCipher|];
#L158298.   call temp:=  [|javax:crypto:NullCipher.<init>|](v0) @signature [|Ljavax/crypto/NullCipher;.<init>:()V|] @classDescriptor [|javax:crypto:NullCipher|] @type direct;
#L15829e.   call temp:=  [|javax:crypto:CipherOutputStream.<init>|](v1, v2, v0) @signature [|Ljavax/crypto/CipherOutputStream;.<init>:(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V|] @classDescriptor [|javax:crypto:CipherOutputStream|] @type direct;
#L1582a4.   return @void ;

   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.<init>|] ([|javax:crypto:CipherOutputStream|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object), [|javax:crypto:Cipher|] v2 @type (object)) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.<init>:(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1582b8.   call temp:=  [|java:io:FilterOutputStream.<init>|](v0, v1) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L1582be.   v0.[|javax:crypto:CipherOutputStream.cipher|]  := v2 @type object;
#L1582c2.   return @void ;

   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.close|] ([|javax:crypto:CipherOutputStream|] v4 @type (this)) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1582d4.   v2:= v4.[|javax:crypto:CipherOutputStream.cipher|]   @type object;
#L1582d8.   if v2 == 0 then goto L1582f6;
#L1582dc.   v2:= v4.[|javax:crypto:CipherOutputStream.cipher|]   @type object;
#L1582e0.   call temp:=  [|javax:crypto:Cipher.doFinal|](v2) @signature [|Ljavax/crypto/Cipher;.doFinal:()[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1582e6.   v1:= temp  @type object;
#L1582e8.   if v1 == 0 then goto L1582f6;
#L1582ec.   v2:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L1582f0.   call temp:=  [|java:io:OutputStream.write|](v2, v1) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1582f6.   v2:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L1582fa.   if v2 == 0 then goto L158308;
#L1582fe.   v2:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L158302.   call temp:=  [|java:io:OutputStream.flush|](v2) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L158308.   v2:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L15830c.   if v2 == 0 then goto L15831a;
#L158310.   v2:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L158314.   call temp:=  [|java:io:OutputStream.close|](v2) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15831a.   return @void ;
#L15831c.   v0:= Exception  @type object;
#L15831e.   v2:= new [|java:io:IOException|];
#L158322.   call temp:=  [|javax:crypto:BadPaddingException.getMessage|](v0) @signature [|Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L158328.   v3:= temp  @type object;
#L15832a.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L158330.   throw v2;
#L158332.   v2:= Exception  @type object;
#L158334.   v3:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L158338.   if v3 == 0 then goto L158346;
#L15833c.   v3:= v4.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L158340.   call temp:=  [|java:io:OutputStream.close|](v3) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L158346.   throw v2;
#L158348.   v0:= Exception  @type object;
#L15834a.   v2:= new [|java:io:IOException|];
#L15834e.   call temp:=  [|javax:crypto:IllegalBlockSizeException.getMessage|](v0) @signature [|Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L158354.   v3:= temp  @type object;
#L158356.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L15835c.   throw v2;
  catch  [|javax:crypto:BadPaddingException|] @[L1582d4..L158308] goto L15831c;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1582d4..L158308] goto L158348;
  catch  [|any|] @[L1582d4..L158308] goto L158332;
  catch  [|any|] @[L15831e..L158332] goto L158332;
  catch  [|any|] @[L15834a..L15835c] goto L158332;

   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.flush|] ([|javax:crypto:CipherOutputStream|] v1 @type (this)) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L158394.   v0:= v1.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L158398.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L15839e.   return @void ;

   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.write|] ([|javax:crypto:CipherOutputStream|] v0 @type (this), [|int|] v1) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
      
#L1583b0.   call temp:=  [|libcore:io:Streams.writeSingleByte|](v0, v1) @signature [|Llibcore/io/Streams;.writeSingleByte:(Ljava/io/OutputStream;I)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L1583b6.   return @void ;

   }
    procedure [|void|] [|javax:crypto:CipherOutputStream.write|] ([|javax:crypto:CipherOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:CipherOutputStream|] @signature [|Ljavax/crypto/CipherOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1583c8.   if v5 != 0 then goto L1583ce;
#L1583cc.   return @void ;
#L1583ce.   v1:= v2.[|javax:crypto:CipherOutputStream.cipher|]   @type object;
#L1583d2.   call temp:=  [|javax:crypto:Cipher.update|](v1, v3, v4, v5) @signature [|Ljavax/crypto/Cipher;.update:([BII)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1583d8.   v0:= temp  @type object;
#L1583da.   if v0 == 0 then goto L1583cc;
#L1583de.   v1:= v2.[|javax:crypto:CipherOutputStream.out|]   @type object;
#L1583e2.   call temp:=  [|java:io:OutputStream.write|](v1, v0) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L1583e8.   goto L1583cc;

   }
record [|javax:crypto:CipherSpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:CipherSpi.<init>|] ([|javax:crypto:CipherSpi|] v0 @type (this)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1583fc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L158402.   return @void ;

   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineDoFinal|] ([|javax:crypto:CipherSpi|] v8 @type (this), [|java:nio:ByteBuffer|] v9 @type (object), [|java:nio:ByteBuffer|] v10 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L158414.   v6:= 0  @length 4;
#L158416.   if v9 != 0 then goto L15842a;
#L15841a.   v6:= new [|java:lang:NullPointerException|];
#L15841e.   v7:= "input == null" @type (object, string);
#L158422.   call temp:=  [|java:lang:NullPointerException.<init>|](v6, v7) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158428.   throw v6;
#L15842a.   if v10 != 0 then goto L15843e;
#L15842e.   v6:= new [|java:lang:NullPointerException|];
#L158432.   v7:= "output == null" @type (object, string);
#L158436.   call temp:=  [|java:lang:NullPointerException.<init>|](v6, v7) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15843c.   throw v6;
#L15843e.   call temp:=  [|java:nio:ByteBuffer.position|](v9) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158444.   v5:= temp;
#L158446.   call temp:=  [|java:nio:ByteBuffer.limit|](v9) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15844c.   v3:= temp;
#L15844e.   v7:= v3 - v5  @type int;
#L158452.   if v7 > 0 then goto L158458;
#L158456.   return v6;
#L158458.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v9) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15845e.   v7:= temp;
#L158460.   if v7 == 0 then goto L1584a8;
#L158464.   call temp:=  [|java:nio:ByteBuffer.array|](v9) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15846a.   v0:= temp  @type object;
#L15846c.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v9) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158472.   v4:= temp;
#L158474.   v6:= v4 + v5  @type int;
#L158478.   v7:= v3 - v5  @type int;
#L15847c.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v8, v0, v6, v7) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L158482.   v1:= temp  @type object;
#L158484.   call temp:=  [|java:nio:ByteBuffer.position|](v9, v3) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15848a.   call temp:=  [|java:nio:ByteBuffer.remaining|](v10) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158490.   v6:= temp;
#L158492.   v7:= v1.length;
#L158494.   if v6 >= v7 then goto L1584c4;
#L158498.   v6:= new [|javax:crypto:ShortBufferException|];
#L15849c.   v7:= "output buffer too small" @type (object, string);
#L1584a0.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v6, v7) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1584a6.   throw v6;
#L1584a8.   v7:= v3 - v5  @type int;
#L1584ac.   v0:= new [|byte|][v7];
#L1584b0.   call temp:=  [|java:nio:ByteBuffer.get|](v9, v0) @signature [|Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1584b6.   v7:= v3 - v5  @type int;
#L1584ba.   call temp:=  [|javax:crypto:CipherSpi.engineDoFinal|](v8, v0, v6, v7) @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1584c0.   v1:= temp  @type object;
#L1584c2.   goto L15848a;
#L1584c4.   call temp:=  [|java:nio:ByteBuffer.put|](v10, v1) @signature [|Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1584ca.   v6:= v1.length;
#L1584cc.   goto L158456;
#L1584ce.   v2:= Exception  @type object;
#L1584d0.   v6:= new [|javax:crypto:ShortBufferException|];
#L1584d4.   v7:= "output buffer too small" @type (object, string);
#L1584d8.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v6, v7) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1584de.   throw v6;
  catch  [|java:nio:BufferOverflowException|] @[L1584c4..L1584ca] goto L1584ce;

   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineDoFinal|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|byte|][] v3, [|int|] v4) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII[BI)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:CipherSpi.engineDoFinal|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineDoFinal:([BII)[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineGetBlockSize|] () @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineGetBlockSize:()I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:CipherSpi.engineGetIV|] () @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineGetIV:()[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineGetKeySize|] ([|javax:crypto:CipherSpi|] v1 @type (this), [|java:security:Key|] v2 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineGetKeySize:(Ljava/security/Key;)I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L158500.   v0:= new [|java:lang:UnsupportedOperationException|];
#L158504.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L15850a.   throw v0;

   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineGetOutputSize|] ([|int|] v0) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineGetOutputSize:(I)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:security:AlgorithmParameters|] [|javax:crypto:CipherSpi.engineGetParameters|] () @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineGetParameters:()Ljava/security/AlgorithmParameters;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:CipherSpi.engineInit|] ([|int|] v0, [|java:security:Key|] v1 @type (object), [|java:security:AlgorithmParameters|] v2 @type (object), [|java:security:SecureRandom|] v3 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:CipherSpi.engineInit|] ([|int|] v0, [|java:security:Key|] v1 @type (object), [|java:security:SecureRandom|] v2 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:CipherSpi.engineInit|] ([|int|] v0, [|java:security:Key|] v1 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v2 @type (object), [|java:security:SecureRandom|] v3 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:CipherSpi.engineSetMode|] ([|java:lang:String|] v0 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineSetMode:(Ljava/lang/String;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:CipherSpi.engineSetPadding|] ([|java:lang:String|] v0 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineSetPadding:(Ljava/lang/String;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:security:Key|] [|javax:crypto:CipherSpi.engineUnwrap|] ([|javax:crypto:CipherSpi|] v1 @type (this), [|byte|][] v2, [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineUnwrap:([BLjava/lang/String;I)Ljava/security/Key;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L15851c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L158520.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L158526.   throw v0;

   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineUpdate|] ([|javax:crypto:CipherSpi|] v9 @type (this), [|java:nio:ByteBuffer|] v10 @type (object), [|java:nio:ByteBuffer|] v11 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L158538.   v6:= 0  @length 4;
#L15853a.   if v10 != 0 then goto L15854e;
#L15853e.   v6:= new [|java:lang:NullPointerException|];
#L158542.   v7:= "input == null" @type (object, string);
#L158546.   call temp:=  [|java:lang:NullPointerException.<init>|](v6, v7) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15854c.   throw v6;
#L15854e.   if v11 != 0 then goto L158562;
#L158552.   v6:= new [|java:lang:NullPointerException|];
#L158556.   v7:= "output == null" @type (object, string);
#L15855a.   call temp:=  [|java:lang:NullPointerException.<init>|](v6, v7) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158560.   throw v6;
#L158562.   call temp:=  [|java:nio:ByteBuffer.position|](v10) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158568.   v5:= temp;
#L15856a.   call temp:=  [|java:nio:ByteBuffer.limit|](v10) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158570.   v3:= temp;
#L158572.   v7:= v3 - v5  @type int;
#L158576.   if v7 > 0 then goto L15857c;
#L15857a.   return v6;
#L15857c.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v10) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158582.   v7:= temp;
#L158584.   if v7 == 0 then goto L1585d0;
#L158588.   call temp:=  [|java:nio:ByteBuffer.array|](v10) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15858e.   v0:= temp  @type object;
#L158590.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v10) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L158596.   v4:= temp;
#L158598.   v7:= v4 + v5  @type int;
#L15859c.   v8:= v3 - v5  @type int;
#L1585a0.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v9, v0, v7, v8) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1585a6.   v1:= temp  @type object;
#L1585a8.   call temp:=  [|java:nio:ByteBuffer.position|](v10, v3) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1585ae.   if v1 == 0 then goto L15857a;
#L1585b2.   call temp:=  [|java:nio:ByteBuffer.remaining|](v11) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1585b8.   v6:= temp;
#L1585ba.   v7:= v1.length;
#L1585bc.   if v6 >= v7 then goto L1585ec;
#L1585c0.   v6:= new [|javax:crypto:ShortBufferException|];
#L1585c4.   v7:= "output buffer too small" @type (object, string);
#L1585c8.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v6, v7) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1585ce.   throw v6;
#L1585d0.   v7:= v3 - v5  @type int;
#L1585d4.   v0:= new [|byte|][v7];
#L1585d8.   call temp:=  [|java:nio:ByteBuffer.get|](v10, v0) @signature [|Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1585de.   v7:= v3 - v5  @type int;
#L1585e2.   call temp:=  [|javax:crypto:CipherSpi.engineUpdate|](v9, v0, v6, v7) @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII)[B|] @classDescriptor [|javax:crypto:CipherSpi|] @type virtual;
#L1585e8.   v1:= temp  @type object;
#L1585ea.   goto L1585ae;
#L1585ec.   call temp:=  [|java:nio:ByteBuffer.put|](v11, v1) @signature [|Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L1585f2.   v6:= v1.length;
#L1585f4.   goto L15857a;
#L1585f6.   v2:= Exception  @type object;
#L1585f8.   v6:= new [|javax:crypto:ShortBufferException|];
#L1585fc.   v7:= "output buffer too small" @type (object, string);
#L158600.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v6, v7) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L158606.   throw v6;
  catch  [|java:nio:BufferOverflowException|] @[L1585ec..L1585f2] goto L1585f6;

   }
    procedure [|int|] [|javax:crypto:CipherSpi.engineUpdate|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|byte|][] v3, [|int|] v4) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII[BI)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:CipherSpi.engineUpdate|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineUpdate:([BII)[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:CipherSpi.engineWrap|] ([|javax:crypto:CipherSpi|] v1 @type (this), [|java:security:Key|] v2 @type (object)) @owner [|javax:crypto:CipherSpi|] @signature [|Ljavax/crypto/CipherSpi;.engineWrap:(Ljava/security/Key;)[B|] @Access PROTECTED {
      local temp ;
        v0;
      
#L158628.   v0:= new [|java:lang:UnsupportedOperationException|];
#L15862c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L158632.   throw v0;

   }
record [|org:apache:harmony:security:asn1:ASN1Constants|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.CLASS_APPLICATION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.CLASS_CONTEXTSPECIFIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.CLASS_PRIVATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.CLASS_UNIVERSAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.PC_CONSTRUCTED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.PC_PRIMITIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_ANY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_BITSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_BMPSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_BOOLEAN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_CHOICE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_BITSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_GENERALIZEDTIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_OCTETSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_SEQUENCE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_SEQUENCEOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_SET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_SETOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_UTCTIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_C_UTF8STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_EMBEDDEDPDV|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_ENUM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_EXTERNAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_GENERALIZEDTIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_GENERALSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_GRAPHICSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_IA5STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_INSTANCEOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_INTEGER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_ISO646STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_NULL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_NUMERICSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_OBJDESCRIPTOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_OCTETSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_OID|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_PRINTABLESTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_REAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_RELATIVEOID|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_SEQUENCE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_SEQUENCEOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_SET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_SETOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_T61STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_TELETEXSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_UNIVERSALSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_UTCTIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_UTF8STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_VIDEOTEXSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:security:asn1:ASN1Constants.TAG_VISIBLESTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
record [|org:apache:harmony:security:asn1:ASN1Type|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:harmony:security:asn1:ASN1Constants|] {
      [|int|] [|org:apache:harmony:security:asn1:ASN1Type.constrId|]    @AccessFlag PUBLIC_FINAL;
      [|int|] [|org:apache:harmony:security:asn1:ASN1Type.id|]    @AccessFlag PUBLIC_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.<init>|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158644.   v0:= 0  @length 4;
#L158646.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.<init>:(II)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type direct;
#L15864c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.<init>|] ([|org:apache:harmony:security:asn1:ASN1Type|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.<init>:(II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L158660.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L158666.   if v4 >= 0 then goto L15867a;
#L15866a.   v0:= new [|java:lang:IllegalArgumentException|];
#L15866e.   v1:= "tagNumber < 0" @type (object, string);
#L158672.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L158678.   throw v0;
#L15867a.   if v3 == 0 then goto L1586a6;
#L15867e.   v0:= 64  @length 16;
#L158682.   if v3 == v0 then goto L1586a6;
#L158686.   v0:= 128  @length 16;
#L15868a.   if v3 == v0 then goto L1586a6;
#L15868e.   v0:= 192  @length 16;
#L158692.   if v3 == v0 then goto L1586a6;
#L158696.   v0:= new [|java:lang:IllegalArgumentException|];
#L15869a.   v1:= "invalid tagClass" @type (object, string);
#L15869e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1586a4.   throw v0;
#L1586a6.   v0:= 31  @length 16;
#L1586aa.   if v4 >= v0 then goto L1586c4;
#L1586ae.   v0:= v3 + v4  @type int;
#L1586b2.   v2.[|org:apache:harmony:security:asn1:ASN1Type.id|]  := v0;
#L1586b6.   v0:= v2.[|org:apache:harmony:security:asn1:ASN1Type.id|] ;
#L1586ba.   v0:= v0 + 32;
#L1586be.   v2.[|org:apache:harmony:security:asn1:ASN1Type.constrId|]  := v0;
#L1586c2.   return @void ;
#L1586c4.   v0:= new [|java:lang:IllegalArgumentException|];
#L1586c8.   v1:= "tag long form not implemented" @type (object, string);
#L1586cc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1586d2.   throw v0;

   }
    procedure [|boolean|] [|org:apache:harmony:security:asn1:ASN1Type.checkTag|] ([|int|] v0) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.checkTag:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Type.decode|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Ljava/io/InputStream;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1586e4.   v0:= new [|org:apache:harmony:security:asn1:DerInputStream|];
#L1586e8.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.<init>|](v0, v2) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type direct;
#L1586ee.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.decode|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type virtual;
#L1586f4.   v0:= temp  @type object;
#L1586f6.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Type.decode|] ([|org:apache:harmony:security:asn1:BerInputStream|] v0 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Type.decode|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|byte|][] v2) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:([B)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L158708.   v0:= new [|org:apache:harmony:security:asn1:DerInputStream|];
#L15870c.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.<init>|](v0, v2) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.<init>:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type direct;
#L158712.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.decode|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type virtual;
#L158718.   v0:= temp  @type object;
#L15871a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Type.decode|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:([BII)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15872c.   v0:= new [|org:apache:harmony:security:asn1:DerInputStream|];
#L158730.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.<init>|](v0, v2, v3, v4) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.<init>:([BII)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type direct;
#L158736.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.decode|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type virtual;
#L15873c.   v0:= temp  @type object;
#L15873e.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:security:asn1:ASN1Type.encode|] ([|org:apache:harmony:security:asn1:ASN1Type|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.encode:(Ljava/lang/Object;)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L158750.   v0:= new [|org:apache:harmony:security:asn1:DerOutputStream|];
#L158754.   call temp:=  [|org:apache:harmony:security:asn1:DerOutputStream.<init>|](v0, v2, v3) @signature [|Lorg/apache/harmony/security/asn1/DerOutputStream;.<init>:(Lorg/apache/harmony/security/asn1/ASN1Type;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerOutputStream|] @type direct;
#L15875a.   v1:= v0.[|org:apache:harmony:security:asn1:DerOutputStream.encoded|]   @type object;
#L15875e.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.encodeASN|] ([|org:apache:harmony:security:asn1:BerOutputStream|] v0 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.encodeASN:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.encodeContent|] ([|org:apache:harmony:security:asn1:BerOutputStream|] v0 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.encodeContent:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Type.getDecodedObject|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|org:apache:harmony:security:asn1:BerInputStream|] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.getDecodedObject:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L158770.   v0:= v2.[|org:apache:harmony:security:asn1:BerInputStream.content|]   @type object;
#L158774.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:security:asn1:ASN1Type.getEncodedLength|] ([|org:apache:harmony:security:asn1:ASN1Type|] v4 @type (this), [|org:apache:harmony:security:asn1:BerOutputStream|] v5 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.getEncodedLength:(Lorg/apache/harmony/security/asn1/BerOutputStream;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L158788.   v1:= 1  @length 4;
#L15878a.   v1:= v1 + 1;
#L15878e.   v2:= v5.[|org:apache:harmony:security:asn1:BerOutputStream.length|] ;
#L158792.   v3:= 127  @length 16;
#L158796.   if v2 <= v3 then goto L1587b4;
#L15879a.   v1:= v1 + 1;
#L15879e.   v2:= v5.[|org:apache:harmony:security:asn1:BerOutputStream.length|] ;
#L1587a2.   v0:= v2 ^> 8;
#L1587a6.   if v0 <= 0 then goto L1587b4;
#L1587aa.   v0:= v0 ^> 8;
#L1587ae.   v1:= v1 + 1;
#L1587b2.   goto L1587a6;
#L1587b4.   v2:= v5.[|org:apache:harmony:security:asn1:BerOutputStream.length|] ;
#L1587b8.   v1:= v1 + v2  @type int;
#L1587ba.   return v1;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.setEncodingContent|] ([|org:apache:harmony:security:asn1:BerOutputStream|] v0 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.setEncodingContent:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:security:asn1:ASN1Type.toString|] ([|org:apache:harmony:security:asn1:ASN1Type|] v2 @type (this)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1587cc.   v0:= new [|java:lang:StringBuilder|];
#L1587d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1587d6.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1587dc.   v1:= temp  @type object;
#L1587de.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1587e4.   v1:= temp  @type object;
#L1587e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1587ec.   v0:= temp  @type object;
#L1587ee.   v1:= "(tag: 0x" @type (object, string);
#L1587f2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1587f8.   v0:= temp  @type object;
#L1587fa.   v1:= v2.[|org:apache:harmony:security:asn1:ASN1Type.id|] ;
#L1587fe.   v1:= v1 ^& 255;
#L158802.   call temp:=  [|java:lang:Integer.toHexString|](v1) @signature [|Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L158808.   v1:= temp  @type object;
#L15880a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158810.   v0:= temp  @type object;
#L158812.   v1:= ")" @type (object, string);
#L158816.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15881c.   v0:= temp  @type object;
#L15881e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158824.   v0:= temp  @type object;
#L158826.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.verify|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.verify:(Ljava/io/InputStream;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L158838.   v0:= new [|org:apache:harmony:security:asn1:DerInputStream|];
#L15883c.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.<init>|](v0, v2) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type direct;
#L158842.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.setVerify|](v0) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.setVerify:()V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type virtual;
#L158848.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.decode|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type virtual;
#L15884e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Type.verify|] ([|org:apache:harmony:security:asn1:ASN1Type|] v1 @type (this), [|byte|][] v2) @owner [|org:apache:harmony:security:asn1:ASN1Type|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.verify:([B)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L158860.   v0:= new [|org:apache:harmony:security:asn1:DerInputStream|];
#L158864.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.<init>|](v0, v2) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.<init>:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type direct;
#L15886a.   call temp:=  [|org:apache:harmony:security:asn1:DerInputStream.setVerify|](v0) @signature [|Lorg/apache/harmony/security/asn1/DerInputStream;.setVerify:()V|] @classDescriptor [|org:apache:harmony:security:asn1:DerInputStream|] @type virtual;
#L158870.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.decode|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type virtual;
#L158876.   return @void ;

   }
record [|org:apache:harmony:security:asn1:ASN1Constructed|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|org:apache:harmony:security:asn1:ASN1Type|] {
   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Constructed.<init>|] ([|org:apache:harmony:security:asn1:ASN1Constructed|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:security:asn1:ASN1Constructed|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.<init>:(I)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158888.   v0:= 0  @length 4;
#L15888a.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.<init>:(II)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type direct;
#L158890.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Constructed.<init>|] ([|org:apache:harmony:security:asn1:ASN1Constructed|] v0 @type (this), [|int|] v1, [|int|] v2) @owner [|org:apache:harmony:security:asn1:ASN1Constructed|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.<init>:(II)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1588a4.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Type.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Type;.<init>:(II)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Type|] @type direct;
#L1588aa.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:security:asn1:ASN1Constructed.checkTag|] ([|org:apache:harmony:security:asn1:ASN1Constructed|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:security:asn1:ASN1Constructed|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.checkTag:(I)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1588bc.   v0:= v1.[|org:apache:harmony:security:asn1:ASN1Constructed.constrId|] ;
#L1588c0.   if v0 != v2 then goto L1588c8;
#L1588c4.   v0:= 1  @length 4;
#L1588c6.   return v0;
#L1588c8.   v0:= 0  @length 4;
#L1588ca.   goto L1588c6;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Constructed.encodeASN|] ([|org:apache:harmony:security:asn1:ASN1Constructed|] v1 @type (this), [|org:apache:harmony:security:asn1:BerOutputStream|] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Constructed|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.encodeASN:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1588dc.   v0:= v1.[|org:apache:harmony:security:asn1:ASN1Constructed.constrId|] ;
#L1588e0.   call temp:=  [|org:apache:harmony:security:asn1:BerOutputStream.encodeTag|](v2, v0) @signature [|Lorg/apache/harmony/security/asn1/BerOutputStream;.encodeTag:(I)V|] @classDescriptor [|org:apache:harmony:security:asn1:BerOutputStream|] @type virtual;
#L1588e6.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Constructed.encodeContent|](v1, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.encodeContent:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Constructed|] @type virtual;
#L1588ec.   return @void ;

   }
record [|org:apache:harmony:security:asn1:ASN1TypeCollection|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|org:apache:harmony:security:asn1:ASN1Constructed|] {
      [|java:lang:Object|][] [|org:apache:harmony:security:asn1:ASN1TypeCollection.DEFAULT|]    @AccessFlag PUBLIC_FINAL;
      [|boolean|][] [|org:apache:harmony:security:asn1:ASN1TypeCollection.OPTIONAL|]    @AccessFlag PUBLIC_FINAL;
      [|org:apache:harmony:security:asn1:ASN1Type|][] [|org:apache:harmony:security:asn1:ASN1TypeCollection.type|]    @AccessFlag PUBLIC_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1TypeCollection.<init>|] ([|org:apache:harmony:security:asn1:ASN1TypeCollection|] v1 @type (this), [|int|] v2, [|org:apache:harmony:security:asn1:ASN1Type|][] v3 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1TypeCollection|] @signature [|Lorg/apache/harmony/security/asn1/ASN1TypeCollection;.<init>:(I[Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L158900.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Constructed.<init>|](v1, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Constructed;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Constructed|] @type direct;
#L158906.   v1.[|org:apache:harmony:security:asn1:ASN1TypeCollection.type|]  := v3 @type object;
#L15890a.   v0:= v3.length;
#L15890c.   v0:= new [|boolean|][v0];
#L158910.   v1.[|org:apache:harmony:security:asn1:ASN1TypeCollection.OPTIONAL|]  := v0 @type object;
#L158914.   v0:= v3.length;
#L158916.   v0:= new [|java:lang:Object|][v0];
#L15891a.   v1.[|org:apache:harmony:security:asn1:ASN1TypeCollection.DEFAULT|]  := v0 @type object;
#L15891e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1TypeCollection.getValues|] ([|org:apache:harmony:security:asn1:ASN1TypeCollection|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|][] v5 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1TypeCollection|] @signature [|Lorg/apache/harmony/security/asn1/ASN1TypeCollection;.getValues:(Ljava/lang/Object;[Ljava/lang/Object;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L158930.   v0:= new [|java:lang:RuntimeException|];
#L158934.   v1:= new [|java:lang:StringBuilder|];
#L158938.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15893e.   v2:= "ASN.1 type is not designed to be encoded: " @type (object, string);
#L158942.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158948.   v1:= temp  @type object;
#L15894a.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L158950.   v2:= temp  @type object;
#L158952.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L158958.   v2:= temp  @type object;
#L15895a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158960.   v1:= temp  @type object;
#L158962.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158968.   v1:= temp  @type object;
#L15896a.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L158970.   throw v0;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1TypeCollection.setDefault|] ([|org:apache:harmony:security:asn1:ASN1TypeCollection|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|org:apache:harmony:security:asn1:ASN1TypeCollection|] @signature [|Lorg/apache/harmony/security/asn1/ASN1TypeCollection;.setDefault:(Ljava/lang/Object;I)V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L158984.   v0:= v2.[|org:apache:harmony:security:asn1:ASN1TypeCollection.OPTIONAL|]   @type object;
#L158988.   v1:= 1  @length 4;
#L15898a.   v0[v4]:= v1  @boolean;
#L15898e.   v0:= v2.[|org:apache:harmony:security:asn1:ASN1TypeCollection.DEFAULT|]   @type object;
#L158992.   v0[v4]:= v3  @type object;
#L158996.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1TypeCollection.setOptional|] ([|org:apache:harmony:security:asn1:ASN1TypeCollection|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:security:asn1:ASN1TypeCollection|] @signature [|Lorg/apache/harmony/security/asn1/ASN1TypeCollection;.setOptional:(I)V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L1589a8.   v0:= v2.[|org:apache:harmony:security:asn1:ASN1TypeCollection.OPTIONAL|]   @type object;
#L1589ac.   v1:= 1  @length 4;
#L1589ae.   v0[v3]:= v1  @boolean;
#L1589b2.   return @void ;

   }
record [|org:apache:harmony:security:asn1:ASN1Sequence|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:security:asn1:ASN1TypeCollection|] {
   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Sequence.<init>|] ([|org:apache:harmony:security:asn1:ASN1Sequence|] v1 @type (this), [|org:apache:harmony:security:asn1:ASN1Type|][] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Sequence|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1589c4.   v0:= 16  @length 16;
#L1589c8.   call temp:=  [|org:apache:harmony:security:asn1:ASN1TypeCollection.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1TypeCollection;.<init>:(I[Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1TypeCollection|] @type direct;
#L1589ce.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:security:asn1:ASN1Sequence.decode|] ([|org:apache:harmony:security:asn1:ASN1Sequence|] v1 @type (this), [|org:apache:harmony:security:asn1:BerInputStream|] v2 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Sequence|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.decode:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1589e0.   call temp:=  [|org:apache:harmony:security:asn1:BerInputStream.readSequence|](v2, v1) @signature [|Lorg/apache/harmony/security/asn1/BerInputStream;.readSequence:(Lorg/apache/harmony/security/asn1/ASN1Sequence;)V|] @classDescriptor [|org:apache:harmony:security:asn1:BerInputStream|] @type virtual;
#L1589e6.   v0:= v2.[|org:apache:harmony:security:asn1:BerInputStream.isVerify|]   @boolean;
#L1589ea.   if v0 == 0 then goto L1589f2;
#L1589ee.   v0:= 0  @length 4;
#L1589f0.   return v0  @type object;
#L1589f2.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.getDecodedObject|](v1, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.getDecodedObject:(Lorg/apache/harmony/security/asn1/BerInputStream;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L1589f8.   v0:= temp  @type object;
#L1589fa.   goto L1589f0;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Sequence.encodeContent|] ([|org:apache:harmony:security:asn1:ASN1Sequence|] v0 @type (this), [|org:apache:harmony:security:asn1:BerOutputStream|] v1 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Sequence|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.encodeContent:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L158a0c.   call temp:=  [|org:apache:harmony:security:asn1:BerOutputStream.encodeSequence|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/BerOutputStream;.encodeSequence:(Lorg/apache/harmony/security/asn1/ASN1Sequence;)V|] @classDescriptor [|org:apache:harmony:security:asn1:BerOutputStream|] @type virtual;
#L158a12.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:security:asn1:ASN1Sequence.setEncodingContent|] ([|org:apache:harmony:security:asn1:ASN1Sequence|] v0 @type (this), [|org:apache:harmony:security:asn1:BerOutputStream|] v1 @type (object)) @owner [|org:apache:harmony:security:asn1:ASN1Sequence|] @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.setEncodingContent:(Lorg/apache/harmony/security/asn1/BerOutputStream;)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L158a24.   call temp:=  [|org:apache:harmony:security:asn1:BerOutputStream.getSequenceLength|](v1, v0) @signature [|Lorg/apache/harmony/security/asn1/BerOutputStream;.getSequenceLength:(Lorg/apache/harmony/security/asn1/ASN1Sequence;)V|] @classDescriptor [|org:apache:harmony:security:asn1:BerOutputStream|] @type virtual;
#L158a2a.   return @void ;

   }
record [|javax:crypto:EncryptedPrivateKeyInfo$1|]  @type class @AccessFlag FINAL  extends [|org:apache:harmony:security:asn1:ASN1Sequence|] {
   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo$1.<init>|] ([|javax:crypto:EncryptedPrivateKeyInfo$1|] v0 @type (this), [|org:apache:harmony:security:asn1:ASN1Type|][] v1 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo$1|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$1;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L158a3c.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type direct;
#L158a42.   return @void ;

   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo$1.getValues|] ([|javax:crypto:EncryptedPrivateKeyInfo$1|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|][] v8 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo$1|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$1;.getValues:(Ljava/lang/Object;[Ljava/lang/Object;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L158a54.   v2:= v7  @type object;
#L158a56.   v2:= ([|javax:crypto:EncryptedPrivateKeyInfo|])v2;
#L158a5a.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.access$000|](v2) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$000:(Ljavax/crypto/EncryptedPrivateKeyInfo;)Ljava/security/AlgorithmParameters;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158a60.   v3:= temp  @type object;
#L158a62.   if v3 != 0 then goto L158a96;
#L158a66.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.access$100|]() @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$100:()[B|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158a6c.   v0:= temp  @type object;
#L158a6e.   v3:= 0  @length 4;
#L158a70.   v4:= new [|org:apache:harmony:security:x509:AlgorithmIdentifier|];
#L158a74.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.access$200|](v2) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$200:(Ljavax/crypto/EncryptedPrivateKeyInfo;)Ljava/lang/String;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158a7a.   v5:= temp  @type object;
#L158a7c.   call temp:=  [|org:apache:harmony:security:x509:AlgorithmIdentifier.<init>|](v4, v5, v0) @signature [|Lorg/apache/harmony/security/x509/AlgorithmIdentifier;.<init>:(Ljava/lang/String;[B)V|] @classDescriptor [|org:apache:harmony:security:x509:AlgorithmIdentifier|] @type direct;
#L158a82.   v8[v3]:= v4  @type object;
#L158a86.   v3:= 1  @length 4;
#L158a88.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.access$300|](v2) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$300:(Ljavax/crypto/EncryptedPrivateKeyInfo;)[B|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158a8e.   v4:= temp  @type object;
#L158a90.   v8[v3]:= v4  @type object;
#L158a94.   return @void ;
#L158a96.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.access$000|](v2) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$000:(Ljavax/crypto/EncryptedPrivateKeyInfo;)Ljava/security/AlgorithmParameters;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158a9c.   v3:= temp  @type object;
#L158a9e.   call temp:=  [|java:security:AlgorithmParameters.getEncoded|](v3) @signature [|Ljava/security/AlgorithmParameters;.getEncoded:()[B|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L158aa4.   v0:= temp  @type object;
#L158aa6.   goto L158a6e;
#L158aa8.   v1:= Exception  @type object;
#L158aaa.   v3:= new [|java:lang:RuntimeException|];
#L158aae.   call temp:=  [|java:io:IOException.getMessage|](v1) @signature [|Ljava/io/IOException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L158ab4.   v4:= temp  @type object;
#L158ab6.   call temp:=  [|java:lang:RuntimeException.<init>|](v3, v4) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L158abc.   throw v3;
  catch  [|java:io:IOException|] @[L158a5a..L158aa4] goto L158aa8;

   }
record [|javax:crypto:EncryptedPrivateKeyInfo$2|]  @type class @AccessFlag FINAL  extends [|org:apache:harmony:security:asn1:ASN1Sequence|] {
   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo$2.<init>|] ([|javax:crypto:EncryptedPrivateKeyInfo$2|] v1 @type (this), [|org:apache:harmony:security:asn1:ASN1Type|][] v2 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo$2|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$2;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L158adc.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.<init>|](v1, v2) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type direct;
#L158ae2.   v0:= 3  @length 4;
#L158ae4.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo$2.setOptional|](v1, v0) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$2;.setOptional:(I)V|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo$2|] @type virtual;
#L158aea.   return @void ;

   }
record [|javax:crypto:EncryptedPrivateKeyInfo|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|javax:crypto:EncryptedPrivateKeyInfo.algName|]    @AccessFlag PRIVATE;
      [|java:security:AlgorithmParameters|] [|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.encoded|]    @AccessFlag PRIVATE_VOLATILE;
      [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|javax:crypto:EncryptedPrivateKeyInfo.oid|]    @AccessFlag PRIVATE;
   }
      global [|org:apache:harmony:security:asn1:ASN1SetOf|] @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1Attributes|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|org:apache:harmony:security:asn1:ASN1Sequence|] @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|org:apache:harmony:security:asn1:ASN1Sequence|] @@[|javax:crypto:EncryptedPrivateKeyInfo.asn1|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|][] @@[|javax:crypto:EncryptedPrivateKeyInfo.nullParam|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo.<clinit>|] () @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L158afc.   v4:= 1  @length 4;
#L158afe.   v3:= 2  @length 4;
#L158b00.   v5:= 0  @length 4;
#L158b02.   v0:= new [|byte|][v3];
#L158b06.   goto L158b98;
#L158b0c.   @@[|javax:crypto:EncryptedPrivateKeyInfo.nullParam|] := v0  @type object;
#L158b10.   v0:= new [|javax:crypto:EncryptedPrivateKeyInfo$1|];
#L158b14.   v1:= new [|org:apache:harmony:security:asn1:ASN1Type|][v3];
#L158b18.   v2:= @@[|org:apache:harmony:security:x509:AlgorithmIdentifier.ASN1|]   @type object;
#L158b1c.   v1[v5]:= v2  @type object;
#L158b20.   call temp:=  [|org:apache:harmony:security:asn1:ASN1OctetString.getInstance|]() @signature [|Lorg/apache/harmony/security/asn1/ASN1OctetString;.getInstance:()Lorg/apache/harmony/security/asn1/ASN1OctetString;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1OctetString|] @type static;
#L158b26.   v2:= temp  @type object;
#L158b28.   v1[v4]:= v2  @type object;
#L158b2c.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo$1.<init>|](v0, v1) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$1;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo$1|] @type direct;
#L158b32.   @@[|javax:crypto:EncryptedPrivateKeyInfo.asn1|] := v0  @type object;
#L158b36.   v0:= new [|org:apache:harmony:security:asn1:ASN1SetOf|];
#L158b3a.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Any.getInstance|]() @signature [|Lorg/apache/harmony/security/asn1/ASN1Any;.getInstance:()Lorg/apache/harmony/security/asn1/ASN1Any;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Any|] @type static;
#L158b40.   v1:= temp  @type object;
#L158b42.   call temp:=  [|org:apache:harmony:security:asn1:ASN1SetOf.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/asn1/ASN1SetOf;.<init>:(Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1SetOf|] @type direct;
#L158b48.   @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1Attributes|] := v0  @type object;
#L158b4c.   v0:= new [|javax:crypto:EncryptedPrivateKeyInfo$2|];
#L158b50.   v1:= 4  @length 4;
#L158b52.   v1:= new [|org:apache:harmony:security:asn1:ASN1Type|][v1];
#L158b56.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Integer.getInstance|]() @signature [|Lorg/apache/harmony/security/asn1/ASN1Integer;.getInstance:()Lorg/apache/harmony/security/asn1/ASN1Integer;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Integer|] @type static;
#L158b5c.   v2:= temp  @type object;
#L158b5e.   v1[v5]:= v2  @type object;
#L158b62.   v2:= @@[|org:apache:harmony:security:x509:AlgorithmIdentifier.ASN1|]   @type object;
#L158b66.   v1[v4]:= v2  @type object;
#L158b6a.   call temp:=  [|org:apache:harmony:security:asn1:ASN1OctetString.getInstance|]() @signature [|Lorg/apache/harmony/security/asn1/ASN1OctetString;.getInstance:()Lorg/apache/harmony/security/asn1/ASN1OctetString;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1OctetString|] @type static;
#L158b70.   v2:= temp  @type object;
#L158b72.   v1[v3]:= v2  @type object;
#L158b76.   v2:= 3  @length 4;
#L158b78.   v3:= new [|org:apache:harmony:security:asn1:ASN1Implicit|];
#L158b7c.   v4:= @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1Attributes|]   @type object;
#L158b80.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Implicit.<init>|](v3, v5, v4) @signature [|Lorg/apache/harmony/security/asn1/ASN1Implicit;.<init>:(ILorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Implicit|] @type direct;
#L158b86.   v1[v2]:= v3  @type object;
#L158b8a.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo$2.<init>|](v0, v1) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo$2;.<init>:([Lorg/apache/harmony/security/asn1/ASN1Type;)V|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo$2|] @type direct;
#L158b90.   @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|] := v0  @type object;
#L158b94.   return @void ;
#L158b96.   
#L158b98.   v0:=`[fill-array-data length error];
               goto L158b0c;

   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo.<init>|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|byte|][] v5) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.<init>:(Ljava/lang/String;[B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L158bb4.   v2:= 0  @length 4;
#L158bb6.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L158bbc.   if v4 != 0 then goto L158bd0;
#L158bc0.   v0:= new [|java:lang:NullPointerException|];
#L158bc4.   v1:= "encryptionAlgorithmName == null" @type (object, string);
#L158bc8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158bce.   throw v0;
#L158bd0.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v4 @type object;
#L158bd4.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.mapAlgName|](v3) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.mapAlgName:()Z|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L158bda.   v0:= temp;
#L158bdc.   if v0 != 0 then goto L158c16;
#L158be0.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L158be4.   v1:= new [|java:lang:StringBuilder|];
#L158be8.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L158bee.   v2:= "Unsupported algorithm: " @type (object, string);
#L158bf2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158bf8.   v1:= temp  @type object;
#L158bfa.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158bfe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158c04.   v1:= temp  @type object;
#L158c06.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158c0c.   v1:= temp  @type object;
#L158c0e.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L158c14.   throw v0;
#L158c16.   if v5 != 0 then goto L158c2a;
#L158c1a.   v0:= new [|java:lang:NullPointerException|];
#L158c1e.   v1:= "encryptedData == null" @type (object, string);
#L158c22.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158c28.   throw v0;
#L158c2a.   v0:= v5.length;
#L158c2c.   if v0 != 0 then goto L158c40;
#L158c30.   v0:= new [|java:lang:IllegalArgumentException|];
#L158c34.   v1:= "encryptedData.length == 0" @type (object, string);
#L158c38.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L158c3e.   throw v0;
#L158c40.   v0:= v5.length;
#L158c42.   v0:= new [|byte|][v0];
#L158c46.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]  := v0 @type object;
#L158c4a.   v0:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158c4e.   v1:= v5.length;
#L158c50.   call temp:=  [|java:lang:System.arraycopy|](v5, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L158c56.   v0:= 0  @length 4;
#L158c58.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]  := v0 @type object;
#L158c5c.   return @void ;

   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo.<init>|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v3 @type (this), [|java:security:AlgorithmParameters|] v4 @type (object), [|byte|][] v5) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.<init>:(Ljava/security/AlgorithmParameters;[B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L158c70.   v2:= 0  @length 4;
#L158c72.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L158c78.   if v4 != 0 then goto L158c8c;
#L158c7c.   v0:= new [|java:lang:NullPointerException|];
#L158c80.   v1:= "algParams == null" @type (object, string);
#L158c84.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158c8a.   throw v0;
#L158c8c.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]  := v4 @type object;
#L158c90.   if v5 != 0 then goto L158ca4;
#L158c94.   v0:= new [|java:lang:NullPointerException|];
#L158c98.   v1:= "encryptedData == null" @type (object, string);
#L158c9c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158ca2.   throw v0;
#L158ca4.   v0:= v5.length;
#L158ca6.   if v0 != 0 then goto L158cba;
#L158caa.   v0:= new [|java:lang:IllegalArgumentException|];
#L158cae.   v1:= "encryptedData.length == 0" @type (object, string);
#L158cb2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L158cb8.   throw v0;
#L158cba.   v0:= v5.length;
#L158cbc.   v0:= new [|byte|][v0];
#L158cc0.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]  := v0 @type object;
#L158cc4.   v0:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158cc8.   v1:= v5.length;
#L158cca.   call temp:=  [|java:lang:System.arraycopy|](v5, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L158cd0.   v0:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L158cd4.   call temp:=  [|java:security:AlgorithmParameters.getAlgorithm|](v0) @signature [|Ljava/security/AlgorithmParameters;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L158cda.   v0:= temp  @type object;
#L158cdc.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v0 @type object;
#L158ce0.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.mapAlgName|](v3) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.mapAlgName:()Z|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L158ce6.   v0:= temp;
#L158ce8.   if v0 != 0 then goto L158d22;
#L158cec.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L158cf0.   v1:= new [|java:lang:StringBuilder|];
#L158cf4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L158cfa.   v2:= "Unsupported algorithm: " @type (object, string);
#L158cfe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158d04.   v1:= temp  @type object;
#L158d06.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158d0a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158d10.   v1:= temp  @type object;
#L158d12.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L158d18.   v1:= temp  @type object;
#L158d1a.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L158d20.   throw v0;
#L158d22.   return @void ;

   }
    procedure [|void|] [|javax:crypto:EncryptedPrivateKeyInfo.<init>|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v8 @type (this), [|byte|][] v9) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L158d34.   v7:= 0  @length 4;
#L158d36.   call temp:=  [|java:lang:Object.<init>|](v8) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L158d3c.   if v9 != 0 then goto L158d50;
#L158d40.   v5:= new [|java:lang:NullPointerException|];
#L158d44.   v6:= "encoded == null" @type (object, string);
#L158d48.   call temp:=  [|java:lang:NullPointerException.<init>|](v5, v6) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L158d4e.   throw v5;
#L158d50.   v5:= v9.length;
#L158d52.   v5:= new [|byte|][v5];
#L158d56.   v8.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]  := v5 @type object;
#L158d5a.   v5:= v8.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]   @type object;
#L158d5e.   v6:= v9.length;
#L158d60.   call temp:=  [|java:lang:System.arraycopy|](v9, v7, v5, v7, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L158d66.   v5:= @@[|javax:crypto:EncryptedPrivateKeyInfo.asn1|]   @type object;
#L158d6a.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.decode|](v5, v9) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.decode:([B)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L158d70.   v5:= temp  @type object;
#L158d72.   v5:= ([|java:lang:Object|][])v5;
#L158d76.   v4:= v5  @type object;
#L158d78.   v4:= ([|java:lang:Object|][])v4;
#L158d7c.   v0:= v4[v7]  @type object;
#L158d80.   v0:= ([|org:apache:harmony:security:x509:AlgorithmIdentifier|])v0;
#L158d84.   call temp:=  [|org:apache:harmony:security:x509:AlgorithmIdentifier.getAlgorithm|](v0) @signature [|Lorg/apache/harmony/security/x509/AlgorithmIdentifier;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:x509:AlgorithmIdentifier|] @type virtual;
#L158d8a.   v5:= temp  @type object;
#L158d8c.   v8.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v5 @type object;
#L158d90.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.mapAlgName|](v8) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.mapAlgName:()Z|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L158d96.   v2:= temp;
#L158d98.   v1:= 0  @length 4;
#L158d9a.   call temp:=  [|org:apache:harmony:security:x509:AlgorithmIdentifier.getParameters|](v0) @signature [|Lorg/apache/harmony/security/x509/AlgorithmIdentifier;.getParameters:()[B|] @classDescriptor [|org:apache:harmony:security:x509:AlgorithmIdentifier|] @type virtual;
#L158da0.   v3:= temp  @type object;
#L158da2.   if v3 == 0 then goto L158ddc;
#L158da6.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.isNullValue|](v3) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.isNullValue:([B)Z|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type static;
#L158dac.   v5:= temp;
#L158dae.   if v5 != 0 then goto L158ddc;
#L158db2.   v5:= v8.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158db6.   call temp:=  [|java:security:AlgorithmParameters.getInstance|](v5) @signature [|Ljava/security/AlgorithmParameters;.getInstance:(Ljava/lang/String;)Ljava/security/AlgorithmParameters;|] @classDescriptor [|java:security:AlgorithmParameters|] @type static;
#L158dbc.   v1:= temp  @type object;
#L158dbe.   call temp:=  [|org:apache:harmony:security:x509:AlgorithmIdentifier.getParameters|](v0) @signature [|Lorg/apache/harmony/security/x509/AlgorithmIdentifier;.getParameters:()[B|] @classDescriptor [|org:apache:harmony:security:x509:AlgorithmIdentifier|] @type virtual;
#L158dc4.   v5:= temp  @type object;
#L158dc6.   call temp:=  [|java:security:AlgorithmParameters.init|](v1, v5) @signature [|Ljava/security/AlgorithmParameters;.init:([B)V|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L158dcc.   if v2 != 0 then goto L158ddc;
#L158dd0.   call temp:=  [|java:security:AlgorithmParameters.getAlgorithm|](v1) @signature [|Ljava/security/AlgorithmParameters;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L158dd6.   v5:= temp  @type object;
#L158dd8.   v8.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v5 @type object;
#L158ddc.   v8.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]  := v1 @type object;
#L158de0.   v5:= 1  @length 4;
#L158de2.   v5:= v4[v5]  @type object;
#L158de6.   v5:= ([|byte|][])v5;
#L158dea.   v5:= ([|byte|][])v5;
#L158dee.   v8.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]  := v5 @type object;
#L158df2.   return @void ;
#L158df4.   v5:= Exception  @type object;
#L158df6.   goto L158ddc;
  catch  [|java:security:NoSuchAlgorithmException|] @[L158db2..L158ddc] goto L158df4;

   }
    procedure [|java:security:AlgorithmParameters|] [|javax:crypto:EncryptedPrivateKeyInfo.access$000|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v1 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$000:(Ljavax/crypto/EncryptedPrivateKeyInfo;)Ljava/security/AlgorithmParameters;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L158e18.   v0:= v1.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L158e1c.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.access$100|] () @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$100:()[B|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L158e30.   v0:= @@[|javax:crypto:EncryptedPrivateKeyInfo.nullParam|]   @type object;
#L158e34.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:EncryptedPrivateKeyInfo.access$200|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v1 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$200:(Ljavax/crypto/EncryptedPrivateKeyInfo;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L158e48.   v0:= v1.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]   @type object;
#L158e4c.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.access$300|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v1 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.access$300:(Ljavax/crypto/EncryptedPrivateKeyInfo;)[B|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L158e60.   v0:= v1.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158e64.   return v0  @type object;

   }
    procedure [|java:security:InvalidKeyException|] [|javax:crypto:EncryptedPrivateKeyInfo.invalidKey|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v2 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.invalidKey:()Ljava/security/InvalidKeyException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L158e78.   v0:= new [|java:security:InvalidKeyException|];
#L158e7c.   v1:= "Decrypted data does not represent valid PKCS#8 PrivateKeyInfo" @type (object, string);
#L158e80.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L158e86.   throw v0;

   }
    procedure [|boolean|] [|javax:crypto:EncryptedPrivateKeyInfo.isNullValue|] ([|byte|][] v4) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.isNullValue:([B)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L158e98.   v0:= 1  @length 4;
#L158e9a.   v1:= 0  @length 4;
#L158e9c.   v2:= v4[v1]  @byte;
#L158ea0.   v3:= 5  @length 4;
#L158ea2.   if v2 != v3 then goto L158eb0;
#L158ea6.   v2:= v4[v0]  @byte;
#L158eaa.   if v2 != 0 then goto L158eb0;
#L158eae.   return v0;
#L158eb0.   v0:= v1;
#L158eb2.   goto L158eae;

   }
    procedure [|boolean|] [|javax:crypto:EncryptedPrivateKeyInfo.mapAlgName|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v3 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.mapAlgName:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L158ec4.   v1:= 0  @length 4;
#L158ec6.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158eca.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.isOID|](v2) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.isOID:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158ed0.   v2:= temp;
#L158ed2.   if v2 == 0 then goto L158f0a;
#L158ed6.   v1:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158eda.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.normalize|](v1) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.normalize:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158ee0.   v1:= temp  @type object;
#L158ee2.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]  := v1 @type object;
#L158ee6.   v1:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]   @type object;
#L158eea.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.map2AlgName|](v1) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.map2AlgName:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158ef0.   v1:= temp  @type object;
#L158ef2.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v1 @type object;
#L158ef6.   v1:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158efa.   if v1 != 0 then goto L158f06;
#L158efe.   v1:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]   @type object;
#L158f02.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v1 @type object;
#L158f06.   v1:= 1  @length 4;
#L158f08.   return v1;
#L158f0a.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158f0e.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.getStandardName|](v2) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.getStandardName:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158f14.   v0:= temp  @type object;
#L158f16.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158f1a.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.map2OID|](v2) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.map2OID:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158f20.   v2:= temp  @type object;
#L158f22.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]  := v2 @type object;
#L158f26.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]   @type object;
#L158f2a.   if v2 != 0 then goto L158f4c;
#L158f2e.   if v0 == 0 then goto L158f08;
#L158f32.   call temp:=  [|org:apache:harmony:security:utils:AlgNameMapper.map2OID|](v0) @signature [|Lorg/apache/harmony/security/utils/AlgNameMapper;.map2OID:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:security:utils:AlgNameMapper|] @type static;
#L158f38.   v2:= temp  @type object;
#L158f3a.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]  := v2 @type object;
#L158f3e.   v2:= v3.[|javax:crypto:EncryptedPrivateKeyInfo.oid|]   @type object;
#L158f42.   if v2 == 0 then goto L158f08;
#L158f46.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v0 @type object;
#L158f4a.   goto L158f06;
#L158f4c.   if v0 == 0 then goto L158f06;
#L158f50.   v3.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]  := v0 @type object;
#L158f54.   goto L158f06;

   }
    procedure [|java:lang:String|] [|javax:crypto:EncryptedPrivateKeyInfo.getAlgName|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v1 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getAlgName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L158f68.   v0:= v1.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L158f6c.   return v0  @type object;

   }
    procedure [|java:security:AlgorithmParameters|] [|javax:crypto:EncryptedPrivateKeyInfo.getAlgParameters|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v1 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getAlgParameters:()Ljava/security/AlgorithmParameters;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L158f80.   v0:= v1.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L158f84.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.getEncoded|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v4 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L158f98.   v3:= 0  @length 4;
#L158f9a.   v1:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]   @type object;
#L158f9e.   if v1 != 0 then goto L158fb2;
#L158fa2.   v1:= @@[|javax:crypto:EncryptedPrivateKeyInfo.asn1|]   @type object;
#L158fa6.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.encode|](v1, v4) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.encode:(Ljava/lang/Object;)[B|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L158fac.   v1:= temp  @type object;
#L158fae.   v4.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]  := v1 @type object;
#L158fb2.   v1:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]   @type object;
#L158fb6.   v1:= v1.length;
#L158fb8.   v0:= new [|byte|][v1];
#L158fbc.   v1:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]   @type object;
#L158fc0.   v2:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encoded|]   @type object;
#L158fc4.   v2:= v2.length;
#L158fc6.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L158fcc.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:EncryptedPrivateKeyInfo.getEncryptedData|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v4 @type (this)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getEncryptedData:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L158fe0.   v3:= 0  @length 4;
#L158fe2.   v1:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158fe6.   v1:= v1.length;
#L158fe8.   v0:= new [|byte|][v1];
#L158fec.   v1:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158ff0.   v2:= v4.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L158ff4.   v2:= v2.length;
#L158ff6.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L158ffc.   return v0  @type object;

   }
    procedure [|java:security:spec:PKCS8EncodedKeySpec|] [|javax:crypto:EncryptedPrivateKeyInfo.getKeySpec|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v6 @type (this), [|java:security:Key|] v7 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getKeySpec:(Ljava/security/Key;)Ljava/security/spec/PKCS8EncodedKeySpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L159010.   if v7 != 0 then goto L159024;
#L159014.   v4:= new [|java:lang:NullPointerException|];
#L159018.   v5:= "decryptKey == null" @type (object, string);
#L15901c.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159022.   throw v4;
#L159024.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L159028.   call temp:=  [|javax:crypto:Cipher.getInstance|](v4) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15902e.   v0:= temp  @type object;
#L159030.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L159034.   if v4 != 0 then goto L159062;
#L159038.   v4:= 2  @length 4;
#L15903a.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L159040.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L159044.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v4) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15904a.   v1:= temp  @type object;
#L15904c.   v4:= @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|]   @type object;
#L159050.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.verify|](v4, v1) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.verify:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L159056.   v4:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L15905a.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v4, v1) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L159060.   return v4  @type object;
#L159062.   v4:= 2  @length 4;
#L159064.   v5:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L159068.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7, v5) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15906e.   goto L159040;
#L159070.   v2:= Exception  @type object;
#L159072.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L159076.   call temp:=  [|javax:crypto:NoSuchPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/NoSuchPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L15907c.   v5:= temp  @type object;
#L15907e.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L159084.   throw v4;
#L159086.   v3:= Exception  @type object;
#L159088.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.invalidKey|](v6) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.invalidKey:()Ljava/security/InvalidKeyException;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L15908e.   v4:= temp  @type object;
#L159090.   throw v4;
#L159092.   v2:= Exception  @type object;
#L159094.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L159098.   call temp:=  [|java:security:InvalidAlgorithmParameterException.getMessage|](v2) @signature [|Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type virtual;
#L15909e.   v5:= temp  @type object;
#L1590a0.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1590a6.   throw v4;
#L1590a8.   v2:= Exception  @type object;
#L1590aa.   v4:= new [|java:security:InvalidKeyException|];
#L1590ae.   call temp:=  [|java:lang:IllegalStateException.getMessage|](v2) @signature [|Ljava/lang/IllegalStateException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L1590b4.   v5:= temp  @type object;
#L1590b6.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1590bc.   throw v4;
#L1590be.   v2:= Exception  @type object;
#L1590c0.   v4:= new [|java:security:InvalidKeyException|];
#L1590c4.   call temp:=  [|javax:crypto:IllegalBlockSizeException.getMessage|](v2) @signature [|Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L1590ca.   v5:= temp  @type object;
#L1590cc.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1590d2.   throw v4;
#L1590d4.   v2:= Exception  @type object;
#L1590d6.   v4:= new [|java:security:InvalidKeyException|];
#L1590da.   call temp:=  [|javax:crypto:BadPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L1590e0.   v5:= temp  @type object;
#L1590e2.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1590e8.   throw v4;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159024..L15904a] goto L159070;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159024..L15904a] goto L159092;
  catch  [|java:lang:IllegalStateException|] @[L159024..L15904a] goto L1590a8;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159024..L15904a] goto L1590be;
  catch  [|javax:crypto:BadPaddingException|] @[L159024..L15904a] goto L1590d4;
  catch  [|java:io:IOException|] @[L15904c..L159056] goto L159086;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L15904c..L159056] goto L159070;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L15904c..L159056] goto L159092;
  catch  [|java:lang:IllegalStateException|] @[L15904c..L159056] goto L1590a8;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L15904c..L159056] goto L1590be;
  catch  [|javax:crypto:BadPaddingException|] @[L15904c..L159056] goto L1590d4;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159056..L15906e] goto L159070;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159056..L15906e] goto L159092;
  catch  [|java:lang:IllegalStateException|] @[L159056..L15906e] goto L1590a8;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159056..L15906e] goto L1590be;
  catch  [|javax:crypto:BadPaddingException|] @[L159056..L15906e] goto L1590d4;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159088..L159092] goto L159070;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159088..L159092] goto L159092;
  catch  [|java:lang:IllegalStateException|] @[L159088..L159092] goto L1590a8;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159088..L159092] goto L1590be;
  catch  [|javax:crypto:BadPaddingException|] @[L159088..L159092] goto L1590d4;

   }
    procedure [|java:security:spec:PKCS8EncodedKeySpec|] [|javax:crypto:EncryptedPrivateKeyInfo.getKeySpec|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v6 @type (this), [|java:security:Key|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getKeySpec:(Ljava/security/Key;Ljava/lang/String;)Ljava/security/spec/PKCS8EncodedKeySpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L159140.   if v7 != 0 then goto L159154;
#L159144.   v4:= new [|java:lang:NullPointerException|];
#L159148.   v5:= "decryptKey == null" @type (object, string);
#L15914c.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159152.   throw v4;
#L159154.   if v8 != 0 then goto L159168;
#L159158.   v4:= new [|java:lang:NullPointerException|];
#L15915c.   v5:= "providerName == null" @type (object, string);
#L159160.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159166.   throw v4;
#L159168.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L15916c.   call temp:=  [|javax:crypto:Cipher.getInstance|](v4, v8) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L159172.   v0:= temp  @type object;
#L159174.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L159178.   if v4 != 0 then goto L1591a6;
#L15917c.   v4:= 2  @length 4;
#L15917e.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L159184.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L159188.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v4) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15918e.   v1:= temp  @type object;
#L159190.   v4:= @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|]   @type object;
#L159194.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.verify|](v4, v1) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.verify:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L15919a.   v4:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L15919e.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v4, v1) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1591a4.   return v4  @type object;
#L1591a6.   v4:= 2  @length 4;
#L1591a8.   v5:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L1591ac.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7, v5) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1591b2.   goto L159184;
#L1591b4.   v2:= Exception  @type object;
#L1591b6.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L1591ba.   call temp:=  [|javax:crypto:NoSuchPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/NoSuchPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L1591c0.   v5:= temp  @type object;
#L1591c2.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1591c8.   throw v4;
#L1591ca.   v3:= Exception  @type object;
#L1591cc.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.invalidKey|](v6) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.invalidKey:()Ljava/security/InvalidKeyException;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L1591d2.   v4:= temp  @type object;
#L1591d4.   throw v4;
#L1591d6.   v2:= Exception  @type object;
#L1591d8.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L1591dc.   call temp:=  [|java:security:InvalidAlgorithmParameterException.getMessage|](v2) @signature [|Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type virtual;
#L1591e2.   v5:= temp  @type object;
#L1591e4.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1591ea.   throw v4;
#L1591ec.   v2:= Exception  @type object;
#L1591ee.   v4:= new [|java:security:InvalidKeyException|];
#L1591f2.   call temp:=  [|java:lang:IllegalStateException.getMessage|](v2) @signature [|Ljava/lang/IllegalStateException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L1591f8.   v5:= temp  @type object;
#L1591fa.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L159200.   throw v4;
#L159202.   v2:= Exception  @type object;
#L159204.   v4:= new [|java:security:InvalidKeyException|];
#L159208.   call temp:=  [|javax:crypto:IllegalBlockSizeException.getMessage|](v2) @signature [|Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L15920e.   v5:= temp  @type object;
#L159210.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L159216.   throw v4;
#L159218.   v2:= Exception  @type object;
#L15921a.   v4:= new [|java:security:InvalidKeyException|];
#L15921e.   call temp:=  [|javax:crypto:BadPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L159224.   v5:= temp  @type object;
#L159226.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15922c.   throw v4;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159168..L15918e] goto L1591b4;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159168..L15918e] goto L1591d6;
  catch  [|java:lang:IllegalStateException|] @[L159168..L15918e] goto L1591ec;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159168..L15918e] goto L159202;
  catch  [|javax:crypto:BadPaddingException|] @[L159168..L15918e] goto L159218;
  catch  [|java:io:IOException|] @[L159190..L15919a] goto L1591ca;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159190..L15919a] goto L1591b4;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159190..L15919a] goto L1591d6;
  catch  [|java:lang:IllegalStateException|] @[L159190..L15919a] goto L1591ec;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159190..L15919a] goto L159202;
  catch  [|javax:crypto:BadPaddingException|] @[L159190..L15919a] goto L159218;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L15919a..L1591b2] goto L1591b4;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L15919a..L1591b2] goto L1591d6;
  catch  [|java:lang:IllegalStateException|] @[L15919a..L1591b2] goto L1591ec;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L15919a..L1591b2] goto L159202;
  catch  [|javax:crypto:BadPaddingException|] @[L15919a..L1591b2] goto L159218;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L1591cc..L1591d6] goto L1591b4;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1591cc..L1591d6] goto L1591d6;
  catch  [|java:lang:IllegalStateException|] @[L1591cc..L1591d6] goto L1591ec;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1591cc..L1591d6] goto L159202;
  catch  [|javax:crypto:BadPaddingException|] @[L1591cc..L1591d6] goto L159218;

   }
    procedure [|java:security:spec:PKCS8EncodedKeySpec|] [|javax:crypto:EncryptedPrivateKeyInfo.getKeySpec|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v6 @type (this), [|java:security:Key|] v7 @type (object), [|java:security:Provider|] v8 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getKeySpec:(Ljava/security/Key;Ljava/security/Provider;)Ljava/security/spec/PKCS8EncodedKeySpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L159284.   if v7 != 0 then goto L159298;
#L159288.   v4:= new [|java:lang:NullPointerException|];
#L15928c.   v5:= "decryptKey == null" @type (object, string);
#L159290.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159296.   throw v4;
#L159298.   if v8 != 0 then goto L1592ac;
#L15929c.   v4:= new [|java:lang:NullPointerException|];
#L1592a0.   v5:= "provider == null" @type (object, string);
#L1592a4.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1592aa.   throw v4;
#L1592ac.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algName|]   @type object;
#L1592b0.   call temp:=  [|javax:crypto:Cipher.getInstance|](v4, v8) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L1592b6.   v0:= temp  @type object;
#L1592b8.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L1592bc.   if v4 != 0 then goto L1592ea;
#L1592c0.   v4:= 2  @length 4;
#L1592c2.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1592c8.   v4:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L1592cc.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v4) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1592d2.   v1:= temp  @type object;
#L1592d4.   v4:= @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|]   @type object;
#L1592d8.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.verify|](v4, v1) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.verify:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L1592de.   v4:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1592e2.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v4, v1) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1592e8.   return v4  @type object;
#L1592ea.   v4:= 2  @length 4;
#L1592ec.   v5:= v6.[|javax:crypto:EncryptedPrivateKeyInfo.algParameters|]   @type object;
#L1592f0.   call temp:=  [|javax:crypto:Cipher.init|](v0, v4, v7, v5) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1592f6.   goto L1592c8;
#L1592f8.   v2:= Exception  @type object;
#L1592fa.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L1592fe.   call temp:=  [|javax:crypto:NoSuchPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/NoSuchPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L159304.   v5:= temp  @type object;
#L159306.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15930c.   throw v4;
#L15930e.   v3:= Exception  @type object;
#L159310.   call temp:=  [|javax:crypto:EncryptedPrivateKeyInfo.invalidKey|](v6) @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.invalidKey:()Ljava/security/InvalidKeyException;|] @classDescriptor [|javax:crypto:EncryptedPrivateKeyInfo|] @type direct;
#L159316.   v4:= temp  @type object;
#L159318.   throw v4;
#L15931a.   v2:= Exception  @type object;
#L15931c.   v4:= new [|java:security:NoSuchAlgorithmException|];
#L159320.   call temp:=  [|java:security:InvalidAlgorithmParameterException.getMessage|](v2) @signature [|Ljava/security/InvalidAlgorithmParameterException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type virtual;
#L159326.   v5:= temp  @type object;
#L159328.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v4, v5) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15932e.   throw v4;
#L159330.   v2:= Exception  @type object;
#L159332.   v4:= new [|java:security:InvalidKeyException|];
#L159336.   call temp:=  [|java:lang:IllegalStateException.getMessage|](v2) @signature [|Ljava/lang/IllegalStateException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L15933c.   v5:= temp  @type object;
#L15933e.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L159344.   throw v4;
#L159346.   v2:= Exception  @type object;
#L159348.   v4:= new [|java:security:InvalidKeyException|];
#L15934c.   call temp:=  [|javax:crypto:IllegalBlockSizeException.getMessage|](v2) @signature [|Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L159352.   v5:= temp  @type object;
#L159354.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15935a.   throw v4;
#L15935c.   v2:= Exception  @type object;
#L15935e.   v4:= new [|java:security:InvalidKeyException|];
#L159362.   call temp:=  [|javax:crypto:BadPaddingException.getMessage|](v2) @signature [|Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L159368.   v5:= temp  @type object;
#L15936a.   call temp:=  [|java:security:InvalidKeyException.<init>|](v4, v5) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L159370.   throw v4;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L1592ac..L1592d2] goto L1592f8;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1592ac..L1592d2] goto L15931a;
  catch  [|java:lang:IllegalStateException|] @[L1592ac..L1592d2] goto L159330;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1592ac..L1592d2] goto L159346;
  catch  [|javax:crypto:BadPaddingException|] @[L1592ac..L1592d2] goto L15935c;
  catch  [|java:io:IOException|] @[L1592d4..L1592de] goto L15930e;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L1592d4..L1592de] goto L1592f8;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1592d4..L1592de] goto L15931a;
  catch  [|java:lang:IllegalStateException|] @[L1592d4..L1592de] goto L159330;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1592d4..L1592de] goto L159346;
  catch  [|javax:crypto:BadPaddingException|] @[L1592d4..L1592de] goto L15935c;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L1592de..L1592f6] goto L1592f8;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1592de..L1592f6] goto L15931a;
  catch  [|java:lang:IllegalStateException|] @[L1592de..L1592f6] goto L159330;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1592de..L1592f6] goto L159346;
  catch  [|javax:crypto:BadPaddingException|] @[L1592de..L1592f6] goto L15935c;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L159310..L15931a] goto L1592f8;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L159310..L15931a] goto L15931a;
  catch  [|java:lang:IllegalStateException|] @[L159310..L15931a] goto L159330;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L159310..L15931a] goto L159346;
  catch  [|javax:crypto:BadPaddingException|] @[L159310..L15931a] goto L15935c;

   }
    procedure [|java:security:spec:PKCS8EncodedKeySpec|] [|javax:crypto:EncryptedPrivateKeyInfo.getKeySpec|] ([|javax:crypto:EncryptedPrivateKeyInfo|] v5 @type (this), [|javax:crypto:Cipher|] v6 @type (object)) @owner [|javax:crypto:EncryptedPrivateKeyInfo|] @signature [|Ljavax/crypto/EncryptedPrivateKeyInfo;.getKeySpec:(Ljavax/crypto/Cipher;)Ljava/security/spec/PKCS8EncodedKeySpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1593c8.   if v6 != 0 then goto L1593dc;
#L1593cc.   v3:= new [|java:lang:NullPointerException|];
#L1593d0.   v4:= "cipher == null" @type (object, string);
#L1593d4.   call temp:=  [|java:lang:NullPointerException.<init>|](v3, v4) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1593da.   throw v3;
#L1593dc.   v3:= v5.[|javax:crypto:EncryptedPrivateKeyInfo.encryptedData|]   @type object;
#L1593e0.   call temp:=  [|javax:crypto:Cipher.doFinal|](v6, v3) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L1593e6.   v0:= temp  @type object;
#L1593e8.   v3:= @@[|javax:crypto:EncryptedPrivateKeyInfo.ASN1PrivateKeyInfo|]   @type object;
#L1593ec.   call temp:=  [|org:apache:harmony:security:asn1:ASN1Sequence.verify|](v3, v0) @signature [|Lorg/apache/harmony/security/asn1/ASN1Sequence;.verify:([B)V|] @classDescriptor [|org:apache:harmony:security:asn1:ASN1Sequence|] @type virtual;
#L1593f2.   v3:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1593f6.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v3, v0) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1593fc.   return v3  @type object;
#L1593fe.   v2:= Exception  @type object;
#L159400.   v3:= new [|java:security:spec:InvalidKeySpecException|];
#L159404.   v4:= "Decrypted data does not represent valid PKCS#8 PrivateKeyInfo" @type (object, string);
#L159408.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v3, v4) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L15940e.   throw v3;
#L159410.   v1:= Exception  @type object;
#L159412.   v3:= new [|java:security:spec:InvalidKeySpecException|];
#L159416.   call temp:=  [|java:lang:IllegalStateException.getMessage|](v1) @signature [|Ljava/lang/IllegalStateException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L15941c.   v4:= temp  @type object;
#L15941e.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v3, v4) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L159424.   throw v3;
#L159426.   v1:= Exception  @type object;
#L159428.   v3:= new [|java:security:spec:InvalidKeySpecException|];
#L15942c.   call temp:=  [|javax:crypto:IllegalBlockSizeException.getMessage|](v1) @signature [|Ljavax/crypto/IllegalBlockSizeException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L159432.   v4:= temp  @type object;
#L159434.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v3, v4) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L15943a.   throw v3;
#L15943c.   v1:= Exception  @type object;
#L15943e.   v3:= new [|java:security:spec:InvalidKeySpecException|];
#L159442.   call temp:=  [|javax:crypto:BadPaddingException.getMessage|](v1) @signature [|Ljavax/crypto/BadPaddingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L159448.   v4:= temp  @type object;
#L15944a.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v3, v4) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L159450.   throw v3;
  catch  [|java:lang:IllegalStateException|] @[L1593dc..L1593e6] goto L159410;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1593dc..L1593e6] goto L159426;
  catch  [|javax:crypto:BadPaddingException|] @[L1593dc..L1593e6] goto L15943c;
  catch  [|java:io:IOException|] @[L1593e8..L1593f2] goto L1593fe;
  catch  [|java:lang:IllegalStateException|] @[L1593e8..L1593f2] goto L159410;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1593e8..L1593f2] goto L159426;
  catch  [|javax:crypto:BadPaddingException|] @[L1593e8..L1593f2] goto L15943c;
  catch  [|java:lang:IllegalStateException|] @[L1593f2..L159410] goto L159410;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1593f2..L159410] goto L159426;
  catch  [|javax:crypto:BadPaddingException|] @[L1593f2..L159410] goto L15943c;

   }
record [|javax:crypto:ExemptionMechanism|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|javax:crypto:ExemptionMechanism.generated|]    @AccessFlag PRIVATE;
      [|java:security:Key|] [|javax:crypto:ExemptionMechanism.initKey|]    @AccessFlag PRIVATE;
      [|boolean|] [|javax:crypto:ExemptionMechanism.isInit|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|javax:crypto:ExemptionMechanism.mechanism|]    @AccessFlag PRIVATE_FINAL;
      [|java:security:Provider|] [|javax:crypto:ExemptionMechanism.provider|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:ExemptionMechanismSpi|] [|javax:crypto:ExemptionMechanism.spiImpl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:ExemptionMechanism.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:ExemptionMechanism.<clinit>|] () @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L159494.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L159498.   v1:= "ExemptionMechanism" @type (object, string);
#L15949c.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L1594a2.   @@[|javax:crypto:ExemptionMechanism.ENGINE|] := v0  @type object;
#L1594a6.   return @void ;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanism.<init>|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this), [|javax:crypto:ExemptionMechanismSpi|] v2 @type (object), [|java:security:Provider|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.<init>:(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1594b8.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1594be.   v1.[|javax:crypto:ExemptionMechanism.mechanism|]  := v4 @type object;
#L1594c2.   v1.[|javax:crypto:ExemptionMechanism.spiImpl|]  := v2 @type object;
#L1594c6.   v1.[|javax:crypto:ExemptionMechanism.provider|]  := v3 @type object;
#L1594ca.   v0:= 0  @length 4;
#L1594cc.   v1.[|javax:crypto:ExemptionMechanism.isInit|]  := v0 @boolean;
#L1594d0.   return @void ;

   }
    procedure [|javax:crypto:ExemptionMechanism|] [|javax:crypto:ExemptionMechanism.getInstance|] ([|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getInstance:(Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1594e4.   if v4 != 0 then goto L1594f8;
#L1594e8.   v1:= new [|java:lang:NullPointerException|];
#L1594ec.   v2:= "algorithm == null" @type (object, string);
#L1594f0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1594f6.   throw v1;
#L1594f8.   v1:= @@[|javax:crypto:ExemptionMechanism.ENGINE|]   @type object;
#L1594fc.   v2:= 0  @length 4;
#L1594fe.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L159504.   v0:= temp  @type object;
#L159506.   v2:= new [|javax:crypto:ExemptionMechanism|];
#L15950a.   v1:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L15950e.   v1:= ([|javax:crypto:ExemptionMechanismSpi|])v1;
#L159512.   v3:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L159516.   call temp:=  [|javax:crypto:ExemptionMechanism.<init>|](v2, v1, v3, v4) @signature [|Ljavax/crypto/ExemptionMechanism;.<init>:(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ExemptionMechanism|] @type direct;
#L15951c.   return v2  @type object;

   }
    procedure [|javax:crypto:ExemptionMechanism|] [|javax:crypto:ExemptionMechanism.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159530.   if v4 != 0 then goto L159544;
#L159534.   v1:= new [|java:lang:IllegalArgumentException|];
#L159538.   v2:= "provider == null" @type (object, string);
#L15953c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159542.   throw v1;
#L159544.   call temp:=  [|java:security:Security.getProvider|](v4) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L15954a.   v0:= temp  @type object;
#L15954c.   if v0 != 0 then goto L15955c;
#L159550.   v1:= new [|java:security:NoSuchProviderException|];
#L159554.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v4) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L15955a.   throw v1;
#L15955c.   if v3 != 0 then goto L159570;
#L159560.   v1:= new [|java:lang:NullPointerException|];
#L159564.   v2:= "algorithm == null" @type (object, string);
#L159568.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15956e.   throw v1;
#L159570.   call temp:=  [|javax:crypto:ExemptionMechanism.getInstance|](v3, v0) @signature [|Ljavax/crypto/ExemptionMechanism;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/ExemptionMechanism;|] @classDescriptor [|javax:crypto:ExemptionMechanism|] @type static;
#L159576.   v1:= temp  @type object;
#L159578.   return v1  @type object;

   }
    procedure [|javax:crypto:ExemptionMechanism|] [|javax:crypto:ExemptionMechanism.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/ExemptionMechanism;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15958c.   if v3 != 0 then goto L1595a0;
#L159590.   v1:= new [|java:lang:NullPointerException|];
#L159594.   v2:= "algorithm == null" @type (object, string);
#L159598.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15959e.   throw v1;
#L1595a0.   if v4 != 0 then goto L1595b4;
#L1595a4.   v1:= new [|java:lang:IllegalArgumentException|];
#L1595a8.   v2:= "provider == null" @type (object, string);
#L1595ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1595b2.   throw v1;
#L1595b4.   v1:= @@[|javax:crypto:ExemptionMechanism.ENGINE|]   @type object;
#L1595b8.   v2:= 0  @length 4;
#L1595ba.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v3, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L1595c0.   v0:= temp  @type object;
#L1595c2.   v1:= new [|javax:crypto:ExemptionMechanism|];
#L1595c6.   v0:= ([|javax:crypto:ExemptionMechanismSpi|])v0;
#L1595ca.   call temp:=  [|javax:crypto:ExemptionMechanism.<init>|](v1, v0, v4, v3) @signature [|Ljavax/crypto/ExemptionMechanism;.<init>:(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ExemptionMechanism|] @type direct;
#L1595d0.   return v1  @type object;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanism.finalize|] ([|javax:crypto:ExemptionMechanism|] v2 @type (this)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1595e4.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1595ea.   return @void ;
#L1595ec.   v0:= Exception  @type object;
#L1595ee.   v1:= new [|java:lang:AssertionError|];
#L1595f2.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L1595f8.   throw v1;
  catch  [|java:lang:Throwable|] @[L1595e4..L1595ea] goto L1595ec;

   }
    procedure [|int|] [|javax:crypto:ExemptionMechanism.genExemptionBlob|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this), [|byte|][] v2) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.genExemptionBlob:([B)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15961c.   v0:= 0  @length 4;
#L15961e.   call temp:=  [|javax:crypto:ExemptionMechanism.genExemptionBlob|](v1, v2, v0) @signature [|Ljavax/crypto/ExemptionMechanism;.genExemptionBlob:([BI)I|] @classDescriptor [|javax:crypto:ExemptionMechanism|] @type virtual;
#L159624.   v0:= temp;
#L159626.   return v0;

   }
    procedure [|int|] [|javax:crypto:ExemptionMechanism.genExemptionBlob|] ([|javax:crypto:ExemptionMechanism|] v3 @type (this), [|byte|][] v4, [|int|] v5) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.genExemptionBlob:([BI)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159638.   v1:= v3.[|javax:crypto:ExemptionMechanism.isInit|]   @boolean;
#L15963c.   if v1 != 0 then goto L159650;
#L159640.   v1:= new [|java:lang:IllegalStateException|];
#L159644.   v2:= "ExemptionMechanism is not initialized" @type (object, string);
#L159648.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15964e.   throw v1;
#L159650.   v1:= 0  @length 4;
#L159652.   v3.[|javax:crypto:ExemptionMechanism.generated|]  := v1 @boolean;
#L159656.   v1:= v3.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L15965a.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineGenExemptionBlob|](v1, v4, v5) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGenExemptionBlob:([BI)I|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L159660.   v0:= temp;
#L159662.   v1:= 1  @length 4;
#L159664.   v3.[|javax:crypto:ExemptionMechanism.generated|]  := v1 @boolean;
#L159668.   return v0;

   }
    procedure [|byte|][] [|javax:crypto:ExemptionMechanism.genExemptionBlob|] ([|javax:crypto:ExemptionMechanism|] v3 @type (this)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.genExemptionBlob:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15967c.   v1:= v3.[|javax:crypto:ExemptionMechanism.isInit|]   @boolean;
#L159680.   if v1 != 0 then goto L159694;
#L159684.   v1:= new [|java:lang:IllegalStateException|];
#L159688.   v2:= "ExemptionMechanism is not initialized" @type (object, string);
#L15968c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L159692.   throw v1;
#L159694.   v1:= 0  @length 4;
#L159696.   v3.[|javax:crypto:ExemptionMechanism.generated|]  := v1 @boolean;
#L15969a.   v1:= v3.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L15969e.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineGenExemptionBlob|](v1) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGenExemptionBlob:()[B|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L1596a4.   v0:= temp  @type object;
#L1596a6.   v1:= 1  @length 4;
#L1596a8.   v3.[|javax:crypto:ExemptionMechanism.generated|]  := v1 @boolean;
#L1596ac.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:ExemptionMechanism.getName|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getName:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1596c0.   v0:= v1.[|javax:crypto:ExemptionMechanism.mechanism|]   @type object;
#L1596c4.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:ExemptionMechanism.getOutputSize|] ([|javax:crypto:ExemptionMechanism|] v2 @type (this), [|int|] v3) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getOutputSize:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1596d8.   v0:= v2.[|javax:crypto:ExemptionMechanism.isInit|]   @boolean;
#L1596dc.   if v0 != 0 then goto L1596f0;
#L1596e0.   v0:= new [|java:lang:IllegalStateException|];
#L1596e4.   v1:= "ExemptionMechanism is not initialized" @type (object, string);
#L1596e8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1596ee.   throw v0;
#L1596f0.   v0:= v2.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L1596f4.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineGetOutputSize|](v0, v3) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGetOutputSize:(I)I|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L1596fa.   v0:= temp;
#L1596fc.   return v0;

   }
    procedure [|java:security:Provider|] [|javax:crypto:ExemptionMechanism.getProvider|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159710.   v0:= v1.[|javax:crypto:ExemptionMechanism.provider|]   @type object;
#L159714.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanism.init|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this), [|java:security:Key|] v2 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.init:(Ljava/security/Key;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159728.   v0:= 0  @length 4;
#L15972a.   v1.[|javax:crypto:ExemptionMechanism.generated|]  := v0 @boolean;
#L15972e.   v0:= v1.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L159732.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineInit|](v0, v2) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;)V|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L159738.   v1.[|javax:crypto:ExemptionMechanism.initKey|]  := v2 @type object;
#L15973c.   v0:= 1  @length 4;
#L15973e.   v1.[|javax:crypto:ExemptionMechanism.isInit|]  := v0 @boolean;
#L159742.   return @void ;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanism.init|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this), [|java:security:Key|] v2 @type (object), [|java:security:AlgorithmParameters|] v3 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.init:(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159754.   v0:= 0  @length 4;
#L159756.   v1.[|javax:crypto:ExemptionMechanism.generated|]  := v0 @boolean;
#L15975a.   v0:= v1.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L15975e.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineInit|](v0, v2, v3) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L159764.   v1.[|javax:crypto:ExemptionMechanism.initKey|]  := v2 @type object;
#L159768.   v0:= 1  @length 4;
#L15976a.   v1.[|javax:crypto:ExemptionMechanism.isInit|]  := v0 @boolean;
#L15976e.   return @void ;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanism.init|] ([|javax:crypto:ExemptionMechanism|] v1 @type (this), [|java:security:Key|] v2 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v3 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.init:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159780.   v0:= 0  @length 4;
#L159782.   v1.[|javax:crypto:ExemptionMechanism.generated|]  := v0 @boolean;
#L159786.   v0:= v1.[|javax:crypto:ExemptionMechanism.spiImpl|]   @type object;
#L15978a.   call temp:=  [|javax:crypto:ExemptionMechanismSpi.engineInit|](v0, v2, v3) @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @classDescriptor [|javax:crypto:ExemptionMechanismSpi|] @type virtual;
#L159790.   v1.[|javax:crypto:ExemptionMechanism.initKey|]  := v2 @type object;
#L159794.   v0:= 1  @length 4;
#L159796.   v1.[|javax:crypto:ExemptionMechanism.isInit|]  := v0 @boolean;
#L15979a.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:ExemptionMechanism.isCryptoAllowed|] ([|javax:crypto:ExemptionMechanism|] v2 @type (this), [|java:security:Key|] v3 @type (object)) @owner [|javax:crypto:ExemptionMechanism|] @signature [|Ljavax/crypto/ExemptionMechanism;.isCryptoAllowed:(Ljava/security/Key;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1597ac.   v0:= v2.[|javax:crypto:ExemptionMechanism.generated|]   @boolean;
#L1597b0.   if v0 == 0 then goto L1597e8;
#L1597b4.   v0:= v2.[|javax:crypto:ExemptionMechanism.initKey|]   @type object;
#L1597b8.   call temp:=  [|java:lang:Object.equals|](v0, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1597be.   v0:= temp;
#L1597c0.   if v0 != 0 then goto L1597e4;
#L1597c4.   v0:= v2.[|javax:crypto:ExemptionMechanism.initKey|]   @type object;
#L1597c8.   call temp:=  [|java:security:Key.getEncoded|](v0) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1597ce.   v0:= temp  @type object;
#L1597d0.   call temp:=  [|java:security:Key.getEncoded|](v3) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1597d6.   v1:= temp  @type object;
#L1597d8.   call temp:=  [|java:util:Arrays.equals|](v0, v1) @signature [|Ljava/util/Arrays;.equals:([B[B)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L1597de.   v0:= temp;
#L1597e0.   if v0 == 0 then goto L1597e8;
#L1597e4.   v0:= 1  @length 4;
#L1597e6.   return v0;
#L1597e8.   v0:= 0  @length 4;
#L1597ea.   goto L1597e6;

   }
record [|javax:crypto:ExemptionMechanismException|]  @type class @AccessFlag PUBLIC  extends [|java:security:GeneralSecurityException|] {
   }
      global [|long|] @@[|javax:crypto:ExemptionMechanismException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:ExemptionMechanismException.<init>|] ([|javax:crypto:ExemptionMechanismException|] v0 @type (this)) @owner [|javax:crypto:ExemptionMechanismException|] @signature [|Ljavax/crypto/ExemptionMechanismException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1597fc.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0) @signature [|Ljava/security/GeneralSecurityException;.<init>:()V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L159802.   return @void ;

   }
    procedure [|void|] [|javax:crypto:ExemptionMechanismException.<init>|] ([|javax:crypto:ExemptionMechanismException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:ExemptionMechanismException|] @signature [|Ljavax/crypto/ExemptionMechanismException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L159814.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0, v1) @signature [|Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15981a.   return @void ;

   }
record [|javax:crypto:ExemptionMechanismSpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:ExemptionMechanismSpi.<init>|] ([|javax:crypto:ExemptionMechanismSpi|] v0 @type (this)) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15982c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L159832.   return @void ;

   }
    procedure [|int|] [|javax:crypto:ExemptionMechanismSpi.engineGenExemptionBlob|] ([|byte|][] v0, [|int|] v1) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGenExemptionBlob:([BI)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:ExemptionMechanismSpi.engineGenExemptionBlob|] () @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGenExemptionBlob:()[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|javax:crypto:ExemptionMechanismSpi.engineGetOutputSize|] ([|int|] v0) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineGetOutputSize:(I)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:ExemptionMechanismSpi.engineInit|] ([|java:security:Key|] v0 @type (object)) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:ExemptionMechanismSpi.engineInit|] ([|java:security:Key|] v0 @type (object), [|java:security:AlgorithmParameters|] v1 @type (object)) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:ExemptionMechanismSpi.engineInit|] ([|java:security:Key|] v0 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v1 @type (object)) @owner [|javax:crypto:ExemptionMechanismSpi|] @signature [|Ljavax/crypto/ExemptionMechanismSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|javax:crypto:IllegalBlockSizeException|]  @type class @AccessFlag PUBLIC  extends [|java:security:GeneralSecurityException|] {
   }
      global [|long|] @@[|javax:crypto:IllegalBlockSizeException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:IllegalBlockSizeException.<init>|] ([|javax:crypto:IllegalBlockSizeException|] v0 @type (this)) @owner [|javax:crypto:IllegalBlockSizeException|] @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L159844.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0) @signature [|Ljava/security/GeneralSecurityException;.<init>:()V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15984a.   return @void ;

   }
    procedure [|void|] [|javax:crypto:IllegalBlockSizeException.<init>|] ([|javax:crypto:IllegalBlockSizeException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:IllegalBlockSizeException|] @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15985c.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0, v1) @signature [|Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L159862.   return @void ;

   }
record [|javax:crypto:KeyAgreement|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|javax:crypto:KeyAgreement.algorithm|]    @AccessFlag PRIVATE_FINAL;
      [|java:security:Provider|] [|javax:crypto:KeyAgreement.provider|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:KeyAgreementSpi|] [|javax:crypto:KeyAgreement.spiImpl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:KeyAgreement.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:security:SecureRandom|] @@[|javax:crypto:KeyAgreement.RANDOM|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:KeyAgreement.<clinit>|] () @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L159874.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L159878.   v1:= "KeyAgreement" @type (object, string);
#L15987c.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L159882.   @@[|javax:crypto:KeyAgreement.ENGINE|] := v0  @type object;
#L159886.   v0:= new [|java:security:SecureRandom|];
#L15988a.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L159890.   @@[|javax:crypto:KeyAgreement.RANDOM|] := v0  @type object;
#L159894.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyAgreement.<init>|] ([|javax:crypto:KeyAgreement|] v0 @type (this), [|javax:crypto:KeyAgreementSpi|] v1 @type (object), [|java:security:Provider|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.<init>:(Ljavax/crypto/KeyAgreementSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1598a8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1598ae.   v0.[|javax:crypto:KeyAgreement.provider|]  := v2 @type object;
#L1598b2.   v0.[|javax:crypto:KeyAgreement.algorithm|]  := v3 @type object;
#L1598b6.   v0.[|javax:crypto:KeyAgreement.spiImpl|]  := v1 @type object;
#L1598ba.   return @void ;

   }
    procedure [|javax:crypto:KeyAgreement|] [|javax:crypto:KeyAgreement.getInstance|] ([|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;)Ljavax/crypto/KeyAgreement;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1598cc.   if v4 != 0 then goto L1598e0;
#L1598d0.   v1:= new [|java:lang:NullPointerException|];
#L1598d4.   v2:= "algorithm == null" @type (object, string);
#L1598d8.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1598de.   throw v1;
#L1598e0.   v1:= @@[|javax:crypto:KeyAgreement.ENGINE|]   @type object;
#L1598e4.   v2:= 0  @length 4;
#L1598e6.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L1598ec.   v0:= temp  @type object;
#L1598ee.   v2:= new [|javax:crypto:KeyAgreement|];
#L1598f2.   v1:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L1598f6.   v1:= ([|javax:crypto:KeyAgreementSpi|])v1;
#L1598fa.   v3:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L1598fe.   call temp:=  [|javax:crypto:KeyAgreement.<init>|](v2, v1, v3, v4) @signature [|Ljavax/crypto/KeyAgreement;.<init>:(Ljavax/crypto/KeyAgreementSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:KeyAgreement|] @type direct;
#L159904.   return v2  @type object;

   }
    procedure [|javax:crypto:KeyAgreement|] [|javax:crypto:KeyAgreement.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/KeyAgreement;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159918.   if v4 == 0 then goto L159928;
#L15991c.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L159922.   v1:= temp;
#L159924.   if v1 == 0 then goto L159938;
#L159928.   v1:= new [|java:lang:IllegalArgumentException|];
#L15992c.   v2:= "Provider is null or empty" @type (object, string);
#L159930.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159936.   throw v1;
#L159938.   call temp:=  [|java:security:Security.getProvider|](v4) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L15993e.   v0:= temp  @type object;
#L159940.   if v0 != 0 then goto L159950;
#L159944.   v1:= new [|java:security:NoSuchProviderException|];
#L159948.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v4) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L15994e.   throw v1;
#L159950.   call temp:=  [|javax:crypto:KeyAgreement.getInstance|](v3, v0) @signature [|Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;|] @classDescriptor [|javax:crypto:KeyAgreement|] @type static;
#L159956.   v1:= temp  @type object;
#L159958.   return v1  @type object;

   }
    procedure [|javax:crypto:KeyAgreement|] [|javax:crypto:KeyAgreement.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15996c.   if v4 != 0 then goto L159980;
#L159970.   v1:= new [|java:lang:IllegalArgumentException|];
#L159974.   v2:= "provider == null" @type (object, string);
#L159978.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15997e.   throw v1;
#L159980.   if v3 != 0 then goto L159994;
#L159984.   v1:= new [|java:lang:NullPointerException|];
#L159988.   v2:= "algorithm == null" @type (object, string);
#L15998c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159992.   throw v1;
#L159994.   v1:= @@[|javax:crypto:KeyAgreement.ENGINE|]   @type object;
#L159998.   v2:= 0  @length 4;
#L15999a.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v3, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L1599a0.   v0:= temp  @type object;
#L1599a2.   v1:= new [|javax:crypto:KeyAgreement|];
#L1599a6.   v0:= ([|javax:crypto:KeyAgreementSpi|])v0;
#L1599aa.   call temp:=  [|javax:crypto:KeyAgreement.<init>|](v1, v0, v4, v3) @signature [|Ljavax/crypto/KeyAgreement;.<init>:(Ljavax/crypto/KeyAgreementSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:KeyAgreement|] @type direct;
#L1599b0.   return v1  @type object;

   }
    procedure [|java:security:Key|] [|javax:crypto:KeyAgreement.doPhase|] ([|javax:crypto:KeyAgreement|] v1 @type (this), [|java:security:Key|] v2 @type (object), [|boolean|] v3) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.doPhase:(Ljava/security/Key;Z)Ljava/security/Key;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1599c4.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L1599c8.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineDoPhase|](v0, v2, v3) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineDoPhase:(Ljava/security/Key;Z)Ljava/security/Key;|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L1599ce.   v0:= temp  @type object;
#L1599d0.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:KeyAgreement.generateSecret|] ([|javax:crypto:KeyAgreement|] v1 @type (this), [|byte|][] v2, [|int|] v3) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.generateSecret:([BI)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1599e4.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L1599e8.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|](v0, v2, v3) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:([BI)I|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L1599ee.   v0:= temp;
#L1599f0.   return v0;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:KeyAgreement.generateSecret|] ([|javax:crypto:KeyAgreement|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.generateSecret:(Ljava/lang/String;)Ljavax/crypto/SecretKey;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159a04.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159a08.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|](v0, v2) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:(Ljava/lang/String;)Ljavax/crypto/SecretKey;|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159a0e.   v0:= temp  @type object;
#L159a10.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:KeyAgreement.generateSecret|] ([|javax:crypto:KeyAgreement|] v1 @type (this)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.generateSecret:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159a24.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159a28.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|](v0) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:()[B|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159a2e.   v0:= temp  @type object;
#L159a30.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:KeyAgreement.getAlgorithm|] ([|javax:crypto:KeyAgreement|] v1 @type (this)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159a44.   v0:= v1.[|javax:crypto:KeyAgreement.algorithm|]   @type object;
#L159a48.   return v0  @type object;

   }
    procedure [|java:security:Provider|] [|javax:crypto:KeyAgreement.getProvider|] ([|javax:crypto:KeyAgreement|] v1 @type (this)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159a5c.   v0:= v1.[|javax:crypto:KeyAgreement.provider|]   @type object;
#L159a60.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:KeyAgreement.init|] ([|javax:crypto:KeyAgreement|] v2 @type (this), [|java:security:Key|] v3 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.init:(Ljava/security/Key;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L159a74.   v0:= v2.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159a78.   v1:= @@[|javax:crypto:KeyAgreement.RANDOM|]   @type object;
#L159a7c.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineInit|](v0, v3, v1) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159a82.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyAgreement.init|] ([|javax:crypto:KeyAgreement|] v1 @type (this), [|java:security:Key|] v2 @type (object), [|java:security:SecureRandom|] v3 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.init:(Ljava/security/Key;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159a94.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159a98.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineInit|](v0, v2, v3) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159a9e.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyAgreement.init|] ([|javax:crypto:KeyAgreement|] v2 @type (this), [|java:security:Key|] v3 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v4 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.init:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L159ab0.   v0:= v2.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159ab4.   v1:= @@[|javax:crypto:KeyAgreement.RANDOM|]   @type object;
#L159ab8.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineInit|](v0, v3, v4, v1) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159abe.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyAgreement.init|] ([|javax:crypto:KeyAgreement|] v1 @type (this), [|java:security:Key|] v2 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v3 @type (object), [|java:security:SecureRandom|] v4 @type (object)) @owner [|javax:crypto:KeyAgreement|] @signature [|Ljavax/crypto/KeyAgreement;.init:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159ad0.   v0:= v1.[|javax:crypto:KeyAgreement.spiImpl|]   @type object;
#L159ad4.   call temp:=  [|javax:crypto:KeyAgreementSpi.engineInit|](v0, v2, v3, v4) @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyAgreementSpi|] @type virtual;
#L159ada.   return @void ;

   }
record [|javax:crypto:KeyAgreementSpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:KeyAgreementSpi.<init>|] ([|javax:crypto:KeyAgreementSpi|] v0 @type (this)) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L159aec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L159af2.   return @void ;

   }
    procedure [|java:security:Key|] [|javax:crypto:KeyAgreementSpi.engineDoPhase|] ([|java:security:Key|] v0 @type (object), [|boolean|] v1) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineDoPhase:(Ljava/security/Key;Z)Ljava/security/Key;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|] ([|byte|][] v0, [|int|] v1) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:([BI)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|] ([|java:lang:String|] v0 @type (object)) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:(Ljava/lang/String;)Ljavax/crypto/SecretKey;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:KeyAgreementSpi.engineGenerateSecret|] () @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineGenerateSecret:()[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:KeyAgreementSpi.engineInit|] ([|java:security:Key|] v0 @type (object), [|java:security:SecureRandom|] v1 @type (object)) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:KeyAgreementSpi.engineInit|] ([|java:security:Key|] v0 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v1 @type (object), [|java:security:SecureRandom|] v2 @type (object)) @owner [|javax:crypto:KeyAgreementSpi|] @signature [|Ljavax/crypto/KeyAgreementSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|javax:crypto:KeyGenerator|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|javax:crypto:KeyGenerator.algorithm|]    @AccessFlag PRIVATE_FINAL;
      [|java:security:Provider|] [|javax:crypto:KeyGenerator.provider|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:KeyGeneratorSpi|] [|javax:crypto:KeyGenerator.spiImpl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:KeyGenerator.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:security:SecureRandom|] @@[|javax:crypto:KeyGenerator.RANDOM|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:KeyGenerator.<clinit>|] () @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L159b04.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L159b08.   v1:= "KeyGenerator" @type (object, string);
#L159b0c.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L159b12.   @@[|javax:crypto:KeyGenerator.ENGINE|] := v0  @type object;
#L159b16.   v0:= new [|java:security:SecureRandom|];
#L159b1a.   call temp:=  [|java:security:SecureRandom.<init>|](v0) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L159b20.   @@[|javax:crypto:KeyGenerator.RANDOM|] := v0  @type object;
#L159b24.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.<init>|] ([|javax:crypto:KeyGenerator|] v0 @type (this), [|javax:crypto:KeyGeneratorSpi|] v1 @type (object), [|java:security:Provider|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.<init>:(Ljavax/crypto/KeyGeneratorSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L159b38.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L159b3e.   v0.[|javax:crypto:KeyGenerator.provider|]  := v2 @type object;
#L159b42.   v0.[|javax:crypto:KeyGenerator.algorithm|]  := v3 @type object;
#L159b46.   v0.[|javax:crypto:KeyGenerator.spiImpl|]  := v1 @type object;
#L159b4a.   return @void ;

   }
    procedure [|javax:crypto:KeyGenerator|] [|javax:crypto:KeyGenerator.getInstance|] ([|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.getInstance:(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L159b5c.   if v4 != 0 then goto L159b70;
#L159b60.   v1:= new [|java:lang:NullPointerException|];
#L159b64.   v2:= "algorithm == null" @type (object, string);
#L159b68.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159b6e.   throw v1;
#L159b70.   v1:= @@[|javax:crypto:KeyGenerator.ENGINE|]   @type object;
#L159b74.   v2:= 0  @length 4;
#L159b76.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L159b7c.   v0:= temp  @type object;
#L159b7e.   v2:= new [|javax:crypto:KeyGenerator|];
#L159b82.   v1:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L159b86.   v1:= ([|javax:crypto:KeyGeneratorSpi|])v1;
#L159b8a.   v3:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L159b8e.   call temp:=  [|javax:crypto:KeyGenerator.<init>|](v2, v1, v3, v4) @signature [|Ljavax/crypto/KeyGenerator;.<init>:(Ljavax/crypto/KeyGeneratorSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:KeyGenerator|] @type direct;
#L159b94.   return v2  @type object;

   }
    procedure [|javax:crypto:KeyGenerator|] [|javax:crypto:KeyGenerator.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/KeyGenerator;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159ba8.   if v4 == 0 then goto L159bb8;
#L159bac.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L159bb2.   v1:= temp;
#L159bb4.   if v1 == 0 then goto L159bc8;
#L159bb8.   v1:= new [|java:lang:IllegalArgumentException|];
#L159bbc.   v2:= "Provider is null or empty" @type (object, string);
#L159bc0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159bc6.   throw v1;
#L159bc8.   call temp:=  [|java:security:Security.getProvider|](v4) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L159bce.   v0:= temp  @type object;
#L159bd0.   if v0 != 0 then goto L159be0;
#L159bd4.   v1:= new [|java:security:NoSuchProviderException|];
#L159bd8.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v4) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L159bde.   throw v1;
#L159be0.   call temp:=  [|javax:crypto:KeyGenerator.getInstance|](v3, v0) @signature [|Ljavax/crypto/KeyGenerator;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator;|] @classDescriptor [|javax:crypto:KeyGenerator|] @type static;
#L159be6.   v1:= temp  @type object;
#L159be8.   return v1  @type object;

   }
    procedure [|javax:crypto:KeyGenerator|] [|javax:crypto:KeyGenerator.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159bfc.   if v4 != 0 then goto L159c10;
#L159c00.   v1:= new [|java:lang:IllegalArgumentException|];
#L159c04.   v2:= "provider == null" @type (object, string);
#L159c08.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159c0e.   throw v1;
#L159c10.   if v3 != 0 then goto L159c24;
#L159c14.   v1:= new [|java:lang:NullPointerException|];
#L159c18.   v2:= "algorithm == null" @type (object, string);
#L159c1c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159c22.   throw v1;
#L159c24.   v1:= @@[|javax:crypto:KeyGenerator.ENGINE|]   @type object;
#L159c28.   v2:= 0  @length 4;
#L159c2a.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v3, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L159c30.   v0:= temp  @type object;
#L159c32.   v1:= new [|javax:crypto:KeyGenerator|];
#L159c36.   v0:= ([|javax:crypto:KeyGeneratorSpi|])v0;
#L159c3a.   call temp:=  [|javax:crypto:KeyGenerator.<init>|](v1, v0, v4, v3) @signature [|Ljavax/crypto/KeyGenerator;.<init>:(Ljavax/crypto/KeyGeneratorSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:KeyGenerator|] @type direct;
#L159c40.   return v1  @type object;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:KeyGenerator.generateKey|] ([|javax:crypto:KeyGenerator|] v1 @type (this)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.generateKey:()Ljavax/crypto/SecretKey;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159c54.   v0:= v1.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159c58.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineGenerateKey|](v0) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineGenerateKey:()Ljavax/crypto/SecretKey;|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159c5e.   v0:= temp  @type object;
#L159c60.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:KeyGenerator.getAlgorithm|] ([|javax:crypto:KeyGenerator|] v1 @type (this)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159c74.   v0:= v1.[|javax:crypto:KeyGenerator.algorithm|]   @type object;
#L159c78.   return v0  @type object;

   }
    procedure [|java:security:Provider|] [|javax:crypto:KeyGenerator.getProvider|] ([|javax:crypto:KeyGenerator|] v1 @type (this)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159c8c.   v0:= v1.[|javax:crypto:KeyGenerator.provider|]   @type object;
#L159c90.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.init|] ([|javax:crypto:KeyGenerator|] v2 @type (this), [|int|] v3) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.init:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L159ca4.   v0:= v2.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159ca8.   v1:= @@[|javax:crypto:KeyGenerator.RANDOM|]   @type object;
#L159cac.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineInit|](v0, v3, v1) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(ILjava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159cb2.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.init|] ([|javax:crypto:KeyGenerator|] v1 @type (this), [|int|] v2, [|java:security:SecureRandom|] v3 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.init:(ILjava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159cc4.   v0:= v1.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159cc8.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineInit|](v0, v2, v3) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(ILjava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159cce.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.init|] ([|javax:crypto:KeyGenerator|] v1 @type (this), [|java:security:SecureRandom|] v2 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.init:(Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159ce0.   v0:= v1.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159ce4.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineInit|](v0, v2) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159cea.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.init|] ([|javax:crypto:KeyGenerator|] v2 @type (this), [|java:security:spec:AlgorithmParameterSpec|] v3 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.init:(Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L159cfc.   v0:= v2.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159d00.   v1:= @@[|javax:crypto:KeyGenerator.RANDOM|]   @type object;
#L159d04.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineInit|](v0, v3, v1) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159d0a.   return @void ;

   }
    procedure [|void|] [|javax:crypto:KeyGenerator.init|] ([|javax:crypto:KeyGenerator|] v1 @type (this), [|java:security:spec:AlgorithmParameterSpec|] v2 @type (object), [|java:security:SecureRandom|] v3 @type (object)) @owner [|javax:crypto:KeyGenerator|] @signature [|Ljavax/crypto/KeyGenerator;.init:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159d1c.   v0:= v1.[|javax:crypto:KeyGenerator.spiImpl|]   @type object;
#L159d20.   call temp:=  [|javax:crypto:KeyGeneratorSpi.engineInit|](v0, v2, v3) @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:KeyGeneratorSpi|] @type virtual;
#L159d26.   return @void ;

   }
record [|javax:crypto:KeyGeneratorSpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:KeyGeneratorSpi.<init>|] ([|javax:crypto:KeyGeneratorSpi|] v0 @type (this)) @owner [|javax:crypto:KeyGeneratorSpi|] @signature [|Ljavax/crypto/KeyGeneratorSpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L159d38.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L159d3e.   return @void ;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:KeyGeneratorSpi.engineGenerateKey|] () @owner [|javax:crypto:KeyGeneratorSpi|] @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineGenerateKey:()Ljavax/crypto/SecretKey;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:KeyGeneratorSpi.engineInit|] ([|int|] v0, [|java:security:SecureRandom|] v1 @type (object)) @owner [|javax:crypto:KeyGeneratorSpi|] @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(ILjava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:KeyGeneratorSpi.engineInit|] ([|java:security:SecureRandom|] v0 @type (object)) @owner [|javax:crypto:KeyGeneratorSpi|] @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:KeyGeneratorSpi.engineInit|] ([|java:security:spec:AlgorithmParameterSpec|] v0 @type (object), [|java:security:SecureRandom|] v1 @type (object)) @owner [|javax:crypto:KeyGeneratorSpi|] @signature [|Ljavax/crypto/KeyGeneratorSpi;.engineInit:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|javax:crypto:Mac|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Cloneable|] {
      [|java:lang:String|] [|javax:crypto:Mac.algorithm|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|javax:crypto:Mac.isInitMac|]    @AccessFlag PRIVATE;
      [|java:security:Provider|] [|javax:crypto:Mac.provider|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:MacSpi|] [|javax:crypto:Mac.spiImpl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:Mac.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:Mac.<clinit>|] () @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L159d50.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L159d54.   v1:= "Mac" @type (object, string);
#L159d58.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L159d5e.   @@[|javax:crypto:Mac.ENGINE|] := v0  @type object;
#L159d62.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Mac.<init>|] ([|javax:crypto:Mac|] v1 @type (this), [|javax:crypto:MacSpi|] v2 @type (object), [|java:security:Provider|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.<init>:(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L159d74.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L159d7a.   v1.[|javax:crypto:Mac.provider|]  := v3 @type object;
#L159d7e.   v1.[|javax:crypto:Mac.algorithm|]  := v4 @type object;
#L159d82.   v1.[|javax:crypto:Mac.spiImpl|]  := v2 @type object;
#L159d86.   v0:= 0  @length 4;
#L159d88.   v1.[|javax:crypto:Mac.isInitMac|]  := v0 @boolean;
#L159d8c.   return @void ;

   }
    procedure [|javax:crypto:Mac|] [|javax:crypto:Mac.getInstance|] ([|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L159da0.   if v4 != 0 then goto L159db4;
#L159da4.   v1:= new [|java:lang:NullPointerException|];
#L159da8.   v2:= "algorithm == null" @type (object, string);
#L159dac.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159db2.   throw v1;
#L159db4.   v1:= @@[|javax:crypto:Mac.ENGINE|]   @type object;
#L159db8.   v2:= 0  @length 4;
#L159dba.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L159dc0.   v0:= temp  @type object;
#L159dc2.   v2:= new [|javax:crypto:Mac|];
#L159dc6.   v1:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L159dca.   v1:= ([|javax:crypto:MacSpi|])v1;
#L159dce.   v3:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L159dd2.   call temp:=  [|javax:crypto:Mac.<init>|](v2, v1, v3, v4) @signature [|Ljavax/crypto/Mac;.<init>:(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:Mac|] @type direct;
#L159dd8.   return v2  @type object;

   }
    procedure [|javax:crypto:Mac|] [|javax:crypto:Mac.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Mac;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159dec.   if v4 == 0 then goto L159dfc;
#L159df0.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L159df6.   v1:= temp;
#L159df8.   if v1 == 0 then goto L159e0c;
#L159dfc.   v1:= new [|java:lang:IllegalArgumentException|];
#L159e00.   v2:= "Provider is null or empty" @type (object, string);
#L159e04.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159e0a.   throw v1;
#L159e0c.   call temp:=  [|java:security:Security.getProvider|](v4) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L159e12.   v0:= temp  @type object;
#L159e14.   if v0 != 0 then goto L159e24;
#L159e18.   v1:= new [|java:security:NoSuchProviderException|];
#L159e1c.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v4) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L159e22.   throw v1;
#L159e24.   call temp:=  [|javax:crypto:Mac.getInstance|](v3, v0) @signature [|Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;|] @classDescriptor [|javax:crypto:Mac|] @type static;
#L159e2a.   v1:= temp  @type object;
#L159e2c.   return v1  @type object;

   }
    procedure [|javax:crypto:Mac|] [|javax:crypto:Mac.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159e40.   if v4 != 0 then goto L159e54;
#L159e44.   v1:= new [|java:lang:IllegalArgumentException|];
#L159e48.   v2:= "provider == null" @type (object, string);
#L159e4c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L159e52.   throw v1;
#L159e54.   if v3 != 0 then goto L159e68;
#L159e58.   v1:= new [|java:lang:NullPointerException|];
#L159e5c.   v2:= "algorithm == null" @type (object, string);
#L159e60.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L159e66.   throw v1;
#L159e68.   v1:= @@[|javax:crypto:Mac.ENGINE|]   @type object;
#L159e6c.   v2:= 0  @length 4;
#L159e6e.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v3, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L159e74.   v0:= temp  @type object;
#L159e76.   v1:= new [|javax:crypto:Mac|];
#L159e7a.   v0:= ([|javax:crypto:MacSpi|])v0;
#L159e7e.   call temp:=  [|javax:crypto:Mac.<init>|](v1, v0, v4, v3) @signature [|Ljavax/crypto/Mac;.<init>:(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:Mac|] @type direct;
#L159e84.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|javax:crypto:Mac.clone|] ([|javax:crypto:Mac|] v4 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.clone:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L159e98.   v2:= v4.[|javax:crypto:Mac.spiImpl|]   @type object;
#L159e9c.   call temp:=  [|javax:crypto:MacSpi.clone|](v2) @signature [|Ljavax/crypto/MacSpi;.clone:()Ljava/lang/Object;|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L159ea2.   v1:= temp  @type object;
#L159ea4.   v1:= ([|javax:crypto:MacSpi|])v1;
#L159ea8.   v0:= new [|javax:crypto:Mac|];
#L159eac.   v2:= v4.[|javax:crypto:Mac.provider|]   @type object;
#L159eb0.   v3:= v4.[|javax:crypto:Mac.algorithm|]   @type object;
#L159eb4.   call temp:=  [|javax:crypto:Mac.<init>|](v0, v1, v2, v3) @signature [|Ljavax/crypto/Mac;.<init>:(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:Mac|] @type direct;
#L159eba.   v2:= v4.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L159ebe.   v0.[|javax:crypto:Mac.isInitMac|]  := v2 @boolean;
#L159ec2.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:Mac.doFinal|] ([|javax:crypto:Mac|] v5 @type (this), [|byte|][] v6, [|int|] v7) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.doFinal:([BI)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L159ed4.   v2:= v5.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L159ed8.   if v2 != 0 then goto L159ee8;
#L159edc.   v2:= new [|java:lang:IllegalStateException|];
#L159ee0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L159ee6.   throw v2;
#L159ee8.   if v6 != 0 then goto L159efc;
#L159eec.   v2:= new [|javax:crypto:ShortBufferException|];
#L159ef0.   v3:= "output == null" @type (object, string);
#L159ef4.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v2, v3) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L159efa.   throw v2;
#L159efc.   if v7 < 0 then goto L159f06;
#L159f00.   v2:= v6.length;
#L159f02.   if v7 < v2 then goto L159f38;
#L159f06.   v2:= new [|javax:crypto:ShortBufferException|];
#L159f0a.   v3:= new [|java:lang:StringBuilder|];
#L159f0e.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L159f14.   v4:= "Incorrect outOffset: " @type (object, string);
#L159f18.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f1e.   v3:= temp  @type object;
#L159f20.   call temp:=  [|java:lang:StringBuilder.append|](v3, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f26.   v3:= temp  @type object;
#L159f28.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f2e.   v3:= temp  @type object;
#L159f30.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v2, v3) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L159f36.   throw v2;
#L159f38.   v2:= v5.[|javax:crypto:Mac.spiImpl|]   @type object;
#L159f3c.   call temp:=  [|javax:crypto:MacSpi.engineGetMacLength|](v2) @signature [|Ljavax/crypto/MacSpi;.engineGetMacLength:()I|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L159f42.   v1:= temp;
#L159f44.   v2:= v6.length;
#L159f46.   v2:= v2 - v7  @type int;
#L159f48.   if v1 <= v2 then goto L159f8a;
#L159f4c.   v2:= new [|javax:crypto:ShortBufferException|];
#L159f50.   v3:= new [|java:lang:StringBuilder|];
#L159f54.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L159f5a.   v4:= "Output buffer is short. Needed " @type (object, string);
#L159f5e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f64.   v3:= temp  @type object;
#L159f66.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f6c.   v3:= temp  @type object;
#L159f6e.   v4:= " bytes." @type (object, string);
#L159f72.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f78.   v3:= temp  @type object;
#L159f7a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L159f80.   v3:= temp  @type object;
#L159f82.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v2, v3) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L159f88.   throw v2;
#L159f8a.   v2:= v5.[|javax:crypto:Mac.spiImpl|]   @type object;
#L159f8e.   call temp:=  [|javax:crypto:MacSpi.engineDoFinal|](v2) @signature [|Ljavax/crypto/MacSpi;.engineDoFinal:()[B|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L159f94.   v0:= temp  @type object;
#L159f96.   v2:= 0  @length 4;
#L159f98.   v3:= v0.length;
#L159f9a.   call temp:=  [|java:lang:System.arraycopy|](v0, v2, v6, v7, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L159fa0.   return @void ;

   }
    procedure [|byte|][] [|javax:crypto:Mac.doFinal|] ([|javax:crypto:Mac|] v1 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.doFinal:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L159fb4.   v0:= v1.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L159fb8.   if v0 != 0 then goto L159fc8;
#L159fbc.   v0:= new [|java:lang:IllegalStateException|];
#L159fc0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L159fc6.   throw v0;
#L159fc8.   v0:= v1.[|javax:crypto:Mac.spiImpl|]   @type object;
#L159fcc.   call temp:=  [|javax:crypto:MacSpi.engineDoFinal|](v0) @signature [|Ljavax/crypto/MacSpi;.engineDoFinal:()[B|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L159fd2.   v0:= temp  @type object;
#L159fd4.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:Mac.doFinal|] ([|javax:crypto:Mac|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.doFinal:([B)[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L159fe8.   v0:= v3.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L159fec.   if v0 != 0 then goto L159ffc;
#L159ff0.   v0:= new [|java:lang:IllegalStateException|];
#L159ff4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L159ffa.   throw v0;
#L159ffc.   if v4 == 0 then goto L15a00e;
#L15a000.   v0:= v3.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a004.   v1:= 0  @length 4;
#L15a006.   v2:= v4.length;
#L15a008.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v0, v4, v1, v2) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a00e.   v0:= v3.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a012.   call temp:=  [|javax:crypto:MacSpi.engineDoFinal|](v0) @signature [|Ljavax/crypto/MacSpi;.engineDoFinal:()[B|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a018.   v0:= temp  @type object;
#L15a01a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:Mac.getAlgorithm|] ([|javax:crypto:Mac|] v1 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a02c.   v0:= v1.[|javax:crypto:Mac.algorithm|]   @type object;
#L15a030.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:Mac.getMacLength|] ([|javax:crypto:Mac|] v1 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getMacLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a044.   v0:= v1.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a048.   call temp:=  [|javax:crypto:MacSpi.engineGetMacLength|](v0) @signature [|Ljavax/crypto/MacSpi;.engineGetMacLength:()I|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a04e.   v0:= temp;
#L15a050.   return v0;

   }
    procedure [|java:security:Provider|] [|javax:crypto:Mac.getProvider|] ([|javax:crypto:Mac|] v1 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a064.   v0:= v1.[|javax:crypto:Mac.provider|]   @type object;
#L15a068.   return v0  @type object;

   }
    procedure [|void|] [|javax:crypto:Mac.init|] ([|javax:crypto:Mac|] v3 @type (this), [|java:security:Key|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15a07c.   if v4 != 0 then goto L15a090;
#L15a080.   v1:= new [|java:security:InvalidKeyException|];
#L15a084.   v2:= "key == null" @type (object, string);
#L15a088.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v2) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15a08e.   throw v1;
#L15a090.   v1:= v3.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a094.   v2:= 0  @length 4;
#L15a096.   call temp:=  [|javax:crypto:MacSpi.engineInit|](v1, v4, v2) @signature [|Ljavax/crypto/MacSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a09c.   v1:= 1  @length 4;
#L15a09e.   v3.[|javax:crypto:Mac.isInitMac|]  := v1 @boolean;
#L15a0a2.   return @void ;
#L15a0a4.   v0:= Exception  @type object;
#L15a0a6.   v1:= new [|java:lang:RuntimeException|];
#L15a0aa.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L15a0b0.   throw v1;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L15a090..L15a0a2] goto L15a0a4;

   }
    procedure [|void|] [|javax:crypto:Mac.init|] ([|javax:crypto:Mac|] v2 @type (this), [|java:security:Key|] v3 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v4 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.init:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L15a0d4.   if v3 != 0 then goto L15a0e8;
#L15a0d8.   v0:= new [|java:security:InvalidKeyException|];
#L15a0dc.   v1:= "key == null" @type (object, string);
#L15a0e0.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15a0e6.   throw v0;
#L15a0e8.   v0:= v2.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a0ec.   call temp:=  [|javax:crypto:MacSpi.engineInit|](v0, v3, v4) @signature [|Ljavax/crypto/MacSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a0f2.   v0:= 1  @length 4;
#L15a0f4.   v2.[|javax:crypto:Mac.isInitMac|]  := v0 @boolean;
#L15a0f8.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Mac.reset|] ([|javax:crypto:Mac|] v1 @type (this)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.reset:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a10c.   v0:= v1.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a110.   call temp:=  [|javax:crypto:MacSpi.engineReset|](v0) @signature [|Ljavax/crypto/MacSpi;.engineReset:()V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a116.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Mac.update|] ([|javax:crypto:Mac|] v1 @type (this), [|byte|] v2) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.update:(B)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a128.   v0:= v1.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L15a12c.   if v0 != 0 then goto L15a13c;
#L15a130.   v0:= new [|java:lang:IllegalStateException|];
#L15a134.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15a13a.   throw v0;
#L15a13c.   v0:= v1.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a140.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v0, v2) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:(B)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a146.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Mac.update|] ([|javax:crypto:Mac|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object)) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.update:(Ljava/nio/ByteBuffer;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L15a158.   v0:= v2.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L15a15c.   if v0 != 0 then goto L15a16c;
#L15a160.   v0:= new [|java:lang:IllegalStateException|];
#L15a164.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15a16a.   throw v0;
#L15a16c.   if v3 == 0 then goto L15a17c;
#L15a170.   v0:= v2.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a174.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v0, v3) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a17a.   return @void ;
#L15a17c.   v0:= new [|java:lang:IllegalArgumentException|];
#L15a180.   v1:= "input == null" @type (object, string);
#L15a184.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15a18a.   throw v0;

   }
    procedure [|void|] [|javax:crypto:Mac.update|] ([|javax:crypto:Mac|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.update:([B)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15a19c.   v0:= v3.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L15a1a0.   if v0 != 0 then goto L15a1b0;
#L15a1a4.   v0:= new [|java:lang:IllegalStateException|];
#L15a1a8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15a1ae.   throw v0;
#L15a1b0.   if v4 == 0 then goto L15a1c2;
#L15a1b4.   v0:= v3.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a1b8.   v1:= 0  @length 4;
#L15a1ba.   v2:= v4.length;
#L15a1bc.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v0, v4, v1, v2) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a1c2.   return @void ;

   }
    procedure [|void|] [|javax:crypto:Mac.update|] ([|javax:crypto:Mac|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:Mac|] @signature [|Ljavax/crypto/Mac;.update:([BII)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L15a1d4.   v0:= v2.[|javax:crypto:Mac.isInitMac|]   @boolean;
#L15a1d8.   if v0 != 0 then goto L15a1e8;
#L15a1dc.   v0:= new [|java:lang:IllegalStateException|];
#L15a1e0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15a1e6.   throw v0;
#L15a1e8.   if v3 != 0 then goto L15a1ee;
#L15a1ec.   return @void ;
#L15a1ee.   if v4 < 0 then goto L15a200;
#L15a1f2.   if v5 < 0 then goto L15a200;
#L15a1f6.   v0:= v4 + v5  @type int;
#L15a1fa.   v1:= v3.length;
#L15a1fc.   if v0 <= v1 then goto L15a210;
#L15a200.   v0:= new [|java:lang:IllegalArgumentException|];
#L15a204.   v1:= "Incorrect arguments" @type (object, string);
#L15a208.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15a20e.   throw v0;
#L15a210.   v0:= v2.[|javax:crypto:Mac.spiImpl|]   @type object;
#L15a214.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v0, v3, v4, v5) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a21a.   goto L15a1ec;

   }
record [|javax:crypto:MacSpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:MacSpi.<init>|] ([|javax:crypto:MacSpi|] v0 @type (this)) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a22c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15a232.   return @void ;

   }
    procedure [|java:lang:Object|] [|javax:crypto:MacSpi.clone|] ([|javax:crypto:MacSpi|] v1 @type (this)) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15a244.   call temp:=  [|java:lang:Object.clone|](v1) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L15a24a.   v0:= temp  @type object;
#L15a24c.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:MacSpi.engineDoFinal|] () @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineDoFinal:()[B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|javax:crypto:MacSpi.engineGetMacLength|] () @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineGetMacLength:()I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:MacSpi.engineInit|] ([|java:security:Key|] v0 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v1 @type (object)) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:MacSpi.engineReset|] () @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineReset:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:MacSpi.engineUpdate|] ([|byte|] v0) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineUpdate:(B)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|javax:crypto:MacSpi.engineUpdate|] ([|javax:crypto:MacSpi|] v6 @type (this), [|java:nio:ByteBuffer|] v7 @type (object)) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineUpdate:(Ljava/nio/ByteBuffer;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L15a260.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v7) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a266.   v4:= temp;
#L15a268.   if v4 != 0 then goto L15a26e;
#L15a26c.   return @void ;
#L15a26e.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v7) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a274.   v4:= temp;
#L15a276.   if v4 == 0 then goto L15a2b0;
#L15a27a.   call temp:=  [|java:nio:ByteBuffer.array|](v7) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a280.   v0:= temp  @type object;
#L15a282.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v7) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a288.   v2:= temp;
#L15a28a.   call temp:=  [|java:nio:ByteBuffer.position|](v7) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a290.   v3:= temp;
#L15a292.   call temp:=  [|java:nio:ByteBuffer.limit|](v7) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a298.   v1:= temp;
#L15a29a.   v4:= v2 + v3  @type int;
#L15a29e.   v5:= v1 - v3  @type int;
#L15a2a2.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v6, v0, v4, v5) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a2a8.   call temp:=  [|java:nio:ByteBuffer.position|](v7, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a2ae.   goto L15a26c;
#L15a2b0.   call temp:=  [|java:nio:ByteBuffer.limit|](v7) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a2b6.   v4:= temp;
#L15a2b8.   call temp:=  [|java:nio:ByteBuffer.position|](v7) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a2be.   v5:= temp;
#L15a2c0.   v4:= v4 - v5  @type int;
#L15a2c2.   v0:= new [|byte|][v4];
#L15a2c6.   call temp:=  [|java:nio:ByteBuffer.get|](v7, v0) @signature [|Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L15a2cc.   v4:= 0  @length 4;
#L15a2ce.   v5:= v0.length;
#L15a2d0.   call temp:=  [|javax:crypto:MacSpi.engineUpdate|](v6, v0, v4, v5) @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @classDescriptor [|javax:crypto:MacSpi|] @type virtual;
#L15a2d6.   goto L15a26c;

   }
    procedure [|void|] [|javax:crypto:MacSpi.engineUpdate|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|javax:crypto:MacSpi|] @signature [|Ljavax/crypto/MacSpi;.engineUpdate:([BII)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|javax:crypto:NoSuchPaddingException|]  @type class @AccessFlag PUBLIC  extends [|java:security:GeneralSecurityException|] {
   }
      global [|long|] @@[|javax:crypto:NoSuchPaddingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:NoSuchPaddingException.<init>|] ([|javax:crypto:NoSuchPaddingException|] v0 @type (this)) @owner [|javax:crypto:NoSuchPaddingException|] @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a2e8.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0) @signature [|Ljava/security/GeneralSecurityException;.<init>:()V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15a2ee.   return @void ;

   }
    procedure [|void|] [|javax:crypto:NoSuchPaddingException.<init>|] ([|javax:crypto:NoSuchPaddingException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:NoSuchPaddingException|] @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a300.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0, v1) @signature [|Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15a306.   return @void ;

   }
record [|javax:crypto:NullCipher|]  @type class @AccessFlag PUBLIC  extends [|javax:crypto:Cipher|] {
   }
    procedure [|void|] [|javax:crypto:NullCipher.<init>|] ([|javax:crypto:NullCipher|] v3 @type (this)) @owner [|javax:crypto:NullCipher|] @signature [|Ljavax/crypto/NullCipher;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15a318.   v1:= 0  @length 4;
#L15a31a.   v0:= new [|org:apache:harmony:crypto:internal:NullCipherSpi|];
#L15a31e.   call temp:=  [|org:apache:harmony:crypto:internal:NullCipherSpi.<init>|](v0) @signature [|Lorg/apache/harmony/crypto/internal/NullCipherSpi;.<init>:()V|] @classDescriptor [|org:apache:harmony:crypto:internal:NullCipherSpi|] @type direct;
#L15a324.   call temp:=  [|javax:crypto:Cipher.<init>|](v3, v0, v1, v1) @signature [|Ljavax/crypto/Cipher;.<init>:(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:Cipher|] @type direct;
#L15a32a.   v2:= 1  @length 4;
#L15a32c.   v0:= 0  @length 4;
#L15a32e.   v0:= ([|java:security:Key|])v0;
#L15a332.   v1:= 0  @length 4;
#L15a334.   v1:= ([|java:security:SecureRandom|])v1;
#L15a338.   call temp:=  [|javax:crypto:NullCipher.init|](v3, v2, v0, v1) @signature [|Ljavax/crypto/NullCipher;.init:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:crypto:NullCipher|] @type virtual;
#L15a33e.   return @void ;
#L15a340.   v0:= Exception  @type object;
#L15a342.   goto L15a33e;
  catch  [|java:security:InvalidKeyException|] @[L15a32e..L15a33e] goto L15a340;

   }
record [|javax:crypto:SealedObject|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|byte|][] [|javax:crypto:SealedObject.encodedParams|]    @AccessFlag PROTECTED;
      [|byte|][] [|javax:crypto:SealedObject.encryptedContent|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|javax:crypto:SealedObject.paramsAlg|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|javax:crypto:SealedObject.sealAlg|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|javax:crypto:SealedObject.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:SealedObject.<init>|] ([|javax:crypto:SealedObject|] v6 @type (this), [|java:io:Serializable|] v7 @type (object), [|javax:crypto:Cipher|] v8 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.<init>:(Ljava/io/Serializable;Ljavax/crypto/Cipher;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L15a364.   v4:= 0  @length 4;
#L15a366.   call temp:=  [|java:lang:Object.<init>|](v6) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15a36c.   if v8 != 0 then goto L15a380;
#L15a370.   v4:= new [|java:lang:NullPointerException|];
#L15a374.   v5:= "c == null" @type (object, string);
#L15a378.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15a37e.   throw v4;
#L15a380.   v1:= new [|java:io:ByteArrayOutputStream|];
#L15a384.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v1) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L15a38a.   v3:= new [|java:io:ObjectOutputStream|];
#L15a38e.   call temp:=  [|java:io:ObjectOutputStream.<init>|](v3, v1) @signature [|Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L15a394.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v7) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L15a39a.   call temp:=  [|java:io:ObjectOutputStream.flush|](v3) @signature [|Ljava/io/ObjectOutputStream;.flush:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L15a3a0.   call temp:=  [|javax:crypto:Cipher.getParameters|](v8) @signature [|Ljavax/crypto/Cipher;.getParameters:()Ljava/security/AlgorithmParameters;|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a3a6.   v0:= temp  @type object;
#L15a3a8.   if v0 != 0 then goto L15a3dc;
#L15a3ac.   v5:= v4  @type object;
#L15a3ae.   v6.[|javax:crypto:SealedObject.encodedParams|]  := v5 @type object;
#L15a3b2.   if v0 != 0 then goto L15a3e6;
#L15a3b6.   v6.[|javax:crypto:SealedObject.paramsAlg|]  := v4 @type object;
#L15a3ba.   call temp:=  [|javax:crypto:Cipher.getAlgorithm|](v8) @signature [|Ljavax/crypto/Cipher;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a3c0.   v4:= temp  @type object;
#L15a3c2.   v6.[|javax:crypto:SealedObject.sealAlg|]  := v4 @type object;
#L15a3c6.   call temp:=  [|java:io:ByteArrayOutputStream.toByteArray|](v1) @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L15a3cc.   v4:= temp  @type object;
#L15a3ce.   call temp:=  [|javax:crypto:Cipher.doFinal|](v8, v4) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a3d4.   v4:= temp  @type object;
#L15a3d6.   v6.[|javax:crypto:SealedObject.encryptedContent|]  := v4 @type object;
#L15a3da.   return @void ;
#L15a3dc.   call temp:=  [|java:security:AlgorithmParameters.getEncoded|](v0) @signature [|Ljava/security/AlgorithmParameters;.getEncoded:()[B|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L15a3e2.   v5:= temp  @type object;
#L15a3e4.   goto L15a3ae;
#L15a3e6.   call temp:=  [|java:security:AlgorithmParameters.getAlgorithm|](v0) @signature [|Ljava/security/AlgorithmParameters;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L15a3ec.   v4:= temp  @type object;
#L15a3ee.   goto L15a3b6;
#L15a3f0.   v2:= Exception  @type object;
#L15a3f2.   v4:= new [|java:io:IOException|];
#L15a3f6.   call temp:=  [|javax:crypto:BadPaddingException.toString|](v2) @signature [|Ljavax/crypto/BadPaddingException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L15a3fc.   v5:= temp  @type object;
#L15a3fe.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L15a404.   throw v4;
  catch  [|javax:crypto:BadPaddingException|] @[L15a380..L15a3ec] goto L15a3f0;

   }
    procedure [|void|] [|javax:crypto:SealedObject.<init>|] ([|javax:crypto:SealedObject|] v2 @type (this), [|javax:crypto:SealedObject|] v3 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.<init>:(Ljavax/crypto/SealedObject;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15a428.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15a42e.   if v3 != 0 then goto L15a442;
#L15a432.   v0:= new [|java:lang:NullPointerException|];
#L15a436.   v1:= "so == null" @type (object, string);
#L15a43a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15a440.   throw v0;
#L15a442.   v0:= v3.[|javax:crypto:SealedObject.encryptedContent|]   @type object;
#L15a446.   v2.[|javax:crypto:SealedObject.encryptedContent|]  := v0 @type object;
#L15a44a.   v0:= v3.[|javax:crypto:SealedObject.encodedParams|]   @type object;
#L15a44e.   v2.[|javax:crypto:SealedObject.encodedParams|]  := v0 @type object;
#L15a452.   v0:= v3.[|javax:crypto:SealedObject.sealAlg|]   @type object;
#L15a456.   v2.[|javax:crypto:SealedObject.sealAlg|]  := v0 @type object;
#L15a45a.   v0:= v3.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a45e.   v2.[|javax:crypto:SealedObject.paramsAlg|]  := v0 @type object;
#L15a462.   return @void ;

   }
    procedure [|void|] [|javax:crypto:SealedObject.readObject|] ([|javax:crypto:SealedObject|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L15a474.   call temp:=  [|java:io:ObjectInputStream.readUnshared|](v2) @signature [|Ljava/io/ObjectInputStream;.readUnshared:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a47a.   v0:= temp  @type object;
#L15a47c.   v0:= ([|byte|][])v0;
#L15a480.   v0:= ([|byte|][])v0;
#L15a484.   v1.[|javax:crypto:SealedObject.encodedParams|]  := v0 @type object;
#L15a488.   call temp:=  [|java:io:ObjectInputStream.readUnshared|](v2) @signature [|Ljava/io/ObjectInputStream;.readUnshared:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a48e.   v0:= temp  @type object;
#L15a490.   v0:= ([|byte|][])v0;
#L15a494.   v0:= ([|byte|][])v0;
#L15a498.   v1.[|javax:crypto:SealedObject.encryptedContent|]  := v0 @type object;
#L15a49c.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a4a2.   v0:= temp  @type object;
#L15a4a4.   v0:= ([|java:lang:String|])v0;
#L15a4a8.   v1.[|javax:crypto:SealedObject.sealAlg|]  := v0 @type object;
#L15a4ac.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a4b2.   v0:= temp  @type object;
#L15a4b4.   v0:= ([|java:lang:String|])v0;
#L15a4b8.   v1.[|javax:crypto:SealedObject.paramsAlg|]  := v0 @type object;
#L15a4bc.   return @void ;

   }
    procedure [|java:lang:String|] [|javax:crypto:SealedObject.getAlgorithm|] ([|javax:crypto:SealedObject|] v1 @type (this)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a4d0.   v0:= v1.[|javax:crypto:SealedObject.sealAlg|]   @type object;
#L15a4d4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|javax:crypto:SealedObject.getObject|] ([|javax:crypto:SealedObject|] v7 @type (this), [|java:security:Key|] v8 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.getObject:(Ljava/security/Key;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15a4e8.   if v8 != 0 then goto L15a4fc;
#L15a4ec.   v5:= new [|java:security:InvalidKeyException|];
#L15a4f0.   v6:= "key == null" @type (object, string);
#L15a4f4.   call temp:=  [|java:security:InvalidKeyException.<init>|](v5, v6) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15a4fa.   throw v5;
#L15a4fc.   v5:= v7.[|javax:crypto:SealedObject.sealAlg|]   @type object;
#L15a500.   call temp:=  [|javax:crypto:Cipher.getInstance|](v5) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15a506.   v0:= temp  @type object;
#L15a508.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a50c.   if v5 == 0 then goto L15a568;
#L15a510.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a514.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15a51a.   v5:= temp;
#L15a51c.   if v5 == 0 then goto L15a568;
#L15a520.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a524.   call temp:=  [|java:security:AlgorithmParameters.getInstance|](v5) @signature [|Ljava/security/AlgorithmParameters;.getInstance:(Ljava/lang/String;)Ljava/security/AlgorithmParameters;|] @classDescriptor [|java:security:AlgorithmParameters|] @type static;
#L15a52a.   v3:= temp  @type object;
#L15a52c.   v5:= v7.[|javax:crypto:SealedObject.encodedParams|]   @type object;
#L15a530.   call temp:=  [|java:security:AlgorithmParameters.init|](v3, v5) @signature [|Ljava/security/AlgorithmParameters;.init:([B)V|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L15a536.   v5:= 2  @length 4;
#L15a538.   call temp:=  [|javax:crypto:Cipher.init|](v0, v5, v8, v3) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a53e.   v5:= v7.[|javax:crypto:SealedObject.encryptedContent|]   @type object;
#L15a542.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v5) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a548.   v4:= temp  @type object;
#L15a54a.   v2:= new [|java:io:ObjectInputStream|];
#L15a54e.   v5:= new [|java:io:ByteArrayInputStream|];
#L15a552.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v5, v4) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L15a558.   call temp:=  [|java:io:ObjectInputStream.<init>|](v2, v5) @signature [|Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L15a55e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a564.   v5:= temp  @type object;
#L15a566.   return v5  @type object;
#L15a568.   v5:= 2  @length 4;
#L15a56a.   call temp:=  [|javax:crypto:Cipher.init|](v0, v5, v8) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a570.   goto L15a53e;
#L15a572.   v1:= Exception  @type object;
#L15a574.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a578.   call temp:=  [|javax:crypto:NoSuchPaddingException.toString|](v1) @signature [|Ljavax/crypto/NoSuchPaddingException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L15a57e.   v6:= temp  @type object;
#L15a580.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a586.   throw v5;
#L15a588.   v1:= Exception  @type object;
#L15a58a.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a58e.   call temp:=  [|java:security:InvalidAlgorithmParameterException.toString|](v1) @signature [|Ljava/security/InvalidAlgorithmParameterException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type virtual;
#L15a594.   v6:= temp  @type object;
#L15a596.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a59c.   throw v5;
#L15a59e.   v1:= Exception  @type object;
#L15a5a0.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a5a4.   call temp:=  [|javax:crypto:IllegalBlockSizeException.toString|](v1) @signature [|Ljavax/crypto/IllegalBlockSizeException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L15a5aa.   v6:= temp  @type object;
#L15a5ac.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a5b2.   throw v5;
#L15a5b4.   v1:= Exception  @type object;
#L15a5b6.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a5ba.   call temp:=  [|javax:crypto:BadPaddingException.toString|](v1) @signature [|Ljavax/crypto/BadPaddingException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L15a5c0.   v6:= temp  @type object;
#L15a5c2.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a5c8.   throw v5;
#L15a5ca.   v1:= Exception  @type object;
#L15a5cc.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a5d0.   call temp:=  [|java:lang:IllegalStateException.toString|](v1) @signature [|Ljava/lang/IllegalStateException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L15a5d6.   v6:= temp  @type object;
#L15a5d8.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a5de.   throw v5;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L15a4fc..L15a570] goto L15a572;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L15a4fc..L15a570] goto L15a588;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L15a4fc..L15a570] goto L15a59e;
  catch  [|javax:crypto:BadPaddingException|] @[L15a4fc..L15a570] goto L15a5b4;
  catch  [|java:lang:IllegalStateException|] @[L15a4fc..L15a570] goto L15a5ca;

   }
    procedure [|java:lang:Object|] [|javax:crypto:SealedObject.getObject|] ([|javax:crypto:SealedObject|] v7 @type (this), [|java:security:Key|] v8 @type (object), [|java:lang:String|] v9 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.getObject:(Ljava/security/Key;Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15a60c.   if v9 == 0 then goto L15a61c;
#L15a610.   call temp:=  [|java:lang:String.isEmpty|](v9) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15a616.   v5:= temp;
#L15a618.   if v5 == 0 then goto L15a62c;
#L15a61c.   v5:= new [|java:lang:IllegalArgumentException|];
#L15a620.   v6:= "provider name empty or null" @type (object, string);
#L15a624.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15a62a.   throw v5;
#L15a62c.   v5:= v7.[|javax:crypto:SealedObject.sealAlg|]   @type object;
#L15a630.   call temp:=  [|javax:crypto:Cipher.getInstance|](v5, v9) @signature [|Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;|] @classDescriptor [|javax:crypto:Cipher|] @type static;
#L15a636.   v0:= temp  @type object;
#L15a638.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a63c.   if v5 == 0 then goto L15a698;
#L15a640.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a644.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15a64a.   v5:= temp;
#L15a64c.   if v5 == 0 then goto L15a698;
#L15a650.   v5:= v7.[|javax:crypto:SealedObject.paramsAlg|]   @type object;
#L15a654.   call temp:=  [|java:security:AlgorithmParameters.getInstance|](v5) @signature [|Ljava/security/AlgorithmParameters;.getInstance:(Ljava/lang/String;)Ljava/security/AlgorithmParameters;|] @classDescriptor [|java:security:AlgorithmParameters|] @type static;
#L15a65a.   v3:= temp  @type object;
#L15a65c.   v5:= v7.[|javax:crypto:SealedObject.encodedParams|]   @type object;
#L15a660.   call temp:=  [|java:security:AlgorithmParameters.init|](v3, v5) @signature [|Ljava/security/AlgorithmParameters;.init:([B)V|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L15a666.   v5:= 2  @length 4;
#L15a668.   call temp:=  [|javax:crypto:Cipher.init|](v0, v5, v8, v3) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a66e.   v5:= v7.[|javax:crypto:SealedObject.encryptedContent|]   @type object;
#L15a672.   call temp:=  [|javax:crypto:Cipher.doFinal|](v0, v5) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a678.   v4:= temp  @type object;
#L15a67a.   v2:= new [|java:io:ObjectInputStream|];
#L15a67e.   v5:= new [|java:io:ByteArrayInputStream|];
#L15a682.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v5, v4) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L15a688.   call temp:=  [|java:io:ObjectInputStream.<init>|](v2, v5) @signature [|Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L15a68e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a694.   v5:= temp  @type object;
#L15a696.   return v5  @type object;
#L15a698.   v5:= 2  @length 4;
#L15a69a.   call temp:=  [|javax:crypto:Cipher.init|](v0, v5, v8) @signature [|Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a6a0.   goto L15a66e;
#L15a6a2.   v1:= Exception  @type object;
#L15a6a4.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a6a8.   call temp:=  [|javax:crypto:NoSuchPaddingException.toString|](v1) @signature [|Ljavax/crypto/NoSuchPaddingException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L15a6ae.   v6:= temp  @type object;
#L15a6b0.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a6b6.   throw v5;
#L15a6b8.   v1:= Exception  @type object;
#L15a6ba.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a6be.   call temp:=  [|java:security:InvalidAlgorithmParameterException.toString|](v1) @signature [|Ljava/security/InvalidAlgorithmParameterException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type virtual;
#L15a6c4.   v6:= temp  @type object;
#L15a6c6.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a6cc.   throw v5;
#L15a6ce.   v1:= Exception  @type object;
#L15a6d0.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a6d4.   call temp:=  [|javax:crypto:IllegalBlockSizeException.toString|](v1) @signature [|Ljavax/crypto/IllegalBlockSizeException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L15a6da.   v6:= temp  @type object;
#L15a6dc.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a6e2.   throw v5;
#L15a6e4.   v1:= Exception  @type object;
#L15a6e6.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a6ea.   call temp:=  [|javax:crypto:BadPaddingException.toString|](v1) @signature [|Ljavax/crypto/BadPaddingException;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:crypto:BadPaddingException|] @type virtual;
#L15a6f0.   v6:= temp  @type object;
#L15a6f2.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a6f8.   throw v5;
#L15a6fa.   v1:= Exception  @type object;
#L15a6fc.   v5:= new [|java:security:NoSuchAlgorithmException|];
#L15a700.   call temp:=  [|java:lang:IllegalStateException.toString|](v1) @signature [|Ljava/lang/IllegalStateException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalStateException|] @type virtual;
#L15a706.   v6:= temp  @type object;
#L15a708.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v5, v6) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L15a70e.   throw v5;
  catch  [|javax:crypto:NoSuchPaddingException|] @[L15a62c..L15a6a0] goto L15a6a2;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L15a62c..L15a6a0] goto L15a6b8;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L15a62c..L15a6a0] goto L15a6ce;
  catch  [|javax:crypto:BadPaddingException|] @[L15a62c..L15a6a0] goto L15a6e4;
  catch  [|java:lang:IllegalStateException|] @[L15a62c..L15a6a0] goto L15a6fa;

   }
    procedure [|java:lang:Object|] [|javax:crypto:SealedObject.getObject|] ([|javax:crypto:SealedObject|] v4 @type (this), [|javax:crypto:Cipher|] v5 @type (object)) @owner [|javax:crypto:SealedObject|] @signature [|Ljavax/crypto/SealedObject;.getObject:(Ljavax/crypto/Cipher;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15a73c.   if v5 != 0 then goto L15a750;
#L15a740.   v2:= new [|java:lang:NullPointerException|];
#L15a744.   v3:= "c == null" @type (object, string);
#L15a748.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15a74e.   throw v2;
#L15a750.   v2:= v4.[|javax:crypto:SealedObject.encryptedContent|]   @type object;
#L15a754.   call temp:=  [|javax:crypto:Cipher.doFinal|](v5, v2) @signature [|Ljavax/crypto/Cipher;.doFinal:([B)[B|] @classDescriptor [|javax:crypto:Cipher|] @type virtual;
#L15a75a.   v1:= temp  @type object;
#L15a75c.   v0:= new [|java:io:ObjectInputStream|];
#L15a760.   v2:= new [|java:io:ByteArrayInputStream|];
#L15a764.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v2, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L15a76a.   call temp:=  [|java:io:ObjectInputStream.<init>|](v0, v2) @signature [|Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L15a770.   call temp:=  [|java:io:ObjectInputStream.readObject|](v0) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L15a776.   v2:= temp  @type object;
#L15a778.   return v2  @type object;

   }
record [|javax:crypto:SecretKey|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:security:Key|] {
   }
      global [|long|] @@[|javax:crypto:SecretKey.serialVersionUID|]    @AccessFlag PUBLIC_STATIC_FINAL;
record [|javax:crypto:SecretKeyFactory|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|javax:crypto:SecretKeyFactory.algorithm|]    @AccessFlag PRIVATE_FINAL;
      [|java:security:Provider|] [|javax:crypto:SecretKeyFactory.provider|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:SecretKeyFactorySpi|] [|javax:crypto:SecretKeyFactory.spiImpl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:harmony:security:fortress:Engine|] @@[|javax:crypto:SecretKeyFactory.ENGINE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:SecretKeyFactory.<clinit>|] () @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15a78c.   v0:= new [|org:apache:harmony:security:fortress:Engine|];
#L15a790.   v1:= "SecretKeyFactory" @type (object, string);
#L15a794.   call temp:=  [|org:apache:harmony:security:fortress:Engine.<init>|](v0, v1) @signature [|Lorg/apache/harmony/security/fortress/Engine;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type direct;
#L15a79a.   @@[|javax:crypto:SecretKeyFactory.ENGINE|] := v0  @type object;
#L15a79e.   return @void ;

   }
    procedure [|void|] [|javax:crypto:SecretKeyFactory.<init>|] ([|javax:crypto:SecretKeyFactory|] v0 @type (this), [|javax:crypto:SecretKeyFactorySpi|] v1 @type (object), [|java:security:Provider|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.<init>:(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L15a7b0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15a7b6.   v0.[|javax:crypto:SecretKeyFactory.provider|]  := v2 @type object;
#L15a7ba.   v0.[|javax:crypto:SecretKeyFactory.algorithm|]  := v3 @type object;
#L15a7be.   v0.[|javax:crypto:SecretKeyFactory.spiImpl|]  := v1 @type object;
#L15a7c2.   return @void ;

   }
    procedure [|javax:crypto:SecretKeyFactory|] [|javax:crypto:SecretKeyFactory.getInstance|] ([|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15a7d4.   if v4 != 0 then goto L15a7e8;
#L15a7d8.   v1:= new [|java:lang:NullPointerException|];
#L15a7dc.   v2:= "algorithm == null" @type (object, string);
#L15a7e0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15a7e6.   throw v1;
#L15a7e8.   v1:= @@[|javax:crypto:SecretKeyFactory.ENGINE|]   @type object;
#L15a7ec.   v2:= 0  @length 4;
#L15a7ee.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/harmony/security/fortress/Engine$SpiAndProvider;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L15a7f4.   v0:= temp  @type object;
#L15a7f6.   v2:= new [|javax:crypto:SecretKeyFactory|];
#L15a7fa.   v1:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.spi|]   @type object;
#L15a7fe.   v1:= ([|javax:crypto:SecretKeyFactorySpi|])v1;
#L15a802.   v3:= v0.[|org:apache:harmony:security:fortress:Engine$SpiAndProvider.provider|]   @type object;
#L15a806.   call temp:=  [|javax:crypto:SecretKeyFactory.<init>|](v2, v1, v3, v4) @signature [|Ljavax/crypto/SecretKeyFactory;.<init>:(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:SecretKeyFactory|] @type direct;
#L15a80c.   return v2  @type object;

   }
    procedure [|javax:crypto:SecretKeyFactory|] [|javax:crypto:SecretKeyFactory.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15a820.   if v4 == 0 then goto L15a830;
#L15a824.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15a82a.   v1:= temp;
#L15a82c.   if v1 == 0 then goto L15a840;
#L15a830.   v1:= new [|java:lang:IllegalArgumentException|];
#L15a834.   v2:= "Provider is null or empty" @type (object, string);
#L15a838.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15a83e.   throw v1;
#L15a840.   call temp:=  [|java:security:Security.getProvider|](v4) @signature [|Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;|] @classDescriptor [|java:security:Security|] @type static;
#L15a846.   v0:= temp  @type object;
#L15a848.   if v0 != 0 then goto L15a858;
#L15a84c.   v1:= new [|java:security:NoSuchProviderException|];
#L15a850.   call temp:=  [|java:security:NoSuchProviderException.<init>|](v1, v4) @signature [|Ljava/security/NoSuchProviderException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchProviderException|] @type direct;
#L15a856.   throw v1;
#L15a858.   call temp:=  [|javax:crypto:SecretKeyFactory.getInstance|](v3, v0) @signature [|Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/SecretKeyFactory;|] @classDescriptor [|javax:crypto:SecretKeyFactory|] @type static;
#L15a85e.   v1:= temp  @type object;
#L15a860.   return v1  @type object;

   }
    procedure [|javax:crypto:SecretKeyFactory|] [|javax:crypto:SecretKeyFactory.getInstance|] ([|java:lang:String|] v3 @type (object), [|java:security:Provider|] v4 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/SecretKeyFactory;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L15a874.   if v4 != 0 then goto L15a888;
#L15a878.   v1:= new [|java:lang:IllegalArgumentException|];
#L15a87c.   v2:= "provider == null" @type (object, string);
#L15a880.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15a886.   throw v1;
#L15a888.   if v3 != 0 then goto L15a89c;
#L15a88c.   v1:= new [|java:lang:NullPointerException|];
#L15a890.   v2:= "algorithm == null" @type (object, string);
#L15a894.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15a89a.   throw v1;
#L15a89c.   v1:= @@[|javax:crypto:SecretKeyFactory.ENGINE|]   @type object;
#L15a8a0.   v2:= 0  @length 4;
#L15a8a2.   call temp:=  [|org:apache:harmony:security:fortress:Engine.getInstance|](v1, v3, v4, v2) @signature [|Lorg/apache/harmony/security/fortress/Engine;.getInstance:(Ljava/lang/String;Ljava/security/Provider;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:security:fortress:Engine|] @type virtual;
#L15a8a8.   v0:= temp  @type object;
#L15a8aa.   v1:= new [|javax:crypto:SecretKeyFactory|];
#L15a8ae.   v0:= ([|javax:crypto:SecretKeyFactorySpi|])v0;
#L15a8b2.   call temp:=  [|javax:crypto:SecretKeyFactory.<init>|](v1, v0, v4, v3) @signature [|Ljavax/crypto/SecretKeyFactory;.<init>:(Ljavax/crypto/SecretKeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:SecretKeyFactory|] @type direct;
#L15a8b8.   return v1  @type object;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:SecretKeyFactory.generateSecret|] ([|javax:crypto:SecretKeyFactory|] v1 @type (this), [|java:security:spec:KeySpec|] v2 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.generateSecret:(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a8cc.   v0:= v1.[|javax:crypto:SecretKeyFactory.spiImpl|]   @type object;
#L15a8d0.   call temp:=  [|javax:crypto:SecretKeyFactorySpi.engineGenerateSecret|](v0, v2) @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineGenerateSecret:(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;|] @classDescriptor [|javax:crypto:SecretKeyFactorySpi|] @type virtual;
#L15a8d6.   v0:= temp  @type object;
#L15a8d8.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:SecretKeyFactory.getAlgorithm|] ([|javax:crypto:SecretKeyFactory|] v1 @type (this)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a8ec.   v0:= v1.[|javax:crypto:SecretKeyFactory.algorithm|]   @type object;
#L15a8f0.   return v0  @type object;

   }
    procedure [|java:security:spec:KeySpec|] [|javax:crypto:SecretKeyFactory.getKeySpec|] ([|javax:crypto:SecretKeyFactory|] v1 @type (this), [|javax:crypto:SecretKey|] v2 @type (object), [|java:lang:Class|] v3 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getKeySpec:(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a904.   v0:= v1.[|javax:crypto:SecretKeyFactory.spiImpl|]   @type object;
#L15a908.   call temp:=  [|javax:crypto:SecretKeyFactorySpi.engineGetKeySpec|](v0, v2, v3) @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineGetKeySpec:(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;|] @classDescriptor [|javax:crypto:SecretKeyFactorySpi|] @type virtual;
#L15a90e.   v0:= temp  @type object;
#L15a910.   return v0  @type object;

   }
    procedure [|java:security:Provider|] [|javax:crypto:SecretKeyFactory.getProvider|] ([|javax:crypto:SecretKeyFactory|] v1 @type (this)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.getProvider:()Ljava/security/Provider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a924.   v0:= v1.[|javax:crypto:SecretKeyFactory.provider|]   @type object;
#L15a928.   return v0  @type object;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:SecretKeyFactory.translateKey|] ([|javax:crypto:SecretKeyFactory|] v1 @type (this), [|javax:crypto:SecretKey|] v2 @type (object)) @owner [|javax:crypto:SecretKeyFactory|] @signature [|Ljavax/crypto/SecretKeyFactory;.translateKey:(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15a93c.   v0:= v1.[|javax:crypto:SecretKeyFactory.spiImpl|]   @type object;
#L15a940.   call temp:=  [|javax:crypto:SecretKeyFactorySpi.engineTranslateKey|](v0, v2) @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineTranslateKey:(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;|] @classDescriptor [|javax:crypto:SecretKeyFactorySpi|] @type virtual;
#L15a946.   v0:= temp  @type object;
#L15a948.   return v0  @type object;

   }
record [|javax:crypto:SecretKeyFactorySpi|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|javax:crypto:SecretKeyFactorySpi.<init>|] ([|javax:crypto:SecretKeyFactorySpi|] v0 @type (this)) @owner [|javax:crypto:SecretKeyFactorySpi|] @signature [|Ljavax/crypto/SecretKeyFactorySpi;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a95c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15a962.   return @void ;

   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:SecretKeyFactorySpi.engineGenerateSecret|] ([|java:security:spec:KeySpec|] v0 @type (object)) @owner [|javax:crypto:SecretKeyFactorySpi|] @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineGenerateSecret:(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:security:spec:KeySpec|] [|javax:crypto:SecretKeyFactorySpi.engineGetKeySpec|] ([|javax:crypto:SecretKey|] v0 @type (object), [|java:lang:Class|] v1 @type (object)) @owner [|javax:crypto:SecretKeyFactorySpi|] @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineGetKeySpec:(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|javax:crypto:SecretKey|] [|javax:crypto:SecretKeyFactorySpi.engineTranslateKey|] ([|javax:crypto:SecretKey|] v0 @type (object)) @owner [|javax:crypto:SecretKeyFactorySpi|] @signature [|Ljavax/crypto/SecretKeyFactorySpi;.engineTranslateKey:(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|javax:crypto:ShortBufferException|]  @type class @AccessFlag PUBLIC  extends [|java:security:GeneralSecurityException|] {
   }
      global [|long|] @@[|javax:crypto:ShortBufferException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:ShortBufferException.<init>|] ([|javax:crypto:ShortBufferException|] v0 @type (this)) @owner [|javax:crypto:ShortBufferException|] @signature [|Ljavax/crypto/ShortBufferException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a974.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0) @signature [|Ljava/security/GeneralSecurityException;.<init>:()V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15a97a.   return @void ;

   }
    procedure [|void|] [|javax:crypto:ShortBufferException.<init>|] ([|javax:crypto:ShortBufferException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|javax:crypto:ShortBufferException|] @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15a98c.   call temp:=  [|java:security:GeneralSecurityException.<init>|](v0, v1) @signature [|Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:GeneralSecurityException|] @type direct;
#L15a992.   return @void ;

   }
record [|javax:crypto:interfaces:DHKey|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|javax:crypto:spec:DHParameterSpec|] [|javax:crypto:interfaces:DHKey.getParams|] () @owner [|javax:crypto:interfaces:DHKey|] @signature [|Ljavax/crypto/interfaces/DHKey;.getParams:()Ljavax/crypto/spec/DHParameterSpec;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:crypto:interfaces:DHPrivateKey|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|javax:crypto:interfaces:DHKey|], [|java:security:PrivateKey|] {
   }
      global [|long|] @@[|javax:crypto:interfaces:DHPrivateKey.serialVersionUID|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:math:BigInteger|] [|javax:crypto:interfaces:DHPrivateKey.getX|] () @owner [|javax:crypto:interfaces:DHPrivateKey|] @signature [|Ljavax/crypto/interfaces/DHPrivateKey;.getX:()Ljava/math/BigInteger;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:crypto:interfaces:DHPublicKey|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|javax:crypto:interfaces:DHKey|], [|java:security:PublicKey|] {
   }
      global [|long|] @@[|javax:crypto:interfaces:DHPublicKey.serialVersionUID|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:math:BigInteger|] [|javax:crypto:interfaces:DHPublicKey.getY|] () @owner [|javax:crypto:interfaces:DHPublicKey|] @signature [|Ljavax/crypto/interfaces/DHPublicKey;.getY:()Ljava/math/BigInteger;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:crypto:interfaces:PBEKey|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|javax:crypto:SecretKey|] {
   }
      global [|long|] @@[|javax:crypto:interfaces:PBEKey.serialVersionUID|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|int|] [|javax:crypto:interfaces:PBEKey.getIterationCount|] () @owner [|javax:crypto:interfaces:PBEKey|] @signature [|Ljavax/crypto/interfaces/PBEKey;.getIterationCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|][] [|javax:crypto:interfaces:PBEKey.getPassword|] () @owner [|javax:crypto:interfaces:PBEKey|] @signature [|Ljavax/crypto/interfaces/PBEKey;.getPassword:()[C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|javax:crypto:interfaces:PBEKey.getSalt|] () @owner [|javax:crypto:interfaces:PBEKey|] @signature [|Ljavax/crypto/interfaces/PBEKey;.getSalt:()[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:crypto:spec:DESKeySpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:KeySpec|] {
      [|byte|][] [|javax:crypto:spec:DESKeySpec.key|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|javax:crypto:spec:DESKeySpec.DES_KEY_LEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|][][] @@[|javax:crypto:spec:DESKeySpec.SEMIWEAKS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:spec:DESKeySpec.<clinit>|] () @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15a9a4.   v3:= 8  @length 16;
#L15a9a8.   v0:= 16  @length 16;
#L15a9ac.   v0:= new [|byte|][v0][];
#L15a9b0.   v1:= 0  @length 4;
#L15a9b2.   v2:= new [|byte|][v3];
#L15a9b6.   goto L15aac4;
#L15a9bc.   v0[v1]:= v2  @type object;
#L15a9c0.   v1:= 1  @length 4;
#L15a9c2.   v2:= new [|byte|][v3];
#L15a9c6.   goto L15aad4;
#L15a9cc.   v0[v1]:= v2  @type object;
#L15a9d0.   v1:= 2  @length 4;
#L15a9d2.   v2:= new [|byte|][v3];
#L15a9d6.   goto L15aae4;
#L15a9dc.   v0[v1]:= v2  @type object;
#L15a9e0.   v1:= 3  @length 4;
#L15a9e2.   v2:= new [|byte|][v3];
#L15a9e6.   goto L15aaf4;
#L15a9ec.   v0[v1]:= v2  @type object;
#L15a9f0.   v1:= 4  @length 4;
#L15a9f2.   v2:= new [|byte|][v3];
#L15a9f6.   goto L15ab04;
#L15a9fc.   v0[v1]:= v2  @type object;
#L15aa00.   v1:= 5  @length 4;
#L15aa02.   v2:= new [|byte|][v3];
#L15aa06.   goto L15ab14;
#L15aa0c.   v0[v1]:= v2  @type object;
#L15aa10.   v1:= 6  @length 4;
#L15aa12.   v2:= new [|byte|][v3];
#L15aa16.   goto L15ab24;
#L15aa1c.   v0[v1]:= v2  @type object;
#L15aa20.   v1:= 7  @length 4;
#L15aa22.   v2:= new [|byte|][v3];
#L15aa26.   goto L15ab34;
#L15aa2c.   v0[v1]:= v2  @type object;
#L15aa30.   v1:= new [|byte|][v3];
#L15aa34.   goto L15ab44;
#L15aa3a.   v0[v3]:= v1  @type object;
#L15aa3e.   v1:= 9  @length 16;
#L15aa42.   v2:= new [|byte|][v3];
#L15aa46.   goto L15ab54;
#L15aa4c.   v0[v1]:= v2  @type object;
#L15aa50.   v1:= 10  @length 16;
#L15aa54.   v2:= new [|byte|][v3];
#L15aa58.   goto L15ab64;
#L15aa5e.   v0[v1]:= v2  @type object;
#L15aa62.   v1:= 11  @length 16;
#L15aa66.   v2:= new [|byte|][v3];
#L15aa6a.   goto L15ab74;
#L15aa70.   v0[v1]:= v2  @type object;
#L15aa74.   v1:= 12  @length 16;
#L15aa78.   v2:= new [|byte|][v3];
#L15aa7c.   goto L15ab84;
#L15aa82.   v0[v1]:= v2  @type object;
#L15aa86.   v1:= 13  @length 16;
#L15aa8a.   v2:= new [|byte|][v3];
#L15aa8e.   goto L15ab94;
#L15aa94.   v0[v1]:= v2  @type object;
#L15aa98.   v1:= 14  @length 16;
#L15aa9c.   v2:= new [|byte|][v3];
#L15aaa0.   goto L15aba4;
#L15aaa6.   v0[v1]:= v2  @type object;
#L15aaaa.   v1:= 15  @length 16;
#L15aaae.   v2:= new [|byte|][v3];
#L15aab2.   goto L15abb4;
#L15aab8.   v0[v1]:= v2  @type object;
#L15aabc.   @@[|javax:crypto:spec:DESKeySpec.SEMIWEAKS|] := v0  @type object;
#L15aac0.   return @void ;
#L15aac2.   
#L15aac4.   v2:=`[fill-array-data length error];
               goto L15a9bc;
#L15aad4.   v2:=`[fill-array-data length error];
               goto L15a9cc;
#L15aae4.   v2:=`[fill-array-data length error];
               goto L15a9dc;
#L15aaf4.   v2:=`[fill-array-data length error];
               goto L15a9ec;
#L15ab04.   v2:=`[fill-array-data length error];
               goto L15a9fc;
#L15ab14.   v2:=`[fill-array-data length error];
               goto L15aa0c;
#L15ab24.   v2:=`[fill-array-data length error];
               goto L15aa1c;
#L15ab34.   v2:=`[fill-array-data length error];
               goto L15aa2c;
#L15ab44.   v1:=`[fill-array-data length error];
               goto L15aa3a;
#L15ab54.   v2:=`[fill-array-data length error];
               goto L15aa4c;
#L15ab64.   v2:=`[fill-array-data length error];
               goto L15aa5e;
#L15ab74.   v2:=`[fill-array-data length error];
               goto L15aa70;
#L15ab84.   v2:=`[fill-array-data length error];
               goto L15aa82;
#L15ab94.   v2:=`[fill-array-data length error];
               goto L15aa94;
#L15aba4.   v2:=`[fill-array-data length error];
               goto L15aaa6;
#L15abb4.   v2:=`[fill-array-data length error];
               goto L15aab8;

   }
    procedure [|void|] [|javax:crypto:spec:DESKeySpec.<init>|] ([|javax:crypto:spec:DESKeySpec|] v1 @type (this), [|byte|][] v2) @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15abd4.   v0:= 0  @length 4;
#L15abd6.   call temp:=  [|javax:crypto:spec:DESKeySpec.<init>|](v1, v2, v0) @signature [|Ljavax/crypto/spec/DESKeySpec;.<init>:([BI)V|] @classDescriptor [|javax:crypto:spec:DESKeySpec|] @type direct;
#L15abdc.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:DESKeySpec.<init>|] ([|javax:crypto:spec:DESKeySpec|] v3 @type (this), [|byte|][] v4, [|int|] v5) @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.<init>:([BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15abf0.   v2:= 8  @length 16;
#L15abf4.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15abfa.   if v4 != 0 then goto L15ac0e;
#L15abfe.   v0:= new [|java:lang:NullPointerException|];
#L15ac02.   v1:= "key == null" @type (object, string);
#L15ac06.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15ac0c.   throw v0;
#L15ac0e.   v0:= v4.length;
#L15ac10.   v0:= v0 - v5  @type int;
#L15ac12.   if v0 >= v2 then goto L15ac26;
#L15ac16.   v0:= new [|java:security:InvalidKeyException|];
#L15ac1a.   v1:= "key too short" @type (object, string);
#L15ac1e.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15ac24.   throw v0;
#L15ac26.   v0:= new [|byte|][v2];
#L15ac2a.   v3.[|javax:crypto:spec:DESKeySpec.key|]  := v0 @type object;
#L15ac2e.   v0:= v3.[|javax:crypto:spec:DESKeySpec.key|]   @type object;
#L15ac32.   v1:= 0  @length 4;
#L15ac34.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15ac3a.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:spec:DESKeySpec.isParityAdjusted|] ([|byte|][] v4, [|int|] v5) @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.isParityAdjusted:([BI)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15ac4c.   v3:= 8  @length 16;
#L15ac50.   if v4 != 0 then goto L15ac64;
#L15ac54.   v2:= new [|java:security:InvalidKeyException|];
#L15ac58.   v3:= "key == null" @type (object, string);
#L15ac5c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15ac62.   throw v2;
#L15ac64.   v2:= v4.length;
#L15ac66.   v2:= v2 - v5  @type int;
#L15ac68.   if v2 >= v3 then goto L15ac7c;
#L15ac6c.   v2:= new [|java:security:InvalidKeyException|];
#L15ac70.   v3:= "key too short" @type (object, string);
#L15ac74.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15ac7a.   throw v2;
#L15ac7c.   v0:= 0  @length 4;
#L15ac7e.   v1:= v5;
#L15ac80.   if v1 >= v3 then goto L15acac;
#L15ac84.   v0:= v4[v1]  @byte;
#L15ac88.   v2:= v0 ^> 1;
#L15ac8c.   v0:= v0 ^~ v2  @type int;
#L15ac8e.   v2:= v0 ^> 2;
#L15ac92.   v0:= v0 ^~ v2  @type int;
#L15ac94.   v2:= v0 ^> 4;
#L15ac98.   v0:= v0 ^~ v2  @type int;
#L15ac9a.   v2:= v0 ^& 1;
#L15ac9e.   if v2 != 0 then goto L15aca6;
#L15aca2.   v2:= 0  @length 4;
#L15aca4.   return v2;
#L15aca6.   v1:= v1 + 1;
#L15acaa.   goto L15ac80;
#L15acac.   v2:= 1  @length 4;
#L15acae.   goto L15aca4;

   }
    procedure [|boolean|] [|javax:crypto:spec:DESKeySpec.isWeak|] ([|byte|][] v5, [|int|] v6) @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.isWeak:([BI)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L15acc0.   v4:= 8  @length 16;
#L15acc4.   if v5 != 0 then goto L15acd8;
#L15acc8.   v2:= new [|java:security:InvalidKeyException|];
#L15accc.   v3:= "key == null" @type (object, string);
#L15acd0.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15acd6.   throw v2;
#L15acd8.   v2:= v5.length;
#L15acda.   v2:= v2 - v6  @type int;
#L15acdc.   if v2 >= v4 then goto L15acf0;
#L15ace0.   v2:= new [|java:security:InvalidKeyException|];
#L15ace4.   v3:= "key too short" @type (object, string);
#L15ace8.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15acee.   throw v2;
#L15acf0.   v0:= 0  @length 4;
#L15acf2.   v2:= @@[|javax:crypto:spec:DESKeySpec.SEMIWEAKS|]   @type object;
#L15acf6.   v2:= v2.length;
#L15acf8.   if v0 >= v2 then goto L15ad2a;
#L15acfc.   v1:= 0  @length 4;
#L15acfe.   if v1 >= v4 then goto L15ad26;
#L15ad02.   v2:= @@[|javax:crypto:spec:DESKeySpec.SEMIWEAKS|]   @type object;
#L15ad06.   v2:= v2[v0]  @type object;
#L15ad0a.   v2:= v2[v1]  @byte;
#L15ad0e.   v3:= v6 + v1  @type int;
#L15ad12.   v3:= v5[v3]  @byte;
#L15ad16.   if v2 == v3 then goto L15ad20;
#L15ad1a.   v0:= v0 + 1;
#L15ad1e.   goto L15acf2;
#L15ad20.   v1:= v1 + 1;
#L15ad24.   goto L15acfe;
#L15ad26.   v2:= 1  @length 4;
#L15ad28.   return v2;
#L15ad2a.   v2:= 0  @length 4;
#L15ad2c.   goto L15ad28;

   }
    procedure [|byte|][] [|javax:crypto:spec:DESKeySpec.getKey|] ([|javax:crypto:spec:DESKeySpec|] v4 @type (this)) @owner [|javax:crypto:spec:DESKeySpec|] @signature [|Ljavax/crypto/spec/DESKeySpec;.getKey:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15ad40.   v3:= 8  @length 16;
#L15ad44.   v2:= 0  @length 4;
#L15ad46.   v0:= new [|byte|][v3];
#L15ad4a.   v1:= v4.[|javax:crypto:spec:DESKeySpec.key|]   @type object;
#L15ad4e.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v2, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15ad54.   return v0  @type object;

   }
record [|javax:crypto:spec:DESedeKeySpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:KeySpec|] {
      [|byte|][] [|javax:crypto:spec:DESedeKeySpec.key|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|javax:crypto:spec:DESedeKeySpec.DES_EDE_KEY_LEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:spec:DESedeKeySpec.<init>|] ([|javax:crypto:spec:DESedeKeySpec|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:spec:DESedeKeySpec|] @signature [|Ljavax/crypto/spec/DESedeKeySpec;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15ad68.   v2:= 0  @length 4;
#L15ad6a.   v1:= 24  @length 16;
#L15ad6e.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15ad74.   if v4 != 0 then goto L15ad88;
#L15ad78.   v0:= new [|java:lang:NullPointerException|];
#L15ad7c.   v1:= "key == null" @type (object, string);
#L15ad80.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15ad86.   throw v0;
#L15ad88.   v0:= v4.length;
#L15ad8a.   if v0 >= v1 then goto L15ad9a;
#L15ad8e.   v0:= new [|java:security:InvalidKeyException|];
#L15ad92.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0) @signature [|Ljava/security/InvalidKeyException;.<init>:()V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15ad98.   throw v0;
#L15ad9a.   v0:= new [|byte|][v1];
#L15ad9e.   v3.[|javax:crypto:spec:DESedeKeySpec.key|]  := v0 @type object;
#L15ada2.   v0:= v3.[|javax:crypto:spec:DESedeKeySpec.key|]   @type object;
#L15ada6.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15adac.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:DESedeKeySpec.<init>|] ([|javax:crypto:spec:DESedeKeySpec|] v3 @type (this), [|byte|][] v4, [|int|] v5) @owner [|javax:crypto:spec:DESedeKeySpec|] @signature [|Ljavax/crypto/spec/DESedeKeySpec;.<init>:([BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15adc0.   v2:= 24  @length 16;
#L15adc4.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15adca.   if v4 != 0 then goto L15adde;
#L15adce.   v0:= new [|java:lang:NullPointerException|];
#L15add2.   v1:= "key == null" @type (object, string);
#L15add6.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15addc.   throw v0;
#L15adde.   v0:= v4.length;
#L15ade0.   v0:= v0 - v5  @type int;
#L15ade2.   if v0 >= v2 then goto L15adf2;
#L15ade6.   v0:= new [|java:security:InvalidKeyException|];
#L15adea.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0) @signature [|Ljava/security/InvalidKeyException;.<init>:()V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15adf0.   throw v0;
#L15adf2.   v0:= new [|byte|][v2];
#L15adf6.   v3.[|javax:crypto:spec:DESedeKeySpec.key|]  := v0 @type object;
#L15adfa.   v0:= v3.[|javax:crypto:spec:DESedeKeySpec.key|]   @type object;
#L15adfe.   v1:= 0  @length 4;
#L15ae00.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15ae06.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:spec:DESedeKeySpec.isParityAdjusted|] ([|byte|][] v4, [|int|] v5) @owner [|javax:crypto:spec:DESedeKeySpec|] @signature [|Ljavax/crypto/spec/DESedeKeySpec;.isParityAdjusted:([BI)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15ae18.   v2:= v4.length;
#L15ae1a.   v2:= v2 - v5  @type int;
#L15ae1c.   v3:= 24  @length 16;
#L15ae20.   if v2 >= v3 then goto L15ae30;
#L15ae24.   v2:= new [|java:security:InvalidKeyException|];
#L15ae28.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2) @signature [|Ljava/security/InvalidKeyException;.<init>:()V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L15ae2e.   throw v2;
#L15ae30.   v1:= v5;
#L15ae32.   v2:= v5 + 24;
#L15ae36.   if v1 >= v2 then goto L15ae98;
#L15ae3a.   v0:= v4[v1]  @byte;
#L15ae3e.   v2:= v0 ^& 1;
#L15ae42.   v3:= v0 ^& 2;
#L15ae46.   v3:= v3 ^> 1;
#L15ae4a.   v2:= v2 + v3  @type int;
#L15ae4c.   v3:= v0 ^& 4;
#L15ae50.   v3:= v3 ^> 2;
#L15ae54.   v2:= v2 + v3  @type int;
#L15ae56.   v3:= v0 ^& 8;
#L15ae5a.   v3:= v3 ^> 3;
#L15ae5e.   v2:= v2 + v3  @type int;
#L15ae60.   v3:= v0 ^& 16;
#L15ae64.   v3:= v3 ^> 4;
#L15ae68.   v2:= v2 + v3  @type int;
#L15ae6a.   v3:= v0 ^& 32;
#L15ae6e.   v3:= v3 ^> 5;
#L15ae72.   v2:= v2 + v3  @type int;
#L15ae74.   v3:= v0 ^& 64;
#L15ae78.   v3:= v3 ^> 6;
#L15ae7c.   v2:= v2 + v3  @type int;
#L15ae7e.   v2:= v2 ^& 1;
#L15ae82.   v3:= v0 ^& 128;
#L15ae86.   v3:= v3 ^> 7;
#L15ae8a.   if v2 != v3 then goto L15ae92;
#L15ae8e.   v2:= 0  @length 4;
#L15ae90.   return v2;
#L15ae92.   v1:= v1 + 1;
#L15ae96.   goto L15ae32;
#L15ae98.   v2:= 1  @length 4;
#L15ae9a.   goto L15ae90;

   }
    procedure [|byte|][] [|javax:crypto:spec:DESedeKeySpec.getKey|] ([|javax:crypto:spec:DESedeKeySpec|] v4 @type (this)) @owner [|javax:crypto:spec:DESedeKeySpec|] @signature [|Ljavax/crypto/spec/DESedeKeySpec;.getKey:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15aeac.   v3:= 24  @length 16;
#L15aeb0.   v2:= 0  @length 4;
#L15aeb2.   v0:= new [|byte|][v3];
#L15aeb6.   v1:= v4.[|javax:crypto:spec:DESedeKeySpec.key|]   @type object;
#L15aeba.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v2, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15aec0.   return v0  @type object;

   }
record [|javax:crypto:spec:DHGenParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|int|] [|javax:crypto:spec:DHGenParameterSpec.exponentSize|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:DHGenParameterSpec.primeSize|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:DHGenParameterSpec.<init>|] ([|javax:crypto:spec:DHGenParameterSpec|] v0 @type (this), [|int|] v1, [|int|] v2) @owner [|javax:crypto:spec:DHGenParameterSpec|] @signature [|Ljavax/crypto/spec/DHGenParameterSpec;.<init>:(II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15aed4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15aeda.   v0.[|javax:crypto:spec:DHGenParameterSpec.primeSize|]  := v1;
#L15aede.   v0.[|javax:crypto:spec:DHGenParameterSpec.exponentSize|]  := v2;
#L15aee2.   return @void ;

   }
    procedure [|int|] [|javax:crypto:spec:DHGenParameterSpec.getExponentSize|] ([|javax:crypto:spec:DHGenParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHGenParameterSpec|] @signature [|Ljavax/crypto/spec/DHGenParameterSpec;.getExponentSize:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15aef4.   v0:= v1.[|javax:crypto:spec:DHGenParameterSpec.exponentSize|] ;
#L15aef8.   return v0;

   }
    procedure [|int|] [|javax:crypto:spec:DHGenParameterSpec.getPrimeSize|] ([|javax:crypto:spec:DHGenParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHGenParameterSpec|] @signature [|Ljavax/crypto/spec/DHGenParameterSpec;.getPrimeSize:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15af0c.   v0:= v1.[|javax:crypto:spec:DHGenParameterSpec.primeSize|] ;
#L15af10.   return v0;

   }
record [|javax:crypto:spec:DHParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|java:math:BigInteger|] [|javax:crypto:spec:DHParameterSpec.g|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:DHParameterSpec.l|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:BigInteger|] [|javax:crypto:spec:DHParameterSpec.p|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:DHParameterSpec.<init>|] ([|javax:crypto:spec:DHParameterSpec|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|javax:crypto:spec:DHParameterSpec|] @signature [|Ljavax/crypto/spec/DHParameterSpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15af24.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15af2a.   v1.[|javax:crypto:spec:DHParameterSpec.p|]  := v2 @type object;
#L15af2e.   v1.[|javax:crypto:spec:DHParameterSpec.g|]  := v3 @type object;
#L15af32.   v0:= 0  @length 4;
#L15af34.   v1.[|javax:crypto:spec:DHParameterSpec.l|]  := v0;
#L15af38.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:DHParameterSpec.<init>|] ([|javax:crypto:spec:DHParameterSpec|] v0 @type (this), [|java:math:BigInteger|] v1 @type (object), [|java:math:BigInteger|] v2 @type (object), [|int|] v3) @owner [|javax:crypto:spec:DHParameterSpec|] @signature [|Ljavax/crypto/spec/DHParameterSpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15af4c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15af52.   v0.[|javax:crypto:spec:DHParameterSpec.p|]  := v1 @type object;
#L15af56.   v0.[|javax:crypto:spec:DHParameterSpec.g|]  := v2 @type object;
#L15af5a.   v0.[|javax:crypto:spec:DHParameterSpec.l|]  := v3;
#L15af5e.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHParameterSpec.getG|] ([|javax:crypto:spec:DHParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHParameterSpec|] @signature [|Ljavax/crypto/spec/DHParameterSpec;.getG:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15af70.   v0:= v1.[|javax:crypto:spec:DHParameterSpec.g|]   @type object;
#L15af74.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:spec:DHParameterSpec.getL|] ([|javax:crypto:spec:DHParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHParameterSpec|] @signature [|Ljavax/crypto/spec/DHParameterSpec;.getL:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15af88.   v0:= v1.[|javax:crypto:spec:DHParameterSpec.l|] ;
#L15af8c.   return v0;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHParameterSpec.getP|] ([|javax:crypto:spec:DHParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHParameterSpec|] @signature [|Ljavax/crypto/spec/DHParameterSpec;.getP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15afa0.   v0:= v1.[|javax:crypto:spec:DHParameterSpec.p|]   @type object;
#L15afa4.   return v0  @type object;

   }
record [|javax:crypto:spec:DHPrivateKeySpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:KeySpec|] {
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.g|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.p|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.x|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:DHPrivateKeySpec.<init>|] ([|javax:crypto:spec:DHPrivateKeySpec|] v0 @type (this), [|java:math:BigInteger|] v1 @type (object), [|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|javax:crypto:spec:DHPrivateKeySpec|] @signature [|Ljavax/crypto/spec/DHPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15afb8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15afbe.   v0.[|javax:crypto:spec:DHPrivateKeySpec.x|]  := v1 @type object;
#L15afc2.   v0.[|javax:crypto:spec:DHPrivateKeySpec.p|]  := v2 @type object;
#L15afc6.   v0.[|javax:crypto:spec:DHPrivateKeySpec.g|]  := v3 @type object;
#L15afca.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.getG|] ([|javax:crypto:spec:DHPrivateKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPrivateKeySpec|] @signature [|Ljavax/crypto/spec/DHPrivateKeySpec;.getG:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15afdc.   v0:= v1.[|javax:crypto:spec:DHPrivateKeySpec.g|]   @type object;
#L15afe0.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.getP|] ([|javax:crypto:spec:DHPrivateKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPrivateKeySpec|] @signature [|Ljavax/crypto/spec/DHPrivateKeySpec;.getP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15aff4.   v0:= v1.[|javax:crypto:spec:DHPrivateKeySpec.p|]   @type object;
#L15aff8.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPrivateKeySpec.getX|] ([|javax:crypto:spec:DHPrivateKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPrivateKeySpec|] @signature [|Ljavax/crypto/spec/DHPrivateKeySpec;.getX:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b00c.   v0:= v1.[|javax:crypto:spec:DHPrivateKeySpec.x|]   @type object;
#L15b010.   return v0  @type object;

   }
record [|javax:crypto:spec:DHPublicKeySpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:KeySpec|] {
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.g|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.p|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.y|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:DHPublicKeySpec.<init>|] ([|javax:crypto:spec:DHPublicKeySpec|] v0 @type (this), [|java:math:BigInteger|] v1 @type (object), [|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|javax:crypto:spec:DHPublicKeySpec|] @signature [|Ljavax/crypto/spec/DHPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15b024.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b02a.   v0.[|javax:crypto:spec:DHPublicKeySpec.y|]  := v1 @type object;
#L15b02e.   v0.[|javax:crypto:spec:DHPublicKeySpec.p|]  := v2 @type object;
#L15b032.   v0.[|javax:crypto:spec:DHPublicKeySpec.g|]  := v3 @type object;
#L15b036.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.getG|] ([|javax:crypto:spec:DHPublicKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPublicKeySpec|] @signature [|Ljavax/crypto/spec/DHPublicKeySpec;.getG:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b048.   v0:= v1.[|javax:crypto:spec:DHPublicKeySpec.g|]   @type object;
#L15b04c.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.getP|] ([|javax:crypto:spec:DHPublicKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPublicKeySpec|] @signature [|Ljavax/crypto/spec/DHPublicKeySpec;.getP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b060.   v0:= v1.[|javax:crypto:spec:DHPublicKeySpec.p|]   @type object;
#L15b064.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|javax:crypto:spec:DHPublicKeySpec.getY|] ([|javax:crypto:spec:DHPublicKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:DHPublicKeySpec|] @signature [|Ljavax/crypto/spec/DHPublicKeySpec;.getY:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b078.   v0:= v1.[|javax:crypto:spec:DHPublicKeySpec.y|]   @type object;
#L15b07c.   return v0  @type object;

   }
record [|javax:crypto:spec:IvParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|byte|][] [|javax:crypto:spec:IvParameterSpec.iv|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:IvParameterSpec.<init>|] ([|javax:crypto:spec:IvParameterSpec|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:spec:IvParameterSpec|] @signature [|Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b090.   v2:= 0  @length 4;
#L15b092.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b098.   if v4 != 0 then goto L15b0ac;
#L15b09c.   v0:= new [|java:lang:NullPointerException|];
#L15b0a0.   v1:= "iv == null" @type (object, string);
#L15b0a4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b0aa.   throw v0;
#L15b0ac.   v0:= v4.length;
#L15b0ae.   v0:= new [|byte|][v0];
#L15b0b2.   v3.[|javax:crypto:spec:IvParameterSpec.iv|]  := v0 @type object;
#L15b0b6.   v0:= v3.[|javax:crypto:spec:IvParameterSpec.iv|]   @type object;
#L15b0ba.   v1:= v4.length;
#L15b0bc.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b0c2.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:IvParameterSpec.<init>|] ([|javax:crypto:spec:IvParameterSpec|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|javax:crypto:spec:IvParameterSpec|] @signature [|Ljavax/crypto/spec/IvParameterSpec;.<init>:([BII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15b0d4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b0da.   if v3 == 0 then goto L15b0e6;
#L15b0de.   v0:= v3.length;
#L15b0e0.   v0:= v0 - v4  @type int;
#L15b0e2.   if v0 >= v5 then goto L15b0f2;
#L15b0e6.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b0ea.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b0f0.   throw v0;
#L15b0f2.   v0:= v3.length;
#L15b0f4.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L15b0fa.   v0:= new [|byte|][v5];
#L15b0fe.   v2.[|javax:crypto:spec:IvParameterSpec.iv|]  := v0 @type object;
#L15b102.   v0:= v2.[|javax:crypto:spec:IvParameterSpec.iv|]   @type object;
#L15b106.   v1:= 0  @length 4;
#L15b108.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v1, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b10e.   return @void ;

   }
    procedure [|byte|][] [|javax:crypto:spec:IvParameterSpec.getIV|] ([|javax:crypto:spec:IvParameterSpec|] v4 @type (this)) @owner [|javax:crypto:spec:IvParameterSpec|] @signature [|Ljavax/crypto/spec/IvParameterSpec;.getIV:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b120.   v3:= 0  @length 4;
#L15b122.   v1:= v4.[|javax:crypto:spec:IvParameterSpec.iv|]   @type object;
#L15b126.   v1:= v1.length;
#L15b128.   v0:= new [|byte|][v1];
#L15b12c.   v1:= v4.[|javax:crypto:spec:IvParameterSpec.iv|]   @type object;
#L15b130.   v2:= v4.[|javax:crypto:spec:IvParameterSpec.iv|]   @type object;
#L15b134.   v2:= v2.length;
#L15b136.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b13c.   return v0  @type object;

   }
record [|javax:crypto:spec:OAEPParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|java:lang:String|] [|javax:crypto:spec:OAEPParameterSpec.mdName|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|javax:crypto:spec:OAEPParameterSpec.mgfName|]    @AccessFlag PRIVATE_FINAL;
      [|java:security:spec:AlgorithmParameterSpec|] [|javax:crypto:spec:OAEPParameterSpec.mgfSpec|]    @AccessFlag PRIVATE_FINAL;
      [|javax:crypto:spec:PSource|] [|javax:crypto:spec:OAEPParameterSpec.pSrc|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|javax:crypto:spec:OAEPParameterSpec|] @@[|javax:crypto:spec:OAEPParameterSpec.DEFAULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:spec:OAEPParameterSpec.<clinit>|] () @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b150.   v0:= new [|javax:crypto:spec:OAEPParameterSpec|];
#L15b154.   call temp:=  [|javax:crypto:spec:OAEPParameterSpec.<init>|](v0) @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.<init>:()V|] @classDescriptor [|javax:crypto:spec:OAEPParameterSpec|] @type direct;
#L15b15a.   @@[|javax:crypto:spec:OAEPParameterSpec.DEFAULT|] := v0  @type object;
#L15b15e.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:OAEPParameterSpec.<init>|] ([|javax:crypto:spec:OAEPParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b170.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b176.   v0:= "SHA-1" @type (object, string);
#L15b17a.   v1.[|javax:crypto:spec:OAEPParameterSpec.mdName|]  := v0 @type object;
#L15b17e.   v0:= "MGF1" @type (object, string);
#L15b182.   v1.[|javax:crypto:spec:OAEPParameterSpec.mgfName|]  := v0 @type object;
#L15b186.   v0:= @@[|java:security:spec:MGF1ParameterSpec.SHA1|]   @type object;
#L15b18a.   v1.[|javax:crypto:spec:OAEPParameterSpec.mgfSpec|]  := v0 @type object;
#L15b18e.   v0:= @@[|javax:crypto:spec:PSource$PSpecified.DEFAULT|]   @type object;
#L15b192.   v1.[|javax:crypto:spec:OAEPParameterSpec.pSrc|]  := v0 @type object;
#L15b196.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:OAEPParameterSpec.<init>|] ([|javax:crypto:spec:OAEPParameterSpec|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v5 @type (object), [|javax:crypto:spec:PSource|] v6 @type (object)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;Ljavax/crypto/spec/PSource;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15b1a8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b1ae.   if v3 != 0 then goto L15b1c2;
#L15b1b2.   v0:= new [|java:lang:NullPointerException|];
#L15b1b6.   v1:= "mdName == null" @type (object, string);
#L15b1ba.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b1c0.   throw v0;
#L15b1c2.   if v4 != 0 then goto L15b1d6;
#L15b1c6.   v0:= new [|java:lang:NullPointerException|];
#L15b1ca.   v1:= "mgfName == null" @type (object, string);
#L15b1ce.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b1d4.   throw v0;
#L15b1d6.   if v6 != 0 then goto L15b1ea;
#L15b1da.   v0:= new [|java:lang:NullPointerException|];
#L15b1de.   v1:= "pSrc == null" @type (object, string);
#L15b1e2.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b1e8.   throw v0;
#L15b1ea.   v2.[|javax:crypto:spec:OAEPParameterSpec.mdName|]  := v3 @type object;
#L15b1ee.   v2.[|javax:crypto:spec:OAEPParameterSpec.mgfName|]  := v4 @type object;
#L15b1f2.   v2.[|javax:crypto:spec:OAEPParameterSpec.mgfSpec|]  := v5 @type object;
#L15b1f6.   v2.[|javax:crypto:spec:OAEPParameterSpec.pSrc|]  := v6 @type object;
#L15b1fa.   return @void ;

   }
    procedure [|java:lang:String|] [|javax:crypto:spec:OAEPParameterSpec.getDigestAlgorithm|] ([|javax:crypto:spec:OAEPParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.getDigestAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b20c.   v0:= v1.[|javax:crypto:spec:OAEPParameterSpec.mdName|]   @type object;
#L15b210.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:spec:OAEPParameterSpec.getMGFAlgorithm|] ([|javax:crypto:spec:OAEPParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.getMGFAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b224.   v0:= v1.[|javax:crypto:spec:OAEPParameterSpec.mgfName|]   @type object;
#L15b228.   return v0  @type object;

   }
    procedure [|java:security:spec:AlgorithmParameterSpec|] [|javax:crypto:spec:OAEPParameterSpec.getMGFParameters|] ([|javax:crypto:spec:OAEPParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.getMGFParameters:()Ljava/security/spec/AlgorithmParameterSpec;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b23c.   v0:= v1.[|javax:crypto:spec:OAEPParameterSpec.mgfSpec|]   @type object;
#L15b240.   return v0  @type object;

   }
    procedure [|javax:crypto:spec:PSource|] [|javax:crypto:spec:OAEPParameterSpec.getPSource|] ([|javax:crypto:spec:OAEPParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:OAEPParameterSpec|] @signature [|Ljavax/crypto/spec/OAEPParameterSpec;.getPSource:()Ljavax/crypto/spec/PSource;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b254.   v0:= v1.[|javax:crypto:spec:OAEPParameterSpec.pSrc|]   @type object;
#L15b258.   return v0  @type object;

   }
record [|javax:crypto:spec:PBEKeySpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:KeySpec|] {
      [|int|] [|javax:crypto:spec:PBEKeySpec.iterationCount|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:PBEKeySpec.keyLength|]    @AccessFlag PRIVATE_FINAL;
      [|char|][] [|javax:crypto:spec:PBEKeySpec.password|]    @AccessFlag PRIVATE;
      [|byte|][] [|javax:crypto:spec:PBEKeySpec.salt|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:PBEKeySpec.<init>|] ([|javax:crypto:spec:PBEKeySpec|] v3 @type (this), [|char|][] v4) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.<init>:([C)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b26c.   v2:= 0  @length 4;
#L15b26e.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b274.   if v4 != 0 then goto L15b290;
#L15b278.   v0:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L15b27c.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b280.   v0:= 0  @length 4;
#L15b282.   v3.[|javax:crypto:spec:PBEKeySpec.salt|]  := v0 @type object;
#L15b286.   v3.[|javax:crypto:spec:PBEKeySpec.iterationCount|]  := v2;
#L15b28a.   v3.[|javax:crypto:spec:PBEKeySpec.keyLength|]  := v2;
#L15b28e.   return @void ;
#L15b290.   v0:= v4.length;
#L15b292.   v0:= new [|char|][v0];
#L15b296.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b29a.   v0:= v3.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b29e.   v1:= v4.length;
#L15b2a0.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b2a6.   goto L15b280;

   }
    procedure [|void|] [|javax:crypto:spec:PBEKeySpec.<init>|] ([|javax:crypto:spec:PBEKeySpec|] v3 @type (this), [|char|][] v4, [|byte|][] v5, [|int|] v6) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.<init>:([C[BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b2b8.   v2:= 0  @length 4;
#L15b2ba.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b2c0.   if v5 != 0 then goto L15b2d4;
#L15b2c4.   v0:= new [|java:lang:NullPointerException|];
#L15b2c8.   v1:= "salt == null" @type (object, string);
#L15b2cc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b2d2.   throw v0;
#L15b2d4.   v0:= v5.length;
#L15b2d6.   if v0 != 0 then goto L15b2ea;
#L15b2da.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b2de.   v1:= "salt.length == 0" @type (object, string);
#L15b2e2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b2e8.   throw v0;
#L15b2ea.   if v6 > 0 then goto L15b2fe;
#L15b2ee.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b2f2.   v1:= "iterationCount <= 0" @type (object, string);
#L15b2f6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b2fc.   throw v0;
#L15b2fe.   if v4 != 0 then goto L15b32a;
#L15b302.   v0:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L15b306.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b30a.   v0:= v5.length;
#L15b30c.   v0:= new [|byte|][v0];
#L15b310.   v3.[|javax:crypto:spec:PBEKeySpec.salt|]  := v0 @type object;
#L15b314.   v0:= v3.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b318.   v1:= v5.length;
#L15b31a.   call temp:=  [|java:lang:System.arraycopy|](v5, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b320.   v3.[|javax:crypto:spec:PBEKeySpec.iterationCount|]  := v6;
#L15b324.   v3.[|javax:crypto:spec:PBEKeySpec.keyLength|]  := v2;
#L15b328.   return @void ;
#L15b32a.   v0:= v4.length;
#L15b32c.   v0:= new [|char|][v0];
#L15b330.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b334.   v0:= v3.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b338.   v1:= v4.length;
#L15b33a.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b340.   goto L15b30a;

   }
    procedure [|void|] [|javax:crypto:spec:PBEKeySpec.<init>|] ([|javax:crypto:spec:PBEKeySpec|] v3 @type (this), [|char|][] v4, [|byte|][] v5, [|int|] v6, [|int|] v7) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.<init>:([C[BII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b354.   v2:= 0  @length 4;
#L15b356.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b35c.   if v5 != 0 then goto L15b370;
#L15b360.   v0:= new [|java:lang:NullPointerException|];
#L15b364.   v1:= "salt == null" @type (object, string);
#L15b368.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b36e.   throw v0;
#L15b370.   v0:= v5.length;
#L15b372.   if v0 != 0 then goto L15b386;
#L15b376.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b37a.   v1:= "salt.length == 0" @type (object, string);
#L15b37e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b384.   throw v0;
#L15b386.   if v6 > 0 then goto L15b39a;
#L15b38a.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b38e.   v1:= "iterationCount <= 0" @type (object, string);
#L15b392.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b398.   throw v0;
#L15b39a.   if v7 > 0 then goto L15b3ae;
#L15b39e.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b3a2.   v1:= "keyLength <= 0" @type (object, string);
#L15b3a6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b3ac.   throw v0;
#L15b3ae.   if v4 != 0 then goto L15b3da;
#L15b3b2.   v0:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L15b3b6.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b3ba.   v0:= v5.length;
#L15b3bc.   v0:= new [|byte|][v0];
#L15b3c0.   v3.[|javax:crypto:spec:PBEKeySpec.salt|]  := v0 @type object;
#L15b3c4.   v0:= v3.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b3c8.   v1:= v5.length;
#L15b3ca.   call temp:=  [|java:lang:System.arraycopy|](v5, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b3d0.   v3.[|javax:crypto:spec:PBEKeySpec.iterationCount|]  := v6;
#L15b3d4.   v3.[|javax:crypto:spec:PBEKeySpec.keyLength|]  := v7;
#L15b3d8.   return @void ;
#L15b3da.   v0:= v4.length;
#L15b3dc.   v0:= new [|char|][v0];
#L15b3e0.   v3.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b3e4.   v0:= v3.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b3e8.   v1:= v4.length;
#L15b3ea.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b3f0.   goto L15b3ba;

   }
    procedure [|void|] [|javax:crypto:spec:PBEKeySpec.clearPassword|] ([|javax:crypto:spec:PBEKeySpec|] v2 @type (this)) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.clearPassword:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L15b404.   v0:= v2.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b408.   v1:= 63  @length 16;
#L15b40c.   call temp:=  [|java:util:Arrays.fill|](v0, v1) @signature [|Ljava/util/Arrays;.fill:([CC)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L15b412.   v0:= 0  @length 4;
#L15b414.   v2.[|javax:crypto:spec:PBEKeySpec.password|]  := v0 @type object;
#L15b418.   return @void ;

   }
    procedure [|int|] [|javax:crypto:spec:PBEKeySpec.getIterationCount|] ([|javax:crypto:spec:PBEKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.getIterationCount:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15b42c.   v0:= v1.[|javax:crypto:spec:PBEKeySpec.iterationCount|] ;
#L15b430.   return v0;

   }
    procedure [|int|] [|javax:crypto:spec:PBEKeySpec.getKeyLength|] ([|javax:crypto:spec:PBEKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.getKeyLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L15b444.   v0:= v1.[|javax:crypto:spec:PBEKeySpec.keyLength|] ;
#L15b448.   return v0;

   }
    procedure [|char|][] [|javax:crypto:spec:PBEKeySpec.getPassword|] ([|javax:crypto:spec:PBEKeySpec|] v4 @type (this)) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.getPassword:()[C|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b45c.   v3:= 0  @length 4;
#L15b45e.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b462.   if v1 != 0 then goto L15b476;
#L15b466.   v1:= new [|java:lang:IllegalStateException|];
#L15b46a.   v2:= "The password has been cleared" @type (object, string);
#L15b46e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L15b474.   throw v1;
#L15b476.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b47a.   v1:= v1.length;
#L15b47c.   v0:= new [|char|][v1];
#L15b480.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b484.   v2:= v4.[|javax:crypto:spec:PBEKeySpec.password|]   @type object;
#L15b488.   v2:= v2.length;
#L15b48a.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b490.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:spec:PBEKeySpec.getSalt|] ([|javax:crypto:spec:PBEKeySpec|] v4 @type (this)) @owner [|javax:crypto:spec:PBEKeySpec|] @signature [|Ljavax/crypto/spec/PBEKeySpec;.getSalt:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b4a4.   v3:= 0  @length 4;
#L15b4a6.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b4aa.   if v1 != 0 then goto L15b4b2;
#L15b4ae.   v0:= 0  @length 4;
#L15b4b0.   return v0  @type object;
#L15b4b2.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b4b6.   v1:= v1.length;
#L15b4b8.   v0:= new [|byte|][v1];
#L15b4bc.   v1:= v4.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b4c0.   v2:= v4.[|javax:crypto:spec:PBEKeySpec.salt|]   @type object;
#L15b4c4.   v2:= v2.length;
#L15b4c6.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b4cc.   goto L15b4b0;

   }
record [|javax:crypto:spec:PBEParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|int|] [|javax:crypto:spec:PBEParameterSpec.iterationCount|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|javax:crypto:spec:PBEParameterSpec.salt|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:PBEParameterSpec.<init>|] ([|javax:crypto:spec:PBEParameterSpec|] v3 @type (this), [|byte|][] v4, [|int|] v5) @owner [|javax:crypto:spec:PBEParameterSpec|] @signature [|Ljavax/crypto/spec/PBEParameterSpec;.<init>:([BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b4e0.   v2:= 0  @length 4;
#L15b4e2.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b4e8.   if v4 != 0 then goto L15b4fc;
#L15b4ec.   v0:= new [|java:lang:NullPointerException|];
#L15b4f0.   v1:= "salt == null" @type (object, string);
#L15b4f4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b4fa.   throw v0;
#L15b4fc.   v0:= v4.length;
#L15b4fe.   v0:= new [|byte|][v0];
#L15b502.   v3.[|javax:crypto:spec:PBEParameterSpec.salt|]  := v0 @type object;
#L15b506.   v0:= v3.[|javax:crypto:spec:PBEParameterSpec.salt|]   @type object;
#L15b50a.   v1:= v4.length;
#L15b50c.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b512.   v3.[|javax:crypto:spec:PBEParameterSpec.iterationCount|]  := v5;
#L15b516.   return @void ;

   }
    procedure [|int|] [|javax:crypto:spec:PBEParameterSpec.getIterationCount|] ([|javax:crypto:spec:PBEParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:PBEParameterSpec|] @signature [|Ljavax/crypto/spec/PBEParameterSpec;.getIterationCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b528.   v0:= v1.[|javax:crypto:spec:PBEParameterSpec.iterationCount|] ;
#L15b52c.   return v0;

   }
    procedure [|byte|][] [|javax:crypto:spec:PBEParameterSpec.getSalt|] ([|javax:crypto:spec:PBEParameterSpec|] v4 @type (this)) @owner [|javax:crypto:spec:PBEParameterSpec|] @signature [|Ljavax/crypto/spec/PBEParameterSpec;.getSalt:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b540.   v3:= 0  @length 4;
#L15b542.   v1:= v4.[|javax:crypto:spec:PBEParameterSpec.salt|]   @type object;
#L15b546.   v1:= v1.length;
#L15b548.   v0:= new [|byte|][v1];
#L15b54c.   v1:= v4.[|javax:crypto:spec:PBEParameterSpec.salt|]   @type object;
#L15b550.   v2:= v4.[|javax:crypto:spec:PBEParameterSpec.salt|]   @type object;
#L15b554.   v2:= v2.length;
#L15b556.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b55c.   return v0  @type object;

   }
record [|javax:crypto:spec:PSource|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|javax:crypto:spec:PSource.pSrcName|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|javax:crypto:spec:PSource.<init>|] ([|javax:crypto:spec:PSource|] v0 @type (this)) @owner [|javax:crypto:spec:PSource|] @signature [|Ljavax/crypto/spec/PSource;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L15b570.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b576.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:PSource.<init>|] ([|javax:crypto:spec:PSource|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|javax:crypto:spec:PSource|] @signature [|Ljavax/crypto/spec/PSource;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15b588.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b58e.   if v3 != 0 then goto L15b5a2;
#L15b592.   v0:= new [|java:lang:NullPointerException|];
#L15b596.   v1:= "pSrcName == null" @type (object, string);
#L15b59a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b5a0.   throw v0;
#L15b5a2.   v2.[|javax:crypto:spec:PSource.pSrcName|]  := v3 @type object;
#L15b5a6.   return @void ;

   }
    procedure [|java:lang:String|] [|javax:crypto:spec:PSource.getAlgorithm|] ([|javax:crypto:spec:PSource|] v1 @type (this)) @owner [|javax:crypto:spec:PSource|] @signature [|Ljavax/crypto/spec/PSource;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b5b8.   v0:= v1.[|javax:crypto:spec:PSource.pSrcName|]   @type object;
#L15b5bc.   return v0  @type object;

   }
record [|javax:crypto:spec:PSource$PSpecified|]  @type class @AccessFlag PUBLIC_FINAL  extends [|javax:crypto:spec:PSource|] {
      [|byte|][] [|javax:crypto:spec:PSource$PSpecified.p|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|javax:crypto:spec:PSource$PSpecified|] @@[|javax:crypto:spec:PSource$PSpecified.DEFAULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:spec:PSource$PSpecified.<clinit>|] () @owner [|javax:crypto:spec:PSource$PSpecified|] @signature [|Ljavax/crypto/spec/PSource$PSpecified;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b5d0.   v0:= new [|javax:crypto:spec:PSource$PSpecified|];
#L15b5d4.   call temp:=  [|javax:crypto:spec:PSource$PSpecified.<init>|](v0) @signature [|Ljavax/crypto/spec/PSource$PSpecified;.<init>:()V|] @classDescriptor [|javax:crypto:spec:PSource$PSpecified|] @type direct;
#L15b5da.   @@[|javax:crypto:spec:PSource$PSpecified.DEFAULT|] := v0  @type object;
#L15b5de.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:PSource$PSpecified.<init>|] ([|javax:crypto:spec:PSource$PSpecified|] v1 @type (this)) @owner [|javax:crypto:spec:PSource$PSpecified|] @signature [|Ljavax/crypto/spec/PSource$PSpecified;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b5f0.   v0:= "PSpecified" @type (object, string);
#L15b5f4.   call temp:=  [|javax:crypto:spec:PSource.<init>|](v1, v0) @signature [|Ljavax/crypto/spec/PSource;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:spec:PSource|] @type direct;
#L15b5fa.   v0:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L15b5fe.   v1.[|javax:crypto:spec:PSource$PSpecified.p|]  := v0 @type object;
#L15b602.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:PSource$PSpecified.<init>|] ([|javax:crypto:spec:PSource$PSpecified|] v3 @type (this), [|byte|][] v4) @owner [|javax:crypto:spec:PSource$PSpecified|] @signature [|Ljavax/crypto/spec/PSource$PSpecified;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b614.   v2:= 0  @length 4;
#L15b616.   v0:= "PSpecified" @type (object, string);
#L15b61a.   call temp:=  [|javax:crypto:spec:PSource.<init>|](v3, v0) @signature [|Ljavax/crypto/spec/PSource;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:spec:PSource|] @type direct;
#L15b620.   if v4 != 0 then goto L15b634;
#L15b624.   v0:= new [|java:lang:NullPointerException|];
#L15b628.   v1:= "p == null" @type (object, string);
#L15b62c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L15b632.   throw v0;
#L15b634.   v0:= v4.length;
#L15b636.   v0:= new [|byte|][v0];
#L15b63a.   v3.[|javax:crypto:spec:PSource$PSpecified.p|]  := v0 @type object;
#L15b63e.   v0:= v3.[|javax:crypto:spec:PSource$PSpecified.p|]   @type object;
#L15b642.   v1:= v4.length;
#L15b644.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b64a.   return @void ;

   }
    procedure [|byte|][] [|javax:crypto:spec:PSource$PSpecified.getValue|] ([|javax:crypto:spec:PSource$PSpecified|] v4 @type (this)) @owner [|javax:crypto:spec:PSource$PSpecified|] @signature [|Ljavax/crypto/spec/PSource$PSpecified;.getValue:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b65c.   v3:= 0  @length 4;
#L15b65e.   v1:= v4.[|javax:crypto:spec:PSource$PSpecified.p|]   @type object;
#L15b662.   v1:= v1.length;
#L15b664.   v0:= new [|byte|][v1];
#L15b668.   v1:= v4.[|javax:crypto:spec:PSource$PSpecified.p|]   @type object;
#L15b66c.   v2:= v4.[|javax:crypto:spec:PSource$PSpecified.p|]   @type object;
#L15b670.   v2:= v2.length;
#L15b672.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b678.   return v0  @type object;

   }
record [|javax:crypto:spec:RC2ParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|int|] [|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|javax:crypto:spec:RC2ParameterSpec.iv|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:RC2ParameterSpec.<init>|] ([|javax:crypto:spec:RC2ParameterSpec|] v1 @type (this), [|int|] v2) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b68c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b692.   v1.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|]  := v2;
#L15b696.   v0:= 0  @length 4;
#L15b698.   v1.[|javax:crypto:spec:RC2ParameterSpec.iv|]  := v0 @type object;
#L15b69c.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:RC2ParameterSpec.<init>|] ([|javax:crypto:spec:RC2ParameterSpec|] v3 @type (this), [|int|] v4, [|byte|][] v5) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.<init>:(I[B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b6b0.   v2:= 0  @length 4;
#L15b6b2.   v1:= 8  @length 16;
#L15b6b6.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b6bc.   if v5 != 0 then goto L15b6d0;
#L15b6c0.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b6c4.   v1:= "iv == null" @type (object, string);
#L15b6c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b6ce.   throw v0;
#L15b6d0.   v0:= v5.length;
#L15b6d2.   if v0 >= v1 then goto L15b6e6;
#L15b6d6.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b6da.   v1:= "iv.length < 8" @type (object, string);
#L15b6de.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b6e4.   throw v0;
#L15b6e6.   v3.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|]  := v4;
#L15b6ea.   v0:= new [|byte|][v1];
#L15b6ee.   v3.[|javax:crypto:spec:RC2ParameterSpec.iv|]  := v0 @type object;
#L15b6f2.   v0:= v3.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b6f6.   call temp:=  [|java:lang:System.arraycopy|](v5, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b6fc.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:RC2ParameterSpec.<init>|] ([|javax:crypto:spec:RC2ParameterSpec|] v3 @type (this), [|int|] v4, [|byte|][] v5, [|int|] v6) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.<init>:(I[BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b710.   v2:= 8  @length 16;
#L15b714.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b71a.   if v5 != 0 then goto L15b72e;
#L15b71e.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b722.   v1:= "iv == null" @type (object, string);
#L15b726.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b72c.   throw v0;
#L15b72e.   v0:= v5.length;
#L15b730.   v0:= v0 - v6  @type int;
#L15b732.   if v0 >= v2 then goto L15b746;
#L15b736.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b73a.   v1:= "iv.length - offset < 8" @type (object, string);
#L15b73e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b744.   throw v0;
#L15b746.   v3.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|]  := v4;
#L15b74a.   v0:= new [|byte|][v2];
#L15b74e.   v3.[|javax:crypto:spec:RC2ParameterSpec.iv|]  := v0 @type object;
#L15b752.   v0:= v3.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b756.   v1:= 0  @length 4;
#L15b758.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v0, v1, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b75e.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:spec:RC2ParameterSpec.equals|] ([|javax:crypto:spec:RC2ParameterSpec|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L15b770.   v1:= 1  @length 4;
#L15b772.   v2:= 0  @length 4;
#L15b774.   if v6 != v5 then goto L15b77a;
#L15b778.   return v1;
#L15b77a.   v3:= instanceof @varname v6 @type [|javax:crypto:spec:RC2ParameterSpec|];
#L15b77e.   if v3 != 0 then goto L15b786;
#L15b782.   v1:= v2;
#L15b784.   goto L15b778;
#L15b786.   v0:= v6  @type object;
#L15b788.   v0:= ([|javax:crypto:spec:RC2ParameterSpec|])v0;
#L15b78c.   v3:= v5.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|] ;
#L15b790.   v4:= v0.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|] ;
#L15b794.   if v3 != v4 then goto L15b7ac;
#L15b798.   v3:= v5.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b79c.   v4:= v0.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b7a0.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([B[B)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L15b7a6.   v3:= temp;
#L15b7a8.   if v3 != 0 then goto L15b778;
#L15b7ac.   v1:= v2;
#L15b7ae.   goto L15b778;

   }
    procedure [|int|] [|javax:crypto:spec:RC2ParameterSpec.getEffectiveKeyBits|] ([|javax:crypto:spec:RC2ParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.getEffectiveKeyBits:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15b7c0.   v0:= v1.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|] ;
#L15b7c4.   return v0;

   }
    procedure [|byte|][] [|javax:crypto:spec:RC2ParameterSpec.getIV|] ([|javax:crypto:spec:RC2ParameterSpec|] v4 @type (this)) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.getIV:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15b7d8.   v3:= 0  @length 4;
#L15b7da.   v1:= v4.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b7de.   if v1 != 0 then goto L15b7e6;
#L15b7e2.   v0:= 0  @length 4;
#L15b7e4.   return v0  @type object;
#L15b7e6.   v1:= v4.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b7ea.   v1:= v1.length;
#L15b7ec.   v0:= new [|byte|][v1];
#L15b7f0.   v1:= v4.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b7f4.   v2:= v4.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b7f8.   v2:= v2.length;
#L15b7fa.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b800.   goto L15b7e4;

   }
    procedure [|int|] [|javax:crypto:spec:RC2ParameterSpec.hashCode|] ([|javax:crypto:spec:RC2ParameterSpec|] v7 @type (this)) @owner [|javax:crypto:spec:RC2ParameterSpec|] @signature [|Ljavax/crypto/spec/RC2ParameterSpec;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15b814.   v4:= v7.[|javax:crypto:spec:RC2ParameterSpec.effectiveKeyBits|] ;
#L15b818.   v6:= v7.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b81c.   if v6 != 0 then goto L15b824;
#L15b820.   v5:= v4;
#L15b822.   return v5;
#L15b824.   v0:= v7.[|javax:crypto:spec:RC2ParameterSpec.iv|]   @type object;
#L15b828.   v3:= v0.length;
#L15b82a.   v2:= 0  @length 4;
#L15b82c.   if v2 >= v3 then goto L15b83c;
#L15b830.   v1:= v0[v2]  @byte;
#L15b834.   v4:= v4 + v1  @type int;
#L15b836.   v2:= v2 + 1;
#L15b83a.   goto L15b82c;
#L15b83c.   v5:= v4;
#L15b83e.   goto L15b822;

   }
record [|javax:crypto:spec:RC5ParameterSpec|]  @type class @AccessFlag PUBLIC extends  [|java:security:spec:AlgorithmParameterSpec|] {
      [|byte|][] [|javax:crypto:spec:RC5ParameterSpec.iv|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:RC5ParameterSpec.rounds|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:RC5ParameterSpec.version|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|javax:crypto:spec:RC5ParameterSpec.wordSize|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:crypto:spec:RC5ParameterSpec.<init>|] ([|javax:crypto:spec:RC5ParameterSpec|] v1 @type (this), [|int|] v2, [|int|] v3, [|int|] v4) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15b850.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b856.   v1.[|javax:crypto:spec:RC5ParameterSpec.version|]  := v2;
#L15b85a.   v1.[|javax:crypto:spec:RC5ParameterSpec.rounds|]  := v3;
#L15b85e.   v1.[|javax:crypto:spec:RC5ParameterSpec.wordSize|]  := v4;
#L15b862.   v0:= 0  @length 4;
#L15b864.   v1.[|javax:crypto:spec:RC5ParameterSpec.iv|]  := v0 @type object;
#L15b868.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:RC5ParameterSpec.<init>|] ([|javax:crypto:spec:RC5ParameterSpec|] v3 @type (this), [|int|] v4, [|int|] v5, [|int|] v6, [|byte|][] v7) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.<init>:(III[B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b87c.   v2:= 0  @length 4;
#L15b87e.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b884.   if v7 != 0 then goto L15b898;
#L15b888.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b88c.   v1:= "iv == null" @type (object, string);
#L15b890.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b896.   throw v0;
#L15b898.   v0:= v7.length;
#L15b89a.   v1:= v6 / 8;
#L15b89e.   v1:= v1 * 2;
#L15b8a2.   if v0 >= v1 then goto L15b8b6;
#L15b8a6.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b8aa.   v1:= "iv.length < 2 * (wordSize / 8)" @type (object, string);
#L15b8ae.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b8b4.   throw v0;
#L15b8b6.   v3.[|javax:crypto:spec:RC5ParameterSpec.version|]  := v4;
#L15b8ba.   v3.[|javax:crypto:spec:RC5ParameterSpec.rounds|]  := v5;
#L15b8be.   v3.[|javax:crypto:spec:RC5ParameterSpec.wordSize|]  := v6;
#L15b8c2.   v0:= v6 / 8;
#L15b8c6.   v0:= v0 * 2;
#L15b8ca.   v0:= new [|byte|][v0];
#L15b8ce.   v3.[|javax:crypto:spec:RC5ParameterSpec.iv|]  := v0 @type object;
#L15b8d2.   v0:= v3.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15b8d6.   v1:= v6 / 8;
#L15b8da.   v1:= v1 * 2;
#L15b8de.   call temp:=  [|java:lang:System.arraycopy|](v7, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b8e4.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:RC5ParameterSpec.<init>|] ([|javax:crypto:spec:RC5ParameterSpec|] v3 @type (this), [|int|] v4, [|int|] v5, [|int|] v6, [|byte|][] v7, [|int|] v8) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.<init>:(III[BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15b8f8.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15b8fe.   if v7 != 0 then goto L15b912;
#L15b902.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b906.   v1:= "iv == null" @type (object, string);
#L15b90a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b910.   throw v0;
#L15b912.   if v8 >= 0 then goto L15b948;
#L15b916.   v0:= new [|java:lang:ArrayIndexOutOfBoundsException|];
#L15b91a.   v1:= new [|java:lang:StringBuilder|];
#L15b91e.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L15b924.   v2:= "offset < 0: " @type (object, string);
#L15b928.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15b92e.   v1:= temp  @type object;
#L15b930.   call temp:=  [|java:lang:StringBuilder.append|](v1, v8) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15b936.   v1:= temp  @type object;
#L15b938.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L15b93e.   v1:= temp  @type object;
#L15b940.   call temp:=  [|java:lang:ArrayIndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArrayIndexOutOfBoundsException|] @type direct;
#L15b946.   throw v0;
#L15b948.   v0:= v7.length;
#L15b94a.   v0:= v0 - v8  @type int;
#L15b94c.   v1:= v6 / 8;
#L15b950.   v1:= v1 * 2;
#L15b954.   if v0 >= v1 then goto L15b968;
#L15b958.   v0:= new [|java:lang:IllegalArgumentException|];
#L15b95c.   v1:= "iv.length - offset < 2 * (wordSize / 8)" @type (object, string);
#L15b960.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15b966.   throw v0;
#L15b968.   v3.[|javax:crypto:spec:RC5ParameterSpec.version|]  := v4;
#L15b96c.   v3.[|javax:crypto:spec:RC5ParameterSpec.rounds|]  := v5;
#L15b970.   v3.[|javax:crypto:spec:RC5ParameterSpec.wordSize|]  := v6;
#L15b974.   v0:= v6 / 8;
#L15b978.   v0:= v0 * 2;
#L15b97c.   v0:= v0 + v8  @type int;
#L15b97e.   v0:= new [|byte|][v0];
#L15b982.   v3.[|javax:crypto:spec:RC5ParameterSpec.iv|]  := v0 @type object;
#L15b986.   v0:= v3.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15b98a.   v1:= 0  @length 4;
#L15b98c.   v2:= v6 / 8;
#L15b990.   v2:= v2 * 2;
#L15b994.   call temp:=  [|java:lang:System.arraycopy|](v7, v8, v0, v1, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15b99a.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:spec:RC5ParameterSpec.equals|] ([|javax:crypto:spec:RC5ParameterSpec|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L15b9ac.   v1:= 1  @length 4;
#L15b9ae.   v2:= 0  @length 4;
#L15b9b0.   if v6 != v5 then goto L15b9b6;
#L15b9b4.   return v1;
#L15b9b6.   v3:= instanceof @varname v6 @type [|javax:crypto:spec:RC5ParameterSpec|];
#L15b9ba.   if v3 != 0 then goto L15b9c2;
#L15b9be.   v1:= v2;
#L15b9c0.   goto L15b9b4;
#L15b9c2.   v0:= v6  @type object;
#L15b9c4.   v0:= ([|javax:crypto:spec:RC5ParameterSpec|])v0;
#L15b9c8.   v3:= v5.[|javax:crypto:spec:RC5ParameterSpec.version|] ;
#L15b9cc.   v4:= v0.[|javax:crypto:spec:RC5ParameterSpec.version|] ;
#L15b9d0.   if v3 != v4 then goto L15ba00;
#L15b9d4.   v3:= v5.[|javax:crypto:spec:RC5ParameterSpec.rounds|] ;
#L15b9d8.   v4:= v0.[|javax:crypto:spec:RC5ParameterSpec.rounds|] ;
#L15b9dc.   if v3 != v4 then goto L15ba00;
#L15b9e0.   v3:= v5.[|javax:crypto:spec:RC5ParameterSpec.wordSize|] ;
#L15b9e4.   v4:= v0.[|javax:crypto:spec:RC5ParameterSpec.wordSize|] ;
#L15b9e8.   if v3 != v4 then goto L15ba00;
#L15b9ec.   v3:= v5.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15b9f0.   v4:= v0.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15b9f4.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([B[B)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L15b9fa.   v3:= temp;
#L15b9fc.   if v3 != 0 then goto L15b9b4;
#L15ba00.   v1:= v2;
#L15ba02.   goto L15b9b4;

   }
    procedure [|byte|][] [|javax:crypto:spec:RC5ParameterSpec.getIV|] ([|javax:crypto:spec:RC5ParameterSpec|] v4 @type (this)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.getIV:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15ba14.   v3:= 0  @length 4;
#L15ba16.   v1:= v4.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15ba1a.   if v1 != 0 then goto L15ba22;
#L15ba1e.   v0:= 0  @length 4;
#L15ba20.   return v0  @type object;
#L15ba22.   v1:= v4.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15ba26.   v1:= v1.length;
#L15ba28.   v0:= new [|byte|][v1];
#L15ba2c.   v1:= v4.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15ba30.   v2:= v4.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15ba34.   v2:= v2.length;
#L15ba36.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15ba3c.   goto L15ba20;

   }
    procedure [|int|] [|javax:crypto:spec:RC5ParameterSpec.getRounds|] ([|javax:crypto:spec:RC5ParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.getRounds:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15ba50.   v0:= v1.[|javax:crypto:spec:RC5ParameterSpec.rounds|] ;
#L15ba54.   return v0;

   }
    procedure [|int|] [|javax:crypto:spec:RC5ParameterSpec.getVersion|] ([|javax:crypto:spec:RC5ParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15ba68.   v0:= v1.[|javax:crypto:spec:RC5ParameterSpec.version|] ;
#L15ba6c.   return v0;

   }
    procedure [|int|] [|javax:crypto:spec:RC5ParameterSpec.getWordSize|] ([|javax:crypto:spec:RC5ParameterSpec|] v1 @type (this)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.getWordSize:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15ba80.   v0:= v1.[|javax:crypto:spec:RC5ParameterSpec.wordSize|] ;
#L15ba84.   return v0;

   }
    procedure [|int|] [|javax:crypto:spec:RC5ParameterSpec.hashCode|] ([|javax:crypto:spec:RC5ParameterSpec|] v8 @type (this)) @owner [|javax:crypto:spec:RC5ParameterSpec|] @signature [|Ljavax/crypto/spec/RC5ParameterSpec;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L15ba98.   v6:= v8.[|javax:crypto:spec:RC5ParameterSpec.version|] ;
#L15ba9c.   v7:= v8.[|javax:crypto:spec:RC5ParameterSpec.rounds|] ;
#L15baa0.   v6:= v6 + v7  @type int;
#L15baa2.   v7:= v8.[|javax:crypto:spec:RC5ParameterSpec.wordSize|] ;
#L15baa6.   v4:= v6 + v7  @type int;
#L15baaa.   v6:= v8.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15baae.   if v6 != 0 then goto L15bab6;
#L15bab2.   v5:= v4;
#L15bab4.   return v5;
#L15bab6.   v0:= v8.[|javax:crypto:spec:RC5ParameterSpec.iv|]   @type object;
#L15baba.   v3:= v0.length;
#L15babc.   v2:= 0  @length 4;
#L15babe.   if v2 >= v3 then goto L15bad2;
#L15bac2.   v1:= v0[v2]  @byte;
#L15bac6.   v6:= v1 ^& 255;
#L15baca.   v4:= v4 + v6  @type int;
#L15bacc.   v2:= v2 + 1;
#L15bad0.   goto L15babe;
#L15bad2.   v5:= v4;
#L15bad4.   goto L15bab4;

   }
record [|javax:crypto:spec:SecretKeySpec|]  @type class @AccessFlag PUBLIC extends  [|javax:crypto:SecretKey|], [|java:security:spec:KeySpec|], [|java:io:Serializable|] {
      [|java:lang:String|] [|javax:crypto:spec:SecretKeySpec.algorithm|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|javax:crypto:spec:SecretKeySpec.key|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|javax:crypto:spec:SecretKeySpec.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:crypto:spec:SecretKeySpec.<init>|] ([|javax:crypto:spec:SecretKeySpec|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5, [|java:lang:String|] v6 @type (object)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.<init>:([BIILjava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L15bae8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15baee.   if v3 != 0 then goto L15bb02;
#L15baf2.   v0:= new [|java:lang:IllegalArgumentException|];
#L15baf6.   v1:= "key == null" @type (object, string);
#L15bafa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bb00.   throw v0;
#L15bb02.   v0:= v3.length;
#L15bb04.   if v0 != 0 then goto L15bb18;
#L15bb08.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bb0c.   v1:= "key.length == 0" @type (object, string);
#L15bb10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bb16.   throw v0;
#L15bb18.   if v5 < 0 then goto L15bb20;
#L15bb1c.   if v4 >= 0 then goto L15bb30;
#L15bb20.   v0:= new [|java:lang:ArrayIndexOutOfBoundsException|];
#L15bb24.   v1:= "len < 0 || offset < 0" @type (object, string);
#L15bb28.   call temp:=  [|java:lang:ArrayIndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArrayIndexOutOfBoundsException|] @type direct;
#L15bb2e.   throw v0;
#L15bb30.   v0:= v3.length;
#L15bb32.   v0:= v0 - v4  @type int;
#L15bb34.   if v0 >= v5 then goto L15bb48;
#L15bb38.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bb3c.   v1:= "key too short" @type (object, string);
#L15bb40.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bb46.   throw v0;
#L15bb48.   if v6 != 0 then goto L15bb5c;
#L15bb4c.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bb50.   v1:= "algorithm == null" @type (object, string);
#L15bb54.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bb5a.   throw v0;
#L15bb5c.   v2.[|javax:crypto:spec:SecretKeySpec.algorithm|]  := v6 @type object;
#L15bb60.   v0:= new [|byte|][v5];
#L15bb64.   v2.[|javax:crypto:spec:SecretKeySpec.key|]  := v0 @type object;
#L15bb68.   v0:= v2.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bb6c.   v1:= 0  @length 4;
#L15bb6e.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v1, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15bb74.   return @void ;

   }
    procedure [|void|] [|javax:crypto:spec:SecretKeySpec.<init>|] ([|javax:crypto:spec:SecretKeySpec|] v3 @type (this), [|byte|][] v4, [|java:lang:String|] v5 @type (object)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L15bb88.   v2:= 0  @length 4;
#L15bb8a.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15bb90.   if v4 != 0 then goto L15bba4;
#L15bb94.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bb98.   v1:= "key == null" @type (object, string);
#L15bb9c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bba2.   throw v0;
#L15bba4.   v0:= v4.length;
#L15bba6.   if v0 != 0 then goto L15bbba;
#L15bbaa.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bbae.   v1:= "key.length == 0" @type (object, string);
#L15bbb2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bbb8.   throw v0;
#L15bbba.   if v5 != 0 then goto L15bbce;
#L15bbbe.   v0:= new [|java:lang:IllegalArgumentException|];
#L15bbc2.   v1:= "algorithm == null" @type (object, string);
#L15bbc6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L15bbcc.   throw v0;
#L15bbce.   v3.[|javax:crypto:spec:SecretKeySpec.algorithm|]  := v5 @type object;
#L15bbd2.   v0:= v4.length;
#L15bbd4.   v0:= new [|byte|][v0];
#L15bbd8.   v3.[|javax:crypto:spec:SecretKeySpec.key|]  := v0 @type object;
#L15bbdc.   v0:= v3.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bbe0.   v1:= v4.length;
#L15bbe2.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v0, v2, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15bbe8.   return @void ;

   }
    procedure [|boolean|] [|javax:crypto:spec:SecretKeySpec.equals|] ([|javax:crypto:spec:SecretKeySpec|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L15bbfc.   v1:= 1  @length 4;
#L15bbfe.   v2:= 0  @length 4;
#L15bc00.   if v6 != v5 then goto L15bc06;
#L15bc04.   return v1;
#L15bc06.   v3:= instanceof @varname v6 @type [|javax:crypto:spec:SecretKeySpec|];
#L15bc0a.   if v3 != 0 then goto L15bc12;
#L15bc0e.   v1:= v2;
#L15bc10.   goto L15bc04;
#L15bc12.   v0:= v6  @type object;
#L15bc14.   v0:= ([|javax:crypto:spec:SecretKeySpec|])v0;
#L15bc18.   v3:= v5.[|javax:crypto:spec:SecretKeySpec.algorithm|]   @type object;
#L15bc1c.   v4:= v0.[|javax:crypto:spec:SecretKeySpec.algorithm|]   @type object;
#L15bc20.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v3, v4) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15bc26.   v3:= temp;
#L15bc28.   if v3 == 0 then goto L15bc40;
#L15bc2c.   v3:= v5.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bc30.   v4:= v0.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bc34.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([B[B)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L15bc3a.   v3:= temp;
#L15bc3c.   if v3 != 0 then goto L15bc04;
#L15bc40.   v1:= v2;
#L15bc42.   goto L15bc04;

   }
    procedure [|java:lang:String|] [|javax:crypto:spec:SecretKeySpec.getAlgorithm|] ([|javax:crypto:spec:SecretKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bc54.   v0:= v1.[|javax:crypto:spec:SecretKeySpec.algorithm|]   @type object;
#L15bc58.   return v0  @type object;

   }
    procedure [|byte|][] [|javax:crypto:spec:SecretKeySpec.getEncoded|] ([|javax:crypto:spec:SecretKeySpec|] v4 @type (this)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15bc6c.   v3:= 0  @length 4;
#L15bc6e.   v1:= v4.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bc72.   v1:= v1.length;
#L15bc74.   v0:= new [|byte|][v1];
#L15bc78.   v1:= v4.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bc7c.   v2:= v4.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bc80.   v2:= v2.length;
#L15bc82.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L15bc88.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|javax:crypto:spec:SecretKeySpec.getFormat|] ([|javax:crypto:spec:SecretKeySpec|] v1 @type (this)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bc9c.   v0:= "RAW" @type (object, string);
#L15bca0.   return v0  @type object;

   }
    procedure [|int|] [|javax:crypto:spec:SecretKeySpec.hashCode|] ([|javax:crypto:spec:SecretKeySpec|] v6 @type (this)) @owner [|javax:crypto:spec:SecretKeySpec|] @signature [|Ljavax/crypto/spec/SecretKeySpec;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L15bcb4.   v5:= v6.[|javax:crypto:spec:SecretKeySpec.algorithm|]   @type object;
#L15bcb8.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15bcbe.   v4:= temp;
#L15bcc0.   v0:= v6.[|javax:crypto:spec:SecretKeySpec.key|]   @type object;
#L15bcc4.   v3:= v0.length;
#L15bcc6.   v2:= 0  @length 4;
#L15bcc8.   if v2 >= v3 then goto L15bcd8;
#L15bccc.   v1:= v0[v2]  @byte;
#L15bcd0.   v4:= v4 + v1  @type int;
#L15bcd2.   v2:= v2 + 1;
#L15bcd6.   goto L15bcc8;
#L15bcd8.   return v4;

   }
record [|javax:net:ServerSocketFactory|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|javax:net:ServerSocketFactory|] @@[|javax:net:ServerSocketFactory.defaultFactory|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|javax:net:ServerSocketFactory.<init>|] ([|javax:net:ServerSocketFactory|] v0 @type (this)) @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L15bcec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15bcf2.   return @void ;

   }
    procedure [|javax:net:ServerSocketFactory|] [|javax:net:ServerSocketFactory.getDefault|] () @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.getDefault:()Ljavax/net/ServerSocketFactory;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L15bd04.   v1:= new [|javax:net:ServerSocketFactory|];
#L15bd08.   (@monitorenter v1)
#L15bd0a.   v0:= @@[|javax:net:ServerSocketFactory.defaultFactory|]   @type object;
#L15bd0e.   if v0 != 0 then goto L15bd20;
#L15bd12.   v0:= new [|javax:net:DefaultServerSocketFactory|];
#L15bd16.   call temp:=  [|javax:net:DefaultServerSocketFactory.<init>|](v0) @signature [|Ljavax/net/DefaultServerSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:DefaultServerSocketFactory|] @type direct;
#L15bd1c.   @@[|javax:net:ServerSocketFactory.defaultFactory|] := v0  @type object;
#L15bd20.   v0:= @@[|javax:net:ServerSocketFactory.defaultFactory|]   @type object;
#L15bd24.   (@monitorexit v1)
#L15bd26.   return v0  @type object;
#L15bd28.   v0:= Exception  @type object;
#L15bd2a.   (@monitorexit v1)
#L15bd2c.   throw v0;
  catch  [|any|] @[L15bd0a..L15bd24] goto L15bd28;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:ServerSocketFactory.createServerSocket|] ([|javax:net:ServerSocketFactory|] v2 @type (this)) @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.createServerSocket:()Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15bd4c.   v0:= new [|java:net:SocketException|];
#L15bd50.   v1:= "Unbound server sockets not implemented" @type (object, string);
#L15bd54.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L15bd5a.   throw v0;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:ServerSocketFactory.createServerSocket|] ([|int|] v0) @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.createServerSocket:(I)Ljava/net/ServerSocket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:ServerSocket|] [|javax:net:ServerSocketFactory.createServerSocket|] ([|int|] v0, [|int|] v1) @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.createServerSocket:(II)Ljava/net/ServerSocket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:ServerSocket|] [|javax:net:ServerSocketFactory.createServerSocket|] ([|int|] v0, [|int|] v1, [|java:net:InetAddress|] v2 @type (object)) @owner [|javax:net:ServerSocketFactory|] @signature [|Ljavax/net/ServerSocketFactory;.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:net:DefaultServerSocketFactory|]  @type class @AccessFlag FINAL  extends [|javax:net:ServerSocketFactory|] {
   }
    procedure [|void|] [|javax:net:DefaultServerSocketFactory.<init>|] ([|javax:net:DefaultServerSocketFactory|] v0 @type (this)) @owner [|javax:net:DefaultServerSocketFactory|] @signature [|Ljavax/net/DefaultServerSocketFactory;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L15bd6c.   call temp:=  [|javax:net:ServerSocketFactory.<init>|](v0) @signature [|Ljavax/net/ServerSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:ServerSocketFactory|] @type direct;
#L15bd72.   return @void ;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:DefaultServerSocketFactory.createServerSocket|] ([|javax:net:DefaultServerSocketFactory|] v1 @type (this)) @owner [|javax:net:DefaultServerSocketFactory|] @signature [|Ljavax/net/DefaultServerSocketFactory;.createServerSocket:()Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bd84.   v0:= new [|java:net:ServerSocket|];
#L15bd88.   call temp:=  [|java:net:ServerSocket.<init>|](v0) @signature [|Ljava/net/ServerSocket;.<init>:()V|] @classDescriptor [|java:net:ServerSocket|] @type direct;
#L15bd8e.   return v0  @type object;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:DefaultServerSocketFactory.createServerSocket|] ([|javax:net:DefaultServerSocketFactory|] v1 @type (this), [|int|] v2) @owner [|javax:net:DefaultServerSocketFactory|] @signature [|Ljavax/net/DefaultServerSocketFactory;.createServerSocket:(I)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bda0.   v0:= new [|java:net:ServerSocket|];
#L15bda4.   call temp:=  [|java:net:ServerSocket.<init>|](v0, v2) @signature [|Ljava/net/ServerSocket;.<init>:(I)V|] @classDescriptor [|java:net:ServerSocket|] @type direct;
#L15bdaa.   return v0  @type object;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:DefaultServerSocketFactory.createServerSocket|] ([|javax:net:DefaultServerSocketFactory|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|javax:net:DefaultServerSocketFactory|] @signature [|Ljavax/net/DefaultServerSocketFactory;.createServerSocket:(II)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bdbc.   v0:= new [|java:net:ServerSocket|];
#L15bdc0.   call temp:=  [|java:net:ServerSocket.<init>|](v0, v2, v3) @signature [|Ljava/net/ServerSocket;.<init>:(II)V|] @classDescriptor [|java:net:ServerSocket|] @type direct;
#L15bdc6.   return v0  @type object;

   }
    procedure [|java:net:ServerSocket|] [|javax:net:DefaultServerSocketFactory.createServerSocket|] ([|javax:net:DefaultServerSocketFactory|] v1 @type (this), [|int|] v2, [|int|] v3, [|java:net:InetAddress|] v4 @type (object)) @owner [|javax:net:DefaultServerSocketFactory|] @signature [|Ljavax/net/DefaultServerSocketFactory;.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bdd8.   v0:= new [|java:net:ServerSocket|];
#L15bddc.   call temp:=  [|java:net:ServerSocket.<init>|](v0, v2, v3, v4) @signature [|Ljava/net/ServerSocket;.<init>:(IILjava/net/InetAddress;)V|] @classDescriptor [|java:net:ServerSocket|] @type direct;
#L15bde2.   return v0  @type object;

   }
record [|javax:net:SocketFactory|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|javax:net:SocketFactory|] @@[|javax:net:SocketFactory.defaultFactory|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|javax:net:SocketFactory.<init>|] ([|javax:net:SocketFactory|] v0 @type (this)) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L15bdf4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15bdfa.   return @void ;

   }
    procedure [|javax:net:SocketFactory|] [|javax:net:SocketFactory.getDefault|] () @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.getDefault:()Ljavax/net/SocketFactory;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L15be0c.   v1:= new [|javax:net:SocketFactory|];
#L15be10.   (@monitorenter v1)
#L15be12.   v0:= @@[|javax:net:SocketFactory.defaultFactory|]   @type object;
#L15be16.   if v0 != 0 then goto L15be28;
#L15be1a.   v0:= new [|javax:net:DefaultSocketFactory|];
#L15be1e.   call temp:=  [|javax:net:DefaultSocketFactory.<init>|](v0) @signature [|Ljavax/net/DefaultSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:DefaultSocketFactory|] @type direct;
#L15be24.   @@[|javax:net:SocketFactory.defaultFactory|] := v0  @type object;
#L15be28.   v0:= @@[|javax:net:SocketFactory.defaultFactory|]   @type object;
#L15be2c.   (@monitorexit v1)
#L15be2e.   return v0  @type object;
#L15be30.   v0:= Exception  @type object;
#L15be32.   (@monitorexit v1)
#L15be34.   throw v0;
  catch  [|any|] @[L15be12..L15be2c] goto L15be30;

   }
    procedure [|java:net:Socket|] [|javax:net:SocketFactory.createSocket|] ([|javax:net:SocketFactory|] v2 @type (this)) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L15be54.   v0:= new [|java:net:SocketException|];
#L15be58.   v1:= "Unconnected sockets not implemented" @type (object, string);
#L15be5c.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L15be62.   throw v0;

   }
    procedure [|java:net:Socket|] [|javax:net:SocketFactory.createSocket|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:Socket|] [|javax:net:SocketFactory.createSocket|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|java:net:InetAddress|] v2 @type (object), [|int|] v3) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:Socket|] [|javax:net:SocketFactory.createSocket|] ([|java:net:InetAddress|] v0 @type (object), [|int|] v1) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:Socket|] [|javax:net:SocketFactory.createSocket|] ([|java:net:InetAddress|] v0 @type (object), [|int|] v1, [|java:net:InetAddress|] v2 @type (object), [|int|] v3) @owner [|javax:net:SocketFactory|] @signature [|Ljavax/net/SocketFactory;.createSocket:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:net:DefaultSocketFactory|]  @type class @AccessFlag FINAL  extends [|javax:net:SocketFactory|] {
   }
    procedure [|void|] [|javax:net:DefaultSocketFactory.<init>|] ([|javax:net:DefaultSocketFactory|] v0 @type (this)) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L15be74.   call temp:=  [|javax:net:SocketFactory.<init>|](v0) @signature [|Ljavax/net/SocketFactory;.<init>:()V|] @classDescriptor [|javax:net:SocketFactory|] @type direct;
#L15be7a.   return @void ;

   }
    procedure [|java:net:Socket|] [|javax:net:DefaultSocketFactory.createSocket|] ([|javax:net:DefaultSocketFactory|] v1 @type (this)) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15be8c.   v0:= new [|java:net:Socket|];
#L15be90.   call temp:=  [|java:net:Socket.<init>|](v0) @signature [|Ljava/net/Socket;.<init>:()V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15be96.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|javax:net:DefaultSocketFactory.createSocket|] ([|javax:net:DefaultSocketFactory|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bea8.   v0:= new [|java:net:Socket|];
#L15beac.   call temp:=  [|java:net:Socket.<init>|](v0, v2, v3) @signature [|Ljava/net/Socket;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15beb2.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|javax:net:DefaultSocketFactory.createSocket|] ([|javax:net:DefaultSocketFactory|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:net:InetAddress|] v4 @type (object), [|int|] v5) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.createSocket:(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bec4.   v0:= new [|java:net:Socket|];
#L15bec8.   call temp:=  [|java:net:Socket.<init>|](v0, v2, v3, v4, v5) @signature [|Ljava/net/Socket;.<init>:(Ljava/lang/String;ILjava/net/InetAddress;I)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15bece.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|javax:net:DefaultSocketFactory.createSocket|] ([|javax:net:DefaultSocketFactory|] v1 @type (this), [|java:net:InetAddress|] v2 @type (object), [|int|] v3) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bee0.   v0:= new [|java:net:Socket|];
#L15bee4.   call temp:=  [|java:net:Socket.<init>|](v0, v2, v3) @signature [|Ljava/net/Socket;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15beea.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|javax:net:DefaultSocketFactory.createSocket|] ([|javax:net:DefaultSocketFactory|] v1 @type (this), [|java:net:InetAddress|] v2 @type (object), [|int|] v3, [|java:net:InetAddress|] v4 @type (object), [|int|] v5) @owner [|javax:net:DefaultSocketFactory|] @signature [|Ljavax/net/DefaultSocketFactory;.createSocket:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15befc.   v0:= new [|java:net:Socket|];
#L15bf00.   call temp:=  [|java:net:Socket.<init>|](v0, v2, v3, v4, v5) @signature [|Ljava/net/Socket;.<init>:(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L15bf06.   return v0  @type object;

   }
record [|javax:net:ssl:ManagerFactoryParameters|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
record [|javax:net:ssl:CertPathTrustManagerParameters|]  @type class @AccessFlag PUBLIC extends  [|javax:net:ssl:ManagerFactoryParameters|] {
      [|java:security:cert:CertPathParameters|] [|javax:net:ssl:CertPathTrustManagerParameters.param|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|javax:net:ssl:CertPathTrustManagerParameters.<init>|] ([|javax:net:ssl:CertPathTrustManagerParameters|] v1 @type (this), [|java:security:cert:CertPathParameters|] v2 @type (object)) @owner [|javax:net:ssl:CertPathTrustManagerParameters|] @signature [|Ljavax/net/ssl/CertPathTrustManagerParameters;.<init>:(Ljava/security/cert/CertPathParameters;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L15bf18.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15bf1e.   call temp:=  [|java:security:cert:CertPathParameters.clone|](v2) @signature [|Ljava/security/cert/CertPathParameters;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:security:cert:CertPathParameters|] @type interface;
#L15bf24.   v0:= temp  @type object;
#L15bf26.   v0:= ([|java:security:cert:CertPathParameters|])v0;
#L15bf2a.   v1.[|javax:net:ssl:CertPathTrustManagerParameters.param|]  := v0 @type object;
#L15bf2e.   return @void ;

   }
    procedure [|java:security:cert:CertPathParameters|] [|javax:net:ssl:CertPathTrustManagerParameters.getParameters|] ([|javax:net:ssl:CertPathTrustManagerParameters|] v1 @type (this)) @owner [|javax:net:ssl:CertPathTrustManagerParameters|] @signature [|Ljavax/net/ssl/CertPathTrustManagerParameters;.getParameters:()Ljava/security/cert/CertPathParameters;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15bf40.   v0:= v1.[|javax:net:ssl:CertPathTrustManagerParameters.param|]   @type object;
#L15bf44.   call temp:=  [|java:security:cert:CertPathParameters.clone|](v0) @signature [|Ljava/security/cert/CertPathParameters;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:security:cert:CertPathParameters|] @type interface;
#L15bf4a.   v0:= temp  @type object;
#L15bf4c.   v0:= ([|java:security:cert:CertPathParameters|])v0;
#L15bf50.   return v0  @type object;

   }
record [|javax:net:ssl:HostnameVerifier|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|javax:net:ssl:HostnameVerifier.verify|] ([|java:lang:String|] v0 @type (object), [|javax:net:ssl:SSLSession|] v1 @type (object)) @owner [|javax:net:ssl:HostnameVerifier|] @signature [|Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|javax:net:ssl:DefaultHostnameVerifier|]  @type class @AccessFlag PUBLIC_FINAL extends  [|javax:net:ssl:HostnameVerifier|] {
   }
      global [|int|] @@[|javax:net:ssl:DefaultHostnameVerifier.ALT_DNS_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|javax:net:ssl:DefaultHostnameVerifier.ALT_IPA_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|javax:net:ssl:DefaultHostnameVerifier.<init>|] ([|javax:net:ssl:DefaultHostnameVerifier|] v0 @type (this)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L15bf64.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L15bf6a.   return @void ;

   }
    procedure [|java:util:List|] [|javax:net:ssl:DefaultHostnameVerifier.getSubjectAltNames|] ([|javax:net:ssl:DefaultHostnameVerifier|] v11 @type (this), [|java:security:cert:X509Certificate|] v12 @type (object), [|int|] v13) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L15bf7c.   v6:= new [|java:util:ArrayList|];
#L15bf80.   call temp:=  [|java:util:ArrayList.<init>|](v6) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L15bf86.   call temp:=  [|java:security:cert:X509Certificate.getSubjectAlternativeNames|](v12) @signature [|Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L15bf8c.   v8:= temp  @type object;
#L15bf8e.   if v8 != 0 then goto L15bf9c;
#L15bf92.   call temp:=  [|java:util:Collections.emptyList|]() @signature [|Ljava/util/Collections;.emptyList:()Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L15bf98.   v6:= temp  @type object;
#L15bf9a.   return v6  @type object;
#L15bf9c.   call temp:=  [|java:util:Collection.iterator|](v8) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L15bfa2.   v5:= temp  @type object;
#L15bfa4.   call temp:=  [|java:util:Iterator.hasNext|](v5) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15bfaa.   v9:= temp;
#L15bfac.   if v9 == 0 then goto L15bf9a;
#L15bfb0.   call temp:=  [|java:util:Iterator.next|](v5) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15bfb6.   v7:= temp  @type object;
#L15bfb8.   v0:= v7  @type object;
#L15bfba.   v0:= ([|java:util:List|])v0;
#L15bfbe.   v4:= v0  @type object;
#L15bfc0.   if v4 == 0 then goto L15bfa4;
#L15bfc4.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L15bfca.   v9:= temp;
#L15bfcc.   v10:= 2  @length 4;
#L15bfce.   if v9 < v10 then goto L15bfa4;
#L15bfd2.   v9:= 0  @length 4;
#L15bfd4.   call temp:=  [|java:util:List.get|](v4, v9) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L15bfda.   v2:= temp  @type object;
#L15bfdc.   v2:= ([|java:lang:Integer|])v2;
#L15bfe0.   if v2 == 0 then goto L15bfa4;
#L15bfe4.   call temp:=  [|java:lang:Integer.intValue|](v2) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L15bfea.   v9:= temp;
#L15bfec.   if v9 != v13 then goto L15bfa4;
#L15bff0.   v9:= 1  @length 4;
#L15bff2.   call temp:=  [|java:util:List.get|](v4, v9) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L15bff8.   v1:= temp  @type object;
#L15bffa.   v1:= ([|java:lang:String|])v1;
#L15bffe.   if v1 == 0 then goto L15bfa4;
#L15c002.   call temp:=  [|java:util:List.add|](v6, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L15c008.   goto L15bfa4;
#L15c00a.   v3:= Exception  @type object;
#L15c00c.   call temp:=  [|java:util:Collections.emptyList|]() @signature [|Ljava/util/Collections;.emptyList:()Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L15c012.   v6:= temp  @type object;
#L15c014.   goto L15bf9a;
  catch  [|java:security:cert:CertificateParsingException|] @[L15bf86..L15c008] goto L15c00a;

   }
    procedure [|boolean|] [|javax:net:ssl:DefaultHostnameVerifier.verifyHostName|] ([|javax:net:ssl:DefaultHostnameVerifier|] v7 @type (this), [|java:lang:String|] v8 @type (object), [|java:security:cert:X509Certificate|] v9 @type (object)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyHostName:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15c038.   v5:= @@[|java:util:Locale.US|]   @type object;
#L15c03c.   call temp:=  [|java:lang:String.toLowerCase|](v8, v5) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c042.   v8:= temp  @type object;
#L15c044.   v2:= 0  @length 4;
#L15c046.   v5:= 2  @length 4;
#L15c048.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.getSubjectAltNames|](v7, v9, v5) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type direct;
#L15c04e.   v5:= temp  @type object;
#L15c050.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L15c056.   v3:= temp  @type object;
#L15c058.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15c05e.   v5:= temp;
#L15c060.   if v5 == 0 then goto L15c082;
#L15c064.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15c06a.   v0:= temp  @type object;
#L15c06c.   v0:= ([|java:lang:String|])v0;
#L15c070.   v2:= 1  @length 4;
#L15c072.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.verifyHostName|](v7, v8, v0) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyHostName:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type virtual;
#L15c078.   v5:= temp;
#L15c07a.   if v5 == 0 then goto L15c058;
#L15c07e.   v5:= 1  @length 4;
#L15c080.   return v5;
#L15c082.   if v2 != 0 then goto L15c0b2;
#L15c086.   call temp:=  [|java:security:cert:X509Certificate.getSubjectX500Principal|](v9) @signature [|Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L15c08c.   v4:= temp  @type object;
#L15c08e.   v5:= new [|javax:net:ssl:DistinguishedNameParser|];
#L15c092.   call temp:=  [|javax:net:ssl:DistinguishedNameParser.<init>|](v5, v4) @signature [|Ljavax/net/ssl/DistinguishedNameParser;.<init>:(Ljavax/security/auth/x500/X500Principal;)V|] @classDescriptor [|javax:net:ssl:DistinguishedNameParser|] @type direct;
#L15c098.   v6:= "cn" @type (object, string);
#L15c09c.   call temp:=  [|javax:net:ssl:DistinguishedNameParser.find|](v5, v6) @signature [|Ljavax/net/ssl/DistinguishedNameParser;.find:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|javax:net:ssl:DistinguishedNameParser|] @type virtual;
#L15c0a2.   v1:= temp  @type object;
#L15c0a4.   if v1 == 0 then goto L15c0b2;
#L15c0a8.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.verifyHostName|](v7, v8, v1) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyHostName:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type virtual;
#L15c0ae.   v5:= temp;
#L15c0b0.   goto L15c080;
#L15c0b2.   v5:= 0  @length 4;
#L15c0b4.   goto L15c080;

   }
    procedure [|boolean|] [|javax:net:ssl:DefaultHostnameVerifier.verifyIpAddress|] ([|javax:net:ssl:DefaultHostnameVerifier|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:security:cert:X509Certificate|] v5 @type (object)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L15c0c8.   v2:= 7  @length 4;
#L15c0ca.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.getSubjectAltNames|](v3, v5, v2) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type direct;
#L15c0d0.   v2:= temp  @type object;
#L15c0d2.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L15c0d8.   v1:= temp  @type object;
#L15c0da.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15c0e0.   v2:= temp;
#L15c0e2.   if v2 == 0 then goto L15c102;
#L15c0e6.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L15c0ec.   v0:= temp  @type object;
#L15c0ee.   v0:= ([|java:lang:String|])v0;
#L15c0f2.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v4, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c0f8.   v2:= temp;
#L15c0fa.   if v2 == 0 then goto L15c0da;
#L15c0fe.   v2:= 1  @length 4;
#L15c100.   return v2;
#L15c102.   v2:= 0  @length 4;
#L15c104.   goto L15c100;

   }
    procedure [|boolean|] [|javax:net:ssl:DefaultHostnameVerifier.verify|] ([|javax:net:ssl:DefaultHostnameVerifier|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:security:cert:X509Certificate|] v3 @type (object)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L15c118.   call temp:=  [|java:net:InetAddress.isNumeric|](v2) @signature [|Ljava/net/InetAddress;.isNumeric:(Ljava/lang/String;)Z|] @classDescriptor [|java:net:InetAddress|] @type static;
#L15c11e.   v0:= temp;
#L15c120.   if v0 == 0 then goto L15c12e;
#L15c124.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.verifyIpAddress|](v1, v2, v3) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type direct;
#L15c12a.   v0:= temp;
#L15c12c.   return v0;
#L15c12e.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.verifyHostName|](v1, v2, v3) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyHostName:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type direct;
#L15c134.   v0:= temp;
#L15c136.   goto L15c12c;

   }
    procedure [|boolean|] [|javax:net:ssl:DefaultHostnameVerifier.verify|] ([|javax:net:ssl:DefaultHostnameVerifier|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|javax:net:ssl:SSLSession|] v6 @type (object)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L15c148.   v3:= 0  @length 4;
#L15c14a.   call temp:=  [|javax:net:ssl:SSLSession.getPeerCertificates|](v6) @signature [|Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L15c150.   v0:= temp  @type object;
#L15c152.   v2:= 0  @length 4;
#L15c154.   v2:= v0[v2]  @type object;
#L15c158.   v2:= ([|java:security:cert:X509Certificate|])v2;
#L15c15c.   call temp:=  [|javax:net:ssl:DefaultHostnameVerifier.verify|](v4, v5, v2) @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z|] @classDescriptor [|javax:net:ssl:DefaultHostnameVerifier|] @type virtual;
#L15c162.   v2:= temp;
#L15c164.   return v2;
#L15c166.   v1:= Exception  @type object;
#L15c168.   v2:= v3;
#L15c16a.   goto L15c164;
  catch  [|javax:net:ssl:SSLException|] @[L15c14a..L15c162] goto L15c166;

   }
    procedure [|boolean|] [|javax:net:ssl:DefaultHostnameVerifier.verifyHostName|] ([|javax:net:ssl:DefaultHostnameVerifier|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|java:lang:String|] v11 @type (object)) @owner [|javax:net:ssl:DefaultHostnameVerifier|] @signature [|Ljavax/net/ssl/DefaultHostnameVerifier;.verifyHostName:(Ljava/lang/String;Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L15c18c.   v8:= 46  @length 16;
#L15c190.   v4:= 1  @length 4;
#L15c192.   v5:= 0  @length 4;
#L15c194.   if v10 == 0 then goto L15c1b4;
#L15c198.   call temp:=  [|java:lang:String.isEmpty|](v10) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c19e.   v6:= temp;
#L15c1a0.   if v6 != 0 then goto L15c1b4;
#L15c1a4.   if v11 == 0 then goto L15c1b4;
#L15c1a8.   call temp:=  [|java:lang:String.isEmpty|](v11) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1ae.   v6:= temp;
#L15c1b0.   if v6 == 0 then goto L15c1b8;
#L15c1b4.   v4:= v5;
#L15c1b6.   return v4;
#L15c1b8.   v6:= @@[|java:util:Locale.US|]   @type object;
#L15c1bc.   call temp:=  [|java:lang:String.toLowerCase|](v11, v6) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1c2.   v11:= temp  @type object;
#L15c1c4.   v6:= "*" @type (object, string);
#L15c1c8.   call temp:=  [|java:lang:String.contains|](v11, v6) @signature [|Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1ce.   v6:= temp;
#L15c1d0.   if v6 != 0 then goto L15c1de;
#L15c1d4.   call temp:=  [|java:lang:String.equals|](v10, v11) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1da.   v4:= temp;
#L15c1dc.   goto L15c1b6;
#L15c1de.   v6:= "*." @type (object, string);
#L15c1e2.   call temp:=  [|java:lang:String.startsWith|](v11, v6) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1e8.   v6:= temp;
#L15c1ea.   if v6 == 0 then goto L15c208;
#L15c1ee.   v6:= 2  @length 4;
#L15c1f0.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c1f6.   v7:= temp;
#L15c1f8.   v7:= v7 + -2;
#L15c1fc.   call temp:=  [|java:lang:String.regionMatches|](v10, v5, v11, v6, v7) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c202.   v6:= temp;
#L15c204.   if v6 != 0 then goto L15c1b6;
#L15c208.   v6:= 42  @length 16;
#L15c20c.   call temp:=  [|java:lang:String.indexOf|](v11, v6) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c212.   v0:= temp;
#L15c214.   call temp:=  [|java:lang:String.indexOf|](v11, v8) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c21a.   v1:= temp;
#L15c21c.   if v0 <= v1 then goto L15c224;
#L15c220.   v4:= v5;
#L15c222.   goto L15c1b6;
#L15c224.   call temp:=  [|java:lang:String.regionMatches|](v10, v5, v11, v5, v0) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c22a.   v6:= temp;
#L15c22c.   if v6 != 0 then goto L15c234;
#L15c230.   v4:= v5;
#L15c232.   goto L15c1b6;
#L15c234.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c23a.   v6:= temp;
#L15c23c.   v7:= v0 + 1;
#L15c240.   v2:= v6 - v7  @type int;
#L15c244.   call temp:=  [|java:lang:String.length|](v10) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c24a.   v6:= temp;
#L15c24c.   v3:= v6 - v2  @type int;
#L15c250.   call temp:=  [|java:lang:String.indexOf|](v10, v8, v0) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c256.   v6:= temp;
#L15c258.   if v6 >= v3 then goto L15c270;
#L15c25c.   v6:= ".clients.google.com" @type (object, string);
#L15c260.   call temp:=  [|java:lang:String.endsWith|](v10, v6) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c266.   v6:= temp;
#L15c268.   if v6 != 0 then goto L15c270;
#L15c26c.   v4:= v5;
#L15c26e.   goto L15c1b6;
#L15c270.   v6:= v0 + 1;
#L15c274.   call temp:=  [|java:lang:String.regionMatches|](v10, v3, v11, v6, v2) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L15c27a.   v6:= temp;
#L15c27c.   if v6 != 0 then goto L15c1b6;
#L15c280.   v4:= v5;
#L15c282.   goto L15c1b6;

   }
record [|javax:net:ssl:SSLServerSocketFactory|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|javax:net:ServerSocketFactory|] {
   }
      global [|java:lang:String|] @@[|javax:net:ssl:SSLServerSocketFactory.defaultName|]    @AccessFlag PRIVATE_STATIC;
      global [|javax:net:ServerSocketFactory|] @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|javax:net:ssl:SSLServerSocketFactory.<init>|] ([|javax:net:ssl:SSLServerSocketFactory|] v0 @type (this)) @owner [|javax:net:ssl:SSLServerSocketFactory|] @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L15c294.   call temp:=  [|javax:net:ServerSocketFactory.<init>|](v0) @signature [|Ljavax/net/ServerSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:ServerSocketFactory|] @type direct;
#L15c29a.   return @void ;

   }
    procedure [|javax:net:ServerSocketFactory|] [|javax:net:ssl:SSLServerSocketFactory.getDefault|] () @owner [|javax:net:ssl:SSLServerSocketFactory|] @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.getDefault:()Ljavax/net/ServerSocketFactory;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L15c2ac.   v5:= new [|javax:net:ssl:SSLServerSocketFactory|];
#L15c2b0.   (@monitorenter v5)
#L15c2b2.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]   @type object;
#L15c2b6.   if v4 == 0 then goto L15c2c2;
#L15c2ba.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]   @type object;
#L15c2be.   (@monitorexit v5)
#L15c2c0.   return v4  @type object;
#L15c2c2.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultName|]   @type object;
#L15c2c6.   if v4 != 0 then goto L15c31c;
#L15c2ca.   v4:= "ssl.ServerSocketFactory.provider" @type (object, string);
#L15c2ce.   call temp:=  [|java:security:Security.getProperty|](v4) @signature [|Ljava/security/Security;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:security:Security|] @type static;
#L15c2d4.   v4:= temp  @type object;
#L15c2d6.   @@[|javax:net:ssl:SSLServerSocketFactory.defaultName|] := v4  @type object;
#L15c2da.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultName|]   @type object;
#L15c2de.   if v4 == 0 then goto L15c31c;
#L15c2e2.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L15c2e8.   v4:= temp  @type object;
#L15c2ea.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v4) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L15c2f0.   v0:= temp  @type object;
#L15c2f2.   if v0 != 0 then goto L15c2fe;
#L15c2f6.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L15c2fc.   v0:= temp  @type object;
#L15c2fe.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultName|]   @type object;
#L15c302.   v6:= 1  @length 4;
#L15c304.   call temp:=  [|java:lang:Class.forName|](v4, v6, v0) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L15c30a.   v3:= temp  @type object;
#L15c30c.   call temp:=  [|java:lang:Class.newInstance|](v3) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L15c312.   v4:= temp  @type object;
#L15c314.   v4:= ([|javax:net:ServerSocketFactory|])v4;
#L15c318.   @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|] := v4  @type object;
#L15c31c.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]   @type object;
#L15c320.   if v4 != 0 then goto L15c33c;
#L15c324.   call temp:=  [|javax:net:ssl:SSLContext.getDefault|]() @signature [|Ljavax/net/ssl/SSLContext;.getDefault:()Ljavax/net/ssl/SSLContext;|] @classDescriptor [|javax:net:ssl:SSLContext|] @type static;
#L15c32a.   v1:= temp  @type object;
#L15c32c.   if v1 == 0 then goto L15c33c;
#L15c330.   call temp:=  [|javax:net:ssl:SSLContext.getServerSocketFactory|](v1) @signature [|Ljavax/net/ssl/SSLContext;.getServerSocketFactory:()Ljavax/net/ssl/SSLServerSocketFactory;|] @classDescriptor [|javax:net:ssl:SSLContext|] @type virtual;
#L15c336.   v4:= temp  @type object;
#L15c338.   @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|] := v4  @type object;
#L15c33c.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]   @type object;
#L15c340.   if v4 != 0 then goto L15c356;
#L15c344.   v4:= new [|javax:net:ssl:DefaultSSLServerSocketFactory|];
#L15c348.   v6:= "No ServerSocketFactory installed" @type (object, string);
#L15c34c.   call temp:=  [|javax:net:ssl:DefaultSSLServerSocketFactory.<init>|](v4, v6) @signature [|Ljavax/net/ssl/DefaultSSLServerSocketFactory;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:DefaultSSLServerSocketFactory|] @type direct;
#L15c352.   @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|] := v4  @type object;
#L15c356.   v4:= @@[|javax:net:ssl:SSLServerSocketFactory.defaultServerSocketFactory|]   @type object;
#L15c35a.   goto L15c2be;
#L15c35c.   v2:= Exception  @type object;
#L15c35e.   v1:= 0  @length 4;
#L15c360.   goto L15c32c;
#L15c362.   v4:= Exception  @type object;
#L15c364.   (@monitorexit v5)
#L15c366.   throw v4;
#L15c368.   v4:= Exception  @type object;
#L15c36a.   goto L15c31c;
  catch  [|any|] @[L15c2b2..L15c2be] goto L15c362;
  catch  [|any|] @[L15c2c2..L15c2fc] goto L15c362;
  catch  [|java:lang:Exception|] @[L15c2fe..L15c31c] goto L15c368;
  catch  [|any|] @[L15c2fe..L15c31c] goto L15c362;
  catch  [|any|] @[L15c31c..L15c320] goto L15c362;
  catch  [|java:security:NoSuchAlgorithmException|] @[L15c324..L15c32a] goto L15c35c;
  catch  [|any|] @[L15c324..L15c32a] goto L15c362;
  catch  [|any|] @[L15c330..L15c35a] goto L15c362;

   }
    procedure [|java:lang:String|][] [|javax:net:ssl:SSLServerSocketFactory.getDefaultCipherSuites|] () @owner [|javax:net:ssl:SSLServerSocketFactory|] @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.getDefaultCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|][] [|javax:net:ssl:SSLServerSocketFactory.getSupportedCipherSuites|] () @owner [|javax:net:ssl:SSLServerSocketFactory|] @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.getSupportedCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
