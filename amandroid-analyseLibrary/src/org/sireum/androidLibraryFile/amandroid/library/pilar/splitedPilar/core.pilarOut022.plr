record [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache.getSessionData|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLClientSessionCache;.getSessionData:(Ljava/lang/String;I)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache.putSessionData|] ([|javax:net:ssl:SSLSession|] v0 @type (object), [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLClientSessionCache;.putSessionData:(Ljavax/net/ssl/SSLSession;[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|]  @type class @AccessFlag  extends  [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache|] {
      [|java:util:Map|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]    @AccessFlag ;
      [|java:io:File|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.directory|]    @AccessFlag FINAL;
      [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]    @AccessFlag ;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|]    @AccessFlag ;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v4 @type (this), [|java:io:File|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.<init>:(Ljava/io/File;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a7db8.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1a7dbe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.newAccessOrder|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.newAccessOrder:()Ljava/util/Map;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a7dc4.   v1:= temp  @type object;
#L1a7dc6.   v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]  := v1 @type object;
#L1a7dca.   call temp:=  [|java:io:File.exists|](v5) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1a7dd0.   v0:= temp;
#L1a7dd2.   if v0 == 0 then goto L1a7e14;
#L1a7dd6.   call temp:=  [|java:io:File.isDirectory|](v5) @signature [|Ljava/io/File;.isDirectory:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1a7ddc.   v1:= temp;
#L1a7dde.   if v1 != 0 then goto L1a7e14;
#L1a7de2.   v1:= new [|java:io:IOException|];
#L1a7de6.   v2:= new [|java:lang:StringBuilder|];
#L1a7dea.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a7df0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7df6.   v2:= temp  @type object;
#L1a7df8.   v3:= " exists but is not a directory." @type (object, string);
#L1a7dfc.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e02.   v2:= temp  @type object;
#L1a7e04.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e0a.   v2:= temp  @type object;
#L1a7e0c.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1a7e12.   throw v1;
#L1a7e14.   if v0 == 0 then goto L1a7e78;
#L1a7e18.   call temp:=  [|java:io:File.list|](v5) @signature [|Ljava/io/File;.list:()[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L1a7e1e.   v1:= temp  @type object;
#L1a7e20.   v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]  := v1 @type object;
#L1a7e24.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a7e28.   if v1 != 0 then goto L1a7e5e;
#L1a7e2c.   v1:= new [|java:io:IOException|];
#L1a7e30.   v2:= new [|java:lang:StringBuilder|];
#L1a7e34.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a7e3a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e40.   v2:= temp  @type object;
#L1a7e42.   v3:= " exists but cannot list contents." @type (object, string);
#L1a7e46.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e4c.   v2:= temp  @type object;
#L1a7e4e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e54.   v2:= temp  @type object;
#L1a7e56.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1a7e5c.   throw v1;
#L1a7e5e.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a7e62.   call temp:=  [|java:util:Arrays.sort|](v1) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L1a7e68.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a7e6c.   v1:= v1.length;
#L1a7e6e.   v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|]  := v1;
#L1a7e72.   v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.directory|]  := v5 @type object;
#L1a7e76.   return @void ;
#L1a7e78.   call temp:=  [|java:io:File.mkdirs|](v5) @signature [|Ljava/io/File;.mkdirs:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1a7e7e.   v1:= temp;
#L1a7e80.   if v1 != 0 then goto L1a7ec2;
#L1a7e84.   v1:= new [|java:io:IOException|];
#L1a7e88.   v2:= new [|java:lang:StringBuilder|];
#L1a7e8c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a7e92.   v3:= "Creation of " @type (object, string);
#L1a7e96.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7e9c.   v2:= temp  @type object;
#L1a7e9e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7ea4.   v2:= temp  @type object;
#L1a7ea6.   v3:= " directory failed." @type (object, string);
#L1a7eaa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7eb0.   v2:= temp  @type object;
#L1a7eb2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7eb8.   v2:= temp  @type object;
#L1a7eba.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1a7ec0.   throw v1;
#L1a7ec2.   v1:= 0  @length 4;
#L1a7ec4.   v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|]  := v1;
#L1a7ec8.   goto L1a7e72;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v2 @type (this), [|java:io:File|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1a7edc.   call temp:=  [|java:io:File.delete|](v3) @signature [|Ljava/io/File;.delete:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1a7ee2.   v0:= temp;
#L1a7ee4.   if v0 != 0 then goto L1a7f2a;
#L1a7ee8.   v0:= new [|java:lang:StringBuilder|];
#L1a7eec.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a7ef2.   v1:= "Failed to delete " @type (object, string);
#L1a7ef6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7efc.   v0:= temp  @type object;
#L1a7efe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f04.   v0:= temp  @type object;
#L1a7f06.   v1:= "." @type (object, string);
#L1a7f0a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f10.   v0:= temp  @type object;
#L1a7f12.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f18.   v0:= temp  @type object;
#L1a7f1a.   v1:= new [|java:io:IOException|];
#L1a7f1e.   call temp:=  [|java:io:IOException.<init>|](v1) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1a7f24.   call temp:=  [|java:lang:System.logW|](v0, v1) @signature [|Ljava/lang/System;.logW:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a7f2a.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|] ;
#L1a7f2e.   v0:= v0 + -1;
#L1a7f32.   v2.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|]  := v0;
#L1a7f36.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.fileName|] ([|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.fileName:(Ljava/lang/String;I)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L1a7f48.   if v2 != 0 then goto L1a7f5c;
#L1a7f4c.   v0:= new [|java:lang:NullPointerException|];
#L1a7f50.   v1:= "host == null" @type (object, string);
#L1a7f54.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1a7f5a.   throw v0;
#L1a7f5c.   v0:= new [|java:lang:StringBuilder|];
#L1a7f60.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a7f66.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f6c.   v0:= temp  @type object;
#L1a7f6e.   v1:= "." @type (object, string);
#L1a7f72.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f78.   v0:= temp  @type object;
#L1a7f7a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f80.   v0:= temp  @type object;
#L1a7f82.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a7f88.   v0:= temp  @type object;
#L1a7f8a.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.indexFiles|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v10 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.indexFiles:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1a7f9c.   v4:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a7fa0.   if v4 == 0 then goto L1a803a;
#L1a7fa4.   v8:= 0  @length 4;
#L1a7fa6.   v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]  := v8 @type object;
#L1a7faa.   v2:= new [|java:util:TreeSet|];
#L1a7fae.   call temp:=  [|java:util:TreeSet.<init>|](v2) @signature [|Ljava/util/TreeSet;.<init>:()V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L1a7fb4.   v0:= v4  @type object;
#L1a7fb6.   v5:= v0.length;
#L1a7fb8.   v3:= 0  @length 4;
#L1a7fba.   if v3 >= v5 then goto L1a7fec;
#L1a7fbe.   v6:= v0[v3]  @type object;
#L1a7fc2.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a7fc6.   call temp:=  [|java:util:Map.containsKey|](v8, v6) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L1a7fcc.   v8:= temp;
#L1a7fce.   if v8 != 0 then goto L1a7fe6;
#L1a7fd2.   v8:= new [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$CacheFile|];
#L1a7fd6.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.directory|]   @type object;
#L1a7fda.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$CacheFile.<init>|](v8, v9, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$CacheFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$CacheFile|] @type direct;
#L1a7fe0.   call temp:=  [|java:util:Set.add|](v2, v8) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L1a7fe6.   v3:= v3 + 1;
#L1a7fea.   goto L1a7fba;
#L1a7fec.   call temp:=  [|java:util:Set.isEmpty|](v2) @signature [|Ljava/util/Set;.isEmpty:()Z|] @classDescriptor [|java:util:Set|] @type interface;
#L1a7ff2.   v8:= temp;
#L1a7ff4.   if v8 != 0 then goto L1a803a;
#L1a7ff8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.newAccessOrder|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.newAccessOrder:()Ljava/util/Map;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a7ffe.   v7:= temp  @type object;
#L1a8000.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L1a8006.   v3:= temp  @type object;
#L1a8008.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1a800e.   v8:= temp;
#L1a8010.   if v8 == 0 then goto L1a802c;
#L1a8014.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1a801a.   v1:= temp  @type object;
#L1a801c.   v1:= ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$CacheFile|])v1;
#L1a8020.   v8:= v1.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$CacheFile.name|]   @type object;
#L1a8024.   call temp:=  [|java:util:Map.put|](v7, v8, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a802a.   goto L1a8008;
#L1a802c.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a8030.   call temp:=  [|java:util:Map.putAll|](v7, v8) @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8036.   v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]  := v7 @type object;
#L1a803a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logReadError|] ([|java:lang:String|] v2 @type (object), [|java:io:File|] v3 @type (object), [|java:lang:Throwable|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logReadError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L1a804c.   v0:= new [|java:lang:StringBuilder|];
#L1a8050.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a8056.   v1:= "Error reading session data for " @type (object, string);
#L1a805a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8060.   v0:= temp  @type object;
#L1a8062.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8068.   v0:= temp  @type object;
#L1a806a.   v1:= " from " @type (object, string);
#L1a806e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8074.   v0:= temp  @type object;
#L1a8076.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a807c.   v0:= temp  @type object;
#L1a807e.   v1:= "." @type (object, string);
#L1a8082.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8088.   v0:= temp  @type object;
#L1a808a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8090.   v0:= temp  @type object;
#L1a8092.   call temp:=  [|java:lang:System.logW|](v0, v4) @signature [|Ljava/lang/System;.logW:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8098.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|] ([|java:lang:String|] v2 @type (object), [|java:io:File|] v3 @type (object), [|java:lang:Throwable|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L1a80ac.   v0:= new [|java:lang:StringBuilder|];
#L1a80b0.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a80b6.   v1:= "Error writing session data for " @type (object, string);
#L1a80ba.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80c0.   v0:= temp  @type object;
#L1a80c2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80c8.   v0:= temp  @type object;
#L1a80ca.   v1:= " to " @type (object, string);
#L1a80ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80d4.   v0:= temp  @type object;
#L1a80d6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80dc.   v0:= temp  @type object;
#L1a80de.   v1:= "." @type (object, string);
#L1a80e2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80e8.   v0:= temp  @type object;
#L1a80ea.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a80f0.   v0:= temp  @type object;
#L1a80f2.   call temp:=  [|java:lang:System.logW|](v0, v4) @signature [|Ljava/lang/System;.logW:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a80f8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.makeRoom|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.makeRoom:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a810c.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|] ;
#L1a8110.   v3:= 12  @length 16;
#L1a8114.   if v2 > v3 then goto L1a811a;
#L1a8118.   return @void ;
#L1a811a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.indexFiles|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.indexFiles:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a8120.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|] ;
#L1a8124.   v1:= v2 + -12;
#L1a8128.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a812c.   call temp:=  [|java:util:Map.values|](v2) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8132.   v2:= temp  @type object;
#L1a8134.   call temp:=  [|java:util:Collection.iterator|](v2) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1a813a.   v0:= temp  @type object;
#L1a813c.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1a8142.   v2:= temp  @type object;
#L1a8144.   v2:= ([|java:io:File|])v2;
#L1a8148.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v4, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a814e.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1a8154.   v1:= v1 + -1;
#L1a8158.   if v1 > 0 then goto L1a813c;
#L1a815c.   goto L1a8118;

   }
    procedure [|java:util:Map|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.newAccessOrder|] () @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.newAccessOrder:()Ljava/util/Map;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a8170.   v0:= new [|java:util:LinkedHashMap|];
#L1a8174.   v1:= 12  @length 16;
#L1a8178.   v2:= 1061158912  @length high16;
#L1a817c.   v3:= 1  @length 4;
#L1a817e.   call temp:=  [|java:util:LinkedHashMap.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/LinkedHashMap;.<init>:(IFZ)V|] @classDescriptor [|java:util:LinkedHashMap|] @type direct;
#L1a8184.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.getSessionData|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|int|] v11) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.getSessionData:(Ljava/lang/String;I)[B|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1a8198.   v6:= 0  @length 4;
#L1a819a.   (@monitorenter v9)
#L1a819c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.fileName|](v10, v11) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.fileName:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a81a2.   v4:= temp  @type object;
#L1a81a4.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a81a8.   call temp:=  [|java:util:Map.get|](v7, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a81ae.   v2:= temp  @type object;
#L1a81b0.   v2:= ([|java:io:File|])v2;
#L1a81b4.   if v2 != 0 then goto L1a81f2;
#L1a81b8.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a81bc.   if v7 != 0 then goto L1a81c6;
#L1a81c0.   v0:= v6  @type object;
#L1a81c2.   (@monitorexit v9)
#L1a81c4.   return v0  @type object;
#L1a81c6.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.initialFiles|]   @type object;
#L1a81ca.   call temp:=  [|java:util:Arrays.binarySearch|](v7, v4) @signature [|Ljava/util/Arrays;.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L1a81d0.   v7:= temp;
#L1a81d2.   if v7 >= 0 then goto L1a81da;
#L1a81d6.   v0:= v6  @type object;
#L1a81d8.   goto L1a81c2;
#L1a81da.   v2:= new [|java:io:File|];
#L1a81de.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.directory|]   @type object;
#L1a81e2.   call temp:=  [|java:io:File.<init>|](v2, v7, v4) @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L1a81e8.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a81ec.   call temp:=  [|java:util:Map.put|](v7, v4, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a81f2.   v3:= new [|java:io:FileInputStream|];
#L1a81f6.   call temp:=  [|java:io:FileInputStream.<init>|](v3, v2) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L1a81fc.   call temp:=  [|java:io:File.length|](v2) @signature [|Ljava/io/File;.length:()J|] @classDescriptor [|java:io:File|] @type virtual;
#L1a8202.   v7:= temp  @type wide;
#L1a8204.   v5:= (int)v7  @type l2i;
#L1a8206.   v0:= new [|byte|][v5];
#L1a820a.   v7:= new [|java:io:DataInputStream|];
#L1a820e.   call temp:=  [|java:io:DataInputStream.<init>|](v7, v3) @signature [|Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:DataInputStream|] @type direct;
#L1a8214.   call temp:=  [|java:io:DataInputStream.readFully|](v7, v0) @signature [|Ljava/io/DataInputStream;.readFully:([B)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L1a821a.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1a8220.   goto L1a81c2;
#L1a8222.   v6:= Exception  @type object;
#L1a8224.   (@monitorexit v9)
#L1a8226.   throw v6;
#L1a8228.   v1:= Exception  @type object;
#L1a822a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logReadError|](v10, v2, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logReadError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a8230.   v0:= v6  @type object;
#L1a8232.   goto L1a81c2;
#L1a8234.   v1:= Exception  @type object;
#L1a8236.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logReadError|](v10, v2, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logReadError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a823c.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1a8242.   v0:= v6  @type object;
#L1a8244.   goto L1a81c2;
#L1a8246.   v6:= Exception  @type object;
#L1a8248.   call temp:=  [|libcore:io:IoUtils.closeQuietly|](v3) @signature [|Llibcore/io/IoUtils;.closeQuietly:(Ljava/lang/AutoCloseable;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L1a824e.   throw v6;
  catch  [|any|] @[L1a819c..L1a81bc] goto L1a8222;
  catch  [|any|] @[L1a81c6..L1a81f2] goto L1a8222;
  catch  [|java:io:FileNotFoundException|] @[L1a81f2..L1a81fc] goto L1a8228;
  catch  [|any|] @[L1a81f2..L1a81fc] goto L1a8222;
  catch  [|java:io:IOException|] @[L1a81fc..L1a821a] goto L1a8234;
  catch  [|any|] @[L1a81fc..L1a821a] goto L1a8246;
  catch  [|any|] @[L1a821a..L1a8220] goto L1a8222;
  catch  [|any|] @[L1a822a..L1a8230] goto L1a8222;
  catch  [|any|] @[L1a8236..L1a823c] goto L1a8246;
  catch  [|any|] @[L1a823c..L1a824e] goto L1a8222;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.putSessionData|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] v10 @type (this), [|javax:net:ssl:SSLSession|] v11 @type (object), [|byte|][] v12) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.putSessionData:(Ljavax/net/ssl/SSLSession;[B)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1a82b0.   (@monitorenter v10)
#L1a82b2.   call temp:=  [|javax:net:ssl:SSLSession.getPeerHost|](v11) @signature [|Ljavax/net/ssl/SSLSession;.getPeerHost:()Ljava/lang/String;|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L1a82b8.   v4:= temp  @type object;
#L1a82ba.   if v12 != 0 then goto L1a82d4;
#L1a82be.   v8:= new [|java:lang:NullPointerException|];
#L1a82c2.   v9:= "sessionData == null" @type (object, string);
#L1a82c6.   call temp:=  [|java:lang:NullPointerException.<init>|](v8, v9) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1a82cc.   throw v8;
#L1a82ce.   v8:= Exception  @type object;
#L1a82d0.   (@monitorexit v10)
#L1a82d2.   throw v8;
#L1a82d4.   call temp:=  [|javax:net:ssl:SSLSession.getPeerPort|](v11) @signature [|Ljavax/net/ssl/SSLSession;.getPeerPort:()I|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L1a82da.   v8:= temp;
#L1a82dc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.fileName|](v4, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.fileName:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a82e2.   v5:= temp  @type object;
#L1a82e4.   v3:= new [|java:io:File|];
#L1a82e8.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.directory|]   @type object;
#L1a82ec.   call temp:=  [|java:io:File.<init>|](v3, v8, v5) @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L1a82f2.   call temp:=  [|java:io:File.exists|](v3) @signature [|Ljava/io/File;.exists:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L1a82f8.   v2:= temp;
#L1a82fa.   v6:= new [|java:io:FileOutputStream|];
#L1a82fe.   call temp:=  [|java:io:FileOutputStream.<init>|](v6, v3) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L1a8304.   if v2 != 0 then goto L1a831a;
#L1a8308.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|] ;
#L1a830c.   v8:= v8 + 1;
#L1a8310.   v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.size|]  := v8;
#L1a8314.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.makeRoom|](v10) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.makeRoom:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a831a.   v7:= 0  @length 4;
#L1a831c.   call temp:=  [|java:io:FileOutputStream.write|](v6, v12) @signature [|Ljava/io/FileOutputStream;.write:([B)V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L1a8322.   v7:= 1  @length 4;
#L1a8324.   v0:= 0  @length 4;
#L1a8326.   call temp:=  [|java:io:FileOutputStream.close|](v6) @signature [|Ljava/io/FileOutputStream;.close:()V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L1a832c.   v0:= 1  @length 4;
#L1a832e.   if v7 == 0 then goto L1a8336;
#L1a8332.   if v0 != 0 then goto L1a843c;
#L1a8336.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a833c.   (@monitorexit v10)
#L1a833e.   return @void ;
#L1a8340.   v1:= Exception  @type object;
#L1a8342.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|](v4, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a8348.   goto L1a833c;
#L1a834a.   v1:= Exception  @type object;
#L1a834c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|](v4, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a8352.   v0:= 0  @length 4;
#L1a8354.   call temp:=  [|java:io:FileOutputStream.close|](v6) @signature [|Ljava/io/FileOutputStream;.close:()V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L1a835a.   v0:= 1  @length 4;
#L1a835c.   if v7 == 0 then goto L1a8364;
#L1a8360.   if v0 != 0 then goto L1a83ee;
#L1a8364.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a836a.   goto L1a833c;
#L1a836c.   v8:= Exception  @type object;
#L1a836e.   v0:= 0  @length 4;
#L1a8370.   call temp:=  [|java:io:FileOutputStream.close|](v6) @signature [|Ljava/io/FileOutputStream;.close:()V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L1a8376.   v0:= 1  @length 4;
#L1a8378.   if v7 == 0 then goto L1a8380;
#L1a837c.   if v0 != 0 then goto L1a83a0;
#L1a8380.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a8386.   throw v8;
#L1a8388.   v1:= Exception  @type object;
#L1a838a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|](v4, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a8390.   if v7 == 0 then goto L1a8398;
#L1a8394.   if v0 != 0 then goto L1a83ac;
#L1a8398.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a839e.   goto L1a8386;
#L1a83a0.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a83a4.   call temp:=  [|java:util:Map.put|](v9, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a83aa.   goto L1a8386;
#L1a83ac.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a83b0.   call temp:=  [|java:util:Map.put|](v9, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a83b6.   goto L1a8386;
#L1a83b8.   v8:= Exception  @type object;
#L1a83ba.   if v7 == 0 then goto L1a83c2;
#L1a83be.   if v0 != 0 then goto L1a83ca;
#L1a83c2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a83c8.   throw v8;
#L1a83ca.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a83ce.   call temp:=  [|java:util:Map.put|](v9, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a83d4.   goto L1a83c8;
#L1a83d6.   v1:= Exception  @type object;
#L1a83d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|](v4, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a83de.   if v7 == 0 then goto L1a83e6;
#L1a83e2.   if v0 != 0 then goto L1a83fa;
#L1a83e6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a83ec.   goto L1a833c;
#L1a83ee.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a83f2.   call temp:=  [|java:util:Map.put|](v8, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a83f8.   goto L1a833c;
#L1a83fa.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a83fe.   call temp:=  [|java:util:Map.put|](v8, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8404.   goto L1a833c;
#L1a8406.   v8:= Exception  @type object;
#L1a8408.   if v7 == 0 then goto L1a8410;
#L1a840c.   if v0 != 0 then goto L1a8418;
#L1a8410.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a8416.   throw v8;
#L1a8418.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a841c.   call temp:=  [|java:util:Map.put|](v9, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8422.   goto L1a8416;
#L1a8424.   v1:= Exception  @type object;
#L1a8426.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.logWriteError|](v4, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.logWriteError:(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type static;
#L1a842c.   if v7 == 0 then goto L1a8434;
#L1a8430.   if v0 != 0 then goto L1a844a;
#L1a8434.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a843a.   goto L1a833c;
#L1a843c.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a8440.   call temp:=  [|java:util:Map.put|](v8, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8446.   goto L1a833c;
#L1a844a.   v8:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a844e.   call temp:=  [|java:util:Map.put|](v8, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8454.   goto L1a833c;
#L1a8458.   v8:= Exception  @type object;
#L1a845a.   if v7 == 0 then goto L1a8462;
#L1a845e.   if v0 != 0 then goto L1a846a;
#L1a8462.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.delete|](v10, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.delete:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a8468.   throw v8;
#L1a846a.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.accessOrder|]   @type object;
#L1a846e.   call temp:=  [|java:util:Map.put|](v9, v5, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8474.   goto L1a8468;
  catch  [|any|] @[L1a82b2..L1a82ce] goto L1a82ce;
  catch  [|any|] @[L1a82d4..L1a82f8] goto L1a82ce;
  catch  [|java:io:FileNotFoundException|] @[L1a82fa..L1a8304] goto L1a8340;
  catch  [|any|] @[L1a82fa..L1a8304] goto L1a82ce;
  catch  [|any|] @[L1a8308..L1a831a] goto L1a82ce;
  catch  [|java:io:IOException|] @[L1a831c..L1a8322] goto L1a834a;
  catch  [|any|] @[L1a831c..L1a8322] goto L1a836c;
  catch  [|java:io:IOException|] @[L1a8326..L1a832c] goto L1a8424;
  catch  [|any|] @[L1a8326..L1a832c] goto L1a8458;
  catch  [|any|] @[L1a8336..L1a833c] goto L1a82ce;
  catch  [|any|] @[L1a8342..L1a8348] goto L1a82ce;
  catch  [|any|] @[L1a834c..L1a8352] goto L1a836c;
  catch  [|java:io:IOException|] @[L1a8354..L1a835a] goto L1a83d6;
  catch  [|any|] @[L1a8354..L1a835a] goto L1a8406;
  catch  [|any|] @[L1a8364..L1a836a] goto L1a82ce;
  catch  [|java:io:IOException|] @[L1a8370..L1a8376] goto L1a8388;
  catch  [|any|] @[L1a8370..L1a8376] goto L1a83b8;
  catch  [|any|] @[L1a8380..L1a8388] goto L1a82ce;
  catch  [|any|] @[L1a838a..L1a8390] goto L1a83b8;
  catch  [|any|] @[L1a8398..L1a83d4] goto L1a82ce;
  catch  [|any|] @[L1a83d8..L1a83de] goto L1a8406;
  catch  [|any|] @[L1a83e6..L1a8422] goto L1a82ce;
  catch  [|any|] @[L1a8426..L1a842c] goto L1a8458;
  catch  [|any|] @[L1a8434..L1a8474] goto L1a82ce;

   }
record [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|]  @type class @AccessFlag PUBLIC  {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.MAX_SIZE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:Map|] @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.caches|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1a8548.   v0:= new [|java:util:HashMap|];
#L1a854c.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L1a8552.   @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.caches|] := v0  @type object;
#L1a8556.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.<init>|] ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1a8568.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1a856e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.reset|] () @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache;.reset:()V|] @Access STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L1a8580.   v1:= new [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|];
#L1a8584.   (@monitorenter v1)
#L1a8586.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.caches|]   @type object;
#L1a858a.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L1a8590.   (@monitorexit v1)
#L1a8592.   return @void ;
#L1a8594.   v0:= Exception  @type object;
#L1a8596.   (@monitorexit v1)
#L1a8598.   throw v0;
  catch  [|any|] @[L1a8586..L1a8590] goto L1a8594;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:SSLClientSessionCache|] [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.usingDirectory|] ([|java:io:File|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache;.usingDirectory:(Ljava/io/File;)Lorg/apache/harmony/xnet/provider/jsse/SSLClientSessionCache;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a85b8.   v2:= new [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache|];
#L1a85bc.   (@monitorenter v2)
#L1a85be.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.caches|]   @type object;
#L1a85c2.   call temp:=  [|java:util:Map.get|](v1, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a85c8.   v0:= temp  @type object;
#L1a85ca.   v0:= ([|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|])v0;
#L1a85ce.   if v0 != 0 then goto L1a85e6;
#L1a85d2.   v0:= new [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|];
#L1a85d6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl.<init>|](v0, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/FileClientSessionCache$Impl;.<init>:(Ljava/io/File;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache$Impl|] @type direct;
#L1a85dc.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:FileClientSessionCache.caches|]   @type object;
#L1a85e0.   call temp:=  [|java:util:Map.put|](v1, v3, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a85e6.   (@monitorexit v2)
#L1a85e8.   return v0  @type object;
#L1a85ea.   v1:= Exception  @type object;
#L1a85ec.   (@monitorexit v2)
#L1a85ee.   throw v1;
  catch  [|any|] @[L1a85be..L1a85e6] goto L1a85ea;

   }
record [|org:apache:harmony:xnet:provider:jsse:Finished|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:Message|] {
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:Finished.data|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Finished.<init>|] ([|org:apache:harmony:xnet:provider:jsse:Finished|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v3 @type (object), [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:Finished|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1a860c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Message.<init>|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Message;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Message|] @type direct;
#L1a8612.   v0:= 12  @length 16;
#L1a8616.   if v4 == v0 then goto L1a8622;
#L1a861a.   v0:= 36  @length 16;
#L1a861e.   if v4 != v0 then goto L1a863a;
#L1a8622.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.read:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type virtual;
#L1a8628.   v0:= temp  @type object;
#L1a862a.   v2.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]  := v0 @type object;
#L1a862e.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]   @type object;
#L1a8632.   v0:= v0.length;
#L1a8634.   v2.[|org:apache:harmony:xnet:provider:jsse:Finished.length|]  := v0;
#L1a8638.   return @void ;
#L1a863a.   v0:= 50  @length 16;
#L1a863e.   v1:= "DECODE ERROR: incorrect Finished" @type (object, string);
#L1a8642.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Finished.fatalAlert|](v2, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.fatalAlert:(BLjava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Finished|] @type virtual;
#L1a8648.   goto L1a8638;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Finished.<init>|] ([|org:apache:harmony:xnet:provider:jsse:Finished|] v1 @type (this), [|byte|][] v2) @owner [|org:apache:harmony:xnet:provider:jsse:Finished|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1a865c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Message.<init>|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Message;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Message|] @type direct;
#L1a8662.   v1.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]  := v2 @type object;
#L1a8666.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]   @type object;
#L1a866a.   v0:= v0.length;
#L1a866c.   v1.[|org:apache:harmony:xnet:provider:jsse:Finished.length|]  := v0;
#L1a8670.   return @void ;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:Finished.getData|] ([|org:apache:harmony:xnet:provider:jsse:Finished|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Finished|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.getData:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a8684.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]   @type object;
#L1a8688.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:Finished.getType|] ([|org:apache:harmony:xnet:provider:jsse:Finished|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Finished|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.getType:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a869c.   v0:= 20  @length 16;
#L1a86a0.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Finished.send|] ([|org:apache:harmony:xnet:provider:jsse:Finished|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:Finished|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Finished;.send:(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a86b4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:Finished.data|]   @type object;
#L1a86b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write|](v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.write:([B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type virtual;
#L1a86be.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:Handshake|]  @type class @AccessFlag PUBLIC  {
   }
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.CERTIFICATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.CERTIFICATE_REQUEST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.CERTIFICATE_VERIFY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.CLIENT_HELLO|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.CLIENT_KEY_EXCHANGE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.FINISHED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.HELLO_REQUEST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.SERVER_HELLO|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.SERVER_HELLO_DONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|org:apache:harmony:xnet:provider:jsse:Handshake.SERVER_KEY_EXCHANGE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Handshake.<init>|] ([|org:apache:harmony:xnet:provider:jsse:Handshake|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Handshake|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Handshake;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a86d0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1a86d6.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:io:InputStream|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.<init>|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a86e8.   call temp:=  [|java:io:InputStream.<init>|](v0) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L1a86ee.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.available|] () @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.available:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|] () @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8700.   v2:= -1  @length 4;
#L1a8702.   v0:= 0  @length 4;
#L1a8704.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a870a.   v1:= temp;
#L1a870c.   if v1 != v2 then goto L1a871a;
#L1a8710.   if v0 != 0 then goto L1a8716;
#L1a8714.   return v2;
#L1a8716.   v2:= v0;
#L1a8718.   goto L1a8714;
#L1a871a.   v3:= v7 + v0  @type int;
#L1a871e.   v4:= (byte)v1  @type i2b;
#L1a8720.   v6[v3]:= v4  @byte;
#L1a8724.   v0:= v0 + 1;
#L1a8728.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.available|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.available:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a872e.   v3:= temp;
#L1a8730.   if v3 == 0 then goto L1a8738;
#L1a8734.   if v0 < v8 then goto L1a8704;
#L1a8738.   v2:= v0;
#L1a873a.   goto L1a8714;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v3 @type (this), [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:(I)[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a874c.   v1:= new [|byte|][v4];
#L1a8750.   v0:= 0  @length 4;
#L1a8752.   if v0 >= v4 then goto L1a876a;
#L1a8756.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a875c.   v2:= temp;
#L1a875e.   v2:= (byte)v2  @type i2b;
#L1a8760.   v1[v0]:= v2  @byte;
#L1a8764.   v0:= v0 + 1;
#L1a8768.   goto L1a8752;
#L1a876a.   return v1  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint16|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint16:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a877c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a8782.   v0:= temp;
#L1a8784.   v0:= v0 ^< 8;
#L1a8788.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a878e.   v1:= temp;
#L1a8790.   v1:= v1 ^& 255;
#L1a8794.   v0:= v0 ^| v1  @type int;
#L1a8796.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint24|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint24:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a87a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a87ae.   v0:= temp;
#L1a87b0.   v0:= v0 ^< 16;
#L1a87b4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a87ba.   v1:= temp;
#L1a87bc.   v1:= v1 ^< 8;
#L1a87c0.   v0:= v0 ^| v1  @type int;
#L1a87c2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a87c8.   v1:= temp;
#L1a87ca.   v1:= v1 ^& 255;
#L1a87ce.   v0:= v0 ^| v1  @type int;
#L1a87d0.   return v0;

   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint32|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint32:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a87e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a87ea.   v0:= temp;
#L1a87ec.   v0:= v0 ^< 24;
#L1a87f0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a87f6.   v1:= temp;
#L1a87f8.   v1:= v1 ^< 16;
#L1a87fc.   v0:= v0 ^| v1  @type int;
#L1a87fe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a8804.   v1:= temp;
#L1a8806.   v1:= v1 ^< 8;
#L1a880a.   v0:= v0 ^| v1  @type int;
#L1a880c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a8812.   v1:= temp;
#L1a8814.   v1:= v1 ^& 255;
#L1a8818.   v0:= v0 ^| v1  @type int;
#L1a881a.   v0:= (long)v0  @type i2l;
#L1a881c.   return v0  @type wide;

   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint64|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v6 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint64:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1a8830.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint32|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint32:()J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a8836.   v0:= temp  @type wide;
#L1a8838.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint32|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint32:()J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a883e.   v2:= temp  @type wide;
#L1a8840.   v4:= 32  @length 16;
#L1a8844.   v4:= v0 ^< v4  @type long;
#L1a8848.   v4:= v4 ^| v2  @type long;
#L1a884a.   return v4  @type wide;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.readUint8|] ([|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.readUint8:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a885c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.read|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.read:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type virtual;
#L1a8862.   v0:= temp;
#L1a8864.   v0:= v0 ^& 255;
#L1a8868.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|], [|org:apache:harmony:xnet:provider:jsse:Appendable|], [|org:apache:harmony:xnet:provider:jsse:DataStream|] {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.inc_buff_size|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|]    @AccessFlag PRIVATE;
   }
      global [|java:security:MessageDigest|] @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:security:MessageDigest|] @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a887c.   v1:= "MD5" @type (object, string);
#L1a8880.   call temp:=  [|java:security:MessageDigest.getInstance|](v1) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L1a8886.   v1:= temp  @type object;
#L1a8888.   @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|] := v1  @type object;
#L1a888c.   v1:= "SHA-1" @type (object, string);
#L1a8890.   call temp:=  [|java:security:MessageDigest.getInstance|](v1) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L1a8896.   v1:= temp  @type object;
#L1a8898.   @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|] := v1  @type object;
#L1a889c.   return @void ;
#L1a889e.   v0:= Exception  @type object;
#L1a88a0.   call temp:=  [|java:lang:Exception.printStackTrace|](v0) @signature [|Ljava/lang/Exception;.printStackTrace:()V|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L1a88a6.   v1:= new [|java:lang:RuntimeException|];
#L1a88aa.   v2:= "Could not initialize the Digest Algorithms." @type (object, string);
#L1a88ae.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1a88b4.   throw v1;
  catch  [|java:lang:Exception|] @[L1a887c..L1a889c] goto L1a889e;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.<init>|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1a88d8.   v0:= 1024  @length 16;
#L1a88dc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLInputStream.<init>|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLInputStream;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLInputStream|] @type direct;
#L1a88e2.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|]  := v0;
#L1a88e6.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.inc_buff_size|]  := v0;
#L1a88ea.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a88ee.   v0:= new [|byte|][v0];
#L1a88f2.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]  := v0 @type object;
#L1a88f6.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.append|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v4 @type (this), [|byte|][] v5, [|int|] v6, [|int|] v7) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.append:([BII)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a8908.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a890c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8910.   if v0 != v1 then goto L1a895a;
#L1a8914.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8918.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a891c.   if v0 == v1 then goto L1a893e;
#L1a8920.   v0:= new [|org:apache:harmony:xnet:provider:jsse:AlertException|];
#L1a8924.   v1:= 10  @length 16;
#L1a8928.   v2:= new [|javax:net:ssl:SSLHandshakeException|];
#L1a892c.   v3:= "Handshake message has been received before the last oubound message had been sent." @type (object, string);
#L1a8930.   call temp:=  [|javax:net:ssl:SSLHandshakeException.<init>|](v2, v3) @signature [|Ljavax/net/ssl/SSLHandshakeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLHandshakeException|] @type direct;
#L1a8936.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:AlertException.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/AlertException;.<init>:(BLjavax/net/ssl/SSLException;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:AlertException|] @type direct;
#L1a893c.   throw v0;
#L1a893e.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8942.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8946.   if v0 >= v1 then goto L1a895a;
#L1a894a.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a894e.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v0;
#L1a8952.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8956.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|]  := v0;
#L1a895a.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a895e.   v0:= v0 + v7  @type int;
#L1a8960.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8964.   if v0 <= v1 then goto L1a897a;
#L1a8968.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a896c.   v0:= v0 + v7  @type int;
#L1a896e.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8972.   v0:= v0 - v1  @type int;
#L1a8974.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.enlargeBuffer|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.enlargeBuffer:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a897a.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a897e.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8982.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v0, v1, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8988.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a898c.   v0:= v0 + v7  @type int;
#L1a898e.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|]  := v0;
#L1a8992.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this), [|int|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a89a4.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a89a8.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a89ac.   if v0 != v1 then goto L1a8a34;
#L1a89b0.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a89b4.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a89b8.   if v0 == v1 then goto L1a8a18;
#L1a89bc.   v0:= new [|org:apache:harmony:xnet:provider:jsse:AlertException|];
#L1a89c0.   v1:= 80  @length 16;
#L1a89c4.   v2:= new [|javax:net:ssl:SSLHandshakeException|];
#L1a89c8.   v3:= new [|java:lang:StringBuilder|];
#L1a89cc.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a89d2.   v4:= "Data was not fully read: " @type (object, string);
#L1a89d6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a89dc.   v3:= temp  @type object;
#L1a89de.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a89e2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a89e8.   v3:= temp  @type object;
#L1a89ea.   v4:= " " @type (object, string);
#L1a89ee.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a89f4.   v3:= temp  @type object;
#L1a89f6.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a89fa.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8a00.   v3:= temp  @type object;
#L1a8a02.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a8a08.   v3:= temp  @type object;
#L1a8a0a.   call temp:=  [|javax:net:ssl:SSLHandshakeException.<init>|](v2, v3) @signature [|Ljavax/net/ssl/SSLHandshakeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLHandshakeException|] @type direct;
#L1a8a10.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:AlertException.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/AlertException;.<init>:(BLjavax/net/ssl/SSLException;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:AlertException|] @type direct;
#L1a8a16.   throw v0;
#L1a8a18.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8a1c.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8a20.   if v0 >= v1 then goto L1a8a34;
#L1a8a24.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8a28.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|]  := v0;
#L1a8a2c.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8a30.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v0;
#L1a8a34.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8a38.   v0:= v0 + v6  @type int;
#L1a8a3a.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8a3e.   if v0 < v1 then goto L1a8a48;
#L1a8a42.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.enlargeBuffer|](v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.enlargeBuffer:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8a48.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.enlargeBuffer|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v4 @type (this), [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.enlargeBuffer:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a8a5c.   v3:= 0  @length 4;
#L1a8a5e.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.inc_buff_size|] ;
#L1a8a62.   if v5 >= v1 then goto L1a8a92;
#L1a8a66.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8a6a.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.inc_buff_size|] ;
#L1a8a6e.   v1:= v1 + v2  @type int;
#L1a8a70.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|]  := v1;
#L1a8a74.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8a78.   v0:= new [|byte|][v1];
#L1a8a7c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8a80.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8a84.   v2:= v2.length;
#L1a8a86.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8a8c.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]  := v0 @type object;
#L1a8a90.   return @void ;
#L1a8a92.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buff_size|] ;
#L1a8a96.   v1:= v1 + v5  @type int;
#L1a8a98.   goto L1a8a70;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.append|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (this), [|byte|][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.append:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a8aac.   v0:= 0  @length 4;
#L1a8aae.   v1:= v3.length;
#L1a8ab0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.append|](v2, v3, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.append:([BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8ab6.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.available|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a8ac8.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8acc.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8ad0.   v0:= v0 - v1  @type int;
#L1a8ad2.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.clearBuffer|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.clearBuffer:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1a8ae4.   v1:= 0  @length 4;
#L1a8ae6.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v1;
#L1a8aea.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|]  := v1;
#L1a8aee.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|]  := v1;
#L1a8af2.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v1;
#L1a8af6.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|]  := v1;
#L1a8afa.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8afe.   call temp:=  [|java:util:Arrays.fill|](v0, v1) @signature [|Ljava/util/Arrays;.fill:([BB)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L1a8b04.   return @void ;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getData|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v6 @type (this), [|int|] v7) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getData:(I)[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1a8b18.   v5:= 0  @length 4;
#L1a8b1a.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8b1e.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b22.   v1:= v1 - v2  @type int;
#L1a8b24.   if v1 >= v7 then goto L1a8b58;
#L1a8b28.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8b2c.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b30.   v1:= v1 - v2  @type int;
#L1a8b32.   v0:= new [|byte|][v1];
#L1a8b36.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8b3a.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b3e.   v3:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8b42.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b46.   v3:= v3 - v4  @type int;
#L1a8b48.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v5, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8b4e.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8b52.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|]  := v1;
#L1a8b56.   return v0  @type object;
#L1a8b58.   v0:= new [|byte|][v7];
#L1a8b5c.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8b60.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b64.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v5, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8b6a.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8b6e.   v1:= v1 + v7  @type int;
#L1a8b70.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|]  := v1;
#L1a8b74.   goto L1a8b56;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getDigestMD5|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getDigestMD5:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8b88.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8b8c.   (@monitorenter v2)
#L1a8b8e.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8b92.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8b96.   if v1 <= v3 then goto L1a8bbe;
#L1a8b9a.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8b9e.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8ba2.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8ba6.   v4:= 0  @length 4;
#L1a8ba8.   call temp:=  [|java:security:MessageDigest.update|](v1, v3, v4, v0) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8bae.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8bb2.   call temp:=  [|java:security:MessageDigest.digest|](v1) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8bb8.   v1:= temp  @type object;
#L1a8bba.   (@monitorexit v2)
#L1a8bbc.   return v1  @type object;
#L1a8bbe.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8bc2.   goto L1a8b9e;
#L1a8bc4.   v1:= Exception  @type object;
#L1a8bc6.   (@monitorexit v2)
#L1a8bc8.   throw v1;
  catch  [|any|] @[L1a8b8e..L1a8bc8] goto L1a8bc4;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getDigestMD5withoutLast|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getDigestMD5withoutLast:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8be8.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8bec.   (@monitorenter v1)
#L1a8bee.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8bf2.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8bf6.   v3:= 0  @length 4;
#L1a8bf8.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8bfc.   call temp:=  [|java:security:MessageDigest.update|](v0, v2, v3, v4) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8c02.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.md5|]   @type object;
#L1a8c06.   call temp:=  [|java:security:MessageDigest.digest|](v0) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8c0c.   v0:= temp  @type object;
#L1a8c0e.   (@monitorexit v1)
#L1a8c10.   return v0  @type object;
#L1a8c12.   v0:= Exception  @type object;
#L1a8c14.   (@monitorexit v1)
#L1a8c16.   throw v0;
  catch  [|any|] @[L1a8bee..L1a8c16] goto L1a8c12;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getDigestSHA|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getDigestSHA:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8c34.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8c38.   (@monitorenter v2)
#L1a8c3a.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8c3e.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8c42.   if v1 <= v3 then goto L1a8c6a;
#L1a8c46.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8c4a.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8c4e.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8c52.   v4:= 0  @length 4;
#L1a8c54.   call temp:=  [|java:security:MessageDigest.update|](v1, v3, v4, v0) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8c5a.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8c5e.   call temp:=  [|java:security:MessageDigest.digest|](v1) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8c64.   v1:= temp  @type object;
#L1a8c66.   (@monitorexit v2)
#L1a8c68.   return v1  @type object;
#L1a8c6a.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8c6e.   goto L1a8c4a;
#L1a8c70.   v1:= Exception  @type object;
#L1a8c72.   (@monitorexit v2)
#L1a8c74.   throw v1;
  catch  [|any|] @[L1a8c3a..L1a8c74] goto L1a8c70;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getDigestSHAwithoutLast|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getDigestSHAwithoutLast:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8c94.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8c98.   (@monitorenter v1)
#L1a8c9a.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8c9e.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8ca2.   v3:= 0  @length 4;
#L1a8ca4.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8ca8.   call temp:=  [|java:security:MessageDigest.update|](v0, v2, v3, v4) @signature [|Ljava/security/MessageDigest;.update:([BII)V|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8cae.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.sha|]   @type object;
#L1a8cb2.   call temp:=  [|java:security:MessageDigest.digest|](v0) @signature [|Ljava/security/MessageDigest;.digest:()[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1a8cb8.   v0:= temp  @type object;
#L1a8cba.   (@monitorexit v1)
#L1a8cbc.   return v0  @type object;
#L1a8cbe.   v0:= Exception  @type object;
#L1a8cc0.   (@monitorexit v1)
#L1a8cc2.   throw v0;
  catch  [|any|] @[L1a8c9a..L1a8cc2] goto L1a8cbe;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.getMessages|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.getMessages:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8ce0.   v4:= 0  @length 4;
#L1a8ce2.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8ce6.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8cea.   if v2 <= v3 then goto L1a8d02;
#L1a8cee.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8cf2.   v1:= new [|byte|][v0];
#L1a8cf6.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8cfa.   call temp:=  [|java:lang:System.arraycopy|](v2, v4, v1, v4, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8d00.   return v1  @type object;
#L1a8d02.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8d06.   goto L1a8cf2;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.hasData|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.hasData:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a8d18.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8d1c.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos_beg|] ;
#L1a8d20.   if v0 <= v1 then goto L1a8d28;
#L1a8d24.   v0:= 1  @length 4;
#L1a8d26.   return v0;
#L1a8d28.   v0:= 0  @length 4;
#L1a8d2a.   goto L1a8d26;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.mark|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.mark:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a8d3c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8d40.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|]  := v0;
#L1a8d44.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.mark|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a8d58.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8d5c.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|]  := v0;
#L1a8d60.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.markSupported|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a8d74.   v0:= 1  @length 4;
#L1a8d76.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a8d88.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8d8c.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8d90.   if v0 != v1 then goto L1a8da0;
#L1a8d94.   v0:= new [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|];
#L1a8d98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException.<init>|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/EndOfBufferException;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|] @type direct;
#L1a8d9e.   throw v0;
#L1a8da0.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8da4.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8da8.   v2:= v1 + 1;
#L1a8dac.   v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v2;
#L1a8db0.   v0:= v0[v1]  @byte;
#L1a8db4.   v0:= v0 ^& 255;
#L1a8db8.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a8dcc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.available|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.available:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type virtual;
#L1a8dd2.   v0:= temp;
#L1a8dd4.   if v5 <= v0 then goto L1a8de4;
#L1a8dd8.   v0:= new [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|];
#L1a8ddc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException.<init>|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/EndOfBufferException;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|] @type direct;
#L1a8de2.   throw v0;
#L1a8de4.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8de8.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8dec.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v3, v4, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8df2.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8df6.   v0:= v0 + v5  @type int;
#L1a8df8.   v2.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v0;
#L1a8dfc.   return v5;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v4 @type (this), [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.read:(I)[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a8e10.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.available|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.available:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type virtual;
#L1a8e16.   v1:= temp;
#L1a8e18.   if v5 <= v1 then goto L1a8e28;
#L1a8e1c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|];
#L1a8e20.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException.<init>|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/EndOfBufferException;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:EndOfBufferException|] @type direct;
#L1a8e26.   throw v1;
#L1a8e28.   v0:= new [|byte|][v5];
#L1a8e2c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8e30.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8e34.   v3:= 0  @length 4;
#L1a8e36.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v3, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8e3c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8e40.   v1:= v1 + v5  @type int;
#L1a8e42.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v1;
#L1a8e46.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.removeFromMarkedPosition|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v6 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.removeFromMarkedPosition:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1a8e58.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8e5c.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8e60.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8e64.   v3:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8e68.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8e6c.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8e70.   v4:= v4 - v5  @type int;
#L1a8e72.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8e78.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|] ;
#L1a8e7c.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|] ;
#L1a8e80.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8e84.   v1:= v1 - v2  @type int;
#L1a8e86.   v0:= v0 - v1  @type int;
#L1a8e88.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos_end|]  := v0;
#L1a8e8c.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8e90.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v0;
#L1a8e94.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.reset|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a8ea8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.marked_pos|] ;
#L1a8eac.   v1.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.read_pos|]  := v0;
#L1a8eb0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v3 @type (this), [|byte|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.write:(B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a8ec4.   v0:= 1  @length 4;
#L1a8ec6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v3, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8ecc.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8ed0.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8ed4.   v2:= v1 + 1;
#L1a8ed8.   v3.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8edc.   v0[v1]:= v4  @byte;
#L1a8ee0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v4 @type (this), [|byte|][] v5) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.write:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a8ef4.   v0:= v5.length;
#L1a8ef6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8efc.   v0:= 0  @length 4;
#L1a8efe.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8f02.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8f06.   v3:= v5.length;
#L1a8f08.   call temp:=  [|java:lang:System.arraycopy|](v5, v0, v1, v2, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1a8f0e.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8f12.   v1:= v5.length;
#L1a8f14.   v0:= v0 + v1  @type int;
#L1a8f16.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v0;
#L1a8f1a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.writeUint16|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this), [|long|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.writeUint16:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8f2c.   v0:= 2  @length 4;
#L1a8f2e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v5, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8f34.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8f38.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8f3c.   v2:= v1 + 1;
#L1a8f40.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8f44.    v2:= 0.000000  @length wide32;
#L1a8f4a.   v2:= v2 ^& v6  @type long;
#L1a8f4c.   v4:= 8  @length 16;
#L1a8f50.   v2:= v2 ^> v4  @type long;
#L1a8f52.   v2:= (int)v2  @type l2i;
#L1a8f54.   v2:= (byte)v2  @type i2b;
#L1a8f56.   v0[v1]:= v2  @byte;
#L1a8f5a.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8f5e.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8f62.   v2:= v1 + 1;
#L1a8f66.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8f6a.   v2:= 255  @length wide16;
#L1a8f6e.   v2:= v2 ^& v6  @type long;
#L1a8f70.   v2:= (int)v2  @type l2i;
#L1a8f72.   v2:= (byte)v2  @type i2b;
#L1a8f74.   v0[v1]:= v2  @byte;
#L1a8f78.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.writeUint24|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this), [|long|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.writeUint24:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a8f8c.   v0:= 3  @length 4;
#L1a8f8e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v5, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a8f94.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8f98.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8f9c.   v2:= v1 + 1;
#L1a8fa0.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8fa4.    v2:= 0.000000  @length wide32;
#L1a8faa.   v2:= v2 ^& v6  @type long;
#L1a8fac.   v4:= 16  @length 16;
#L1a8fb0.   v2:= v2 ^> v4  @type long;
#L1a8fb2.   v2:= (int)v2  @type l2i;
#L1a8fb4.   v2:= (byte)v2  @type i2b;
#L1a8fb6.   v0[v1]:= v2  @byte;
#L1a8fba.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8fbe.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8fc2.   v2:= v1 + 1;
#L1a8fc6.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8fca.    v2:= 0.000000  @length wide32;
#L1a8fd0.   v2:= v2 ^& v6  @type long;
#L1a8fd2.   v4:= 8  @length 16;
#L1a8fd6.   v2:= v2 ^> v4  @type long;
#L1a8fd8.   v2:= (int)v2  @type l2i;
#L1a8fda.   v2:= (byte)v2  @type i2b;
#L1a8fdc.   v0[v1]:= v2  @byte;
#L1a8fe0.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a8fe4.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a8fe8.   v2:= v1 + 1;
#L1a8fec.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a8ff0.   v2:= 255  @length wide16;
#L1a8ff4.   v2:= v2 ^& v6  @type long;
#L1a8ff6.   v2:= (int)v2  @type l2i;
#L1a8ff8.   v2:= (byte)v2  @type i2b;
#L1a8ffa.   v0[v1]:= v2  @byte;
#L1a8ffe.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.writeUint32|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v5 @type (this), [|long|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.writeUint32:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a9010.   v0:= 4  @length 4;
#L1a9012.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v5, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a9018.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a901c.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9020.   v2:= v1 + 1;
#L1a9024.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9028.    v2:= -170141183460469231731687303715884105728.000000  @length wide32;
#L1a902e.   v2:= v2 ^& v6  @type long;
#L1a9030.   v4:= 24  @length 16;
#L1a9034.   v2:= v2 ^> v4  @type long;
#L1a9036.   v2:= (int)v2  @type l2i;
#L1a9038.   v2:= (byte)v2  @type i2b;
#L1a903a.   v0[v1]:= v2  @byte;
#L1a903e.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a9042.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9046.   v2:= v1 + 1;
#L1a904a.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a904e.    v2:= 0.000000  @length wide32;
#L1a9054.   v2:= v2 ^& v6  @type long;
#L1a9056.   v4:= 16  @length 16;
#L1a905a.   v2:= v2 ^> v4  @type long;
#L1a905c.   v2:= (int)v2  @type l2i;
#L1a905e.   v2:= (byte)v2  @type i2b;
#L1a9060.   v0[v1]:= v2  @byte;
#L1a9064.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a9068.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a906c.   v2:= v1 + 1;
#L1a9070.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9074.    v2:= 0.000000  @length wide32;
#L1a907a.   v2:= v2 ^& v6  @type long;
#L1a907c.   v4:= 8  @length 16;
#L1a9080.   v2:= v2 ^> v4  @type long;
#L1a9082.   v2:= (int)v2  @type l2i;
#L1a9084.   v2:= (byte)v2  @type i2b;
#L1a9086.   v0[v1]:= v2  @byte;
#L1a908a.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a908e.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9092.   v2:= v1 + 1;
#L1a9096.   v5.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a909a.   v2:= 255  @length wide16;
#L1a909e.   v2:= v2 ^& v6  @type long;
#L1a90a0.   v2:= (int)v2  @type l2i;
#L1a90a2.   v2:= (byte)v2  @type i2b;
#L1a90a4.   v0[v1]:= v2  @byte;
#L1a90a8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.writeUint64|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v6 @type (this), [|long|] v7) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.writeUint64:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1a90bc.   v5:= 8  @length 16;
#L1a90c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v6, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a90c6.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a90ca.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a90ce.   v2:= v1 + 1;
#L1a90d2.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a90d6.   v2:= -72057594037927936L  @length wide_high16;
#L1a90da.   v2:= v2 ^& v7  @type long;
#L1a90dc.   v4:= 56  @length 16;
#L1a90e0.   v2:= v2 ^> v4  @type long;
#L1a90e2.   v2:= (int)v2  @type l2i;
#L1a90e4.   v2:= (byte)v2  @type i2b;
#L1a90e6.   v0[v1]:= v2  @byte;
#L1a90ea.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a90ee.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a90f2.   v2:= v1 + 1;
#L1a90f6.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a90fa.   v2:= 71776119061217280L  @length wide_high16;
#L1a90fe.   v2:= v2 ^& v7  @type long;
#L1a9100.   v4:= 48  @length 16;
#L1a9104.   v2:= v2 ^> v4  @type long;
#L1a9106.   v2:= (int)v2  @type l2i;
#L1a9108.   v2:= (byte)v2  @type i2b;
#L1a910a.   v0[v1]:= v2  @byte;
#L1a910e.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a9112.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9116.   v2:= v1 + 1;
#L1a911a.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a911e.   v2:= 0.000000L  @length wide;
#L1a9128.   v2:= v2 ^& v7  @type long;
#L1a912a.   v4:= 40  @length 16;
#L1a912e.   v2:= v2 ^> v4  @type long;
#L1a9130.   v2:= (int)v2  @type l2i;
#L1a9132.   v2:= (byte)v2  @type i2b;
#L1a9134.   v0[v1]:= v2  @byte;
#L1a9138.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a913c.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9140.   v2:= v1 + 1;
#L1a9144.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9148.   v2:= 0.000000L  @length wide;
#L1a9152.   v2:= v2 ^& v7  @type long;
#L1a9154.   v4:= 32  @length 16;
#L1a9158.   v2:= v2 ^> v4  @type long;
#L1a915a.   v2:= (int)v2  @type l2i;
#L1a915c.   v2:= (byte)v2  @type i2b;
#L1a915e.   v0[v1]:= v2  @byte;
#L1a9162.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a9166.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a916a.   v2:= v1 + 1;
#L1a916e.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9172.    v2:= -170141183460469231731687303715884105728.000000  @length wide32;
#L1a9178.   v2:= v2 ^& v7  @type long;
#L1a917a.   v4:= 24  @length 16;
#L1a917e.   v2:= v2 ^> v4  @type long;
#L1a9180.   v2:= (int)v2  @type l2i;
#L1a9182.   v2:= (byte)v2  @type i2b;
#L1a9184.   v0[v1]:= v2  @byte;
#L1a9188.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a918c.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9190.   v2:= v1 + 1;
#L1a9194.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9198.    v2:= 0.000000  @length wide32;
#L1a919e.   v2:= v2 ^& v7  @type long;
#L1a91a0.   v4:= 16  @length 16;
#L1a91a4.   v2:= v2 ^> v4  @type long;
#L1a91a6.   v2:= (int)v2  @type l2i;
#L1a91a8.   v2:= (byte)v2  @type i2b;
#L1a91aa.   v0[v1]:= v2  @byte;
#L1a91ae.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a91b2.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a91b6.   v2:= v1 + 1;
#L1a91ba.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a91be.    v2:= 0.000000  @length wide32;
#L1a91c4.   v2:= v2 ^& v7  @type long;
#L1a91c6.   v2:= v2 ^> v5  @type long;
#L1a91c8.   v2:= (int)v2  @type l2i;
#L1a91ca.   v2:= (byte)v2  @type i2b;
#L1a91cc.   v0[v1]:= v2  @byte;
#L1a91d0.   v0:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a91d4.   v1:= v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a91d8.   v2:= v1 + 1;
#L1a91dc.   v6.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a91e0.   v2:= 255  @length wide16;
#L1a91e4.   v2:= v2 ^& v7  @type long;
#L1a91e6.   v2:= (int)v2  @type l2i;
#L1a91e8.   v2:= (byte)v2  @type i2b;
#L1a91ea.   v0[v1]:= v2  @byte;
#L1a91ee.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.writeUint8|] ([|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v4 @type (this), [|long|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.writeUint8:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a9200.   v0:= 1  @length 4;
#L1a9202.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.check|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;.check:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] @type direct;
#L1a9208.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.buffer|]   @type object;
#L1a920c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|] ;
#L1a9210.   v2:= v1 + 1;
#L1a9214.   v4.[|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream.write_pos|]  := v2;
#L1a9218.   v2:= 255  @length wide16;
#L1a921c.   v2:= v2 ^& v5  @type long;
#L1a921e.   v2:= (int)v2  @type l2i;
#L1a9220.   v2:= (byte)v2  @type i2b;
#L1a9222.   v0[v1]:= v2  @byte;
#L1a9226.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:HelloRequest|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:Message|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HelloRequest.<init>|] ([|org:apache:harmony:xnet:provider:jsse:HelloRequest|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a9238.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Message.<init>|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Message;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Message|] @type direct;
#L1a923e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HelloRequest.<init>|] ([|org:apache:harmony:xnet:provider:jsse:HelloRequest|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v3 @type (object), [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1a9250.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Message.<init>|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Message;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Message|] @type direct;
#L1a9256.   if v4 == 0 then goto L1a9268;
#L1a925a.   v0:= 50  @length 16;
#L1a925e.   v1:= "DECODE ERROR: incorrect HelloRequest" @type (object, string);
#L1a9262.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:HelloRequest.fatalAlert|](v2, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.fatalAlert:(BLjava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @type virtual;
#L1a9268.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:HelloRequest.getType|] ([|org:apache:harmony:xnet:provider:jsse:HelloRequest|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.getType:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a927c.   v0:= 0  @length 4;
#L1a927e.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:HelloRequest.length|] ([|org:apache:harmony:xnet:provider:jsse:HelloRequest|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.length:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a9290.   v0:= 0  @length 4;
#L1a9292.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:HelloRequest.send|] ([|org:apache:harmony:xnet:provider:jsse:HelloRequest|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:HandshakeIODataStream|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:HelloRequest|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/HelloRequest;.send:(Lorg/apache/harmony/xnet/provider/jsse/HandshakeIODataStream;)V|] @Access PUBLIC {
      local temp ;
      
#L1a92a4.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:Provider|] {
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:JSSEProvider.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.<init>|] ([|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a92b8.   v0:= "HarmonyJSSE" @type (object, string);
#L1a92bc.   v1:= 4607182418800017408L  @length wide_high16;
#L1a92c0.   v3:= "Harmony JSSE Provider" @type (object, string);
#L1a92c4.   call temp:=  [|java:security:Provider.<init>|](v4, v0, v1, v2, v3) @signature [|Ljava/security/Provider;.<init>:(Ljava/lang/String;DLjava/lang/String;)V|] @classDescriptor [|java:security:Provider|] @type direct;
#L1a92ca.   v0:= "SSLContext.SSL" @type (object, string);
#L1a92ce.   v1:= new [|org:apache:harmony:xnet:provider:jsse:SSLContextImpl|];
#L1a92d2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a92d8.   v1:= temp  @type object;
#L1a92da.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a92e0.   v0:= "SSLContext.SSLv3" @type (object, string);
#L1a92e4.   v1:= new [|org:apache:harmony:xnet:provider:jsse:SSLContextImpl|];
#L1a92e8.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a92ee.   v1:= temp  @type object;
#L1a92f0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a92f6.   v0:= "SSLContext.TLS" @type (object, string);
#L1a92fa.   v1:= new [|org:apache:harmony:xnet:provider:jsse:SSLContextImpl|];
#L1a92fe.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a9304.   v1:= temp  @type object;
#L1a9306.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a930c.   v0:= "SSLContext.TLSv1" @type (object, string);
#L1a9310.   v1:= new [|org:apache:harmony:xnet:provider:jsse:SSLContextImpl|];
#L1a9314.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a931a.   v1:= temp  @type object;
#L1a931c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a9322.   v0:= "KeyManagerFactory.PKIX" @type (object, string);
#L1a9326.   v1:= new [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|];
#L1a932a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a9330.   v1:= temp  @type object;
#L1a9332.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a9338.   v0:= "Alg.Alias.KeyManagerFactory.X509" @type (object, string);
#L1a933c.   v1:= "PKIX" @type (object, string);
#L1a9340.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a9346.   v0:= "TrustManagerFactory.PKIX" @type (object, string);
#L1a934a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:TrustManagerFactoryImpl|];
#L1a934e.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a9354.   v1:= temp  @type object;
#L1a9356.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a935c.   v0:= "Alg.Alias.TrustManagerFactory.X509" @type (object, string);
#L1a9360.   v1:= "PKIX" @type (object, string);
#L1a9364.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a936a.   v0:= "KeyStore.AndroidCAStore" @type (object, string);
#L1a936e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:TrustedCertificateKeyStoreSpi|];
#L1a9372.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1a9378.   v1:= temp  @type object;
#L1a937a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:JSSEProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/JSSEProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:JSSEProvider|] @type virtual;
#L1a9380.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|]  @type class @AccessFlag PUBLIC  extends [|javax:net:ssl:KeyManagerFactorySpi|] {
      [|java:security:KeyStore|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]    @AccessFlag PRIVATE;
      [|char|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerFactoryImpl;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a9394.   call temp:=  [|javax:net:ssl:KeyManagerFactorySpi.<init>|](v0) @signature [|Ljavax/net/ssl/KeyManagerFactorySpi;.<init>:()V|] @classDescriptor [|javax:net:ssl:KeyManagerFactorySpi|] @type direct;
#L1a939a.   return @void ;

   }
    procedure [|javax:net:ssl:KeyManager|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.engineGetKeyManagers|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerFactoryImpl;.engineGetKeyManagers:()[Ljavax/net/ssl/KeyManager;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a93ac.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]   @type object;
#L1a93b0.   if v0 != 0 then goto L1a93c4;
#L1a93b4.   v0:= new [|java:lang:IllegalStateException|];
#L1a93b8.   v1:= "KeyManagerFactory is not initialized" @type (object, string);
#L1a93bc.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1a93c2.   throw v0;
#L1a93c4.   v0:= 1  @length 4;
#L1a93c6.   v0:= new [|javax:net:ssl:KeyManager|][v0];
#L1a93ca.   v1:= 0  @length 4;
#L1a93cc.   v2:= new [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|];
#L1a93d0.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]   @type object;
#L1a93d4.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]   @type object;
#L1a93d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.<init>|](v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.<init>:(Ljava/security/KeyStore;[C)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a93de.   v0[v1]:= v2  @type object;
#L1a93e2.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] v6 @type (this), [|java:security:KeyStore|] v7 @type (object), [|char|][] v8) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerFactoryImpl;.engineInit:(Ljava/security/KeyStore;[C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1a93f4.   if v7 == 0 then goto L1a941c;
#L1a93f8.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]  := v7 @type object;
#L1a93fc.   if v8 == 0 then goto L1a9412;
#L1a9400.   call temp:=  [|char[].clone|](v8) @signature [|[C.clone:()Ljava/lang/Object;|] @classDescriptor [|char[]|] @type virtual;
#L1a9406.   v3:= temp  @type object;
#L1a9408.   v3:= ([|char|][])v3;
#L1a940c.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]  := v3 @type object;
#L1a9410.   return @void ;
#L1a9412.   v3:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L1a9416.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]  := v3 @type object;
#L1a941a.   goto L1a9410;
#L1a941c.   call temp:=  [|java:security:KeyStore.getDefaultType|]() @signature [|Ljava/security/KeyStore;.getDefaultType:()Ljava/lang/String;|] @classDescriptor [|java:security:KeyStore|] @type static;
#L1a9422.   v3:= temp  @type object;
#L1a9424.   call temp:=  [|java:security:KeyStore.getInstance|](v3) @signature [|Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;|] @classDescriptor [|java:security:KeyStore|] @type static;
#L1a942a.   v3:= temp  @type object;
#L1a942c.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]  := v3 @type object;
#L1a9430.   v3:= "javax.net.ssl.keyStore" @type (object, string);
#L1a9434.   call temp:=  [|java:lang:System.getProperty|](v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L1a943a.   v1:= temp  @type object;
#L1a943c.   v2:= 0  @length 4;
#L1a943e.   if v1 == 0 then goto L1a945e;
#L1a9442.   v3:= "NONE" @type (object, string);
#L1a9446.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v3) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a944c.   v3:= temp;
#L1a944e.   if v3 != 0 then goto L1a945e;
#L1a9452.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9458.   v3:= temp;
#L1a945a.   if v3 == 0 then goto L1a948a;
#L1a945e.   v3:= v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]   @type object;
#L1a9462.   v4:= 0  @length 4;
#L1a9464.   v5:= 0  @length 4;
#L1a9466.   call temp:=  [|java:security:KeyStore.load|](v3, v4, v5) @signature [|Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V|] @classDescriptor [|java:security:KeyStore|] @type virtual;
#L1a946c.   goto L1a9410;
#L1a946e.   v0:= Exception  @type object;
#L1a9470.   v3:= new [|java:security:KeyStoreException|];
#L1a9474.   call temp:=  [|java:security:KeyStoreException.<init>|](v3, v0) @signature [|Ljava/security/KeyStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:KeyStoreException|] @type direct;
#L1a947a.   throw v3;
#L1a947c.   v0:= Exception  @type object;
#L1a947e.   v3:= new [|java:security:KeyStoreException|];
#L1a9482.   call temp:=  [|java:security:KeyStoreException.<init>|](v3, v0) @signature [|Ljava/security/KeyStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:KeyStoreException|] @type direct;
#L1a9488.   throw v3;
#L1a948a.   v3:= "javax.net.ssl.keyStorePassword" @type (object, string);
#L1a948e.   call temp:=  [|java:lang:System.getProperty|](v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L1a9494.   v2:= temp  @type object;
#L1a9496.   if v2 != 0 then goto L1a94d4;
#L1a949a.   v3:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L1a949e.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]  := v3 @type object;
#L1a94a2.   v3:= v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.keyStore|]   @type object;
#L1a94a6.   v4:= new [|java:io:FileInputStream|];
#L1a94aa.   v5:= new [|java:io:File|];
#L1a94ae.   call temp:=  [|java:io:File.<init>|](v5, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L1a94b4.   call temp:=  [|java:io:FileInputStream.<init>|](v4, v5) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L1a94ba.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]   @type object;
#L1a94be.   call temp:=  [|java:security:KeyStore.load|](v3, v4, v5) @signature [|Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V|] @classDescriptor [|java:security:KeyStore|] @type virtual;
#L1a94c4.   goto L1a9410;
#L1a94c6.   v0:= Exception  @type object;
#L1a94c8.   v3:= new [|java:security:KeyStoreException|];
#L1a94cc.   call temp:=  [|java:security:KeyStoreException.<init>|](v3, v0) @signature [|Ljava/security/KeyStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:KeyStoreException|] @type direct;
#L1a94d2.   throw v3;
#L1a94d4.   call temp:=  [|java:lang:String.toCharArray|](v2) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a94da.   v3:= temp  @type object;
#L1a94dc.   v6.[|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.pwd|]  := v3 @type object;
#L1a94e0.   goto L1a94a2;
#L1a94e2.   v0:= Exception  @type object;
#L1a94e4.   v3:= new [|java:security:KeyStoreException|];
#L1a94e8.   call temp:=  [|java:security:KeyStoreException.<init>|](v3, v0) @signature [|Ljava/security/KeyStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:KeyStoreException|] @type direct;
#L1a94ee.   throw v3;
#L1a94f0.   v0:= Exception  @type object;
#L1a94f2.   v3:= new [|java:security:KeyStoreException|];
#L1a94f6.   call temp:=  [|java:security:KeyStoreException.<init>|](v3, v0) @signature [|Ljava/security/KeyStoreException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:KeyStoreException|] @type direct;
#L1a94fc.   throw v3;
  catch  [|java:io:IOException|] @[L1a945e..L1a946c] goto L1a946e;
  catch  [|java:security:cert:CertificateException|] @[L1a945e..L1a946c] goto L1a947c;
  catch  [|java:io:FileNotFoundException|] @[L1a94a2..L1a94c4] goto L1a94c6;
  catch  [|java:io:IOException|] @[L1a94a2..L1a94c4] goto L1a94e2;
  catch  [|java:security:cert:CertificateException|] @[L1a94a2..L1a94c4] goto L1a94f0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] v2 @type (this), [|javax:net:ssl:ManagerFactoryParameters|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerFactoryImpl;.engineInit:(Ljavax/net/ssl/ManagerFactoryParameters;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9530.   v0:= new [|java:security:InvalidAlgorithmParameterException|];
#L1a9534.   v1:= "ManagerFactoryParameters not supported" @type (object, string);
#L1a9538.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v0, v1) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1a953e.   throw v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|]  @type class @AccessFlag PUBLIC  extends [|javax:net:ssl:X509ExtendedKeyManager|] {
      [|java:util:Hashtable|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v5 @type (this), [|java:security:KeyStore|] v6 @type (object), [|char|][] v7) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.<init>:(Ljava/security/KeyStore;[C)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1a9550.   call temp:=  [|javax:net:ssl:X509ExtendedKeyManager.<init>|](v5) @signature [|Ljavax/net/ssl/X509ExtendedKeyManager;.<init>:()V|] @classDescriptor [|javax:net:ssl:X509ExtendedKeyManager|] @type direct;
#L1a9556.   v4:= new [|java:util:Hashtable|];
#L1a955a.   call temp:=  [|java:util:Hashtable.<init>|](v4) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L1a9560.   v5.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]  := v4 @type object;
#L1a9564.   call temp:=  [|java:security:KeyStore.aliases|](v6) @signature [|Ljava/security/KeyStore;.aliases:()Ljava/util/Enumeration;|] @classDescriptor [|java:security:KeyStore|] @type virtual;
#L1a956a.   v1:= temp  @type object;
#L1a956c.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v1) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L1a9572.   v4:= temp;
#L1a9574.   if v4 == 0 then goto L1a95bc;
#L1a9578.   call temp:=  [|java:util:Enumeration.nextElement|](v1) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L1a957e.   v0:= temp  @type object;
#L1a9580.   v0:= ([|java:lang:String|])v0;
#L1a9584.   v4:= new [|java:security:KeyStore$PrivateKeyEntry|];
#L1a9588.   call temp:=  [|java:security:KeyStore.entryInstanceOf|](v6, v0, v4) @signature [|Ljava/security/KeyStore;.entryInstanceOf:(Ljava/lang/String;Ljava/lang/Class;)Z|] @classDescriptor [|java:security:KeyStore|] @type virtual;
#L1a958e.   v4:= temp;
#L1a9590.   if v4 == 0 then goto L1a956c;
#L1a9594.   v4:= new [|java:security:KeyStore$PasswordProtection|];
#L1a9598.   call temp:=  [|java:security:KeyStore$PasswordProtection.<init>|](v4, v7) @signature [|Ljava/security/KeyStore$PasswordProtection;.<init>:([C)V|] @classDescriptor [|java:security:KeyStore$PasswordProtection|] @type direct;
#L1a959e.   call temp:=  [|java:security:KeyStore.getEntry|](v6, v0, v4) @signature [|Ljava/security/KeyStore;.getEntry:(Ljava/lang/String;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Entry;|] @classDescriptor [|java:security:KeyStore|] @type virtual;
#L1a95a4.   v3:= temp  @type object;
#L1a95a6.   v3:= ([|java:security:KeyStore$PrivateKeyEntry|])v3;
#L1a95aa.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a95ae.   call temp:=  [|java:util:Hashtable.put|](v4, v0, v3) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a95b4.   goto L1a956c;
#L1a95b6.   v2:= Exception  @type object;
#L1a95b8.   goto L1a956c;
#L1a95ba.   v2:= Exception  @type object;
#L1a95bc.   return @void ;
#L1a95be.   v2:= Exception  @type object;
#L1a95c0.   goto L1a956c;
#L1a95c2.   v2:= Exception  @type object;
#L1a95c4.   goto L1a956c;
  catch  [|java:security:KeyStoreException|] @[L1a9564..L1a956a] goto L1a95ba;
  catch  [|java:security:KeyStoreException|] @[L1a9584..L1a95b4] goto L1a95b6;
  catch  [|java:security:UnrecoverableEntryException|] @[L1a9584..L1a95b4] goto L1a95be;
  catch  [|java:security:NoSuchAlgorithmException|] @[L1a9584..L1a95b4] goto L1a95c2;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v25 @type (this), [|java:lang:String|][] v26 @type (object), [|java:security:Principal|][] v27 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
      
#L1a95f8.   if v26 == 0 then goto L1a960a;
#L1a95fc.   v0:= v26  @type object;
#L1a9600.   v0:= v0.length;
#L1a9602.   v23:= v0;
#L1a9606.   if v23 != 0 then goto L1a9610;
#L1a960a.   v23:= 0  @length 16;
#L1a960e.   return v23  @type object;
#L1a9610.   if v27 != 0 then goto L1a96d4;
#L1a9614.   v17:= 0  @length 16;
#L1a9618.   v12:= new [|java:util:ArrayList|];
#L1a961c.   call temp:=  [|java:util:ArrayList.<init>|](v12) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1a9622.   v0:= v25  @type object;
#L1a9626.   v0:= v0.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a962a.   v23:= v0  @type object;
#L1a962e.   call temp:=  [|java:util:Hashtable.keys|](v23) @signature [|Ljava/util/Hashtable;.keys:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a9634.   v3:= temp  @type object;
#L1a9636.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v3) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L1a963c.   v23:= temp;
#L1a963e.   if v23 == 0 then goto L1a97c2;
#L1a9642.   call temp:=  [|java:util:Enumeration.nextElement|](v3) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L1a9648.   v2:= temp  @type object;
#L1a964a.   v2:= ([|java:lang:String|])v2;
#L1a964e.   v0:= v25  @type object;
#L1a9652.   v0:= v0.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a9656.   v23:= v0  @type object;
#L1a965a.   v0:= v23  @type object;
#L1a965e.   call temp:=  [|java:util:Hashtable.get|](v0, v2) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a9664.   v11:= temp  @type object;
#L1a9666.   v11:= ([|java:security:KeyStore$PrivateKeyEntry|])v11;
#L1a966a.   call temp:=  [|java:security:KeyStore$PrivateKeyEntry.getCertificateChain|](v11) @signature [|Ljava/security/KeyStore$PrivateKeyEntry;.getCertificateChain:()[Ljava/security/cert/Certificate;|] @classDescriptor [|java:security:KeyStore$PrivateKeyEntry|] @type virtual;
#L1a9670.   v10:= temp  @type object;
#L1a9672.   v23:= 0  @length 16;
#L1a9676.   v6:= v10[v23]  @type object;
#L1a967a.   call temp:=  [|java:security:cert:Certificate.getPublicKey|](v6) @signature [|Ljava/security/cert/Certificate;.getPublicKey:()Ljava/security/PublicKey;|] @classDescriptor [|java:security:cert:Certificate|] @type virtual;
#L1a9680.   v23:= temp  @type object;
#L1a9682.   call temp:=  [|java:security:PublicKey.getAlgorithm|](v23) @signature [|Ljava/security/PublicKey;.getAlgorithm:()Ljava/lang/String;|] @classDescriptor [|java:security:PublicKey|] @type interface;
#L1a9688.   v8:= temp  @type object;
#L1a968a.   v0:= instanceof @varname v6 @type [|java:security:cert:X509Certificate|];
#L1a968e.   v23:= v0;
#L1a9692.   if v23 == 0 then goto L1a96de;
#L1a9696.   v6:= ([|java:security:cert:X509Certificate|])v6;
#L1a969a.   call temp:=  [|java:security:cert:X509Certificate.getSigAlgName|](v6) @signature [|Ljava/security/cert/X509Certificate;.getSigAlgName:()Ljava/lang/String;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1a96a0.   v23:= temp  @type object;
#L1a96a2.   v24:= @@[|java:util:Locale.US|]   @type object;
#L1a96a6.   call temp:=  [|java:lang:String.toUpperCase|](v23, v24) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a96ac.   v9:= temp  @type object;
#L1a96ae.   v4:= v26  @type object;
#L1a96b2.   v0:= v4.length;
#L1a96b4.   v19:= v0;
#L1a96b8.   v13:= 0  @length 4;
#L1a96ba.   v14:= v13;
#L1a96bc.   v0:= v19;
#L1a96c0.   if v14 >= v0 then goto L1a9636;
#L1a96c4.   v18:= v4[v14]  @type object;
#L1a96c8.   if v18 != 0 then goto L1a96e2;
#L1a96cc.   v13:= v14 + 1;
#L1a96d0.   v14:= v13;
#L1a96d2.   goto L1a96bc;
#L1a96d4.   call temp:=  [|java:util:Arrays.asList|](v27) @signature [|Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;|] @classDescriptor [|java:util:Arrays|] @type static;
#L1a96da.   v17:= temp  @type object;
#L1a96dc.   goto L1a9618;
#L1a96de.   v9:= 0  @length 4;
#L1a96e0.   goto L1a96ae;
#L1a96e2.   v23:= 95  @length 16;
#L1a96e6.   v0:= v18  @type object;
#L1a96ea.   v1:= v23;
#L1a96ee.   call temp:=  [|java:lang:String.indexOf|](v0, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a96f4.   v15:= temp;
#L1a96f6.   v23:= -1  @length 16;
#L1a96fa.   v0:= v23;
#L1a96fe.   if v15 != v0 then goto L1a9744;
#L1a9702.   v21:= v18  @type object;
#L1a9706.   v0:= v18  @type object;
#L1a970a.   call temp:=  [|java:lang:String.equals|](v8, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9710.   v23:= temp;
#L1a9712.   if v23 == 0 then goto L1a96cc;
#L1a9716.   if v9 == 0 then goto L1a972a;
#L1a971a.   v0:= v21  @type object;
#L1a971e.   call temp:=  [|java:lang:String.contains|](v9, v0) @signature [|Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9724.   v23:= temp;
#L1a9726.   if v23 == 0 then goto L1a96cc;
#L1a972a.   if v27 == 0 then goto L1a973c;
#L1a972e.   v0:= v27  @type object;
#L1a9732.   v0:= v0.length;
#L1a9734.   v23:= v0;
#L1a9738.   if v23 != 0 then goto L1a976e;
#L1a973c.   call temp:=  [|java:util:ArrayList.add|](v12, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1a9742.   goto L1a96cc;
#L1a9744.   v23:= v15 + 1;
#L1a9748.   v0:= v18  @type object;
#L1a974c.   v1:= v23;
#L1a9750.   call temp:=  [|java:lang:String.substring|](v0, v1) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9756.   v21:= temp  @type object;
#L1a9758.   v23:= 0  @length 16;
#L1a975c.   v0:= v18  @type object;
#L1a9760.   v1:= v23;
#L1a9764.   call temp:=  [|java:lang:String.substring|](v0, v1, v15) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a976a.   v18:= temp  @type object;
#L1a976c.   goto L1a9706;
#L1a976e.   v5:= v10  @type object;
#L1a9770.   v0:= v5.length;
#L1a9772.   v20:= v0;
#L1a9776.   v13:= 0  @length 4;
#L1a9778.   v0:= v20;
#L1a977c.   if v13 >= v0 then goto L1a96cc;
#L1a9780.   v7:= v5[v13]  @type object;
#L1a9784.   v0:= instanceof @varname v7 @type [|java:security:cert:X509Certificate|];
#L1a9788.   v23:= v0;
#L1a978c.   if v23 != 0 then goto L1a9796;
#L1a9790.   v13:= v13 + 1;
#L1a9794.   goto L1a9778;
#L1a9796.   v22:= v7  @type object;
#L1a979a.   v22:= ([|java:security:cert:X509Certificate|])v22;
#L1a979e.   call temp:=  [|java:security:cert:X509Certificate.getIssuerX500Principal|](v22) @signature [|Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1a97a4.   v16:= temp  @type object;
#L1a97a6.   v0:= v17  @type object;
#L1a97aa.   v1:= v16  @type object;
#L1a97ae.   call temp:=  [|java:util:List.contains|](v0, v1) @signature [|Ljava/util/List;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L1a97b4.   v23:= temp;
#L1a97b6.   if v23 == 0 then goto L1a9790;
#L1a97ba.   call temp:=  [|java:util:ArrayList.add|](v12, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1a97c0.   goto L1a9790;
#L1a97c2.   call temp:=  [|java:util:ArrayList.isEmpty|](v12) @signature [|Ljava/util/ArrayList;.isEmpty:()Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1a97c8.   v23:= temp;
#L1a97ca.   if v23 != 0 then goto L1a97f6;
#L1a97ce.   call temp:=  [|java:util:ArrayList.size|](v12) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1a97d4.   v23:= temp;
#L1a97d6.   v0:= v23;
#L1a97da.   v0:= new [|java:lang:String|][v0];
#L1a97de.   v23:= v0  @type object;
#L1a97e2.   v0:= v23  @type object;
#L1a97e6.   call temp:=  [|java:util:ArrayList.toArray|](v12, v0) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1a97ec.   v23:= temp  @type object;
#L1a97ee.   v23:= ([|java:lang:String|][])v23;
#L1a97f2.   goto L1a960e;
#L1a97f6.   v23:= 0  @length 16;
#L1a97fa.   goto L1a960e;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseClientAlias|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v2 @type (this), [|java:lang:String|][] v3 @type (object), [|java:security:Principal|][] v4 @type (object), [|java:net:Socket|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseClientAlias:([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9810.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a9816.   v0:= temp  @type object;
#L1a9818.   if v0 != 0 then goto L1a9820;
#L1a981c.   v1:= 0  @length 4;
#L1a981e.   return v1  @type object;
#L1a9820.   v1:= 0  @length 4;
#L1a9822.   v1:= v0[v1]  @type object;
#L1a9826.   goto L1a981e;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseEngineClientAlias|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v2 @type (this), [|java:lang:String|][] v3 @type (object), [|java:security:Principal|][] v4 @type (object), [|javax:net:ssl:SSLEngine|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseEngineClientAlias:([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9838.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a983e.   v0:= temp  @type object;
#L1a9840.   if v0 != 0 then goto L1a9848;
#L1a9844.   v1:= 0  @length 4;
#L1a9846.   return v1  @type object;
#L1a9848.   v1:= 0  @length 4;
#L1a984a.   v1:= v0[v1]  @type object;
#L1a984e.   goto L1a9846;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseEngineServerAlias|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:security:Principal|][] v5 @type (object), [|javax:net:ssl:SSLEngine|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseEngineServerAlias:(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a9860.   v2:= 0  @length 4;
#L1a9862.   v1:= 1  @length 4;
#L1a9864.   v1:= new [|java:lang:String|][v1];
#L1a9868.   v1[v2]:= v4  @type object;
#L1a986c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v3, v1, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a9872.   v0:= temp  @type object;
#L1a9874.   if v0 != 0 then goto L1a987c;
#L1a9878.   v1:= 0  @length 4;
#L1a987a.   return v1  @type object;
#L1a987c.   v1:= v0[v2]  @type object;
#L1a9880.   goto L1a987a;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseServerAlias|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:security:Principal|][] v5 @type (object), [|java:net:Socket|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseServerAlias:(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a9894.   v2:= 0  @length 4;
#L1a9896.   v1:= 1  @length 4;
#L1a9898.   v1:= new [|java:lang:String|][v1];
#L1a989c.   v1[v2]:= v4  @type object;
#L1a98a0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v3, v1, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a98a6.   v0:= temp  @type object;
#L1a98a8.   if v0 != 0 then goto L1a98b0;
#L1a98ac.   v1:= 0  @length 4;
#L1a98ae.   return v1  @type object;
#L1a98b0.   v1:= v0[v2]  @type object;
#L1a98b4.   goto L1a98ae;

   }
    procedure [|java:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.getCertificateChain|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.getCertificateChain:(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a98c8.   v2:= 0  @length 4;
#L1a98ca.   if v5 != 0 then goto L1a98d0;
#L1a98ce.   return v2  @type object;
#L1a98d0.   v3:= v4.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a98d4.   call temp:=  [|java:util:Hashtable.containsKey|](v3, v5) @signature [|Ljava/util/Hashtable;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a98da.   v3:= temp;
#L1a98dc.   if v3 == 0 then goto L1a98ce;
#L1a98e0.   v3:= v4.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a98e4.   call temp:=  [|java:util:Hashtable.get|](v3, v5) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a98ea.   v3:= temp  @type object;
#L1a98ec.   v3:= ([|java:security:KeyStore$PrivateKeyEntry|])v3;
#L1a98f0.   call temp:=  [|java:security:KeyStore$PrivateKeyEntry.getCertificateChain|](v3) @signature [|Ljava/security/KeyStore$PrivateKeyEntry;.getCertificateChain:()[Ljava/security/cert/Certificate;|] @classDescriptor [|java:security:KeyStore$PrivateKeyEntry|] @type virtual;
#L1a98f6.   v0:= temp  @type object;
#L1a98f8.   v3:= 0  @length 4;
#L1a98fa.   v3:= v0[v3]  @type object;
#L1a98fe.   v3:= instanceof @varname v3 @type [|java:security:cert:X509Certificate|];
#L1a9902.   if v3 == 0 then goto L1a98ce;
#L1a9906.   v3:= v0.length;
#L1a9908.   v2:= new [|java:security:cert:X509Certificate|][v3];
#L1a990c.   v1:= 0  @length 4;
#L1a990e.   v3:= v0.length;
#L1a9910.   if v1 >= v3 then goto L1a98ce;
#L1a9914.   v3:= v0[v1]  @type object;
#L1a9918.   v3:= ([|java:security:cert:X509Certificate|])v3;
#L1a991c.   v2[v1]:= v3  @type object;
#L1a9920.   v1:= v1 + 1;
#L1a9924.   goto L1a990e;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.getClientAliases|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:security:Principal|][] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.getClientAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9938.   v0:= 1  @length 4;
#L1a993a.   v0:= new [|java:lang:String|][v0];
#L1a993e.   v1:= 0  @length 4;
#L1a9940.   v0[v1]:= v3  @type object;
#L1a9944.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v2, v0, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a994a.   v0:= temp  @type object;
#L1a994c.   return v0  @type object;

   }
    procedure [|java:security:PrivateKey|] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.getPrivateKey|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.getPrivateKey:(Ljava/lang/String;)Ljava/security/PrivateKey;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9960.   v0:= 0  @length 4;
#L1a9962.   if v3 != 0 then goto L1a9968;
#L1a9966.   return v0  @type object;
#L1a9968.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a996c.   call temp:=  [|java:util:Hashtable.containsKey|](v1, v3) @signature [|Ljava/util/Hashtable;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a9972.   v1:= temp;
#L1a9974.   if v1 == 0 then goto L1a9966;
#L1a9978.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.hash|]   @type object;
#L1a997c.   call temp:=  [|java:util:Hashtable.get|](v0, v3) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L1a9982.   v0:= temp  @type object;
#L1a9984.   v0:= ([|java:security:KeyStore$PrivateKeyEntry|])v0;
#L1a9988.   call temp:=  [|java:security:KeyStore$PrivateKeyEntry.getPrivateKey|](v0) @signature [|Ljava/security/KeyStore$PrivateKeyEntry;.getPrivateKey:()Ljava/security/PrivateKey;|] @classDescriptor [|java:security:KeyStore$PrivateKeyEntry|] @type virtual;
#L1a998e.   v0:= temp  @type object;
#L1a9990.   goto L1a9966;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.getServerAliases|] ([|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:security:Principal|][] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.getServerAliases:(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a99a4.   v0:= 1  @length 4;
#L1a99a6.   v0:= new [|java:lang:String|][v0];
#L1a99aa.   v1:= 0  @length 4;
#L1a99ac.   v0[v1]:= v3  @type object;
#L1a99b0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl.chooseAlias|](v2, v0, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/KeyManagerImpl;.chooseAlias:([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:KeyManagerImpl|] @type direct;
#L1a99b6.   v0:= temp  @type object;
#L1a99b8.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|]  @type class @AccessFlag PUBLIC  extends [|java:io:PrintStream|] {
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.prefix|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1a99cc.   v0:= 0  @length 4;
#L1a99ce.   @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] := v0;
#L1a99d2.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.<init>|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1a99e4.   v0:= @@[|java:lang:System.err|]   @type object;
#L1a99e8.   call temp:=  [|java:io:PrintStream.<init>|](v2, v0) @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L1a99ee.   v0:= new [|java:lang:StringBuilder|];
#L1a99f2.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a99f8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a99fe.   v0:= temp  @type object;
#L1a9a00.   v1:= "[" @type (object, string);
#L1a9a04.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9a0a.   v0:= temp  @type object;
#L1a9a0c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1a9a12.   v1:= temp  @type object;
#L1a9a14.   call temp:=  [|java:lang:Thread.getName|](v1) @signature [|Ljava/lang/Thread;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1a9a1a.   v1:= temp  @type object;
#L1a9a1c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9a22.   v0:= temp  @type object;
#L1a9a24.   v1:= "] " @type (object, string);
#L1a9a28.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9a2e.   v0:= temp  @type object;
#L1a9a30.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9a36.   v0:= temp  @type object;
#L1a9a38.   v2.[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.prefix|]  := v0 @type object;
#L1a9a3c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.endIndent|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.endIndent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a9a50.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] ;
#L1a9a54.   v0:= v0 + -1;
#L1a9a58.   @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] := v0;
#L1a9a5c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.newIndent|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.newIndent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a9a70.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] ;
#L1a9a74.   v0:= v0 + 1;
#L1a9a78.   @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] := v0;
#L1a9a7c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.print|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.print:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1a9a90.   v0:= 0  @length 4;
#L1a9a92.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.indent|] ;
#L1a9a96.   if v0 >= v1 then goto L1a9aaa;
#L1a9a9a.   v1:= "  " @type (object, string);
#L1a9a9e.   call temp:=  [|java:io:PrintStream.print|](v2, v1) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type super;
#L1a9aa4.   v0:= v0 + 1;
#L1a9aa8.   goto L1a9a92;
#L1a9aaa.   call temp:=  [|java:io:PrintStream.print|](v2, v3) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type super;
#L1a9ab0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.print|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v7 @type (this), [|byte|][] v8) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.print:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1a9ac4.   v1:= 16  @length 16;
#L1a9ac8.   v2:= " " @type (object, string);
#L1a9acc.   v3:= "" @type (object, string);
#L1a9ad0.   v5:= 0  @length 4;
#L1a9ad2.   v6:= v8.length;
#L1a9ad4.   v0:= v7  @type object;
#L1a9ad6.   v4:= v8  @type object;
#L1a9ad8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.printAsHex|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.printAsHex:(ILjava/lang/String;Ljava/lang/String;[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @type virtual;
#L1a9ade.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.print|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v7 @type (this), [|byte|][] v8, [|int|] v9, [|int|] v10) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.print:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1a9af0.   v1:= 16  @length 16;
#L1a9af4.   v2:= " " @type (object, string);
#L1a9af8.   v3:= "" @type (object, string);
#L1a9afc.   v0:= v7  @type object;
#L1a9afe.   v4:= v8  @type object;
#L1a9b00.   v5:= v9;
#L1a9b02.   v6:= v10;
#L1a9b04.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.printAsHex|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.printAsHex:(ILjava/lang/String;Ljava/lang/String;[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @type virtual;
#L1a9b0a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.printAsHex|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v7 @type (this), [|int|] v8, [|java:lang:String|] v9 @type (object), [|java:lang:String|] v10 @type (object), [|byte|][] v11) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.printAsHex:(ILjava/lang/String;Ljava/lang/String;[B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1a9b1c.   v5:= 0  @length 4;
#L1a9b1e.   v6:= v11.length;
#L1a9b20.   v0:= v7  @type object;
#L1a9b22.   v1:= v8;
#L1a9b24.   v2:= v9  @type object;
#L1a9b26.   v3:= v10  @type object;
#L1a9b28.   v4:= v11  @type object;
#L1a9b2a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.printAsHex|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.printAsHex:(ILjava/lang/String;Ljava/lang/String;[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @type virtual;
#L1a9b30.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.printAsHex|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v4 @type (this), [|int|] v5, [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|byte|][] v8, [|int|] v9, [|int|] v10) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.printAsHex:(ILjava/lang/String;Ljava/lang/String;[BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1a9b44.   v1:= new [|java:lang:StringBuilder|];
#L1a9b48.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a9b4e.   v0:= 0  @length 4;
#L1a9b50.   if v0 >= v10 then goto L1a9ba0;
#L1a9b54.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9b5a.   v2:= v0 + v9  @type int;
#L1a9b5e.   v2:= v8[v2]  @byte;
#L1a9b62.   v3:= 0  @length 4;
#L1a9b64.   call temp:=  [|java:lang:Byte.toHexString|](v2, v3) @signature [|Ljava/lang/Byte;.toHexString:(BZ)Ljava/lang/String;|] @classDescriptor [|java:lang:Byte|] @type static;
#L1a9b6a.   v2:= temp  @type object;
#L1a9b6c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9b72.   call temp:=  [|java:lang:StringBuilder.append|](v1, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9b78.   v2:= v0 + 1;
#L1a9b7c.   v2:= v2 % v5  @type int;
#L1a9b7e.   if v2 != 0 then goto L1a9b9a;
#L1a9b82.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9b88.   v2:= temp  @type object;
#L1a9b8a.   call temp:=  [|java:io:PrintStream.println|](v4, v2) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type super;
#L1a9b90.   v1:= new [|java:lang:StringBuilder|];
#L1a9b94.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1a9b9a.   v0:= v0 + 1;
#L1a9b9e.   goto L1a9b50;
#L1a9ba0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1a9ba6.   v2:= temp  @type object;
#L1a9ba8.   call temp:=  [|java:io:PrintStream.println|](v4, v2) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type super;
#L1a9bae.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.println|] ([|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.println:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1a9bc0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:Logger$Stream.prefix|]   @type object;
#L1a9bc4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.print|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.print:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @type virtual;
#L1a9bca.   call temp:=  [|java:io:PrintStream.println|](v1, v2) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type super;
#L1a9bd0.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:Logger|]  @type class @AccessFlag PUBLIC  {
   }
      global [|java:lang:String|][] @@[|org:apache:harmony:xnet:provider:jsse:Logger.names|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:Logger|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a9be4.   v1:= "jsse" @type (object, string);
#L1a9be8.   v2:= "" @type (object, string);
#L1a9bec.   call temp:=  [|java:lang:System.getProperty|](v1, v2) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L1a9bf2.   v1:= temp  @type object;
#L1a9bf4.   v2:= "," @type (object, string);
#L1a9bf8.   call temp:=  [|java:lang:String.split|](v1, v2) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9bfe.   v1:= temp  @type object;
#L1a9c00.   @@[|org:apache:harmony:xnet:provider:jsse:Logger.names|] := v1  @type object;
#L1a9c04.   return @void ;
#L1a9c06.   v0:= Exception  @type object;
#L1a9c08.   v1:= @@[|libcore:util:EmptyArray.STRING|]   @type object;
#L1a9c0c.   @@[|org:apache:harmony:xnet:provider:jsse:Logger.names|] := v1  @type object;
#L1a9c10.   goto L1a9c04;
  catch  [|java:lang:Exception|] @[L1a9be4..L1a9c04] goto L1a9c06;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:Logger.<init>|] ([|org:apache:harmony:xnet:provider:jsse:Logger|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a9c34.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1a9c3a.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] [|org:apache:harmony:xnet:provider:jsse:Logger.getStream|] ([|java:lang:String|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:Logger|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger;.getStream:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L1a9c4c.   v0:= 0  @length 4;
#L1a9c4e.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:Logger.names|]   @type object;
#L1a9c52.   v1:= v1.length;
#L1a9c54.   if v0 >= v1 then goto L1a9c7e;
#L1a9c58.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:Logger.names|]   @type object;
#L1a9c5c.   v1:= v1[v0]  @type object;
#L1a9c60.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1a9c66.   v1:= temp;
#L1a9c68.   if v1 == 0 then goto L1a9c78;
#L1a9c6c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|];
#L1a9c70.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:Logger$Stream.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/Logger$Stream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:Logger$Stream|] @type direct;
#L1a9c76.   return v1  @type object;
#L1a9c78.   v0:= v0 + 1;
#L1a9c7c.   goto L1a9c4e;
#L1a9c7e.   v1:= 0  @length 4;
#L1a9c80.   goto L1a9c76;

   }
record [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks.clientCertificateRequested|] ([|byte|][] v0, [|byte|][][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;.clientCertificateRequested:([B[[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks.handshakeCompleted|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;.handshakeCompleted:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks.verifyCertificateChain|] ([|byte|][][] v0, [|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;.verifyCertificateChain:([[BLjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_CURVE_GF2M|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_CURVE_GFP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_CMAC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_DH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_DSA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_EC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_HMAC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_RSA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:Map|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_SEED_LENGTH_IN_BYTES|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_NO_PADDING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_PKCS1_PADDING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_MODE_HANDSHAKE_CUTTHROUGH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_SSLv3|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_TICKET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_TLSv1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_TLSv1_1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_OP_NO_TLSv1_2|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_VERIFY_FAIL_IF_NO_PEER_CERT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_VERIFY_NONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_VERIFY_PEER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:Map|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|][] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_CIPHER_SUITES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_PROTOCOL_SSLV3|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_PROTOCOL_TLSV1|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_PROTOCOL_TLSV1_1|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_PROTOCOL_TLSV1_2|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.TLS_EMPTY_RENEGOTIATION_INFO_SCSV|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1a9c94.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.clinit|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.clinit:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9c9a.   v1:= new [|java:util:HashMap|];
#L1a9c9e.   call temp:=  [|java:util:HashMap.<init>|](v1) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L1a9ca4.   @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES|] := v1  @type object;
#L1a9ca8.   v1:= new [|java:util:LinkedHashMap|];
#L1a9cac.   call temp:=  [|java:util:LinkedHashMap.<init>|](v1) @signature [|Ljava/util/LinkedHashMap;.<init>:()V|] @classDescriptor [|java:util:LinkedHashMap|] @type direct;
#L1a9cb2.   @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|] := v1  @type object;
#L1a9cb6.   v1:= "SSL_RSA_WITH_RC4_128_MD5" @type (object, string);
#L1a9cba.   v2:= "RC4-MD5" @type (object, string);
#L1a9cbe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9cc4.   v1:= "SSL_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1a9cc8.   v2:= "RC4-SHA" @type (object, string);
#L1a9ccc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9cd2.   v1:= "TLS_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9cd6.   v2:= "AES128-SHA" @type (object, string);
#L1a9cda.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ce0.   v1:= "TLS_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9ce4.   v2:= "AES256-SHA" @type (object, string);
#L1a9ce8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9cee.   v1:= "TLS_ECDH_ECDSA_WITH_RC4_128_SHA" @type (object, string);
#L1a9cf2.   v2:= "ECDH-ECDSA-RC4-SHA" @type (object, string);
#L1a9cf6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9cfc.   v1:= "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9d00.   v2:= "ECDH-ECDSA-AES128-SHA" @type (object, string);
#L1a9d04.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d0a.   v1:= "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9d0e.   v2:= "ECDH-ECDSA-AES256-SHA" @type (object, string);
#L1a9d12.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d18.   v1:= "TLS_ECDH_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1a9d1c.   v2:= "ECDH-RSA-RC4-SHA" @type (object, string);
#L1a9d20.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d26.   v1:= "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9d2a.   v2:= "ECDH-RSA-AES128-SHA" @type (object, string);
#L1a9d2e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d34.   v1:= "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9d38.   v2:= "ECDH-RSA-AES256-SHA" @type (object, string);
#L1a9d3c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d42.   v1:= "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA" @type (object, string);
#L1a9d46.   v2:= "ECDHE-ECDSA-RC4-SHA" @type (object, string);
#L1a9d4a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d50.   v1:= "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9d54.   v2:= "ECDHE-ECDSA-AES128-SHA" @type (object, string);
#L1a9d58.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d5e.   v1:= "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9d62.   v2:= "ECDHE-ECDSA-AES256-SHA" @type (object, string);
#L1a9d66.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d6c.   v1:= "TLS_ECDHE_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1a9d70.   v2:= "ECDHE-RSA-RC4-SHA" @type (object, string);
#L1a9d74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d7a.   v1:= "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9d7e.   v2:= "ECDHE-RSA-AES128-SHA" @type (object, string);
#L1a9d82.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d88.   v1:= "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9d8c.   v2:= "ECDHE-RSA-AES256-SHA" @type (object, string);
#L1a9d90.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9d96.   v1:= "TLS_DHE_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9d9a.   v2:= "DHE-RSA-AES128-SHA" @type (object, string);
#L1a9d9e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9da4.   v1:= "TLS_DHE_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9da8.   v2:= "DHE-RSA-AES256-SHA" @type (object, string);
#L1a9dac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9db2.   v1:= "TLS_DHE_DSS_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9db6.   v2:= "DHE-DSS-AES128-SHA" @type (object, string);
#L1a9dba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9dc0.   v1:= "TLS_DHE_DSS_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9dc4.   v2:= "DHE-DSS-AES256-SHA" @type (object, string);
#L1a9dc8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9dce.   v1:= "SSL_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9dd2.   v2:= "DES-CBC3-SHA" @type (object, string);
#L1a9dd6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ddc.   v1:= "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9de0.   v2:= "ECDH-ECDSA-DES-CBC3-SHA" @type (object, string);
#L1a9de4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9dea.   v1:= "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9dee.   v2:= "ECDH-RSA-DES-CBC3-SHA" @type (object, string);
#L1a9df2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9df8.   v1:= "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9dfc.   v2:= "ECDHE-ECDSA-DES-CBC3-SHA" @type (object, string);
#L1a9e00.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e06.   v1:= "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9e0a.   v2:= "ECDHE-RSA-DES-CBC3-SHA" @type (object, string);
#L1a9e0e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e14.   v1:= "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9e18.   v2:= "EDH-RSA-DES-CBC3-SHA" @type (object, string);
#L1a9e1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e22.   v1:= "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9e26.   v2:= "EDH-DSS-DES-CBC3-SHA" @type (object, string);
#L1a9e2a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e30.   v1:= "SSL_RSA_WITH_DES_CBC_SHA" @type (object, string);
#L1a9e34.   v2:= "DES-CBC-SHA" @type (object, string);
#L1a9e38.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e3e.   v1:= "SSL_DHE_RSA_WITH_DES_CBC_SHA" @type (object, string);
#L1a9e42.   v2:= "EDH-RSA-DES-CBC-SHA" @type (object, string);
#L1a9e46.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e4c.   v1:= "SSL_DHE_DSS_WITH_DES_CBC_SHA" @type (object, string);
#L1a9e50.   v2:= "EDH-DSS-DES-CBC-SHA" @type (object, string);
#L1a9e54.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e5a.   v1:= "SSL_RSA_EXPORT_WITH_RC4_40_MD5" @type (object, string);
#L1a9e5e.   v2:= "EXP-RC4-MD5" @type (object, string);
#L1a9e62.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e68.   v1:= "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1a9e6c.   v2:= "EXP-DES-CBC-SHA" @type (object, string);
#L1a9e70.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e76.   v1:= "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1a9e7a.   v2:= "EXP-EDH-RSA-DES-CBC-SHA" @type (object, string);
#L1a9e7e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e84.   v1:= "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1a9e88.   v2:= "EXP-EDH-DSS-DES-CBC-SHA" @type (object, string);
#L1a9e8c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9e92.   v1:= "SSL_RSA_WITH_NULL_MD5" @type (object, string);
#L1a9e96.   v2:= "NULL-MD5" @type (object, string);
#L1a9e9a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ea0.   v1:= "SSL_RSA_WITH_NULL_SHA" @type (object, string);
#L1a9ea4.   v2:= "NULL-SHA" @type (object, string);
#L1a9ea8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9eae.   v1:= "TLS_ECDH_ECDSA_WITH_NULL_SHA" @type (object, string);
#L1a9eb2.   v2:= "ECDH-ECDSA-NULL-SHA" @type (object, string);
#L1a9eb6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ebc.   v1:= "TLS_ECDH_RSA_WITH_NULL_SHA" @type (object, string);
#L1a9ec0.   v2:= "ECDH-RSA-NULL-SHA" @type (object, string);
#L1a9ec4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9eca.   v1:= "TLS_ECDHE_ECDSA_WITH_NULL_SHA" @type (object, string);
#L1a9ece.   v2:= "ECDHE-ECDSA-NULL-SHA" @type (object, string);
#L1a9ed2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ed8.   v1:= "TLS_ECDHE_RSA_WITH_NULL_SHA" @type (object, string);
#L1a9edc.   v2:= "ECDHE-RSA-NULL-SHA" @type (object, string);
#L1a9ee0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ee6.   v1:= "SSL_DH_anon_WITH_RC4_128_MD5" @type (object, string);
#L1a9eea.   v2:= "ADH-RC4-MD5" @type (object, string);
#L1a9eee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ef4.   v1:= "TLS_DH_anon_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9ef8.   v2:= "ADH-AES128-SHA" @type (object, string);
#L1a9efc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f02.   v1:= "TLS_DH_anon_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9f06.   v2:= "ADH-AES256-SHA" @type (object, string);
#L1a9f0a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f10.   v1:= "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9f14.   v2:= "ADH-DES-CBC3-SHA" @type (object, string);
#L1a9f18.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f1e.   v1:= "SSL_DH_anon_WITH_DES_CBC_SHA" @type (object, string);
#L1a9f22.   v2:= "ADH-DES-CBC-SHA" @type (object, string);
#L1a9f26.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f2c.   v1:= "TLS_ECDH_anon_WITH_RC4_128_SHA" @type (object, string);
#L1a9f30.   v2:= "AECDH-RC4-SHA" @type (object, string);
#L1a9f34.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f3a.   v1:= "TLS_ECDH_anon_WITH_AES_128_CBC_SHA" @type (object, string);
#L1a9f3e.   v2:= "AECDH-AES128-SHA" @type (object, string);
#L1a9f42.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f48.   v1:= "TLS_ECDH_anon_WITH_AES_256_CBC_SHA" @type (object, string);
#L1a9f4c.   v2:= "AECDH-AES256-SHA" @type (object, string);
#L1a9f50.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f56.   v1:= "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1a9f5a.   v2:= "AECDH-DES-CBC3-SHA" @type (object, string);
#L1a9f5e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f64.   v1:= "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5" @type (object, string);
#L1a9f68.   v2:= "EXP-ADH-RC4-MD5" @type (object, string);
#L1a9f6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f72.   v1:= "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1a9f76.   v2:= "EXP-ADH-DES-CBC-SHA" @type (object, string);
#L1a9f7a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f80.   v1:= "TLS_ECDH_anon_WITH_NULL_SHA" @type (object, string);
#L1a9f84.   v2:= "AECDH-NULL-SHA" @type (object, string);
#L1a9f88.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9f8e.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]   @type object;
#L1a9f92.   call temp:=  [|java:util:Map.size|](v1) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L1a9f98.   v0:= temp;
#L1a9f9a.   v1:= v0 + 1;
#L1a9f9e.   v1:= new [|java:lang:String|][v1];
#L1a9fa2.   @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_CIPHER_SUITES|] := v1  @type object;
#L1a9fa6.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]   @type object;
#L1a9faa.   call temp:=  [|java:util:Map.keySet|](v1) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L1a9fb0.   v1:= temp  @type object;
#L1a9fb2.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_CIPHER_SUITES|]   @type object;
#L1a9fb6.   call temp:=  [|java:util:Set.toArray|](v1, v2) @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L1a9fbc.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_CIPHER_SUITES|]   @type object;
#L1a9fc0.   v2:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @type (object, string);
#L1a9fc4.   v1[v0]:= v2  @type object;
#L1a9fc8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.<init>|] ([|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1a9fdc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1a9fe2.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.DSA_generate_key|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|byte|][] v3, [|byte|][] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.DSA_generate_key:(I[B[B[B[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_clear_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_clear_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_cmp|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_cmp:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_cofactor|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_cofactor:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_curve|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_curve:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_generator|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_generator:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_order|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_order:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_new_by_curve_name|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_new_by_curve_name:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_new_curve|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|byte|][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_new_curve:(I[B[B[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_set_generator|] ([|int|] v0, [|int|] v1, [|byte|][] v2, [|byte|][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_set_generator:(II[B[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_generate_key|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_generate_key:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_get_private_key|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_get_private_key:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_get_public_key|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_get_public_key:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_clear_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_clear_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_cmp|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_cmp:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_get_affine_coordinates|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_get_affine_coordinates:(II)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_new|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_new:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_set_affine_coordinates|] ([|int|] v0, [|int|] v1, [|byte|][] v2, [|byte|][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_set_affine_coordinates:(II[B[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_add|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_add:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_by_id|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_by_id:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_finish|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_finish:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_free:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_init|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_init:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_load_dynamic|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_load_dynamic:()V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_load_private_key|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_load_private_key:(ILjava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ERR_peek_last_error|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ERR_peek_last_error:()J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_block_size|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_block_size:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_cleanup|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_cleanup:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_new|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_new:()I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_set_key_length|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_set_key_length:(II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_set_padding|] ([|int|] v0, [|boolean|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_set_padding:(IZ)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_iv_length|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_iv_length:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherFinal_ex|] ([|int|] v0, [|byte|][] v1, [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherFinal_ex:(I[BI)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherInit_ex|] ([|int|] v0, [|int|] v1, [|byte|][] v2, [|byte|][] v3, [|boolean|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherInit_ex:(II[B[BZ)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherUpdate|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherUpdate:(I[BI[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestFinal|] ([|int|] v0, [|byte|][] v1, [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestFinal:(I[BI)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestInit|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestInit:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestSignFinal|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestSignFinal:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestSignInit|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestSignInit:(III)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestSignUpdate|] ([|int|] v0, [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestSignUpdate:(I[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestUpdate|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestUpdate:(I[BII)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_copy|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_copy:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_create|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_create:()I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_destroy|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_destroy:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_block_size|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_block_size:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_cmp|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_cmp:(II)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|] ([|byte|][] v0, [|byte|][] v1, [|byte|][] v2, [|byte|][] v3, [|byte|][] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_EC_KEY|] ([|int|] v0, [|int|] v1, [|byte|][] v2) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_EC_KEY:(II[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|] ([|byte|][] v0, [|byte|][] v1, [|byte|][] v2, [|byte|][] v3, [|byte|][] v4, [|byte|][] v5, [|byte|][] v6, [|byte|][] v7) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_mac_key|] ([|int|] v0, [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_mac_key:(I[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_print_private|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_print_private:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_print_public|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_print_public:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_size|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_size:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_type|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_type:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignFinal|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignFinal:(I[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignInit|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignInit:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignUpdate|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignUpdate:(I[BII)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyFinal|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyFinal:(I[BIII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyInit|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyInit:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyUpdate|] ([|int|] v0, [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyUpdate:(I[BII)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_cipherbyname|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_cipherbyname:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OBJ_txt2nid_longName|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.OBJ_txt2nid_longName:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OBJ_txt2nid_oid|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.OBJ_txt2nid_oid:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_bytes|] ([|byte|][] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_bytes:([B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_load_file|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_load_file:(Ljava/lang/String;J)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_seed|] ([|byte|][] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_seed:([B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_generate_key_ex|] ([|int|] v0, [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_generate_key_ex:(I[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_private_decrypt|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_private_decrypt:(I[B[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_private_encrypt|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_private_encrypt:(I[B[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_public_decrypt|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_public_decrypt:(I[B[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_public_encrypt|] ([|int|] v0, [|byte|][] v1, [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_public_encrypt:(I[B[BII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_size|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_size:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_CTX_disable_npn|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_CTX_disable_npn:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_CTX_enable_npn|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_CTX_enable_npn:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_CTX_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_CTX_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_CTX_new|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_CTX_new:()I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_CTX_set_session_id_context|] ([|int|] v0, [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_CTX_set_session_id_context:(I[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_cipher|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_cipher:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_get_time|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_get_time:(I)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_get_version|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_get_version:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_session_id|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_session_id:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_check_private_key|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_check_private_key:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_clear_mode|] ([|int|] v0, [|long|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_clear_mode:(IJ)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_clear_options|] ([|int|] v0, [|long|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_clear_options:(IJ)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_do_handshake|] ([|int|] v0, [|java:io:FileDescriptor|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|byte|][] v5) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_do_handshake:(ILjava/io/FileDescriptor;Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;IZ[B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_free|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_certificate|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_certificate:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_mode|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_mode:(I)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_npn_negotiated_protocol|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_npn_negotiated_protocol:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_options|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_options:(I)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_peer_cert_chain|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_peer_cert_chain:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_get_servername|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_get_servername:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_interrupt|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_interrupt:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_new|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_new:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_read|] ([|int|] v0, [|java:io:FileDescriptor|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] v2 @type (object), [|byte|][] v3, [|int|] v4, [|int|] v5, [|int|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_read:(ILjava/io/FileDescriptor;Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;[BIII)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_renegotiate|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_renegotiate:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_cipher_lists|] ([|int|] v0, [|java:lang:String|][] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_cipher_lists:(I[Ljava/lang/String;)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_client_CA_list|] ([|int|] v0, [|byte|][][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_client_CA_list:(I[[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_mode|] ([|int|] v0, [|long|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_mode:(IJ)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_options|] ([|int|] v0, [|long|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_options:(IJ)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_session|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_session:(II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_session_creation_enabled|] ([|int|] v0, [|boolean|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_session_creation_enabled:(IZ)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_tlsext_host_name|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_tlsext_host_name:(ILjava/lang/String;)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_verify|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_verify:(II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_shutdown|] ([|int|] v0, [|java:io:FileDescriptor|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_shutdown:(ILjava/io/FileDescriptor;Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_use_OpenSSL_PrivateKey|] ([|int|] v0, [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_use_OpenSSL_PrivateKey:(II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_use_PrivateKey|] ([|int|] v0, [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_use_PrivateKey:(I[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_use_certificate|] ([|int|] v0, [|byte|][][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_use_certificate:(I[[B)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_write|] ([|int|] v0, [|java:io:FileDescriptor|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:NativeCrypto$SSLHandshakeCallbacks|] v2 @type (object), [|byte|][] v3, [|int|] v4, [|int|] v5, [|int|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_write:(ILjava/io/FileDescriptor;Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto$SSLHandshakeCallbacks;[BIII)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.X509_NAME_hash|] ([|javax:security:auth:x500:X500Principal|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.X509_NAME_hash:(Ljavax/security/auth/x500/X500Principal;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1a9ff4.   v0:= "SHA1" @type (object, string);
#L1a9ff8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.X509_NAME_hash|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.X509_NAME_hash:(Ljavax/security/auth/x500/X500Principal;Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1a9ffe.   v0:= temp;
#L1aa000.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.X509_NAME_hash|] ([|javax:security:auth:x500:X500Principal|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.X509_NAME_hash:(Ljavax/security/auth/x500/X500Principal;Ljava/lang/String;)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aa014.   call temp:=  [|java:security:MessageDigest.getInstance|](v5) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L1aa01a.   v2:= temp  @type object;
#L1aa01c.   call temp:=  [|javax:security:auth:x500:X500Principal.getEncoded|](v4) @signature [|Ljavax/security/auth/x500/X500Principal;.getEncoded:()[B|] @classDescriptor [|javax:security:auth:x500:X500Principal|] @type virtual;
#L1aa022.   v3:= temp  @type object;
#L1aa024.   call temp:=  [|java:security:MessageDigest.digest|](v2, v3) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1aa02a.   v0:= temp  @type object;
#L1aa02c.   v2:= 0  @length 4;
#L1aa02e.   v3:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L1aa032.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v2, v3) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L1aa038.   v2:= temp;
#L1aa03a.   return v2;
#L1aa03c.   v1:= Exception  @type object;
#L1aa03e.   v2:= new [|java:lang:AssertionError|];
#L1aa042.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L1aa048.   throw v2;
  catch  [|java:security:NoSuchAlgorithmException|] @[L1aa014..L1aa038] goto L1aa03c;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.X509_NAME_hash_old|] ([|javax:security:auth:x500:X500Principal|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.X509_NAME_hash_old:(Ljavax/security/auth/x500/X500Principal;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1aa06c.   v0:= "MD5" @type (object, string);
#L1aa070.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.X509_NAME_hash|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.X509_NAME_hash:(Ljavax/security/auth/x500/X500Principal;Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa076.   v0:= temp;
#L1aa078.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.add|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.add:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L1aa08c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES|]   @type object;
#L1aa090.   call temp:=  [|java:util:Map.put|](v0, v2, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1aa096.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]   @type object;
#L1aa09a.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1aa0a0.   return @void ;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledCipherSuites|] ([|java:lang:String|][] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledCipherSuites:([Ljava/lang/String;)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1aa0b4.   if v5 != 0 then goto L1aa0c8;
#L1aa0b8.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa0bc.   v3:= "cipherSuites == null" @type (object, string);
#L1aa0c0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa0c6.   throw v2;
#L1aa0c8.   v1:= 0  @length 4;
#L1aa0ca.   v2:= v5.length;
#L1aa0cc.   if v1 >= v2 then goto L1aa18a;
#L1aa0d0.   v0:= v5[v1]  @type object;
#L1aa0d4.   if v0 != 0 then goto L1aa116;
#L1aa0d8.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa0dc.   v3:= new [|java:lang:StringBuilder|];
#L1aa0e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aa0e6.   v4:= "cipherSuites[" @type (object, string);
#L1aa0ea.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa0f0.   v3:= temp  @type object;
#L1aa0f2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa0f8.   v3:= temp  @type object;
#L1aa0fa.   v4:= "] == null" @type (object, string);
#L1aa0fe.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa104.   v3:= temp  @type object;
#L1aa106.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa10c.   v3:= temp  @type object;
#L1aa10e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa114.   throw v2;
#L1aa116.   v2:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @type (object, string);
#L1aa11a.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa120.   v2:= temp;
#L1aa122.   if v2 == 0 then goto L1aa12c;
#L1aa126.   v1:= v1 + 1;
#L1aa12a.   goto L1aa0ca;
#L1aa12c.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]   @type object;
#L1aa130.   call temp:=  [|java:util:Map.containsKey|](v2, v0) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L1aa136.   v2:= temp;
#L1aa138.   if v2 != 0 then goto L1aa126;
#L1aa13c.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES|]   @type object;
#L1aa140.   call temp:=  [|java:util:Map.containsKey|](v2, v0) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L1aa146.   v2:= temp;
#L1aa148.   if v2 != 0 then goto L1aa126;
#L1aa14c.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa150.   v3:= new [|java:lang:StringBuilder|];
#L1aa154.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aa15a.   v4:= "cipherSuite " @type (object, string);
#L1aa15e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa164.   v3:= temp  @type object;
#L1aa166.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa16c.   v3:= temp  @type object;
#L1aa16e.   v4:= " is not supported." @type (object, string);
#L1aa172.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa178.   v3:= temp  @type object;
#L1aa17a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa180.   v3:= temp  @type object;
#L1aa182.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa188.   throw v2;
#L1aa18a.   return v5  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledProtocols|] ([|java:lang:String|][] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledProtocols:([Ljava/lang/String;)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1aa19c.   if v5 != 0 then goto L1aa1b0;
#L1aa1a0.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa1a4.   v3:= "protocols == null" @type (object, string);
#L1aa1a8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa1ae.   throw v2;
#L1aa1b0.   v0:= 0  @length 4;
#L1aa1b2.   v2:= v5.length;
#L1aa1b4.   if v0 >= v2 then goto L1aa282;
#L1aa1b8.   v1:= v5[v0]  @type object;
#L1aa1bc.   if v1 != 0 then goto L1aa1fe;
#L1aa1c0.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa1c4.   v3:= new [|java:lang:StringBuilder|];
#L1aa1c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aa1ce.   v4:= "protocols[" @type (object, string);
#L1aa1d2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa1d8.   v3:= temp  @type object;
#L1aa1da.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa1e0.   v3:= temp  @type object;
#L1aa1e2.   v4:= "] == null" @type (object, string);
#L1aa1e6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa1ec.   v3:= temp  @type object;
#L1aa1ee.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa1f4.   v3:= temp  @type object;
#L1aa1f6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa1fc.   throw v2;
#L1aa1fe.   v2:= "SSLv3" @type (object, string);
#L1aa202.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa208.   v2:= temp;
#L1aa20a.   if v2 != 0 then goto L1aa27c;
#L1aa20e.   v2:= "TLSv1" @type (object, string);
#L1aa212.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa218.   v2:= temp;
#L1aa21a.   if v2 != 0 then goto L1aa27c;
#L1aa21e.   v2:= "TLSv1.1" @type (object, string);
#L1aa222.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa228.   v2:= temp;
#L1aa22a.   if v2 != 0 then goto L1aa27c;
#L1aa22e.   v2:= "TLSv1.2" @type (object, string);
#L1aa232.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa238.   v2:= temp;
#L1aa23a.   if v2 != 0 then goto L1aa27c;
#L1aa23e.   v2:= new [|java:lang:IllegalArgumentException|];
#L1aa242.   v3:= new [|java:lang:StringBuilder|];
#L1aa246.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aa24c.   v4:= "protocol " @type (object, string);
#L1aa250.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa256.   v3:= temp  @type object;
#L1aa258.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa25e.   v3:= temp  @type object;
#L1aa260.   v4:= " is not supported" @type (object, string);
#L1aa264.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa26a.   v3:= temp  @type object;
#L1aa26c.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa272.   v3:= temp  @type object;
#L1aa274.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1aa27a.   throw v2;
#L1aa27c.   v0:= v0 + 1;
#L1aa280.   goto L1aa1b2;
#L1aa282.   return v5  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.clinit|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.clinit:()V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PKCS8_PRIV_KEY_INFO|] ([|byte|][] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PKCS8_PRIV_KEY_INFO:([B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PUBKEY|] ([|byte|][] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PUBKEY:([B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_SSL_SESSION|] ([|byte|][] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_SSL_SESSION:([B)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.encodeCertificates|] ([|java:security:cert:Certificate|][] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.encodeCertificates:([Ljava/security/cert/Certificate;)[[B|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa294.   v2:= v3.length;
#L1aa296.   v0:= new [|byte|][v2][];
#L1aa29a.   v1:= 0  @length 4;
#L1aa29c.   v2:= v3.length;
#L1aa29e.   if v1 >= v2 then goto L1aa2b8;
#L1aa2a2.   v2:= v3[v1]  @type object;
#L1aa2a6.   call temp:=  [|java:security:cert:Certificate.getEncoded|](v2) @signature [|Ljava/security/cert/Certificate;.getEncoded:()[B|] @classDescriptor [|java:security:cert:Certificate|] @type virtual;
#L1aa2ac.   v2:= temp  @type object;
#L1aa2ae.   v0[v1]:= v2  @type object;
#L1aa2b2.   v1:= v1 + 1;
#L1aa2b6.   goto L1aa29c;
#L1aa2b8.   return v0  @type object;

   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.encodeIssuerX509Principals|] ([|java:security:cert:X509Certificate|][] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.encodeIssuerX509Principals:([Ljava/security/cert/X509Certificate;)[[B|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa2cc.   v2:= v3.length;
#L1aa2ce.   v1:= new [|byte|][v2][];
#L1aa2d2.   v0:= 0  @length 4;
#L1aa2d4.   v2:= v3.length;
#L1aa2d6.   if v0 >= v2 then goto L1aa2f8;
#L1aa2da.   v2:= v3[v0]  @type object;
#L1aa2de.   call temp:=  [|java:security:cert:X509Certificate.getIssuerX500Principal|](v2) @signature [|Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1aa2e4.   v2:= temp  @type object;
#L1aa2e6.   call temp:=  [|javax:security:auth:x500:X500Principal.getEncoded|](v2) @signature [|Ljavax/security/auth/x500/X500Principal;.getEncoded:()[B|] @classDescriptor [|javax:security:auth:x500:X500Principal|] @type virtual;
#L1aa2ec.   v2:= temp  @type object;
#L1aa2ee.   v1[v0]:= v2  @type object;
#L1aa2f2.   v0:= v0 + 1;
#L1aa2f6.   goto L1aa2d4;
#L1aa2f8.   return v1  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa30c.   v0:= 35  @length 16;
#L1aa310.   v0:= new [|java:lang:String|][v0];
#L1aa314.   v1:= 0  @length 4;
#L1aa316.   v2:= "SSL_RSA_WITH_RC4_128_MD5" @type (object, string);
#L1aa31a.   v0[v1]:= v2  @type object;
#L1aa31e.   v1:= 1  @length 4;
#L1aa320.   v2:= "SSL_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1aa324.   v0[v1]:= v2  @type object;
#L1aa328.   v1:= 2  @length 4;
#L1aa32a.   v2:= "TLS_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa32e.   v0[v1]:= v2  @type object;
#L1aa332.   v1:= 3  @length 4;
#L1aa334.   v2:= "TLS_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa338.   v0[v1]:= v2  @type object;
#L1aa33c.   v1:= 4  @length 4;
#L1aa33e.   v2:= "TLS_ECDH_ECDSA_WITH_RC4_128_SHA" @type (object, string);
#L1aa342.   v0[v1]:= v2  @type object;
#L1aa346.   v1:= 5  @length 4;
#L1aa348.   v2:= "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa34c.   v0[v1]:= v2  @type object;
#L1aa350.   v1:= 6  @length 4;
#L1aa352.   v2:= "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa356.   v0[v1]:= v2  @type object;
#L1aa35a.   v1:= 7  @length 4;
#L1aa35c.   v2:= "TLS_ECDH_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1aa360.   v0[v1]:= v2  @type object;
#L1aa364.   v1:= 8  @length 16;
#L1aa368.   v2:= "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa36c.   v0[v1]:= v2  @type object;
#L1aa370.   v1:= 9  @length 16;
#L1aa374.   v2:= "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa378.   v0[v1]:= v2  @type object;
#L1aa37c.   v1:= 10  @length 16;
#L1aa380.   v2:= "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA" @type (object, string);
#L1aa384.   v0[v1]:= v2  @type object;
#L1aa388.   v1:= 11  @length 16;
#L1aa38c.   v2:= "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa390.   v0[v1]:= v2  @type object;
#L1aa394.   v1:= 12  @length 16;
#L1aa398.   v2:= "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa39c.   v0[v1]:= v2  @type object;
#L1aa3a0.   v1:= 13  @length 16;
#L1aa3a4.   v2:= "TLS_ECDHE_RSA_WITH_RC4_128_SHA" @type (object, string);
#L1aa3a8.   v0[v1]:= v2  @type object;
#L1aa3ac.   v1:= 14  @length 16;
#L1aa3b0.   v2:= "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa3b4.   v0[v1]:= v2  @type object;
#L1aa3b8.   v1:= 15  @length 16;
#L1aa3bc.   v2:= "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa3c0.   v0[v1]:= v2  @type object;
#L1aa3c4.   v1:= 16  @length 16;
#L1aa3c8.   v2:= "TLS_DHE_RSA_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa3cc.   v0[v1]:= v2  @type object;
#L1aa3d0.   v1:= 17  @length 16;
#L1aa3d4.   v2:= "TLS_DHE_RSA_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa3d8.   v0[v1]:= v2  @type object;
#L1aa3dc.   v1:= 18  @length 16;
#L1aa3e0.   v2:= "TLS_DHE_DSS_WITH_AES_128_CBC_SHA" @type (object, string);
#L1aa3e4.   v0[v1]:= v2  @type object;
#L1aa3e8.   v1:= 19  @length 16;
#L1aa3ec.   v2:= "TLS_DHE_DSS_WITH_AES_256_CBC_SHA" @type (object, string);
#L1aa3f0.   v0[v1]:= v2  @type object;
#L1aa3f4.   v1:= 20  @length 16;
#L1aa3f8.   v2:= "SSL_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa3fc.   v0[v1]:= v2  @type object;
#L1aa400.   v1:= 21  @length 16;
#L1aa404.   v2:= "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa408.   v0[v1]:= v2  @type object;
#L1aa40c.   v1:= 22  @length 16;
#L1aa410.   v2:= "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa414.   v0[v1]:= v2  @type object;
#L1aa418.   v1:= 23  @length 16;
#L1aa41c.   v2:= "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa420.   v0[v1]:= v2  @type object;
#L1aa424.   v1:= 24  @length 16;
#L1aa428.   v2:= "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa42c.   v0[v1]:= v2  @type object;
#L1aa430.   v1:= 25  @length 16;
#L1aa434.   v2:= "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa438.   v0[v1]:= v2  @type object;
#L1aa43c.   v1:= 26  @length 16;
#L1aa440.   v2:= "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA" @type (object, string);
#L1aa444.   v0[v1]:= v2  @type object;
#L1aa448.   v1:= 27  @length 16;
#L1aa44c.   v2:= "SSL_RSA_WITH_DES_CBC_SHA" @type (object, string);
#L1aa450.   v0[v1]:= v2  @type object;
#L1aa454.   v1:= 28  @length 16;
#L1aa458.   v2:= "SSL_DHE_RSA_WITH_DES_CBC_SHA" @type (object, string);
#L1aa45c.   v0[v1]:= v2  @type object;
#L1aa460.   v1:= 29  @length 16;
#L1aa464.   v2:= "SSL_DHE_DSS_WITH_DES_CBC_SHA" @type (object, string);
#L1aa468.   v0[v1]:= v2  @type object;
#L1aa46c.   v1:= 30  @length 16;
#L1aa470.   v2:= "SSL_RSA_EXPORT_WITH_RC4_40_MD5" @type (object, string);
#L1aa474.   v0[v1]:= v2  @type object;
#L1aa478.   v1:= 31  @length 16;
#L1aa47c.   v2:= "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1aa480.   v0[v1]:= v2  @type object;
#L1aa484.   v1:= 32  @length 16;
#L1aa488.   v2:= "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1aa48c.   v0[v1]:= v2  @type object;
#L1aa490.   v1:= 33  @length 16;
#L1aa494.   v2:= "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA" @type (object, string);
#L1aa498.   v0[v1]:= v2  @type object;
#L1aa49c.   v1:= 34  @length 16;
#L1aa4a0.   v2:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @type (object, string);
#L1aa4a4.   v0[v1]:= v2  @type object;
#L1aa4a8.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultProtocols|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultProtocols:()[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa4bc.   v0:= 2  @length 4;
#L1aa4be.   v0:= new [|java:lang:String|][v0];
#L1aa4c2.   v1:= 0  @length 4;
#L1aa4c4.   v2:= "SSLv3" @type (object, string);
#L1aa4c8.   v0[v1]:= v2  @type object;
#L1aa4cc.   v1:= 1  @length 4;
#L1aa4ce.   v2:= "TLSv1" @type (object, string);
#L1aa4d2.   v0[v1]:= v2  @type object;
#L1aa4d6.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedCipherSuites|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1aa4e8.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SUPPORTED_CIPHER_SUITES|]   @type object;
#L1aa4ec.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L1aa4f2.   v0:= temp  @type object;
#L1aa4f4.   v0:= ([|java:lang:String|][])v0;
#L1aa4f8.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|] () @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa50c.   v0:= 4  @length 4;
#L1aa50e.   v0:= new [|java:lang:String|][v0];
#L1aa512.   v1:= 0  @length 4;
#L1aa514.   v2:= "SSLv3" @type (object, string);
#L1aa518.   v0[v1]:= v2  @type object;
#L1aa51c.   v1:= 1  @length 4;
#L1aa51e.   v2:= "TLSv1" @type (object, string);
#L1aa522.   v0[v1]:= v2  @type object;
#L1aa526.   v1:= 2  @length 4;
#L1aa528.   v2:= "TLSv1.1" @type (object, string);
#L1aa52c.   v0[v1]:= v2  @type object;
#L1aa530.   v1:= 3  @length 4;
#L1aa532.   v2:= "TLSv1.2" @type (object, string);
#L1aa536.   v0[v1]:= v2  @type object;
#L1aa53a.   return v0  @type object;

   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_DSA_params|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_DSA_params:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EC_GROUP_type|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EC_GROUP_type:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EVP_CIPHER_CTX_buf_len|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EVP_CIPHER_CTX_buf_len:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_RSA_private_params|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_RSA_private_params:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_RSA_public_params|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_RSA_public_params:(I)[[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_DSAPrivateKey|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_DSAPrivateKey:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_DSAPublicKey|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_DSAPublicKey:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PKCS8_PRIV_KEY_INFO|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PKCS8_PRIV_KEY_INFO:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PUBKEY|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PUBKEY:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_RSAPrivateKey|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_RSAPrivateKey:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_RSAPublicKey|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_RSAPublicKey:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_SSL_SESSION|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_SSL_SESSION:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.setEnabledCipherSuites|] ([|int|] v6, [|java:lang:String|][] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.setEnabledCipherSuites:(I[Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1aa54c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledCipherSuites|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledCipherSuites:([Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa552.   v4:= new [|java:util:ArrayList|];
#L1aa556.   call temp:=  [|java:util:ArrayList.<init>|](v4) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1aa55c.   v2:= 0  @length 4;
#L1aa55e.   v5:= v7.length;
#L1aa560.   if v2 >= v5 then goto L1aa5a0;
#L1aa564.   v0:= v7[v2]  @type object;
#L1aa568.   v5:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @type (object, string);
#L1aa56c.   call temp:=  [|java:lang:String.equals|](v0, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa572.   v5:= temp;
#L1aa574.   if v5 == 0 then goto L1aa57e;
#L1aa578.   v2:= v2 + 1;
#L1aa57c.   goto L1aa55e;
#L1aa57e.   v5:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES|]   @type object;
#L1aa582.   call temp:=  [|java:util:Map.get|](v5, v0) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1aa588.   v3:= temp  @type object;
#L1aa58a.   v3:= ([|java:lang:String|])v3;
#L1aa58e.   if v3 != 0 then goto L1aa59c;
#L1aa592.   v1:= v0  @type object;
#L1aa594.   call temp:=  [|java:util:List.add|](v4, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L1aa59a.   goto L1aa578;
#L1aa59c.   v1:= v3  @type object;
#L1aa59e.   goto L1aa594;
#L1aa5a0.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L1aa5a6.   v5:= temp;
#L1aa5a8.   v5:= new [|java:lang:String|][v5];
#L1aa5ac.   call temp:=  [|java:util:List.toArray|](v4, v5) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L1aa5b2.   v5:= temp  @type object;
#L1aa5b4.   v5:= ([|java:lang:String|][])v5;
#L1aa5b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_cipher_lists|](v6, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_cipher_lists:(I[Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa5be.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.setEnabledProtocols|] ([|int|] v8, [|java:lang:String|][] v9 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.setEnabledProtocols:(I[Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1aa5d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledProtocols|](v9) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledProtocols:([Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa5d6.    v3:= 0.000000  @length wide32;
#L1aa5dc.   v1:= 0  @length wide16;
#L1aa5e0.   v0:= 0  @length 4;
#L1aa5e2.   v6:= v9.length;
#L1aa5e4.   if v0 >= v6 then goto L1aa684;
#L1aa5e8.   v5:= v9[v0]  @type object;
#L1aa5ec.   v6:= "SSLv3" @type (object, string);
#L1aa5f0.   call temp:=  [|java:lang:String.equals|](v5, v6) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa5f6.   v6:= temp;
#L1aa5f8.   if v6 == 0 then goto L1aa612;
#L1aa5fc.    v6:= -42535293329816107476463022935564615680.000000  @length wide32;
#L1aa602.   v3:= v3 ^& v6  @type long;
#L1aa604.    v6:= 0.000000  @length wide32;
#L1aa60a.   v1:= v1 ^| v6  @type long;
#L1aa60c.   v0:= v0 + 1;
#L1aa610.   goto L1aa5e2;
#L1aa612.   v6:= "TLSv1" @type (object, string);
#L1aa616.   call temp:=  [|java:lang:String.equals|](v5, v6) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa61c.   v6:= temp;
#L1aa61e.   if v6 == 0 then goto L1aa634;
#L1aa622.    v6:= -2658455833113506717278938933472788480.000000  @length wide32;
#L1aa628.   v3:= v3 ^& v6  @type long;
#L1aa62a.    v6:= 0.000000  @length wide32;
#L1aa630.   v1:= v1 ^| v6  @type long;
#L1aa632.   goto L1aa60c;
#L1aa634.   v6:= "TLSv1.1" @type (object, string);
#L1aa638.   call temp:=  [|java:lang:String.equals|](v5, v6) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa63e.   v6:= temp;
#L1aa640.   if v6 == 0 then goto L1aa656;
#L1aa644.    v6:= -158456315583795709447797473280.000000  @length wide32;
#L1aa64a.   v3:= v3 ^& v6  @type long;
#L1aa64c.    v6:= 0.000000  @length wide32;
#L1aa652.   v1:= v1 ^| v6  @type long;
#L1aa654.   goto L1aa60c;
#L1aa656.   v6:= "TLSv1.2" @type (object, string);
#L1aa65a.   call temp:=  [|java:lang:String.equals|](v5, v6) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aa660.   v6:= temp;
#L1aa662.   if v6 == 0 then goto L1aa678;
#L1aa666.    v6:= -10384593098099635614370855208878080.000000  @length wide32;
#L1aa66c.   v3:= v3 ^& v6  @type long;
#L1aa66e.    v6:= 0.000000  @length wide32;
#L1aa674.   v1:= v1 ^| v6  @type long;
#L1aa676.   goto L1aa60c;
#L1aa678.   v6:= new [|java:lang:IllegalStateException|];
#L1aa67c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v6) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1aa682.   throw v6;
#L1aa684.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_set_options|](v8, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_set_options:(IJ)J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa68a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_clear_options|](v8, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_clear_options:(IJ)J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa690.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1|]  @type class @AccessFlag SYNTHETIC  {
   }
      global [|int|][] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
      global [|int|][] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$1;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aa6a4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.values|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.values:()[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type static;
#L1aa6aa.   v0:= temp  @type object;
#L1aa6ac.   v0:= v0.length;
#L1aa6ae.   v0:= new [|int|][v0];
#L1aa6b2.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|] := v0  @type object;
#L1aa6b6.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|]   @type object;
#L1aa6ba.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1aa6be.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1aa6c4.   v1:= temp;
#L1aa6c6.   v2:= 1  @length 4;
#L1aa6c8.   v0[v1]:= v2;
#L1aa6cc.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|]   @type object;
#L1aa6d0.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1aa6d4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1aa6da.   v1:= temp;
#L1aa6dc.   v2:= 2  @length 4;
#L1aa6de.   v0[v1]:= v2;
#L1aa6e2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.values|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.values:()[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type static;
#L1aa6e8.   v0:= temp  @type object;
#L1aa6ea.   v0:= v0.length;
#L1aa6ec.   v0:= new [|int|][v0];
#L1aa6f0.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|] := v0  @type object;
#L1aa6f4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa6f8.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|]   @type object;
#L1aa6fc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa702.   v1:= temp;
#L1aa704.   v2:= 1  @length 4;
#L1aa706.   v0[v1]:= v2;
#L1aa70a.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa70e.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|]   @type object;
#L1aa712.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa718.   v1:= temp;
#L1aa71a.   v2:= 2  @length 4;
#L1aa71c.   v0[v1]:= v2;
#L1aa720.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa724.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB1|]   @type object;
#L1aa728.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa72e.   v1:= temp;
#L1aa730.   v2:= 3  @length 4;
#L1aa732.   v0[v1]:= v2;
#L1aa736.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa73a.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB8|]   @type object;
#L1aa73e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa744.   v1:= temp;
#L1aa746.   v2:= 4  @length 4;
#L1aa748.   v0[v1]:= v2;
#L1aa74c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa750.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB128|]   @type object;
#L1aa754.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa75a.   v1:= temp;
#L1aa75c.   v2:= 5  @length 4;
#L1aa75e.   v0[v1]:= v2;
#L1aa762.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa766.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTR|]   @type object;
#L1aa76a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa770.   v1:= temp;
#L1aa772.   v2:= 6  @length 4;
#L1aa774.   v0[v1]:= v2;
#L1aa778.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa77c.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1aa780.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa786.   v1:= temp;
#L1aa788.   v2:= 7  @length 4;
#L1aa78a.   v0[v1]:= v2;
#L1aa78e.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1aa792.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|]   @type object;
#L1aa796.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1aa79c.   v1:= temp;
#L1aa79e.   v2:= 8  @length 16;
#L1aa7a2.   v0[v1]:= v2;
#L1aa7a6.   return @void ;
#L1aa7a8.   v0:= Exception  @type object;
#L1aa7aa.   goto L1aa7a6;
#L1aa7ac.   v0:= Exception  @type object;
#L1aa7ae.   goto L1aa78e;
#L1aa7b0.   v0:= Exception  @type object;
#L1aa7b2.   goto L1aa778;
#L1aa7b4.   v0:= Exception  @type object;
#L1aa7b6.   goto L1aa762;
#L1aa7b8.   v0:= Exception  @type object;
#L1aa7ba.   goto L1aa74c;
#L1aa7bc.   v0:= Exception  @type object;
#L1aa7be.   goto L1aa736;
#L1aa7c0.   v0:= Exception  @type object;
#L1aa7c2.   goto L1aa720;
#L1aa7c4.   v0:= Exception  @type object;
#L1aa7c6.   goto L1aa70a;
#L1aa7c8.   v0:= Exception  @type object;
#L1aa7ca.   goto L1aa6e2;
#L1aa7cc.   v0:= Exception  @type object;
#L1aa7ce.   goto L1aa6cc;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa6b6..L1aa6cc] goto L1aa7cc;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa6cc..L1aa6e2] goto L1aa7c8;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa6f4..L1aa70a] goto L1aa7c4;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa70a..L1aa720] goto L1aa7c0;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa720..L1aa736] goto L1aa7bc;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa736..L1aa74c] goto L1aa7b8;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa74c..L1aa762] goto L1aa7b4;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa762..L1aa778] goto L1aa7b0;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa778..L1aa78e] goto L1aa7ac;
  catch  [|java:lang:NoSuchFieldError|] @[L1aa78e..L1aa7a6] goto L1aa7a8;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|javax:crypto:CipherSpi|] {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.blockSize|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.iv|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.modeBlockSize|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1aa868.   call temp:=  [|javax:crypto:CipherSpi.<init>|](v2) @signature [|Ljavax/crypto/CipherSpi;.<init>:()V|] @classDescriptor [|javax:crypto:CipherSpi|] @type direct;
#L1aa86e.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|];
#L1aa872.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_new|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_new:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa878.   v1:= temp;
#L1aa87a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type direct;
#L1aa880.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]  := v0 @type object;
#L1aa884.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1aa888.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]  := v0 @type object;
#L1aa88c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1aa890.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]  := v0 @type object;
#L1aa894.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v3 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1aa8a8.   call temp:=  [|javax:crypto:CipherSpi.<init>|](v2) @signature [|Ljavax/crypto/CipherSpi;.<init>:()V|] @classDescriptor [|javax:crypto:CipherSpi|] @type direct;
#L1aa8ae.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|];
#L1aa8b2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_new|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_new:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa8b8.   v1:= temp;
#L1aa8ba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type direct;
#L1aa8c0.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]  := v0 @type object;
#L1aa8c4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1aa8c8.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]  := v0 @type object;
#L1aa8cc.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1aa8d0.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]  := v0 @type object;
#L1aa8d4.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]  := v3 @type object;
#L1aa8d8.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]  := v4 @type object;
#L1aa8dc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getCipherBlockSize|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getCipherBlockSize:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aa8e2.   v0:= temp;
#L1aa8e4.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.blockSize|]  := v0;
#L1aa8e8.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.doFinalInternal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v8 @type (this), [|byte|][] v9, [|int|] v10, [|int|] v11, [|byte|][] v12, [|int|] v13, [|int|] v14) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.doFinalInternal:([BII[BII)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1aa8fc.   v5:= 0  @length 4;
#L1aa8fe.   v1:= v13;
#L1aa900.   if v11 <= 0 then goto L1aa910;
#L1aa904.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.updateInternal|](v8, v9, v10, v11, v12, v13, v14) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.updateInternal:([BII[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aa90a.   v3:= temp;
#L1aa90c.   v13:= v13 + v3  @type int;
#L1aa90e.   v14:= v14 - v3  @type int;
#L1aa910.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aa914.   if v6 != 0 then goto L1aa922;
#L1aa918.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]   @boolean;
#L1aa91c.   if v6 != 0 then goto L1aa922;
#L1aa920.   return v5;
#L1aa922.   v6:= v12.length;
#L1aa924.   v0:= v6 - v13  @type int;
#L1aa928.   if v0 < v14 then goto L1aa94e;
#L1aa92c.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aa930.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aa936.   v5:= temp;
#L1aa938.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherFinal_ex|](v5, v12, v13) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherFinal_ex:(I[BI)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa93e.   v4:= temp;
#L1aa940.   v13:= v13 + v4  @type int;
#L1aa942.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.reset|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.reset:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aa948.   v5:= v13 - v1  @type int;
#L1aa94c.   goto L1aa920;
#L1aa94e.   v2:= new [|byte|][v14];
#L1aa952.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aa956.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aa95c.   v6:= temp;
#L1aa95e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherFinal_ex|](v6, v2, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherFinal_ex:(I[BI)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aa964.   v4:= temp;
#L1aa966.   if v4 <= v0 then goto L1aa9b0;
#L1aa96a.   v5:= new [|javax:crypto:ShortBufferException|];
#L1aa96e.   v6:= new [|java:lang:StringBuilder|];
#L1aa972.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aa978.   v7:= "buffer is too short: " @type (object, string);
#L1aa97c.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa982.   v6:= temp  @type object;
#L1aa984.   call temp:=  [|java:lang:StringBuilder.append|](v6, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa98a.   v6:= temp  @type object;
#L1aa98c.   v7:= " > " @type (object, string);
#L1aa990.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa996.   v6:= temp  @type object;
#L1aa998.   call temp:=  [|java:lang:StringBuilder.append|](v6, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa99e.   v6:= temp  @type object;
#L1aa9a0.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aa9a6.   v6:= temp  @type object;
#L1aa9a8.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v5, v6) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1aa9ae.   throw v5;
#L1aa9b0.   if v4 <= 0 then goto L1aa940;
#L1aa9b4.   call temp:=  [|java:lang:System.arraycopy|](v2, v5, v12, v13, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1aa9ba.   goto L1aa940;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInitInternal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v8 @type (this), [|int|] v9, [|java:security:Key|] v10 @type (object), [|byte|][] v11) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInitInternal:(ILjava/security/Key;[B)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1aa9cc.   v7:= 0  @length 4;
#L1aa9ce.   v3:= 1  @length 4;
#L1aa9d0.   v4:= 0  @length 4;
#L1aa9d2.   if v9 == v3 then goto L1aa9dc;
#L1aa9d6.   v5:= 3  @length 4;
#L1aa9d8.   if v9 != v5 then goto L1aa9f8;
#L1aa9dc.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]  := v3 @boolean;
#L1aa9e0.   v5:= instanceof @varname v10 @type [|javax:crypto:SecretKey|];
#L1aa9e4.   if v5 != 0 then goto L1aaa3c;
#L1aa9e8.   v3:= new [|java:security:InvalidKeyException|];
#L1aa9ec.   v4:= "Only SecretKey is supported" @type (object, string);
#L1aa9f0.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1aa9f6.   throw v3;
#L1aa9f8.   v5:= 2  @length 4;
#L1aa9fa.   if v9 == v5 then goto L1aaa04;
#L1aa9fe.   v5:= 4  @length 4;
#L1aaa00.   if v9 != v5 then goto L1aaa0a;
#L1aaa04.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]  := v4 @boolean;
#L1aaa08.   goto L1aa9e0;
#L1aaa0a.   v3:= new [|java:security:InvalidParameterException|];
#L1aaa0e.   v4:= new [|java:lang:StringBuilder|];
#L1aaa12.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aaa18.   v5:= "Unsupported opmode " @type (object, string);
#L1aaa1c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaa22.   v4:= temp  @type object;
#L1aaa24.   call temp:=  [|java:lang:StringBuilder.append|](v4, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaa2a.   v4:= temp  @type object;
#L1aaa2c.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaa32.   v4:= temp  @type object;
#L1aaa34.   call temp:=  [|java:security:InvalidParameterException.<init>|](v3, v4) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1aaa3a.   throw v3;
#L1aaa3c.   call temp:=  [|java:security:Key.getEncoded|](v10) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1aaa42.   v1:= temp  @type object;
#L1aaa44.   if v1 != 0 then goto L1aaa58;
#L1aaa48.   v3:= new [|java:security:InvalidKeyException|];
#L1aaa4c.   v4:= "key.getEncoded() == null" @type (object, string);
#L1aaa50.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1aaa56.   throw v3;
#L1aaa58.   v5:= v1.length;
#L1aaa5a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedKeySize|](v8, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedKeySize:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aaa60.   v5:= v1.length;
#L1aaa62.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]   @type object;
#L1aaa66.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getCipherName|](v8, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getCipherName:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aaa6c.   v5:= temp  @type object;
#L1aaa6e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_cipherbyname|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_cipherbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aaa74.   v0:= temp;
#L1aaa76.   if v0 != 0 then goto L1aaaca;
#L1aaa7a.   v3:= new [|java:security:InvalidAlgorithmParameterException|];
#L1aaa7e.   v4:= new [|java:lang:StringBuilder|];
#L1aaa82.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aaa88.   v5:= "Cannot find name for key length = " @type (object, string);
#L1aaa8c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaa92.   v4:= temp  @type object;
#L1aaa94.   v5:= v1.length;
#L1aaa96.   v5:= v5 * 8;
#L1aaa9a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaaa0.   v4:= temp  @type object;
#L1aaaa2.   v5:= " and mode = " @type (object, string);
#L1aaaa6.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaaac.   v4:= temp  @type object;
#L1aaaae.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]   @type object;
#L1aaab2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaab8.   v4:= temp  @type object;
#L1aaaba.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaac0.   v4:= temp  @type object;
#L1aaac2.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v3, v4) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1aaac8.   throw v3;
#L1aaaca.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_iv_length|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_iv_length:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aaad0.   v2:= temp;
#L1aaad2.   if v11 != 0 then goto L1aab66;
#L1aaad6.   v11:= new [|byte|][v2];
#L1aaada.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.iv|]  := v11 @type object;
#L1aaade.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.supportsVariableSizeKey|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.supportsVariableSizeKey:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aaae4.   v5:= temp;
#L1aaae6.   if v5 == 0 then goto L1aab9e;
#L1aaaea.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aaaee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aaaf4.   v5:= temp;
#L1aaaf6.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aaafa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherInit_ex|](v5, v0, v7, v7, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherInit_ex:(II[B[BZ)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aab00.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aab04.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aab0a.   v5:= temp;
#L1aab0c.   v6:= v1.length;
#L1aab0e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_set_key_length|](v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_set_key_length:(II)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aab14.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aab18.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aab1e.   v5:= temp;
#L1aab20.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aab24.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherInit_ex|](v5, v4, v1, v11, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherInit_ex:(II[B[BZ)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aab2a.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aab2e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aab34.   v5:= temp;
#L1aab36.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]   @type object;
#L1aab3a.   v7:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1aab3e.   if v6 != v7 then goto L1aabb6;
#L1aab42.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_set_padding|](v5, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_set_padding:(IZ)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aab48.   v3:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aab4c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aab52.   v3:= temp;
#L1aab54.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_block_size|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_block_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aab5a.   v3:= temp;
#L1aab5c.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.modeBlockSize|]  := v3;
#L1aab60.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]  := v4 @boolean;
#L1aab64.   return @void ;
#L1aab66.   v5:= v11.length;
#L1aab68.   if v5 == v2 then goto L1aaada;
#L1aab6c.   v3:= new [|java:security:InvalidAlgorithmParameterException|];
#L1aab70.   v4:= new [|java:lang:StringBuilder|];
#L1aab74.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aab7a.   v5:= "expected IV length of " @type (object, string);
#L1aab7e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aab84.   v4:= temp  @type object;
#L1aab86.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aab8c.   v4:= temp  @type object;
#L1aab8e.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aab94.   v4:= temp  @type object;
#L1aab96.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v3, v4) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1aab9c.   throw v3;
#L1aab9e.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aaba2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aaba8.   v5:= temp;
#L1aabaa.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aabae.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherInit_ex|](v5, v0, v1, v11, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherInit_ex:(II[B[BZ)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aabb4.   goto L1aab2a;
#L1aabb6.   v3:= v4;
#L1aabb8.   goto L1aab42;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v4 @type (this), [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aabcc.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.modeBlockSize|] ;
#L1aabd0.   v3:= 1  @length 4;
#L1aabd2.   if v2 != v3 then goto L1aabd8;
#L1aabd6.   return v5;
#L1aabd8.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aabdc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aabe2.   v2:= temp;
#L1aabe4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EVP_CIPHER_CTX_buf_len|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EVP_CIPHER_CTX_buf_len:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aabea.   v0:= temp;
#L1aabec.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]   @type object;
#L1aabf0.   v3:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1aabf4.   if v2 != v3 then goto L1aabfc;
#L1aabf8.   v5:= v5 + v0  @type int;
#L1aabfa.   goto L1aabd6;
#L1aabfc.   v2:= v5 + v0  @type int;
#L1aac00.   v3:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.modeBlockSize|] ;
#L1aac04.   v1:= v2 + v3  @type int;
#L1aac08.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.modeBlockSize|] ;
#L1aac0c.   v2:= v1 % v2  @type int;
#L1aac10.   v5:= v1 - v2  @type int;
#L1aac14.   goto L1aabd6;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.reset|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.reset:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aac28.   v3:= 0  @length 4;
#L1aac2a.   v2:= 0  @length 4;
#L1aac2c.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aac30.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aac36.   v0:= temp;
#L1aac38.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aac3c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherInit_ex|](v0, v2, v3, v3, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherInit_ex:(II[B[BZ)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aac42.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]  := v2 @boolean;
#L1aac46.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.updateInternal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v8 @type (this), [|byte|][] v9, [|int|] v10, [|int|] v11, [|byte|][] v12, [|int|] v13, [|int|] v14) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.updateInternal:([BII[BII)I|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1aac58.   v7:= v13;
#L1aac5a.   v0:= v12.length;
#L1aac5c.   v6:= v0 - v13  @type int;
#L1aac60.   if v6 >= v14 then goto L1aacac;
#L1aac64.   v0:= new [|javax:crypto:ShortBufferException|];
#L1aac68.   v1:= new [|java:lang:StringBuilder|];
#L1aac6c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aac72.   v2:= "output buffer too small during update: " @type (object, string);
#L1aac76.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aac7c.   v1:= temp  @type object;
#L1aac7e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aac84.   v1:= temp  @type object;
#L1aac86.   v2:= " < " @type (object, string);
#L1aac8a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aac90.   v1:= temp  @type object;
#L1aac92.   v2:= v12.length;
#L1aac94.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aac9a.   v1:= temp  @type object;
#L1aac9c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaca2.   v1:= temp  @type object;
#L1aaca4.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v0, v1) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1aacaa.   throw v0;
#L1aacac.   v0:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.cipherCtx|]   @type object;
#L1aacb0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @type virtual;
#L1aacb6.   v0:= temp;
#L1aacb8.   v1:= v12  @type object;
#L1aacba.   v2:= v13;
#L1aacbc.   v3:= v9  @type object;
#L1aacbe.   v4:= v10;
#L1aacc0.   v5:= v11;
#L1aacc2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CipherUpdate|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CipherUpdate:(I[BI[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aacc8.   v0:= temp;
#L1aacca.   v13:= v13 + v0  @type int;
#L1aaccc.   v0:= 1  @length 4;
#L1aacce.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]  := v0 @boolean;
#L1aacd2.   v0:= v13 - v7  @type int;
#L1aacd6.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedKeySize|] ([|int|] v0) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedKeySize:(I)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedMode:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v0 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedPadding:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineDoFinal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v7 @type (this), [|byte|][] v8, [|int|] v9, [|int|] v10, [|byte|][] v11, [|int|] v12) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineDoFinal:([BII[BI)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1aace8.   if v11 != 0 then goto L1aacfc;
#L1aacec.   v0:= new [|java:lang:NullPointerException|];
#L1aacf0.   v1:= "output == null" @type (object, string);
#L1aacf4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1aacfa.   throw v0;
#L1aacfc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|](v7, v10) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aad02.   v6:= temp;
#L1aad04.   v0:= v7  @type object;
#L1aad06.   v1:= v8  @type object;
#L1aad08.   v2:= v9;
#L1aad0a.   v3:= v10;
#L1aad0c.   v4:= v11  @type object;
#L1aad0e.   v5:= v12;
#L1aad10.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.doFinalInternal|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.doFinalInternal:([BII[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aad16.   v0:= temp;
#L1aad18.   return v0;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineDoFinal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v10 @type (this), [|byte|][] v11, [|int|] v12, [|int|] v13) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineDoFinal:([BII)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1aad2c.   v9:= 0  @length 4;
#L1aad2e.   v0:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.encrypting|]   @boolean;
#L1aad32.   if v0 != 0 then goto L1aad4c;
#L1aad36.   v0:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.calledUpdate|]   @boolean;
#L1aad3a.   if v0 != 0 then goto L1aad4c;
#L1aad3e.   if v13 != 0 then goto L1aad4c;
#L1aad42.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.reset|](v10) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.reset:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aad48.   v4:= 0  @length 4;
#L1aad4a.   return v4  @type object;
#L1aad4c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|](v10, v13) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aad52.   v6:= temp;
#L1aad54.   v4:= new [|byte|][v6];
#L1aad58.   v5:= 0  @length 4;
#L1aad5a.   v0:= v10  @type object;
#L1aad5c.   v1:= v11  @type object;
#L1aad5e.   v2:= v12;
#L1aad60.   v3:= v13;
#L1aad62.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.doFinalInternal|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.doFinalInternal:([BII[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aad68.   v7:= temp;
#L1aad6a.   v0:= v4.length;
#L1aad6c.   if v7 == v0 then goto L1aad4a;
#L1aad70.   if v7 != 0 then goto L1aad8c;
#L1aad74.   v4:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L1aad78.   goto L1aad4a;
#L1aad7a.   v8:= Exception  @type object;
#L1aad7c.   v0:= new [|java:lang:RuntimeException|];
#L1aad80.   v1:= "our calculated buffer was too small" @type (object, string);
#L1aad84.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1, v8) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1aad8a.   throw v0;
#L1aad8c.   call temp:=  [|java:util:Arrays.copyOfRange|](v4, v9, v7) @signature [|Ljava/util/Arrays;.copyOfRange:([BII)[B|] @classDescriptor [|java:util:Arrays|] @type static;
#L1aad92.   v4:= temp  @type object;
#L1aad94.   goto L1aad4a;
  catch  [|javax:crypto:ShortBufferException|] @[L1aad62..L1aad68] goto L1aad7a;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineGetBlockSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineGetBlockSize:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aadb8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.blockSize|] ;
#L1aadbc.   return v0;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineGetIV|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineGetIV:()[B|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aadd0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.iv|]   @type object;
#L1aadd4.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineGetOutputSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineGetOutputSize:(I)I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aade8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aadee.   v0:= temp;
#L1aadf0.   return v0;

   }
    procedure [|java:security:AlgorithmParameters|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineGetParameters|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineGetParameters:()Ljava/security/AlgorithmParameters;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aae04.   v0:= 0  @length 4;
#L1aae06.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v3 @type (this), [|int|] v4, [|java:security:Key|] v5 @type (object), [|java:security:AlgorithmParameters|] v6 @type (object), [|java:security:SecureRandom|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInit:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aae18.   v2:= new [|javax:crypto:spec:IvParameterSpec|];
#L1aae1c.   call temp:=  [|java:security:AlgorithmParameters.getParameterSpec|](v6, v2) @signature [|Ljava/security/AlgorithmParameters;.getParameterSpec:(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;|] @classDescriptor [|java:security:AlgorithmParameters|] @type virtual;
#L1aae22.   v1:= temp  @type object;
#L1aae24.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInit|](v3, v4, v5, v1, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aae2a.   return @void ;
#L1aae2c.   v0:= Exception  @type object;
#L1aae2e.   v2:= new [|java:security:InvalidAlgorithmParameterException|];
#L1aae32.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v2, v0) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1aae38.   throw v2;
  catch  [|java:security:spec:InvalidParameterSpecException|] @[L1aae18..L1aae22] goto L1aae2c;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v2 @type (this), [|int|] v3, [|java:security:Key|] v4 @type (object), [|java:security:SecureRandom|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1aae5c.   v1:= 0  @length 4;
#L1aae5e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInitInternal|](v2, v3, v4, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInitInternal:(ILjava/security/Key;[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aae64.   return @void ;
#L1aae66.   v0:= Exception  @type object;
#L1aae68.   v1:= new [|java:lang:RuntimeException|];
#L1aae6c.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1aae72.   throw v1;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1aae5e..L1aae64] goto L1aae66;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v3 @type (this), [|int|] v4, [|java:security:Key|] v5 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v6 @type (object), [|java:security:SecureRandom|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aae94.   v2:= instanceof @varname v6 @type [|javax:crypto:spec:IvParameterSpec|];
#L1aae98.   if v2 == 0 then goto L1aaeb2;
#L1aae9c.   v1:= v6  @type object;
#L1aae9e.   v1:= ([|javax:crypto:spec:IvParameterSpec|])v1;
#L1aaea2.   call temp:=  [|javax:crypto:spec:IvParameterSpec.getIV|](v1) @signature [|Ljavax/crypto/spec/IvParameterSpec;.getIV:()[B|] @classDescriptor [|javax:crypto:spec:IvParameterSpec|] @type virtual;
#L1aaea8.   v0:= temp  @type object;
#L1aaeaa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineInitInternal|](v3, v4, v5, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineInitInternal:(ILjava/security/Key;[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1aaeb0.   return @void ;
#L1aaeb2.   v0:= 0  @length 4;
#L1aaeb4.   goto L1aaeaa;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineSetMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineSetMode:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1aaec8.   v3:= @@[|java:util:Locale.US|]   @type object;
#L1aaecc.   call temp:=  [|java:lang:String.toUpperCase|](v6, v3) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aaed2.   v3:= temp  @type object;
#L1aaed4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.valueOf|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.valueOf:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type static;
#L1aaeda.   v1:= temp  @type object;
#L1aaedc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedMode|](v5, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedMode:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aaee2.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.mode|]  := v1 @type object;
#L1aaee6.   return @void ;
#L1aaee8.   v0:= Exception  @type object;
#L1aaeea.   v2:= new [|java:security:NoSuchAlgorithmException|];
#L1aaeee.   v3:= new [|java:lang:StringBuilder|];
#L1aaef2.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aaef8.   v4:= "No such mode: " @type (object, string);
#L1aaefc.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf02.   v3:= temp  @type object;
#L1aaf04.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf0a.   v3:= temp  @type object;
#L1aaf0c.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf12.   v3:= temp  @type object;
#L1aaf14.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v2, v3) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1aaf1a.   call temp:=  [|java:security:NoSuchAlgorithmException.initCause|](v2, v0) @signature [|Ljava/security/NoSuchAlgorithmException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type virtual;
#L1aaf20.   throw v2;
  catch  [|java:lang:IllegalArgumentException|] @[L1aaec8..L1aaeda] goto L1aaee8;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineSetPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v6 @type (this), [|java:lang:String|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineSetPadding:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1aaf44.   v4:= @@[|java:util:Locale.US|]   @type object;
#L1aaf48.   call temp:=  [|java:lang:String.toUpperCase|](v7, v4) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1aaf4e.   v3:= temp  @type object;
#L1aaf50.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.valueOf|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.valueOf:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type static;
#L1aaf56.   v2:= temp  @type object;
#L1aaf58.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.checkSupportedPadding|](v6, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.checkSupportedPadding:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aaf5e.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.padding|]  := v2 @type object;
#L1aaf62.   return @void ;
#L1aaf64.   v0:= Exception  @type object;
#L1aaf66.   v1:= new [|javax:crypto:NoSuchPaddingException|];
#L1aaf6a.   v4:= new [|java:lang:StringBuilder|];
#L1aaf6e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1aaf74.   v5:= "No such padding: " @type (object, string);
#L1aaf78.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf7e.   v4:= temp  @type object;
#L1aaf80.   call temp:=  [|java:lang:StringBuilder.append|](v4, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf86.   v4:= temp  @type object;
#L1aaf88.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1aaf8e.   v4:= temp  @type object;
#L1aaf90.   call temp:=  [|javax:crypto:NoSuchPaddingException.<init>|](v1, v4) @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type direct;
#L1aaf96.   call temp:=  [|javax:crypto:NoSuchPaddingException.initCause|](v1, v0) @signature [|Ljavax/crypto/NoSuchPaddingException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type virtual;
#L1aaf9c.   throw v1;
  catch  [|java:lang:IllegalArgumentException|] @[L1aaf50..L1aaf56] goto L1aaf64;

   }
    procedure [|java:security:Key|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineUnwrap|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v6 @type (this), [|byte|][] v7, [|java:lang:String|] v8 @type (object), [|int|] v9) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineUnwrap:([BLjava/lang/String;I)Ljava/security/Key;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1aafc0.   v3:= 0  @length 4;
#L1aafc2.   v4:= v7.length;
#L1aafc4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineDoFinal|](v6, v7, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineDoFinal:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1aafca.   v1:= temp  @type object;
#L1aafcc.   v3:= 1  @length 4;
#L1aafce.   if v9 != v3 then goto L1aafee;
#L1aafd2.   call temp:=  [|java:security:KeyFactory.getInstance|](v8) @signature [|Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;|] @classDescriptor [|java:security:KeyFactory|] @type static;
#L1aafd8.   v2:= temp  @type object;
#L1aafda.   v3:= new [|java:security:spec:X509EncodedKeySpec|];
#L1aafde.   call temp:=  [|java:security:spec:X509EncodedKeySpec.<init>|](v3, v1) @signature [|Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type direct;
#L1aafe4.   call temp:=  [|java:security:KeyFactory.generatePublic|](v2, v3) @signature [|Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @classDescriptor [|java:security:KeyFactory|] @type virtual;
#L1aafea.   v3:= temp  @type object;
#L1aafec.   return v3  @type object;
#L1aafee.   v3:= 2  @length 4;
#L1aaff0.   if v9 != v3 then goto L1ab010;
#L1aaff4.   call temp:=  [|java:security:KeyFactory.getInstance|](v8) @signature [|Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;|] @classDescriptor [|java:security:KeyFactory|] @type static;
#L1aaffa.   v2:= temp  @type object;
#L1aaffc.   v3:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1ab000.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v3, v1) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1ab006.   call temp:=  [|java:security:KeyFactory.generatePrivate|](v2, v3) @signature [|Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @classDescriptor [|java:security:KeyFactory|] @type virtual;
#L1ab00c.   v3:= temp  @type object;
#L1ab00e.   goto L1aafec;
#L1ab010.   v3:= 3  @length 4;
#L1ab012.   if v9 != v3 then goto L1ab030;
#L1ab016.   v3:= new [|javax:crypto:spec:SecretKeySpec|];
#L1ab01a.   call temp:=  [|javax:crypto:spec:SecretKeySpec.<init>|](v3, v1, v8) @signature [|Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V|] @classDescriptor [|javax:crypto:spec:SecretKeySpec|] @type direct;
#L1ab020.   goto L1aafec;
#L1ab022.   v0:= Exception  @type object;
#L1ab024.   v3:= new [|java:security:InvalidKeyException|];
#L1ab028.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ab02e.   throw v3;
#L1ab030.   v3:= new [|java:lang:UnsupportedOperationException|];
#L1ab034.   v4:= new [|java:lang:StringBuilder|];
#L1ab038.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab03e.   v5:= "wrappedKeyType == " @type (object, string);
#L1ab042.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab048.   v4:= temp  @type object;
#L1ab04a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab050.   v4:= temp  @type object;
#L1ab052.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab058.   v4:= temp  @type object;
#L1ab05a.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v3, v4) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L1ab060.   throw v3;
#L1ab062.   v0:= Exception  @type object;
#L1ab064.   v3:= new [|java:security:InvalidKeyException|];
#L1ab068.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ab06e.   throw v3;
#L1ab070.   v0:= Exception  @type object;
#L1ab072.   v3:= new [|java:security:InvalidKeyException|];
#L1ab076.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ab07c.   throw v3;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1aafc2..L1ab020] goto L1ab022;
  catch  [|javax:crypto:BadPaddingException|] @[L1aafc2..L1ab020] goto L1ab062;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1aafc2..L1ab020] goto L1ab070;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1ab030..L1ab062] goto L1ab022;
  catch  [|javax:crypto:BadPaddingException|] @[L1ab030..L1ab062] goto L1ab062;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1ab030..L1ab062] goto L1ab070;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v7 @type (this), [|byte|][] v8, [|int|] v9, [|int|] v10, [|byte|][] v11, [|int|] v12) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineUpdate:([BII[BI)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ab0ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|](v7, v10) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab0b2.   v6:= temp;
#L1ab0b4.   v0:= v7  @type object;
#L1ab0b6.   v1:= v8  @type object;
#L1ab0b8.   v2:= v9;
#L1ab0ba.   v3:= v10;
#L1ab0bc.   v4:= v11  @type object;
#L1ab0be.   v5:= v12;
#L1ab0c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.updateInternal|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.updateInternal:([BII[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab0c6.   v0:= temp;
#L1ab0c8.   return v0;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v10 @type (this), [|byte|][] v11, [|int|] v12, [|int|] v13) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineUpdate:([BII)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1ab0dc.   v9:= 0  @length 4;
#L1ab0de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getOutputSize|](v10, v13) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getOutputSize:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab0e4.   v6:= temp;
#L1ab0e6.   if v6 <= 0 then goto L1ab108;
#L1ab0ea.   v4:= new [|byte|][v6];
#L1ab0ee.   v5:= 0  @length 4;
#L1ab0f0.   v0:= v10  @type object;
#L1ab0f2.   v1:= v11  @type object;
#L1ab0f4.   v2:= v12;
#L1ab0f6.   v3:= v13;
#L1ab0f8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.updateInternal|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.updateInternal:([BII[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab0fe.   v7:= temp;
#L1ab100.   v0:= v4.length;
#L1ab102.   if v0 != v7 then goto L1ab142;
#L1ab106.   return v4  @type object;
#L1ab108.   v4:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L1ab10c.   goto L1ab0ee;
#L1ab10e.   v8:= Exception  @type object;
#L1ab110.   v0:= new [|java:lang:RuntimeException|];
#L1ab114.   v1:= new [|java:lang:StringBuilder|];
#L1ab118.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab11e.   v2:= "calculated buffer size was wrong: " @type (object, string);
#L1ab122.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab128.   v1:= temp  @type object;
#L1ab12a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab130.   v1:= temp  @type object;
#L1ab132.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab138.   v1:= temp  @type object;
#L1ab13a.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1ab140.   throw v0;
#L1ab142.   if v7 != 0 then goto L1ab14c;
#L1ab146.   v4:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L1ab14a.   goto L1ab106;
#L1ab14c.   call temp:=  [|java:util:Arrays.copyOfRange|](v4, v9, v7) @signature [|Ljava/util/Arrays;.copyOfRange:([BII)[B|] @classDescriptor [|java:util:Arrays|] @type static;
#L1ab152.   v4:= temp  @type object;
#L1ab154.   goto L1ab106;
  catch  [|javax:crypto:ShortBufferException|] @[L1ab0f8..L1ab0fe] goto L1ab10e;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineWrap|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v5 @type (this), [|java:security:Key|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineWrap:(Ljava/security/Key;)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ab178.   call temp:=  [|java:security:Key.getEncoded|](v6) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1ab17e.   v1:= temp  @type object;
#L1ab180.   v3:= 0  @length 4;
#L1ab182.   v4:= v1.length;
#L1ab184.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.engineDoFinal|](v5, v1, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.engineDoFinal:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type virtual;
#L1ab18a.   v3:= temp  @type object;
#L1ab18c.   return v3  @type object;
#L1ab18e.   v0:= Exception  @type object;
#L1ab190.   v2:= new [|javax:crypto:IllegalBlockSizeException|];
#L1ab194.   call temp:=  [|javax:crypto:IllegalBlockSizeException.<init>|](v2) @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:()V|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type direct;
#L1ab19a.   call temp:=  [|javax:crypto:IllegalBlockSizeException.initCause|](v2, v0) @signature [|Ljavax/crypto/IllegalBlockSizeException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L1ab1a0.   throw v2;
  catch  [|javax:crypto:BadPaddingException|] @[L1ab178..L1ab18a] goto L1ab18e;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getCipherBlockSize|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getCipherBlockSize:()I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.getCipherName|] ([|int|] v0, [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.getCipherName:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)Ljava/lang/String;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.supportsVariableSizeKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.supportsVariableSizeKey:()Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab1c4.   v0:= 0  @length 4;
#L1ab1c6.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.AES_BLOCK_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L1ab1d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab1de.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.checkSupportedKeySize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v3 @type (this), [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.checkSupportedKeySize:(I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab1f0.   goto L1ab238;
#L1ab1f6.   v0:= new [|java:security:InvalidKeyException|];
#L1ab1fa.   v1:= new [|java:lang:StringBuilder|];
#L1ab1fe.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab204.   v2:= "Unsupported key size: " @type (object, string);
#L1ab208.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab20e.   v1:= temp  @type object;
#L1ab210.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab216.   v1:= temp  @type object;
#L1ab218.   v2:= " bytes" @type (object, string);
#L1ab21c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab222.   v1:= temp  @type object;
#L1ab224.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab22a.   v1:= temp  @type object;
#L1ab22c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ab232.   throw v0;
#L1ab234.   return @void ;
#L1ab236.   
#L1ab238.   switch v4
                 | 16 => goto L1ab234
                 | 24 => goto L1ab234
                 | 32 => goto L1ab234
                 | => goto L1ab1f6;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.checkSupportedMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v3 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.checkSupportedMode:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab264.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1ab268.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab26e.   v1:= temp;
#L1ab270.   v0:= v0[v1];
#L1ab274.   goto L1ab2b8;
#L1ab27a.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L1ab27e.   v1:= new [|java:lang:StringBuilder|];
#L1ab282.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab288.   v2:= "Unsupported mode " @type (object, string);
#L1ab28c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab292.   v1:= temp  @type object;
#L1ab294.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.toString|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab29a.   v2:= temp  @type object;
#L1ab29c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab2a2.   v1:= temp  @type object;
#L1ab2a4.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab2aa.   v1:= temp  @type object;
#L1ab2ac.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1ab2b2.   throw v0;
#L1ab2b4.   return @void ;
#L1ab2b6.   
#L1ab2b8.   switch  v0
                 | 1 => goto L1ab2b4
                 | 2 => goto L1ab2b4
                 | 3 => goto L1ab2b4
                 | 4 => goto L1ab2b4
                 | 5 => goto L1ab2b4
                 | 6 => goto L1ab2b4
                 | 7 => goto L1ab2b4
                 | 8 => goto L1ab2b4
                 | => goto L1ab27a;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.checkSupportedPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v3 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.checkSupportedPadding:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab2f0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|]   @type object;
#L1ab2f4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ordinal|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1ab2fa.   v1:= temp;
#L1ab2fc.   v0:= v0[v1];
#L1ab300.   goto L1ab344;
#L1ab306.   v0:= new [|javax:crypto:NoSuchPaddingException|];
#L1ab30a.   v1:= new [|java:lang:StringBuilder|];
#L1ab30e.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab314.   v2:= "Unsupported padding " @type (object, string);
#L1ab318.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab31e.   v1:= temp  @type object;
#L1ab320.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.toString|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1ab326.   v2:= temp  @type object;
#L1ab328.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab32e.   v1:= temp  @type object;
#L1ab330.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab336.   v1:= temp  @type object;
#L1ab338.   call temp:=  [|javax:crypto:NoSuchPaddingException.<init>|](v0, v1) @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type direct;
#L1ab33e.   throw v0;
#L1ab340.   return @void ;
#L1ab342.   
#L1ab344.   switch  v0
                 | 1 => goto L1ab340
                 | 2 => goto L1ab340
                 | => goto L1ab306;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.getCipherBlockSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.getCipherBlockSize:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab364.   v0:= 16  @length 16;
#L1ab368.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.getCipherName|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] v3 @type (this), [|int|] v4, [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.getCipherName:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab37c.   v0:= new [|java:lang:StringBuilder|];
#L1ab380.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab386.   v1:= "aes-" @type (object, string);
#L1ab38a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab390.   v0:= temp  @type object;
#L1ab392.   v1:= v4 * 8;
#L1ab396.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab39c.   v0:= temp  @type object;
#L1ab39e.   v1:= "-" @type (object, string);
#L1ab3a2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab3a8.   v0:= temp  @type object;
#L1ab3aa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.toString|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab3b0.   v1:= temp  @type object;
#L1ab3b2.   v2:= @@[|java:util:Locale.US|]   @type object;
#L1ab3b6.   call temp:=  [|java:lang:String.toLowerCase|](v1, v2) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ab3bc.   v1:= temp  @type object;
#L1ab3be.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab3c4.   v0:= temp  @type object;
#L1ab3c6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab3cc.   v0:= temp  @type object;
#L1ab3ce.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab3e0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|]   @type object;
#L1ab3e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @type direct;
#L1ab3ea.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CBC$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab3fc.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab400.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] @type direct;
#L1ab406.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CBC$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab418.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab41c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC|] @type direct;
#L1ab422.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab434.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|]   @type object;
#L1ab438.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @type direct;
#L1ab43e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CFB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab450.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab454.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] @type direct;
#L1ab45a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CFB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab46c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab470.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB|] @type direct;
#L1ab476.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CTR;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab488.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTR|]   @type object;
#L1ab48c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @type direct;
#L1ab492.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CTR$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab4a4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab4a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CTR;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] @type direct;
#L1ab4ae.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CTR$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab4c0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab4c4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$CTR;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR|] @type direct;
#L1ab4ca.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab4dc.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1ab4e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @type direct;
#L1ab4e6.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$ECB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab4f8.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab4fc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] @type direct;
#L1ab502.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$ECB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab514.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab518.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB|] @type direct;
#L1ab51e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab530.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|]   @type object;
#L1ab534.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES|] @type direct;
#L1ab53a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$OFB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab54c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab550.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] @type direct;
#L1ab556.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$OFB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab568.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab56c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$AES$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB|] @type direct;
#L1ab572.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1ab584.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.<init>|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.<init>:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab58a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.checkSupportedKeySize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v0 @type (this), [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.checkSupportedKeySize:(I)V|] @Access PROTECTED {
      local temp ;
      
#L1ab59c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.checkSupportedMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.checkSupportedMode:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1ab5b0.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L1ab5b4.   v1:= "ARC4 does not support modes" @type (object, string);
#L1ab5b8.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1ab5be.   throw v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.checkSupportedPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.checkSupportedPadding:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1ab5d0.   v0:= new [|javax:crypto:NoSuchPaddingException|];
#L1ab5d4.   v1:= "ARC4 does not support padding" @type (object, string);
#L1ab5d8.   call temp:=  [|javax:crypto:NoSuchPaddingException.<init>|](v0, v1) @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type direct;
#L1ab5de.   throw v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.getCipherBlockSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.getCipherBlockSize:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab5f0.   v0:= 0  @length 4;
#L1ab5f2.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.getCipherName|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v1 @type (this), [|int|] v2, [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.getCipherName:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab604.   v0:= "rc4" @type (object, string);
#L1ab608.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4.supportsVariableSizeKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$ARC4;.supportsVariableSizeKey:()Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab61c.   v0:= 1  @length 4;
#L1ab61e.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.DES_BLOCK_SIZE|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab630.   v0:= 8  @length 16;
#L1ab634.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.DES_BLOCK_SIZE|] := v0;
#L1ab638.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1ab64c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher|] @type direct;
#L1ab652.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.checkSupportedKeySize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.checkSupportedKeySize:(I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1ab664.   v0:= 16  @length 16;
#L1ab668.   if v3 == v0 then goto L1ab684;
#L1ab66c.   v0:= 24  @length 16;
#L1ab670.   if v3 == v0 then goto L1ab684;
#L1ab674.   v0:= new [|java:security:InvalidKeyException|];
#L1ab678.   v1:= "key size must be 128 or 192 bits" @type (object, string);
#L1ab67c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ab682.   throw v0;
#L1ab684.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.checkSupportedMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v3 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.checkSupportedMode:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab698.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Mode|]   @type object;
#L1ab69c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ordinal|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab6a2.   v1:= temp;
#L1ab6a4.   v0:= v0[v1];
#L1ab6a8.   goto L1ab6ec;
#L1ab6ae.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L1ab6b2.   v1:= new [|java:lang:StringBuilder|];
#L1ab6b6.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab6bc.   v2:= "Unsupported mode " @type (object, string);
#L1ab6c0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab6c6.   v1:= temp  @type object;
#L1ab6c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.toString|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab6ce.   v2:= temp  @type object;
#L1ab6d0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab6d6.   v1:= temp  @type object;
#L1ab6d8.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab6de.   v1:= temp  @type object;
#L1ab6e0.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v1) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1ab6e6.   throw v0;
#L1ab6e8.   return @void ;
#L1ab6ea.   
#L1ab6ec.   switch  v0
                 | 1 => goto L1ab6e8
                 | 2 => goto L1ab6e8
                 | 3 => goto L1ab6e8
                 | 4 => goto L1ab6e8
                 | 5 => goto L1ab6ae
                 | 6 => goto L1ab6ae
                 | 7 => goto L1ab6e8
                 | 8 => goto L1ab6e8
                 | => goto L1ab6ae;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.checkSupportedPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v3 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.checkSupportedPadding:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ab724.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$1.$SwitchMap$org$apache$harmony$xnet$provider$jsse$OpenSSLCipher$Padding|]   @type object;
#L1ab728.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ordinal|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.ordinal:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1ab72e.   v1:= temp;
#L1ab730.   v0:= v0[v1];
#L1ab734.   goto L1ab778;
#L1ab73a.   v0:= new [|javax:crypto:NoSuchPaddingException|];
#L1ab73e.   v1:= new [|java:lang:StringBuilder|];
#L1ab742.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab748.   v2:= "Unsupported padding " @type (object, string);
#L1ab74c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab752.   v1:= temp  @type object;
#L1ab754.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.toString|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type virtual;
#L1ab75a.   v2:= temp  @type object;
#L1ab75c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab762.   v1:= temp  @type object;
#L1ab764.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab76a.   v1:= temp  @type object;
#L1ab76c.   call temp:=  [|javax:crypto:NoSuchPaddingException.<init>|](v0, v1) @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type direct;
#L1ab772.   throw v0;
#L1ab774.   return @void ;
#L1ab776.   
#L1ab778.   switch  v0
                 | 1 => goto L1ab774
                 | 2 => goto L1ab774
                 | => goto L1ab73a;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.getCipherBlockSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.getCipherBlockSize:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ab798.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.DES_BLOCK_SIZE|] ;
#L1ab79c.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.getCipherName|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] v4 @type (this), [|int|] v5, [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.getCipherName:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;)Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1ab7b0.   v1:= 16  @length 16;
#L1ab7b4.   if v5 != v1 then goto L1ab7c6;
#L1ab7b8.   v0:= "des-ede" @type (object, string);
#L1ab7bc.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1ab7c0.   if v6 != v1 then goto L1ab7cc;
#L1ab7c4.   return v0  @type object;
#L1ab7c6.   v0:= "des-ede3" @type (object, string);
#L1ab7ca.   goto L1ab7bc;
#L1ab7cc.   v1:= new [|java:lang:StringBuilder|];
#L1ab7d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ab7d6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab7dc.   v1:= temp  @type object;
#L1ab7de.   v2:= "-" @type (object, string);
#L1ab7e2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab7e8.   v1:= temp  @type object;
#L1ab7ea.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.toString|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type virtual;
#L1ab7f0.   v2:= temp  @type object;
#L1ab7f2.   v3:= @@[|java:util:Locale.US|]   @type object;
#L1ab7f6.   call temp:=  [|java:lang:String.toLowerCase|](v2, v3) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ab7fc.   v2:= temp  @type object;
#L1ab7fe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab804.   v1:= temp  @type object;
#L1ab806.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ab80c.   v0:= temp  @type object;
#L1ab80e.   goto L1ab7c4;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab820.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|]   @type object;
#L1ab824.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @type direct;
#L1ab82a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CBC$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab83c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab840.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] @type direct;
#L1ab846.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CBC$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab858.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab85c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CBC;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC|] @type direct;
#L1ab862.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab874.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|]   @type object;
#L1ab878.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @type direct;
#L1ab87e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CFB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab890.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab894.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] @type direct;
#L1ab89a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CFB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab8ac.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab8b0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$CFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB|] @type direct;
#L1ab8b6.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab8c8.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1ab8cc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @type direct;
#L1ab8d2.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$ECB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab8e4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab8e8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] @type direct;
#L1ab8ee.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$ECB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab900.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab904.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$ECB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB|] @type direct;
#L1ab90a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab91c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|]   @type object;
#L1ab920.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE.<init>|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE|] @type direct;
#L1ab926.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$NoPadding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$NoPadding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$NoPadding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$NoPadding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$OFB$NoPadding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab938.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1ab93c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] @type direct;
#L1ab942.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$PKCS5Padding|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$PKCS5Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$PKCS5Padding|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$PKCS5Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$OFB$PKCS5Padding;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ab954.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1ab958.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$DESEDE$OFB;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB|] @type direct;
#L1ab95e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|][] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB1|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB128|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB8|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTR|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB128|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB64|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.PCBC|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1ab970.   v7:= 4  @length 4;
#L1ab972.   v6:= 3  @length 4;
#L1ab974.   v5:= 2  @length 4;
#L1ab976.   v4:= 1  @length 4;
#L1ab978.   v3:= 0  @length 4;
#L1ab97a.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab97e.   v1:= "CBC" @type (object, string);
#L1ab982.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab988.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|] := v0  @type object;
#L1ab98c.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab990.   v1:= "CFB" @type (object, string);
#L1ab994.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab99a.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|] := v0  @type object;
#L1ab99e.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab9a2.   v1:= "CFB1" @type (object, string);
#L1ab9a6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab9ac.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB1|] := v0  @type object;
#L1ab9b0.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab9b4.   v1:= "CFB8" @type (object, string);
#L1ab9b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab9be.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB8|] := v0  @type object;
#L1ab9c2.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab9c6.   v1:= "CFB128" @type (object, string);
#L1ab9ca.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab9d0.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB128|] := v0  @type object;
#L1ab9d4.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab9d8.   v1:= "CTR" @type (object, string);
#L1ab9dc.   v2:= 5  @length 4;
#L1ab9de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab9e4.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTR|] := v0  @type object;
#L1ab9e8.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1ab9ec.   v1:= "CTS" @type (object, string);
#L1ab9f0.   v2:= 6  @length 4;
#L1ab9f2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1ab9f8.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTS|] := v0  @type object;
#L1ab9fc.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1aba00.   v1:= "ECB" @type (object, string);
#L1aba04.   v2:= 7  @length 4;
#L1aba06.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1aba0c.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|] := v0  @type object;
#L1aba10.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1aba14.   v1:= "OFB" @type (object, string);
#L1aba18.   v2:= 8  @length 16;
#L1aba1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1aba22.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|] := v0  @type object;
#L1aba26.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1aba2a.   v1:= "OFB64" @type (object, string);
#L1aba2e.   v2:= 9  @length 16;
#L1aba32.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1aba38.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB64|] := v0  @type object;
#L1aba3c.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1aba40.   v1:= "OFB128" @type (object, string);
#L1aba44.   v2:= 10  @length 16;
#L1aba48.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1aba4e.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB128|] := v0  @type object;
#L1aba52.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1aba56.   v1:= "PCBC" @type (object, string);
#L1aba5a.   v2:= 11  @length 16;
#L1aba5e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @type direct;
#L1aba64.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.PCBC|] := v0  @type object;
#L1aba68.   v0:= 12  @length 16;
#L1aba6c.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|][v0];
#L1aba70.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CBC|]   @type object;
#L1aba74.   v0[v3]:= v1  @type object;
#L1aba78.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB|]   @type object;
#L1aba7c.   v0[v4]:= v1  @type object;
#L1aba80.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB1|]   @type object;
#L1aba84.   v0[v5]:= v1  @type object;
#L1aba88.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB8|]   @type object;
#L1aba8c.   v0[v6]:= v1  @type object;
#L1aba90.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CFB128|]   @type object;
#L1aba94.   v0[v7]:= v1  @type object;
#L1aba98.   v1:= 5  @length 4;
#L1aba9a.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTR|]   @type object;
#L1aba9e.   v0[v1]:= v2  @type object;
#L1abaa2.   v1:= 6  @length 4;
#L1abaa4.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.CTS|]   @type object;
#L1abaa8.   v0[v1]:= v2  @type object;
#L1abaac.   v1:= 7  @length 4;
#L1abaae.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.ECB|]   @type object;
#L1abab2.   v0[v1]:= v2  @type object;
#L1abab6.   v1:= 8  @length 16;
#L1ababa.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB|]   @type object;
#L1ababe.   v0[v1]:= v2  @type object;
#L1abac2.   v1:= 9  @length 16;
#L1abac6.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB64|]   @type object;
#L1abaca.   v0[v1]:= v2  @type object;
#L1abace.   v1:= 10  @length 16;
#L1abad2.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.OFB128|]   @type object;
#L1abad6.   v0[v1]:= v2  @type object;
#L1abada.   v1:= 11  @length 16;
#L1abade.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.PCBC|]   @type object;
#L1abae2.   v0[v1]:= v2  @type object;
#L1abae6.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.$VALUES|] := v0  @type object;
#L1abaea.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1abafc.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L1abb02.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.valueOf:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1abb14.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|];
#L1abb18.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L1abb1e.   v0:= temp  @type object;
#L1abb20.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|])v0;
#L1abb24.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.values|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.values:()[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1abb38.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode.$VALUES|]   @type object;
#L1abb3c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode[].clone|](v0) @signature [|[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Mode;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode[]|] @type virtual;
#L1abb42.   v0:= temp  @type object;
#L1abb44.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Mode|][])v0;
#L1abb48.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|][] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ISO10126PADDING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1abb5c.   v4:= 2  @length 4;
#L1abb5e.   v3:= 1  @length 4;
#L1abb60.   v2:= 0  @length 4;
#L1abb62.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|];
#L1abb66.   v1:= "NOPADDING" @type (object, string);
#L1abb6a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type direct;
#L1abb70.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|] := v0  @type object;
#L1abb74.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|];
#L1abb78.   v1:= "PKCS5PADDING" @type (object, string);
#L1abb7c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.<init>|](v0, v1, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type direct;
#L1abb82.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|] := v0  @type object;
#L1abb86.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|];
#L1abb8a.   v1:= "ISO10126PADDING" @type (object, string);
#L1abb8e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.<init>|](v0, v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @type direct;
#L1abb94.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ISO10126PADDING|] := v0  @type object;
#L1abb98.   v0:= 3  @length 4;
#L1abb9a.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|][v0];
#L1abb9e.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.NOPADDING|]   @type object;
#L1abba2.   v0[v2]:= v1  @type object;
#L1abba6.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.PKCS5PADDING|]   @type object;
#L1abbaa.   v0[v3]:= v1  @type object;
#L1abbae.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.ISO10126PADDING|]   @type object;
#L1abbb2.   v0[v4]:= v1  @type object;
#L1abbb6.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.$VALUES|] := v0  @type object;
#L1abbba.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1abbcc.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L1abbd2.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.valueOf:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1abbe4.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|];
#L1abbe8.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L1abbee.   v0:= temp  @type object;
#L1abbf0.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|])v0;
#L1abbf4.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.values|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.values:()[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1abc08.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding.$VALUES|]   @type object;
#L1abc0c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding[].clone|](v0) @signature [|[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipher$Padding;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding[]|] @type virtual;
#L1abc12.   v0:= temp  @type object;
#L1abc14.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$Padding|][])v0;
#L1abc18.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|]  @type class @AccessFlag   {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.context|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1abc2c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1abc32.   if v3 != 0 then goto L1abc46;
#L1abc36.   v0:= new [|java:lang:NullPointerException|];
#L1abc3a.   v1:= "ctx == 0" @type (object, string);
#L1abc3e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1abc44.   throw v0;
#L1abc46.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.context|]  := v3;
#L1abc4a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1abc5c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.context|] ;
#L1abc60.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_CIPHER_CTX_cleanup|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_CIPHER_CTX_cleanup:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1abc66.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1abc6c.   return @void ;
#L1abc6e.   v0:= Exception  @type object;
#L1abc70.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1abc76.   throw v0;
  catch  [|any|] @[L1abc5c..L1abc66] goto L1abc6e;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.getContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherContext;.getContext:()I|] @Access  {
      local temp ;
        v0;
      
#L1abc94.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherContext.context|] ;
#L1abc98.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|javax:crypto:CipherSpi|] {
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.inputTooLarge|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.<init>:(I)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1abcac.   call temp:=  [|javax:crypto:CipherSpi.<init>|](v1) @signature [|Ljavax/crypto/CipherSpi;.<init>:()V|] @classDescriptor [|javax:crypto:CipherSpi|] @type direct;
#L1abcb2.   v0:= 1  @length 4;
#L1abcb4.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|]  := v0;
#L1abcb8.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|]  := v2;
#L1abcbc.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInitInternal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v5 @type (this), [|int|] v6, [|java:security:Key|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInitInternal:(ILjava/security/Key;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1abcd0.   v4:= 0  @length 4;
#L1abcd2.   v3:= 1  @length 4;
#L1abcd4.   if v6 == v3 then goto L1abcde;
#L1abcd8.   v2:= 3  @length 4;
#L1abcda.   if v6 != v2 then goto L1abd22;
#L1abcde.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]  := v3 @boolean;
#L1abce2.   v2:= instanceof @varname v7 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1abce6.   if v2 == 0 then goto L1abd66;
#L1abcea.   v0:= v7  @type object;
#L1abcec.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|])v0;
#L1abcf0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]  := v3 @boolean;
#L1abcf4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1abcfa.   v2:= temp  @type object;
#L1abcfc.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]  := v2 @type object;
#L1abd00.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1abd04.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1abd0a.   v2:= temp;
#L1abd0c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_size|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1abd12.   v2:= temp;
#L1abd14.   v2:= new [|byte|][v2];
#L1abd18.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]  := v2 @type object;
#L1abd1c.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.inputTooLarge|]  := v4 @boolean;
#L1abd20.   return @void ;
#L1abd22.   v2:= 2  @length 4;
#L1abd24.   if v6 == v2 then goto L1abd2e;
#L1abd28.   v2:= 4  @length 4;
#L1abd2a.   if v6 != v2 then goto L1abd34;
#L1abd2e.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]  := v4 @boolean;
#L1abd32.   goto L1abce2;
#L1abd34.   v2:= new [|java:security:InvalidParameterException|];
#L1abd38.   v3:= new [|java:lang:StringBuilder|];
#L1abd3c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1abd42.   v4:= "Unsupported opmode " @type (object, string);
#L1abd46.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abd4c.   v3:= temp  @type object;
#L1abd4e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abd54.   v3:= temp  @type object;
#L1abd56.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abd5c.   v3:= temp  @type object;
#L1abd5e.   call temp:=  [|java:security:InvalidParameterException.<init>|](v2, v3) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1abd64.   throw v2;
#L1abd66.   v2:= instanceof @varname v7 @type [|java:security:interfaces:RSAPrivateCrtKey|];
#L1abd6a.   if v2 == 0 then goto L1abd86;
#L1abd6e.   v0:= v7  @type object;
#L1abd70.   v0:= ([|java:security:interfaces:RSAPrivateCrtKey|])v0;
#L1abd74.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]  := v3 @boolean;
#L1abd78.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getInstance|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getInstance:(Ljava/security/interfaces/RSAPrivateCrtKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type static;
#L1abd7e.   v2:= temp  @type object;
#L1abd80.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]  := v2 @type object;
#L1abd84.   goto L1abd00;
#L1abd86.   v2:= instanceof @varname v7 @type [|java:security:interfaces:RSAPrivateKey|];
#L1abd8a.   if v2 == 0 then goto L1abda6;
#L1abd8e.   v0:= v7  @type object;
#L1abd90.   v0:= ([|java:security:interfaces:RSAPrivateKey|])v0;
#L1abd94.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]  := v3 @boolean;
#L1abd98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Ljava/security/interfaces/RSAPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1abd9e.   v2:= temp  @type object;
#L1abda0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]  := v2 @type object;
#L1abda4.   goto L1abd00;
#L1abda6.   v2:= instanceof @varname v7 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1abdaa.   if v2 == 0 then goto L1abdc6;
#L1abdae.   v1:= v7  @type object;
#L1abdb0.   v1:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|])v1;
#L1abdb4.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]  := v4 @boolean;
#L1abdb8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getOpenSSLKey|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type virtual;
#L1abdbe.   v2:= temp  @type object;
#L1abdc0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]  := v2 @type object;
#L1abdc4.   goto L1abd00;
#L1abdc6.   v2:= instanceof @varname v7 @type [|java:security:interfaces:RSAPublicKey|];
#L1abdca.   if v2 == 0 then goto L1abde6;
#L1abdce.   v1:= v7  @type object;
#L1abdd0.   v1:= ([|java:security:interfaces:RSAPublicKey|])v1;
#L1abdd4.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]  := v4 @boolean;
#L1abdd8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getInstance|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getInstance:(Ljava/security/interfaces/RSAPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type static;
#L1abdde.   v2:= temp  @type object;
#L1abde0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]  := v2 @type object;
#L1abde4.   goto L1abd00;
#L1abde6.   v2:= new [|java:security:InvalidKeyException|];
#L1abdea.   v3:= "Need RSA private or public key" @type (object, string);
#L1abdee.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1abdf4.   throw v2;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.keySizeBytes|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.keySizeBytes:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1abe08.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1abe0c.   if v0 != 0 then goto L1abe20;
#L1abe10.   v0:= new [|java:lang:IllegalStateException|];
#L1abe14.   v1:= "cipher is not initialized" @type (object, string);
#L1abe18.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1abe1e.   throw v0;
#L1abe20.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1abe24.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1abe2a.   v0:= temp;
#L1abe2c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1abe32.   v0:= temp;
#L1abe34.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.paddedBlockSizeBytes|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.paddedBlockSizeBytes:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1abe48.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.keySizeBytes|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.keySizeBytes:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1abe4e.   v0:= temp;
#L1abe50.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1abe54.   v2:= 1  @length 4;
#L1abe56.   if v1 != v2 then goto L1abe62;
#L1abe5a.   v0:= v0 + -1;
#L1abe5e.   v0:= v0 + -10;
#L1abe62.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineDoFinal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8, [|byte|][] v9, [|int|] v10) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineDoFinal:([BII[BI)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1abe74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineDoFinal|](v5, v6, v7, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineDoFinal:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type virtual;
#L1abe7a.   v0:= temp  @type object;
#L1abe7c.   v2:= v0.length;
#L1abe7e.   v1:= v10 + v2  @type int;
#L1abe82.   v2:= v9.length;
#L1abe84.   if v1 <= v2 then goto L1abed0;
#L1abe88.   v2:= new [|javax:crypto:ShortBufferException|];
#L1abe8c.   v3:= new [|java:lang:StringBuilder|];
#L1abe90.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1abe96.   v4:= "output buffer is too small " @type (object, string);
#L1abe9a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abea0.   v3:= temp  @type object;
#L1abea2.   v4:= v9.length;
#L1abea4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abeaa.   v3:= temp  @type object;
#L1abeac.   v4:= " < " @type (object, string);
#L1abeb0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abeb6.   v3:= temp  @type object;
#L1abeb8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abebe.   v3:= temp  @type object;
#L1abec0.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abec6.   v3:= temp  @type object;
#L1abec8.   call temp:=  [|javax:crypto:ShortBufferException.<init>|](v2, v3) @signature [|Ljavax/crypto/ShortBufferException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:ShortBufferException|] @type direct;
#L1abece.   throw v2;
#L1abed0.   v2:= 0  @length 4;
#L1abed2.   v3:= v0.length;
#L1abed4.   call temp:=  [|java:lang:System.arraycopy|](v0, v2, v9, v10, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1abeda.   v2:= v0.length;
#L1abedc.   return v2;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineDoFinal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v9 @type (this), [|byte|][] v10, [|int|] v11, [|int|] v12) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineDoFinal:([BII)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1abef0.   v8:= 0  @length 4;
#L1abef2.   if v10 == 0 then goto L1abefc;
#L1abef6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineUpdate|](v9, v10, v11, v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineUpdate:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type virtual;
#L1abefc.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.inputTooLarge|]   @boolean;
#L1abf00.   if v5 == 0 then goto L1abf48;
#L1abf04.   v5:= new [|javax:crypto:IllegalBlockSizeException|];
#L1abf08.   v6:= new [|java:lang:StringBuilder|];
#L1abf0c.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1abf12.   v7:= "input must be under " @type (object, string);
#L1abf16.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abf1c.   v6:= temp  @type object;
#L1abf1e.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf22.   v7:= v7.length;
#L1abf24.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abf2a.   v6:= temp  @type object;
#L1abf2c.   v7:= " bytes" @type (object, string);
#L1abf30.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abf36.   v6:= temp  @type object;
#L1abf38.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1abf3e.   v6:= temp  @type object;
#L1abf40.   call temp:=  [|javax:crypto:IllegalBlockSizeException.<init>|](v5, v6) @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type direct;
#L1abf46.   throw v5;
#L1abf48.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1abf4c.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf50.   v6:= v6.length;
#L1abf52.   if v5 == v6 then goto L1abfe6;
#L1abf56.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1abf5a.   v6:= 3  @length 4;
#L1abf5c.   if v5 != v6 then goto L1abfd4;
#L1abf60.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf64.   v5:= v5.length;
#L1abf66.   v4:= new [|byte|][v5];
#L1abf6a.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf6e.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf72.   v6:= v6.length;
#L1abf74.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1abf78.   v6:= v6 - v7  @type int;
#L1abf7a.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1abf7e.   call temp:=  [|java:lang:System.arraycopy|](v5, v8, v4, v6, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1abf84.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abf88.   v5:= v5.length;
#L1abf8a.   v2:= new [|byte|][v5];
#L1abf8e.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]   @boolean;
#L1abf92.   if v5 == 0 then goto L1ac008;
#L1abf96.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]   @boolean;
#L1abf9a.   if v5 == 0 then goto L1abfec;
#L1abf9e.   v5:= v4.length;
#L1abfa0.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1abfa4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1abfaa.   v6:= temp;
#L1abfac.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1abfb0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_private_encrypt|](v5, v4, v2, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_private_encrypt:(I[B[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1abfb6.   v3:= temp;
#L1abfb8.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]   @boolean;
#L1abfbc.   if v5 != 0 then goto L1abfce;
#L1abfc0.   v5:= v2.length;
#L1abfc2.   if v3 == v5 then goto L1abfce;
#L1abfc6.   call temp:=  [|java:util:Arrays.copyOf|](v2, v3) @signature [|Ljava/util/Arrays;.copyOf:([BI)[B|] @classDescriptor [|java:util:Arrays|] @type static;
#L1abfcc.   v2:= temp  @type object;
#L1abfce.   v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|]  := v8;
#L1abfd2.   return v2  @type object;
#L1abfd4.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abfd8.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1abfdc.   call temp:=  [|java:util:Arrays.copyOf|](v5, v6) @signature [|Ljava/util/Arrays;.copyOf:([BI)[B|] @classDescriptor [|java:util:Arrays|] @type static;
#L1abfe2.   v4:= temp  @type object;
#L1abfe4.   goto L1abf84;
#L1abfe6.   v4:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1abfea.   goto L1abf84;
#L1abfec.   v5:= v4.length;
#L1abfee.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1abff2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1abff8.   v6:= temp;
#L1abffa.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1abffe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_public_encrypt|](v5, v4, v2, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_public_encrypt:(I[B[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac004.   v3:= temp;
#L1ac006.   goto L1abfb8;
#L1ac008.   v5:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.usingPrivateKey|]   @boolean;
#L1ac00c.   if v5 == 0 then goto L1ac02c;
#L1ac010.   v5:= v4.length;
#L1ac012.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1ac016.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ac01c.   v6:= temp;
#L1ac01e.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1ac022.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_private_decrypt|](v5, v4, v2, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_private_decrypt:(I[B[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac028.   v3:= temp;
#L1ac02a.   goto L1abfb8;
#L1ac02c.   v5:= v4.length;
#L1ac02e.   v6:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.key|]   @type object;
#L1ac032.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ac038.   v6:= temp;
#L1ac03a.   v7:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|] ;
#L1ac03e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_public_decrypt|](v5, v4, v2, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_public_decrypt:(I[B[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac044.   v3:= temp;
#L1ac046.   goto L1abfb8;
#L1ac048.   v0:= Exception  @type object;
#L1ac04a.   v1:= new [|javax:crypto:IllegalBlockSizeException|];
#L1ac04e.   call temp:=  [|javax:crypto:IllegalBlockSizeException.<init>|](v1) @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:()V|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type direct;
#L1ac054.   call temp:=  [|javax:crypto:IllegalBlockSizeException.initCause|](v1, v0) @signature [|Ljavax/crypto/IllegalBlockSizeException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L1ac05a.   throw v1;
  catch  [|java:security:SignatureException|] @[L1ac008..L1ac044] goto L1ac048;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineGetBlockSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineGetBlockSize:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ac07c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]   @boolean;
#L1ac080.   if v0 == 0 then goto L1ac08e;
#L1ac084.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.paddedBlockSizeBytes|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.paddedBlockSizeBytes:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac08a.   v0:= temp;
#L1ac08c.   return v0;
#L1ac08e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.keySizeBytes|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.keySizeBytes:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac094.   v0:= temp;
#L1ac096.   goto L1ac08c;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineGetIV|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineGetIV:()[B|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ac0a8.   v0:= 0  @length 4;
#L1ac0aa.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineGetOutputSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineGetOutputSize:(I)I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ac0bc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.encrypting|]   @boolean;
#L1ac0c0.   if v0 == 0 then goto L1ac0ce;
#L1ac0c4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.keySizeBytes|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.keySizeBytes:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac0ca.   v0:= temp;
#L1ac0cc.   return v0;
#L1ac0ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.paddedBlockSizeBytes|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.paddedBlockSizeBytes:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac0d4.   v0:= temp;
#L1ac0d6.   goto L1ac0cc;

   }
    procedure [|java:security:AlgorithmParameters|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineGetParameters|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineGetParameters:()Ljava/security/AlgorithmParameters;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ac0e8.   v0:= 0  @length 4;
#L1ac0ea.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v3 @type (this), [|int|] v4, [|java:security:Key|] v5 @type (object), [|java:security:AlgorithmParameters|] v6 @type (object), [|java:security:SecureRandom|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInit:(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ac0fc.   if v6 == 0 then goto L1ac142;
#L1ac100.   v0:= new [|java:security:InvalidAlgorithmParameterException|];
#L1ac104.   v1:= new [|java:lang:StringBuilder|];
#L1ac108.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac10e.   v2:= "unknown param type: " @type (object, string);
#L1ac112.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac118.   v1:= temp  @type object;
#L1ac11a.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac120.   v2:= temp  @type object;
#L1ac122.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1ac128.   v2:= temp  @type object;
#L1ac12a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac130.   v1:= temp  @type object;
#L1ac132.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac138.   v1:= temp  @type object;
#L1ac13a.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v0, v1) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1ac140.   throw v0;
#L1ac142.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInitInternal|](v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInitInternal:(ILjava/security/Key;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac148.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v0 @type (this), [|int|] v1, [|java:security:Key|] v2 @type (object), [|java:security:SecureRandom|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInit:(ILjava/security/Key;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
      
#L1ac15c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInitInternal|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInitInternal:(ILjava/security/Key;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac162.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v3 @type (this), [|int|] v4, [|java:security:Key|] v5 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v6 @type (object), [|java:security:SecureRandom|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInit:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ac174.   if v6 == 0 then goto L1ac1ba;
#L1ac178.   v0:= new [|java:security:InvalidAlgorithmParameterException|];
#L1ac17c.   v1:= new [|java:lang:StringBuilder|];
#L1ac180.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac186.   v2:= "unknown param type: " @type (object, string);
#L1ac18a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac190.   v1:= temp  @type object;
#L1ac192.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac198.   v2:= temp  @type object;
#L1ac19a.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1ac1a0.   v2:= temp  @type object;
#L1ac1a2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac1a8.   v1:= temp  @type object;
#L1ac1aa.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac1b0.   v1:= temp  @type object;
#L1ac1b2.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v0, v1) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1ac1b8.   throw v0;
#L1ac1ba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineInitInternal|](v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineInitInternal:(ILjava/security/Key;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac1c0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineSetMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineSetMode:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1ac1d4.   call temp:=  [|java:lang:String.toUpperCase|](v5) @signature [|Ljava/lang/String;.toUpperCase:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac1da.   v0:= temp  @type object;
#L1ac1dc.   v1:= "NONE" @type (object, string);
#L1ac1e0.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac1e6.   v1:= temp;
#L1ac1e8.   if v1 != 0 then goto L1ac1fc;
#L1ac1ec.   v1:= "ECB" @type (object, string);
#L1ac1f0.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac1f6.   v1:= temp;
#L1ac1f8.   if v1 == 0 then goto L1ac1fe;
#L1ac1fc.   return @void ;
#L1ac1fe.   v1:= new [|java:security:NoSuchAlgorithmException|];
#L1ac202.   v2:= new [|java:lang:StringBuilder|];
#L1ac206.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac20c.   v3:= "mode not supported: " @type (object, string);
#L1ac210.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac216.   v2:= temp  @type object;
#L1ac218.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac21e.   v2:= temp  @type object;
#L1ac220.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac226.   v2:= temp  @type object;
#L1ac228.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v1, v2) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1ac22e.   throw v1;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineSetPadding|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineSetPadding:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1ac240.   call temp:=  [|java:lang:String.toUpperCase|](v5) @signature [|Ljava/lang/String;.toUpperCase:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac246.   v0:= temp  @type object;
#L1ac248.   v1:= "PKCS1PADDING" @type (object, string);
#L1ac24c.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac252.   v1:= temp;
#L1ac254.   if v1 == 0 then goto L1ac260;
#L1ac258.   v1:= 1  @length 4;
#L1ac25a.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|]  := v1;
#L1ac25e.   return @void ;
#L1ac260.   v1:= "NOPADDING" @type (object, string);
#L1ac264.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1ac26a.   v1:= temp;
#L1ac26c.   if v1 == 0 then goto L1ac278;
#L1ac270.   v1:= 3  @length 4;
#L1ac272.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.padding|]  := v1;
#L1ac276.   goto L1ac25e;
#L1ac278.   v1:= new [|javax:crypto:NoSuchPaddingException|];
#L1ac27c.   v2:= new [|java:lang:StringBuilder|];
#L1ac280.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac286.   v3:= "padding not supported: " @type (object, string);
#L1ac28a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac290.   v2:= temp  @type object;
#L1ac292.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac298.   v2:= temp  @type object;
#L1ac29a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac2a0.   v2:= temp  @type object;
#L1ac2a2.   call temp:=  [|javax:crypto:NoSuchPaddingException.<init>|](v1, v2) @signature [|Ljavax/crypto/NoSuchPaddingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:crypto:NoSuchPaddingException|] @type direct;
#L1ac2a8.   throw v1;

   }
    procedure [|java:security:Key|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineUnwrap|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v6 @type (this), [|byte|][] v7, [|java:lang:String|] v8 @type (object), [|int|] v9) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineUnwrap:([BLjava/lang/String;I)Ljava/security/Key;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1ac2bc.   v3:= 0  @length 4;
#L1ac2be.   v4:= v7.length;
#L1ac2c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineDoFinal|](v6, v7, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineDoFinal:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type virtual;
#L1ac2c6.   v1:= temp  @type object;
#L1ac2c8.   v3:= 1  @length 4;
#L1ac2ca.   if v9 != v3 then goto L1ac2ea;
#L1ac2ce.   call temp:=  [|java:security:KeyFactory.getInstance|](v8) @signature [|Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;|] @classDescriptor [|java:security:KeyFactory|] @type static;
#L1ac2d4.   v2:= temp  @type object;
#L1ac2d6.   v3:= new [|java:security:spec:X509EncodedKeySpec|];
#L1ac2da.   call temp:=  [|java:security:spec:X509EncodedKeySpec.<init>|](v3, v1) @signature [|Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type direct;
#L1ac2e0.   call temp:=  [|java:security:KeyFactory.generatePublic|](v2, v3) @signature [|Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @classDescriptor [|java:security:KeyFactory|] @type virtual;
#L1ac2e6.   v3:= temp  @type object;
#L1ac2e8.   return v3  @type object;
#L1ac2ea.   v3:= 2  @length 4;
#L1ac2ec.   if v9 != v3 then goto L1ac30c;
#L1ac2f0.   call temp:=  [|java:security:KeyFactory.getInstance|](v8) @signature [|Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;|] @classDescriptor [|java:security:KeyFactory|] @type static;
#L1ac2f6.   v2:= temp  @type object;
#L1ac2f8.   v3:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1ac2fc.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v3, v1) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1ac302.   call temp:=  [|java:security:KeyFactory.generatePrivate|](v2, v3) @signature [|Ljava/security/KeyFactory;.generatePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @classDescriptor [|java:security:KeyFactory|] @type virtual;
#L1ac308.   v3:= temp  @type object;
#L1ac30a.   goto L1ac2e8;
#L1ac30c.   v3:= 3  @length 4;
#L1ac30e.   if v9 != v3 then goto L1ac32c;
#L1ac312.   v3:= new [|javax:crypto:spec:SecretKeySpec|];
#L1ac316.   call temp:=  [|javax:crypto:spec:SecretKeySpec.<init>|](v3, v1, v8) @signature [|Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V|] @classDescriptor [|javax:crypto:spec:SecretKeySpec|] @type direct;
#L1ac31c.   goto L1ac2e8;
#L1ac31e.   v0:= Exception  @type object;
#L1ac320.   v3:= new [|java:security:InvalidKeyException|];
#L1ac324.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac32a.   throw v3;
#L1ac32c.   v3:= new [|java:lang:UnsupportedOperationException|];
#L1ac330.   v4:= new [|java:lang:StringBuilder|];
#L1ac334.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac33a.   v5:= "wrappedKeyType == " @type (object, string);
#L1ac33e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac344.   v4:= temp  @type object;
#L1ac346.   call temp:=  [|java:lang:StringBuilder.append|](v4, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac34c.   v4:= temp  @type object;
#L1ac34e.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac354.   v4:= temp  @type object;
#L1ac356.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v3, v4) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L1ac35c.   throw v3;
#L1ac35e.   v0:= Exception  @type object;
#L1ac360.   v3:= new [|java:security:InvalidKeyException|];
#L1ac364.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac36a.   throw v3;
#L1ac36c.   v0:= Exception  @type object;
#L1ac36e.   v3:= new [|java:security:InvalidKeyException|];
#L1ac372.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac378.   throw v3;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1ac2be..L1ac31c] goto L1ac31e;
  catch  [|javax:crypto:BadPaddingException|] @[L1ac2be..L1ac31c] goto L1ac35e;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1ac2be..L1ac31c] goto L1ac36c;
  catch  [|javax:crypto:IllegalBlockSizeException|] @[L1ac32c..L1ac35e] goto L1ac31e;
  catch  [|javax:crypto:BadPaddingException|] @[L1ac32c..L1ac35e] goto L1ac35e;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1ac32c..L1ac35e] goto L1ac36c;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4, [|byte|][] v5, [|int|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineUpdate:([BII[BI)I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ac3a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineUpdate|](v1, v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineUpdate:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type virtual;
#L1ac3ae.   v0:= 0  @length 4;
#L1ac3b0.   return v0;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineUpdate:([BII)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1ac3c4.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1ac3c8.   v0:= v0 + v5  @type int;
#L1ac3ca.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1ac3ce.   v1:= v1.length;
#L1ac3d0.   if v0 <= v1 then goto L1ac3e0;
#L1ac3d4.   v0:= 1  @length 4;
#L1ac3d6.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.inputTooLarge|]  := v0 @boolean;
#L1ac3da.   v0:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L1ac3de.   return v0  @type object;
#L1ac3e0.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.buffer|]   @type object;
#L1ac3e4.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1ac3e8.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v1, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1ac3ee.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|] ;
#L1ac3f2.   v0:= v0 + v5  @type int;
#L1ac3f4.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.bufferOffset|]  := v0;
#L1ac3f8.   v0:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L1ac3fc.   goto L1ac3de;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineWrap|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] v5 @type (this), [|java:security:Key|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineWrap:(Ljava/security/Key;)[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ac410.   call temp:=  [|java:security:Key.getEncoded|](v6) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1ac416.   v1:= temp  @type object;
#L1ac418.   v3:= 0  @length 4;
#L1ac41a.   v4:= v1.length;
#L1ac41c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.engineDoFinal|](v5, v1, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.engineDoFinal:([BII)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type virtual;
#L1ac422.   v3:= temp  @type object;
#L1ac424.   return v3  @type object;
#L1ac426.   v0:= Exception  @type object;
#L1ac428.   v2:= new [|javax:crypto:IllegalBlockSizeException|];
#L1ac42c.   call temp:=  [|javax:crypto:IllegalBlockSizeException.<init>|](v2) @signature [|Ljavax/crypto/IllegalBlockSizeException;.<init>:()V|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type direct;
#L1ac432.   call temp:=  [|javax:crypto:IllegalBlockSizeException.initCause|](v2, v0) @signature [|Ljavax/crypto/IllegalBlockSizeException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:crypto:IllegalBlockSizeException|] @type virtual;
#L1ac438.   throw v2;
  catch  [|javax:crypto:BadPaddingException|] @[L1ac410..L1ac422] goto L1ac426;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$PKCS1|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$PKCS1.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$PKCS1|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$PKCS1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA$PKCS1;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ac45c.   v0:= 1  @length 4;
#L1ac45e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac464.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$Raw|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$Raw.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$Raw|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$Raw|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA$Raw;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ac478.   v0:= 3  @length 4;
#L1ac47a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLCipherRSA;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA|] @type direct;
#L1ac480.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|]  @type class @AccessFlag PUBLIC  extends [|java:security:KeyFactorySpi|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1ac494.   call temp:=  [|java:security:KeyFactorySpi.<init>|](v0) @signature [|Ljava/security/KeyFactorySpi;.<init>:()V|] @classDescriptor [|java:security:KeyFactorySpi|] @type direct;
#L1ac49a.   return @void ;

   }
    procedure [|java:security:PrivateKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineGeneratePrivate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] v7 @type (this), [|java:security:spec:KeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineGeneratePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ac4ac.   v4:= instanceof @varname v8 @type [|java:security:spec:DSAPrivateKeySpec|];
#L1ac4b0.   if v4 == 0 then goto L1ac4c6;
#L1ac4b4.   v0:= v8  @type object;
#L1ac4b6.   v0:= ([|java:security:spec:DSAPrivateKeySpec|])v0;
#L1ac4ba.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1ac4be.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Ljava/security/spec/DSAPrivateKeySpec;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ac4c4.   return v4  @type object;
#L1ac4c6.   v4:= instanceof @varname v8 @type [|java:security:spec:PKCS8EncodedKeySpec|];
#L1ac4ca.   if v4 == 0 then goto L1ac508;
#L1ac4ce.   v3:= v8  @type object;
#L1ac4d0.   v3:= ([|java:security:spec:PKCS8EncodedKeySpec|])v3;
#L1ac4d4.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ac4d8.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.getEncoded|](v3) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.getEncoded:()[B|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type virtual;
#L1ac4de.   v4:= temp  @type object;
#L1ac4e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PKCS8_PRIV_KEY_INFO|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PKCS8_PRIV_KEY_INFO:([B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac4e6.   v4:= temp;
#L1ac4e8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v2, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ac4ee.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1ac4f2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|](v4, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ac4f8.   goto L1ac4c4;
#L1ac4fa.   v1:= Exception  @type object;
#L1ac4fc.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac500.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v1) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac506.   throw v4;
#L1ac508.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac50c.   v5:= new [|java:lang:StringBuilder|];
#L1ac510.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac516.   v6:= "Must use DSAPublicKeySpec or PKCS8EncodedKeySpec; was " @type (object, string);
#L1ac51a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac520.   v5:= temp  @type object;
#L1ac522.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac528.   v6:= temp  @type object;
#L1ac52a.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1ac530.   v6:= temp  @type object;
#L1ac532.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac538.   v5:= temp  @type object;
#L1ac53a.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac540.   v5:= temp  @type object;
#L1ac542.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v5) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac548.   throw v4;
  catch  [|java:lang:Exception|] @[L1ac4d4..L1ac4f8] goto L1ac4fa;

   }
    procedure [|java:security:PublicKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineGeneratePublic|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] v7 @type (this), [|java:security:spec:KeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineGeneratePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ac56c.   v4:= instanceof @varname v8 @type [|java:security:spec:DSAPublicKeySpec|];
#L1ac570.   if v4 == 0 then goto L1ac586;
#L1ac574.   v0:= v8  @type object;
#L1ac576.   v0:= ([|java:security:spec:DSAPublicKeySpec|])v0;
#L1ac57a.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|];
#L1ac57e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.<init>|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.<init>:(Ljava/security/spec/DSAPublicKeySpec;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ac584.   return v4  @type object;
#L1ac586.   v4:= instanceof @varname v8 @type [|java:security:spec:X509EncodedKeySpec|];
#L1ac58a.   if v4 == 0 then goto L1ac5c8;
#L1ac58e.   v3:= v8  @type object;
#L1ac590.   v3:= ([|java:security:spec:X509EncodedKeySpec|])v3;
#L1ac594.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ac598.   call temp:=  [|java:security:spec:X509EncodedKeySpec.getEncoded|](v3) @signature [|Ljava/security/spec/X509EncodedKeySpec;.getEncoded:()[B|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type virtual;
#L1ac59e.   v4:= temp  @type object;
#L1ac5a0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PUBKEY|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PUBKEY:([B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac5a6.   v4:= temp;
#L1ac5a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v2, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ac5ae.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|];
#L1ac5b2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.<init>|](v4, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ac5b8.   goto L1ac584;
#L1ac5ba.   v1:= Exception  @type object;
#L1ac5bc.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac5c0.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v1) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac5c6.   throw v4;
#L1ac5c8.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac5cc.   v5:= new [|java:lang:StringBuilder|];
#L1ac5d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ac5d6.   v6:= "Must use DSAPublicKeySpec or X509EncodedKeySpec; was " @type (object, string);
#L1ac5da.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac5e0.   v5:= temp  @type object;
#L1ac5e2.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac5e8.   v6:= temp  @type object;
#L1ac5ea.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1ac5f0.   v6:= temp  @type object;
#L1ac5f2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac5f8.   v5:= temp  @type object;
#L1ac5fa.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ac600.   v5:= temp  @type object;
#L1ac602.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v5) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac608.   throw v4;
  catch  [|java:lang:Exception|] @[L1ac594..L1ac5b8] goto L1ac5ba;

   }
    procedure [|java:security:spec:KeySpec|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineGetKeySpec|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] v9 @type (this), [|java:security:Key|] v10 @type (object), [|java:lang:Class|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineGetKeySpec:(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1ac62c.   if v10 != 0 then goto L1ac640;
#L1ac630.   v7:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac634.   v8:= "key == null" @type (object, string);
#L1ac638.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v7, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac63e.   throw v7;
#L1ac640.   if v11 != 0 then goto L1ac654;
#L1ac644.   v7:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac648.   v8:= "keySpec == null" @type (object, string);
#L1ac64c.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v7, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac652.   throw v7;
#L1ac654.   v7:= instanceof @varname v10 @type [|java:security:interfaces:DSAPublicKey|];
#L1ac658.   if v7 == 0 then goto L1ac6da;
#L1ac65c.   v0:= v10  @type object;
#L1ac65e.   v0:= ([|java:security:interfaces:DSAPublicKey|])v0;
#L1ac662.   v7:= new [|java:security:spec:DSAPublicKeySpec|];
#L1ac666.   call temp:=  [|java:lang:Object.equals|](v7, v11) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac66c.   v7:= temp;
#L1ac66e.   if v7 == 0 then goto L1ac6a6;
#L1ac672.   call temp:=  [|java:security:interfaces:DSAPublicKey.getY|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ac678.   v6:= temp  @type object;
#L1ac67a.   call temp:=  [|java:security:interfaces:DSAPublicKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ac680.   v3:= temp  @type object;
#L1ac682.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac688.   v2:= temp  @type object;
#L1ac68a.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac690.   v4:= temp  @type object;
#L1ac692.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac698.   v1:= temp  @type object;
#L1ac69a.   v7:= new [|java:security:spec:DSAPublicKeySpec|];
#L1ac69e.   call temp:=  [|java:security:spec:DSAPublicKeySpec.<init>|](v7, v6, v2, v4, v1) @signature [|Ljava/security/spec/DSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type direct;
#L1ac6a4.   return v7  @type object;
#L1ac6a6.   v7:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1ac6aa.   call temp:=  [|java:lang:Object.equals|](v7, v11) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac6b0.   v7:= temp;
#L1ac6b2.   if v7 == 0 then goto L1ac6ca;
#L1ac6b6.   v7:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1ac6ba.   call temp:=  [|java:security:Key.getEncoded|](v10) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1ac6c0.   v8:= temp  @type object;
#L1ac6c2.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v7, v8) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1ac6c8.   goto L1ac6a4;
#L1ac6ca.   v7:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac6ce.   v8:= "Must be DSAPublicKeySpec or PKCS8EncodedKeySpec" @type (object, string);
#L1ac6d2.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v7, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac6d8.   throw v7;
#L1ac6da.   v7:= instanceof @varname v10 @type [|java:security:interfaces:DSAPrivateKey|];
#L1ac6de.   if v7 == 0 then goto L1ac760;
#L1ac6e2.   v0:= v10  @type object;
#L1ac6e4.   v0:= ([|java:security:interfaces:DSAPrivateKey|])v0;
#L1ac6e8.   v7:= new [|java:security:spec:DSAPrivateKeySpec|];
#L1ac6ec.   call temp:=  [|java:lang:Object.equals|](v7, v11) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac6f2.   v7:= temp;
#L1ac6f4.   if v7 == 0 then goto L1ac72c;
#L1ac6f8.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getX|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1ac6fe.   v5:= temp  @type object;
#L1ac700.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1ac706.   v3:= temp  @type object;
#L1ac708.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac70e.   v2:= temp  @type object;
#L1ac710.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac716.   v4:= temp  @type object;
#L1ac718.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v3) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac71e.   v1:= temp  @type object;
#L1ac720.   v7:= new [|java:security:spec:DSAPrivateKeySpec|];
#L1ac724.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.<init>|](v7, v5, v2, v4, v1) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type direct;
#L1ac72a.   goto L1ac6a4;
#L1ac72c.   v7:= new [|java:security:spec:X509EncodedKeySpec|];
#L1ac730.   call temp:=  [|java:lang:Object.equals|](v7, v11) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ac736.   v7:= temp;
#L1ac738.   if v7 == 0 then goto L1ac750;
#L1ac73c.   v7:= new [|java:security:spec:X509EncodedKeySpec|];
#L1ac740.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getEncoded|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getEncoded:()[B|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1ac746.   v8:= temp  @type object;
#L1ac748.   call temp:=  [|java:security:spec:X509EncodedKeySpec.<init>|](v7, v8) @signature [|Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type direct;
#L1ac74e.   goto L1ac6a4;
#L1ac750.   v7:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac754.   v8:= "Must be DSAPrivateKeySpec or X509EncodedKeySpec" @type (object, string);
#L1ac758.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v7, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac75e.   throw v7;
#L1ac760.   v7:= new [|java:security:spec:InvalidKeySpecException|];
#L1ac764.   v8:= "Must be DSAPublicKey or DSAPrivateKey" @type (object, string);
#L1ac768.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v7, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ac76e.   throw v7;

   }
    procedure [|java:security:Key|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineTranslateKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] v10 @type (this), [|java:security:Key|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineTranslateKey:(Ljava/security/Key;)Ljava/security/Key;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1ac780.   if v11 != 0 then goto L1ac794;
#L1ac784.   v8:= new [|java:security:InvalidKeyException|];
#L1ac788.   v9:= "key == null" @type (object, string);
#L1ac78c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v8, v9) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac792.   throw v8;
#L1ac794.   v8:= instanceof @varname v11 @type [|java:security:interfaces:DSAPublicKey|];
#L1ac798.   if v8 == 0 then goto L1ac7ec;
#L1ac79c.   v0:= v11  @type object;
#L1ac79e.   v0:= ([|java:security:interfaces:DSAPublicKey|])v0;
#L1ac7a2.   call temp:=  [|java:security:interfaces:DSAPublicKey.getY|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ac7a8.   v7:= temp  @type object;
#L1ac7aa.   call temp:=  [|java:security:interfaces:DSAPublicKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ac7b0.   v4:= temp  @type object;
#L1ac7b2.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac7b8.   v3:= temp  @type object;
#L1ac7ba.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac7c0.   v5:= temp  @type object;
#L1ac7c2.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac7c8.   v2:= temp  @type object;
#L1ac7ca.   v8:= new [|java:security:spec:DSAPublicKeySpec|];
#L1ac7ce.   call temp:=  [|java:security:spec:DSAPublicKeySpec.<init>|](v8, v7, v3, v5, v2) @signature [|Ljava/security/spec/DSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type direct;
#L1ac7d4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineGeneratePublic|](v10, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineGeneratePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @type virtual;
#L1ac7da.   v8:= temp  @type object;
#L1ac7dc.   return v8  @type object;
#L1ac7de.   v1:= Exception  @type object;
#L1ac7e0.   v8:= new [|java:security:InvalidKeyException|];
#L1ac7e4.   call temp:=  [|java:security:InvalidKeyException.<init>|](v8, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac7ea.   throw v8;
#L1ac7ec.   v8:= instanceof @varname v11 @type [|java:security:interfaces:DSAPrivateKey|];
#L1ac7f0.   if v8 == 0 then goto L1ac844;
#L1ac7f4.   v0:= v11  @type object;
#L1ac7f6.   v0:= ([|java:security:interfaces:DSAPrivateKey|])v0;
#L1ac7fa.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getX|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1ac800.   v6:= temp  @type object;
#L1ac802.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1ac808.   v4:= temp  @type object;
#L1ac80a.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac810.   v3:= temp  @type object;
#L1ac812.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac818.   v5:= temp  @type object;
#L1ac81a.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v4) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ac820.   v2:= temp  @type object;
#L1ac822.   v8:= new [|java:security:spec:DSAPrivateKeySpec|];
#L1ac826.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.<init>|](v8, v6, v3, v5, v2) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type direct;
#L1ac82c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory.engineGeneratePublic|](v10, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyFactory;.engineGeneratePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyFactory|] @type virtual;
#L1ac832.   v8:= temp  @type object;
#L1ac834.   goto L1ac7dc;
#L1ac836.   v1:= Exception  @type object;
#L1ac838.   v8:= new [|java:security:InvalidKeyException|];
#L1ac83c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v8, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac842.   throw v8;
#L1ac844.   v8:= new [|java:security:InvalidKeyException|];
#L1ac848.   v9:= "Key is not DSAPublicKey or DSAPrivateKey" @type (object, string);
#L1ac84c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v8, v9) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ac852.   throw v8;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1ac7ca..L1ac7da] goto L1ac7de;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1ac822..L1ac832] goto L1ac836;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|]  @type class @AccessFlag PUBLIC  extends [|java:security:KeyPairGeneratorSpi|] {
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.g|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.p|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.primeBits|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.q|]    @AccessFlag PRIVATE;
      [|java:security:SecureRandom|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyPairGenerator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ac880.   call temp:=  [|java:security:KeyPairGeneratorSpi.<init>|](v1) @signature [|Ljava/security/KeyPairGeneratorSpi;.<init>:()V|] @classDescriptor [|java:security:KeyPairGeneratorSpi|] @type direct;
#L1ac886.   v0:= 1024  @length 16;
#L1ac88a.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.primeBits|]  := v0;
#L1ac88e.   v0:= 0  @length 4;
#L1ac890.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]  := v0 @type object;
#L1ac894.   return @void ;

   }
    procedure [|java:security:KeyPair|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.generateKeyPair|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] v8 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1ac8a8.   v4:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]   @type object;
#L1ac8ac.   if v4 != 0 then goto L1ac8f4;
#L1ac8b0.   v3:= 0  @length 4;
#L1ac8b2.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ac8b6.   v4:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.primeBits|] ;
#L1ac8ba.   v5:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.g|]   @type object;
#L1ac8be.   v6:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.p|]   @type object;
#L1ac8c2.   v7:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.q|]   @type object;
#L1ac8c6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.DSA_generate_key|](v4, v3, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.DSA_generate_key:(I[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac8cc.   v4:= temp;
#L1ac8ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v0, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ac8d4.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1ac8d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ac8de.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|];
#L1ac8e2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.<init>|](v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ac8e8.   v4:= new [|java:security:KeyPair|];
#L1ac8ec.   call temp:=  [|java:security:KeyPair.<init>|](v4, v2, v1) @signature [|Ljava/security/KeyPair;.<init>:(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V|] @classDescriptor [|java:security:KeyPair|] @type direct;
#L1ac8f2.   return v4  @type object;
#L1ac8f4.   v4:= 20  @length 16;
#L1ac8f8.   v3:= new [|byte|][v4];
#L1ac8fc.   v4:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]   @type object;
#L1ac900.   call temp:=  [|java:security:SecureRandom.nextBytes|](v4, v3) @signature [|Ljava/security/SecureRandom;.nextBytes:([B)V|] @classDescriptor [|java:security:SecureRandom|] @type virtual;
#L1ac906.   goto L1ac8b2;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] v0 @type (this), [|int|] v1, [|java:security:SecureRandom|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyPairGenerator;.initialize:(ILjava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
      
#L1ac918.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.primeBits|]  := v1;
#L1ac91c.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]  := v2 @type object;
#L1ac920.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] v6 @type (this), [|java:security:spec:AlgorithmParameterSpec|] v7 @type (object), [|java:security:SecureRandom|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAKeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1ac934.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.random|]  := v8 @type object;
#L1ac938.   v4:= instanceof @varname v7 @type [|java:security:spec:DSAParameterSpec|];
#L1ac93c.   if v4 == 0 then goto L1ac990;
#L1ac940.   v0:= v7  @type object;
#L1ac942.   v0:= ([|java:security:spec:DSAParameterSpec|])v0;
#L1ac946.   call temp:=  [|java:security:spec:DSAParameterSpec.getG|](v0) @signature [|Ljava/security/spec/DSAParameterSpec;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAParameterSpec|] @type virtual;
#L1ac94c.   v1:= temp  @type object;
#L1ac94e.   if v1 == 0 then goto L1ac95e;
#L1ac952.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ac958.   v4:= temp  @type object;
#L1ac95a.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.g|]  := v4 @type object;
#L1ac95e.   call temp:=  [|java:security:spec:DSAParameterSpec.getP|](v0) @signature [|Ljava/security/spec/DSAParameterSpec;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAParameterSpec|] @type virtual;
#L1ac964.   v2:= temp  @type object;
#L1ac966.   if v2 == 0 then goto L1ac976;
#L1ac96a.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ac970.   v4:= temp  @type object;
#L1ac972.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.p|]  := v4 @type object;
#L1ac976.   call temp:=  [|java:security:spec:DSAParameterSpec.getQ|](v0) @signature [|Ljava/security/spec/DSAParameterSpec;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAParameterSpec|] @type virtual;
#L1ac97c.   v3:= temp  @type object;
#L1ac97e.   if v3 == 0 then goto L1ac98e;
#L1ac982.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ac988.   v4:= temp  @type object;
#L1ac98a.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator.q|]  := v4 @type object;
#L1ac98e.   return @void ;
#L1ac990.   if v7 == 0 then goto L1ac98e;
#L1ac994.   v4:= new [|java:security:InvalidAlgorithmParameterException|];
#L1ac998.   v5:= "Params must be DSAParameterSpec" @type (object, string);
#L1ac99c.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v4, v5) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1ac9a2.   throw v4;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|]  @type class @AccessFlag PUBLIC extends  [|java:security:interfaces:DSAParams|], [|java:security:spec:AlgorithmParameterSpec|] {
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.fetchedParams|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.key|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.x|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.y|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1ac9b4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ac9ba.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.key|]  := v1 @type object;
#L1ac9be.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @Access PRIVATE_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ac9d0.   (@monitorenter v3)
#L1ac9d2.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.fetchedParams|]   @boolean;
#L1ac9d6.   if v1 == 0 then goto L1ac9de;
#L1ac9da.   (@monitorexit v3)
#L1ac9dc.   return @void ;
#L1ac9de.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.key|]   @type object;
#L1ac9e2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ac9e8.   v1:= temp;
#L1ac9ea.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_DSA_params|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_DSA_params:(I)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ac9f0.   v0:= temp  @type object;
#L1ac9f2.   v1:= new [|java:math:BigInteger|];
#L1ac9f6.   v2:= 0  @length 4;
#L1ac9f8.   v2:= v0[v2]  @type object;
#L1ac9fc.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1aca02.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]  := v1 @type object;
#L1aca06.   v1:= new [|java:math:BigInteger|];
#L1aca0a.   v2:= 1  @length 4;
#L1aca0c.   v2:= v0[v2]  @type object;
#L1aca10.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1aca16.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]  := v1 @type object;
#L1aca1a.   v1:= new [|java:math:BigInteger|];
#L1aca1e.   v2:= 2  @length 4;
#L1aca20.   v2:= v0[v2]  @type object;
#L1aca24.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1aca2a.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]  := v1 @type object;
#L1aca2e.   v1:= 3  @length 4;
#L1aca30.   v1:= v0[v1]  @type object;
#L1aca34.   if v1 == 0 then goto L1aca4c;
#L1aca38.   v1:= new [|java:math:BigInteger|];
#L1aca3c.   v2:= 3  @length 4;
#L1aca3e.   v2:= v0[v2]  @type object;
#L1aca42.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1aca48.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.y|]  := v1 @type object;
#L1aca4c.   v1:= 4  @length 4;
#L1aca4e.   v1:= v0[v1]  @type object;
#L1aca52.   if v1 == 0 then goto L1aca6a;
#L1aca56.   v1:= new [|java:math:BigInteger|];
#L1aca5a.   v2:= 4  @length 4;
#L1aca5c.   v2:= v0[v2]  @type object;
#L1aca60.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1aca66.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.x|]  := v1 @type object;
#L1aca6a.   v1:= 1  @length 4;
#L1aca6c.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.fetchedParams|]  := v1 @boolean;
#L1aca70.   goto L1ac9da;
#L1aca72.   v1:= Exception  @type object;
#L1aca74.   (@monitorexit v3)
#L1aca76.   throw v1;
  catch  [|any|] @[L1ac9d2..L1ac9d6] goto L1aca72;
  catch  [|any|] @[L1ac9de..L1aca70] goto L1aca72;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1aca9c.   v2:= 0  @length 4;
#L1aca9e.   v1:= 1  @length 4;
#L1acaa0.   if v6 != v5 then goto L1acaa6;
#L1acaa4.   return v1;
#L1acaa6.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|];
#L1acaaa.   if v3 == 0 then goto L1acac4;
#L1acaae.   v0:= v6  @type object;
#L1acab0.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|])v0;
#L1acab4.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.key|]   @type object;
#L1acab8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1acabe.   v4:= temp  @type object;
#L1acac0.   if v3 == v4 then goto L1acaa4;
#L1acac4.   v3:= instanceof @varname v6 @type [|java:security:interfaces:DSAParams|];
#L1acac8.   if v3 != 0 then goto L1acad0;
#L1acacc.   v1:= v2;
#L1acace.   goto L1acaa4;
#L1acad0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acad6.   v0:= v6  @type object;
#L1acad8.   v0:= ([|java:security:interfaces:DSAParams|])v0;
#L1acadc.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]   @type object;
#L1acae0.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acae6.   v4:= temp  @type object;
#L1acae8.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acaee.   v3:= temp;
#L1acaf0.   if v3 == 0 then goto L1acb24;
#L1acaf4.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]   @type object;
#L1acaf8.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acafe.   v4:= temp  @type object;
#L1acb00.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acb06.   v3:= temp;
#L1acb08.   if v3 == 0 then goto L1acb24;
#L1acb0c.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]   @type object;
#L1acb10.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acb16.   v4:= temp  @type object;
#L1acb18.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acb1e.   v3:= temp;
#L1acb20.   if v3 != 0 then goto L1acaa4;
#L1acb24.   v1:= v2;
#L1acb26.   goto L1acaa4;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getG|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getG:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1acb38.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acb3e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]   @type object;
#L1acb42.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access  {
      local temp ;
        v0;
      
#L1acb54.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.key|]   @type object;
#L1acb58.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getP|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1acb6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acb72.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]   @type object;
#L1acb76.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getQ|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getQ:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1acb88.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acb8e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]   @type object;
#L1acb92.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getX|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getX:()Ljava/math/BigInteger;|] @Access  {
      local temp ;
        v0;
      
#L1acba4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acbaa.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.x|]   @type object;
#L1acbae.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @Access  {
      local temp ;
        v0;
      
#L1acbc0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acbc6.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.y|]   @type object;
#L1acbca.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1acbdc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acbe2.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]   @type object;
#L1acbe6.   call temp:=  [|java:math:BigInteger.hashCode|](v0) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acbec.   v0:= temp;
#L1acbee.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]   @type object;
#L1acbf2.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acbf8.   v1:= temp;
#L1acbfa.   v0:= v0 ^~ v1  @type int;
#L1acbfc.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]   @type object;
#L1acc00.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acc06.   v1:= temp;
#L1acc08.   v0:= v0 ^~ v1  @type int;
#L1acc0a.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1acc1c.   v2:= 16  @length 16;
#L1acc20.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.ensureReadParams|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acc26.   v0:= new [|java:lang:StringBuilder|];
#L1acc2a.   v1:= "OpenSSLDSAParams{" @type (object, string);
#L1acc2e.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1acc34.   v1:= "G=" @type (object, string);
#L1acc38.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc3e.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.g|]   @type object;
#L1acc42.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acc48.   v1:= temp  @type object;
#L1acc4a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc50.   v1:= ",P=" @type (object, string);
#L1acc54.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc5a.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.p|]   @type object;
#L1acc5e.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acc64.   v1:= temp  @type object;
#L1acc66.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc6c.   v1:= ",Q=" @type (object, string);
#L1acc70.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc76.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.q|]   @type object;
#L1acc7a.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acc80.   v1:= temp  @type object;
#L1acc82.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc88.   v1:= 125  @length 16;
#L1acc8c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc92.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1acc98.   v1:= temp  @type object;
#L1acc9a.   return v1  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|]  @type class @AccessFlag PUBLIC extends  [|java:security:interfaces:DSAPrivateKey|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]    @AccessFlag PRIVATE_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v7 @type (this), [|java:security:spec:DSAPrivateKeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Ljava/security/spec/DSAPrivateKeySpec;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1accac.   call temp:=  [|java:lang:Object.<init>|](v7) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1accb2.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1accb6.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.getP|](v8) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type virtual;
#L1accbc.   v2:= temp  @type object;
#L1accbe.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1accc4.   v2:= temp  @type object;
#L1accc6.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.getQ|](v8) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type virtual;
#L1acccc.   v3:= temp  @type object;
#L1accce.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1accd4.   v3:= temp  @type object;
#L1accd6.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.getG|](v8) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type virtual;
#L1accdc.   v4:= temp  @type object;
#L1accde.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acce4.   v4:= temp  @type object;
#L1acce6.   v5:= 0  @length 4;
#L1acce8.   call temp:=  [|java:security:spec:DSAPrivateKeySpec.getX|](v8) @signature [|Ljava/security/spec/DSAPrivateKeySpec;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPrivateKeySpec|] @type virtual;
#L1accee.   v6:= temp  @type object;
#L1accf0.   call temp:=  [|java:math:BigInteger.toByteArray|](v6) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1accf6.   v6:= temp  @type object;
#L1accf8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1accfe.   v2:= temp;
#L1acd00.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1acd06.   v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]  := v1 @type object;
#L1acd0a.   return @void ;
#L1acd0c.   v0:= Exception  @type object;
#L1acd0e.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1acd12.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v0) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1acd18.   throw v1;
  catch  [|java:lang:Exception|] @[L1accb2..L1acd0a] goto L1acd0c;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1acd3c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1acd42.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]  := v1 @type object;
#L1acd46.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1acd58.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acd5c.   if v0 != 0 then goto L1acd72;
#L1acd60.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|];
#L1acd64.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1acd68.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1acd6e.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]  := v0 @type object;
#L1acd72.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getInstance|] ([|java:security:interfaces:DSAPrivateKey|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getInstance:(Ljava/security/interfaces/DSAPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1acd84.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getParams|](v8) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1acd8a.   v0:= temp  @type object;
#L1acd8c.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1acd90.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acd96.   v3:= temp  @type object;
#L1acd98.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acd9e.   v3:= temp  @type object;
#L1acda0.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acda6.   v4:= temp  @type object;
#L1acda8.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acdae.   v4:= temp  @type object;
#L1acdb0.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1acdb6.   v5:= temp  @type object;
#L1acdb8.   call temp:=  [|java:math:BigInteger.toByteArray|](v5) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acdbe.   v5:= temp  @type object;
#L1acdc0.   v6:= 0  @length 4;
#L1acdc2.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getX|](v8) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1acdc8.   v7:= temp  @type object;
#L1acdca.   call temp:=  [|java:math:BigInteger.toByteArray|](v7) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acdd0.   v7:= temp  @type object;
#L1acdd2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1acdd8.   v3:= temp;
#L1acdda.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1acde0.   return v2  @type object;
#L1acde2.   v1:= Exception  @type object;
#L1acde4.   v2:= new [|java:security:InvalidKeyException|];
#L1acde8.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1acdee.   throw v2;
  catch  [|java:lang:Exception|] @[L1acd84..L1acde0] goto L1acde2;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v10 @type (this), [|java:io:ObjectInputStream|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1ace10.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v11) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ace16.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ace1c.   v0:= temp  @type object;
#L1ace1e.   v0:= ([|java:math:BigInteger|])v0;
#L1ace22.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ace28.   v1:= temp  @type object;
#L1ace2a.   v1:= ([|java:math:BigInteger|])v1;
#L1ace2e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ace34.   v2:= temp  @type object;
#L1ace36.   v2:= ([|java:math:BigInteger|])v2;
#L1ace3a.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ace40.   v3:= temp  @type object;
#L1ace42.   v3:= ([|java:math:BigInteger|])v3;
#L1ace46.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ace4a.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ace50.   v5:= temp  @type object;
#L1ace52.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ace58.   v6:= temp  @type object;
#L1ace5a.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ace60.   v7:= temp  @type object;
#L1ace62.   v8:= 0  @length 4;
#L1ace64.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ace6a.   v9:= temp  @type object;
#L1ace6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v5, v6, v7, v8, v9) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ace72.   v5:= temp;
#L1ace74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ace7a.   v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]  := v4 @type object;
#L1ace7e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1ace90.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type virtual;
#L1ace96.   v0:= temp  @type object;
#L1ace98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ace9e.   v0:= temp;
#L1acea0.   if v0 == 0 then goto L1aceb4;
#L1acea4.   v0:= new [|java:io:NotSerializableException|];
#L1acea8.   v1:= "engine-based keys can not be serialized" @type (object, string);
#L1aceac.   call temp:=  [|java:io:NotSerializableException.<init>|](v0, v1) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1aceb2.   throw v0;
#L1aceb4.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1aceba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1acec0.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acec4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getG|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1aceca.   v0:= temp  @type object;
#L1acecc.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1aced2.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1aced6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getP|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1acedc.   v0:= temp  @type object;
#L1acede.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1acee4.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acee8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getQ|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1aceee.   v0:= temp  @type object;
#L1acef0.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1acef6.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acefa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getX|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1acf00.   v0:= temp  @type object;
#L1acf02.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1acf08.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1acf1c.   v2:= 1  @length 4;
#L1acf1e.   v3:= 0  @length 4;
#L1acf20.   if v7 != v6 then goto L1acf26;
#L1acf24.   return v2;
#L1acf26.   v4:= instanceof @varname v7 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1acf2a.   if v4 == 0 then goto L1acf4c;
#L1acf2e.   v0:= v7  @type object;
#L1acf30.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|])v0;
#L1acf34.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1acf38.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type virtual;
#L1acf3e.   v5:= temp  @type object;
#L1acf40.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1acf46.   v4:= temp;
#L1acf48.   if v4 != 0 then goto L1acf24;
#L1acf4c.   v4:= instanceof @varname v7 @type [|java:security:interfaces:DSAPrivateKey|];
#L1acf50.   if v4 != 0 then goto L1acf58;
#L1acf54.   v2:= v3;
#L1acf56.   goto L1acf24;
#L1acf58.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1acf5e.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acf62.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getX|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1acf68.   v1:= temp  @type object;
#L1acf6a.   if v1 != 0 then goto L1acf72;
#L1acf6e.   v2:= v3;
#L1acf70.   goto L1acf24;
#L1acf72.   v0:= v7  @type object;
#L1acf74.   v0:= ([|java:security:interfaces:DSAPrivateKey|])v0;
#L1acf78.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getX|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1acf7e.   v4:= temp  @type object;
#L1acf80.   call temp:=  [|java:math:BigInteger.equals|](v1, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1acf86.   v4:= temp;
#L1acf88.   if v4 == 0 then goto L1acfa4;
#L1acf8c.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1acf90.   call temp:=  [|java:security:interfaces:DSAPrivateKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPrivateKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPrivateKey|] @type interface;
#L1acf96.   v5:= temp  @type object;
#L1acf98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.equals|](v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1acf9e.   v4:= temp;
#L1acfa0.   if v4 != 0 then goto L1acf24;
#L1acfa4.   v2:= v3;
#L1acfa6.   goto L1acf24;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1acfb8.   v0:= "DSA" @type (object, string);
#L1acfbc.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1acfd0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1acfd4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1acfda.   v0:= temp;
#L1acfdc.   if v0 == 0 then goto L1acfe4;
#L1acfe0.   v0:= 0  @length 4;
#L1acfe2.   return v0  @type object;
#L1acfe4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1acfe8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1acfee.   v0:= temp;
#L1acff0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PKCS8_PRIV_KEY_INFO|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PKCS8_PRIV_KEY_INFO:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1acff6.   v0:= temp  @type object;
#L1acff8.   goto L1acfe2;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad00c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad010.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad016.   v0:= temp;
#L1ad018.   if v0 == 0 then goto L1ad020;
#L1ad01c.   v0:= 0  @length 4;
#L1ad01e.   return v0  @type object;
#L1ad020.   v0:= "PKCS#8" @type (object, string);
#L1ad024.   goto L1ad01e;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access  {
      local temp ;
        v0;
      
#L1ad038.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad03c.   return v0  @type object;

   }
    procedure [|java:security:interfaces:DSAParams|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad050.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ad056.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1ad05a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getPkeyAlias|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getPkeyAlias:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad06c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad070.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getAlias|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getAlias:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad076.   v0:= temp  @type object;
#L1ad078.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getPkeyContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getPkeyContext:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad08c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad090.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad096.   v0:= temp;
#L1ad098.   return v0;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getX|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad0ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ad0b2.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1ad0b6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getX|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad0bc.   v0:= temp  @type object;
#L1ad0be.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1ad0d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ad0d6.   v0:= 1  @length 4;
#L1ad0d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getX|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type virtual;
#L1ad0de.   v1:= temp  @type object;
#L1ad0e0.   if v1 == 0 then goto L1ad0f0;
#L1ad0e4.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad0ea.   v2:= temp;
#L1ad0ec.   v0:= v2 + 3;
#L1ad0f0.   v2:= v0 * 7;
#L1ad0f4.   v3:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1ad0f8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.hashCode|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.hashCode:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad0fe.   v3:= temp;
#L1ad100.   v0:= v2 + v3  @type int;
#L1ad104.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1ad118.   v3:= 125  @length 16;
#L1ad11c.   v0:= new [|java:lang:StringBuilder|];
#L1ad120.   v1:= "OpenSSLDSAPrivateKey{" @type (object, string);
#L1ad124.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ad12a.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad12e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad134.   v1:= temp;
#L1ad136.   if v1 == 0 then goto L1ad15e;
#L1ad13a.   v1:= "key=" @type (object, string);
#L1ad13e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad144.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.key|]   @type object;
#L1ad148.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad14e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad154.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad15a.   v1:= temp  @type object;
#L1ad15c.   return v1  @type object;
#L1ad15e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.ensureReadParams|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ad164.   v1:= "X=" @type (object, string);
#L1ad168.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad16e.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1ad172.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getX|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getX:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad178.   v1:= temp  @type object;
#L1ad17a.   v2:= 16  @length 16;
#L1ad17e.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad184.   v1:= temp  @type object;
#L1ad186.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad18c.   v1:= 44  @length 16;
#L1ad190.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad196.   v1:= "params=" @type (object, string);
#L1ad19a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad1a0.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.params|]   @type object;
#L1ad1a4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.toString|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad1aa.   v1:= temp  @type object;
#L1ad1ac.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad1b2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad1b8.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad1be.   v1:= temp  @type object;
#L1ad1c0.   goto L1ad15c;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|]  @type class @AccessFlag PUBLIC extends  [|java:security:interfaces:DSAPublicKey|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]    @AccessFlag PRIVATE_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v7 @type (this), [|java:security:spec:DSAPublicKeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.<init>:(Ljava/security/spec/DSAPublicKeySpec;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ad1d4.   call temp:=  [|java:lang:Object.<init>|](v7) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ad1da.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ad1de.   call temp:=  [|java:security:spec:DSAPublicKeySpec.getP|](v8) @signature [|Ljava/security/spec/DSAPublicKeySpec;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type virtual;
#L1ad1e4.   v2:= temp  @type object;
#L1ad1e6.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad1ec.   v2:= temp  @type object;
#L1ad1ee.   call temp:=  [|java:security:spec:DSAPublicKeySpec.getQ|](v8) @signature [|Ljava/security/spec/DSAPublicKeySpec;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type virtual;
#L1ad1f4.   v3:= temp  @type object;
#L1ad1f6.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad1fc.   v3:= temp  @type object;
#L1ad1fe.   call temp:=  [|java:security:spec:DSAPublicKeySpec.getG|](v8) @signature [|Ljava/security/spec/DSAPublicKeySpec;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type virtual;
#L1ad204.   v4:= temp  @type object;
#L1ad206.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad20c.   v4:= temp  @type object;
#L1ad20e.   call temp:=  [|java:security:spec:DSAPublicKeySpec.getY|](v8) @signature [|Ljava/security/spec/DSAPublicKeySpec;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:DSAPublicKeySpec|] @type virtual;
#L1ad214.   v5:= temp  @type object;
#L1ad216.   call temp:=  [|java:math:BigInteger.toByteArray|](v5) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad21c.   v5:= temp  @type object;
#L1ad21e.   v6:= 0  @length 4;
#L1ad220.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad226.   v2:= temp;
#L1ad228.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ad22e.   v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]  := v1 @type object;
#L1ad232.   return @void ;
#L1ad234.   v0:= Exception  @type object;
#L1ad236.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1ad23a.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v0) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1ad240.   throw v1;
  catch  [|java:lang:Exception|] @[L1ad1da..L1ad232] goto L1ad234;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1ad264.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ad26a.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]  := v1 @type object;
#L1ad26e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1ad280.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad284.   if v0 != 0 then goto L1ad29a;
#L1ad288.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|];
#L1ad28c.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]   @type object;
#L1ad290.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type direct;
#L1ad296.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]  := v0 @type object;
#L1ad29a.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getInstance|] ([|java:security:interfaces:DSAPublicKey|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getInstance:(Ljava/security/interfaces/DSAPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1ad2ac.   call temp:=  [|java:security:interfaces:DSAPublicKey.getParams|](v8) @signature [|Ljava/security/interfaces/DSAPublicKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ad2b2.   v0:= temp  @type object;
#L1ad2b4.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ad2b8.   call temp:=  [|java:security:interfaces:DSAParams.getP|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ad2be.   v3:= temp  @type object;
#L1ad2c0.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad2c6.   v3:= temp  @type object;
#L1ad2c8.   call temp:=  [|java:security:interfaces:DSAParams.getQ|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ad2ce.   v4:= temp  @type object;
#L1ad2d0.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad2d6.   v4:= temp  @type object;
#L1ad2d8.   call temp:=  [|java:security:interfaces:DSAParams.getG|](v0) @signature [|Ljava/security/interfaces/DSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAParams|] @type interface;
#L1ad2de.   v5:= temp  @type object;
#L1ad2e0.   call temp:=  [|java:math:BigInteger.toByteArray|](v5) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad2e6.   v5:= temp  @type object;
#L1ad2e8.   call temp:=  [|java:security:interfaces:DSAPublicKey.getY|](v8) @signature [|Ljava/security/interfaces/DSAPublicKey;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ad2ee.   v6:= temp  @type object;
#L1ad2f0.   call temp:=  [|java:math:BigInteger.toByteArray|](v6) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad2f6.   v6:= temp  @type object;
#L1ad2f8.   v7:= 0  @length 4;
#L1ad2fa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad300.   v3:= temp;
#L1ad302.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ad308.   return v2  @type object;
#L1ad30a.   v1:= Exception  @type object;
#L1ad30c.   v2:= new [|java:security:InvalidKeyException|];
#L1ad310.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ad316.   throw v2;
  catch  [|java:lang:Exception|] @[L1ad2ac..L1ad308] goto L1ad30a;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v10 @type (this), [|java:io:ObjectInputStream|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1ad338.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v11) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ad33e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ad344.   v0:= temp  @type object;
#L1ad346.   v0:= ([|java:math:BigInteger|])v0;
#L1ad34a.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ad350.   v1:= temp  @type object;
#L1ad352.   v1:= ([|java:math:BigInteger|])v1;
#L1ad356.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ad35c.   v2:= temp  @type object;
#L1ad35e.   v2:= ([|java:math:BigInteger|])v2;
#L1ad362.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ad368.   v3:= temp  @type object;
#L1ad36a.   v3:= ([|java:math:BigInteger|])v3;
#L1ad36e.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ad372.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad378.   v5:= temp  @type object;
#L1ad37a.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad380.   v6:= temp  @type object;
#L1ad382.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad388.   v7:= temp  @type object;
#L1ad38a.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad390.   v8:= temp  @type object;
#L1ad392.   v9:= 0  @length 4;
#L1ad394.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_DSA|](v5, v6, v7, v8, v9) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_DSA:([B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad39a.   v5:= temp;
#L1ad39c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ad3a2.   v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]  := v4 @type object;
#L1ad3a6.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1ad3b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type virtual;
#L1ad3be.   v0:= temp  @type object;
#L1ad3c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad3c6.   v0:= temp;
#L1ad3c8.   if v0 == 0 then goto L1ad3dc;
#L1ad3cc.   v0:= new [|java:io:NotSerializableException|];
#L1ad3d0.   v1:= "engine-based keys can not be serialized" @type (object, string);
#L1ad3d4.   call temp:=  [|java:io:NotSerializableException.<init>|](v0, v1) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1ad3da.   throw v0;
#L1ad3dc.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ad3e2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad3e8.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad3ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getG|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getG:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad3f2.   v0:= temp  @type object;
#L1ad3f4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ad3fa.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad3fe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getP|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad404.   v0:= temp  @type object;
#L1ad406.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ad40c.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad410.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getQ|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getQ:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad416.   v0:= temp  @type object;
#L1ad418.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ad41e.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad422.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad428.   v0:= temp  @type object;
#L1ad42a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ad430.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ad444.   v2:= 0  @length 4;
#L1ad446.   v1:= 1  @length 4;
#L1ad448.   if v6 != v5 then goto L1ad44e;
#L1ad44c.   return v1;
#L1ad44e.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|];
#L1ad452.   if v3 == 0 then goto L1ad474;
#L1ad456.   v0:= v6  @type object;
#L1ad458.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|])v0;
#L1ad45c.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]   @type object;
#L1ad460.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type virtual;
#L1ad466.   v4:= temp  @type object;
#L1ad468.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad46e.   v3:= temp;
#L1ad470.   if v3 != 0 then goto L1ad44c;
#L1ad474.   v3:= instanceof @varname v6 @type [|java:security:interfaces:DSAPublicKey|];
#L1ad478.   if v3 != 0 then goto L1ad480;
#L1ad47c.   v1:= v2;
#L1ad47e.   goto L1ad44c;
#L1ad480.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad486.   v0:= v6  @type object;
#L1ad488.   v0:= ([|java:security:interfaces:DSAPublicKey|])v0;
#L1ad48c.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad490.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad496.   v3:= temp  @type object;
#L1ad498.   call temp:=  [|java:security:interfaces:DSAPublicKey.getY|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ad49e.   v4:= temp  @type object;
#L1ad4a0.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad4a6.   v3:= temp;
#L1ad4a8.   if v3 == 0 then goto L1ad4c4;
#L1ad4ac.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad4b0.   call temp:=  [|java:security:interfaces:DSAPublicKey.getParams|](v0) @signature [|Ljava/security/interfaces/DSAPublicKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @classDescriptor [|java:security:interfaces:DSAPublicKey|] @type interface;
#L1ad4b6.   v4:= temp  @type object;
#L1ad4b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad4be.   v3:= temp;
#L1ad4c0.   if v3 != 0 then goto L1ad44c;
#L1ad4c4.   v1:= v2;
#L1ad4c6.   goto L1ad44c;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad4d8.   v0:= "DSA" @type (object, string);
#L1ad4dc.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad4f0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]   @type object;
#L1ad4f4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ad4fa.   v0:= temp;
#L1ad4fc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PUBKEY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PUBKEY:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad502.   v0:= temp  @type object;
#L1ad504.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad518.   v0:= "X.509" @type (object, string);
#L1ad51c.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access  {
      local temp ;
        v0;
      
#L1ad530.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.key|]   @type object;
#L1ad534.   return v0  @type object;

   }
    procedure [|java:security:interfaces:DSAParams|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getParams:()Ljava/security/interfaces/DSAParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad548.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad54e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad552.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getY|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getY:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad564.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad56a.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad56e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad574.   v0:= temp  @type object;
#L1ad576.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1ad588.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad58e.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad592.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad598.   v0:= temp  @type object;
#L1ad59a.   call temp:=  [|java:math:BigInteger.hashCode|](v0) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad5a0.   v0:= temp;
#L1ad5a2.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad5a6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.hashCode|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.hashCode:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad5ac.   v1:= temp;
#L1ad5ae.   v0:= v0 ^~ v1  @type int;
#L1ad5b0.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ad5c4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.ensureReadParams|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type direct;
#L1ad5ca.   v0:= new [|java:lang:StringBuilder|];
#L1ad5ce.   v1:= "OpenSSLDSAPublicKey{" @type (object, string);
#L1ad5d2.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ad5d8.   v1:= "Y=" @type (object, string);
#L1ad5dc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad5e2.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad5e6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.getY|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.getY:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad5ec.   v1:= temp  @type object;
#L1ad5ee.   v2:= 16  @length 16;
#L1ad5f2.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad5f8.   v1:= temp  @type object;
#L1ad5fa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad600.   v1:= 44  @length 16;
#L1ad604.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad60a.   v1:= "params=" @type (object, string);
#L1ad60e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad614.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.params|]   @type object;
#L1ad618.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams.toString|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAParams;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAParams|] @type virtual;
#L1ad61e.   v1:= temp  @type object;
#L1ad620.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad626.   v1:= 125  @length 16;
#L1ad62a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad630.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad636.   v1:= temp  @type object;
#L1ad638.   return v1  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.context|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1ad64c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ad652.   if v3 != 0 then goto L1ad666;
#L1ad656.   v0:= new [|java:lang:NullPointerException|];
#L1ad65a.   v1:= "ctx == 0" @type (object, string);
#L1ad65e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1ad664.   throw v0;
#L1ad666.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.context|]  := v3;
#L1ad66a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ad67c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.context|] ;
#L1ad680.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_destroy|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_destroy:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad686.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ad68c.   return @void ;
#L1ad68e.   v0:= Exception  @type object;
#L1ad690.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ad696.   throw v0;
  catch  [|any|] @[L1ad67c..L1ad686] goto L1ad68e;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.getContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.getContext:()I|] @Access  {
      local temp ;
        v0;
      
#L1ad6b4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.context|] ;
#L1ad6b8.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|]  @type class @AccessFlag FINAL  {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v0 @type (this), [|int|] v1) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.<init>:(I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1ad6cc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ad6d2.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|]  := v1;
#L1ad6d6.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getCurveByName|] ([|java:lang:String|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getCurveByName:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L1ad6e8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_new_by_curve_name|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_new_by_curve_name:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad6ee.   v0:= temp;
#L1ad6f0.   if v0 != 0 then goto L1ad6f8;
#L1ad6f4.   v1:= 0  @length 4;
#L1ad6f6.   return v1  @type object;
#L1ad6f8.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|];
#L1ad6fc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type direct;
#L1ad702.   goto L1ad6f6;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|] ([|int|] v6, [|java:math:BigInteger|] v7 @type (object), [|java:math:BigInteger|] v8 @type (object), [|java:math:BigInteger|] v9 @type (object), [|java:math:BigInteger|] v10 @type (object), [|java:math:BigInteger|] v11 @type (object), [|java:math:BigInteger|] v12 @type (object), [|java:math:BigInteger|] v13 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(ILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1ad714.   call temp:=  [|java:math:BigInteger.toByteArray|](v7) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad71a.   v3:= temp  @type object;
#L1ad71c.   call temp:=  [|java:math:BigInteger.toByteArray|](v8) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad722.   v4:= temp  @type object;
#L1ad724.   call temp:=  [|java:math:BigInteger.toByteArray|](v9) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad72a.   v5:= temp  @type object;
#L1ad72c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_new_curve|](v6, v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_new_curve:(I[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad732.   v0:= temp;
#L1ad734.   if v0 != 0 then goto L1ad73c;
#L1ad738.   v2:= 0  @length 4;
#L1ad73a.   return v2  @type object;
#L1ad73c.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|];
#L1ad740.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.<init>|](v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type direct;
#L1ad746.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|];
#L1ad74a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_new|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_new:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad750.   v3:= temp;
#L1ad752.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.<init>|](v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type direct;
#L1ad758.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ad75e.   v3:= temp;
#L1ad760.   call temp:=  [|java:math:BigInteger.toByteArray|](v10) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad766.   v4:= temp  @type object;
#L1ad768.   call temp:=  [|java:math:BigInteger.toByteArray|](v11) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad76e.   v5:= temp  @type object;
#L1ad770.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_set_affine_coordinates|](v0, v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_set_affine_coordinates:(II[B[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad776.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ad77c.   v3:= temp;
#L1ad77e.   call temp:=  [|java:math:BigInteger.toByteArray|](v12) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad784.   v4:= temp  @type object;
#L1ad786.   call temp:=  [|java:math:BigInteger.toByteArray|](v13) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad78c.   v5:= temp  @type object;
#L1ad78e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_set_generator|](v0, v3, v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_set_generator:(II[B[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad794.   goto L1ad73a;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|] ([|java:security:spec:ECParameterSpec|] v13 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L1ad7a8.   call temp:=  [|java:security:spec:ECParameterSpec.getCurve|](v13) @signature [|Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ad7ae.   v8:= temp  @type object;
#L1ad7b0.   call temp:=  [|java:security:spec:EllipticCurve.getField|](v8) @signature [|Ljava/security/spec/EllipticCurve;.getField:()Ljava/security/spec/ECField;|] @classDescriptor [|java:security:spec:EllipticCurve|] @type virtual;
#L1ad7b6.   v9:= temp  @type object;
#L1ad7b8.   v2:= instanceof @varname v9 @type [|java:security:spec:ECFieldFp|];
#L1ad7bc.   if v2 == 0 then goto L1ad81a;
#L1ad7c0.   v0:= 1  @length 4;
#L1ad7c2.   v9:= ([|java:security:spec:ECFieldFp|])v9;
#L1ad7c6.   call temp:=  [|java:security:spec:ECFieldFp.getP|](v9) @signature [|Ljava/security/spec/ECFieldFp;.getP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECFieldFp|] @type virtual;
#L1ad7cc.   v1:= temp  @type object;
#L1ad7ce.   call temp:=  [|java:security:spec:ECParameterSpec.getGenerator|](v13) @signature [|Ljava/security/spec/ECParameterSpec;.getGenerator:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ad7d4.   v10:= temp  @type object;
#L1ad7d6.   call temp:=  [|java:security:spec:EllipticCurve.getA|](v8) @signature [|Ljava/security/spec/EllipticCurve;.getA:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:EllipticCurve|] @type virtual;
#L1ad7dc.   v2:= temp  @type object;
#L1ad7de.   call temp:=  [|java:security:spec:EllipticCurve.getB|](v8) @signature [|Ljava/security/spec/EllipticCurve;.getB:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:EllipticCurve|] @type virtual;
#L1ad7e4.   v3:= temp  @type object;
#L1ad7e6.   call temp:=  [|java:security:spec:ECPoint.getAffineX|](v10) @signature [|Ljava/security/spec/ECPoint;.getAffineX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ad7ec.   v4:= temp  @type object;
#L1ad7ee.   call temp:=  [|java:security:spec:ECPoint.getAffineY|](v10) @signature [|Ljava/security/spec/ECPoint;.getAffineY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ad7f4.   v5:= temp  @type object;
#L1ad7f6.   call temp:=  [|java:security:spec:ECParameterSpec.getOrder|](v13) @signature [|Ljava/security/spec/ECParameterSpec;.getOrder:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ad7fc.   v6:= temp  @type object;
#L1ad7fe.   call temp:=  [|java:security:spec:ECParameterSpec.getCofactor|](v13) @signature [|Ljava/security/spec/ECParameterSpec;.getCofactor:()I|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ad804.   v7:= temp;
#L1ad806.   v11:= (long)v7  @type i2l;
#L1ad808.   call temp:=  [|java:math:BigInteger.valueOf|](v11, v12) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L1ad80e.   v7:= temp  @type object;
#L1ad810.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(ILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1ad816.   v2:= temp  @type object;
#L1ad818.   return v2  @type object;
#L1ad81a.   v2:= instanceof @varname v9 @type [|java:security:spec:ECFieldF2m|];
#L1ad81e.   if v2 == 0 then goto L1ad832;
#L1ad822.   v0:= 2  @length 4;
#L1ad824.   v9:= ([|java:security:spec:ECFieldF2m|])v9;
#L1ad828.   call temp:=  [|java:security:spec:ECFieldF2m.getReductionPolynomial|](v9) @signature [|Ljava/security/spec/ECFieldF2m;.getReductionPolynomial:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECFieldF2m|] @type virtual;
#L1ad82e.   v1:= temp  @type object;
#L1ad830.   goto L1ad7ce;
#L1ad832.   v2:= new [|java:security:InvalidParameterException|];
#L1ad836.   v3:= new [|java:lang:StringBuilder|];
#L1ad83a.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ad840.   v4:= "unhandled field class " @type (object, string);
#L1ad844.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad84a.   v3:= temp  @type object;
#L1ad84c.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1ad852.   v4:= temp  @type object;
#L1ad854.   call temp:=  [|java:lang:Class.getName|](v4) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1ad85a.   v4:= temp  @type object;
#L1ad85c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad862.   v3:= temp  @type object;
#L1ad864.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ad86a.   v3:= temp  @type object;
#L1ad86c.   call temp:=  [|java:security:InvalidParameterException.<init>|](v2, v3) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1ad872.   throw v2;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ad884.   v1:= instanceof @varname v4 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|];
#L1ad888.   if v1 != 0 then goto L1ad890;
#L1ad88c.   v1:= 0  @length 4;
#L1ad88e.   return v1;
#L1ad890.   v0:= v4  @type object;
#L1ad892.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|])v0;
#L1ad896.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad89a.   v2:= v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad89e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_cmp|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_cmp:(II)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad8a4.   v1:= temp;
#L1ad8a6.   goto L1ad88e;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ad8b8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad8bc.   if v0 == 0 then goto L1ad8ca;
#L1ad8c0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad8c4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_clear_free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_clear_free:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad8ca.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ad8d0.   return @void ;
#L1ad8d2.   v0:= Exception  @type object;
#L1ad8d4.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ad8da.   throw v0;
  catch  [|any|] @[L1ad8b8..L1ad8ca] goto L1ad8d2;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ad8f8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad8fc.   return v0;

   }
    procedure [|java:security:spec:ECParameterSpec|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getECParameterSpec|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v15 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getECParameterSpec:()Ljava/security/spec/ECParameterSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L1ad910.   v14:= 2  @length 4;
#L1ad912.   v13:= 1  @length 4;
#L1ad914.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad918.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EC_GROUP_type|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EC_GROUP_type:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad91e.   v5:= temp;
#L1ad920.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad924.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_curve|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_curve:(I)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad92a.   v4:= temp  @type object;
#L1ad92c.   v10:= new [|java:math:BigInteger|];
#L1ad930.   v12:= 0  @length 4;
#L1ad932.   v12:= v4[v12]  @type object;
#L1ad936.   call temp:=  [|java:math:BigInteger.<init>|](v10, v12) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ad93c.   v0:= new [|java:math:BigInteger|];
#L1ad940.   v12:= v4[v13]  @type object;
#L1ad944.   call temp:=  [|java:math:BigInteger.<init>|](v0, v12) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ad94a.   v1:= new [|java:math:BigInteger|];
#L1ad94e.   v12:= v4[v14]  @type object;
#L1ad952.   call temp:=  [|java:math:BigInteger.<init>|](v1, v12) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ad958.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad95c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EC_GROUP_type|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EC_GROUP_type:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad962.   v11:= temp;
#L1ad964.   if v11 != v13 then goto L1ad9da;
#L1ad968.   v6:= new [|java:security:spec:ECFieldFp|];
#L1ad96c.   call temp:=  [|java:security:spec:ECFieldFp.<init>|](v6, v10) @signature [|Ljava/security/spec/ECFieldFp;.<init>:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:ECFieldFp|] @type direct;
#L1ad972.   v3:= new [|java:security:spec:EllipticCurve|];
#L1ad976.   call temp:=  [|java:security:spec:EllipticCurve.<init>|](v3, v6, v0, v1) @signature [|Ljava/security/spec/EllipticCurve;.<init>:(Ljava/security/spec/ECField;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:EllipticCurve|] @type direct;
#L1ad97c.   v8:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|];
#L1ad980.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad984.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_generator|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_generator:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad98a.   v12:= temp;
#L1ad98c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.<init>|](v8, v15, v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type direct;
#L1ad992.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getECPoint|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getECPoint:()Ljava/security/spec/ECPoint;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ad998.   v7:= temp  @type object;
#L1ad99a.   v9:= new [|java:math:BigInteger|];
#L1ad99e.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad9a2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_order|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_order:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad9a8.   v12:= temp  @type object;
#L1ad9aa.   call temp:=  [|java:math:BigInteger.<init>|](v9, v12) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ad9b0.   v2:= new [|java:math:BigInteger|];
#L1ad9b4.   v12:= v15.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.groupCtx|] ;
#L1ad9b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_get_cofactor|](v12) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_get_cofactor:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ad9be.   v12:= temp  @type object;
#L1ad9c0.   call temp:=  [|java:math:BigInteger.<init>|](v2, v12) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ad9c6.   v12:= new [|java:security:spec:ECParameterSpec|];
#L1ad9ca.   call temp:=  [|java:math:BigInteger.intValue|](v2) @signature [|Ljava/math/BigInteger;.intValue:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad9d0.   v13:= temp;
#L1ad9d2.   call temp:=  [|java:security:spec:ECParameterSpec.<init>|](v12, v3, v7, v9, v13) @signature [|Ljava/security/spec/ECParameterSpec;.<init>:(Ljava/security/spec/EllipticCurve;Ljava/security/spec/ECPoint;Ljava/math/BigInteger;I)V|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type direct;
#L1ad9d8.   return v12  @type object;
#L1ad9da.   if v11 != v14 then goto L1ad9f6;
#L1ad9de.   v6:= new [|java:security:spec:ECFieldF2m|];
#L1ad9e2.   call temp:=  [|java:math:BigInteger.bitLength|](v10) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ad9e8.   v12:= temp;
#L1ad9ea.   v12:= v12 + -1;
#L1ad9ee.   call temp:=  [|java:security:spec:ECFieldF2m.<init>|](v6, v12, v10) @signature [|Ljava/security/spec/ECFieldF2m;.<init>:(ILjava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:ECFieldF2m|] @type direct;
#L1ad9f4.   goto L1ad972;
#L1ad9f6.   v12:= new [|java:lang:RuntimeException|];
#L1ad9fa.   v13:= new [|java:lang:StringBuilder|];
#L1ad9fe.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ada04.   v14:= "unknown curve type " @type (object, string);
#L1ada08.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ada0e.   v13:= temp  @type object;
#L1ada10.   call temp:=  [|java:lang:StringBuilder.append|](v13, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ada16.   v13:= temp  @type object;
#L1ada18.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ada1e.   v13:= temp  @type object;
#L1ada20.   call temp:=  [|java:lang:RuntimeException.<init>|](v12, v13) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1ada26.   throw v12;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ada38.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type super;
#L1ada3e.   v0:= temp;
#L1ada40.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:KeyPairGenerator|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.ALGORITHM|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.DEFAULT_KEY_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Map|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECKeyPairGenerator;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ada54.   v0:= new [|java:util:HashMap|];
#L1ada58.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L1ada5e.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|] := v0  @type object;
#L1ada62.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1ada66.   v1:= 192  @length 16;
#L1ada6a.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1ada70.   v1:= temp  @type object;
#L1ada72.   v2:= "prime192v1" @type (object, string);
#L1ada76.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1ada7c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1ada80.   v1:= 224  @length 16;
#L1ada84.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1ada8a.   v1:= temp  @type object;
#L1ada8c.   v2:= "P-224" @type (object, string);
#L1ada90.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1ada96.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1ada9a.   v1:= 239  @length 16;
#L1ada9e.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adaa4.   v1:= temp  @type object;
#L1adaa6.   v2:= "prime239v1" @type (object, string);
#L1adaaa.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adab0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1adab4.   v1:= 256  @length 16;
#L1adab8.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adabe.   v1:= temp  @type object;
#L1adac0.   v2:= "prime256v1" @type (object, string);
#L1adac4.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adaca.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1adace.   v1:= 384  @length 16;
#L1adad2.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adad8.   v1:= temp  @type object;
#L1adada.   v2:= "P-384" @type (object, string);
#L1adade.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adae4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1adae8.   v1:= 521  @length 16;
#L1adaec.   call temp:=  [|java:lang:Integer.valueOf|](v1) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adaf2.   v1:= temp  @type object;
#L1adaf4.   v2:= "P-521" @type (object, string);
#L1adaf8.   call temp:=  [|java:util:Map.put|](v0, v1, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adafe.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECKeyPairGenerator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1adb10.   v0:= "EC" @type (object, string);
#L1adb14.   call temp:=  [|java:security:KeyPairGenerator.<init>|](v1, v0) @signature [|Ljava/security/KeyPairGenerator;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:KeyPairGenerator|] @type direct;
#L1adb1a.   return @void ;

   }
    procedure [|java:security:KeyPair|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.generateKeyPair|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] v6 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECKeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1adb2c.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]   @type object;
#L1adb30.   if v2 != 0 then goto L1adb5c;
#L1adb34.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1adb38.   v3:= 192  @length 16;
#L1adb3c.   call temp:=  [|java:lang:Integer.valueOf|](v3) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adb42.   v3:= temp  @type object;
#L1adb44.   call temp:=  [|java:util:Map.get|](v2, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adb4a.   v0:= temp  @type object;
#L1adb4c.   v0:= ([|java:lang:String|])v0;
#L1adb50.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getCurveByName|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getCurveByName:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adb56.   v2:= temp  @type object;
#L1adb58.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]  := v2 @type object;
#L1adb5c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1adb60.   v2:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]   @type object;
#L1adb64.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1adb6a.   v2:= temp;
#L1adb6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_generate_key|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_generate_key:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1adb72.   v2:= temp;
#L1adb74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1adb7a.   v2:= new [|java:security:KeyPair|];
#L1adb7e.   v3:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|];
#L1adb82.   v4:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]   @type object;
#L1adb86.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.<init>|](v3, v4, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type direct;
#L1adb8c.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|];
#L1adb90.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]   @type object;
#L1adb94.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.<init>|](v4, v5, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type direct;
#L1adb9a.   call temp:=  [|java:security:KeyPair.<init>|](v2, v3, v4) @signature [|Ljava/security/KeyPair;.<init>:(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V|] @classDescriptor [|java:security:KeyPair|] @type direct;
#L1adba0.   return v2  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] v5 @type (this), [|int|] v6, [|java:security:SecureRandom|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECKeyPairGenerator;.initialize:(ILjava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1adbb4.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.SIZE_TO_CURVE_NAME|]   @type object;
#L1adbb8.   call temp:=  [|java:lang:Integer.valueOf|](v6) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L1adbbe.   v3:= temp  @type object;
#L1adbc0.   call temp:=  [|java:util:Map.get|](v2, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1adbc6.   v0:= temp  @type object;
#L1adbc8.   v0:= ([|java:lang:String|])v0;
#L1adbcc.   if v0 != 0 then goto L1adc02;
#L1adbd0.   v2:= new [|java:security:InvalidParameterException|];
#L1adbd4.   v3:= new [|java:lang:StringBuilder|];
#L1adbd8.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1adbde.   v4:= "unknown key size " @type (object, string);
#L1adbe2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adbe8.   v3:= temp  @type object;
#L1adbea.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adbf0.   v3:= temp  @type object;
#L1adbf2.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adbf8.   v3:= temp  @type object;
#L1adbfa.   call temp:=  [|java:security:InvalidParameterException.<init>|](v2, v3) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1adc00.   throw v2;
#L1adc02.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getCurveByName|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getCurveByName:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adc08.   v1:= temp  @type object;
#L1adc0a.   if v1 != 0 then goto L1adc40;
#L1adc0e.   v2:= new [|java:security:InvalidParameterException|];
#L1adc12.   v3:= new [|java:lang:StringBuilder|];
#L1adc16.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1adc1c.   v4:= "unknown curve " @type (object, string);
#L1adc20.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adc26.   v3:= temp  @type object;
#L1adc28.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adc2e.   v3:= temp  @type object;
#L1adc30.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adc36.   v3:= temp  @type object;
#L1adc38.   call temp:=  [|java:security:InvalidParameterException.<init>|](v2, v3) @signature [|Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidParameterException|] @type direct;
#L1adc3e.   throw v2;
#L1adc40.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]  := v1 @type object;
#L1adc44.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] v6 @type (this), [|java:security:spec:AlgorithmParameterSpec|] v7 @type (object), [|java:security:SecureRandom|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECKeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1adc58.   v3:= instanceof @varname v7 @type [|java:security:spec:ECParameterSpec|];
#L1adc5c.   if v3 == 0 then goto L1adc74;
#L1adc60.   v1:= v7  @type object;
#L1adc62.   v1:= ([|java:security:spec:ECParameterSpec|])v1;
#L1adc66.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adc6c.   v3:= temp  @type object;
#L1adc6e.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]  := v3 @type object;
#L1adc72.   return @void ;
#L1adc74.   v3:= instanceof @varname v7 @type [|java:security:spec:ECGenParameterSpec|];
#L1adc78.   if v3 == 0 then goto L1adcce;
#L1adc7c.   v1:= v7  @type object;
#L1adc7e.   v1:= ([|java:security:spec:ECGenParameterSpec|])v1;
#L1adc82.   call temp:=  [|java:security:spec:ECGenParameterSpec.getName|](v1) @signature [|Ljava/security/spec/ECGenParameterSpec;.getName:()Ljava/lang/String;|] @classDescriptor [|java:security:spec:ECGenParameterSpec|] @type virtual;
#L1adc88.   v0:= temp  @type object;
#L1adc8a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getCurveByName|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getCurveByName:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adc90.   v2:= temp  @type object;
#L1adc92.   if v2 != 0 then goto L1adcc8;
#L1adc96.   v3:= new [|java:security:InvalidAlgorithmParameterException|];
#L1adc9a.   v4:= new [|java:lang:StringBuilder|];
#L1adc9e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1adca4.   v5:= "unknown curve name: " @type (object, string);
#L1adca8.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adcae.   v4:= temp  @type object;
#L1adcb0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adcb6.   v4:= temp  @type object;
#L1adcb8.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1adcbe.   v4:= temp  @type object;
#L1adcc0.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v3, v4) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1adcc6.   throw v3;
#L1adcc8.   v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator.group|]  := v2 @type object;
#L1adccc.   goto L1adc72;
#L1adcce.   v3:= new [|java:security:InvalidAlgorithmParameterException|];
#L1adcd2.   v4:= "parameter must be ECParameterSpec or ECGenParameterSpec" @type (object, string);
#L1adcd6.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v3, v4) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1adcdc.   throw v3;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|]  @type class @AccessFlag FINAL  {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (object), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1adcf0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1adcf6.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]  := v1 @type object;
#L1adcfa.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|]  := v2;
#L1adcfe.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getInstance|] ([|int|] v5, [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v6 @type (object), [|java:security:spec:ECPoint|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getInstance:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Ljava/security/spec/ECPoint;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1add10.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|];
#L1add14.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1add1a.   v1:= temp;
#L1add1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_new|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_new:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1add22.   v1:= temp;
#L1add24.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.<init>|](v0, v6, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type direct;
#L1add2a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1add30.   v1:= temp;
#L1add32.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1add38.   v2:= temp;
#L1add3a.   call temp:=  [|java:security:spec:ECPoint.getAffineX|](v7) @signature [|Ljava/security/spec/ECPoint;.getAffineX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1add40.   v3:= temp  @type object;
#L1add42.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1add48.   v3:= temp  @type object;
#L1add4a.   call temp:=  [|java:security:spec:ECPoint.getAffineY|](v7) @signature [|Ljava/security/spec/ECPoint;.getAffineY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1add50.   v4:= temp  @type object;
#L1add52.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1add58.   v4:= temp  @type object;
#L1add5a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_set_affine_coordinates|](v1, v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_set_affine_coordinates:(II[B[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1add60.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1add74.   v1:= 0  @length 4;
#L1add76.   v2:= instanceof @varname v5 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|];
#L1add7a.   if v2 != 0 then goto L1add80;
#L1add7e.   return v1;
#L1add80.   v0:= v5  @type object;
#L1add82.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|])v0;
#L1add86.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]   @type object;
#L1add8a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1add90.   v2:= temp;
#L1add92.   v3:= v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]   @type object;
#L1add96.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1add9c.   v3:= temp;
#L1add9e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_GROUP_cmp|](v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_GROUP_cmp:(II)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1adda4.   v2:= temp;
#L1adda6.   if v2 == 0 then goto L1add7e;
#L1addaa.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]   @type object;
#L1addae.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1addb4.   v1:= temp;
#L1addb6.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1addba.   v3:= v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1addbe.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_cmp|](v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_cmp:(III)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1addc4.   v1:= temp;
#L1addc6.   goto L1add7e;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1addd8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1adddc.   if v0 == 0 then goto L1addea;
#L1adde0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1adde4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_clear_free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_clear_free:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1addea.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1addf0.   return @void ;
#L1addf2.   v0:= Exception  @type object;
#L1addf4.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1addfa.   throw v0;
  catch  [|any|] @[L1addd8..L1addea] goto L1addf2;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ade18.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1ade1c.   return v0;

   }
    procedure [|java:security:spec:ECPoint|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getECPoint|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getECPoint:()Ljava/security/spec/ECPoint;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ade30.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.group|]   @type object;
#L1ade34.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ade3a.   v3:= temp;
#L1ade3c.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.pointCtx|] ;
#L1ade40.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_POINT_get_affine_coordinates|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_POINT_get_affine_coordinates:(II)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ade46.   v0:= temp  @type object;
#L1ade48.   v1:= new [|java:math:BigInteger|];
#L1ade4c.   v3:= 0  @length 4;
#L1ade4e.   v3:= v0[v3]  @type object;
#L1ade52.   call temp:=  [|java:math:BigInteger.<init>|](v1, v3) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ade58.   v2:= new [|java:math:BigInteger|];
#L1ade5c.   v3:= 1  @length 4;
#L1ade5e.   v3:= v0[v3]  @type object;
#L1ade62.   call temp:=  [|java:math:BigInteger.<init>|](v2, v3) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1ade68.   v3:= new [|java:security:spec:ECPoint|];
#L1ade6c.   call temp:=  [|java:security:spec:ECPoint.<init>|](v3, v1, v2) @signature [|Ljava/security/spec/ECPoint;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:ECPoint|] @type direct;
#L1ade72.   return v3  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ade84.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type super;
#L1ade8a.   v0:= temp;
#L1ade8c.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:security:interfaces:ECPrivateKey|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.group|]    @AccessFlag PROTECTED_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]    @AccessFlag PROTECTED_TRANSIENT;
   }
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.ALGORITHM|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1adea0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1adea6.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.group|]  := v1 @type object;
#L1adeaa.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]  := v2 @type object;
#L1adeae.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getInstance|] ([|java:security:interfaces:ECPrivateKey|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getInstance:(Ljava/security/interfaces/ECPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1adec0.   call temp:=  [|java:security:interfaces:ECPrivateKey.getParams|](v7) @signature [|Ljava/security/interfaces/ECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|java:security:interfaces:ECPrivateKey|] @type interface;
#L1adec6.   v3:= temp  @type object;
#L1adec8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adece.   v1:= temp  @type object;
#L1aded0.   call temp:=  [|java:security:interfaces:ECPrivateKey.getS|](v7) @signature [|Ljava/security/interfaces/ECPrivateKey;.getS:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:ECPrivateKey|] @type interface;
#L1aded6.   v2:= temp  @type object;
#L1aded8.   v3:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1adedc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1adee2.   v4:= temp;
#L1adee4.   v5:= 0  @length 4;
#L1adee6.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1adeec.   v6:= temp  @type object;
#L1adeee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_EC_KEY|](v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_EC_KEY:(II[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1adef4.   v4:= temp;
#L1adef6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1adefc.   return v3  @type object;
#L1adefe.   v0:= Exception  @type object;
#L1adf00.   v3:= new [|java:security:InvalidKeyException|];
#L1adf04.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1adf0a.   throw v3;
  catch  [|java:lang:Exception|] @[L1adec0..L1adefc] goto L1adefe;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getPrivateKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getPrivateKey:()Ljava/math/BigInteger;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1adf2c.   v0:= new [|java:math:BigInteger|];
#L1adf30.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1adf34.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1adf3a.   v1:= temp;
#L1adf3c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_get_private_key|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_get_private_key:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1adf42.   v1:= temp  @type object;
#L1adf44.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1adf4a.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v8 @type (this), [|java:io:ObjectInputStream|] v9 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1adf5c.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v9) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1adf62.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1adf68.   v2:= temp  @type object;
#L1adf6a.   v2:= ([|java:security:spec:ECParameterSpec|])v2;
#L1adf6e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1adf74.   v3:= temp  @type object;
#L1adf76.   v3:= ([|java:math:BigInteger|])v3;
#L1adf7a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1adf80.   v1:= temp  @type object;
#L1adf82.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1adf86.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1adf8c.   v5:= temp;
#L1adf8e.   v6:= 0  @length 4;
#L1adf90.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1adf96.   v7:= temp  @type object;
#L1adf98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_EC_KEY|](v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_EC_KEY:(II[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1adf9e.   v5:= temp;
#L1adfa0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v4, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1adfa6.   v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]  := v4 @type object;
#L1adfaa.   return @void ;
#L1adfac.   v0:= Exception  @type object;
#L1adfae.   v4:= new [|java:lang:ClassNotFoundException|];
#L1adfb2.   v5:= "cannot restore field type" @type (object, string);
#L1adfb6.   call temp:=  [|java:lang:ClassNotFoundException.<init>|](v4, v5, v0) @signature [|Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:ClassNotFoundException|] @type direct;
#L1adfbc.   throw v4;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1adf7a..L1adf80] goto L1adfac;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1adfe0.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1adfe4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1adfea.   v0:= temp;
#L1adfec.   if v0 == 0 then goto L1ae000;
#L1adff0.   v0:= new [|java:io:NotSerializableException|];
#L1adff4.   v1:= "engine-based keys can not be serialized" @type (object, string);
#L1adff8.   call temp:=  [|java:io:NotSerializableException.<init>|](v0, v1) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1adffe.   throw v0;
#L1ae000.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae006.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type virtual;
#L1ae00c.   v0:= temp  @type object;
#L1ae00e.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae014.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getPrivateKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getPrivateKey:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type direct;
#L1ae01a.   v0:= temp  @type object;
#L1ae01c.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae022.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ae034.   v3:= 1  @length 4;
#L1ae036.   v4:= 0  @length 4;
#L1ae038.   if v8 != v7 then goto L1ae03e;
#L1ae03c.   return v3;
#L1ae03e.   v5:= instanceof @varname v8 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|];
#L1ae042.   if v5 == 0 then goto L1ae05e;
#L1ae046.   v0:= v8  @type object;
#L1ae048.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|])v0;
#L1ae04c.   v3:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae050.   v4:= v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae054.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae05a.   v3:= temp;
#L1ae05c.   goto L1ae03c;
#L1ae05e.   v5:= instanceof @varname v8 @type [|java:security:interfaces:ECPrivateKey|];
#L1ae062.   if v5 != 0 then goto L1ae06a;
#L1ae066.   v3:= v4;
#L1ae068.   goto L1ae03c;
#L1ae06a.   v0:= v8  @type object;
#L1ae06c.   v0:= ([|java:security:interfaces:ECPrivateKey|])v0;
#L1ae070.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getPrivateKey|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getPrivateKey:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type direct;
#L1ae076.   v5:= temp  @type object;
#L1ae078.   call temp:=  [|java:security:interfaces:ECPrivateKey.getS|](v0) @signature [|Ljava/security/interfaces/ECPrivateKey;.getS:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:ECPrivateKey|] @type interface;
#L1ae07e.   v6:= temp  @type object;
#L1ae080.   call temp:=  [|java:math:BigInteger.equals|](v5, v6) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ae086.   v5:= temp;
#L1ae088.   if v5 != 0 then goto L1ae090;
#L1ae08c.   v3:= v4;
#L1ae08e.   goto L1ae03c;
#L1ae090.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getParams|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type virtual;
#L1ae096.   v2:= temp  @type object;
#L1ae098.   call temp:=  [|java:security:interfaces:ECPrivateKey.getParams|](v0) @signature [|Ljava/security/interfaces/ECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|java:security:interfaces:ECPrivateKey|] @type interface;
#L1ae09e.   v1:= temp  @type object;
#L1ae0a0.   call temp:=  [|java:security:spec:ECParameterSpec.getCurve|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0a6.   v5:= temp  @type object;
#L1ae0a8.   call temp:=  [|java:security:spec:ECParameterSpec.getCurve|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0ae.   v6:= temp  @type object;
#L1ae0b0.   call temp:=  [|java:security:spec:EllipticCurve.equals|](v5, v6) @signature [|Ljava/security/spec/EllipticCurve;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:security:spec:EllipticCurve|] @type virtual;
#L1ae0b6.   v5:= temp;
#L1ae0b8.   if v5 == 0 then goto L1ae108;
#L1ae0bc.   call temp:=  [|java:security:spec:ECParameterSpec.getGenerator|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getGenerator:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0c2.   v5:= temp  @type object;
#L1ae0c4.   call temp:=  [|java:security:spec:ECParameterSpec.getGenerator|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getGenerator:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0ca.   v6:= temp  @type object;
#L1ae0cc.   call temp:=  [|java:security:spec:ECPoint.equals|](v5, v6) @signature [|Ljava/security/spec/ECPoint;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ae0d2.   v5:= temp;
#L1ae0d4.   if v5 == 0 then goto L1ae108;
#L1ae0d8.   call temp:=  [|java:security:spec:ECParameterSpec.getOrder|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getOrder:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0de.   v5:= temp  @type object;
#L1ae0e0.   call temp:=  [|java:security:spec:ECParameterSpec.getOrder|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getOrder:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0e6.   v6:= temp  @type object;
#L1ae0e8.   call temp:=  [|java:math:BigInteger.equals|](v5, v6) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ae0ee.   v5:= temp;
#L1ae0f0.   if v5 == 0 then goto L1ae108;
#L1ae0f4.   call temp:=  [|java:security:spec:ECParameterSpec.getCofactor|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getCofactor:()I|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae0fa.   v5:= temp;
#L1ae0fc.   call temp:=  [|java:security:spec:ECParameterSpec.getCofactor|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getCofactor:()I|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae102.   v6:= temp;
#L1ae104.   if v5 == v6 then goto L1ae03c;
#L1ae108.   v3:= v4;
#L1ae10a.   goto L1ae03c;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae11c.   v0:= "EC" @type (object, string);
#L1ae120.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae134.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae138.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae13e.   v0:= temp;
#L1ae140.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PKCS8_PRIV_KEY_INFO|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PKCS8_PRIV_KEY_INFO:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae146.   v0:= temp  @type object;
#L1ae148.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae15c.   v0:= "PKCS#8" @type (object, string);
#L1ae160.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access  {
      local temp ;
        v0;
      
#L1ae174.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae178.   return v0  @type object;

   }
    procedure [|java:security:spec:ECParameterSpec|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae18c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.group|]   @type object;
#L1ae190.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getECParameterSpec|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getECParameterSpec:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae196.   v0:= temp  @type object;
#L1ae198.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getS|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getS:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae1ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getPrivateKey|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getPrivateKey:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type direct;
#L1ae1b2.   v0:= temp  @type object;
#L1ae1b4.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae1c8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae1cc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae1d2.   v0:= temp;
#L1ae1d4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PKCS8_PRIV_KEY_INFO|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PKCS8_PRIV_KEY_INFO:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae1da.   v0:= temp  @type object;
#L1ae1dc.   call temp:=  [|java:util:Arrays.hashCode|](v0) @signature [|Ljava/util/Arrays;.hashCode:([B)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L1ae1e2.   v0:= temp;
#L1ae1e4.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae1f8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae1fc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae202.   v0:= temp;
#L1ae204.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_print_private|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_print_private:(I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae20a.   v0:= temp  @type object;
#L1ae20c.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:security:interfaces:ECPublicKey|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.group|]    @AccessFlag PROTECTED_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]    @AccessFlag PROTECTED_TRANSIENT;
   }
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.ALGORITHM|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1ae220.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ae226.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.group|]  := v1 @type object;
#L1ae22a.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]  := v2 @type object;
#L1ae22e.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getInstance|] ([|java:security:interfaces:ECPublicKey|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getInstance:(Ljava/security/interfaces/ECPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ae240.   call temp:=  [|java:security:interfaces:ECPublicKey.getParams|](v7) @signature [|Ljava/security/interfaces/ECPublicKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|java:security:interfaces:ECPublicKey|] @type interface;
#L1ae246.   v3:= temp  @type object;
#L1ae248.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1ae24e.   v1:= temp  @type object;
#L1ae250.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae256.   v3:= temp;
#L1ae258.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EC_GROUP_type|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EC_GROUP_type:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae25e.   v3:= temp;
#L1ae260.   call temp:=  [|java:security:interfaces:ECPublicKey.getW|](v7) @signature [|Ljava/security/interfaces/ECPublicKey;.getW:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:interfaces:ECPublicKey|] @type interface;
#L1ae266.   v4:= temp  @type object;
#L1ae268.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getInstance|](v3, v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getInstance:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Ljava/security/spec/ECPoint;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type static;
#L1ae26e.   v2:= temp  @type object;
#L1ae270.   v3:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ae274.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae27a.   v4:= temp;
#L1ae27c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ae282.   v5:= temp;
#L1ae284.   v6:= 0  @length 4;
#L1ae286.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_EC_KEY|](v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_EC_KEY:(II[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae28c.   v4:= temp;
#L1ae28e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ae294.   return v3  @type object;
#L1ae296.   v0:= Exception  @type object;
#L1ae298.   v3:= new [|java:security:InvalidKeyException|];
#L1ae29c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v0) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ae2a2.   throw v3;
  catch  [|java:lang:Exception|] @[L1ae240..L1ae294] goto L1ae296;

   }
    procedure [|java:security:spec:ECPoint|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getPublicKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getPublicKey:()Ljava/security/spec/ECPoint;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ae2c4.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|];
#L1ae2c8.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.group|]   @type object;
#L1ae2cc.   v2:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae2d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae2d6.   v2:= temp;
#L1ae2d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EC_KEY_get_public_key|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EC_KEY_get_public_key:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae2de.   v2:= temp;
#L1ae2e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type direct;
#L1ae2e6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getECPoint|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getECPoint:()Ljava/security/spec/ECPoint;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ae2ec.   v1:= temp  @type object;
#L1ae2ee.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v12 @type (this), [|java:io:ObjectInputStream|] v13 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L1ae300.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v13) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ae306.   call temp:=  [|java:io:ObjectInputStream.readObject|](v13) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ae30c.   v4:= temp  @type object;
#L1ae30e.   v4:= ([|java:security:spec:ECParameterSpec|])v4;
#L1ae312.   call temp:=  [|java:io:ObjectInputStream.readObject|](v13) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ae318.   v6:= temp  @type object;
#L1ae31a.   v6:= ([|java:math:BigInteger|])v6;
#L1ae31e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v13) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1ae324.   v7:= temp  @type object;
#L1ae326.   v7:= ([|java:math:BigInteger|])v7;
#L1ae32a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getInstance|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getInstance:(Ljava/security/spec/ECParameterSpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type static;
#L1ae330.   v2:= temp  @type object;
#L1ae332.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae338.   v8:= temp;
#L1ae33a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_EC_GROUP_type|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_EC_GROUP_type:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae340.   v0:= temp;
#L1ae342.   v3:= new [|java:security:spec:ECPoint|];
#L1ae346.   call temp:=  [|java:security:spec:ECPoint.<init>|](v3, v6, v7) @signature [|Ljava/security/spec/ECPoint;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:ECPoint|] @type direct;
#L1ae34c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getInstance|](v0, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getInstance:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;Ljava/security/spec/ECPoint;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type static;
#L1ae352.   v5:= temp  @type object;
#L1ae354.   v8:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ae358.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae35e.   v9:= temp;
#L1ae360.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext.getContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPointContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPointContext|] @type virtual;
#L1ae366.   v10:= temp;
#L1ae368.   v11:= 0  @length 4;
#L1ae36a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_EC_KEY|](v9, v10, v11) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_EC_KEY:(II[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae370.   v9:= temp;
#L1ae372.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v8, v9) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ae378.   v12.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]  := v8 @type object;
#L1ae37c.   return @void ;
#L1ae37e.   v1:= Exception  @type object;
#L1ae380.   v8:= new [|java:lang:ClassNotFoundException|];
#L1ae384.   v9:= "cannot restore field type" @type (object, string);
#L1ae388.   call temp:=  [|java:lang:ClassNotFoundException.<init>|](v8, v9, v1) @signature [|Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:ClassNotFoundException|] @type direct;
#L1ae38e.   throw v8;
  catch  [|java:security:InvalidAlgorithmParameterException|] @[L1ae32a..L1ae330] goto L1ae37e;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ae3b0.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae3b4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae3ba.   v1:= temp;
#L1ae3bc.   if v1 == 0 then goto L1ae3d0;
#L1ae3c0.   v1:= new [|java:io:NotSerializableException|];
#L1ae3c4.   v2:= "engine-based keys can not be serialized" @type (object, string);
#L1ae3c8.   call temp:=  [|java:io:NotSerializableException.<init>|](v1, v2) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1ae3ce.   throw v1;
#L1ae3d0.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae3d6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getParams|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type virtual;
#L1ae3dc.   v1:= temp  @type object;
#L1ae3de.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae3e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getPublicKey|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getPublicKey:()Ljava/security/spec/ECPoint;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type direct;
#L1ae3ea.   v0:= temp  @type object;
#L1ae3ec.   call temp:=  [|java:security:spec:ECPoint.getAffineX|](v0) @signature [|Ljava/security/spec/ECPoint;.getAffineX:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ae3f2.   v1:= temp  @type object;
#L1ae3f4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae3fa.   call temp:=  [|java:security:spec:ECPoint.getAffineY|](v0) @signature [|Ljava/security/spec/ECPoint;.getAffineY:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ae400.   v1:= temp  @type object;
#L1ae402.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1ae408.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1ae41c.   v3:= 1  @length 4;
#L1ae41e.   v4:= 0  @length 4;
#L1ae420.   if v8 != v7 then goto L1ae426;
#L1ae424.   return v3;
#L1ae426.   v5:= instanceof @varname v8 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|];
#L1ae42a.   if v5 == 0 then goto L1ae446;
#L1ae42e.   v0:= v8  @type object;
#L1ae430.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|])v0;
#L1ae434.   v3:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae438.   v4:= v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.key|]   @type object;
#L1ae43c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae442.   v3:= temp;
#L1ae444.   goto L1ae424;
#L1ae446.   v5:= instanceof @varname v8 @type [|java:security:interfaces:ECPublicKey|];
#L1ae44a.   if v5 != 0 then goto L1ae452;
#L1ae44e.   v3:= v4;
#L1ae450.   goto L1ae424;
#L1ae452.   v0:= v8  @type object;
#L1ae454.   v0:= ([|java:security:interfaces:ECPublicKey|])v0;
#L1ae458.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getPublicKey|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getPublicKey:()Ljava/security/spec/ECPoint;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type direct;
#L1ae45e.   v5:= temp  @type object;
#L1ae460.   call temp:=  [|java:security:interfaces:ECPublicKey.getW|](v0) @signature [|Ljava/security/interfaces/ECPublicKey;.getW:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:interfaces:ECPublicKey|] @type interface;
#L1ae466.   v6:= temp  @type object;
#L1ae468.   call temp:=  [|java:security:spec:ECPoint.equals|](v5, v6) @signature [|Ljava/security/spec/ECPoint;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ae46e.   v5:= temp;
#L1ae470.   if v5 != 0 then goto L1ae478;
#L1ae474.   v3:= v4;
#L1ae476.   goto L1ae424;
#L1ae478.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getParams|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type virtual;
#L1ae47e.   v2:= temp  @type object;
#L1ae480.   call temp:=  [|java:security:interfaces:ECPublicKey.getParams|](v0) @signature [|Ljava/security/interfaces/ECPublicKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|java:security:interfaces:ECPublicKey|] @type interface;
#L1ae486.   v1:= temp  @type object;
#L1ae488.   call temp:=  [|java:security:spec:ECParameterSpec.getCurve|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae48e.   v5:= temp  @type object;
#L1ae490.   call temp:=  [|java:security:spec:ECParameterSpec.getCurve|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getCurve:()Ljava/security/spec/EllipticCurve;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae496.   v6:= temp  @type object;
#L1ae498.   call temp:=  [|java:security:spec:EllipticCurve.equals|](v5, v6) @signature [|Ljava/security/spec/EllipticCurve;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:security:spec:EllipticCurve|] @type virtual;
#L1ae49e.   v5:= temp;
#L1ae4a0.   if v5 == 0 then goto L1ae4f0;
#L1ae4a4.   call temp:=  [|java:security:spec:ECParameterSpec.getGenerator|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getGenerator:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4aa.   v5:= temp  @type object;
#L1ae4ac.   call temp:=  [|java:security:spec:ECParameterSpec.getGenerator|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getGenerator:()Ljava/security/spec/ECPoint;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4b2.   v6:= temp  @type object;
#L1ae4b4.   call temp:=  [|java:security:spec:ECPoint.equals|](v5, v6) @signature [|Ljava/security/spec/ECPoint;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:security:spec:ECPoint|] @type virtual;
#L1ae4ba.   v5:= temp;
#L1ae4bc.   if v5 == 0 then goto L1ae4f0;
#L1ae4c0.   call temp:=  [|java:security:spec:ECParameterSpec.getOrder|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getOrder:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4c6.   v5:= temp  @type object;
#L1ae4c8.   call temp:=  [|java:security:spec:ECParameterSpec.getOrder|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getOrder:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4ce.   v6:= temp  @type object;
#L1ae4d0.   call temp:=  [|java:math:BigInteger.equals|](v5, v6) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1ae4d6.   v5:= temp;
#L1ae4d8.   if v5 == 0 then goto L1ae4f0;
#L1ae4dc.   call temp:=  [|java:security:spec:ECParameterSpec.getCofactor|](v2) @signature [|Ljava/security/spec/ECParameterSpec;.getCofactor:()I|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4e2.   v5:= temp;
#L1ae4e4.   call temp:=  [|java:security:spec:ECParameterSpec.getCofactor|](v1) @signature [|Ljava/security/spec/ECParameterSpec;.getCofactor:()I|] @classDescriptor [|java:security:spec:ECParameterSpec|] @type virtual;
#L1ae4ea.   v6:= temp;
#L1ae4ec.   if v5 == v6 then goto L1ae424;
#L1ae4f0.   v3:= v4;
#L1ae4f2.   goto L1ae424;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae504.   v0:= "EC" @type (object, string);
#L1ae508.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae51c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae520.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae526.   v0:= temp;
#L1ae528.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PUBKEY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PUBKEY:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae52e.   v0:= temp  @type object;
#L1ae530.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae544.   v0:= "X.509" @type (object, string);
#L1ae548.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae55c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae560.   return v0  @type object;

   }
    procedure [|java:security:spec:ECParameterSpec|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getParams:()Ljava/security/spec/ECParameterSpec;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae574.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.group|]   @type object;
#L1ae578.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext.getECParameterSpec|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECGroupContext;.getECParameterSpec:()Ljava/security/spec/ECParameterSpec;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECGroupContext|] @type virtual;
#L1ae57e.   v0:= temp  @type object;
#L1ae580.   return v0  @type object;

   }
    procedure [|java:security:spec:ECPoint|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getW|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getW:()Ljava/security/spec/ECPoint;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae594.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getPublicKey|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getPublicKey:()Ljava/security/spec/ECPoint;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type direct;
#L1ae59a.   v0:= temp  @type object;
#L1ae59c.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae5b0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae5b4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae5ba.   v0:= temp;
#L1ae5bc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PUBKEY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PUBKEY:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae5c2.   v0:= temp  @type object;
#L1ae5c4.   call temp:=  [|java:util:Arrays.hashCode|](v0) @signature [|Ljava/util/Arrays;.hashCode:([B)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L1ae5ca.   v0:= temp;
#L1ae5cc.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae5e0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.key|]   @type object;
#L1ae5e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae5ea.   v0:= temp;
#L1ae5ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_print_public|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_print_public:(I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae5f2.   v0:= temp  @type object;
#L1ae5f4.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:Object|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.mLoadingLock|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ae608.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_load_dynamic|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_load_dynamic:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae60e.   v0:= new [|java:lang:Object|];
#L1ae612.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ae618.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.mLoadingLock|] := v0  @type object;
#L1ae61c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.<init>:(I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1ae630.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ae636.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|]  := v3;
#L1ae63a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_init|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_init:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae640.   v0:= temp;
#L1ae642.   if v0 != 0 then goto L1ae65c;
#L1ae646.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_free|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_free:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae64c.   v0:= new [|java:lang:IllegalArgumentException|];
#L1ae650.   v1:= "Could not initialize engine" @type (object, string);
#L1ae654.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1ae65a.   throw v0;
#L1ae65c.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.getInstance|] ([|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.getInstance:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ae670.   if v5 != 0 then goto L1ae684;
#L1ae674.   v1:= new [|java:lang:NullPointerException|];
#L1ae678.   v2:= "engine == null" @type (object, string);
#L1ae67c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1ae682.   throw v1;
#L1ae684.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.mLoadingLock|]   @type object;
#L1ae688.   (@monitorenter v2)
#L1ae68a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_by_id|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_by_id:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae690.   v0:= temp;
#L1ae692.   if v0 != 0 then goto L1ae6ce;
#L1ae696.   v1:= new [|java:lang:IllegalArgumentException|];
#L1ae69a.   v3:= new [|java:lang:StringBuilder|];
#L1ae69e.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ae6a4.   v4:= "Unknown ENGINE id: " @type (object, string);
#L1ae6a8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae6ae.   v3:= temp  @type object;
#L1ae6b0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae6b6.   v3:= temp  @type object;
#L1ae6b8.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae6be.   v3:= temp  @type object;
#L1ae6c0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1ae6c6.   throw v1;
#L1ae6c8.   v1:= Exception  @type object;
#L1ae6ca.   (@monitorexit v2)
#L1ae6cc.   throw v1;
#L1ae6ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_add|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_add:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae6d4.   (@monitorexit v2)
#L1ae6d6.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|];
#L1ae6da.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @type direct;
#L1ae6e0.   return v1  @type object;
  catch  [|any|] @[L1ae68a..L1ae6cc] goto L1ae6c8;
  catch  [|any|] @[L1ae6ce..L1ae6d6] goto L1ae6c8;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ae708.   v1:= 1  @length 4;
#L1ae70a.   v2:= 0  @length 4;
#L1ae70c.   if v6 != v5 then goto L1ae712;
#L1ae710.   return v1;
#L1ae712.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|];
#L1ae716.   if v3 != 0 then goto L1ae71e;
#L1ae71a.   v1:= v2;
#L1ae71c.   goto L1ae710;
#L1ae71e.   v0:= v6  @type object;
#L1ae720.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|])v0;
#L1ae724.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.getEngineContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.getEngineContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @type virtual;
#L1ae72a.   v3:= temp;
#L1ae72c.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae730.   if v3 == v4 then goto L1ae710;
#L1ae734.   v1:= v2;
#L1ae736.   goto L1ae710;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ae748.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae74c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_finish|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_finish:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae752.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae756.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_free:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae75c.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ae762.   return @void ;
#L1ae764.   v0:= Exception  @type object;
#L1ae766.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ae76c.   throw v0;
  catch  [|any|] @[L1ae748..L1ae75c] goto L1ae764;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.getEngineContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.getEngineContext:()I|] @Access  {
      local temp ;
        v0;
      
#L1ae78c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae790.   return v0;

   }
    procedure [|java:security:PrivateKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.getPrivateKeyById|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.getPrivateKeyById:(Ljava/lang/String;)Ljava/security/PrivateKey;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ae7a4.   if v6 != 0 then goto L1ae7b8;
#L1ae7a8.   v2:= new [|java:lang:NullPointerException|];
#L1ae7ac.   v3:= "id == null" @type (object, string);
#L1ae7b0.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1ae7b6.   throw v2;
#L1ae7b8.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae7bc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.ENGINE_load_private_key|](v2, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.ENGINE_load_private_key:(ILjava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae7c2.   v0:= temp;
#L1ae7c4.   if v0 != 0 then goto L1ae7cc;
#L1ae7c8.   v2:= 0  @length 4;
#L1ae7ca.   return v2  @type object;
#L1ae7cc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_type|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_type:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae7d2.   v1:= temp;
#L1ae7d4.   goto L1ae838;
#L1ae7da.   v2:= new [|java:security:InvalidKeyException|];
#L1ae7de.   v3:= new [|java:lang:StringBuilder|];
#L1ae7e2.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1ae7e8.   v4:= "Unknown key type: " @type (object, string);
#L1ae7ec.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae7f2.   v3:= temp  @type object;
#L1ae7f4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae7fa.   v3:= temp  @type object;
#L1ae7fc.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1ae802.   v3:= temp  @type object;
#L1ae804.   call temp:=  [|java:security:InvalidKeyException.<init>|](v2, v3) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1ae80a.   throw v2;
#L1ae80c.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ae810.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v2, v0, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ae816.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1ae81c.   v2:= temp  @type object;
#L1ae81e.   goto L1ae7ca;
#L1ae820.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1ae824.   v3:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ae828.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v3, v0, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1ae82e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.<init>|](v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type direct;
#L1ae834.   goto L1ae7ca;
#L1ae836.   
#L1ae838.   switch v1
                 | 6 => goto L1ae80c
                 | 116 => goto L1ae820
                 | => goto L1ae7da;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1ae85c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.ctx|] ;
#L1ae860.   return v0;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|]  @type class @AccessFlag   {
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.alias|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1ae874.   v0:= 0  @length 4;
#L1ae876.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ae87c.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|]  := v2;
#L1ae880.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]  := v0 @type object;
#L1ae884.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.alias|]  := v0 @type object;
#L1ae888.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v0 @type (this), [|int|] v1, [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(ILorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1ae89c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1ae8a2.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|]  := v1;
#L1ae8a6.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]  := v2 @type object;
#L1ae8aa.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.alias|]  := v3 @type object;
#L1ae8ae.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1ae8c0.   v1:= 1  @length 4;
#L1ae8c2.   v2:= 0  @length 4;
#L1ae8c4.   if v6 != v5 then goto L1ae8ca;
#L1ae8c8.   return v1;
#L1ae8ca.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1ae8ce.   if v3 != 0 then goto L1ae8d6;
#L1ae8d2.   v1:= v2;
#L1ae8d4.   goto L1ae8c8;
#L1ae8d6.   v0:= v6  @type object;
#L1ae8d8.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|])v0;
#L1ae8dc.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|] ;
#L1ae8e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae8e6.   v4:= temp;
#L1ae8e8.   if v3 == v4 then goto L1ae8f0;
#L1ae8ec.   v1:= v2;
#L1ae8ee.   goto L1ae8c8;
#L1ae8f0.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae8f4.   if v3 != 0 then goto L1ae908;
#L1ae8f8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getEngine|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getEngine:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae8fe.   v3:= temp  @type object;
#L1ae900.   if v3 == 0 then goto L1ae8c8;
#L1ae904.   v1:= v2;
#L1ae906.   goto L1ae8c8;
#L1ae908.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae90c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getEngine|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getEngine:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1ae912.   v2:= temp  @type object;
#L1ae914.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.equals|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @type virtual;
#L1ae91a.   v1:= temp;
#L1ae91c.   goto L1ae8c8;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1ae930.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|] ;
#L1ae934.   if v0 == 0 then goto L1ae942;
#L1ae938.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|] ;
#L1ae93c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_free:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1ae942.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ae948.   return @void ;
#L1ae94a.   v0:= Exception  @type object;
#L1ae94c.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1ae952.   throw v0;
  catch  [|any|] @[L1ae930..L1ae942] goto L1ae94a;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getAlias|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getAlias:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L1ae970.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.alias|]   @type object;
#L1ae974.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getEngine|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getEngine:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;|] @Access  {
      local temp ;
        v0;
      
#L1ae988.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae98c.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @Access  {
      local temp ;
        v0;
      
#L1ae9a0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|] ;
#L1ae9a4.   return v0;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1ae9b8.   v0:= 1  @length 4;
#L1ae9ba.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.ctx|] ;
#L1ae9be.   v0:= v1 + 17;
#L1ae9c2.   v2:= v0 * 31;
#L1ae9c6.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae9ca.   if v1 != 0 then goto L1ae9d6;
#L1ae9ce.   v1:= 0  @length 4;
#L1ae9d0.   v0:= v2 + v1  @type int;
#L1ae9d4.   return v0;
#L1ae9d6.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae9da.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine.getEngineContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLEngine;.getEngineContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLEngine|] @type virtual;
#L1ae9e0.   v1:= temp;
#L1ae9e2.   goto L1ae9d0;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @Access  {
      local temp ;
        v0;
      
#L1ae9f4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.engine|]   @type object;
#L1ae9f8.   if v0 == 0 then goto L1aea00;
#L1ae9fc.   v0:= 1  @length 4;
#L1ae9fe.   return v0;
#L1aea00.   v0:= 0  @length 4;
#L1aea02.   goto L1ae9fe;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|javax:crypto:MacSpi|] {
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.ctx|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_md|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_pkey_type|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.macKey|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.singleByte|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.size|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v2 @type (this), [|int|] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1aea14.   call temp:=  [|javax:crypto:MacSpi.<init>|](v2) @signature [|Ljavax/crypto/MacSpi;.<init>:()V|] @classDescriptor [|javax:crypto:MacSpi|] @type direct;
#L1aea1a.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|];
#L1aea1e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_create|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_create:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aea24.   v1:= temp;
#L1aea26.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @type direct;
#L1aea2c.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.ctx|]  := v0 @type object;
#L1aea30.   v0:= 1  @length 4;
#L1aea32.   v0:= new [|byte|][v0];
#L1aea36.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.singleByte|]  := v0 @type object;
#L1aea3a.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_md|]  := v3;
#L1aea3e.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.size|]  := v4;
#L1aea42.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_pkey_type|]  := v5;
#L1aea46.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.reset|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.reset:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aea58.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.ctx|]   @type object;
#L1aea5c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.getContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @type virtual;
#L1aea62.   v0:= temp;
#L1aea64.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_md|] ;
#L1aea68.   v2:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.macKey|]   @type object;
#L1aea6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1aea72.   v2:= temp;
#L1aea74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestSignInit|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestSignInit:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aea7a.   return @void ;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineDoFinal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineDoFinal:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1aea8c.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.ctx|]   @type object;
#L1aea90.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.getContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @type virtual;
#L1aea96.   v1:= temp;
#L1aea98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestSignFinal|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestSignFinal:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aea9e.   v0:= temp  @type object;
#L1aeaa0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.reset|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.reset:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aeaa6.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineGetMacLength|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineGetMacLength:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aeab8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.size|] ;
#L1aeabc.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineInit|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v3 @type (this), [|java:security:Key|] v4 @type (object), [|java:security:spec:AlgorithmParameterSpec|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineInit:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aead0.   v1:= instanceof @varname v4 @type [|javax:crypto:SecretKey|];
#L1aead4.   if v1 != 0 then goto L1aeae8;
#L1aead8.   v1:= new [|java:security:InvalidKeyException|];
#L1aeadc.   v2:= "key must be a SecretKey" @type (object, string);
#L1aeae0.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v2) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1aeae6.   throw v1;
#L1aeae8.   if v5 == 0 then goto L1aeafc;
#L1aeaec.   v1:= new [|java:security:InvalidAlgorithmParameterException|];
#L1aeaf0.   v2:= "unknown parameter type" @type (object, string);
#L1aeaf4.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v1, v2) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1aeafa.   throw v1;
#L1aeafc.   call temp:=  [|java:security:Key.getEncoded|](v4) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1aeb02.   v0:= temp  @type object;
#L1aeb04.   if v0 != 0 then goto L1aeb18;
#L1aeb08.   v1:= new [|java:security:InvalidKeyException|];
#L1aeb0c.   v2:= "key cannot be encoded" @type (object, string);
#L1aeb10.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v2) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1aeb16.   throw v1;
#L1aeb18.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1aeb1c.   v2:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.evp_pkey_type|] ;
#L1aeb20.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_mac_key|](v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_mac_key:(I[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aeb26.   v2:= temp;
#L1aeb28.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1aeb2e.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.macKey|]  := v1 @type object;
#L1aeb32.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.reset|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.reset:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aeb38.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineReset|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineReset:()V|] @Access PROTECTED {
      local temp ;
      
#L1aeb4c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.reset|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.reset:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aeb52.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v3 @type (this), [|byte|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineUpdate:(B)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aeb64.   v2:= 0  @length 4;
#L1aeb66.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.singleByte|]   @type object;
#L1aeb6a.   v0[v2]:= v4  @byte;
#L1aeb6e.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.singleByte|]   @type object;
#L1aeb72.   v1:= 1  @length 4;
#L1aeb74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineUpdate|](v3, v0, v2, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineUpdate:([BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type virtual;
#L1aeb7a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.engineUpdate:([BII)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aeb8c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.ctx|]   @type object;
#L1aeb90.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext.getContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDigestContext;.getContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDigestContext|] @type virtual;
#L1aeb96.   v0:= temp;
#L1aeb98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestUpdate|](v0, v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestUpdate:(I[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aeb9e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacMD5;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aebb0.   v0:= "md5" @type (object, string);
#L1aebb4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aebba.   v0:= temp;
#L1aebbc.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.EVP_MD|] := v0;
#L1aebc0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.EVP_MD|] ;
#L1aebc4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aebca.   v0:= temp;
#L1aebcc.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.SIZE|] := v0;
#L1aebd0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacMD5;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aebe4.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.EVP_MD|] ;
#L1aebe8.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5.SIZE|] ;
#L1aebec.   v2:= 855  @length 16;
#L1aebf0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aebf6.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA1;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aec08.   v0:= "sha1" @type (object, string);
#L1aec0c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aec12.   v0:= temp;
#L1aec14.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.EVP_MD|] := v0;
#L1aec18.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.EVP_MD|] ;
#L1aec1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aec22.   v0:= temp;
#L1aec24.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.SIZE|] := v0;
#L1aec28.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA1;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aec3c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.EVP_MD|] ;
#L1aec40.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1.SIZE|] ;
#L1aec44.   v2:= 855  @length 16;
#L1aec48.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aec4e.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA256;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aec60.   v0:= "sha256" @type (object, string);
#L1aec64.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aec6a.   v0:= temp;
#L1aec6c.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.EVP_MD|] := v0;
#L1aec70.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.EVP_MD|] ;
#L1aec74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aec7a.   v0:= temp;
#L1aec7c.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.SIZE|] := v0;
#L1aec80.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA256;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aec94.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.EVP_MD|] ;
#L1aec98.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256.SIZE|] ;
#L1aec9c.   v2:= 855  @length 16;
#L1aeca0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aeca6.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA384;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aecb8.   v0:= "sha384" @type (object, string);
#L1aecbc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aecc2.   v0:= temp;
#L1aecc4.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.EVP_MD|] := v0;
#L1aecc8.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.EVP_MD|] ;
#L1aeccc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aecd2.   v0:= temp;
#L1aecd4.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.SIZE|] := v0;
#L1aecd8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA384;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aecec.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.EVP_MD|] ;
#L1aecf0.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384.SIZE|] ;
#L1aecf4.   v2:= 855  @length 16;
#L1aecf8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aecfe.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA512;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aed10.   v0:= "sha512" @type (object, string);
#L1aed14.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aed1a.   v0:= temp;
#L1aed1c.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.EVP_MD|] := v0;
#L1aed20.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.EVP_MD|] ;
#L1aed24.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aed2a.   v0:= temp;
#L1aed2c.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.SIZE|] := v0;
#L1aed30.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac$HmacSHA512;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aed44.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.EVP_MD|] ;
#L1aed48.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512.SIZE|] ;
#L1aed4c.   v2:= 855  @length 16;
#L1aed50.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMac;.<init>:(III)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac|] @type direct;
#L1aed56.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|]  @type class @AccessFlag PUBLIC  extends [|java:security:MessageDigest|], [|java:lang:Cloneable|] {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.evp_md|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.singleByte|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.size|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;II)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aed68.   call temp:=  [|java:security:MessageDigest.<init>|](v1, v2) @signature [|Ljava/security/MessageDigest;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:MessageDigest|] @type direct;
#L1aed6e.   v0:= 1  @length 4;
#L1aed70.   v0:= new [|byte|][v0];
#L1aed74.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.singleByte|]  := v0 @type object;
#L1aed78.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.evp_md|]  := v3;
#L1aed7c.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.size|]  := v4;
#L1aed80.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2, [|int|] v3, [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$1|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L1aed94.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aed9a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.free|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.free:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1aedac.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|] ;
#L1aedb0.   if v0 == 0 then goto L1aedc4;
#L1aedb4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|] ;
#L1aedb8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_destroy|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_destroy:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aedbe.   v0:= 0  @length 4;
#L1aedc0.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|]  := v0;
#L1aedc4.   return @void ;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.getCtx|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.getCtx:()I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1aedd8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|] ;
#L1aeddc.   if v0 != 0 then goto L1aedf0;
#L1aede0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.evp_md|] ;
#L1aede4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestInit|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestInit:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aedea.   v0:= temp;
#L1aedec.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|]  := v0;
#L1aedf0.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|] ;
#L1aedf4.   return v0;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.clone|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1aee08.   call temp:=  [|java:security:MessageDigest.clone|](v2) @signature [|Ljava/security/MessageDigest;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:security:MessageDigest|] @type super;
#L1aee0e.   v0:= temp  @type object;
#L1aee10.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|])v0;
#L1aee14.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.getCtx|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.getCtx:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aee1a.   v1:= temp;
#L1aee1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_copy|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_copy:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aee22.   v1:= temp;
#L1aee24.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|]  := v1;
#L1aee28.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineDigest|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineDigest:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aee3c.   v2:= 0  @length 4;
#L1aee3e.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.size|] ;
#L1aee42.   v0:= new [|byte|][v1];
#L1aee46.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.getCtx|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.getCtx:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aee4c.   v1:= temp;
#L1aee4e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestFinal|](v1, v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestFinal:(I[BI)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aee54.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.ctx|]  := v2;
#L1aee58.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineGetDigestLength|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineGetDigestLength:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aee6c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.size|] ;
#L1aee70.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineReset|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineReset:()V|] @Access PROTECTED {
      local temp ;
      
#L1aee84.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.free:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aee8a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v3 @type (this), [|byte|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineUpdate:(B)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1aee9c.   v2:= 0  @length 4;
#L1aee9e.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.singleByte|]   @type object;
#L1aeea2.   v0[v2]:= v4  @byte;
#L1aeea6.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.singleByte|]   @type object;
#L1aeeaa.   v1:= 1  @length 4;
#L1aeeac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineUpdate|](v3, v0, v2, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineUpdate:([BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type virtual;
#L1aeeb2.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.engineUpdate:([BII)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aeec4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.getCtx|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.getCtx:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aeeca.   v0:= temp;
#L1aeecc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_DigestUpdate|](v0, v2, v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_DigestUpdate:(I[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aeed2.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1aeee4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.free|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.free:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aeeea.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1aeef0.   return @void ;
#L1aeef2.   v0:= Exception  @type object;
#L1aeef4.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1aeefa.   throw v0;
  catch  [|any|] @[L1aeee4..L1aeeea] goto L1aeef2;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$MD5;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aef18.   v0:= "md5" @type (object, string);
#L1aef1c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aef22.   v0:= temp;
#L1aef24.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.EVP_MD|] := v0;
#L1aef28.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.EVP_MD|] ;
#L1aef2c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aef32.   v0:= temp;
#L1aef34.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.SIZE|] := v0;
#L1aef38.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$MD5;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aef4c.   v0:= "MD5" @type (object, string);
#L1aef50.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.EVP_MD|] ;
#L1aef54.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$MD5.SIZE|] ;
#L1aef58.   v3:= 0  @length 4;
#L1aef5a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aef60.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA1;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aef74.   v0:= "sha1" @type (object, string);
#L1aef78.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aef7e.   v0:= temp;
#L1aef80.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.EVP_MD|] := v0;
#L1aef84.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.EVP_MD|] ;
#L1aef88.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aef8e.   v0:= temp;
#L1aef90.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.SIZE|] := v0;
#L1aef94.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA1;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aefa8.   v0:= "SHA-1" @type (object, string);
#L1aefac.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.EVP_MD|] ;
#L1aefb0.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA1.SIZE|] ;
#L1aefb4.   v3:= 0  @length 4;
#L1aefb6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1aefbc.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA256;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aefd0.   v0:= "sha256" @type (object, string);
#L1aefd4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aefda.   v0:= temp;
#L1aefdc.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.EVP_MD|] := v0;
#L1aefe0.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.EVP_MD|] ;
#L1aefe4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1aefea.   v0:= temp;
#L1aefec.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.SIZE|] := v0;
#L1aeff0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA256;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1af004.   v0:= "SHA-256" @type (object, string);
#L1af008.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.EVP_MD|] ;
#L1af00c.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA256.SIZE|] ;
#L1af010.   v3:= 0  @length 4;
#L1af012.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1af018.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA384;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1af02c.   v0:= "sha384" @type (object, string);
#L1af030.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1af036.   v0:= temp;
#L1af038.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.EVP_MD|] := v0;
#L1af03c.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.EVP_MD|] ;
#L1af040.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1af046.   v0:= temp;
#L1af048.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.SIZE|] := v0;
#L1af04c.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA384;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1af060.   v0:= "SHA-384" @type (object, string);
#L1af064.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.EVP_MD|] ;
#L1af068.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA384.SIZE|] ;
#L1af06c.   v3:= 0  @length 4;
#L1af06e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1af074.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] {
   }
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.EVP_MD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA512;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1af088.   v0:= "sha512" @type (object, string);
#L1af08c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_get_digestbyname|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_get_digestbyname:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1af092.   v0:= temp;
#L1af094.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.EVP_MD|] := v0;
#L1af098.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.EVP_MD|] ;
#L1af09c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_size|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1af0a2.   v0:= temp;
#L1af0a4.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.SIZE|] := v0;
#L1af0a8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$SHA512;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1af0bc.   v0:= "SHA-512" @type (object, string);
#L1af0c0.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.EVP_MD|] ;
#L1af0c4.   v2:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK$SHA512.SIZE|] ;
#L1af0c8.   v3:= 0  @length 4;
#L1af0ca.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK;.<init>:(Ljava/lang/String;IILorg/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLMessageDigestJDK|] @type direct;
#L1af0d0.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:Provider|] {
   }
      global [|java:lang:String|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.PROVIDER_NAME|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1af0e4.   v0:= "AndroidOpenSSL" @type (object, string);
#L1af0e8.   v1:= 4607182418800017408L  @length wide_high16;
#L1af0ec.   v3:= "Android's OpenSSL-backed security provider" @type (object, string);
#L1af0f0.   call temp:=  [|java:security:Provider.<init>|](v4, v0, v1, v2, v3) @signature [|Ljava/security/Provider;.<init>:(Ljava/lang/String;DLjava/lang/String;)V|] @classDescriptor [|java:security:Provider|] @type direct;
#L1af0f6.   v0:= "SSLContext.SSL" @type (object, string);
#L1af0fa.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af0fe.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af104.   v1:= temp  @type object;
#L1af106.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af10c.   v0:= "SSLContext.SSLv3" @type (object, string);
#L1af110.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af114.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af11a.   v1:= temp  @type object;
#L1af11c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af122.   v0:= "SSLContext.TLS" @type (object, string);
#L1af126.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af12a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af130.   v1:= temp  @type object;
#L1af132.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af138.   v0:= "SSLContext.TLSv1" @type (object, string);
#L1af13c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af140.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af146.   v1:= temp  @type object;
#L1af148.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af14e.   v0:= "SSLContext.TLSv1.1" @type (object, string);
#L1af152.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af156.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af15c.   v1:= temp  @type object;
#L1af15e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af164.   v0:= "SSLContext.TLSv1.2" @type (object, string);
#L1af168.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLContextImpl|];
#L1af16c.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af172.   v1:= temp  @type object;
#L1af174.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af17a.   v0:= "SSLContext.Default" @type (object, string);
#L1af17e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:DefaultSSLContextImpl|];
#L1af182.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af188.   v1:= temp  @type object;
#L1af18a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af190.   v0:= "MessageDigest.SHA-1" @type (object, string);
#L1af194.   v1:= "org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$SHA1" @type (object, string);
#L1af198.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af19e.   v0:= "Alg.Alias.MessageDigest.SHA1" @type (object, string);
#L1af1a2.   v1:= "SHA-1" @type (object, string);
#L1af1a6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1ac.   v0:= "Alg.Alias.MessageDigest.SHA" @type (object, string);
#L1af1b0.   v1:= "SHA-1" @type (object, string);
#L1af1b4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1ba.   v0:= "Alg.Alias.MessageDigest.1.3.14.3.2.26" @type (object, string);
#L1af1be.   v1:= "SHA-1" @type (object, string);
#L1af1c2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1c8.   v0:= "MessageDigest.SHA-256" @type (object, string);
#L1af1cc.   v1:= "org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$SHA256" @type (object, string);
#L1af1d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1d6.   v0:= "Alg.Alias.MessageDigest.SHA256" @type (object, string);
#L1af1da.   v1:= "SHA-256" @type (object, string);
#L1af1de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1e4.   v0:= "Alg.Alias.MessageDigest.2.16.840.1.101.3.4.2.1" @type (object, string);
#L1af1e8.   v1:= "SHA-256" @type (object, string);
#L1af1ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af1f2.   v0:= "MessageDigest.SHA-384" @type (object, string);
#L1af1f6.   v1:= "org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$SHA384" @type (object, string);
#L1af1fa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af200.   v0:= "Alg.Alias.MessageDigest.SHA384" @type (object, string);
#L1af204.   v1:= "SHA-384" @type (object, string);
#L1af208.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af20e.   v0:= "Alg.Alias.MessageDigest.2.16.840.1.101.3.4.2.2" @type (object, string);
#L1af212.   v1:= "SHA-384" @type (object, string);
#L1af216.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af21c.   v0:= "MessageDigest.SHA-512" @type (object, string);
#L1af220.   v1:= "org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$SHA512" @type (object, string);
#L1af224.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af22a.   v0:= "Alg.Alias.MessageDigest.SHA512" @type (object, string);
#L1af22e.   v1:= "SHA-512" @type (object, string);
#L1af232.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af238.   v0:= "Alg.Alias.MessageDigest.2.16.840.1.101.3.4.2.3" @type (object, string);
#L1af23c.   v1:= "SHA-512" @type (object, string);
#L1af240.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af246.   v0:= "MessageDigest.MD5" @type (object, string);
#L1af24a.   v1:= "org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK$MD5" @type (object, string);
#L1af24e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af254.   v0:= "Alg.Alias.MessageDigest.1.2.840.113549.2.5" @type (object, string);
#L1af258.   v1:= "MD5" @type (object, string);
#L1af25c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af262.   v0:= "KeyPairGenerator.RSA" @type (object, string);
#L1af266.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|];
#L1af26a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af270.   v1:= temp  @type object;
#L1af272.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af278.   v0:= "Alg.Alias.KeyPairGenerator.1.2.840.113549.1.1.1" @type (object, string);
#L1af27c.   v1:= "RSA" @type (object, string);
#L1af280.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af286.   v0:= "KeyPairGenerator.DSA" @type (object, string);
#L1af28a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAKeyPairGenerator|];
#L1af28e.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af294.   v1:= temp  @type object;
#L1af296.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af29c.   v0:= "KeyPairGenerator.EC" @type (object, string);
#L1af2a0.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLECKeyPairGenerator|];
#L1af2a4.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af2aa.   v1:= temp  @type object;
#L1af2ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af2b2.   v0:= "KeyFactory.RSA" @type (object, string);
#L1af2b6.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|];
#L1af2ba.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af2c0.   v1:= temp  @type object;
#L1af2c2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af2c8.   v0:= "Alg.Alias.KeyFactory.1.2.840.113549.1.1.1" @type (object, string);
#L1af2cc.   v1:= "RSA" @type (object, string);
#L1af2d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af2d6.   v0:= "Signature.MD5WithRSA" @type (object, string);
#L1af2da.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$MD5RSA|];
#L1af2de.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af2e4.   v1:= temp  @type object;
#L1af2e6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af2ec.   v0:= "Alg.Alias.Signature.MD5WithRSAEncryption" @type (object, string);
#L1af2f0.   v1:= "MD5WithRSA" @type (object, string);
#L1af2f4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af2fa.   v0:= "Alg.Alias.Signature.MD5/RSA" @type (object, string);
#L1af2fe.   v1:= "MD5WithRSA" @type (object, string);
#L1af302.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af308.   v0:= "Alg.Alias.Signature.1.2.840.113549.1.1.4" @type (object, string);
#L1af30c.   v1:= "MD5WithRSA" @type (object, string);
#L1af310.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af316.   v0:= "Alg.Alias.Signature.1.2.840.113549.2.5with1.2.840.113549.1.1.1" @type (object, string);
#L1af31a.   v1:= "MD5WithRSA" @type (object, string);
#L1af31e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af324.   v0:= "Signature.SHA1WithRSA" @type (object, string);
#L1af328.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1RSA|];
#L1af32c.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af332.   v1:= temp  @type object;
#L1af334.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af33a.   v0:= "Alg.Alias.Signature.SHA1WithRSAEncryption" @type (object, string);
#L1af33e.   v1:= "SHA1WithRSA" @type (object, string);
#L1af342.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af348.   v0:= "Alg.Alias.Signature.SHA1/RSA" @type (object, string);
#L1af34c.   v1:= "SHA1WithRSA" @type (object, string);
#L1af350.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af356.   v0:= "Alg.Alias.Signature.SHA-1/RSA" @type (object, string);
#L1af35a.   v1:= "SHA1WithRSA" @type (object, string);
#L1af35e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af364.   v0:= "Alg.Alias.Signature.1.2.840.113549.1.1.5" @type (object, string);
#L1af368.   v1:= "SHA1WithRSA" @type (object, string);
#L1af36c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af372.   v0:= "Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.113549.1.1.1" @type (object, string);
#L1af376.   v1:= "SHA1WithRSA" @type (object, string);
#L1af37a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af380.   v0:= "Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.113549.1.1.5" @type (object, string);
#L1af384.   v1:= "SHA1WithRSA" @type (object, string);
#L1af388.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af38e.   v0:= "Alg.Alias.Signature.1.3.14.3.2.29" @type (object, string);
#L1af392.   v1:= "SHA1WithRSA" @type (object, string);
#L1af396.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af39c.   v0:= "Signature.SHA256WithRSA" @type (object, string);
#L1af3a0.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256RSA|];
#L1af3a4.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af3aa.   v1:= temp  @type object;
#L1af3ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af3b2.   v0:= "Alg.Alias.Signature.SHA256WithRSAEncryption" @type (object, string);
#L1af3b6.   v1:= "SHA256WithRSA" @type (object, string);
#L1af3ba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af3c0.   v0:= "Alg.Alias.Signature.1.2.840.113549.1.1.11" @type (object, string);
#L1af3c4.   v1:= "SHA256WithRSA" @type (object, string);
#L1af3c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af3ce.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.1with1.2.840.113549.1.1.1" @type (object, string);
#L1af3d2.   v1:= "SHA256WithRSA" @type (object, string);
#L1af3d6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af3dc.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.1with1.2.840.113549.1.1.11" @type (object, string);
#L1af3e0.   v1:= "SHA256WithRSA" @type (object, string);
#L1af3e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af3ea.   v0:= "Signature.SHA384WithRSA" @type (object, string);
#L1af3ee.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384RSA|];
#L1af3f2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af3f8.   v1:= temp  @type object;
#L1af3fa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af400.   v0:= "Alg.Alias.Signature.SHA384WithRSAEncryption" @type (object, string);
#L1af404.   v1:= "SHA384WithRSA" @type (object, string);
#L1af408.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af40e.   v0:= "Alg.Alias.Signature.1.2.840.113549.1.1.12" @type (object, string);
#L1af412.   v1:= "SHA384WithRSA" @type (object, string);
#L1af416.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af41c.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.2with1.2.840.113549.1.1.1" @type (object, string);
#L1af420.   v1:= "SHA384WithRSA" @type (object, string);
#L1af424.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af42a.   v0:= "Signature.SHA512WithRSA" @type (object, string);
#L1af42e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA512RSA|];
#L1af432.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af438.   v1:= temp  @type object;
#L1af43a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af440.   v0:= "Alg.Alias.Signature.SHA512WithRSAEncryption" @type (object, string);
#L1af444.   v1:= "SHA512WithRSA" @type (object, string);
#L1af448.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af44e.   v0:= "Alg.Alias.Signature.1.2.840.113549.1.1.13" @type (object, string);
#L1af452.   v1:= "SHA512WithRSA" @type (object, string);
#L1af456.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af45c.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.3with1.2.840.113549.1.1.1" @type (object, string);
#L1af460.   v1:= "SHA512WithRSA" @type (object, string);
#L1af464.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af46a.   v0:= "Signature.SHA1withDSA" @type (object, string);
#L1af46e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1DSA|];
#L1af472.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af478.   v1:= temp  @type object;
#L1af47a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af480.   v0:= "Alg.Alias.Signature.SHA/DSA" @type (object, string);
#L1af484.   v1:= "SHA1withDSA" @type (object, string);
#L1af488.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af48e.   v0:= "Alg.Alias.Signature.DSA" @type (object, string);
#L1af492.   v1:= "SHA1withDSA" @type (object, string);
#L1af496.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af49c.   v0:= "Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.10040.4.1" @type (object, string);
#L1af4a0.   v1:= "SHA1withDSA" @type (object, string);
#L1af4a4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af4aa.   v0:= "Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.10040.4.3" @type (object, string);
#L1af4ae.   v1:= "SHA1withDSA" @type (object, string);
#L1af4b2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af4b8.   v0:= "Alg.Alias.Signature.DSAWithSHA1" @type (object, string);
#L1af4bc.   v1:= "SHA1withDSA" @type (object, string);
#L1af4c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af4c6.   v0:= "Alg.Alias.Signature.1.2.840.10040.4.3" @type (object, string);
#L1af4ca.   v1:= "SHA1withDSA" @type (object, string);
#L1af4ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af4d4.   v0:= "Signature.NONEwithRSA" @type (object, string);
#L1af4d8.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignatureRawRSA|];
#L1af4dc.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af4e2.   v1:= temp  @type object;
#L1af4e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af4ea.   v0:= "Signature.ECDSA" @type (object, string);
#L1af4ee.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1ECDSA|];
#L1af4f2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af4f8.   v1:= temp  @type object;
#L1af4fa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af500.   v0:= "Alg.Alias.Signature.SHA1withECDSA" @type (object, string);
#L1af504.   v1:= "ECDSA" @type (object, string);
#L1af508.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af50e.   v0:= "Alg.Alias.Signature.ECDSAwithSHA1" @type (object, string);
#L1af512.   v1:= "ECDSA" @type (object, string);
#L1af516.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af51c.   v0:= "Alg.Alias.Signature.1.2.840.10045.4.1" @type (object, string);
#L1af520.   v1:= "ECDSA" @type (object, string);
#L1af524.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af52a.   v0:= "Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.10045.2.1" @type (object, string);
#L1af52e.   v1:= "ECDSA" @type (object, string);
#L1af532.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af538.   v0:= "Signature.SHA256withECDSA" @type (object, string);
#L1af53c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256ECDSA|];
#L1af540.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af546.   v1:= temp  @type object;
#L1af548.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af54e.   v0:= "Alg.Alias.Signature.1.2.840.10045.4.3.2" @type (object, string);
#L1af552.   v1:= "SHA256withECDSA" @type (object, string);
#L1af556.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af55c.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.1with1.2.840.10045.2.1" @type (object, string);
#L1af560.   v1:= "SHA256withECDSA" @type (object, string);
#L1af564.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af56a.   v0:= "Signature.SHA384withECDSA" @type (object, string);
#L1af56e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384ECDSA|];
#L1af572.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af578.   v1:= temp  @type object;
#L1af57a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af580.   v0:= "Alg.Alias.Signature.1.2.840.10045.4.3.3" @type (object, string);
#L1af584.   v1:= "SHA384withECDSA" @type (object, string);
#L1af588.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af58e.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.2with1.2.840.10045.2.1" @type (object, string);
#L1af592.   v1:= "SHA384withECDSA" @type (object, string);
#L1af596.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af59c.   v0:= "Signature.SHA512withECDSA" @type (object, string);
#L1af5a0.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA512ECDSA|];
#L1af5a4.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af5aa.   v1:= temp  @type object;
#L1af5ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af5b2.   v0:= "Alg.Alias.Signature.1.2.840.10045.4.3.4" @type (object, string);
#L1af5b6.   v1:= "SHA512withECDSA" @type (object, string);
#L1af5ba.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af5c0.   v0:= "Alg.Alias.Signature.2.16.840.1.101.3.4.2.3with1.2.840.10045.2.1" @type (object, string);
#L1af5c4.   v1:= "SHA512withECDSA" @type (object, string);
#L1af5c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af5ce.   v0:= "SecureRandom.SHA1PRNG" @type (object, string);
#L1af5d2.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|];
#L1af5d6.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af5dc.   v1:= temp  @type object;
#L1af5de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af5e4.   v0:= "SecureRandom.SHA1PRNG ImplementedIn" @type (object, string);
#L1af5e8.   v1:= "Software" @type (object, string);
#L1af5ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af5f2.   v0:= "Cipher.RSA/ECB/NoPadding" @type (object, string);
#L1af5f6.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$Raw|];
#L1af5fa.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af600.   v1:= temp  @type object;
#L1af602.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af608.   v0:= "Alg.Alias.Cipher.RSA/None/NoPadding" @type (object, string);
#L1af60c.   v1:= "RSA/ECB/NoPadding" @type (object, string);
#L1af610.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af616.   v0:= "Cipher.RSA/ECB/PKCS1Padding" @type (object, string);
#L1af61a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipherRSA$PKCS1|];
#L1af61e.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af624.   v1:= temp  @type object;
#L1af626.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af62c.   v0:= "Alg.Alias.Cipher.RSA/None/PKCS1Padding" @type (object, string);
#L1af630.   v1:= "RSA/ECB/PKCS1Padding" @type (object, string);
#L1af634.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af63a.   v0:= "Cipher.AES/ECB/NoPadding" @type (object, string);
#L1af63e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$NoPadding|];
#L1af642.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af648.   v1:= temp  @type object;
#L1af64a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af650.   v0:= "Cipher.AES/ECB/PKCS5Padding" @type (object, string);
#L1af654.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$ECB$PKCS5Padding|];
#L1af658.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af65e.   v1:= temp  @type object;
#L1af660.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af666.   v0:= "Cipher.AES/CBC/NoPadding" @type (object, string);
#L1af66a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$NoPadding|];
#L1af66e.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af674.   v1:= temp  @type object;
#L1af676.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af67c.   v0:= "Cipher.AES/CBC/PKCS5Padding" @type (object, string);
#L1af680.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CBC$PKCS5Padding|];
#L1af684.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af68a.   v1:= temp  @type object;
#L1af68c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af692.   v0:= "Cipher.AES/CFB/NoPadding" @type (object, string);
#L1af696.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$NoPadding|];
#L1af69a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af6a0.   v1:= temp  @type object;
#L1af6a2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af6a8.   v0:= "Cipher.AES/CFB/PKCS5Padding" @type (object, string);
#L1af6ac.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CFB$PKCS5Padding|];
#L1af6b0.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af6b6.   v1:= temp  @type object;
#L1af6b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af6be.   v0:= "Cipher.AES/CTR/NoPadding" @type (object, string);
#L1af6c2.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$NoPadding|];
#L1af6c6.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af6cc.   v1:= temp  @type object;
#L1af6ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af6d4.   v0:= "Cipher.AES/CTR/PKCS5Padding" @type (object, string);
#L1af6d8.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$CTR$PKCS5Padding|];
#L1af6dc.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af6e2.   v1:= temp  @type object;
#L1af6e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af6ea.   v0:= "Cipher.AES/OFB/NoPadding" @type (object, string);
#L1af6ee.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$NoPadding|];
#L1af6f2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af6f8.   v1:= temp  @type object;
#L1af6fa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af700.   v0:= "Cipher.AES/OFB/PKCS5Padding" @type (object, string);
#L1af704.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$AES$OFB$PKCS5Padding|];
#L1af708.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af70e.   v1:= temp  @type object;
#L1af710.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af716.   v0:= "Cipher.DESEDE/CBC/NoPadding" @type (object, string);
#L1af71a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$NoPadding|];
#L1af71e.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af724.   v1:= temp  @type object;
#L1af726.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af72c.   v0:= "Cipher.DESEDE/CBC/PKCS5Padding" @type (object, string);
#L1af730.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CBC$PKCS5Padding|];
#L1af734.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af73a.   v1:= temp  @type object;
#L1af73c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af742.   v0:= "Cipher.DESEDE/CFB/NoPadding" @type (object, string);
#L1af746.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$NoPadding|];
#L1af74a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af750.   v1:= temp  @type object;
#L1af752.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af758.   v0:= "Cipher.DESEDE/CFB/PKCS5Padding" @type (object, string);
#L1af75c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$CFB$PKCS5Padding|];
#L1af760.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af766.   v1:= temp  @type object;
#L1af768.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af76e.   v0:= "Cipher.DESEDE/ECB/NoPadding" @type (object, string);
#L1af772.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$NoPadding|];
#L1af776.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af77c.   v1:= temp  @type object;
#L1af77e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af784.   v0:= "Cipher.DESEDE/ECB/PKCS5Padding" @type (object, string);
#L1af788.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$ECB$PKCS5Padding|];
#L1af78c.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af792.   v1:= temp  @type object;
#L1af794.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af79a.   v0:= "Cipher.DESEDE/OFB/NoPadding" @type (object, string);
#L1af79e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$NoPadding|];
#L1af7a2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af7a8.   v1:= temp  @type object;
#L1af7aa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af7b0.   v0:= "Cipher.DESEDE/OFB/PKCS5Padding" @type (object, string);
#L1af7b4.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$DESEDE$OFB$PKCS5Padding|];
#L1af7b8.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af7be.   v1:= temp  @type object;
#L1af7c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af7c6.   v0:= "Cipher.ARC4" @type (object, string);
#L1af7ca.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLCipher$ARC4|];
#L1af7ce.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af7d4.   v1:= temp  @type object;
#L1af7d6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af7dc.   v0:= "Mac.HmacMD5" @type (object, string);
#L1af7e0.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacMD5|];
#L1af7e4.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af7ea.   v1:= temp  @type object;
#L1af7ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af7f2.   v0:= "Mac.HmacSHA1" @type (object, string);
#L1af7f6.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA1|];
#L1af7fa.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af800.   v1:= temp  @type object;
#L1af802.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af808.   v0:= "Alg.Alias.Mac.1.2.840.113549.2.7" @type (object, string);
#L1af80c.   v1:= "HmacSHA1" @type (object, string);
#L1af810.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af816.   v0:= "Alg.Alias.Mac.HMAC-SHA1" @type (object, string);
#L1af81a.   v1:= "HmacSHA1" @type (object, string);
#L1af81e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af824.   v0:= "Alg.Alias.Mac.HMAC/SHA1" @type (object, string);
#L1af828.   v1:= "HmacSHA1" @type (object, string);
#L1af82c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af832.   v0:= "Mac.HmacSHA256" @type (object, string);
#L1af836.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA256|];
#L1af83a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af840.   v1:= temp  @type object;
#L1af842.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af848.   v0:= "Alg.Alias.Mac.1.2.840.113549.2.9" @type (object, string);
#L1af84c.   v1:= "HmacSHA256" @type (object, string);
#L1af850.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af856.   v0:= "Alg.Alias.Mac.HMAC-SHA256" @type (object, string);
#L1af85a.   v1:= "HmacSHA256" @type (object, string);
#L1af85e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af864.   v0:= "Alg.Alias.Mac.HMAC/SHA256" @type (object, string);
#L1af868.   v1:= "HmacSHA256" @type (object, string);
#L1af86c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af872.   v0:= "Mac.HmacSHA384" @type (object, string);
#L1af876.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA384|];
#L1af87a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af880.   v1:= temp  @type object;
#L1af882.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af888.   v0:= "Alg.Alias.Mac.1.2.840.113549.2.10" @type (object, string);
#L1af88c.   v1:= "HmacSHA384" @type (object, string);
#L1af890.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af896.   v0:= "Alg.Alias.Mac.HMAC-SHA384" @type (object, string);
#L1af89a.   v1:= "HmacSHA384" @type (object, string);
#L1af89e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8a4.   v0:= "Alg.Alias.Mac.HMAC/SHA384" @type (object, string);
#L1af8a8.   v1:= "HmacSHA384" @type (object, string);
#L1af8ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8b2.   v0:= "Mac.HmacSHA512" @type (object, string);
#L1af8b6.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLMac$HmacSHA512|];
#L1af8ba.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af8c0.   v1:= temp  @type object;
#L1af8c2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8c8.   v0:= "Alg.Alias.Mac.1.2.840.113549.2.11" @type (object, string);
#L1af8cc.   v1:= "HmacSHA512" @type (object, string);
#L1af8d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8d6.   v0:= "Alg.Alias.Mac.HMAC-SHA512" @type (object, string);
#L1af8da.   v1:= "HmacSHA512" @type (object, string);
#L1af8de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8e4.   v0:= "Alg.Alias.Mac.HMAC/SHA512" @type (object, string);
#L1af8e8.   v1:= "HmacSHA512" @type (object, string);
#L1af8ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider.put|](v4, v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLProvider;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLProvider|] @type virtual;
#L1af8f2.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|]  @type class @AccessFlag PUBLIC  extends [|java:security:KeyFactorySpi|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1af904.   call temp:=  [|java:security:KeyFactorySpi.<init>|](v0) @signature [|Ljava/security/KeyFactorySpi;.<init>:()V|] @classDescriptor [|java:security:KeyFactorySpi|] @type direct;
#L1af90a.   return @void ;

   }
    procedure [|java:security:PrivateKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGeneratePrivate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] v7 @type (this), [|java:security:spec:KeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGeneratePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1af91c.   v4:= instanceof @varname v8 @type [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1af920.   if v4 == 0 then goto L1af936;
#L1af924.   v3:= v8  @type object;
#L1af926.   v3:= ([|java:security:spec:RSAPrivateCrtKeySpec|])v3;
#L1af92a.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|];
#L1af92e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.<init>|](v4, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.<init>:(Ljava/security/spec/RSAPrivateCrtKeySpec;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type direct;
#L1af934.   return v4  @type object;
#L1af936.   v4:= instanceof @varname v8 @type [|java:security:spec:RSAPrivateKeySpec|];
#L1af93a.   if v4 == 0 then goto L1af950;
#L1af93e.   v3:= v8  @type object;
#L1af940.   v3:= ([|java:security:spec:RSAPrivateKeySpec|])v3;
#L1af944.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1af948.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v4, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Ljava/security/spec/RSAPrivateKeySpec;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1af94e.   goto L1af934;
#L1af950.   v4:= instanceof @varname v8 @type [|java:security:spec:PKCS8EncodedKeySpec|];
#L1af954.   if v4 == 0 then goto L1af990;
#L1af958.   v2:= v8  @type object;
#L1af95a.   v2:= ([|java:security:spec:PKCS8EncodedKeySpec|])v2;
#L1af95e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1af962.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.getEncoded|](v2) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.getEncoded:()[B|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type virtual;
#L1af968.   v4:= temp  @type object;
#L1af96a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PKCS8_PRIV_KEY_INFO|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PKCS8_PRIV_KEY_INFO:([B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1af970.   v4:= temp;
#L1af972.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1af978.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1af97e.   v4:= temp  @type object;
#L1af980.   goto L1af934;
#L1af982.   v0:= Exception  @type object;
#L1af984.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1af988.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v0) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1af98e.   throw v4;
#L1af990.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1af994.   v5:= new [|java:lang:StringBuilder|];
#L1af998.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1af99e.   v6:= "Must use RSAPublicKeySpec or PKCS8EncodedKeySpec; was " @type (object, string);
#L1af9a2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1af9a8.   v5:= temp  @type object;
#L1af9aa.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1af9b0.   v6:= temp  @type object;
#L1af9b2.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1af9b8.   v6:= temp  @type object;
#L1af9ba.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1af9c0.   v5:= temp  @type object;
#L1af9c2.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1af9c8.   v5:= temp  @type object;
#L1af9ca.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v5) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1af9d0.   throw v4;
  catch  [|java:lang:Exception|] @[L1af95e..L1af97e] goto L1af982;

   }
    procedure [|java:security:PublicKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGeneratePublic|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] v7 @type (this), [|java:security:spec:KeySpec|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGeneratePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1af9f4.   v4:= instanceof @varname v8 @type [|java:security:spec:RSAPublicKeySpec|];
#L1af9f8.   if v4 == 0 then goto L1afa0e;
#L1af9fc.   v2:= v8  @type object;
#L1af9fe.   v2:= ([|java:security:spec:RSAPublicKeySpec|])v2;
#L1afa02.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1afa06.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.<init>|](v4, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.<init>:(Ljava/security/spec/RSAPublicKeySpec;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1afa0c.   return v4  @type object;
#L1afa0e.   v4:= instanceof @varname v8 @type [|java:security:spec:X509EncodedKeySpec|];
#L1afa12.   if v4 == 0 then goto L1afa50;
#L1afa16.   v3:= v8  @type object;
#L1afa18.   v3:= ([|java:security:spec:X509EncodedKeySpec|])v3;
#L1afa1c.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1afa20.   call temp:=  [|java:security:spec:X509EncodedKeySpec.getEncoded|](v3) @signature [|Ljava/security/spec/X509EncodedKeySpec;.getEncoded:()[B|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type virtual;
#L1afa26.   v4:= temp  @type object;
#L1afa28.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_PUBKEY|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_PUBKEY:([B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1afa2e.   v4:= temp;
#L1afa30.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1afa36.   v4:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1afa3a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.<init>|](v4, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1afa40.   goto L1afa0c;
#L1afa42.   v0:= Exception  @type object;
#L1afa44.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1afa48.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v0) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afa4e.   throw v4;
#L1afa50.   v4:= new [|java:security:spec:InvalidKeySpecException|];
#L1afa54.   v5:= new [|java:lang:StringBuilder|];
#L1afa58.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1afa5e.   v6:= "Must use RSAPublicKeySpec or X509EncodedKeySpec; was " @type (object, string);
#L1afa62.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1afa68.   v5:= temp  @type object;
#L1afa6a.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afa70.   v6:= temp  @type object;
#L1afa72.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1afa78.   v6:= temp  @type object;
#L1afa7a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1afa80.   v5:= temp  @type object;
#L1afa82.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1afa88.   v5:= temp  @type object;
#L1afa8a.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v4, v5) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afa90.   throw v4;
  catch  [|java:lang:Exception|] @[L1afa1c..L1afa40] goto L1afa42;

   }
    procedure [|java:security:spec:KeySpec|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGetKeySpec|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] v20 @type (this), [|java:security:Key|] v21 @type (object), [|java:lang:Class|] v22 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGetKeySpec:(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
      
#L1afab4.   if v21 != 0 then goto L1afac8;
#L1afab8.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afabc.   v10:= "key == null" @type (object, string);
#L1afac0.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afac6.   throw v1;
#L1afac8.   if v22 != 0 then goto L1afadc;
#L1afacc.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afad0.   v10:= "keySpec == null" @type (object, string);
#L1afad4.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afada.   throw v1;
#L1afadc.   v0:= v21  @type object;
#L1afae0.   v1:= instanceof @varname v0 @type [|java:security:interfaces:RSAPublicKey|];
#L1afae4.   if v1 == 0 then goto L1afb58;
#L1afae8.   v19:= v21  @type object;
#L1afaec.   v19:= ([|java:security:interfaces:RSAPublicKey|])v19;
#L1afaf0.   v1:= new [|java:security:spec:RSAPublicKeySpec|];
#L1afaf4.   v0:= v22  @type object;
#L1afaf8.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afafe.   v1:= temp;
#L1afb00.   if v1 == 0 then goto L1afb20;
#L1afb04.   call temp:=  [|java:security:interfaces:RSAPublicKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1afb0a.   v2:= temp  @type object;
#L1afb0c.   call temp:=  [|java:security:interfaces:RSAPublicKey.getPublicExponent|](v19) @signature [|Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1afb12.   v3:= temp  @type object;
#L1afb14.   v1:= new [|java:security:spec:RSAPublicKeySpec|];
#L1afb18.   call temp:=  [|java:security:spec:RSAPublicKeySpec.<init>|](v1, v2, v3) @signature [|Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPublicKeySpec|] @type direct;
#L1afb1e.   return v1  @type object;
#L1afb20.   v1:= new [|java:security:spec:X509EncodedKeySpec|];
#L1afb24.   v0:= v22  @type object;
#L1afb28.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afb2e.   v1:= temp;
#L1afb30.   if v1 == 0 then goto L1afb48;
#L1afb34.   v1:= new [|java:security:spec:X509EncodedKeySpec|];
#L1afb38.   call temp:=  [|java:security:Key.getEncoded|](v21) @signature [|Ljava/security/Key;.getEncoded:()[B|] @classDescriptor [|java:security:Key|] @type interface;
#L1afb3e.   v10:= temp  @type object;
#L1afb40.   call temp:=  [|java:security:spec:X509EncodedKeySpec.<init>|](v1, v10) @signature [|Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:X509EncodedKeySpec|] @type direct;
#L1afb46.   goto L1afb1e;
#L1afb48.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afb4c.   v10:= "Must be RSAPublicKeySpec or X509EncodedKeySpec" @type (object, string);
#L1afb50.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afb56.   throw v1;
#L1afb58.   v0:= v21  @type object;
#L1afb5c.   v1:= instanceof @varname v0 @type [|java:security:interfaces:RSAPrivateCrtKey|];
#L1afb60.   if v1 == 0 then goto L1afc36;
#L1afb64.   v19:= v21  @type object;
#L1afb68.   v19:= ([|java:security:interfaces:RSAPrivateCrtKey|])v19;
#L1afb6c.   v1:= new [|java:security:spec:RSAPrivateKeySpec|];
#L1afb70.   v0:= v22  @type object;
#L1afb74.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afb7a.   v1:= temp;
#L1afb7c.   if v1 == 0 then goto L1afb9c;
#L1afb80.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afb86.   v2:= temp  @type object;
#L1afb88.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrivateExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afb8e.   v4:= temp  @type object;
#L1afb90.   v1:= new [|java:security:spec:RSAPrivateKeySpec|];
#L1afb94.   call temp:=  [|java:security:spec:RSAPrivateKeySpec.<init>|](v1, v2, v4) @signature [|Ljava/security/spec/RSAPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateKeySpec|] @type direct;
#L1afb9a.   goto L1afb1e;
#L1afb9c.   v1:= new [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1afba0.   v0:= v22  @type object;
#L1afba4.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afbaa.   v1:= temp;
#L1afbac.   if v1 == 0 then goto L1afbfc;
#L1afbb0.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbb6.   v2:= temp  @type object;
#L1afbb8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPublicExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbbe.   v3:= temp  @type object;
#L1afbc0.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrivateExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbc6.   v4:= temp  @type object;
#L1afbc8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeP|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbce.   v5:= temp  @type object;
#L1afbd0.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeQ|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbd6.   v6:= temp  @type object;
#L1afbd8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentP|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbde.   v7:= temp  @type object;
#L1afbe0.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentQ|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbe6.   v8:= temp  @type object;
#L1afbe8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getCrtCoefficient|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afbee.   v9:= temp  @type object;
#L1afbf0.   v1:= new [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1afbf4.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.<init>|](v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type direct;
#L1afbfa.   goto L1afb1e;
#L1afbfc.   v1:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1afc00.   v0:= v22  @type object;
#L1afc04.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afc0a.   v1:= temp;
#L1afc0c.   if v1 == 0 then goto L1afc26;
#L1afc10.   v1:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1afc14.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getEncoded|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getEncoded:()[B|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afc1a.   v10:= temp  @type object;
#L1afc1c.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v1, v10) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1afc22.   goto L1afb1e;
#L1afc26.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afc2a.   v10:= "Must be RSAPrivateKeySpec or or RSAPrivateCrtKeySpec or PKCS8EncodedKeySpec" @type (object, string);
#L1afc2e.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afc34.   throw v1;
#L1afc36.   v0:= v21  @type object;
#L1afc3a.   v1:= instanceof @varname v0 @type [|java:security:interfaces:RSAPrivateKey|];
#L1afc3e.   if v1 == 0 then goto L1afd00;
#L1afc42.   v19:= v21  @type object;
#L1afc46.   v19:= ([|java:security:interfaces:RSAPrivateKey|])v19;
#L1afc4a.   v1:= new [|java:security:spec:RSAPrivateKeySpec|];
#L1afc4e.   v0:= v22  @type object;
#L1afc52.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afc58.   v1:= temp;
#L1afc5a.   if v1 == 0 then goto L1afc7c;
#L1afc5e.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afc64.   v2:= temp  @type object;
#L1afc66.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afc6c.   v4:= temp  @type object;
#L1afc6e.   v1:= new [|java:security:spec:RSAPrivateKeySpec|];
#L1afc72.   call temp:=  [|java:security:spec:RSAPrivateKeySpec.<init>|](v1, v2, v4) @signature [|Ljava/security/spec/RSAPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateKeySpec|] @type direct;
#L1afc78.   goto L1afb1e;
#L1afc7c.   v1:= new [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1afc80.   v0:= v22  @type object;
#L1afc84.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afc8a.   v1:= temp;
#L1afc8c.   if v1 == 0 then goto L1afcc6;
#L1afc90.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afc96.   v2:= temp  @type object;
#L1afc98.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afc9e.   v4:= temp  @type object;
#L1afca0.   v10:= new [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1afca4.   v12:= 0  @length 4;
#L1afca6.   v14:= 0  @length 4;
#L1afca8.   v15:= 0  @length 4;
#L1afcaa.   v16:= 0  @length 16;
#L1afcae.   v17:= 0  @length 16;
#L1afcb2.   v18:= 0  @length 16;
#L1afcb6.   v11:= v2  @type object;
#L1afcb8.   v13:= v4  @type object;
#L1afcba.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.<init>|](v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type direct;
#L1afcc0.   v1:= v10  @type object;
#L1afcc2.   goto L1afb1e;
#L1afcc6.   v1:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1afcca.   v0:= v22  @type object;
#L1afcce.   call temp:=  [|java:lang:Object.equals|](v1, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1afcd4.   v1:= temp;
#L1afcd6.   if v1 == 0 then goto L1afcf0;
#L1afcda.   v1:= new [|java:security:spec:PKCS8EncodedKeySpec|];
#L1afcde.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getEncoded|](v19) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getEncoded:()[B|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afce4.   v10:= temp  @type object;
#L1afce6.   call temp:=  [|java:security:spec:PKCS8EncodedKeySpec.<init>|](v1, v10) @signature [|Ljava/security/spec/PKCS8EncodedKeySpec;.<init>:([B)V|] @classDescriptor [|java:security:spec:PKCS8EncodedKeySpec|] @type direct;
#L1afcec.   goto L1afb1e;
#L1afcf0.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afcf4.   v10:= "Must be RSAPrivateKeySpec or PKCS8EncodedKeySpec" @type (object, string);
#L1afcf8.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afcfe.   throw v1;
#L1afd00.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1afd04.   v10:= "Must be RSAPublicKey or RSAPrivateKey" @type (object, string);
#L1afd08.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1afd0e.   throw v1;

   }
    procedure [|java:security:Key|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineTranslateKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] v13 @type (this), [|java:security:Key|] v14 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineTranslateKey:(Ljava/security/Key;)Ljava/security/Key;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L1afd20.   if v14 != 0 then goto L1afd34;
#L1afd24.   v0:= new [|java:security:InvalidKeyException|];
#L1afd28.   v11:= "key == null" @type (object, string);
#L1afd2c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v11) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afd32.   throw v0;
#L1afd34.   v0:= instanceof @varname v14 @type [|java:security:interfaces:RSAPublicKey|];
#L1afd38.   if v0 == 0 then goto L1afd74;
#L1afd3c.   v10:= v14  @type object;
#L1afd3e.   v10:= ([|java:security:interfaces:RSAPublicKey|])v10;
#L1afd42.   v0:= new [|java:security:spec:RSAPublicKeySpec|];
#L1afd46.   call temp:=  [|java:security:interfaces:RSAPublicKey.getModulus|](v10) @signature [|Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1afd4c.   v11:= temp  @type object;
#L1afd4e.   call temp:=  [|java:security:interfaces:RSAPublicKey.getPublicExponent|](v10) @signature [|Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1afd54.   v12:= temp  @type object;
#L1afd56.   call temp:=  [|java:security:spec:RSAPublicKeySpec.<init>|](v0, v11, v12) @signature [|Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPublicKeySpec|] @type direct;
#L1afd5c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGeneratePublic|](v13, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGeneratePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @type virtual;
#L1afd62.   v0:= temp  @type object;
#L1afd64.   return v0  @type object;
#L1afd66.   v9:= Exception  @type object;
#L1afd68.   v0:= new [|java:security:InvalidKeyException|];
#L1afd6c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v9) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afd72.   throw v0;
#L1afd74.   v0:= instanceof @varname v14 @type [|java:security:interfaces:RSAPrivateCrtKey|];
#L1afd78.   if v0 == 0 then goto L1afde4;
#L1afd7c.   v10:= v14  @type object;
#L1afd7e.   v10:= ([|java:security:interfaces:RSAPrivateCrtKey|])v10;
#L1afd82.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afd88.   v1:= temp  @type object;
#L1afd8a.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPublicExponent|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afd90.   v2:= temp  @type object;
#L1afd92.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrivateExponent|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afd98.   v3:= temp  @type object;
#L1afd9a.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeP|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afda0.   v4:= temp  @type object;
#L1afda2.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeQ|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afda8.   v5:= temp  @type object;
#L1afdaa.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentP|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afdb0.   v6:= temp  @type object;
#L1afdb2.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentQ|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afdb8.   v7:= temp  @type object;
#L1afdba.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getCrtCoefficient|](v10) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1afdc0.   v8:= temp  @type object;
#L1afdc2.   v0:= new [|java:security:spec:RSAPrivateCrtKeySpec|];
#L1afdc6.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type direct;
#L1afdcc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGeneratePrivate|](v13, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGeneratePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @type virtual;
#L1afdd2.   v0:= temp  @type object;
#L1afdd4.   goto L1afd64;
#L1afdd6.   v9:= Exception  @type object;
#L1afdd8.   v0:= new [|java:security:InvalidKeyException|];
#L1afddc.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v9) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afde2.   throw v0;
#L1afde4.   v0:= instanceof @varname v14 @type [|java:security:interfaces:RSAPrivateKey|];
#L1afde8.   if v0 == 0 then goto L1afe24;
#L1afdec.   v10:= v14  @type object;
#L1afdee.   v10:= ([|java:security:interfaces:RSAPrivateKey|])v10;
#L1afdf2.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v10) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afdf8.   v1:= temp  @type object;
#L1afdfa.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v10) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1afe00.   v3:= temp  @type object;
#L1afe02.   v0:= new [|java:security:spec:RSAPrivateKeySpec|];
#L1afe06.   call temp:=  [|java:security:spec:RSAPrivateKeySpec.<init>|](v0, v1, v3) @signature [|Ljava/security/spec/RSAPrivateKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V|] @classDescriptor [|java:security:spec:RSAPrivateKeySpec|] @type direct;
#L1afe0c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory.engineGeneratePrivate|](v13, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyFactory;.engineGeneratePrivate:(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyFactory|] @type virtual;
#L1afe12.   v0:= temp  @type object;
#L1afe14.   goto L1afd64;
#L1afe16.   v9:= Exception  @type object;
#L1afe18.   v0:= new [|java:security:InvalidKeyException|];
#L1afe1c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v9) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afe22.   throw v0;
#L1afe24.   v0:= new [|java:security:InvalidKeyException|];
#L1afe28.   v11:= "Key must be RSAPublicKey or RSAPrivateCrtKey or RSAPrivateKey" @type (object, string);
#L1afe2c.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v11) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afe32.   throw v0;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1afd42..L1afd62] goto L1afd66;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1afdc2..L1afdd2] goto L1afdd6;
  catch  [|java:security:spec:InvalidKeySpecException|] @[L1afe02..L1afe12] goto L1afe16;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|]  @type class @AccessFlag PUBLIC  extends [|java:security:KeyPairGeneratorSpi|] {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.modulusBits|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.publicExponent|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyPairGenerator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1afe6c.   call temp:=  [|java:security:KeyPairGeneratorSpi.<init>|](v1) @signature [|Ljava/security/KeyPairGeneratorSpi;.<init>:()V|] @classDescriptor [|java:security:KeyPairGeneratorSpi|] @type direct;
#L1afe72.   v0:= 3  @length 4;
#L1afe74.   v0:= new [|byte|][v0];
#L1afe78.   goto L1afe8c;
#L1afe7e.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.publicExponent|]  := v0 @type object;
#L1afe82.   v0:= 2048  @length 16;
#L1afe86.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.modulusBits|]  := v0;
#L1afe8a.   return @void ;
#L1afe8c.   v0:=`[fill-array-data length error];
               goto L1afe7e;

   }
    procedure [|java:security:KeyPair|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.generateKeyPair|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1afea8.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1afeac.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.modulusBits|] ;
#L1afeb0.   v4:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.publicExponent|]   @type object;
#L1afeb4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RSA_generate_key_ex|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RSA_generate_key_ex:(I[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1afeba.   v3:= temp;
#L1afebc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v0, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1afec2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1afec8.   v1:= temp  @type object;
#L1afeca.   v2:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1afece.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.<init>|](v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1afed4.   v3:= new [|java:security:KeyPair|];
#L1afed8.   call temp:=  [|java:security:KeyPair.<init>|](v3, v2, v1) @signature [|Ljava/security/KeyPair;.<init>:(Ljava/security/PublicKey;Ljava/security/PrivateKey;)V|] @classDescriptor [|java:security:KeyPair|] @type direct;
#L1afede.   return v3  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] v0 @type (this), [|int|] v1, [|java:security:SecureRandom|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyPairGenerator;.initialize:(ILjava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
      
#L1afef0.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.modulusBits|]  := v1;
#L1afef4.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.initialize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] v4 @type (this), [|java:security:spec:AlgorithmParameterSpec|] v5 @type (object), [|java:security:SecureRandom|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAKeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1aff08.   v2:= instanceof @varname v5 @type [|java:security:spec:RSAKeyGenParameterSpec|];
#L1aff0c.   if v2 != 0 then goto L1aff20;
#L1aff10.   v2:= new [|java:security:InvalidAlgorithmParameterException|];
#L1aff14.   v3:= "Only RSAKeyGenParameterSpec supported" @type (object, string);
#L1aff18.   call temp:=  [|java:security:InvalidAlgorithmParameterException.<init>|](v2, v3) @signature [|Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidAlgorithmParameterException|] @type direct;
#L1aff1e.   throw v2;
#L1aff20.   v1:= v5  @type object;
#L1aff22.   v1:= ([|java:security:spec:RSAKeyGenParameterSpec|])v1;
#L1aff26.   call temp:=  [|java:security:spec:RSAKeyGenParameterSpec.getPublicExponent|](v1) @signature [|Ljava/security/spec/RSAKeyGenParameterSpec;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAKeyGenParameterSpec|] @type virtual;
#L1aff2c.   v0:= temp  @type object;
#L1aff2e.   if v0 == 0 then goto L1aff3e;
#L1aff32.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1aff38.   v2:= temp  @type object;
#L1aff3a.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.publicExponent|]  := v2 @type object;
#L1aff3e.   call temp:=  [|java:security:spec:RSAKeyGenParameterSpec.getKeysize|](v1) @signature [|Ljava/security/spec/RSAKeyGenParameterSpec;.getKeysize:()I|] @classDescriptor [|java:security:spec:RSAKeyGenParameterSpec|] @type virtual;
#L1aff44.   v2:= temp;
#L1aff46.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAKeyPairGenerator.modulusBits|]  := v2;
#L1aff4a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|]  @type class @AccessFlag PUBLIC extends  [|java:security:interfaces:RSAPrivateKey|] {
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.fetchedParams|]    @AccessFlag PROTECTED_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]    @AccessFlag PROTECTED_TRANSIENT;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]    @AccessFlag PROTECTED;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]    @AccessFlag PROTECTED;
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this), [|java:security:spec:RSAPrivateKeySpec|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Ljava/security/spec/RSAPrivateKeySpec;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aff5c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.init|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.init:(Ljava/security/spec/RSAPrivateKeySpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1aff62.   v0:= temp  @type object;
#L1aff64.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1aff6a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1aff7c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1aff82.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]  := v1 @type object;
#L1aff86.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v2 @type (object), [|byte|][][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;[[B)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1aff98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1aff9e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.readParams|](v1, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.readParams:([[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1affa4.   v0:= 1  @length 4;
#L1affa6.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.fetchedParams|]  := v0 @boolean;
#L1affaa.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|] ([|java:security:interfaces:RSAPrivateKey|] v12 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Ljava/security/interfaces/RSAPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L1affbc.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v12) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1affc2.   v9:= temp  @type object;
#L1affc4.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v12) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1affca.   v10:= temp  @type object;
#L1affcc.   if v9 != 0 then goto L1affe0;
#L1affd0.   v0:= new [|java:security:InvalidKeyException|];
#L1affd4.   v1:= "modulus == null" @type (object, string);
#L1affd8.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1affde.   throw v0;
#L1affe0.   if v10 != 0 then goto L1afff4;
#L1affe4.   v0:= new [|java:security:InvalidKeyException|];
#L1affe8.   v1:= "privateExponent == null" @type (object, string);
#L1affec.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v1) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1afff2.   throw v0;
#L1afff4.   v11:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1afff8.   call temp:=  [|java:math:BigInteger.toByteArray|](v9) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1afffe.   v0:= temp  @type object;
#L1b0000.   v1:= 0  @length 4;
#L1b0002.   call temp:=  [|java:math:BigInteger.toByteArray|](v10) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0008.   v2:= temp  @type object;
#L1b000a.   v3:= 0  @length 4;
#L1b000c.   v4:= 0  @length 4;
#L1b000e.   v5:= 0  @length 4;
#L1b0010.   v6:= 0  @length 4;
#L1b0012.   v7:= 0  @length 4;
#L1b0014.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b001a.   v0:= temp;
#L1b001c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v11, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b0022.   return v11  @type object;
#L1b0024.   v8:= Exception  @type object;
#L1b0026.   v0:= new [|java:security:InvalidKeyException|];
#L1b002a.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v8) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b0030.   throw v0;
  catch  [|java:lang:Exception|] @[L1afff4..L1b0022] goto L1b0024;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L1b0054.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b005a.   v1:= temp;
#L1b005c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_RSA_private_params|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_RSA_private_params:(I)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0062.   v0:= temp  @type object;
#L1b0064.   v1:= 1  @length 4;
#L1b0066.   v1:= v0[v1]  @type object;
#L1b006a.   if v1 == 0 then goto L1b007a;
#L1b006e.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|];
#L1b0072.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.<init>|](v1, v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;[[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type direct;
#L1b0078.   return v1  @type object;
#L1b007a.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1b007e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v1, v2, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;[[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1b0084.   goto L1b0078;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.init|] ([|java:security:spec:RSAPrivateKeySpec|] v12 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.init:(Ljava/security/spec/RSAPrivateKeySpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L1b0098.   call temp:=  [|java:security:spec:RSAPrivateKeySpec.getModulus|](v12) @signature [|Ljava/security/spec/RSAPrivateKeySpec;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateKeySpec|] @type virtual;
#L1b009e.   v9:= temp  @type object;
#L1b00a0.   call temp:=  [|java:security:spec:RSAPrivateKeySpec.getPrivateExponent|](v12) @signature [|Ljava/security/spec/RSAPrivateKeySpec;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateKeySpec|] @type virtual;
#L1b00a6.   v10:= temp  @type object;
#L1b00a8.   if v9 != 0 then goto L1b00bc;
#L1b00ac.   v0:= new [|java:security:spec:InvalidKeySpecException|];
#L1b00b0.   v1:= "modulus == null" @type (object, string);
#L1b00b4.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v0, v1) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b00ba.   throw v0;
#L1b00bc.   if v10 != 0 then goto L1b00d0;
#L1b00c0.   v0:= new [|java:security:spec:InvalidKeySpecException|];
#L1b00c4.   v1:= "privateExponent == null" @type (object, string);
#L1b00c8.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v0, v1) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b00ce.   throw v0;
#L1b00d0.   v11:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b00d4.   call temp:=  [|java:math:BigInteger.toByteArray|](v9) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b00da.   v0:= temp  @type object;
#L1b00dc.   v1:= 0  @length 4;
#L1b00de.   call temp:=  [|java:math:BigInteger.toByteArray|](v10) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b00e4.   v2:= temp  @type object;
#L1b00e6.   v3:= 0  @length 4;
#L1b00e8.   v4:= 0  @length 4;
#L1b00ea.   v5:= 0  @length 4;
#L1b00ec.   v6:= 0  @length 4;
#L1b00ee.   v7:= 0  @length 4;
#L1b00f0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b00f6.   v0:= temp;
#L1b00f8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v11, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b00fe.   return v11  @type object;
#L1b0100.   v8:= Exception  @type object;
#L1b0102.   v0:= new [|java:security:spec:InvalidKeySpecException|];
#L1b0106.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v0, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b010c.   throw v0;
  catch  [|java:lang:Exception|] @[L1b00d0..L1b00fe] goto L1b0100;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v9 @type (this), [|java:io:ObjectInputStream|] v10 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1b0130.   v1:= 0  @length 4;
#L1b0132.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v10) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1b0138.   v8:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b013c.   v0:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]   @type object;
#L1b0140.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0146.   v0:= temp  @type object;
#L1b0148.   v2:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b014c.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0152.   v2:= temp  @type object;
#L1b0154.   v3:= v1  @type object;
#L1b0156.   v4:= v1  @type object;
#L1b0158.   v5:= v1  @type object;
#L1b015a.   v6:= v1  @type object;
#L1b015c.   v7:= v1  @type object;
#L1b015e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0164.   v0:= temp;
#L1b0166.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v8, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b016c.   v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]  := v8 @type object;
#L1b0170.   v0:= 1  @length 4;
#L1b0172.   v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.fetchedParams|]  := v0 @boolean;
#L1b0176.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1b0188.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b018e.   v0:= temp  @type object;
#L1b0190.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0196.   v0:= temp;
#L1b0198.   if v0 == 0 then goto L1b01ac;
#L1b019c.   v0:= new [|java:io:NotSerializableException|];
#L1b01a0.   v1:= "engine-based keys can not be serialized" @type (object, string);
#L1b01a4.   call temp:=  [|java:io:NotSerializableException.<init>|](v0, v1) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1b01aa.   throw v0;
#L1b01ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b01b2.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1b01b8.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @Access FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L1b01cc.   (@monitorenter v1)
#L1b01ce.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.fetchedParams|]   @boolean;
#L1b01d2.   if v0 == 0 then goto L1b01da;
#L1b01d6.   (@monitorexit v1)
#L1b01d8.   return @void ;
#L1b01da.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b01de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b01e4.   v0:= temp;
#L1b01e6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_RSA_private_params|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_RSA_private_params:(I)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b01ec.   v0:= temp  @type object;
#L1b01ee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.readParams|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.readParams:([[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b01f4.   v0:= 1  @length 4;
#L1b01f6.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.fetchedParams|]  := v0 @boolean;
#L1b01fa.   goto L1b01d6;
#L1b01fc.   v0:= Exception  @type object;
#L1b01fe.   (@monitorexit v1)
#L1b0200.   throw v0;
  catch  [|any|] @[L1b01ce..L1b01d2] goto L1b01fc;
  catch  [|any|] @[L1b01da..L1b01fa] goto L1b01fc;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b0228.   v2:= 0  @length 4;
#L1b022a.   v1:= 1  @length 4;
#L1b022c.   if v6 != v5 then goto L1b0232;
#L1b0230.   return v1;
#L1b0232.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1b0236.   if v3 == 0 then goto L1b0278;
#L1b023a.   v0:= v6  @type object;
#L1b023c.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|])v0;
#L1b0240.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b0244.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b024a.   v4:= temp  @type object;
#L1b024c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0252.   v3:= temp;
#L1b0254.   if v3 != 0 then goto L1b0230;
#L1b0258.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPkeyContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b025e.   v3:= temp;
#L1b0260.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b0266.   v4:= temp;
#L1b0268.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_cmp|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_cmp:(II)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b026e.   v3:= temp;
#L1b0270.   if v3 == v1 then goto L1b0230;
#L1b0274.   v1:= v2;
#L1b0276.   goto L1b0230;
#L1b0278.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPrivateKey|];
#L1b027c.   if v3 == 0 then goto L1b02c0;
#L1b0280.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b0286.   v0:= v6  @type object;
#L1b0288.   v0:= ([|java:security:interfaces:RSAPrivateKey|])v0;
#L1b028c.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]   @type object;
#L1b0290.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1b0296.   v4:= temp  @type object;
#L1b0298.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b029e.   v3:= temp;
#L1b02a0.   if v3 == 0 then goto L1b02bc;
#L1b02a4.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b02a8.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v0) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1b02ae.   v4:= temp  @type object;
#L1b02b0.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b02b6.   v3:= temp;
#L1b02b8.   if v3 != 0 then goto L1b0230;
#L1b02bc.   v1:= v2;
#L1b02be.   goto L1b0230;
#L1b02c0.   v1:= v2;
#L1b02c2.   goto L1b0230;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1b02d4.   v0:= "RSA" @type (object, string);
#L1b02d8.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getEncoded:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1b02ec.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b02f0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b02f6.   v0:= temp;
#L1b02f8.   if v0 == 0 then goto L1b0300;
#L1b02fc.   v0:= 0  @length 4;
#L1b02fe.   return v0  @type object;
#L1b0300.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b0304.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b030a.   v0:= temp;
#L1b030c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PKCS8_PRIV_KEY_INFO|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PKCS8_PRIV_KEY_INFO:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0312.   v0:= temp  @type object;
#L1b0314.   goto L1b02fe;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1b0328.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b032c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0332.   v0:= temp;
#L1b0334.   if v0 == 0 then goto L1b033c;
#L1b0338.   v0:= 0  @length 4;
#L1b033a.   return v0  @type object;
#L1b033c.   v0:= "PKCS#8" @type (object, string);
#L1b0340.   goto L1b033a;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getModulus|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1b0354.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b035a.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]   @type object;
#L1b035e.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access FINAL {
      local temp ;
        v0;
      
#L1b0370.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b0374.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPkeyAlias|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPkeyAlias:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0388.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b038c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getAlias|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getAlias:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0392.   v0:= temp  @type object;
#L1b0394.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPkeyContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPkeyContext:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b03a8.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b03ac.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b03b2.   v0:= temp;
#L1b03b4.   return v0;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPrivateExponent|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L1b03c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b03ce.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b03d2.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b03e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b03ea.   v0:= 1  @length 4;
#L1b03ec.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]   @type object;
#L1b03f0.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b03f6.   v1:= temp;
#L1b03f8.   v0:= v1 + 3;
#L1b03fc.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b0400.   if v1 == 0 then goto L1b0418;
#L1b0404.   v1:= v0 * 7;
#L1b0408.   v2:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b040c.   call temp:=  [|java:math:BigInteger.hashCode|](v2) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0412.   v2:= temp;
#L1b0414.   v0:= v1 + v2  @type int;
#L1b0418.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.readParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v3 @type (this), [|byte|][][] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.readParams:([[B)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b042c.   v1:= 0  @length 4;
#L1b042e.   v2:= 2  @length 4;
#L1b0430.   v0:= v4[v1]  @type object;
#L1b0434.   if v0 != 0 then goto L1b0448;
#L1b0438.   v0:= new [|java:lang:NullPointerException|];
#L1b043c.   v1:= "modulus == null" @type (object, string);
#L1b0440.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1b0446.   throw v0;
#L1b0448.   v0:= v4[v2]  @type object;
#L1b044c.   if v0 != 0 then goto L1b0470;
#L1b0450.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b0454.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b045a.   v0:= temp;
#L1b045c.   if v0 != 0 then goto L1b0470;
#L1b0460.   v0:= new [|java:lang:NullPointerException|];
#L1b0464.   v1:= "privateExponent == null" @type (object, string);
#L1b0468.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1b046e.   throw v0;
#L1b0470.   v0:= new [|java:math:BigInteger|];
#L1b0474.   v1:= v4[v1]  @type object;
#L1b0478.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b047e.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]  := v0 @type object;
#L1b0482.   v0:= v4[v2]  @type object;
#L1b0486.   if v0 == 0 then goto L1b049c;
#L1b048a.   v0:= new [|java:math:BigInteger|];
#L1b048e.   v1:= v4[v2]  @type object;
#L1b0492.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0498.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]  := v0 @type object;
#L1b049c.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b04b0.   v4:= 44  @length 16;
#L1b04b4.   v3:= 16  @length 16;
#L1b04b8.   v1:= new [|java:lang:StringBuilder|];
#L1b04bc.   v2:= "OpenSSLRSAPrivateKey{" @type (object, string);
#L1b04c0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1b04c6.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b04ca.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b04d0.   v0:= temp;
#L1b04d2.   if v0 == 0 then goto L1b04f4;
#L1b04d6.   v2:= "key=" @type (object, string);
#L1b04da.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b04e0.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.key|]   @type object;
#L1b04e4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b04ea.   v2:= 125  @length 16;
#L1b04ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b04f4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b04fa.   v2:= "modulus=" @type (object, string);
#L1b04fe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0504.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.modulus|]   @type object;
#L1b0508.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b050e.   v2:= temp  @type object;
#L1b0510.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0516.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b051c.   if v0 != 0 then goto L1b0542;
#L1b0520.   v2:= "privateExponent=" @type (object, string);
#L1b0524.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b052a.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.privateExponent|]   @type object;
#L1b052e.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0534.   v2:= temp  @type object;
#L1b0536.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b053c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0542.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0548.   v2:= temp  @type object;
#L1b054a.   return v2  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|]  @type class @AccessFlag PUBLIC  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|], [|java:security:interfaces:RSAPrivateCrtKey|] {
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this), [|java:security:spec:RSAPrivateCrtKeySpec|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.<init>:(Ljava/security/spec/RSAPrivateCrtKeySpec;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b055c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.init|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.init:(Ljava/security/spec/RSAPrivateCrtKeySpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type static;
#L1b0562.   v0:= temp  @type object;
#L1b0564.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1b056a.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1b057c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1b0582.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object), [|byte|][][] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;[[B)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1b0594.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;[[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type direct;
#L1b059a.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getInstance|] ([|java:security:interfaces:RSAPrivateCrtKey|] v19 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getInstance:(Ljava/security/interfaces/RSAPrivateCrtKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
      
#L1b05ac.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b05b2.   v11:= temp  @type object;
#L1b05b4.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrivateExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b05ba.   v16:= temp  @type object;
#L1b05bc.   if v11 != 0 then goto L1b05d0;
#L1b05c0.   v1:= new [|java:security:InvalidKeyException|];
#L1b05c4.   v2:= "modulus == null" @type (object, string);
#L1b05c8.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v2) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b05ce.   throw v1;
#L1b05d0.   if v16 != 0 then goto L1b05e4;
#L1b05d4.   v1:= new [|java:security:InvalidKeyException|];
#L1b05d8.   v2:= "privateExponent == null" @type (object, string);
#L1b05dc.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v2) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b05e2.   throw v1;
#L1b05e4.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPublicExponent|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b05ea.   v17:= temp  @type object;
#L1b05ec.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeP|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b05f2.   v14:= temp  @type object;
#L1b05f4.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeQ|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b05fa.   v15:= temp  @type object;
#L1b05fc.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentP|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0602.   v12:= temp  @type object;
#L1b0604.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentQ|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b060a.   v13:= temp  @type object;
#L1b060c.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getCrtCoefficient|](v19) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0612.   v9:= temp  @type object;
#L1b0614.   v18:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b0618.   call temp:=  [|java:math:BigInteger.toByteArray|](v11) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b061e.   v1:= temp  @type object;
#L1b0620.   if v17 != 0 then goto L1b0660;
#L1b0624.   v2:= 0  @length 4;
#L1b0626.   call temp:=  [|java:math:BigInteger.toByteArray|](v16) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b062c.   v3:= temp  @type object;
#L1b062e.   if v14 != 0 then goto L1b066a;
#L1b0632.   v4:= 0  @length 4;
#L1b0634.   if v15 != 0 then goto L1b0674;
#L1b0638.   v5:= 0  @length 4;
#L1b063a.   if v12 != 0 then goto L1b067e;
#L1b063e.   v6:= 0  @length 4;
#L1b0640.   if v13 != 0 then goto L1b0688;
#L1b0644.   v7:= 0  @length 4;
#L1b0646.   if v9 != 0 then goto L1b0692;
#L1b064a.   v8:= 0  @length 4;
#L1b064c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0652.   v1:= temp;
#L1b0654.   v0:= v18  @type object;
#L1b0658.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b065e.   return v18  @type object;
#L1b0660.   call temp:=  [|java:math:BigInteger.toByteArray|](v17) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0666.   v2:= temp  @type object;
#L1b0668.   goto L1b0626;
#L1b066a.   call temp:=  [|java:math:BigInteger.toByteArray|](v14) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0670.   v4:= temp  @type object;
#L1b0672.   goto L1b0634;
#L1b0674.   call temp:=  [|java:math:BigInteger.toByteArray|](v15) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b067a.   v5:= temp  @type object;
#L1b067c.   goto L1b063a;
#L1b067e.   call temp:=  [|java:math:BigInteger.toByteArray|](v12) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0684.   v6:= temp  @type object;
#L1b0686.   goto L1b0640;
#L1b0688.   call temp:=  [|java:math:BigInteger.toByteArray|](v13) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b068e.   v7:= temp  @type object;
#L1b0690.   goto L1b0646;
#L1b0692.   call temp:=  [|java:math:BigInteger.toByteArray|](v9) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0698.   v8:= temp  @type object;
#L1b069a.   goto L1b064c;
#L1b069c.   v10:= Exception  @type object;
#L1b069e.   v1:= new [|java:security:InvalidKeyException|];
#L1b06a2.   call temp:=  [|java:security:InvalidKeyException.<init>|](v1, v10) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b06a8.   throw v1;
  catch  [|java:lang:Exception|] @[L1b05e4..L1b0698] goto L1b069c;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.init|] ([|java:security:spec:RSAPrivateCrtKeySpec|] v19 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.init:(Ljava/security/spec/RSAPrivateCrtKeySpec;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
      
#L1b06cc.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getModulus|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b06d2.   v11:= temp  @type object;
#L1b06d4.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPrivateExponent|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b06da.   v16:= temp  @type object;
#L1b06dc.   if v11 != 0 then goto L1b06f0;
#L1b06e0.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1b06e4.   v2:= "modulus == null" @type (object, string);
#L1b06e8.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v2) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b06ee.   throw v1;
#L1b06f0.   if v16 != 0 then goto L1b0704;
#L1b06f4.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1b06f8.   v2:= "privateExponent == null" @type (object, string);
#L1b06fc.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v2) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b0702.   throw v1;
#L1b0704.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPublicExponent|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b070a.   v17:= temp  @type object;
#L1b070c.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPrimeP|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPrimeP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b0712.   v14:= temp  @type object;
#L1b0714.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPrimeQ|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPrimeQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b071a.   v15:= temp  @type object;
#L1b071c.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPrimeExponentP|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPrimeExponentP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b0722.   v12:= temp  @type object;
#L1b0724.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getPrimeExponentQ|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b072a.   v13:= temp  @type object;
#L1b072c.   call temp:=  [|java:security:spec:RSAPrivateCrtKeySpec.getCrtCoefficient|](v19) @signature [|Ljava/security/spec/RSAPrivateCrtKeySpec;.getCrtCoefficient:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPrivateCrtKeySpec|] @type virtual;
#L1b0732.   v9:= temp  @type object;
#L1b0734.   v18:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b0738.   call temp:=  [|java:math:BigInteger.toByteArray|](v11) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b073e.   v1:= temp  @type object;
#L1b0740.   if v17 != 0 then goto L1b0780;
#L1b0744.   v2:= 0  @length 4;
#L1b0746.   call temp:=  [|java:math:BigInteger.toByteArray|](v16) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b074c.   v3:= temp  @type object;
#L1b074e.   if v14 != 0 then goto L1b078a;
#L1b0752.   v4:= 0  @length 4;
#L1b0754.   if v15 != 0 then goto L1b0794;
#L1b0758.   v5:= 0  @length 4;
#L1b075a.   if v12 != 0 then goto L1b079e;
#L1b075e.   v6:= 0  @length 4;
#L1b0760.   if v13 != 0 then goto L1b07a8;
#L1b0764.   v7:= 0  @length 4;
#L1b0766.   if v9 != 0 then goto L1b07b2;
#L1b076a.   v8:= 0  @length 4;
#L1b076c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0772.   v1:= temp;
#L1b0774.   v0:= v18  @type object;
#L1b0778.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b077e.   return v18  @type object;
#L1b0780.   call temp:=  [|java:math:BigInteger.toByteArray|](v17) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0786.   v2:= temp  @type object;
#L1b0788.   goto L1b0746;
#L1b078a.   call temp:=  [|java:math:BigInteger.toByteArray|](v14) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0790.   v4:= temp  @type object;
#L1b0792.   goto L1b0754;
#L1b0794.   call temp:=  [|java:math:BigInteger.toByteArray|](v15) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b079a.   v5:= temp  @type object;
#L1b079c.   goto L1b075a;
#L1b079e.   call temp:=  [|java:math:BigInteger.toByteArray|](v12) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b07a4.   v6:= temp  @type object;
#L1b07a6.   goto L1b0760;
#L1b07a8.   call temp:=  [|java:math:BigInteger.toByteArray|](v13) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b07ae.   v7:= temp  @type object;
#L1b07b0.   goto L1b0766;
#L1b07b2.   call temp:=  [|java:math:BigInteger.toByteArray|](v9) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b07b8.   v8:= temp  @type object;
#L1b07ba.   goto L1b076c;
#L1b07bc.   v10:= Exception  @type object;
#L1b07be.   v1:= new [|java:security:spec:InvalidKeySpecException|];
#L1b07c2.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v1, v10) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b07c8.   throw v1;
  catch  [|java:lang:Exception|] @[L1b0704..L1b07b8] goto L1b07bc;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v10 @type (this), [|java:io:ObjectInputStream|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1b07ec.   v7:= 0  @length 4;
#L1b07ee.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v11) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1b07f4.   v8:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b07f8.   v0:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.modulus|]   @type object;
#L1b07fc.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0802.   v0:= temp  @type object;
#L1b0804.   v1:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0808.   if v1 != 0 then goto L1b0864;
#L1b080c.   v1:= v7  @type object;
#L1b080e.   v2:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.privateExponent|]   @type object;
#L1b0812.   call temp:=  [|java:math:BigInteger.toByteArray|](v2) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0818.   v2:= temp  @type object;
#L1b081a.   v3:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b081e.   if v3 != 0 then goto L1b0872;
#L1b0822.   v3:= v7  @type object;
#L1b0824.   v4:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0828.   if v4 != 0 then goto L1b0880;
#L1b082c.   v4:= v7  @type object;
#L1b082e.   v5:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0832.   if v5 != 0 then goto L1b088e;
#L1b0836.   v5:= v7  @type object;
#L1b0838.   v6:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b083c.   if v6 != 0 then goto L1b089c;
#L1b0840.   v6:= v7  @type object;
#L1b0842.   v9:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b0846.   if v9 != 0 then goto L1b08aa;
#L1b084a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0850.   v0:= temp;
#L1b0852.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v8, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b0858.   v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.key|]  := v8 @type object;
#L1b085c.   v0:= 1  @length 4;
#L1b085e.   v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.fetchedParams|]  := v0 @boolean;
#L1b0862.   return @void ;
#L1b0864.   v1:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0868.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b086e.   v1:= temp  @type object;
#L1b0870.   goto L1b080e;
#L1b0872.   v3:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b0876.   call temp:=  [|java:math:BigInteger.toByteArray|](v3) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b087c.   v3:= temp  @type object;
#L1b087e.   goto L1b0824;
#L1b0880.   v4:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0884.   call temp:=  [|java:math:BigInteger.toByteArray|](v4) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b088a.   v4:= temp  @type object;
#L1b088c.   goto L1b082e;
#L1b088e.   v5:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0892.   call temp:=  [|java:math:BigInteger.toByteArray|](v5) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0898.   v5:= temp  @type object;
#L1b089a.   goto L1b0838;
#L1b089c.   v6:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b08a0.   call temp:=  [|java:math:BigInteger.toByteArray|](v6) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b08a6.   v6:= temp  @type object;
#L1b08a8.   goto L1b0842;
#L1b08aa.   v7:= v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b08ae.   call temp:=  [|java:math:BigInteger.toByteArray|](v7) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b08b4.   v7:= temp  @type object;
#L1b08b6.   goto L1b084a;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1b08c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b08ce.   v0:= temp  @type object;
#L1b08d0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b08d6.   v0:= temp;
#L1b08d8.   if v0 == 0 then goto L1b08ec;
#L1b08dc.   v0:= new [|java:io:NotSerializableException|];
#L1b08e0.   v1:= "engine-based keys can not be serialized" @type (object, string);
#L1b08e4.   call temp:=  [|java:io:NotSerializableException.<init>|](v0, v1) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L1b08ea.   throw v0;
#L1b08ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b08f2.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1b08f8.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b090c.   v2:= 0  @length 4;
#L1b090e.   v1:= 1  @length 4;
#L1b0910.   if v6 != v5 then goto L1b0916;
#L1b0914.   return v1;
#L1b0916.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1b091a.   if v3 == 0 then goto L1b0960;
#L1b091e.   v0:= v6  @type object;
#L1b0920.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|])v0;
#L1b0924.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b092a.   v3:= temp  @type object;
#L1b092c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b0932.   v4:= temp  @type object;
#L1b0934.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b093a.   v3:= temp;
#L1b093c.   if v3 != 0 then goto L1b0914;
#L1b0940.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPkeyContext|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0946.   v3:= temp;
#L1b0948.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b094e.   v4:= temp;
#L1b0950.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_cmp|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_cmp:(II)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0956.   v3:= temp;
#L1b0958.   if v3 == v1 then goto L1b0914;
#L1b095c.   v1:= v2;
#L1b095e.   goto L1b0914;
#L1b0960.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPrivateCrtKey|];
#L1b0964.   if v3 == 0 then goto L1b0a8e;
#L1b0968.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b096e.   v0:= v6  @type object;
#L1b0970.   v0:= ([|java:security:interfaces:RSAPrivateCrtKey|])v0;
#L1b0974.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b097a.   v3:= temp  @type object;
#L1b097c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0982.   v3:= temp;
#L1b0984.   if v3 == 0 then goto L1b09c0;
#L1b0988.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getModulus|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b098e.   v3:= temp  @type object;
#L1b0990.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0996.   v4:= temp  @type object;
#L1b0998.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b099e.   v3:= temp;
#L1b09a0.   if v3 == 0 then goto L1b09bc;
#L1b09a4.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b09a8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPublicExponent|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b09ae.   v4:= temp  @type object;
#L1b09b0.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b09b6.   v3:= temp;
#L1b09b8.   if v3 != 0 then goto L1b0914;
#L1b09bc.   v1:= v2;
#L1b09be.   goto L1b0914;
#L1b09c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getModulus|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b09c6.   v3:= temp  @type object;
#L1b09c8.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b09ce.   v4:= temp  @type object;
#L1b09d0.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b09d6.   v3:= temp;
#L1b09d8.   if v3 == 0 then goto L1b0a88;
#L1b09dc.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b09e0.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPublicExponent|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b09e6.   v4:= temp  @type object;
#L1b09e8.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b09ee.   v3:= temp;
#L1b09f0.   if v3 == 0 then goto L1b0a88;
#L1b09f4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrivateExponent|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b09fa.   v3:= temp  @type object;
#L1b09fc.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrivateExponent|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a02.   v4:= temp  @type object;
#L1b0a04.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a0a.   v3:= temp;
#L1b0a0c.   if v3 == 0 then goto L1b0a88;
#L1b0a10.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b0a14.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeP|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a1a.   v4:= temp  @type object;
#L1b0a1c.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a22.   v3:= temp;
#L1b0a24.   if v3 == 0 then goto L1b0a88;
#L1b0a28.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0a2c.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeQ|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a32.   v4:= temp  @type object;
#L1b0a34.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a3a.   v3:= temp;
#L1b0a3c.   if v3 == 0 then goto L1b0a88;
#L1b0a40.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0a44.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentP|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a4a.   v4:= temp  @type object;
#L1b0a4c.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a52.   v3:= temp;
#L1b0a54.   if v3 == 0 then goto L1b0a88;
#L1b0a58.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b0a5c.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getPrimeExponentQ|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a62.   v4:= temp  @type object;
#L1b0a64.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a6a.   v3:= temp;
#L1b0a6c.   if v3 == 0 then goto L1b0a88;
#L1b0a70.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b0a74.   call temp:=  [|java:security:interfaces:RSAPrivateCrtKey.getCrtCoefficient|](v0) @signature [|Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateCrtKey|] @type interface;
#L1b0a7a.   v4:= temp  @type object;
#L1b0a7c.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0a82.   v3:= temp;
#L1b0a84.   if v3 != 0 then goto L1b0914;
#L1b0a88.   v1:= v2;
#L1b0a8a.   goto L1b0914;
#L1b0a8e.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPrivateKey|];
#L1b0a92.   if v3 == 0 then goto L1b0b10;
#L1b0a96.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0a9c.   v0:= v6  @type object;
#L1b0a9e.   v0:= ([|java:security:interfaces:RSAPrivateKey|])v0;
#L1b0aa2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0aa8.   v3:= temp  @type object;
#L1b0aaa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0ab0.   v3:= temp;
#L1b0ab2.   if v3 == 0 then goto L1b0ad2;
#L1b0ab6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getModulus|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0abc.   v1:= temp  @type object;
#L1b0abe.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1b0ac4.   v2:= temp  @type object;
#L1b0ac6.   call temp:=  [|java:math:BigInteger.equals|](v1, v2) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0acc.   v1:= temp;
#L1b0ace.   goto L1b0914;
#L1b0ad2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getModulus|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0ad8.   v3:= temp  @type object;
#L1b0ada.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1b0ae0.   v4:= temp  @type object;
#L1b0ae2.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0ae8.   v3:= temp;
#L1b0aea.   if v3 == 0 then goto L1b0b0a;
#L1b0aee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrivateExponent|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0af4.   v3:= temp  @type object;
#L1b0af6.   call temp:=  [|java:security:interfaces:RSAPrivateKey.getPrivateExponent|](v0) @signature [|Ljava/security/interfaces/RSAPrivateKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPrivateKey|] @type interface;
#L1b0afc.   v4:= temp  @type object;
#L1b0afe.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0b04.   v3:= temp;
#L1b0b06.   if v3 != 0 then goto L1b0914;
#L1b0b0a.   v1:= v2;
#L1b0b0c.   goto L1b0914;
#L1b0b10.   v1:= v2;
#L1b0b12.   goto L1b0914;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getCrtCoefficient|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0b28.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0b2e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b0b32.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrimeExponentP|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0b44.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0b4a.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0b4e.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrimeExponentQ|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0b60.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0b66.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b0b6a.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrimeP|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0b7c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0b82.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b0b86.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrimeQ|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0b98.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0b9e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0ba2.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPublicExponent|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPublicExponent:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b0bb4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0bba.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0bbe.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.hashCode:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L1b0bd0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.hashCode|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.hashCode:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type super;
#L1b0bd6.   v0:= temp;
#L1b0bd8.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0bdc.   if v1 == 0 then goto L1b0bee;
#L1b0be0.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0be4.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0bea.   v1:= temp;
#L1b0bec.   v0:= v0 ^~ v1  @type int;
#L1b0bee.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.readParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v2 @type (this), [|byte|][][] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.readParams:([[B)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L1b0c00.   (@monitorenter v2)
#L1b0c02.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.readParams|](v2, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.readParams:([[B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type super;
#L1b0c08.   v0:= 1  @length 4;
#L1b0c0a.   v0:= v3[v0]  @type object;
#L1b0c0e.   if v0 == 0 then goto L1b0c26;
#L1b0c12.   v0:= new [|java:math:BigInteger|];
#L1b0c16.   v1:= 1  @length 4;
#L1b0c18.   v1:= v3[v1]  @type object;
#L1b0c1c.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0c22.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]  := v0 @type object;
#L1b0c26.   v0:= 3  @length 4;
#L1b0c28.   v0:= v3[v0]  @type object;
#L1b0c2c.   if v0 == 0 then goto L1b0c44;
#L1b0c30.   v0:= new [|java:math:BigInteger|];
#L1b0c34.   v1:= 3  @length 4;
#L1b0c36.   v1:= v3[v1]  @type object;
#L1b0c3a.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0c40.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]  := v0 @type object;
#L1b0c44.   v0:= 4  @length 4;
#L1b0c46.   v0:= v3[v0]  @type object;
#L1b0c4a.   if v0 == 0 then goto L1b0c62;
#L1b0c4e.   v0:= new [|java:math:BigInteger|];
#L1b0c52.   v1:= 4  @length 4;
#L1b0c54.   v1:= v3[v1]  @type object;
#L1b0c58.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0c5e.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]  := v0 @type object;
#L1b0c62.   v0:= 5  @length 4;
#L1b0c64.   v0:= v3[v0]  @type object;
#L1b0c68.   if v0 == 0 then goto L1b0c80;
#L1b0c6c.   v0:= new [|java:math:BigInteger|];
#L1b0c70.   v1:= 5  @length 4;
#L1b0c72.   v1:= v3[v1]  @type object;
#L1b0c76.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0c7c.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]  := v0 @type object;
#L1b0c80.   v0:= 6  @length 4;
#L1b0c82.   v0:= v3[v0]  @type object;
#L1b0c86.   if v0 == 0 then goto L1b0c9e;
#L1b0c8a.   v0:= new [|java:math:BigInteger|];
#L1b0c8e.   v1:= 6  @length 4;
#L1b0c90.   v1:= v3[v1]  @type object;
#L1b0c94.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0c9a.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]  := v0 @type object;
#L1b0c9e.   v0:= 7  @length 4;
#L1b0ca0.   v0:= v3[v0]  @type object;
#L1b0ca4.   if v0 == 0 then goto L1b0cbc;
#L1b0ca8.   v0:= new [|java:math:BigInteger|];
#L1b0cac.   v1:= 7  @length 4;
#L1b0cae.   v1:= v3[v1]  @type object;
#L1b0cb2.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0cb8.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]  := v0 @type object;
#L1b0cbc.   (@monitorexit v2)
#L1b0cbe.   return @void ;
#L1b0cc0.   v0:= Exception  @type object;
#L1b0cc2.   (@monitorexit v2)
#L1b0cc4.   throw v0;
  catch  [|any|] @[L1b0c02..L1b0cbc] goto L1b0cc0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b0ce4.   v4:= 44  @length 16;
#L1b0ce8.   v3:= 16  @length 16;
#L1b0cec.   v1:= new [|java:lang:StringBuilder|];
#L1b0cf0.   v2:= "OpenSSLRSAPrivateCrtKey{" @type (object, string);
#L1b0cf4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1b0cfa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0d00.   v2:= temp  @type object;
#L1b0d02.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.isEngineBased|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.isEngineBased:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0d08.   v0:= temp;
#L1b0d0a.   if v0 == 0 then goto L1b0d30;
#L1b0d0e.   v2:= "key=" @type (object, string);
#L1b0d12.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d18.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getOpenSSLKey|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0d1e.   v2:= temp  @type object;
#L1b0d20.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d26.   v2:= 125  @length 16;
#L1b0d2a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d30.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0d36.   v2:= "modulus=" @type (object, string);
#L1b0d3a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d40.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getModulus|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0d46.   v2:= temp  @type object;
#L1b0d48.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0d4e.   v2:= temp  @type object;
#L1b0d50.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d56.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d5c.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0d60.   if v2 == 0 then goto L1b0d86;
#L1b0d64.   v2:= "publicExponent=" @type (object, string);
#L1b0d68.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d6e.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.publicExponent|]   @type object;
#L1b0d72.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0d78.   v2:= temp  @type object;
#L1b0d7a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d80.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d86.   if v0 != 0 then goto L1b0db0;
#L1b0d8a.   v2:= "privateExponent=" @type (object, string);
#L1b0d8e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0d94.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getPrivateExponent|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type virtual;
#L1b0d9a.   v2:= temp  @type object;
#L1b0d9c.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0da2.   v2:= temp  @type object;
#L1b0da4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0daa.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0db0.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b0db4.   if v2 == 0 then goto L1b0dda;
#L1b0db8.   v2:= "primeP=" @type (object, string);
#L1b0dbc.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0dc2.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeP|]   @type object;
#L1b0dc6.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0dcc.   v2:= temp  @type object;
#L1b0dce.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0dd4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0dda.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0dde.   if v2 == 0 then goto L1b0e04;
#L1b0de2.   v2:= "primeQ=" @type (object, string);
#L1b0de6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0dec.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeQ|]   @type object;
#L1b0df0.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0df6.   v2:= temp  @type object;
#L1b0df8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0dfe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e04.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0e08.   if v2 == 0 then goto L1b0e2e;
#L1b0e0c.   v2:= "primeExponentP=" @type (object, string);
#L1b0e10.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e16.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentP|]   @type object;
#L1b0e1a.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0e20.   v2:= temp  @type object;
#L1b0e22.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e28.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e2e.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b0e32.   if v2 == 0 then goto L1b0e58;
#L1b0e36.   v2:= "primeExponentQ=" @type (object, string);
#L1b0e3a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e40.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.primeExponentQ|]   @type object;
#L1b0e44.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0e4a.   v2:= temp  @type object;
#L1b0e4c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e52.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e58.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b0e5c.   if v2 == 0 then goto L1b0e82;
#L1b0e60.   v2:= "crtCoefficient=" @type (object, string);
#L1b0e64.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e6a.   v2:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.crtCoefficient|]   @type object;
#L1b0e6e.   call temp:=  [|java:math:BigInteger.toString|](v2, v3) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0e74.   v2:= temp  @type object;
#L1b0e76.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e7c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e82.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b0e88.   v2:= temp  @type object;
#L1b0e8a.   return v2  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|]  @type class @AccessFlag PUBLIC extends  [|java:security:interfaces:RSAPublicKey|] {
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.fetchedParams|]    @AccessFlag PRIVATE_TRANSIENT;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]    @AccessFlag PRIVATE;
      [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v10 @type (this), [|java:security:spec:RSAPublicKeySpec|] v11 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.<init>:(Ljava/security/spec/RSAPublicKeySpec;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1b0e9c.   call temp:=  [|java:lang:Object.<init>|](v10) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1b0ea2.   v9:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b0ea6.   call temp:=  [|java:security:spec:RSAPublicKeySpec.getModulus|](v11) @signature [|Ljava/security/spec/RSAPublicKeySpec;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPublicKeySpec|] @type virtual;
#L1b0eac.   v0:= temp  @type object;
#L1b0eae.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0eb4.   v0:= temp  @type object;
#L1b0eb6.   call temp:=  [|java:security:spec:RSAPublicKeySpec.getPublicExponent|](v11) @signature [|Ljava/security/spec/RSAPublicKeySpec;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:spec:RSAPublicKeySpec|] @type virtual;
#L1b0ebc.   v1:= temp  @type object;
#L1b0ebe.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0ec4.   v1:= temp  @type object;
#L1b0ec6.   v2:= 0  @length 4;
#L1b0ec8.   v3:= 0  @length 4;
#L1b0eca.   v4:= 0  @length 4;
#L1b0ecc.   v5:= 0  @length 4;
#L1b0ece.   v6:= 0  @length 4;
#L1b0ed0.   v7:= 0  @length 4;
#L1b0ed2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0ed8.   v0:= temp;
#L1b0eda.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v9, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b0ee0.   v10.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]  := v9 @type object;
#L1b0ee4.   return @void ;
#L1b0ee6.   v8:= Exception  @type object;
#L1b0ee8.   v0:= new [|java:security:spec:InvalidKeySpecException|];
#L1b0eec.   call temp:=  [|java:security:spec:InvalidKeySpecException.<init>|](v0, v8) @signature [|Ljava/security/spec/InvalidKeySpecException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:spec:InvalidKeySpecException|] @type direct;
#L1b0ef2.   throw v0;
  catch  [|java:lang:Exception|] @[L1b0ea2..L1b0ee4] goto L1b0ee6;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v0 @type (this), [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1b0f14.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1b0f1a.   v0.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]  := v1 @type object;
#L1b0f1e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1b0f30.   v3:= 1  @length 4;
#L1b0f32.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.fetchedParams|]   @boolean;
#L1b0f36.   if v1 == 0 then goto L1b0f3c;
#L1b0f3a.   return @void ;
#L1b0f3c.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]   @type object;
#L1b0f40.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b0f46.   v1:= temp;
#L1b0f48.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.get_RSA_public_params|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.get_RSA_public_params:(I)[[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0f4e.   v0:= temp  @type object;
#L1b0f50.   v1:= new [|java:math:BigInteger|];
#L1b0f54.   v2:= 0  @length 4;
#L1b0f56.   v2:= v0[v2]  @type object;
#L1b0f5a.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0f60.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]  := v1 @type object;
#L1b0f64.   v1:= new [|java:math:BigInteger|];
#L1b0f68.   v2:= v0[v3]  @type object;
#L1b0f6c.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L1b0f72.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]  := v1 @type object;
#L1b0f76.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.fetchedParams|]  := v3 @boolean;
#L1b0f7a.   goto L1b0f3a;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getInstance|] ([|java:security:interfaces:RSAPublicKey|] v10 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getInstance:(Ljava/security/interfaces/RSAPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1b0f8c.   v9:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b0f90.   call temp:=  [|java:security:interfaces:RSAPublicKey.getModulus|](v10) @signature [|Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1b0f96.   v0:= temp  @type object;
#L1b0f98.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0f9e.   v0:= temp  @type object;
#L1b0fa0.   call temp:=  [|java:security:interfaces:RSAPublicKey.getPublicExponent|](v10) @signature [|Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1b0fa6.   v1:= temp  @type object;
#L1b0fa8.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b0fae.   v1:= temp  @type object;
#L1b0fb0.   v2:= 0  @length 4;
#L1b0fb2.   v3:= 0  @length 4;
#L1b0fb4.   v4:= 0  @length 4;
#L1b0fb6.   v5:= 0  @length 4;
#L1b0fb8.   v6:= 0  @length 4;
#L1b0fba.   v7:= 0  @length 4;
#L1b0fbc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b0fc2.   v0:= temp;
#L1b0fc4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v9, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b0fca.   return v9  @type object;
#L1b0fcc.   v8:= Exception  @type object;
#L1b0fce.   v0:= new [|java:security:InvalidKeyException|];
#L1b0fd2.   call temp:=  [|java:security:InvalidKeyException.<init>|](v0, v8) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b0fd8.   throw v0;
  catch  [|java:lang:Exception|] @[L1b0f8c..L1b0fca] goto L1b0fcc;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.readObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v9 @type (this), [|java:io:ObjectInputStream|] v10 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1b0ffc.   v2:= 0  @length 4;
#L1b0ffe.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v10) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1b1004.   v8:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|];
#L1b1008.   v0:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]   @type object;
#L1b100c.   call temp:=  [|java:math:BigInteger.toByteArray|](v0) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b1012.   v0:= temp  @type object;
#L1b1014.   v1:= v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]   @type object;
#L1b1018.   call temp:=  [|java:math:BigInteger.toByteArray|](v1) @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b101e.   v1:= temp  @type object;
#L1b1020.   v3:= v2  @type object;
#L1b1022.   v4:= v2  @type object;
#L1b1024.   v5:= v2  @type object;
#L1b1026.   v6:= v2  @type object;
#L1b1028.   v7:= v2  @type object;
#L1b102a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_new_RSA|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_new_RSA:([B[B[B[B[B[B[B[B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1030.   v0:= temp;
#L1b1032.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.<init>|](v8, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.<init>:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type direct;
#L1b1038.   v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]  := v8 @type object;
#L1b103c.   v0:= 1  @length 4;
#L1b103e.   v9.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.fetchedParams|]  := v0 @boolean;
#L1b1042.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.writeObject|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v0 @type (this), [|java:io:ObjectOutputStream|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
      
#L1b1054.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b105a.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v1) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1b1060.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.equals|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b1074.   v2:= 0  @length 4;
#L1b1076.   v1:= 1  @length 4;
#L1b1078.   if v6 != v5 then goto L1b107e;
#L1b107c.   return v1;
#L1b107e.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1b1082.   if v3 == 0 then goto L1b10a4;
#L1b1086.   v0:= v6  @type object;
#L1b1088.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|])v0;
#L1b108c.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]   @type object;
#L1b1090.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type virtual;
#L1b1096.   v4:= temp  @type object;
#L1b1098.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.equals|](v3, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b109e.   v3:= temp;
#L1b10a0.   if v3 != 0 then goto L1b107c;
#L1b10a4.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPublicKey|];
#L1b10a8.   if v3 != 0 then goto L1b10b0;
#L1b10ac.   v1:= v2;
#L1b10ae.   goto L1b107c;
#L1b10b0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b10b6.   v0:= v6  @type object;
#L1b10b8.   v0:= ([|java:security:interfaces:RSAPublicKey|])v0;
#L1b10bc.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]   @type object;
#L1b10c0.   call temp:=  [|java:security:interfaces:RSAPublicKey.getModulus|](v0) @signature [|Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1b10c6.   v4:= temp  @type object;
#L1b10c8.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b10ce.   v3:= temp;
#L1b10d0.   if v3 == 0 then goto L1b10ec;
#L1b10d4.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]   @type object;
#L1b10d8.   call temp:=  [|java:security:interfaces:RSAPublicKey.getPublicExponent|](v0) @signature [|Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;|] @classDescriptor [|java:security:interfaces:RSAPublicKey|] @type interface;
#L1b10de.   v4:= temp  @type object;
#L1b10e0.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b10e6.   v3:= temp;
#L1b10e8.   if v3 != 0 then goto L1b107c;
#L1b10ec.   v1:= v2;
#L1b10ee.   goto L1b107c;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getAlgorithm|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getAlgorithm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1100.   v0:= "RSA" @type (object, string);
#L1b1104.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getEncoded:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1118.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]   @type object;
#L1b111c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b1122.   v0:= temp;
#L1b1124.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_PUBKEY|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_PUBKEY:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b112a.   v0:= temp  @type object;
#L1b112c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getFormat|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getFormat:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1140.   v0:= "X.509" @type (object, string);
#L1b1144.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getModulus|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getModulus:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1158.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b115e.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]   @type object;
#L1b1162.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getOpenSSLKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @Access  {
      local temp ;
        v0;
      
#L1b1174.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.key|]   @type object;
#L1b1178.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getPublicExponent|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b118c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b1192.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]   @type object;
#L1b1196.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.hashCode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b11a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b11ae.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]   @type object;
#L1b11b2.   call temp:=  [|java:math:BigInteger.hashCode|](v0) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b11b8.   v0:= temp;
#L1b11ba.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]   @type object;
#L1b11be.   call temp:=  [|java:math:BigInteger.hashCode|](v1) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b11c4.   v1:= temp;
#L1b11c6.   v0:= v0 ^~ v1  @type int;
#L1b11c8.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.toString|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b11dc.   v2:= 16  @length 16;
#L1b11e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.ensureReadParams|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.ensureReadParams:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type direct;
#L1b11e6.   v0:= new [|java:lang:StringBuilder|];
#L1b11ea.   v1:= "OpenSSLRSAPublicKey{" @type (object, string);
#L1b11ee.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1b11f4.   v1:= "modulus=" @type (object, string);
#L1b11f8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b11fe.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.modulus|]   @type object;
#L1b1202.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b1208.   v1:= temp  @type object;
#L1b120a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1210.   v1:= 44  @length 16;
#L1b1214.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b121a.   v1:= "publicExponent=" @type (object, string);
#L1b121e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1224.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.publicExponent|]   @type object;
#L1b1228.   call temp:=  [|java:math:BigInteger.toString|](v1, v2) @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L1b122e.   v1:= temp  @type object;
#L1b1230.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1236.   v1:= 125  @length 16;
#L1b123a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1240.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1246.   v1:= temp  @type object;
#L1b1248.   return v1  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|]  @type class @AccessFlag PUBLIC  extends [|java:security:SecureRandomSpi|], [|java:io:Serializable|] {
   }
      global [|long|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] v0 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRandom;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1b125c.   call temp:=  [|java:security:SecureRandomSpi.<init>|](v0) @signature [|Ljava/security/SecureRandomSpi;.<init>:()V|] @classDescriptor [|java:security:SecureRandomSpi|] @type direct;
#L1b1262.   return @void ;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom.engineGenerateSeed|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] v1 @type (this), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRandom;.engineGenerateSeed:(I)[B|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1b1274.   v0:= new [|byte|][v2];
#L1b1278.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_bytes|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_bytes:([B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b127e.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom.engineNextBytes|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] v0 @type (this), [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRandom;.engineNextBytes:([B)V|] @Access PROTECTED {
      local temp ;
      
#L1b1290.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_bytes|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_bytes:([B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1296.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom.engineSetSeed|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] v0 @type (this), [|byte|][] v1) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLRandom|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRandom;.engineSetSeed:([B)V|] @Access PROTECTED {
      local temp ;
      
#L1b12a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.RAND_seed|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.RAND_seed:([B)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b12ae.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|]  @type class @AccessFlag PUBLIC  extends [|javax:net:ssl:SSLServerSocketFactory|] {
      [|java:io:IOException|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.instantiationException|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b12c0.   call temp:=  [|javax:net:ssl:SSLServerSocketFactory.<init>|](v3) @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:ssl:SSLServerSocketFactory|] @type direct;
#L1b12c6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getDefault|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getDefault:()Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type static;
#L1b12cc.   v1:= temp  @type object;
#L1b12ce.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]  := v1 @type object;
#L1b12d2.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b12d6.   v2:= 0  @length 4;
#L1b12d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setUseClientMode|](v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setUseClientMode:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b12de.   return @void ;
#L1b12e0.   v0:= Exception  @type object;
#L1b12e2.   v1:= new [|java:io:IOException|];
#L1b12e6.   v2:= "Delayed instantiation exception:" @type (object, string);
#L1b12ea.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1b12f0.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.instantiationException|]  := v1 @type object;
#L1b12f4.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.instantiationException|]   @type object;
#L1b12f8.   call temp:=  [|java:io:IOException.initCause|](v1, v0) @signature [|Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L1b12fe.   goto L1b12de;
  catch  [|java:security:KeyManagementException|] @[L1b12c6..L1b12de] goto L1b12e0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v2 @type (this), [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1b1320.   call temp:=  [|javax:net:ssl:SSLServerSocketFactory.<init>|](v2) @signature [|Ljavax/net/ssl/SSLServerSocketFactory;.<init>:()V|] @classDescriptor [|javax:net:ssl:SSLServerSocketFactory|] @type direct;
#L1b1326.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.clone|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b132c.   v0:= temp  @type object;
#L1b132e.   v0:= ([|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|])v0;
#L1b1332.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]  := v0 @type object;
#L1b1336.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b133a.   v1:= 0  @length 4;
#L1b133c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setUseClientMode|](v0, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setUseClientMode:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1342.   return @void ;

   }
    procedure [|java:net:ServerSocket|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.createServerSocket|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.createServerSocket:()Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1354.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|];
#L1b1358.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b135c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.clone|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1362.   v0:= temp  @type object;
#L1b1364.   v0:= ([|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|])v0;
#L1b1368.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|](v1, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b136e.   return v1  @type object;

   }
    procedure [|java:net:ServerSocket|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.createServerSocket|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v2 @type (this), [|int|] v3) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.createServerSocket:(I)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1380.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|];
#L1b1384.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b1388.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.clone|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b138e.   v0:= temp  @type object;
#L1b1390.   v0:= ([|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|])v0;
#L1b1394.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|](v1, v3, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(ILorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b139a.   return v1  @type object;

   }
    procedure [|java:net:ServerSocket|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.createServerSocket|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.createServerSocket:(II)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b13ac.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|];
#L1b13b0.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b13b4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.clone|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b13ba.   v0:= temp  @type object;
#L1b13bc.   v0:= ([|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|])v0;
#L1b13c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|](v1, v3, v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(IILorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b13c6.   return v1  @type object;

   }
    procedure [|java:net:ServerSocket|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.createServerSocket|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v2 @type (this), [|int|] v3, [|int|] v4, [|java:net:InetAddress|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b13d8.   v1:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|];
#L1b13dc.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.sslParameters|]   @type object;
#L1b13e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.clone|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b13e6.   v0:= temp  @type object;
#L1b13e8.   v0:= ([|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|])v0;
#L1b13ec.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|](v1, v3, v4, v5, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(IILjava/net/InetAddress;Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b13f2.   return v1  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.getDefaultCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.getDefaultCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1404.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b140a.   v0:= temp  @type object;
#L1b140c.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl.getSupportedCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketFactoryImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl;.getSupportedCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1420.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1426.   v0:= temp  @type object;
#L1b1428.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|]  @type class @AccessFlag PUBLIC  extends [|javax:net:ssl:SSLServerSocket|] {
      [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]    @AccessFlag PRIVATE;
      [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|int|] v2, [|int|] v3, [|java:net:InetAddress|] v4 @type (object), [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(IILjava/net/InetAddress;Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b143c.   call temp:=  [|javax:net:ssl:SSLServerSocket.<init>|](v1, v2, v3, v4) @signature [|Ljavax/net/ssl/SSLServerSocket;.<init>:(IILjava/net/InetAddress;)V|] @classDescriptor [|javax:net:ssl:SSLServerSocket|] @type direct;
#L1b1442.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1448.   v0:= temp  @type object;
#L1b144a.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]  := v0 @type object;
#L1b144e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1454.   v0:= temp  @type object;
#L1b1456.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]  := v0 @type object;
#L1b145a.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]  := v5 @type object;
#L1b145e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|int|] v2, [|int|] v3, [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] v4 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(IILorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b1470.   call temp:=  [|javax:net:ssl:SSLServerSocket.<init>|](v1, v2, v3) @signature [|Ljavax/net/ssl/SSLServerSocket;.<init>:(II)V|] @classDescriptor [|javax:net:ssl:SSLServerSocket|] @type direct;
#L1b1476.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b147c.   v0:= temp  @type object;
#L1b147e.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]  := v0 @type object;
#L1b1482.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1488.   v0:= temp  @type object;
#L1b148a.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]  := v0 @type object;
#L1b148e.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]  := v4 @type object;
#L1b1492.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|int|] v2, [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(ILorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b14a4.   call temp:=  [|javax:net:ssl:SSLServerSocket.<init>|](v1, v2) @signature [|Ljavax/net/ssl/SSLServerSocket;.<init>:(I)V|] @classDescriptor [|javax:net:ssl:SSLServerSocket|] @type direct;
#L1b14aa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b14b0.   v0:= temp  @type object;
#L1b14b2.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]  := v0 @type object;
#L1b14b6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b14bc.   v0:= temp  @type object;
#L1b14be.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]  := v0 @type object;
#L1b14c2.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]  := v3 @type object;
#L1b14c6.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b14d8.   call temp:=  [|javax:net:ssl:SSLServerSocket.<init>|](v1) @signature [|Ljavax/net/ssl/SSLServerSocket;.<init>:()V|] @classDescriptor [|javax:net:ssl:SSLServerSocket|] @type direct;
#L1b14de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b14e4.   v0:= temp  @type object;
#L1b14e6.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]  := v0 @type object;
#L1b14ea.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getDefaultCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getDefaultCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b14f0.   v0:= temp  @type object;
#L1b14f2.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]  := v0 @type object;
#L1b14f6.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]  := v2 @type object;
#L1b14fa.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkEnabledCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v8 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkEnabledCipherSuites:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1b150c.   v0:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]   @type object;
#L1b1510.   v4:= v0.length;
#L1b1512.   v2:= 0  @length 4;
#L1b1514.   if v2 >= v4 then goto L1b1620;
#L1b1518.   v1:= v0[v2]  @type object;
#L1b151c.   v5:= "TLS_EMPTY_RENEGOTIATION_INFO_SCSV" @type (object, string);
#L1b1520.   call temp:=  [|java:lang:String.equals|](v1, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1526.   v5:= temp;
#L1b1528.   if v5 == 0 then goto L1b1532;
#L1b152c.   v2:= v2 + 1;
#L1b1530.   goto L1b1514;
#L1b1532.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:CipherSuite.getByName|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/CipherSuite;.getByName:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/CipherSuite;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:CipherSuite|] @type static;
#L1b1538.   v5:= temp  @type object;
#L1b153a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:CipherSuite.getServerKeyType|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/CipherSuite;.getServerKeyType:()Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:CipherSuite|] @type virtual;
#L1b1540.   v3:= temp  @type object;
#L1b1542.   if v3 != 0 then goto L1b1548;
#L1b1546.   return @void ;
#L1b1548.   v5:= "RSA" @type (object, string);
#L1b154c.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1552.   v5:= temp;
#L1b1554.   if v5 != 0 then goto L1b1568;
#L1b1558.   v5:= "DH_RSA" @type (object, string);
#L1b155c.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1562.   v5:= temp;
#L1b1564.   if v5 == 0 then goto L1b157a;
#L1b1568.   v5:= new [|java:security:interfaces:RSAPrivateKey|];
#L1b156c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkForPrivateKey|](v8, v3, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkForPrivateKey:(Ljava/lang/String;Ljava/lang/Class;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b1572.   v5:= temp;
#L1b1574.   if v5 == 0 then goto L1b152c;
#L1b1578.   goto L1b1546;
#L1b157a.   v5:= "DSA" @type (object, string);
#L1b157e.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1584.   v5:= temp;
#L1b1586.   if v5 != 0 then goto L1b159a;
#L1b158a.   v5:= "DH_DSA" @type (object, string);
#L1b158e.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1594.   v5:= temp;
#L1b1596.   if v5 == 0 then goto L1b15ac;
#L1b159a.   v5:= new [|java:security:interfaces:DSAPrivateKey|];
#L1b159e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkForPrivateKey|](v8, v3, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkForPrivateKey:(Ljava/lang/String;Ljava/lang/Class;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b15a4.   v5:= temp;
#L1b15a6.   if v5 == 0 then goto L1b152c;
#L1b15aa.   goto L1b1546;
#L1b15ac.   v5:= "EC" @type (object, string);
#L1b15b0.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b15b6.   v5:= temp;
#L1b15b8.   if v5 != 0 then goto L1b15dc;
#L1b15bc.   v5:= "EC_RSA" @type (object, string);
#L1b15c0.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b15c6.   v5:= temp;
#L1b15c8.   if v5 != 0 then goto L1b15dc;
#L1b15cc.   v5:= "EC_EC" @type (object, string);
#L1b15d0.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b15d6.   v5:= temp;
#L1b15d8.   if v5 == 0 then goto L1b15ee;
#L1b15dc.   v5:= new [|java:security:interfaces:ECPrivateKey|];
#L1b15e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkForPrivateKey|](v8, v3, v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkForPrivateKey:(Ljava/lang/String;Ljava/lang/Class;)Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b15e6.   v5:= temp;
#L1b15e8.   if v5 == 0 then goto L1b152c;
#L1b15ec.   goto L1b1546;
#L1b15ee.   v5:= new [|java:lang:IllegalStateException|];
#L1b15f2.   v6:= new [|java:lang:StringBuilder|];
#L1b15f6.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1b15fc.   v7:= "Unknown key type " @type (object, string);
#L1b1600.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1606.   v6:= temp  @type object;
#L1b1608.   call temp:=  [|java:lang:StringBuilder.append|](v6, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b160e.   v6:= temp  @type object;
#L1b1610.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1b1616.   v6:= temp  @type object;
#L1b1618.   call temp:=  [|java:lang:IllegalStateException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1b161e.   throw v5;
#L1b1620.   v5:= new [|javax:net:ssl:SSLException|];
#L1b1624.   v6:= "Could not find any key store entries to support the enabled cipher suites." @type (object, string);
#L1b1628.   call temp:=  [|javax:net:ssl:SSLException.<init>|](v5, v6) @signature [|Ljavax/net/ssl/SSLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLException|] @type direct;
#L1b162e.   throw v5;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkForPrivateKey|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|java:lang:Class|] v7 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkForPrivateKey:(Ljava/lang/String;Ljava/lang/Class;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b1640.   v4:= 0  @length 4;
#L1b1642.   v2:= 0  @length 4;
#L1b1644.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1648.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getKeyManager|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getKeyManager:()Ljavax/net/ssl/X509KeyManager;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b164e.   v3:= temp  @type object;
#L1b1650.   call temp:=  [|javax:net:ssl:X509KeyManager.chooseServerAlias|](v3, v6, v4, v4) @signature [|Ljavax/net/ssl/X509KeyManager;.chooseServerAlias:(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;|] @classDescriptor [|javax:net:ssl:X509KeyManager|] @type interface;
#L1b1656.   v0:= temp  @type object;
#L1b1658.   if v0 != 0 then goto L1b165e;
#L1b165c.   return v2;
#L1b165e.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1662.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getKeyManager|](v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getKeyManager:()Ljavax/net/ssl/X509KeyManager;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1668.   v3:= temp  @type object;
#L1b166a.   call temp:=  [|javax:net:ssl:X509KeyManager.getPrivateKey|](v3, v0) @signature [|Ljavax/net/ssl/X509KeyManager;.getPrivateKey:(Ljava/lang/String;)Ljava/security/PrivateKey;|] @classDescriptor [|javax:net:ssl:X509KeyManager|] @type interface;
#L1b1670.   v1:= temp  @type object;
#L1b1672.   if v1 == 0 then goto L1b165c;
#L1b1676.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1b167c.   v3:= temp  @type object;
#L1b167e.   call temp:=  [|java:lang:Class.isAssignableFrom|](v7, v3) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1b1684.   v3:= temp;
#L1b1686.   if v3 == 0 then goto L1b165c;
#L1b168a.   v2:= 1  @length 4;
#L1b168c.   goto L1b165c;

   }
    procedure [|java:net:Socket|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.accept|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.accept:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1b16a0.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b16a4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getUseClientMode|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getUseClientMode:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b16aa.   v1:= temp;
#L1b16ac.   if v1 != 0 then goto L1b16b6;
#L1b16b0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.checkEnabledCipherSuites|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.checkEnabledCipherSuites:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type direct;
#L1b16b6.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSocketImpl|];
#L1b16ba.   v3:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b16be.   v1:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]   @type object;
#L1b16c2.   call temp:=  [|java:lang:String[].clone|](v1) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L1b16c8.   v1:= temp  @type object;
#L1b16ca.   v1:= ([|java:lang:String|][])v1;
#L1b16ce.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]   @type object;
#L1b16d2.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L1b16d8.   v2:= temp  @type object;
#L1b16da.   v2:= ([|java:lang:String|][])v2;
#L1b16de.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSocketImpl.<init>|](v0, v3, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl;.<init>:(Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSocketImpl|] @type direct;
#L1b16e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.implAccept|](v4, v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.implAccept:(Ljava/net/Socket;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @type virtual;
#L1b16ea.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getEnableSessionCreation|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getEnableSessionCreation:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b16fc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1700.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getEnableSessionCreation|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getEnableSessionCreation:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1706.   v0:= temp;
#L1b1708.   return v0;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getEnabledCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getEnabledCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b171c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]   @type object;
#L1b1720.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L1b1726.   v0:= temp  @type object;
#L1b1728.   v0:= ([|java:lang:String|][])v0;
#L1b172c.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getEnabledProtocols|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getEnabledProtocols:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1740.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]   @type object;
#L1b1744.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L1b174a.   v0:= temp  @type object;
#L1b174c.   v0:= ([|java:lang:String|][])v0;
#L1b1750.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getNeedClientAuth|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getNeedClientAuth:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1764.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1768.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getNeedClientAuth|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getNeedClientAuth:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b176e.   v0:= temp;
#L1b1770.   return v0;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getSupportedCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getSupportedCipherSuites:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1784.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedCipherSuites|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedCipherSuites:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b178a.   v0:= temp  @type object;
#L1b178c.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getSupportedProtocols|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getSupportedProtocols:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b17a0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.getSupportedProtocols|]() @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.getSupportedProtocols:()[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b17a6.   v0:= temp  @type object;
#L1b17a8.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getUseClientMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getUseClientMode:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b17bc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b17c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getUseClientMode|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getUseClientMode:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b17c6.   v0:= temp;
#L1b17c8.   return v0;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.getWantClientAuth|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.getWantClientAuth:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b17dc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b17e0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.getWantClientAuth|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.getWantClientAuth:()Z|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b17e6.   v0:= temp;
#L1b17e8.   return v0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setEnableSessionCreation|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|boolean|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setEnableSessionCreation:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b17fc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1800.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setEnableSessionCreation|](v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setEnableSessionCreation:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1806.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setEnabledCipherSuites|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setEnabledCipherSuites:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1818.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledCipherSuites|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledCipherSuites:([Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b181e.   v0:= temp  @type object;
#L1b1820.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledCipherSuites|]  := v0 @type object;
#L1b1824.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setEnabledProtocols|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setEnabledProtocols:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1838.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.checkEnabledProtocols|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.checkEnabledProtocols:([Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b183e.   v0:= temp  @type object;
#L1b1840.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.enabledProtocols|]  := v0 @type object;
#L1b1844.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setNeedClientAuth|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|boolean|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setNeedClientAuth:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1858.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b185c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setNeedClientAuth|](v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setNeedClientAuth:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b1862.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setUseClientMode|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|boolean|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setUseClientMode:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1874.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1878.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setUseClientMode|](v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setUseClientMode:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b187e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.setWantClientAuth|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] v1 @type (this), [|boolean|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl;.setWantClientAuth:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1890.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLServerSocketImpl.sslParameters|]   @type object;
#L1b1894.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl.setWantClientAuth|](v0, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/SSLParametersImpl;.setWantClientAuth:(Z)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:SSLParametersImpl|] @type virtual;
#L1b189a.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|]  @type class @AccessFlag PUBLIC extends  [|javax:net:ssl:SSLSession|] {
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]    @AccessFlag PRIVATE;
      [|long|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.creationTime|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.id|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]    @AccessFlag PRIVATE;
      [|long|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.lastAccessedTime|]    @AccessFlag ;
      [|java:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]    @AccessFlag FINAL;
      [|javax:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificateChain|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]    @AccessFlag FINAL;
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerHost|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerPort|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.protocol|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:AbstractSessionContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sessionContext|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|]    @AccessFlag PROTECTED;
      [|java:util:Map|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this), [|int|] v3, [|java:security:cert:X509Certificate|][] v4 @type (object), [|java:security:cert:X509Certificate|][] v5 @type (object), [|java:lang:String|] v6 @type (object), [|int|] v7, [|org:apache:harmony:xnet:provider:jsse:AbstractSessionContext|] v8 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.<init>:(I[Ljava/security/cert/X509Certificate;[Ljava/security/cert/X509Certificate;Ljava/lang/String;ILorg/apache/harmony/xnet/provider/jsse/AbstractSessionContext;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1b18ac.   v0:= 0  @length wide16;
#L1b18b0.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1b18b6.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.creationTime|]  := v0 @wide;
#L1b18ba.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.lastAccessedTime|]  := v0 @wide;
#L1b18be.   v0:= 1  @length 4;
#L1b18c0.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]  := v0 @boolean;
#L1b18c4.   v0:= new [|java:util:HashMap|];
#L1b18c8.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L1b18ce.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]  := v0 @type object;
#L1b18d2.   v0:= -1  @length 4;
#L1b18d4.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerPort|]  := v0;
#L1b18d8.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|]  := v3;
#L1b18dc.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]  := v4 @type object;
#L1b18e0.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]  := v5 @type object;
#L1b18e4.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerHost|]  := v6 @type object;
#L1b18e8.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerPort|]  := v7;
#L1b18ec.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sessionContext|]  := v8 @type object;
#L1b18f0.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v7 @type (this), [|byte|][] v8, [|java:lang:String|] v9 @type (object), [|int|] v10, [|java:security:cert:X509Certificate|][] v11 @type (object), [|org:apache:harmony:xnet:provider:jsse:AbstractSessionContext|] v12 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.<init>:([BLjava/lang/String;I[Ljava/security/cert/X509Certificate;Lorg/apache/harmony/xnet/provider/jsse/AbstractSessionContext;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1b1904.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.d2i_SSL_SESSION|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.d2i_SSL_SESSION:([B)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b190a.   v1:= temp;
#L1b190c.   v2:= 0  @length 4;
#L1b190e.   v0:= v7  @type object;
#L1b1910.   v3:= v11  @type object;
#L1b1912.   v4:= v9  @type object;
#L1b1914.   v5:= v10;
#L1b1916.   v6:= v12  @type object;
#L1b1918.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.<init>:(I[Ljava/security/cert/X509Certificate;[Ljava/security/cert/X509Certificate;Ljava/lang/String;ILorg/apache/harmony/xnet/provider/jsse/AbstractSessionContext;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type direct;
#L1b191e.   v0:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1922.   if v0 != 0 then goto L1b1936;
#L1b1926.   v0:= new [|java:io:IOException|];
#L1b192a.   v1:= "Invalid session data" @type (object, string);
#L1b192e.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L1b1934.   throw v0;
#L1b1936.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.checkPeerCertificatesPresent|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.checkPeerCertificatesPresent:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1b1948.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b194c.   if v0 == 0 then goto L1b195a;
#L1b1950.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b1954.   v0:= v0.length;
#L1b1956.   if v0 != 0 then goto L1b196a;
#L1b195a.   v0:= new [|javax:net:ssl:SSLPeerUnverifiedException|];
#L1b195e.   v1:= "No peer certificates" @type (object, string);
#L1b1962.   call temp:=  [|javax:net:ssl:SSLPeerUnverifiedException.<init>|](v0, v1) @signature [|Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLPeerUnverifiedException|] @type direct;
#L1b1968.   throw v0;
#L1b196a.   return @void ;

   }
    procedure [|javax:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.createPeerCertificateChain|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v6 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.createPeerCertificateChain:()[Ljavax/security/cert/X509Certificate;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1b197c.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b1980.   v5:= v5.length;
#L1b1982.   v0:= new [|javax:security:cert:X509Certificate|][v5];
#L1b1986.   v4:= 0  @length 4;
#L1b1988.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b198c.   v5:= v5.length;
#L1b198e.   if v4 >= v5 then goto L1b19ec;
#L1b1992.   v5:= v6.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b1996.   v5:= v5[v4]  @type object;
#L1b199a.   call temp:=  [|java:security:cert:X509Certificate.getEncoded|](v5) @signature [|Ljava/security/cert/X509Certificate;.getEncoded:()[B|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1b19a0.   v2:= temp  @type object;
#L1b19a2.   call temp:=  [|javax:security:cert:X509Certificate.getInstance|](v2) @signature [|Ljavax/security/cert/X509Certificate;.getInstance:([B)Ljavax/security/cert/X509Certificate;|] @classDescriptor [|javax:security:cert:X509Certificate|] @type static;
#L1b19a8.   v5:= temp  @type object;
#L1b19aa.   v0[v4]:= v5  @type object;
#L1b19ae.   v4:= v4 + 1;
#L1b19b2.   goto L1b1988;
#L1b19b4.   v1:= Exception  @type object;
#L1b19b6.   v3:= new [|javax:net:ssl:SSLPeerUnverifiedException|];
#L1b19ba.   call temp:=  [|java:security:cert:CertificateEncodingException.getMessage|](v1) @signature [|Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:security:cert:CertificateEncodingException|] @type virtual;
#L1b19c0.   v5:= temp  @type object;
#L1b19c2.   call temp:=  [|javax:net:ssl:SSLPeerUnverifiedException.<init>|](v3, v5) @signature [|Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLPeerUnverifiedException|] @type direct;
#L1b19c8.   call temp:=  [|javax:net:ssl:SSLPeerUnverifiedException.initCause|](v3, v3) @signature [|Ljavax/net/ssl/SSLPeerUnverifiedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:net:ssl:SSLPeerUnverifiedException|] @type virtual;
#L1b19ce.   throw v3;
#L1b19d0.   v1:= Exception  @type object;
#L1b19d2.   v3:= new [|javax:net:ssl:SSLPeerUnverifiedException|];
#L1b19d6.   call temp:=  [|javax:security:cert:CertificateException.getMessage|](v1) @signature [|Ljavax/security/cert/CertificateException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|javax:security:cert:CertificateException|] @type virtual;
#L1b19dc.   v5:= temp  @type object;
#L1b19de.   call temp:=  [|javax:net:ssl:SSLPeerUnverifiedException.<init>|](v3, v5) @signature [|Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLPeerUnverifiedException|] @type direct;
#L1b19e4.   call temp:=  [|javax:net:ssl:SSLPeerUnverifiedException.initCause|](v3, v3) @signature [|Ljavax/net/ssl/SSLPeerUnverifiedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|javax:net:ssl:SSLPeerUnverifiedException|] @type virtual;
#L1b19ea.   throw v3;
#L1b19ec.   return v0  @type object;
  catch  [|java:security:cert:CertificateEncodingException|] @[L1b197c..L1b19ae] goto L1b19b4;
  catch  [|javax:security:cert:CertificateException|] @[L1b197c..L1b19ae] goto L1b19d0;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1b1a10.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1a14.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_free|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_free:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1a1a.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1b1a20.   return @void ;
#L1b1a22.   v0:= Exception  @type object;
#L1b1a24.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1b1a2a.   throw v0;
  catch  [|any|] @[L1b1a10..L1b1a1a] goto L1b1a22;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getApplicationBufferSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getApplicationBufferSize:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1a48.   v0:= 16384  @length 16;
#L1b1a4c.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getCipherSuite|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getCipherSuite:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1a60.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]   @type object;
#L1b1a64.   if v1 != 0 then goto L1b1a94;
#L1b1a68.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1a6c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_cipher|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_cipher:(I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1a72.   v0:= temp  @type object;
#L1b1a74.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES|]   @type object;
#L1b1a78.   call temp:=  [|java:util:Map.get|](v1, v0) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1a7e.   v1:= temp  @type object;
#L1b1a80.   v1:= ([|java:lang:String|])v1;
#L1b1a84.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]  := v1 @type object;
#L1b1a88.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]   @type object;
#L1b1a8c.   if v1 != 0 then goto L1b1a94;
#L1b1a90.   v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]  := v0 @type object;
#L1b1a94.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.cipherSuite|]   @type object;
#L1b1a98.   return v1  @type object;

   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getCreationTime|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getCreationTime:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1b1aac.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.creationTime|]   @wide;
#L1b1ab0.   v2:= 0  @length wide16;
#L1b1ab4.   v0:= cmp(v0,v2);
#L1b1ab8.   if v0 != 0 then goto L1b1acc;
#L1b1abc.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1ac0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_get_time|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_get_time:(I)J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1ac6.   v0:= temp  @type wide;
#L1b1ac8.   v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.creationTime|]  := v0 @wide;
#L1b1acc.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.creationTime|]   @wide;
#L1b1ad0.   return v0  @type wide;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getEncoded|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getEncoded:()[B|] @Access  {
      local temp ;
        v0;
      
#L1b1ae4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1ae8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.i2d_SSL_SESSION|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.i2d_SSL_SESSION:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1aee.   v0:= temp  @type object;
#L1b1af0.   return v0  @type object;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getId|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getId:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1b04.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.id|]   @type object;
#L1b1b08.   if v0 != 0 then goto L1b1b12;
#L1b1b0c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.resetId|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.resetId:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type virtual;
#L1b1b12.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.id|]   @type object;
#L1b1b16.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getLastAccessedTime|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v4 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getLastAccessedTime:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1b1b28.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.lastAccessedTime|]   @wide;
#L1b1b2c.   v2:= 0  @length wide16;
#L1b1b30.   v0:= cmp(v0,v2);
#L1b1b34.   if v0 != 0 then goto L1b1b42;
#L1b1b38.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getCreationTime|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getCreationTime:()J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type virtual;
#L1b1b3e.   v0:= temp  @type wide;
#L1b1b40.   return v0  @type wide;
#L1b1b42.   v0:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.lastAccessedTime|]   @wide;
#L1b1b46.   goto L1b1b40;

   }
    procedure [|java:security:cert:Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getLocalCertificates|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getLocalCertificates:()[Ljava/security/cert/Certificate;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1b58.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]   @type object;
#L1b1b5c.   return v0  @type object;

   }
    procedure [|java:security:Principal|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getLocalPrincipal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getLocalPrincipal:()Ljava/security/Principal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1b70.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]   @type object;
#L1b1b74.   if v0 == 0 then goto L1b1b96;
#L1b1b78.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]   @type object;
#L1b1b7c.   v0:= v0.length;
#L1b1b7e.   if v0 <= 0 then goto L1b1b96;
#L1b1b82.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.localCertificates|]   @type object;
#L1b1b86.   v1:= 0  @length 4;
#L1b1b88.   v0:= v0[v1]  @type object;
#L1b1b8c.   call temp:=  [|java:security:cert:X509Certificate.getSubjectX500Principal|](v0) @signature [|Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1b1b92.   v0:= temp  @type object;
#L1b1b94.   return v0  @type object;
#L1b1b96.   v0:= 0  @length 4;
#L1b1b98.   goto L1b1b94;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPacketBufferSize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPacketBufferSize:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1bac.   v0:= 18437  @length 16;
#L1b1bb0.   return v0;

   }
    procedure [|javax:security:cert:X509Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPeerCertificateChain|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPeerCertificateChain:()[Ljavax/security/cert/X509Certificate;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1bc4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.checkPeerCertificatesPresent|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.checkPeerCertificatesPresent:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type direct;
#L1b1bca.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificateChain|]   @type object;
#L1b1bce.   if v0 != 0 then goto L1b1bde;
#L1b1bd2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.createPeerCertificateChain|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.createPeerCertificateChain:()[Ljavax/security/cert/X509Certificate;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type direct;
#L1b1bd8.   v0:= temp  @type object;
#L1b1bda.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificateChain|]  := v0 @type object;
#L1b1bde.   return v0  @type object;

   }
    procedure [|java:security:cert:Certificate|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPeerCertificates|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPeerCertificates:()[Ljava/security/cert/Certificate;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1bf0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.checkPeerCertificatesPresent|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.checkPeerCertificatesPresent:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type direct;
#L1b1bf6.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b1bfa.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPeerHost|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPeerHost:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1c0c.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerHost|]   @type object;
#L1b1c10.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPeerPort|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPeerPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1c24.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerPort|] ;
#L1b1c28.   return v0;

   }
    procedure [|java:security:Principal|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getPeerPrincipal|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getPeerPrincipal:()Ljava/security/Principal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1c3c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.checkPeerCertificatesPresent|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.checkPeerCertificatesPresent:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type direct;
#L1b1c42.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.peerCertificates|]   @type object;
#L1b1c46.   v1:= 0  @length 4;
#L1b1c48.   v0:= v0[v1]  @type object;
#L1b1c4c.   call temp:=  [|java:security:cert:X509Certificate.getSubjectX500Principal|](v0) @signature [|Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L1b1c52.   v0:= temp  @type object;
#L1b1c54.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getProtocol|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getProtocol:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1c68.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.protocol|]   @type object;
#L1b1c6c.   if v0 != 0 then goto L1b1c80;
#L1b1c70.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1c74.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_get_version|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_get_version:(I)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1c7a.   v0:= temp  @type object;
#L1b1c7c.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.protocol|]  := v0 @type object;
#L1b1c80.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.protocol|]   @type object;
#L1b1c84.   return v0  @type object;

   }
    procedure [|javax:net:ssl:SSLSessionContext|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getSessionContext|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getSessionContext:()Ljavax/net/ssl/SSLSessionContext;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1c98.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sessionContext|]   @type object;
#L1b1c9c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getValue|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getValue:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1cb0.   if v3 != 0 then goto L1b1cc4;
#L1b1cb4.   v0:= new [|java:lang:IllegalArgumentException|];
#L1b1cb8.   v1:= "name == null" @type (object, string);
#L1b1cbc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1b1cc2.   throw v0;
#L1b1cc4.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]   @type object;
#L1b1cc8.   call temp:=  [|java:util:Map.get|](v0, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1cce.   v0:= temp  @type object;
#L1b1cd0.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getValueNames|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v2 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getValueNames:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1b1ce4.   v0:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]   @type object;
#L1b1ce8.   call temp:=  [|java:util:Map.keySet|](v0) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1cee.   v0:= temp  @type object;
#L1b1cf0.   v1:= v2.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]   @type object;
#L1b1cf4.   call temp:=  [|java:util:Map.size|](v1) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1cfa.   v1:= temp;
#L1b1cfc.   v1:= new [|java:lang:String|][v1];
#L1b1d00.   call temp:=  [|java:util:Set.toArray|](v0, v1) @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L1b1d06.   v0:= temp  @type object;
#L1b1d08.   v0:= ([|java:lang:String|][])v0;
#L1b1d0c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.invalidate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.invalidate:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1b1d20.   v0:= 0  @length 4;
#L1b1d22.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]  := v0 @boolean;
#L1b1d26.   v0:= 0  @length 4;
#L1b1d28.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sessionContext|]  := v0 @type object;
#L1b1d2c.   return @void ;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v5 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.isValid:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b1d40.   v0:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sessionContext|]   @type object;
#L1b1d44.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]   @boolean;
#L1b1d48.   if v1 == 0 then goto L1b1d8a;
#L1b1d4c.   if v0 == 0 then goto L1b1d8a;
#L1b1d50.   call temp:=  [|javax:net:ssl:SSLSessionContext.getSessionTimeout|](v0) @signature [|Ljavax/net/ssl/SSLSessionContext;.getSessionTimeout:()I|] @classDescriptor [|javax:net:ssl:SSLSessionContext|] @type interface;
#L1b1d56.   v1:= temp;
#L1b1d58.   if v1 == 0 then goto L1b1d8a;
#L1b1d5c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.getCreationTime|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.getCreationTime:()J|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @type virtual;
#L1b1d62.   v1:= temp  @type wide;
#L1b1d64.   call temp:=  [|javax:net:ssl:SSLSessionContext.getSessionTimeout|](v0) @signature [|Ljavax/net/ssl/SSLSessionContext;.getSessionTimeout:()I|] @classDescriptor [|javax:net:ssl:SSLSessionContext|] @type interface;
#L1b1d6a.   v3:= temp;
#L1b1d6c.   v3:= v3 * 1000;
#L1b1d70.   v3:= (long)v3  @type i2l;
#L1b1d72.   v1:= v1 + v3  @type long;
#L1b1d74.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1b1d7a.   v3:= temp  @type wide;
#L1b1d7c.   v1:= cmp(v1,v3);
#L1b1d80.   if v1 >= 0 then goto L1b1d8a;
#L1b1d84.   v1:= 0  @length 4;
#L1b1d86.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]  := v1 @boolean;
#L1b1d8a.   v1:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.isValid|]   @boolean;
#L1b1d8e.   return v1;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.putValue|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.putValue:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b1da0.   if v4 == 0 then goto L1b1da8;
#L1b1da4.   if v5 != 0 then goto L1b1db8;
#L1b1da8.   v1:= new [|java:lang:IllegalArgumentException|];
#L1b1dac.   v2:= "name == null || value == null" @type (object, string);
#L1b1db0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1b1db6.   throw v1;
#L1b1db8.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]   @type object;
#L1b1dbc.   call temp:=  [|java:util:Map.put|](v1, v4, v5) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1dc2.   v0:= temp  @type object;
#L1b1dc4.   v1:= instanceof @varname v5 @type [|javax:net:ssl:SSLSessionBindingListener|];
#L1b1dc8.   if v1 == 0 then goto L1b1de0;
#L1b1dcc.   v5:= ([|javax:net:ssl:SSLSessionBindingListener|])v5;
#L1b1dd0.   v1:= new [|javax:net:ssl:SSLSessionBindingEvent|];
#L1b1dd4.   call temp:=  [|javax:net:ssl:SSLSessionBindingEvent.<init>|](v1, v3, v4) @signature [|Ljavax/net/ssl/SSLSessionBindingEvent;.<init>:(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingEvent|] @type direct;
#L1b1dda.   call temp:=  [|javax:net:ssl:SSLSessionBindingListener.valueBound|](v5, v1) @signature [|Ljavax/net/ssl/SSLSessionBindingListener;.valueBound:(Ljavax/net/ssl/SSLSessionBindingEvent;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingListener|] @type interface;
#L1b1de0.   v1:= instanceof @varname v0 @type [|javax:net:ssl:SSLSessionBindingListener|];
#L1b1de4.   if v1 == 0 then goto L1b1dfc;
#L1b1de8.   v0:= ([|javax:net:ssl:SSLSessionBindingListener|])v0;
#L1b1dec.   v1:= new [|javax:net:ssl:SSLSessionBindingEvent|];
#L1b1df0.   call temp:=  [|javax:net:ssl:SSLSessionBindingEvent.<init>|](v1, v3, v4) @signature [|Ljavax/net/ssl/SSLSessionBindingEvent;.<init>:(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingEvent|] @type direct;
#L1b1df6.   call temp:=  [|javax:net:ssl:SSLSessionBindingListener.valueUnbound|](v0, v1) @signature [|Ljavax/net/ssl/SSLSessionBindingListener;.valueUnbound:(Ljavax/net/ssl/SSLSessionBindingEvent;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingListener|] @type interface;
#L1b1dfc.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.removeValue|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.removeValue:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1b1e10.   if v5 != 0 then goto L1b1e24;
#L1b1e14.   v2:= new [|java:lang:IllegalArgumentException|];
#L1b1e18.   v3:= "name == null" @type (object, string);
#L1b1e1c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1b1e22.   throw v2;
#L1b1e24.   v2:= v4.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.values|]   @type object;
#L1b1e28.   call temp:=  [|java:util:Map.remove|](v2, v5) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L1b1e2e.   v1:= temp  @type object;
#L1b1e30.   v2:= instanceof @varname v1 @type [|javax:net:ssl:SSLSessionBindingListener|];
#L1b1e34.   if v2 == 0 then goto L1b1e4e;
#L1b1e38.   v0:= v1  @type object;
#L1b1e3a.   v0:= ([|javax:net:ssl:SSLSessionBindingListener|])v0;
#L1b1e3e.   v2:= new [|javax:net:ssl:SSLSessionBindingEvent|];
#L1b1e42.   call temp:=  [|javax:net:ssl:SSLSessionBindingEvent.<init>|](v2, v4, v5) @signature [|Ljavax/net/ssl/SSLSessionBindingEvent;.<init>:(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingEvent|] @type direct;
#L1b1e48.   call temp:=  [|javax:net:ssl:SSLSessionBindingListener.valueUnbound|](v0, v2) @signature [|Ljavax/net/ssl/SSLSessionBindingListener;.valueUnbound:(Ljavax/net/ssl/SSLSessionBindingEvent;)V|] @classDescriptor [|javax:net:ssl:SSLSessionBindingListener|] @type interface;
#L1b1e4e.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.resetId|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl;.resetId:()V|] @Access  {
      local temp ;
        v0;
      
#L1b1e60.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.sslSessionNativePointer|] ;
#L1b1e64.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.SSL_SESSION_session_id|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.SSL_SESSION_session_id:(I)[B|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1e6a.   v0:= temp  @type object;
#L1b1e6c.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSessionImpl.id|]  := v0 @type object;
#L1b1e70.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|]  @type class @AccessFlag FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|][] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.<clinit>|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b1e84.   v4:= 2  @length 4;
#L1b1e86.   v3:= 1  @length 4;
#L1b1e88.   v2:= 0  @length 4;
#L1b1e8a.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|];
#L1b1e8e.   v1:= "RSA" @type (object, string);
#L1b1e92.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @type direct;
#L1b1e98.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|] := v0  @type object;
#L1b1e9c.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|];
#L1b1ea0.   v1:= "DSA" @type (object, string);
#L1b1ea4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.<init>|](v0, v1, v3) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @type direct;
#L1b1eaa.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|] := v0  @type object;
#L1b1eae.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|];
#L1b1eb2.   v1:= "EC" @type (object, string);
#L1b1eb6.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.<init>|](v0, v1, v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @type direct;
#L1b1ebc.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|] := v0  @type object;
#L1b1ec0.   v0:= 3  @length 4;
#L1b1ec2.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|][v0];
#L1b1ec6.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b1eca.   v0[v2]:= v1  @type object;
#L1b1ece.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b1ed2.   v0[v3]:= v1  @type object;
#L1b1ed6.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b1eda.   v0[v4]:= v1  @type object;
#L1b1ede.   @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.$VALUES|] := v0  @type object;
#L1b1ee2.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L1b1ef4.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L1b1efa.   return @void ;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.valueOf:(Ljava/lang/String;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1b1f0c.   v0:= new [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|];
#L1b1f10.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L1b1f16.   v0:= temp  @type object;
#L1b1f18.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|])v0;
#L1b1f1c.   return v0  @type object;

   }
    procedure [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.values|] () @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.values:()[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1b1f30.   v0:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.$VALUES|]   @type object;
#L1b1f34.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType[].clone|](v0) @signature [|[Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType[]|] @type virtual;
#L1b1f3a.   v0:= temp  @type object;
#L1b1f3c.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|][])v0;
#L1b1f40.   return v0  @type object;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|]  @type class @AccessFlag PUBLIC  extends [|java:security:Signature|] {
      [|int|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.evpAlgorithm|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.singleByte|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1b1f54.   call temp:=  [|java:security:Signature.<init>|](v1, v2) @signature [|Ljava/security/Signature;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:Signature|] @type direct;
#L1b1f5a.   v0:= 1  @length 4;
#L1b1f5c.   v0:= new [|byte|][v0];
#L1b1f60.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.singleByte|]  := v0 @type object;
#L1b1f64.   v0:= "RSA-MD2" @type (object, string);
#L1b1f68.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L1b1f6e.   v0:= temp;
#L1b1f70.   if v0 == 0 then goto L1b1f80;
#L1b1f74.   v0:= new [|java:security:NoSuchAlgorithmException|];
#L1b1f78.   call temp:=  [|java:security:NoSuchAlgorithmException.<init>|](v0, v2) @signature [|Ljava/security/NoSuchAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:NoSuchAlgorithmException|] @type direct;
#L1b1f7e.   throw v0;
#L1b1f80.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]  := v3 @type object;
#L1b1f84.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.evpAlgorithm|]  := v2 @type object;
#L1b1f88.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType|] v2 @type (object), [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$1|] v3 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L1b1f9c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b1fa2.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1b1fb4.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b1fb8.   if v0 == 0 then goto L1b1fcc;
#L1b1fbc.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b1fc0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_destroy|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_destroy:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b1fc6.   v0:= 0  @length 4;
#L1b1fc8.   v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|]  := v0;
#L1b1fcc.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineGetParameter|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineGetParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1b1fe0.   v0:= 0  @length 4;
#L1b1fe2.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineInitSign|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v5 @type (this), [|java:security:PrivateKey|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineInitSign:(Ljava/security/PrivateKey;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b1ff4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b1ffa.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|];
#L1b1ffe.   if v3 == 0 then goto L1b2032;
#L1b2002.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b2006.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b200a.   if v3 == v4 then goto L1b201e;
#L1b200e.   v3:= new [|java:security:InvalidKeyException|];
#L1b2012.   v4:= "Signature not initialized as DSA" @type (object, string);
#L1b2016.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b201c.   throw v3;
#L1b201e.   v0:= v6  @type object;
#L1b2020.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|])v0;
#L1b2024.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type virtual;
#L1b202a.   v3:= temp  @type object;
#L1b202c.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2030.   return @void ;
#L1b2032.   v3:= instanceof @varname v6 @type [|java:security:interfaces:DSAPrivateKey|];
#L1b2036.   if v3 == 0 then goto L1b206a;
#L1b203a.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b203e.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b2042.   if v3 == v4 then goto L1b2056;
#L1b2046.   v3:= new [|java:security:InvalidKeyException|];
#L1b204a.   v4:= "Signature not initialized as DSA" @type (object, string);
#L1b204e.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2054.   throw v3;
#L1b2056.   v0:= v6  @type object;
#L1b2058.   v0:= ([|java:security:interfaces:DSAPrivateKey|])v0;
#L1b205c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey.getInstance|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPrivateKey;.getInstance:(Ljava/security/interfaces/DSAPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPrivateKey|] @type static;
#L1b2062.   v3:= temp  @type object;
#L1b2064.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2068.   goto L1b2030;
#L1b206a.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|];
#L1b206e.   if v3 == 0 then goto L1b20a2;
#L1b2072.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b2076.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b207a.   if v3 == v4 then goto L1b208e;
#L1b207e.   v3:= new [|java:security:InvalidKeyException|];
#L1b2082.   v4:= "Signature not initialized as RSA" @type (object, string);
#L1b2086.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b208c.   throw v3;
#L1b208e.   v2:= v6  @type object;
#L1b2090.   v2:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|])v2;
#L1b2094.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type virtual;
#L1b209a.   v3:= temp  @type object;
#L1b209c.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b20a0.   goto L1b2030;
#L1b20a2.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPrivateCrtKey|];
#L1b20a6.   if v3 == 0 then goto L1b20da;
#L1b20aa.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b20ae.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b20b2.   if v3 == v4 then goto L1b20c6;
#L1b20b6.   v3:= new [|java:security:InvalidKeyException|];
#L1b20ba.   v4:= "Signature not initialized as RSA" @type (object, string);
#L1b20be.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b20c4.   throw v3;
#L1b20c6.   v2:= v6  @type object;
#L1b20c8.   v2:= ([|java:security:interfaces:RSAPrivateCrtKey|])v2;
#L1b20cc.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey.getInstance|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateCrtKey;.getInstance:(Ljava/security/interfaces/RSAPrivateCrtKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateCrtKey|] @type static;
#L1b20d2.   v3:= temp  @type object;
#L1b20d4.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b20d8.   goto L1b2030;
#L1b20da.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPrivateKey|];
#L1b20de.   if v3 == 0 then goto L1b2112;
#L1b20e2.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b20e6.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b20ea.   if v3 == v4 then goto L1b20fe;
#L1b20ee.   v3:= new [|java:security:InvalidKeyException|];
#L1b20f2.   v4:= "Signature not initialized as RSA" @type (object, string);
#L1b20f6.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b20fc.   throw v3;
#L1b20fe.   v2:= v6  @type object;
#L1b2100.   v2:= ([|java:security:interfaces:RSAPrivateKey|])v2;
#L1b2104.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey.getInstance|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPrivateKey;.getInstance:(Ljava/security/interfaces/RSAPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPrivateKey|] @type static;
#L1b210a.   v3:= temp  @type object;
#L1b210c.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2110.   goto L1b2030;
#L1b2112.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|];
#L1b2116.   if v3 == 0 then goto L1b214c;
#L1b211a.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b211e.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b2122.   if v3 == v4 then goto L1b2136;
#L1b2126.   v3:= new [|java:security:InvalidKeyException|];
#L1b212a.   v4:= "Signature not initialized as EC" @type (object, string);
#L1b212e.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2134.   throw v3;
#L1b2136.   v1:= v6  @type object;
#L1b2138.   v1:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|])v1;
#L1b213c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getOpenSSLKey|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type virtual;
#L1b2142.   v3:= temp  @type object;
#L1b2144.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2148.   goto L1b2030;
#L1b214c.   v3:= instanceof @varname v6 @type [|java:security:interfaces:ECPrivateKey|];
#L1b2150.   if v3 == 0 then goto L1b2186;
#L1b2154.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b2158.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b215c.   if v3 == v4 then goto L1b2170;
#L1b2160.   v3:= new [|java:security:InvalidKeyException|];
#L1b2164.   v4:= "Signature not initialized as EC" @type (object, string);
#L1b2168.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b216e.   throw v3;
#L1b2170.   v1:= v6  @type object;
#L1b2172.   v1:= ([|java:security:interfaces:ECPrivateKey|])v1;
#L1b2176.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey.getInstance|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPrivateKey;.getInstance:(Ljava/security/interfaces/ECPrivateKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPrivateKey|] @type static;
#L1b217c.   v3:= temp  @type object;
#L1b217e.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2182.   goto L1b2030;
#L1b2186.   v3:= new [|java:security:InvalidKeyException|];
#L1b218a.   v4:= "Need DSA or RSA or EC private key" @type (object, string);
#L1b218e.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2194.   throw v3;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineInitVerify|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v5 @type (this), [|java:security:PublicKey|] v6 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineInitVerify:(Ljava/security/PublicKey;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1b21a8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v5) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b21ae.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|];
#L1b21b2.   if v3 == 0 then goto L1b21e6;
#L1b21b6.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b21ba.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b21be.   if v3 == v4 then goto L1b21d2;
#L1b21c2.   v3:= new [|java:security:InvalidKeyException|];
#L1b21c6.   v4:= "Signature not initialized as DSA" @type (object, string);
#L1b21ca.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b21d0.   throw v3;
#L1b21d2.   v0:= v6  @type object;
#L1b21d4.   v0:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|])v0;
#L1b21d8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getOpenSSLKey|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type virtual;
#L1b21de.   v3:= temp  @type object;
#L1b21e0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b21e4.   return @void ;
#L1b21e6.   v3:= instanceof @varname v6 @type [|java:security:interfaces:DSAPublicKey|];
#L1b21ea.   if v3 == 0 then goto L1b221e;
#L1b21ee.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b21f2.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b21f6.   if v3 == v4 then goto L1b220a;
#L1b21fa.   v3:= new [|java:security:InvalidKeyException|];
#L1b21fe.   v4:= "Signature not initialized as DSA" @type (object, string);
#L1b2202.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2208.   throw v3;
#L1b220a.   v0:= v6  @type object;
#L1b220c.   v0:= ([|java:security:interfaces:DSAPublicKey|])v0;
#L1b2210.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey.getInstance|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLDSAPublicKey;.getInstance:(Ljava/security/interfaces/DSAPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLDSAPublicKey|] @type static;
#L1b2216.   v3:= temp  @type object;
#L1b2218.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b221c.   goto L1b21e4;
#L1b221e.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|];
#L1b2222.   if v3 == 0 then goto L1b2256;
#L1b2226.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b222a.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b222e.   if v3 == v4 then goto L1b2242;
#L1b2232.   v3:= new [|java:security:InvalidKeyException|];
#L1b2236.   v4:= "Signature not initialized as RSA" @type (object, string);
#L1b223a.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2240.   throw v3;
#L1b2242.   v2:= v6  @type object;
#L1b2244.   v2:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|])v2;
#L1b2248.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getOpenSSLKey|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type virtual;
#L1b224e.   v3:= temp  @type object;
#L1b2250.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b2254.   goto L1b21e4;
#L1b2256.   v3:= instanceof @varname v6 @type [|java:security:interfaces:RSAPublicKey|];
#L1b225a.   if v3 == 0 then goto L1b228e;
#L1b225e.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b2262.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b2266.   if v3 == v4 then goto L1b227a;
#L1b226a.   v3:= new [|java:security:InvalidKeyException|];
#L1b226e.   v4:= "Signature not initialized as RSA" @type (object, string);
#L1b2272.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b2278.   throw v3;
#L1b227a.   v2:= v6  @type object;
#L1b227c.   v2:= ([|java:security:interfaces:RSAPublicKey|])v2;
#L1b2280.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey.getInstance|](v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLRSAPublicKey;.getInstance:(Ljava/security/interfaces/RSAPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLRSAPublicKey|] @type static;
#L1b2286.   v3:= temp  @type object;
#L1b2288.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b228c.   goto L1b21e4;
#L1b228e.   v3:= instanceof @varname v6 @type [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|];
#L1b2292.   if v3 == 0 then goto L1b22c6;
#L1b2296.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b229a.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b229e.   if v3 == v4 then goto L1b22b2;
#L1b22a2.   v3:= new [|java:security:InvalidKeyException|];
#L1b22a6.   v4:= "Signature not initialized as EC" @type (object, string);
#L1b22aa.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b22b0.   throw v3;
#L1b22b2.   v1:= v6  @type object;
#L1b22b4.   v1:= ([|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|])v1;
#L1b22b8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getOpenSSLKey|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getOpenSSLKey:()Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type virtual;
#L1b22be.   v3:= temp  @type object;
#L1b22c0.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b22c4.   goto L1b21e4;
#L1b22c6.   v3:= instanceof @varname v6 @type [|java:security:interfaces:ECPublicKey|];
#L1b22ca.   if v3 == 0 then goto L1b2300;
#L1b22ce.   v3:= v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineType|]   @type object;
#L1b22d2.   v4:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b22d6.   if v3 == v4 then goto L1b22ea;
#L1b22da.   v3:= new [|java:security:InvalidKeyException|];
#L1b22de.   v4:= "Signature not initialized as EC" @type (object, string);
#L1b22e2.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b22e8.   throw v3;
#L1b22ea.   v1:= v6  @type object;
#L1b22ec.   v1:= ([|java:security:interfaces:ECPublicKey|])v1;
#L1b22f0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey.getInstance|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLECPublicKey;.getInstance:(Ljava/security/interfaces/ECPublicKey;)Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLECPublicKey|] @type static;
#L1b22f6.   v3:= temp  @type object;
#L1b22f8.   v5.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]  := v3 @type object;
#L1b22fc.   goto L1b21e4;
#L1b2300.   v3:= new [|java:security:InvalidKeyException|];
#L1b2304.   v4:= "Need DSA or RSA or EC public key" @type (object, string);
#L1b2308.   call temp:=  [|java:security:InvalidKeyException.<init>|](v3, v4) @signature [|Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:InvalidKeyException|] @type direct;
#L1b230e.   throw v3;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineSetParameter|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineSetParameter:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PROTECTED {
      local temp ;
      
#L1b2320.   return @void ;

   }
    procedure [|byte|][] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineSign|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v7 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineSign:()[B|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1b2334.   v4:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]   @type object;
#L1b2338.   if v4 != 0 then goto L1b234c;
#L1b233c.   v4:= new [|java:security:SignatureException|];
#L1b2340.   v5:= "Need DSA or RSA or EC private key" @type (object, string);
#L1b2344.   call temp:=  [|java:security:SignatureException.<init>|](v4, v5) @signature [|Ljava/security/SignatureException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:SignatureException|] @type direct;
#L1b234a.   throw v4;
#L1b234c.   v4:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]   @type object;
#L1b2350.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b2356.   v4:= temp;
#L1b2358.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_PKEY_size|](v4) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_PKEY_size:(I)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b235e.   v4:= temp;
#L1b2360.   v0:= new [|byte|][v4];
#L1b2364.   v4:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b2368.   v5:= 0  @length 4;
#L1b236a.   v6:= v7.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]   @type object;
#L1b236e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b2374.   v6:= temp;
#L1b2376.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignFinal|](v4, v0, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignFinal:(I[BII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b237c.   v1:= temp;
#L1b237e.   v3:= new [|byte|][v1];
#L1b2382.   v4:= 0  @length 4;
#L1b2384.   v5:= 0  @length 4;
#L1b2386.   call temp:=  [|java:lang:System.arraycopy|](v0, v4, v3, v5, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1b238c.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b2392.   return v3  @type object;
#L1b2394.   v2:= Exception  @type object;
#L1b2396.   v4:= new [|java:security:SignatureException|];
#L1b239a.   call temp:=  [|java:security:SignatureException.<init>|](v4, v2) @signature [|Ljava/security/SignatureException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:security:SignatureException|] @type direct;
#L1b23a0.   throw v4;
#L1b23a2.   v4:= Exception  @type object;
#L1b23a4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b23aa.   throw v4;
  catch  [|java:lang:Exception|] @[L1b234c..L1b238c] goto L1b2394;
  catch  [|any|] @[L1b234c..L1b238c] goto L1b23a2;
  catch  [|any|] @[L1b2396..L1b23a2] goto L1b23a2;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v3 @type (this), [|byte|] v4) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineUpdate:(B)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b23d4.   v2:= 0  @length 4;
#L1b23d6.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.singleByte|]   @type object;
#L1b23da.   v0[v2]:= v4  @byte;
#L1b23de.   v0:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.singleByte|]   @type object;
#L1b23e2.   v1:= 1  @length 4;
#L1b23e4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineUpdate|](v3, v0, v2, v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineUpdate:([BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type virtual;
#L1b23ea.   return @void ;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineUpdate|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineUpdate:([BII)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b23fc.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.state|] ;
#L1b2400.   v2:= 2  @length 4;
#L1b2402.   if v1 != v2 then goto L1b2438;
#L1b2406.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b240a.   if v1 != 0 then goto L1b241e;
#L1b240e.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.evpAlgorithm|]   @type object;
#L1b2412.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignInit|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignInit:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b2418.   v1:= temp;
#L1b241a.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|]  := v1;
#L1b241e.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b2422.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_SignUpdate|](v1, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_SignUpdate:(I[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b2428.   return @void ;
#L1b242a.   v0:= Exception  @type object;
#L1b242c.   v1:= new [|java:lang:RuntimeException|];
#L1b2430.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1b2436.   throw v1;
#L1b2438.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b243c.   if v1 != 0 then goto L1b2450;
#L1b2440.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.evpAlgorithm|]   @type object;
#L1b2444.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyInit|](v1) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyInit:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b244a.   v1:= temp;
#L1b244c.   v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|]  := v1;
#L1b2450.   v1:= v3.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b2454.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyUpdate|](v1, v4, v5, v6) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyUpdate:(I[BII)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b245a.   goto L1b2428;
#L1b245c.   v0:= Exception  @type object;
#L1b245e.   v1:= new [|java:lang:RuntimeException|];
#L1b2462.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L1b2468.   throw v1;
  catch  [|java:lang:Exception|] @[L1b240e..L1b241e] goto L1b242a;
  catch  [|java:lang:Exception|] @[L1b2440..L1b2450] goto L1b245c;

   }
    procedure [|boolean|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.engineVerify|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v8 @type (this), [|byte|][] v9) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.engineVerify:([B)Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1b2498.   v2:= 1  @length 4;
#L1b249a.   v3:= 0  @length 4;
#L1b249c.   v4:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]   @type object;
#L1b24a0.   if v4 != 0 then goto L1b24b4;
#L1b24a4.   v2:= new [|java:security:SignatureException|];
#L1b24a8.   v3:= "Need DSA or RSA public key" @type (object, string);
#L1b24ac.   call temp:=  [|java:security:SignatureException.<init>|](v2, v3) @signature [|Ljava/security/SignatureException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:SignatureException|] @type direct;
#L1b24b2.   throw v2;
#L1b24b4.   v4:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b24b8.   v5:= 0  @length 4;
#L1b24ba.   v6:= v9.length;
#L1b24bc.   v7:= v8.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.key|]   @type object;
#L1b24c0.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey.getPkeyContext|](v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLKey;.getPkeyContext:()I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLKey|] @type virtual;
#L1b24c6.   v7:= temp;
#L1b24c8.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_VerifyFinal|](v4, v9, v5, v6, v7) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_VerifyFinal:(I[BIII)I|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b24ce.   v1:= temp;
#L1b24d0.   if v1 != v2 then goto L1b24dc;
#L1b24d4.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b24da.   return v2;
#L1b24dc.   v2:= v3;
#L1b24de.   goto L1b24d4;
#L1b24e0.   v0:= Exception  @type object;
#L1b24e2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b24e8.   v2:= v3;
#L1b24ea.   goto L1b24da;
#L1b24ec.   v2:= Exception  @type object;
#L1b24ee.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.destroyContextIfExists|](v8) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.destroyContextIfExists:()V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b24f4.   throw v2;
  catch  [|java:lang:Exception|] @[L1b24b4..L1b24ce] goto L1b24e0;
  catch  [|any|] @[L1b24b4..L1b24ce] goto L1b24ec;

   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.finalize|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] v1 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1b2518.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b251c.   if v0 == 0 then goto L1b252a;
#L1b2520.   v0:= v1.[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.ctx|] ;
#L1b2524.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:NativeCrypto.EVP_MD_CTX_destroy|](v0) @signature [|Lorg/apache/harmony/xnet/provider/jsse/NativeCrypto;.EVP_MD_CTX_destroy:(I)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:NativeCrypto|] @type static;
#L1b252a.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1b2530.   return @void ;
#L1b2532.   v0:= Exception  @type object;
#L1b2534.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L1b253a.   throw v0;
  catch  [|any|] @[L1b2518..L1b252a] goto L1b2532;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$MD5RSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$MD5RSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$MD5RSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$MD5RSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$MD5RSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b2558.   v0:= "RSA-MD5" @type (object, string);
#L1b255c.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b2560.   v2:= 0  @length 4;
#L1b2562.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b2568.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1DSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1DSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1DSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1DSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA1DSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b257c.   v0:= "DSA-SHA1" @type (object, string);
#L1b2580.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.DSA|]   @type object;
#L1b2584.   v2:= 0  @length 4;
#L1b2586.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b258c.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1ECDSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1ECDSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1ECDSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1ECDSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA1ECDSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b25a0.   v0:= "SHA1" @type (object, string);
#L1b25a4.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b25a8.   v2:= 0  @length 4;
#L1b25aa.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b25b0.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1RSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1RSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1RSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA1RSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA1RSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b25c4.   v0:= "RSA-SHA1" @type (object, string);
#L1b25c8.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b25cc.   v2:= 0  @length 4;
#L1b25ce.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b25d4.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256ECDSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256ECDSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256ECDSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256ECDSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA256ECDSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b25e8.   v0:= "SHA256" @type (object, string);
#L1b25ec.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b25f0.   v2:= 0  @length 4;
#L1b25f2.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b25f8.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256RSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256RSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256RSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA256RSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA256RSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b260c.   v0:= "RSA-SHA256" @type (object, string);
#L1b2610.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b2614.   v2:= 0  @length 4;
#L1b2616.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b261c.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384ECDSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384ECDSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384ECDSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384ECDSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA384ECDSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b2630.   v0:= "SHA384" @type (object, string);
#L1b2634.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.EC|]   @type object;
#L1b2638.   v2:= 0  @length 4;
#L1b263a.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b2640.   return @void ;

   }
record [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384RSA|]  @type class @AccessFlag PUBLIC_FINAL  extends [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] {
   }
    procedure [|void|] [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384RSA.<init>|] ([|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384RSA|] v3 @type (this)) @owner [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$SHA384RSA|] @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$SHA384RSA;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1b2654.   v0:= "RSA-SHA384" @type (object, string);
#L1b2658.   v1:= @@[|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature$EngineType.RSA|]   @type object;
#L1b265c.   v2:= 0  @length 4;
#L1b265e.   call temp:=  [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature;.<init>:(Ljava/lang/String;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$EngineType;Lorg/apache/harmony/xnet/provider/jsse/OpenSSLSignature$1;)V|] @classDescriptor [|org:apache:harmony:xnet:provider:jsse:OpenSSLSignature|] @type direct;
#L1b2664.   return @void ;

   }
