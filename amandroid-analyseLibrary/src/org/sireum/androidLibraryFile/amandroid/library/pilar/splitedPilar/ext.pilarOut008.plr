record [|org:apache:http:client:params:AuthPolicy|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:lang:String|] @@[|org:apache:http:client:params:AuthPolicy.BASIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:AuthPolicy.DIGEST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:AuthPolicy.NTLM|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:client:params:AuthPolicy.<init>|] ([|org:apache:http:client:params:AuthPolicy|] v0 @type (this)) @owner [|org:apache:http:client:params:AuthPolicy|] @signature [|Lorg/apache/http/client/params/AuthPolicy;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09bafc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09bb02.   return @void ;

   }
record [|org:apache:http:client:params:ClientParamBean|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:HttpAbstractParamBean|] {
   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.<init>|] ([|org:apache:http:client:params:ClientParamBean|] v0 @type (this), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09bb14.   call temp:=  [|org:apache:http:params:HttpAbstractParamBean.<init>|](v0, v1) @signature [|Lorg/apache/http/params/HttpAbstractParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:params:HttpAbstractParamBean|] @type direct;
#L09bb1a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setAllowCircularRedirects|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setAllowCircularRedirects:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bb2c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bb30.   v1:= "http.protocol.allow-circular-redirects" @type (object, string);
#L09bb34.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bb3a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setConnectionManagerFactory|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|org:apache:http:conn:ClientConnectionManagerFactory|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setConnectionManagerFactory:(Lorg/apache/http/conn/ClientConnectionManagerFactory;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bb4c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bb50.   v1:= "http.connection-manager.factory-object" @type (object, string);
#L09bb54.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bb5a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setConnectionManagerFactoryClassName|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setConnectionManagerFactoryClassName:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bb6c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bb70.   v1:= "http.connection-manager.factory-class-name" @type (object, string);
#L09bb74.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bb7a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setCookiePolicy|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setCookiePolicy:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bb8c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bb90.   v1:= "http.protocol.cookie-policy" @type (object, string);
#L09bb94.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bb9a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setDefaultHeaders|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|java:util:Collection|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setDefaultHeaders:(Ljava/util/Collection;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bbac.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bbb0.   v1:= "http.default-headers" @type (object, string);
#L09bbb4.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bbba.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setDefaultHost|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setDefaultHost:(Lorg/apache/http/HttpHost;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bbcc.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bbd0.   v1:= "http.default-host" @type (object, string);
#L09bbd4.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bbda.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setHandleAuthentication|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setHandleAuthentication:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bbec.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bbf0.   v1:= "http.protocol.handle-authentication" @type (object, string);
#L09bbf4.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bbfa.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setHandleRedirects|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setHandleRedirects:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bc0c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bc10.   v1:= "http.protocol.handle-redirects" @type (object, string);
#L09bc14.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bc1a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setMaxRedirects|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|int|] v3) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setMaxRedirects:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bc2c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bc30.   v1:= "http.protocol.max-redirects" @type (object, string);
#L09bc34.   call temp:=  [|org:apache:http:params:HttpParams.setIntParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bc3a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setRejectRelativeRedirect|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setRejectRelativeRedirect:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bc4c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bc50.   v1:= "http.protocol.reject-relative-redirect" @type (object, string);
#L09bc54.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bc5a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:ClientParamBean.setVirtualHost|] ([|org:apache:http:client:params:ClientParamBean|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object)) @owner [|org:apache:http:client:params:ClientParamBean|] @signature [|Lorg/apache/http/client/params/ClientParamBean;.setVirtualHost:(Lorg/apache/http/HttpHost;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bc6c.   v0:= v2.[|org:apache:http:client:params:ClientParamBean.params|]   @type object;
#L09bc70.   v1:= "http.virtual-host" @type (object, string);
#L09bc74.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bc7a.   return @void ;

   }
record [|org:apache:http:client:params:CookiePolicy|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:lang:String|] @@[|org:apache:http:client:params:CookiePolicy.BEST_MATCH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:CookiePolicy.BROWSER_COMPATIBILITY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:CookiePolicy.NETSCAPE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:CookiePolicy.RFC_2109|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:params:CookiePolicy.RFC_2965|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:client:params:CookiePolicy.<init>|] ([|org:apache:http:client:params:CookiePolicy|] v0 @type (this)) @owner [|org:apache:http:client:params:CookiePolicy|] @signature [|Lorg/apache/http/client/params/CookiePolicy;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09bc8c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09bc92.   return @void ;

   }
record [|org:apache:http:client:params:HttpClientParams|]  @type class @AccessFlag PUBLIC  {
   }
    procedure [|void|] [|org:apache:http:client:params:HttpClientParams.<init>|] ([|org:apache:http:client:params:HttpClientParams|] v0 @type (this)) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09bca4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09bcaa.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:client:params:HttpClientParams.getCookiePolicy|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.getCookiePolicy:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09bcbc.   if v3 != 0 then goto L09bcd0;
#L09bcc0.   v1:= new [|java:lang:IllegalArgumentException|];
#L09bcc4.   v2:= "HTTP parameters may not be null" @type (object, string);
#L09bcc8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bcce.   throw v1;
#L09bcd0.   v1:= "http.protocol.cookie-policy" @type (object, string);
#L09bcd4.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v1) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bcda.   v0:= temp  @type object;
#L09bcdc.   v0:= ([|java:lang:String|])v0;
#L09bce0.   if v0 != 0 then goto L09bce8;
#L09bce4.   v0:= "best-match" @type (object, string);
#L09bce8.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:client:params:HttpClientParams.isAuthenticating|] ([|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.isAuthenticating:(Lorg/apache/http/params/HttpParams;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09bcfc.   if v2 != 0 then goto L09bd10;
#L09bd00.   v0:= new [|java:lang:IllegalArgumentException|];
#L09bd04.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09bd08.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bd0e.   throw v0;
#L09bd10.   v0:= "http.protocol.handle-authentication" @type (object, string);
#L09bd14.   v1:= 1  @length 4;
#L09bd16.   call temp:=  [|org:apache:http:params:HttpParams.getBooleanParameter|](v2, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bd1c.   v0:= temp;
#L09bd1e.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:client:params:HttpClientParams.isRedirecting|] ([|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.isRedirecting:(Lorg/apache/http/params/HttpParams;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09bd30.   if v2 != 0 then goto L09bd44;
#L09bd34.   v0:= new [|java:lang:IllegalArgumentException|];
#L09bd38.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09bd3c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bd42.   throw v0;
#L09bd44.   v0:= "http.protocol.handle-redirects" @type (object, string);
#L09bd48.   v1:= 1  @length 4;
#L09bd4a.   call temp:=  [|org:apache:http:params:HttpParams.getBooleanParameter|](v2, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bd50.   v0:= temp;
#L09bd52.   return v0;

   }
    procedure [|void|] [|org:apache:http:client:params:HttpClientParams.setAuthenticating|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|boolean|] v3) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.setAuthenticating:(Lorg/apache/http/params/HttpParams;Z)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09bd64.   if v2 != 0 then goto L09bd78;
#L09bd68.   v0:= new [|java:lang:IllegalArgumentException|];
#L09bd6c.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09bd70.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bd76.   throw v0;
#L09bd78.   v0:= "http.protocol.handle-authentication" @type (object, string);
#L09bd7c.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bd82.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:HttpClientParams.setCookiePolicy|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.setCookiePolicy:(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09bd94.   if v2 != 0 then goto L09bda8;
#L09bd98.   v0:= new [|java:lang:IllegalArgumentException|];
#L09bd9c.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09bda0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bda6.   throw v0;
#L09bda8.   v0:= "http.protocol.cookie-policy" @type (object, string);
#L09bdac.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bdb2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:params:HttpClientParams.setRedirecting|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|boolean|] v3) @owner [|org:apache:http:client:params:HttpClientParams|] @signature [|Lorg/apache/http/client/params/HttpClientParams;.setRedirecting:(Lorg/apache/http/params/HttpParams;Z)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09bdc4.   if v2 != 0 then goto L09bdd8;
#L09bdc8.   v0:= new [|java:lang:IllegalArgumentException|];
#L09bdcc.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09bdd0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bdd6.   throw v0;
#L09bdd8.   v0:= "http.protocol.handle-redirects" @type (object, string);
#L09bddc.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09bde2.   return @void ;

   }
record [|org:apache:http:client:protocol:ClientContext|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.AUTHSCHEME_REGISTRY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.AUTH_SCHEME_PREF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.COOKIESPEC_REGISTRY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.COOKIE_ORIGIN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.COOKIE_SPEC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.COOKIE_STORE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.CREDS_PROVIDER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.PROXY_AUTH_STATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.TARGET_AUTH_STATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:protocol:ClientContext.USER_TOKEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
record [|org:apache:http:client:protocol:ClientContextConfigurer|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:protocol:ClientContext|] {
      [|org:apache:http:protocol:HttpContext|] [|org:apache:http:client:protocol:ClientContextConfigurer.context|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.<init>|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|org:apache:http:protocol:HttpContext|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.<init>:(Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09bdf4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09bdfa.   if v3 != 0 then goto L09be0e;
#L09bdfe.   v0:= new [|java:lang:IllegalArgumentException|];
#L09be02.   v1:= "HTTP context may not be null" @type (object, string);
#L09be06.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09be0c.   throw v0;
#L09be0e.   v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]  := v3 @type object;
#L09be12.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.setAuthSchemePref|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|java:util:List|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.setAuthSchemePref:(Ljava/util/List;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09be24.   v0:= v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]   @type object;
#L09be28.   v1:= "http.auth.scheme-pref" @type (object, string);
#L09be2c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09be32.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.setAuthSchemeRegistry|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|org:apache:http:auth:AuthSchemeRegistry|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.setAuthSchemeRegistry:(Lorg/apache/http/auth/AuthSchemeRegistry;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09be44.   v0:= v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]   @type object;
#L09be48.   v1:= "http.authscheme-registry" @type (object, string);
#L09be4c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09be52.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.setCookieSpecRegistry|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|org:apache:http:cookie:CookieSpecRegistry|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.setCookieSpecRegistry:(Lorg/apache/http/cookie/CookieSpecRegistry;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09be64.   v0:= v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]   @type object;
#L09be68.   v1:= "http.cookiespec-registry" @type (object, string);
#L09be6c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09be72.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.setCookieStore|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|org:apache:http:client:CookieStore|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.setCookieStore:(Lorg/apache/http/client/CookieStore;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09be84.   v0:= v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]   @type object;
#L09be88.   v1:= "http.cookie-store" @type (object, string);
#L09be8c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09be92.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ClientContextConfigurer.setCredentialsProvider|] ([|org:apache:http:client:protocol:ClientContextConfigurer|] v2 @type (this), [|org:apache:http:client:CredentialsProvider|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ClientContextConfigurer|] @signature [|Lorg/apache/http/client/protocol/ClientContextConfigurer;.setCredentialsProvider:(Lorg/apache/http/client/CredentialsProvider;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09bea4.   v0:= v2.[|org:apache:http:client:protocol:ClientContextConfigurer.context|]   @type object;
#L09bea8.   v1:= "http.auth.credentials-provider" @type (object, string);
#L09beac.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09beb2.   return @void ;

   }
record [|org:apache:http:client:protocol:RequestAddCookies|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpRequestInterceptor|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:client:protocol:RequestAddCookies.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestAddCookies.<init>|] ([|org:apache:http:client:protocol:RequestAddCookies|] v1 @type (this)) @owner [|org:apache:http:client:protocol:RequestAddCookies|] @signature [|Lorg/apache/http/client/protocol/RequestAddCookies;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09bec4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09beca.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09bed0.   v0:= temp  @type object;
#L09bed2.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L09bed8.   v0:= temp  @type object;
#L09beda.   v1.[|org:apache:http:client:protocol:RequestAddCookies.log|]  := v0 @type object;
#L09bede.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestAddCookies.process|] ([|org:apache:http:client:protocol:RequestAddCookies|] v25 @type (this), [|org:apache:http:HttpRequest|] v26 @type (object), [|org:apache:http:protocol:HttpContext|] v27 @type (object)) @owner [|org:apache:http:client:protocol:RequestAddCookies|] @signature [|Lorg/apache/http/client/protocol/RequestAddCookies;.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
      
#L09bef0.   if v26 != 0 then goto L09bf04;
#L09bef4.   v22:= new [|java:lang:IllegalArgumentException|];
#L09bef8.   v23:= "HTTP request may not be null" @type (object, string);
#L09befc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bf02.   throw v22;
#L09bf04.   if v27 != 0 then goto L09bf18;
#L09bf08.   v22:= new [|java:lang:IllegalArgumentException|];
#L09bf0c.   v23:= "HTTP context may not be null" @type (object, string);
#L09bf10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09bf16.   throw v22;
#L09bf18.   v22:= "http.cookie-store" @type (object, string);
#L09bf1c.   v0:= v27  @type object;
#L09bf20.   v1:= v22  @type object;
#L09bf24.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v1) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09bf2a.   v7:= temp  @type object;
#L09bf2c.   v7:= ([|org:apache:http:client:CookieStore|])v7;
#L09bf30.   if v7 != 0 then goto L09bf4c;
#L09bf34.   v0:= v25  @type object;
#L09bf38.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09bf3c.   v22:= v0  @type object;
#L09bf40.   v23:= "Cookie store not available in HTTP context" @type (object, string);
#L09bf44.   call temp:=  [|org:apache:commons:logging:Log.info|](v22, v23) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09bf4a.   return @void ;
#L09bf4c.   v22:= "http.cookiespec-registry" @type (object, string);
#L09bf50.   v0:= v27  @type object;
#L09bf54.   v1:= v22  @type object;
#L09bf58.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v1) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09bf5e.   v18:= temp  @type object;
#L09bf60.   v18:= ([|org:apache:http:cookie:CookieSpecRegistry|])v18;
#L09bf64.   if v18 != 0 then goto L09bf80;
#L09bf68.   v0:= v25  @type object;
#L09bf6c.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09bf70.   v22:= v0  @type object;
#L09bf74.   v23:= "CookieSpec registry not available in HTTP context" @type (object, string);
#L09bf78.   call temp:=  [|org:apache:commons:logging:Log.info|](v22, v23) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09bf7e.   goto L09bf4a;
#L09bf80.   v22:= "http.target_host" @type (object, string);
#L09bf84.   v0:= v27  @type object;
#L09bf88.   v1:= v22  @type object;
#L09bf8c.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v1) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09bf92.   v20:= temp  @type object;
#L09bf94.   v20:= ([|org:apache:http:HttpHost|])v20;
#L09bf98.   if v20 != 0 then goto L09bfac;
#L09bf9c.   v22:= new [|java:lang:IllegalStateException|];
#L09bfa0.   v23:= "Target host not specified in HTTP context" @type (object, string);
#L09bfa4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09bfaa.   throw v22;
#L09bfac.   v22:= "http.connection" @type (object, string);
#L09bfb0.   v0:= v27  @type object;
#L09bfb4.   v1:= v22  @type object;
#L09bfb8.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v1) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09bfbe.   v3:= temp  @type object;
#L09bfc0.   v3:= ([|org:apache:http:conn:ManagedClientConnection|])v3;
#L09bfc4.   if v3 != 0 then goto L09bfd8;
#L09bfc8.   v22:= new [|java:lang:IllegalStateException|];
#L09bfcc.   v23:= "Client connection not specified in HTTP context" @type (object, string);
#L09bfd0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09bfd6.   throw v22;
#L09bfd8.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v26) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09bfde.   v22:= temp  @type object;
#L09bfe0.   call temp:=  [|org:apache:http:client:params:HttpClientParams.getCookiePolicy|](v22) @signature [|Lorg/apache/http/client/params/HttpClientParams;.getCookiePolicy:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:params:HttpClientParams|] @type static;
#L09bfe6.   v16:= temp  @type object;
#L09bfe8.   v0:= v25  @type object;
#L09bfec.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09bff0.   v22:= v0  @type object;
#L09bff4.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v22) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09bffa.   v22:= temp;
#L09bffc.   if v22 == 0 then goto L09c040;
#L09c000.   v0:= v25  @type object;
#L09c004.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09c008.   v22:= v0  @type object;
#L09c00c.   v23:= new [|java:lang:StringBuilder|];
#L09c010.   call temp:=  [|java:lang:StringBuilder.<init>|](v23) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c016.   v24:= "CookieSpec selected: " @type (object, string);
#L09c01a.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c020.   v23:= temp  @type object;
#L09c022.   v0:= v23  @type object;
#L09c026.   v1:= v16  @type object;
#L09c02a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c030.   v23:= temp  @type object;
#L09c032.   call temp:=  [|java:lang:StringBuilder.toString|](v23) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c038.   v23:= temp  @type object;
#L09c03a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v22, v23) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c040.   v0:= v26  @type object;
#L09c044.   v0:= instanceof @varname v0 @type [|org:apache:http:client:methods:HttpUriRequest|];
#L09c048.   v22:= v0;
#L09c04c.   if v22 == 0 then goto L09c17e;
#L09c050.   v22:= v26  @type object;
#L09c054.   v22:= ([|org:apache:http:client:methods:HttpUriRequest|])v22;
#L09c058.   call temp:=  [|org:apache:http:client:methods:HttpUriRequest.getURI|](v22) @signature [|Lorg/apache/http/client/methods/HttpUriRequest;.getURI:()Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:methods:HttpUriRequest|] @type interface;
#L09c05e.   v19:= temp  @type object;
#L09c060.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v20) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09c066.   v12:= temp  @type object;
#L09c068.   call temp:=  [|org:apache:http:HttpHost.getPort|](v20) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09c06e.   v17:= temp;
#L09c070.   if v17 >= 0 then goto L09c07c;
#L09c074.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.getRemotePort|](v3) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getRemotePort:()I|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09c07a.   v17:= temp;
#L09c07c.   v5:= new [|org:apache:http:cookie:CookieOrigin|];
#L09c080.   call temp:=  [|java:net:URI.getPath|](v19) @signature [|Ljava/net/URI;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09c086.   v22:= temp  @type object;
#L09c088.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.isSecure|](v3) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09c08e.   v23:= temp;
#L09c090.   v0:= v17;
#L09c094.   v1:= v22  @type object;
#L09c098.   v2:= v23;
#L09c09c.   call temp:=  [|org:apache:http:cookie:CookieOrigin.<init>|](v5, v12, v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieOrigin;.<init>:(Ljava/lang/String;ILjava/lang/String;Z)V|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type direct;
#L09c0a2.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v26) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c0a8.   v22:= temp  @type object;
#L09c0aa.   v0:= v18  @type object;
#L09c0ae.   v1:= v16  @type object;
#L09c0b2.   v2:= v22  @type object;
#L09c0b6.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.getCookieSpec|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.getCookieSpec:(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L09c0bc.   v6:= temp  @type object;
#L09c0be.   v8:= new [|java:util:ArrayList|];
#L09c0c2.   call temp:=  [|org:apache:http:client:CookieStore.getCookies|](v7) @signature [|Lorg/apache/http/client/CookieStore;.getCookies:()Ljava/util/List;|] @classDescriptor [|org:apache:http:client:CookieStore|] @type interface;
#L09c0c8.   v22:= temp  @type object;
#L09c0ca.   v0:= v22  @type object;
#L09c0ce.   call temp:=  [|java:util:ArrayList.<init>|](v8, v0) @signature [|Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09c0d4.   v14:= new [|java:util:ArrayList|];
#L09c0d8.   call temp:=  [|java:util:ArrayList.<init>|](v14) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09c0de.   call temp:=  [|java:util:List.iterator|](v8) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09c0e4.   v13:= temp  @type object;
#L09c0e6.   call temp:=  [|java:util:Iterator.hasNext|](v13) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c0ec.   v22:= temp;
#L09c0ee.   if v22 == 0 then goto L09c1f0;
#L09c0f2.   call temp:=  [|java:util:Iterator.next|](v13) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c0f8.   v4:= temp  @type object;
#L09c0fa.   v4:= ([|org:apache:http:cookie:Cookie|])v4;
#L09c0fe.   call temp:=  [|org:apache:http:cookie:CookieSpec.match|](v6, v4, v5) @signature [|Lorg/apache/http/cookie/CookieSpec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c104.   v22:= temp;
#L09c106.   if v22 == 0 then goto L09c0e6;
#L09c10a.   v0:= v25  @type object;
#L09c10e.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09c112.   v22:= v0  @type object;
#L09c116.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v22) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c11c.   v22:= temp;
#L09c11e.   if v22 == 0 then goto L09c176;
#L09c122.   v0:= v25  @type object;
#L09c126.   v0:= v0.[|org:apache:http:client:protocol:RequestAddCookies.log|]   @type object;
#L09c12a.   v22:= v0  @type object;
#L09c12e.   v23:= new [|java:lang:StringBuilder|];
#L09c132.   call temp:=  [|java:lang:StringBuilder.<init>|](v23) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c138.   v24:= "Cookie " @type (object, string);
#L09c13c.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c142.   v23:= temp  @type object;
#L09c144.   v0:= v23  @type object;
#L09c148.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c14e.   v23:= temp  @type object;
#L09c150.   v24:= " match " @type (object, string);
#L09c154.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c15a.   v23:= temp  @type object;
#L09c15c.   v0:= v23  @type object;
#L09c160.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c166.   v23:= temp  @type object;
#L09c168.   call temp:=  [|java:lang:StringBuilder.toString|](v23) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c16e.   v23:= temp  @type object;
#L09c170.   call temp:=  [|org:apache:commons:logging:Log.debug|](v22, v23) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c176.   call temp:=  [|java:util:List.add|](v14, v4) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L09c17c.   goto L09c0e6;
#L09c17e.   v19:= new [|java:net:URI|];
#L09c182.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v26) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c188.   v22:= temp  @type object;
#L09c18a.   call temp:=  [|org:apache:http:RequestLine.getUri|](v22) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L09c190.   v22:= temp  @type object;
#L09c192.   v0:= v19  @type object;
#L09c196.   v1:= v22  @type object;
#L09c19a.   call temp:=  [|java:net:URI.<init>|](v0, v1) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L09c1a0.   goto L09c060;
#L09c1a4.   v9:= Exception  @type object;
#L09c1a6.   v22:= new [|org:apache:http:ProtocolException|];
#L09c1aa.   v23:= new [|java:lang:StringBuilder|];
#L09c1ae.   call temp:=  [|java:lang:StringBuilder.<init>|](v23) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c1b4.   v24:= "Invalid request URI: " @type (object, string);
#L09c1b8.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c1be.   v23:= temp  @type object;
#L09c1c0.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v26) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c1c6.   v24:= temp  @type object;
#L09c1c8.   call temp:=  [|org:apache:http:RequestLine.getUri|](v24) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L09c1ce.   v24:= temp  @type object;
#L09c1d0.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c1d6.   v23:= temp  @type object;
#L09c1d8.   call temp:=  [|java:lang:StringBuilder.toString|](v23) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c1de.   v23:= temp  @type object;
#L09c1e0.   v0:= v22  @type object;
#L09c1e4.   v1:= v23  @type object;
#L09c1e8.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v0, v1, v9) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L09c1ee.   throw v22;
#L09c1f0.   call temp:=  [|java:util:List.isEmpty|](v14) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L09c1f6.   v22:= temp;
#L09c1f8.   if v22 != 0 then goto L09c230;
#L09c1fc.   call temp:=  [|org:apache:http:cookie:CookieSpec.formatCookies|](v6, v14) @signature [|Lorg/apache/http/cookie/CookieSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c202.   v11:= temp  @type object;
#L09c204.   call temp:=  [|java:util:List.iterator|](v11) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09c20a.   v13:= temp  @type object;
#L09c20c.   call temp:=  [|java:util:Iterator.hasNext|](v13) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c212.   v22:= temp;
#L09c214.   if v22 == 0 then goto L09c230;
#L09c218.   call temp:=  [|java:util:Iterator.next|](v13) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c21e.   v10:= temp  @type object;
#L09c220.   v10:= ([|org:apache:http:Header|])v10;
#L09c224.   v0:= v26  @type object;
#L09c228.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v0, v10) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c22e.   goto L09c20c;
#L09c230.   call temp:=  [|org:apache:http:cookie:CookieSpec.getVersion|](v6) @signature [|Lorg/apache/http/cookie/CookieSpec;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c236.   v21:= temp;
#L09c238.   if v21 <= 0 then goto L09c290;
#L09c23c.   v15:= 0  @length 4;
#L09c23e.   call temp:=  [|java:util:List.iterator|](v14) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09c244.   v13:= temp  @type object;
#L09c246.   call temp:=  [|java:util:Iterator.hasNext|](v13) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c24c.   v22:= temp;
#L09c24e.   if v22 == 0 then goto L09c276;
#L09c252.   call temp:=  [|java:util:Iterator.next|](v13) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c258.   v4:= temp  @type object;
#L09c25a.   v4:= ([|org:apache:http:cookie:Cookie|])v4;
#L09c25e.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c264.   v22:= temp;
#L09c266.   v0:= v21;
#L09c26a.   v1:= v22;
#L09c26e.   if v0 == v1 then goto L09c246;
#L09c272.   v15:= 1  @length 4;
#L09c274.   goto L09c246;
#L09c276.   if v15 == 0 then goto L09c290;
#L09c27a.   call temp:=  [|org:apache:http:cookie:CookieSpec.getVersionHeader|](v6) @signature [|Lorg/apache/http/cookie/CookieSpec;.getVersionHeader:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c280.   v10:= temp  @type object;
#L09c282.   if v10 == 0 then goto L09c290;
#L09c286.   v0:= v26  @type object;
#L09c28a.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v0, v10) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c290.   v22:= "http.cookie-spec" @type (object, string);
#L09c294.   v0:= v27  @type object;
#L09c298.   v1:= v22  @type object;
#L09c29c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v6) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c2a2.   v22:= "http.cookie-origin" @type (object, string);
#L09c2a6.   v0:= v27  @type object;
#L09c2aa.   v1:= v22  @type object;
#L09c2ae.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v5) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c2b4.   goto L09bf4a;
  catch  [|java:net:URISyntaxException|] @[L09c17e..L09c1a0] goto L09c1a4;

   }
record [|org:apache:http:client:protocol:RequestDefaultHeaders|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpRequestInterceptor|] {
   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestDefaultHeaders.<init>|] ([|org:apache:http:client:protocol:RequestDefaultHeaders|] v0 @type (this)) @owner [|org:apache:http:client:protocol:RequestDefaultHeaders|] @signature [|Lorg/apache/http/client/protocol/RequestDefaultHeaders;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09c2d8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09c2de.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestDefaultHeaders.process|] ([|org:apache:http:client:protocol:RequestDefaultHeaders|] v5 @type (this), [|org:apache:http:HttpRequest|] v6 @type (object), [|org:apache:http:protocol:HttpContext|] v7 @type (object)) @owner [|org:apache:http:client:protocol:RequestDefaultHeaders|] @signature [|Lorg/apache/http/client/protocol/RequestDefaultHeaders;.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09c2f0.   if v6 != 0 then goto L09c304;
#L09c2f4.   v3:= new [|java:lang:IllegalArgumentException|];
#L09c2f8.   v4:= "HTTP request may not be null" @type (object, string);
#L09c2fc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c302.   throw v3;
#L09c304.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v6) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c30a.   v3:= temp  @type object;
#L09c30c.   v4:= "http.default-headers" @type (object, string);
#L09c310.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v4) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09c316.   v1:= temp  @type object;
#L09c318.   v1:= ([|java:util:Collection|])v1;
#L09c31c.   if v1 == 0 then goto L09c348;
#L09c320.   call temp:=  [|java:util:Collection.iterator|](v1) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L09c326.   v2:= temp  @type object;
#L09c328.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c32e.   v3:= temp;
#L09c330.   if v3 == 0 then goto L09c348;
#L09c334.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c33a.   v0:= temp  @type object;
#L09c33c.   v0:= ([|org:apache:http:Header|])v0;
#L09c340.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v6, v0) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c346.   goto L09c328;
#L09c348.   return @void ;

   }
record [|org:apache:http:client:protocol:RequestProxyAuthentication|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpRequestInterceptor|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:client:protocol:RequestProxyAuthentication.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestProxyAuthentication.<init>|] ([|org:apache:http:client:protocol:RequestProxyAuthentication|] v1 @type (this)) @owner [|org:apache:http:client:protocol:RequestProxyAuthentication|] @signature [|Lorg/apache/http/client/protocol/RequestProxyAuthentication;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09c35c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09c362.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09c368.   v0:= temp  @type object;
#L09c36a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L09c370.   v0:= temp  @type object;
#L09c372.   v1.[|org:apache:http:client:protocol:RequestProxyAuthentication.log|]  := v0 @type object;
#L09c376.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestProxyAuthentication.process|] ([|org:apache:http:client:protocol:RequestProxyAuthentication|] v7 @type (this), [|org:apache:http:HttpRequest|] v8 @type (object), [|org:apache:http:protocol:HttpContext|] v9 @type (object)) @owner [|org:apache:http:client:protocol:RequestProxyAuthentication|] @signature [|Lorg/apache/http/client/protocol/RequestProxyAuthentication;.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09c388.   if v8 != 0 then goto L09c39c;
#L09c38c.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c390.   v5:= "HTTP request may not be null" @type (object, string);
#L09c394.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c39a.   throw v4;
#L09c39c.   if v9 != 0 then goto L09c3b0;
#L09c3a0.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c3a4.   v5:= "HTTP context may not be null" @type (object, string);
#L09c3a8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c3ae.   throw v4;
#L09c3b0.   v4:= "Proxy-Authorization" @type (object, string);
#L09c3b4.   call temp:=  [|org:apache:http:HttpRequest.containsHeader|](v8, v4) @signature [|Lorg/apache/http/HttpRequest;.containsHeader:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c3ba.   v4:= temp;
#L09c3bc.   if v4 == 0 then goto L09c3c2;
#L09c3c0.   return @void ;
#L09c3c2.   v4:= "http.auth.proxy-scope" @type (object, string);
#L09c3c6.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v9, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c3cc.   v1:= temp  @type object;
#L09c3ce.   v1:= ([|org:apache:http:auth:AuthState|])v1;
#L09c3d2.   if v1 == 0 then goto L09c3c0;
#L09c3d6.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c3dc.   v0:= temp  @type object;
#L09c3de.   if v0 == 0 then goto L09c3c0;
#L09c3e2.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c3e8.   v2:= temp  @type object;
#L09c3ea.   if v2 != 0 then goto L09c3fe;
#L09c3ee.   v4:= v7.[|org:apache:http:client:protocol:RequestProxyAuthentication.log|]   @type object;
#L09c3f2.   v5:= "User credentials not available" @type (object, string);
#L09c3f6.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c3fc.   goto L09c3c0;
#L09c3fe.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScope|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScope:()Lorg/apache/http/auth/AuthScope;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c404.   v4:= temp  @type object;
#L09c406.   if v4 != 0 then goto L09c416;
#L09c40a.   call temp:=  [|org:apache:http:auth:AuthScheme.isConnectionBased|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.isConnectionBased:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L09c410.   v4:= temp;
#L09c412.   if v4 != 0 then goto L09c3c0;
#L09c416.   call temp:=  [|org:apache:http:auth:AuthScheme.authenticate|](v0, v2, v8) @signature [|Lorg/apache/http/auth/AuthScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L09c41c.   v4:= temp  @type object;
#L09c41e.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v8, v4) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c424.   goto L09c3c0;
#L09c426.   v3:= Exception  @type object;
#L09c428.   v4:= v7.[|org:apache:http:client:protocol:RequestProxyAuthentication.log|]   @type object;
#L09c42c.   call temp:=  [|org:apache:commons:logging:Log.isErrorEnabled|](v4) @signature [|Lorg/apache/commons/logging/Log;.isErrorEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c432.   v4:= temp;
#L09c434.   if v4 == 0 then goto L09c3c0;
#L09c438.   v4:= v7.[|org:apache:http:client:protocol:RequestProxyAuthentication.log|]   @type object;
#L09c43c.   v5:= new [|java:lang:StringBuilder|];
#L09c440.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c446.   v6:= "Proxy authentication error: " @type (object, string);
#L09c44a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c450.   v5:= temp  @type object;
#L09c452.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v3) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L09c458.   v6:= temp  @type object;
#L09c45a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c460.   v5:= temp  @type object;
#L09c462.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c468.   v5:= temp  @type object;
#L09c46a.   call temp:=  [|org:apache:commons:logging:Log.error|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.error:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c470.   goto L09c3c0;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L09c416..L09c424] goto L09c426;

   }
record [|org:apache:http:client:protocol:RequestTargetAuthentication|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpRequestInterceptor|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:client:protocol:RequestTargetAuthentication.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestTargetAuthentication.<init>|] ([|org:apache:http:client:protocol:RequestTargetAuthentication|] v1 @type (this)) @owner [|org:apache:http:client:protocol:RequestTargetAuthentication|] @signature [|Lorg/apache/http/client/protocol/RequestTargetAuthentication;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09c494.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09c49a.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09c4a0.   v0:= temp  @type object;
#L09c4a2.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L09c4a8.   v0:= temp  @type object;
#L09c4aa.   v1.[|org:apache:http:client:protocol:RequestTargetAuthentication.log|]  := v0 @type object;
#L09c4ae.   return @void ;

   }
    procedure [|void|] [|org:apache:http:client:protocol:RequestTargetAuthentication.process|] ([|org:apache:http:client:protocol:RequestTargetAuthentication|] v7 @type (this), [|org:apache:http:HttpRequest|] v8 @type (object), [|org:apache:http:protocol:HttpContext|] v9 @type (object)) @owner [|org:apache:http:client:protocol:RequestTargetAuthentication|] @signature [|Lorg/apache/http/client/protocol/RequestTargetAuthentication;.process:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09c4c0.   if v8 != 0 then goto L09c4d4;
#L09c4c4.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c4c8.   v5:= "HTTP request may not be null" @type (object, string);
#L09c4cc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c4d2.   throw v4;
#L09c4d4.   if v9 != 0 then goto L09c4e8;
#L09c4d8.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c4dc.   v5:= "HTTP context may not be null" @type (object, string);
#L09c4e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c4e6.   throw v4;
#L09c4e8.   v4:= "Authorization" @type (object, string);
#L09c4ec.   call temp:=  [|org:apache:http:HttpRequest.containsHeader|](v8, v4) @signature [|Lorg/apache/http/HttpRequest;.containsHeader:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c4f2.   v4:= temp;
#L09c4f4.   if v4 == 0 then goto L09c4fa;
#L09c4f8.   return @void ;
#L09c4fa.   v4:= "http.auth.target-scope" @type (object, string);
#L09c4fe.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v9, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c504.   v1:= temp  @type object;
#L09c506.   v1:= ([|org:apache:http:auth:AuthState|])v1;
#L09c50a.   if v1 == 0 then goto L09c4f8;
#L09c50e.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c514.   v0:= temp  @type object;
#L09c516.   if v0 == 0 then goto L09c4f8;
#L09c51a.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c520.   v2:= temp  @type object;
#L09c522.   if v2 != 0 then goto L09c536;
#L09c526.   v4:= v7.[|org:apache:http:client:protocol:RequestTargetAuthentication.log|]   @type object;
#L09c52a.   v5:= "User credentials not available" @type (object, string);
#L09c52e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c534.   goto L09c4f8;
#L09c536.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScope|](v1) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScope:()Lorg/apache/http/auth/AuthScope;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L09c53c.   v4:= temp  @type object;
#L09c53e.   if v4 != 0 then goto L09c54e;
#L09c542.   call temp:=  [|org:apache:http:auth:AuthScheme.isConnectionBased|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.isConnectionBased:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L09c548.   v4:= temp;
#L09c54a.   if v4 != 0 then goto L09c4f8;
#L09c54e.   call temp:=  [|org:apache:http:auth:AuthScheme.authenticate|](v0, v2, v8) @signature [|Lorg/apache/http/auth/AuthScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L09c554.   v4:= temp  @type object;
#L09c556.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v8, v4) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L09c55c.   goto L09c4f8;
#L09c55e.   v3:= Exception  @type object;
#L09c560.   v4:= v7.[|org:apache:http:client:protocol:RequestTargetAuthentication.log|]   @type object;
#L09c564.   call temp:=  [|org:apache:commons:logging:Log.isErrorEnabled|](v4) @signature [|Lorg/apache/commons/logging/Log;.isErrorEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c56a.   v4:= temp;
#L09c56c.   if v4 == 0 then goto L09c4f8;
#L09c570.   v4:= v7.[|org:apache:http:client:protocol:RequestTargetAuthentication.log|]   @type object;
#L09c574.   v5:= new [|java:lang:StringBuilder|];
#L09c578.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c57e.   v6:= "Authentication error: " @type (object, string);
#L09c582.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c588.   v5:= temp  @type object;
#L09c58a.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v3) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L09c590.   v6:= temp  @type object;
#L09c592.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c598.   v5:= temp  @type object;
#L09c59a.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c5a0.   v5:= temp  @type object;
#L09c5a2.   call temp:=  [|org:apache:commons:logging:Log.error|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.error:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c5a8.   goto L09c4f8;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L09c54e..L09c55c] goto L09c55e;

   }
record [|org:apache:http:client:protocol:ResponseProcessCookies|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpResponseInterceptor|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:client:protocol:ResponseProcessCookies.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:client:protocol:ResponseProcessCookies.<init>|] ([|org:apache:http:client:protocol:ResponseProcessCookies|] v1 @type (this)) @owner [|org:apache:http:client:protocol:ResponseProcessCookies|] @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09c5cc.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09c5d2.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09c5d8.   v0:= temp  @type object;
#L09c5da.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L09c5e0.   v0:= temp  @type object;
#L09c5e2.   v1.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]  := v0 @type object;
#L09c5e6.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:client:protocol:ResponseProcessCookies.cookieToString|] ([|org:apache:http:client:protocol:ResponseProcessCookies|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object)) @owner [|org:apache:http:client:protocol:ResponseProcessCookies|] @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.cookieToString:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09c5f8.   v0:= new [|java:lang:StringBuilder|];
#L09c5fc.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c602.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09c608.   v1:= temp  @type object;
#L09c60a.   call temp:=  [|java:lang:Class.getSimpleName|](v1) @signature [|Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09c610.   v1:= temp  @type object;
#L09c612.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c618.   v0:= temp  @type object;
#L09c61a.   v1:= "[version=" @type (object, string);
#L09c61e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c624.   v0:= temp  @type object;
#L09c626.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c62c.   v1:= temp;
#L09c62e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c634.   v0:= temp  @type object;
#L09c636.   v1:= ",name=" @type (object, string);
#L09c63a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c640.   v0:= temp  @type object;
#L09c642.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c648.   v1:= temp  @type object;
#L09c64a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c650.   v0:= temp  @type object;
#L09c652.   v1:= ",domain=" @type (object, string);
#L09c656.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c65c.   v0:= temp  @type object;
#L09c65e.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c664.   v1:= temp  @type object;
#L09c666.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c66c.   v0:= temp  @type object;
#L09c66e.   v1:= ",path=" @type (object, string);
#L09c672.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c678.   v0:= temp  @type object;
#L09c67a.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c680.   v1:= temp  @type object;
#L09c682.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c688.   v0:= temp  @type object;
#L09c68a.   v1:= ",expiry=" @type (object, string);
#L09c68e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c694.   v0:= temp  @type object;
#L09c696.   call temp:=  [|org:apache:http:cookie:Cookie.getExpiryDate|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getExpiryDate:()Ljava/util/Date;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L09c69c.   v1:= temp  @type object;
#L09c69e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c6a4.   v0:= temp  @type object;
#L09c6a6.   v1:= "]" @type (object, string);
#L09c6aa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c6b0.   v0:= temp  @type object;
#L09c6b2.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c6b8.   v0:= temp  @type object;
#L09c6ba.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ResponseProcessCookies.processCookies|] ([|org:apache:http:client:protocol:ResponseProcessCookies|] v8 @type (this), [|org:apache:http:HeaderIterator|] v9 @type (object), [|org:apache:http:cookie:CookieSpec|] v10 @type (object), [|org:apache:http:cookie:CookieOrigin|] v11 @type (object), [|org:apache:http:client:CookieStore|] v12 @type (object)) @owner [|org:apache:http:client:protocol:ResponseProcessCookies|] @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.processCookies:(Lorg/apache/http/HeaderIterator;Lorg/apache/http/cookie/CookieSpec;Lorg/apache/http/cookie/CookieOrigin;Lorg/apache/http/client/CookieStore;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L09c6cc.   call temp:=  [|org:apache:http:HeaderIterator.hasNext|](v9) @signature [|Lorg/apache/http/HeaderIterator;.hasNext:()Z|] @classDescriptor [|org:apache:http:HeaderIterator|] @type interface;
#L09c6d2.   v5:= temp;
#L09c6d4.   if v5 == 0 then goto L09c834;
#L09c6d8.   call temp:=  [|org:apache:http:HeaderIterator.nextHeader|](v9) @signature [|Lorg/apache/http/HeaderIterator;.nextHeader:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HeaderIterator|] @type interface;
#L09c6de.   v3:= temp  @type object;
#L09c6e0.   call temp:=  [|org:apache:http:cookie:CookieSpec.parse|](v10, v3, v11) @signature [|Lorg/apache/http/cookie/CookieSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c6e6.   v1:= temp  @type object;
#L09c6e8.   call temp:=  [|java:util:List.iterator|](v1) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09c6ee.   v4:= temp  @type object;
#L09c6f0.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c6f6.   v5:= temp;
#L09c6f8.   if v5 == 0 then goto L09c6cc;
#L09c6fc.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09c702.   v0:= temp  @type object;
#L09c704.   v0:= ([|org:apache:http:cookie:Cookie|])v0;
#L09c708.   call temp:=  [|org:apache:http:cookie:CookieSpec.validate|](v10, v0, v11) @signature [|Lorg/apache/http/cookie/CookieSpec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c70e.   call temp:=  [|org:apache:http:client:CookieStore.addCookie|](v12, v0) @signature [|Lorg/apache/http/client/CookieStore;.addCookie:(Lorg/apache/http/cookie/Cookie;)V|] @classDescriptor [|org:apache:http:client:CookieStore|] @type interface;
#L09c714.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c718.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v5) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c71e.   v5:= temp;
#L09c720.   if v5 == 0 then goto L09c6f0;
#L09c724.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c728.   v6:= new [|java:lang:StringBuilder|];
#L09c72c.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c732.   v7:= "Cookie accepted: \"" @type (object, string);
#L09c736.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c73c.   v6:= temp  @type object;
#L09c73e.   call temp:=  [|org:apache:http:client:protocol:ResponseProcessCookies.cookieToString|](v8, v0) @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.cookieToString:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:protocol:ResponseProcessCookies|] @type direct;
#L09c744.   v7:= temp  @type object;
#L09c746.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c74c.   v6:= temp  @type object;
#L09c74e.   v7:= "\". " @type (object, string);
#L09c752.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c758.   v6:= temp  @type object;
#L09c75a.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c760.   v6:= temp  @type object;
#L09c762.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c768.   goto L09c6f0;
#L09c76a.   v2:= Exception  @type object;
#L09c76c.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c770.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v5) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c776.   v5:= temp;
#L09c778.   if v5 == 0 then goto L09c6f0;
#L09c77c.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c780.   v6:= new [|java:lang:StringBuilder|];
#L09c784.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c78a.   v7:= "Cookie rejected: \"" @type (object, string);
#L09c78e.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c794.   v6:= temp  @type object;
#L09c796.   call temp:=  [|org:apache:http:client:protocol:ResponseProcessCookies.cookieToString|](v8, v0) @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.cookieToString:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:protocol:ResponseProcessCookies|] @type direct;
#L09c79c.   v7:= temp  @type object;
#L09c79e.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c7a4.   v6:= temp  @type object;
#L09c7a6.   v7:= "\". " @type (object, string);
#L09c7aa.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c7b0.   v6:= temp  @type object;
#L09c7b2.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.getMessage|](v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type virtual;
#L09c7b8.   v7:= temp  @type object;
#L09c7ba.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c7c0.   v6:= temp  @type object;
#L09c7c2.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c7c8.   v6:= temp  @type object;
#L09c7ca.   call temp:=  [|org:apache:commons:logging:Log.warn|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c7d0.   goto L09c6f0;
#L09c7d2.   v2:= Exception  @type object;
#L09c7d4.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c7d8.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v5) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c7de.   v5:= temp;
#L09c7e0.   if v5 == 0 then goto L09c6cc;
#L09c7e4.   v5:= v8.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c7e8.   v6:= new [|java:lang:StringBuilder|];
#L09c7ec.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09c7f2.   v7:= "Invalid cookie header: \"" @type (object, string);
#L09c7f6.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c7fc.   v6:= temp  @type object;
#L09c7fe.   call temp:=  [|java:lang:StringBuilder.append|](v6, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c804.   v6:= temp  @type object;
#L09c806.   v7:= "\". " @type (object, string);
#L09c80a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c810.   v6:= temp  @type object;
#L09c812.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.getMessage|](v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type virtual;
#L09c818.   v7:= temp  @type object;
#L09c81a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c820.   v6:= temp  @type object;
#L09c822.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09c828.   v6:= temp  @type object;
#L09c82a.   call temp:=  [|org:apache:commons:logging:Log.warn|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c830.   goto L09c6cc;
#L09c834.   return @void ;
  catch  [|org:apache:http:cookie:MalformedCookieException|] @[L09c6e0..L09c708] goto L09c7d2;
  catch  [|org:apache:http:cookie:MalformedCookieException|] @[L09c708..L09c768] goto L09c76a;
  catch  [|org:apache:http:cookie:MalformedCookieException|] @[L09c76c..L09c7d0] goto L09c7d2;

   }
    procedure [|void|] [|org:apache:http:client:protocol:ResponseProcessCookies.process|] ([|org:apache:http:client:protocol:ResponseProcessCookies|] v6 @type (this), [|org:apache:http:HttpResponse|] v7 @type (object), [|org:apache:http:protocol:HttpContext|] v8 @type (object)) @owner [|org:apache:http:client:protocol:ResponseProcessCookies|] @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.process:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09c86c.   if v7 != 0 then goto L09c880;
#L09c870.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c874.   v5:= "HTTP request may not be null" @type (object, string);
#L09c878.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c87e.   throw v4;
#L09c880.   if v8 != 0 then goto L09c894;
#L09c884.   v4:= new [|java:lang:IllegalArgumentException|];
#L09c888.   v5:= "HTTP context may not be null" @type (object, string);
#L09c88c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09c892.   throw v4;
#L09c894.   v4:= "http.cookie-store" @type (object, string);
#L09c898.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v8, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c89e.   v2:= temp  @type object;
#L09c8a0.   v2:= ([|org:apache:http:client:CookieStore|])v2;
#L09c8a4.   if v2 != 0 then goto L09c8b8;
#L09c8a8.   v4:= v6.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c8ac.   v5:= "Cookie store not available in HTTP context" @type (object, string);
#L09c8b0.   call temp:=  [|org:apache:commons:logging:Log.info|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c8b6.   return @void ;
#L09c8b8.   v4:= "http.cookie-spec" @type (object, string);
#L09c8bc.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v8, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c8c2.   v1:= temp  @type object;
#L09c8c4.   v1:= ([|org:apache:http:cookie:CookieSpec|])v1;
#L09c8c8.   if v1 != 0 then goto L09c8dc;
#L09c8cc.   v4:= v6.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c8d0.   v5:= "CookieSpec not available in HTTP context" @type (object, string);
#L09c8d4.   call temp:=  [|org:apache:commons:logging:Log.info|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c8da.   goto L09c8b6;
#L09c8dc.   v4:= "http.cookie-origin" @type (object, string);
#L09c8e0.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v8, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L09c8e6.   v0:= temp  @type object;
#L09c8e8.   v0:= ([|org:apache:http:cookie:CookieOrigin|])v0;
#L09c8ec.   if v0 != 0 then goto L09c900;
#L09c8f0.   v4:= v6.[|org:apache:http:client:protocol:ResponseProcessCookies.log|]   @type object;
#L09c8f4.   v5:= "CookieOrigin not available in HTTP context" @type (object, string);
#L09c8f8.   call temp:=  [|org:apache:commons:logging:Log.info|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L09c8fe.   goto L09c8b6;
#L09c900.   v4:= "Set-Cookie" @type (object, string);
#L09c904.   call temp:=  [|org:apache:http:HttpResponse.headerIterator|](v7, v4) @signature [|Lorg/apache/http/HttpResponse;.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L09c90a.   v3:= temp  @type object;
#L09c90c.   call temp:=  [|org:apache:http:client:protocol:ResponseProcessCookies.processCookies|](v6, v3, v1, v0, v2) @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.processCookies:(Lorg/apache/http/HeaderIterator;Lorg/apache/http/cookie/CookieSpec;Lorg/apache/http/cookie/CookieOrigin;Lorg/apache/http/client/CookieStore;)V|] @classDescriptor [|org:apache:http:client:protocol:ResponseProcessCookies|] @type direct;
#L09c912.   call temp:=  [|org:apache:http:cookie:CookieSpec.getVersion|](v1) @signature [|Lorg/apache/http/cookie/CookieSpec;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:CookieSpec|] @type interface;
#L09c918.   v4:= temp;
#L09c91a.   if v4 <= 0 then goto L09c8b6;
#L09c91e.   v4:= "Set-Cookie2" @type (object, string);
#L09c922.   call temp:=  [|org:apache:http:HttpResponse.headerIterator|](v7, v4) @signature [|Lorg/apache/http/HttpResponse;.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L09c928.   v3:= temp  @type object;
#L09c92a.   call temp:=  [|org:apache:http:client:protocol:ResponseProcessCookies.processCookies|](v6, v3, v1, v0, v2) @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.processCookies:(Lorg/apache/http/HeaderIterator;Lorg/apache/http/cookie/CookieSpec;Lorg/apache/http/cookie/CookieOrigin;Lorg/apache/http/client/CookieStore;)V|] @classDescriptor [|org:apache:http:client:protocol:ResponseProcessCookies|] @type direct;
#L09c930.   goto L09c8b6;

   }
record [|org:apache:http:client:utils:CloneUtils|]  @type class @AccessFlag PUBLIC  {
   }
    procedure [|void|] [|org:apache:http:client:utils:CloneUtils.<init>|] ([|org:apache:http:client:utils:CloneUtils|] v0 @type (this)) @owner [|org:apache:http:client:utils:CloneUtils|] @signature [|Lorg/apache/http/client/utils/CloneUtils;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09c944.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09c94a.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:client:utils:CloneUtils.clone|] ([|java:lang:Object|] v6 @type (object)) @owner [|org:apache:http:client:utils:CloneUtils|] @signature [|Lorg/apache/http/client/utils/CloneUtils;.clone:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09c95c.   v4:= 0  @length 4;
#L09c95e.   if v6 != 0 then goto L09c964;
#L09c962.   return v4  @type object;
#L09c964.   v4:= instanceof @varname v6 @type [|java:lang:Cloneable|];
#L09c968.   if v4 == 0 then goto L09c9ea;
#L09c96c.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09c972.   v1:= temp  @type object;
#L09c974.   v5:= "clone" @type (object, string);
#L09c978.   v4:= 0  @length 4;
#L09c97a.   v4:= ([|java:lang:Class|][])v4;
#L09c97e.   call temp:=  [|java:lang:Class.getMethod|](v1, v5, v4) @signature [|Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09c984.   v3:= temp  @type object;
#L09c986.   v4:= 0  @length 4;
#L09c988.   v4:= ([|java:lang:Object|][])v4;
#L09c98c.   call temp:=  [|java:lang:reflect:Method.invoke|](v3, v6, v4) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L09c992.   v4:= temp  @type object;
#L09c994.   goto L09c962;
#L09c996.   v2:= Exception  @type object;
#L09c998.   v4:= new [|java:lang:NoSuchMethodError|];
#L09c99c.   call temp:=  [|java:lang:NoSuchMethodException.getMessage|](v2) @signature [|Ljava/lang/NoSuchMethodException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:NoSuchMethodException|] @type virtual;
#L09c9a2.   v5:= temp  @type object;
#L09c9a4.   call temp:=  [|java:lang:NoSuchMethodError.<init>|](v4, v5) @signature [|Ljava/lang/NoSuchMethodError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NoSuchMethodError|] @type direct;
#L09c9aa.   throw v4;
#L09c9ac.   v2:= Exception  @type object;
#L09c9ae.   call temp:=  [|java:lang:reflect:InvocationTargetException.getCause|](v2) @signature [|Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L09c9b4.   v0:= temp  @type object;
#L09c9b6.   v4:= instanceof @varname v0 @type [|java:lang:CloneNotSupportedException|];
#L09c9ba.   if v4 == 0 then goto L09c9c4;
#L09c9be.   v0:= ([|java:lang:CloneNotSupportedException|])v0;
#L09c9c2.   throw v0;
#L09c9c4.   v4:= new [|java:lang:Error|];
#L09c9c8.   v5:= "Unexpected exception" @type (object, string);
#L09c9cc.   call temp:=  [|java:lang:Error.<init>|](v4, v5, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L09c9d2.   throw v4;
#L09c9d4.   v2:= Exception  @type object;
#L09c9d6.   v4:= new [|java:lang:IllegalAccessError|];
#L09c9da.   call temp:=  [|java:lang:IllegalAccessException.getMessage|](v2) @signature [|Ljava/lang/IllegalAccessException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L09c9e0.   v5:= temp  @type object;
#L09c9e2.   call temp:=  [|java:lang:IllegalAccessError.<init>|](v4, v5) @signature [|Ljava/lang/IllegalAccessError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessError|] @type direct;
#L09c9e8.   throw v4;
#L09c9ea.   v4:= new [|java:lang:CloneNotSupportedException|];
#L09c9ee.   call temp:=  [|java:lang:CloneNotSupportedException.<init>|](v4) @signature [|Ljava/lang/CloneNotSupportedException;.<init>:()V|] @classDescriptor [|java:lang:CloneNotSupportedException|] @type direct;
#L09c9f4.   throw v4;
  catch  [|java:lang:NoSuchMethodException|] @[L09c974..L09c984] goto L09c996;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L09c988..L09c992] goto L09c9ac;
  catch  [|java:lang:IllegalAccessException|] @[L09c988..L09c992] goto L09c9d4;

   }
record [|org:apache:http:client:utils:URIUtils|]  @type class @AccessFlag PUBLIC  {
   }
    procedure [|void|] [|org:apache:http:client:utils:URIUtils.<init>|] ([|org:apache:http:client:utils:URIUtils|] v0 @type (this)) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09ca24.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09ca2a.   return @void ;

   }
    procedure [|java:net:URI|] [|org:apache:http:client:utils:URIUtils.createURI|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|int|] v5, [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.createURI:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URI;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09ca3c.   v0:= new [|java:lang:StringBuilder|];
#L09ca40.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09ca46.   if v4 == 0 then goto L09ca78;
#L09ca4a.   if v3 == 0 then goto L09ca5e;
#L09ca4e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca54.   v1:= "://" @type (object, string);
#L09ca58.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca5e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca64.   if v5 <= 0 then goto L09ca78;
#L09ca68.   v1:= 58  @length 16;
#L09ca6c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca72.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca78.   if v6 == 0 then goto L09ca8c;
#L09ca7c.   v1:= "/" @type (object, string);
#L09ca80.   call temp:=  [|java:lang:String.startsWith|](v6, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09ca86.   v1:= temp;
#L09ca88.   if v1 != 0 then goto L09ca96;
#L09ca8c.   v1:= 47  @length 16;
#L09ca90.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ca96.   if v6 == 0 then goto L09caa0;
#L09ca9a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09caa0.   if v7 == 0 then goto L09cab4;
#L09caa4.   v1:= 63  @length 16;
#L09caa8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09caae.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cab4.   if v8 == 0 then goto L09cac8;
#L09cab8.   v1:= 35  @length 16;
#L09cabc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cac2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cac8.   v1:= new [|java:net:URI|];
#L09cacc.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cad2.   v2:= temp  @type object;
#L09cad4.   call temp:=  [|java:net:URI.<init>|](v1, v2) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L09cada.   return v1  @type object;

   }
    procedure [|java:net:URI|] [|org:apache:http:client:utils:URIUtils.resolve|] ([|java:net:URI|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.resolve:(Ljava/net/URI;Ljava/lang/String;)Ljava/net/URI;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09caec.   call temp:=  [|java:net:URI.create|](v2) @signature [|Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;|] @classDescriptor [|java:net:URI|] @type static;
#L09caf2.   v0:= temp  @type object;
#L09caf4.   call temp:=  [|org:apache:http:client:utils:URIUtils.resolve|](v1, v0) @signature [|Lorg/apache/http/client/utils/URIUtils;.resolve:(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L09cafa.   v0:= temp  @type object;
#L09cafc.   return v0  @type object;

   }
    procedure [|java:net:URI|] [|org:apache:http:client:utils:URIUtils.resolve|] ([|java:net:URI|] v5 @type (object), [|java:net:URI|] v6 @type (object)) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.resolve:(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09cb10.   v3:= 0  @length 4;
#L09cb12.   if v5 != 0 then goto L09cb26;
#L09cb16.   v3:= new [|java:lang:IllegalArgumentException|];
#L09cb1a.   v4:= "Base URI may nor be null" @type (object, string);
#L09cb1e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09cb24.   throw v3;
#L09cb26.   if v6 != 0 then goto L09cb3a;
#L09cb2a.   v3:= new [|java:lang:IllegalArgumentException|];
#L09cb2e.   v4:= "Reference URI may nor be null" @type (object, string);
#L09cb32.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09cb38.   throw v3;
#L09cb3a.   call temp:=  [|java:net:URI.toString|](v6) @signature [|Ljava/net/URI;.toString:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cb40.   v4:= temp  @type object;
#L09cb42.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cb48.   v4:= temp;
#L09cb4a.   if v4 != 0 then goto L09cb92;
#L09cb4e.   v0:= 1  @length 4;
#L09cb50.   if v0 == 0 then goto L09cb60;
#L09cb54.   v4:= "#" @type (object, string);
#L09cb58.   call temp:=  [|java:net:URI.create|](v4) @signature [|Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;|] @classDescriptor [|java:net:URI|] @type static;
#L09cb5e.   v6:= temp  @type object;
#L09cb60.   call temp:=  [|java:net:URI.resolve|](v5, v6) @signature [|Ljava/net/URI;.resolve:(Ljava/net/URI;)Ljava/net/URI;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cb66.   v1:= temp  @type object;
#L09cb68.   if v0 == 0 then goto L09cb90;
#L09cb6c.   call temp:=  [|java:net:URI.toString|](v1) @signature [|Ljava/net/URI;.toString:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cb72.   v2:= temp  @type object;
#L09cb74.   v4:= 35  @length 16;
#L09cb78.   call temp:=  [|java:lang:String.indexOf|](v2, v4) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cb7e.   v4:= temp;
#L09cb80.   call temp:=  [|java:lang:String.substring|](v2, v3, v4) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cb86.   v3:= temp  @type object;
#L09cb88.   call temp:=  [|java:net:URI.create|](v3) @signature [|Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;|] @classDescriptor [|java:net:URI|] @type static;
#L09cb8e.   v1:= temp  @type object;
#L09cb90.   return v1  @type object;
#L09cb92.   v0:= v3;
#L09cb94.   goto L09cb50;

   }
    procedure [|java:net:URI|] [|org:apache:http:client:utils:URIUtils.rewriteURI|] ([|java:net:URI|] v1 @type (object), [|org:apache:http:HttpHost|] v2 @type (object)) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;)Ljava/net/URI;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09cba8.   v0:= 0  @length 4;
#L09cbaa.   call temp:=  [|org:apache:http:client:utils:URIUtils.rewriteURI|](v1, v2, v0) @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;Z)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L09cbb0.   v0:= temp  @type object;
#L09cbb2.   return v0  @type object;

   }
    procedure [|java:net:URI|] [|org:apache:http:client:utils:URIUtils.rewriteURI|] ([|java:net:URI|] v7 @type (object), [|org:apache:http:HttpHost|] v8 @type (object), [|boolean|] v9) @owner [|org:apache:http:client:utils:URIUtils|] @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;Z)Ljava/net/URI;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09cbc4.   v6:= 0  @length 4;
#L09cbc6.   if v7 != 0 then goto L09cbda;
#L09cbca.   v0:= new [|java:lang:IllegalArgumentException|];
#L09cbce.   v1:= "URI may nor be null" @type (object, string);
#L09cbd2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09cbd8.   throw v0;
#L09cbda.   if v8 == 0 then goto L09cc20;
#L09cbde.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v8) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09cbe4.   v0:= temp  @type object;
#L09cbe6.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v8) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09cbec.   v1:= temp  @type object;
#L09cbee.   call temp:=  [|org:apache:http:HttpHost.getPort|](v8) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09cbf4.   v2:= temp;
#L09cbf6.   call temp:=  [|java:net:URI.getRawPath|](v7) @signature [|Ljava/net/URI;.getRawPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cbfc.   v3:= temp  @type object;
#L09cbfe.   call temp:=  [|java:net:URI.getRawQuery|](v7) @signature [|Ljava/net/URI;.getRawQuery:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cc04.   v4:= temp  @type object;
#L09cc06.   if v9 == 0 then goto L09cc16;
#L09cc0a.   v5:= v6  @type object;
#L09cc0c.   call temp:=  [|org:apache:http:client:utils:URIUtils.createURI|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/client/utils/URIUtils;.createURI:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L09cc12.   v0:= temp  @type object;
#L09cc14.   return v0  @type object;
#L09cc16.   call temp:=  [|java:net:URI.getRawFragment|](v7) @signature [|Ljava/net/URI;.getRawFragment:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cc1c.   v5:= temp  @type object;
#L09cc1e.   goto L09cc0c;
#L09cc20.   v2:= -1  @length 4;
#L09cc22.   call temp:=  [|java:net:URI.getRawPath|](v7) @signature [|Ljava/net/URI;.getRawPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cc28.   v3:= temp  @type object;
#L09cc2a.   call temp:=  [|java:net:URI.getRawQuery|](v7) @signature [|Ljava/net/URI;.getRawQuery:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cc30.   v4:= temp  @type object;
#L09cc32.   if v9 == 0 then goto L09cc46;
#L09cc36.   v5:= v6  @type object;
#L09cc38.   v0:= v6  @type object;
#L09cc3a.   v1:= v6  @type object;
#L09cc3c.   call temp:=  [|org:apache:http:client:utils:URIUtils.createURI|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/client/utils/URIUtils;.createURI:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L09cc42.   v0:= temp  @type object;
#L09cc44.   goto L09cc14;
#L09cc46.   call temp:=  [|java:net:URI.getRawFragment|](v7) @signature [|Ljava/net/URI;.getRawFragment:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cc4c.   v5:= temp  @type object;
#L09cc4e.   goto L09cc38;

   }
record [|org:apache:http:client:utils:URLEncodedUtils|]  @type class @AccessFlag PUBLIC  {
   }
      global [|java:lang:String|] @@[|org:apache:http:client:utils:URLEncodedUtils.CONTENT_TYPE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:utils:URLEncodedUtils.NAME_VALUE_SEPARATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:client:utils:URLEncodedUtils.PARAMETER_SEPARATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:client:utils:URLEncodedUtils.<init>|] ([|org:apache:http:client:utils:URLEncodedUtils|] v0 @type (this)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09cc60.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09cc66.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:client:utils:URLEncodedUtils.decode|] ([|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L09cc78.   if v3 == 0 then goto L09cc86;
#L09cc7c.   call temp:=  [|java:net:URLDecoder.decode|](v2, v3) @signature [|Ljava/net/URLDecoder;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:net:URLDecoder|] @type static;
#L09cc82.   v1:= temp  @type object;
#L09cc84.   return v1  @type object;
#L09cc86.   v3:= "ISO-8859-1" @type (object, string);
#L09cc8a.   goto L09cc7c;
#L09cc8c.   v0:= Exception  @type object;
#L09cc8e.   v1:= new [|java:lang:IllegalArgumentException|];
#L09cc92.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09cc98.   throw v1;
  catch  [|java:io:UnsupportedEncodingException|] @[L09cc7c..L09cc8a] goto L09cc8c;

   }
    procedure [|java:lang:String|] [|org:apache:http:client:utils:URLEncodedUtils.encode|] ([|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L09ccbc.   if v3 == 0 then goto L09ccca;
#L09ccc0.   call temp:=  [|java:net:URLEncoder.encode|](v2, v3) @signature [|Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:net:URLEncoder|] @type static;
#L09ccc6.   v1:= temp  @type object;
#L09ccc8.   return v1  @type object;
#L09ccca.   v3:= "ISO-8859-1" @type (object, string);
#L09ccce.   goto L09ccc0;
#L09ccd0.   v0:= Exception  @type object;
#L09ccd2.   v1:= new [|java:lang:IllegalArgumentException|];
#L09ccd6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ccdc.   throw v1;
  catch  [|java:io:UnsupportedEncodingException|] @[L09ccc0..L09ccce] goto L09ccd0;

   }
    procedure [|java:lang:String|] [|org:apache:http:client:utils:URLEncodedUtils.format|] ([|java:util:List|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.format:(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09cd00.   v4:= new [|java:lang:StringBuilder|];
#L09cd04.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09cd0a.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09cd10.   v2:= temp  @type object;
#L09cd12.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09cd18.   v6:= temp;
#L09cd1a.   if v6 == 0 then goto L09cd82;
#L09cd1e.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09cd24.   v3:= temp  @type object;
#L09cd26.   v3:= ([|org:apache:http:NameValuePair|])v3;
#L09cd2a.   call temp:=  [|org:apache:http:NameValuePair.getName|](v3) @signature [|Lorg/apache/http/NameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L09cd30.   v6:= temp  @type object;
#L09cd32.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.encode|](v6, v8) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09cd38.   v0:= temp  @type object;
#L09cd3a.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v3) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L09cd40.   v5:= temp  @type object;
#L09cd42.   if v5 == 0 then goto L09cd7c;
#L09cd46.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.encode|](v5, v8) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09cd4c.   v1:= temp  @type object;
#L09cd4e.   call temp:=  [|java:lang:StringBuilder.length|](v4) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd54.   v6:= temp;
#L09cd56.   if v6 <= 0 then goto L09cd64;
#L09cd5a.   v6:= "&" @type (object, string);
#L09cd5e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd64.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd6a.   v6:= "=" @type (object, string);
#L09cd6e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd74.   call temp:=  [|java:lang:StringBuilder.append|](v4, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd7a.   goto L09cd12;
#L09cd7c.   v1:= "" @type (object, string);
#L09cd80.   goto L09cd4e;
#L09cd82.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09cd88.   v6:= temp  @type object;
#L09cd8a.   return v6  @type object;

   }
    procedure [|boolean|] [|org:apache:http:client:utils:URLEncodedUtils.isEncoded|] ([|org:apache:http:HttpEntity|] v3 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.isEncoded:(Lorg/apache/http/HttpEntity;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09cd9c.   call temp:=  [|org:apache:http:HttpEntity.getContentType|](v3) @signature [|Lorg/apache/http/HttpEntity;.getContentType:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09cda2.   v0:= temp  @type object;
#L09cda4.   if v0 == 0 then goto L09cdc4;
#L09cda8.   call temp:=  [|org:apache:http:Header.getValue|](v0) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L09cdae.   v1:= temp  @type object;
#L09cdb0.   v2:= "application/x-www-form-urlencoded" @type (object, string);
#L09cdb4.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v2) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cdba.   v1:= temp;
#L09cdbc.   if v1 == 0 then goto L09cdc4;
#L09cdc0.   v1:= 1  @length 4;
#L09cdc2.   return v1;
#L09cdc4.   v1:= 0  @length 4;
#L09cdc6.   goto L09cdc2;

   }
    procedure [|java:util:List|] [|org:apache:http:client:utils:URLEncodedUtils.parse|] ([|java:net:URI|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.parse:(Ljava/net/URI;Ljava/lang/String;)Ljava/util/List;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09cdd8.   call temp:=  [|java:util:Collections.emptyList|]() @signature [|Ljava/util/Collections;.emptyList:()Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L09cdde.   v1:= temp  @type object;
#L09cde0.   call temp:=  [|java:net:URI.getRawQuery|](v3) @signature [|Ljava/net/URI;.getRawQuery:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L09cde6.   v0:= temp  @type object;
#L09cde8.   if v0 == 0 then goto L09ce12;
#L09cdec.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cdf2.   v2:= temp;
#L09cdf4.   if v2 <= 0 then goto L09ce12;
#L09cdf8.   v1:= new [|java:util:ArrayList|];
#L09cdfc.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09ce02.   v2:= new [|java:util:Scanner|];
#L09ce06.   call temp:=  [|java:util:Scanner.<init>|](v2, v0) @signature [|Ljava/util/Scanner;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:Scanner|] @type direct;
#L09ce0c.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.parse|](v1, v2, v4) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.parse:(Ljava/util/List;Ljava/util/Scanner;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09ce12.   return v1  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:client:utils:URLEncodedUtils.parse|] ([|org:apache:http:HttpEntity|] v5 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.parse:(Lorg/apache/http/HttpEntity;)Ljava/util/List;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09ce24.   call temp:=  [|java:util:Collections.emptyList|]() @signature [|Ljava/util/Collections;.emptyList:()Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L09ce2a.   v2:= temp  @type object;
#L09ce2c.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.isEncoded|](v5) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.isEncoded:(Lorg/apache/http/HttpEntity;)Z|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09ce32.   v3:= temp;
#L09ce34.   if v3 == 0 then goto L09ce7e;
#L09ce38.   call temp:=  [|org:apache:http:util:EntityUtils.toString|](v5) @signature [|Lorg/apache/http/util/EntityUtils;.toString:(Lorg/apache/http/HttpEntity;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:EntityUtils|] @type static;
#L09ce3e.   v0:= temp  @type object;
#L09ce40.   call temp:=  [|org:apache:http:HttpEntity.getContentEncoding|](v5) @signature [|Lorg/apache/http/HttpEntity;.getContentEncoding:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09ce46.   v1:= temp  @type object;
#L09ce48.   if v0 == 0 then goto L09ce7e;
#L09ce4c.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09ce52.   v3:= temp;
#L09ce54.   if v3 <= 0 then goto L09ce7e;
#L09ce58.   v2:= new [|java:util:ArrayList|];
#L09ce5c.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09ce62.   v4:= new [|java:util:Scanner|];
#L09ce66.   call temp:=  [|java:util:Scanner.<init>|](v4, v0) @signature [|Ljava/util/Scanner;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:Scanner|] @type direct;
#L09ce6c.   if v1 == 0 then goto L09ce80;
#L09ce70.   call temp:=  [|org:apache:http:Header.getValue|](v1) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L09ce76.   v3:= temp  @type object;
#L09ce78.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.parse|](v2, v4, v3) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.parse:(Ljava/util/List;Ljava/util/Scanner;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09ce7e.   return v2  @type object;
#L09ce80.   v3:= 0  @length 4;
#L09ce82.   goto L09ce78;

   }
    procedure [|void|] [|org:apache:http:client:utils:URLEncodedUtils.parse|] ([|java:util:List|] v6 @type (object), [|java:util:Scanner|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|org:apache:http:client:utils:URLEncodedUtils|] @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.parse:(Ljava/util/List;Ljava/util/Scanner;Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09ce94.   v5:= 2  @length 4;
#L09ce96.   v3:= "&" @type (object, string);
#L09ce9a.   call temp:=  [|java:util:Scanner.useDelimiter|](v7, v3) @signature [|Ljava/util/Scanner;.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;|] @classDescriptor [|java:util:Scanner|] @type virtual;
#L09cea0.   call temp:=  [|java:util:Scanner.hasNext|](v7) @signature [|Ljava/util/Scanner;.hasNext:()Z|] @classDescriptor [|java:util:Scanner|] @type virtual;
#L09cea6.   v3:= temp;
#L09cea8.   if v3 == 0 then goto L09cf12;
#L09ceac.   call temp:=  [|java:util:Scanner.next|](v7) @signature [|Ljava/util/Scanner;.next:()Ljava/lang/String;|] @classDescriptor [|java:util:Scanner|] @type virtual;
#L09ceb2.   v3:= temp  @type object;
#L09ceb4.   v4:= "=" @type (object, string);
#L09ceb8.   call temp:=  [|java:lang:String.split|](v3, v4) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09cebe.   v1:= temp  @type object;
#L09cec0.   v3:= v1.length;
#L09cec2.   if v3 == 0 then goto L09cecc;
#L09cec6.   v3:= v1.length;
#L09cec8.   if v3 <= v5 then goto L09cedc;
#L09cecc.   v3:= new [|java:lang:IllegalArgumentException|];
#L09ced0.   v4:= "bad parameter" @type (object, string);
#L09ced4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ceda.   throw v3;
#L09cedc.   v3:= 0  @length 4;
#L09cede.   v3:= v1[v3]  @type object;
#L09cee2.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.decode|](v3, v8) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09cee8.   v0:= temp  @type object;
#L09ceea.   v2:= 0  @length 4;
#L09ceec.   v3:= v1.length;
#L09ceee.   if v3 != v5 then goto L09cf00;
#L09cef2.   v3:= 1  @length 4;
#L09cef4.   v3:= v1[v3]  @type object;
#L09cef8.   call temp:=  [|org:apache:http:client:utils:URLEncodedUtils.decode|](v3, v8) @signature [|Lorg/apache/http/client/utils/URLEncodedUtils;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:utils:URLEncodedUtils|] @type static;
#L09cefe.   v2:= temp  @type object;
#L09cf00.   v3:= new [|org:apache:http:message:BasicNameValuePair|];
#L09cf04.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v3, v0, v2) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L09cf0a.   call temp:=  [|java:util:List.add|](v6, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L09cf10.   goto L09cea0;
#L09cf12.   return @void ;

   }
record [|org:apache:http:conn:EofSensorWatcher|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|org:apache:http:conn:EofSensorWatcher.eofDetected|] ([|java:io:InputStream|] v0 @type (object)) @owner [|org:apache:http:conn:EofSensorWatcher|] @signature [|Lorg/apache/http/conn/EofSensorWatcher;.eofDetected:(Ljava/io/InputStream;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:EofSensorWatcher.streamAbort|] ([|java:io:InputStream|] v0 @type (object)) @owner [|org:apache:http:conn:EofSensorWatcher|] @signature [|Lorg/apache/http/conn/EofSensorWatcher;.streamAbort:(Ljava/io/InputStream;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:EofSensorWatcher.streamClosed|] ([|java:io:InputStream|] v0 @type (object)) @owner [|org:apache:http:conn:EofSensorWatcher|] @signature [|Lorg/apache/http/conn/EofSensorWatcher;.streamClosed:(Ljava/io/InputStream;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:BasicEofSensorWatcher|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:EofSensorWatcher|] {
      [|boolean|] [|org:apache:http:conn:BasicEofSensorWatcher.attemptReuse|]    @AccessFlag PROTECTED;
      [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:conn:BasicEofSensorWatcher.<init>|] ([|org:apache:http:conn:BasicEofSensorWatcher|] v2 @type (this), [|org:apache:http:conn:ManagedClientConnection|] v3 @type (object), [|boolean|] v4) @owner [|org:apache:http:conn:BasicEofSensorWatcher|] @signature [|Lorg/apache/http/conn/BasicEofSensorWatcher;.<init>:(Lorg/apache/http/conn/ManagedClientConnection;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09cf24.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09cf2a.   if v3 != 0 then goto L09cf3e;
#L09cf2e.   v0:= new [|java:lang:IllegalArgumentException|];
#L09cf32.   v1:= "Connection may not be null." @type (object, string);
#L09cf36.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09cf3c.   throw v0;
#L09cf3e.   v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]  := v3 @type object;
#L09cf42.   v2.[|org:apache:http:conn:BasicEofSensorWatcher.attemptReuse|]  := v4 @boolean;
#L09cf46.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicEofSensorWatcher.eofDetected|] ([|org:apache:http:conn:BasicEofSensorWatcher|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|org:apache:http:conn:BasicEofSensorWatcher|] @signature [|Lorg/apache/http/conn/BasicEofSensorWatcher;.eofDetected:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09cf58.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.attemptReuse|]   @boolean;
#L09cf5c.   if v0 == 0 then goto L09cf70;
#L09cf60.   call temp:=  [|java:io:InputStream.close|](v3) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09cf66.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cf6a.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cf70.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cf74.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cf7a.   v0:= 0  @length 4;
#L09cf7c.   return v0;
#L09cf7e.   v0:= Exception  @type object;
#L09cf80.   v1:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cf84.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v1) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cf8a.   throw v0;
  catch  [|any|] @[L09cf58..L09cf70] goto L09cf7e;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicEofSensorWatcher.streamAbort|] ([|org:apache:http:conn:BasicEofSensorWatcher|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:http:conn:BasicEofSensorWatcher|] @signature [|Lorg/apache/http/conn/BasicEofSensorWatcher;.streamAbort:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09cfa8.   v0:= v1.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cfac.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.abortConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.abortConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cfb2.   v0:= 0  @length 4;
#L09cfb4.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicEofSensorWatcher.streamClosed|] ([|org:apache:http:conn:BasicEofSensorWatcher|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|org:apache:http:conn:BasicEofSensorWatcher|] @signature [|Lorg/apache/http/conn/BasicEofSensorWatcher;.streamClosed:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09cfc8.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.attemptReuse|]   @boolean;
#L09cfcc.   if v0 == 0 then goto L09cfe0;
#L09cfd0.   call temp:=  [|java:io:InputStream.close|](v3) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09cfd6.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cfda.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cfe0.   v0:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cfe4.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cfea.   v0:= 0  @length 4;
#L09cfec.   return v0;
#L09cfee.   v0:= Exception  @type object;
#L09cff0.   v1:= v2.[|org:apache:http:conn:BasicEofSensorWatcher.managedConn|]   @type object;
#L09cff4.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v1) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09cffa.   throw v0;
  catch  [|any|] @[L09cfc8..L09cfe0] goto L09cfee;

   }
record [|org:apache:http:entity:HttpEntityWrapper|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpEntity|] {
      [|org:apache:http:HttpEntity|] [|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:entity:HttpEntityWrapper.<init>|] ([|org:apache:http:entity:HttpEntityWrapper|] v2 @type (this), [|org:apache:http:HttpEntity|] v3 @type (object)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.<init>:(Lorg/apache/http/HttpEntity;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09d018.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09d01e.   if v3 != 0 then goto L09d032;
#L09d022.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d026.   v1:= "wrapped entity must not be null" @type (object, string);
#L09d02a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d030.   throw v0;
#L09d032.   v2.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]  := v3 @type object;
#L09d036.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:HttpEntityWrapper.consumeContent|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.consumeContent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d048.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d04c.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d052.   return @void ;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:HttpEntityWrapper.getContent|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d064.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d068.   call temp:=  [|org:apache:http:HttpEntity.getContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContent:()Ljava/io/InputStream;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d06e.   v0:= temp  @type object;
#L09d070.   return v0  @type object;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:entity:HttpEntityWrapper.getContentEncoding|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.getContentEncoding:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d084.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d088.   call temp:=  [|org:apache:http:HttpEntity.getContentEncoding|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContentEncoding:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d08e.   v0:= temp  @type object;
#L09d090.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:HttpEntityWrapper.getContentLength|] ([|org:apache:http:entity:HttpEntityWrapper|] v2 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d0a4.   v0:= v2.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d0a8.   call temp:=  [|org:apache:http:HttpEntity.getContentLength|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContentLength:()J|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d0ae.   v0:= temp  @type wide;
#L09d0b0.   return v0  @type wide;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:entity:HttpEntityWrapper.getContentType|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.getContentType:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d0c4.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d0c8.   call temp:=  [|org:apache:http:HttpEntity.getContentType|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContentType:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d0ce.   v0:= temp  @type object;
#L09d0d0.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:entity:HttpEntityWrapper.isChunked|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.isChunked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d0e4.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d0e8.   call temp:=  [|org:apache:http:HttpEntity.isChunked|](v0) @signature [|Lorg/apache/http/HttpEntity;.isChunked:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d0ee.   v0:= temp;
#L09d0f0.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:HttpEntityWrapper.isRepeatable|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d104.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d108.   call temp:=  [|org:apache:http:HttpEntity.isRepeatable|](v0) @signature [|Lorg/apache/http/HttpEntity;.isRepeatable:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d10e.   v0:= temp;
#L09d110.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:HttpEntityWrapper.isStreaming|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d124.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d128.   call temp:=  [|org:apache:http:HttpEntity.isStreaming|](v0) @signature [|Lorg/apache/http/HttpEntity;.isStreaming:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d12e.   v0:= temp;
#L09d130.   return v0;

   }
    procedure [|void|] [|org:apache:http:entity:HttpEntityWrapper.writeTo|] ([|org:apache:http:entity:HttpEntityWrapper|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|org:apache:http:entity:HttpEntityWrapper|] @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d144.   v0:= v1.[|org:apache:http:entity:HttpEntityWrapper.wrappedEntity|]   @type object;
#L09d148.   call temp:=  [|org:apache:http:HttpEntity.writeTo|](v0, v2) @signature [|Lorg/apache/http/HttpEntity;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d14e.   return @void ;

   }
record [|org:apache:http:conn:ConnectionReleaseTrigger|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:conn:ConnectionReleaseTrigger.abortConnection|] () @owner [|org:apache:http:conn:ConnectionReleaseTrigger|] @signature [|Lorg/apache/http/conn/ConnectionReleaseTrigger;.abortConnection:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ConnectionReleaseTrigger.releaseConnection|] () @owner [|org:apache:http:conn:ConnectionReleaseTrigger|] @signature [|Lorg/apache/http/conn/ConnectionReleaseTrigger;.releaseConnection:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:BasicManagedEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:HttpEntityWrapper|], [|org:apache:http:conn:ConnectionReleaseTrigger|], [|org:apache:http:conn:EofSensorWatcher|] {
      [|boolean|] [|org:apache:http:conn:BasicManagedEntity.attemptReuse|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:conn:BasicManagedEntity.managedConn|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.<init>|] ([|org:apache:http:conn:BasicManagedEntity|] v2 @type (this), [|org:apache:http:HttpEntity|] v3 @type (object), [|org:apache:http:conn:ManagedClientConnection|] v4 @type (object), [|boolean|] v5) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.<init>:(Lorg/apache/http/HttpEntity;Lorg/apache/http/conn/ManagedClientConnection;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09d160.   call temp:=  [|org:apache:http:entity:HttpEntityWrapper.<init>|](v2, v3) @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.<init>:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:entity:HttpEntityWrapper|] @type direct;
#L09d166.   if v4 != 0 then goto L09d17a;
#L09d16a.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d16e.   v1:= "Connection may not be null." @type (object, string);
#L09d172.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d178.   throw v0;
#L09d17a.   v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]  := v4 @type object;
#L09d17e.   v2.[|org:apache:http:conn:BasicManagedEntity.attemptReuse|]  := v5 @boolean;
#L09d182.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.abortConnection|] ([|org:apache:http:conn:BasicManagedEntity|] v2 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.abortConnection:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d194.   v1:= 0  @length 4;
#L09d196.   v0:= v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d19a.   if v0 == 0 then goto L09d1ac;
#L09d19e.   v0:= v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d1a2.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.abortConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.abortConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d1a8.   v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]  := v1 @type object;
#L09d1ac.   return @void ;
#L09d1ae.   v0:= Exception  @type object;
#L09d1b0.   v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]  := v1 @type object;
#L09d1b4.   throw v0;
  catch  [|any|] @[L09d19e..L09d1a8] goto L09d1ae;

   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.consumeContent|] ([|org:apache:http:conn:BasicManagedEntity|] v1 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.consumeContent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d1d4.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d1d8.   if v0 != 0 then goto L09d1de;
#L09d1dc.   return @void ;
#L09d1de.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.attemptReuse|]   @boolean;
#L09d1e2.   if v0 == 0 then goto L09d1fa;
#L09d1e6.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.wrappedEntity|]   @type object;
#L09d1ea.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d1f0.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d1f4.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d1fa.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d200.   goto L09d1dc;
#L09d202.   v0:= Exception  @type object;
#L09d204.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d20a.   throw v0;
  catch  [|any|] @[L09d1de..L09d1fa] goto L09d202;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicManagedEntity.eofDetected|] ([|org:apache:http:conn:BasicManagedEntity|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.eofDetected:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d228.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.attemptReuse|]   @boolean;
#L09d22c.   if v0 == 0 then goto L09d248;
#L09d230.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d234.   if v0 == 0 then goto L09d248;
#L09d238.   call temp:=  [|java:io:InputStream.close|](v2) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d23e.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d242.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d248.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d24e.   v0:= 0  @length 4;
#L09d250.   return v0;
#L09d252.   v0:= Exception  @type object;
#L09d254.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d25a.   throw v0;
  catch  [|any|] @[L09d228..L09d248] goto L09d252;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:conn:BasicManagedEntity.getContent|] ([|org:apache:http:conn:BasicManagedEntity|] v2 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d278.   v0:= new [|org:apache:http:conn:EofSensorInputStream|];
#L09d27c.   v1:= v2.[|org:apache:http:conn:BasicManagedEntity.wrappedEntity|]   @type object;
#L09d280.   call temp:=  [|org:apache:http:HttpEntity.getContent|](v1) @signature [|Lorg/apache/http/HttpEntity;.getContent:()Ljava/io/InputStream;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L09d286.   v1:= temp  @type object;
#L09d288.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.<init>:(Ljava/io/InputStream;Lorg/apache/http/conn/EofSensorWatcher;)V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type direct;
#L09d28e.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicManagedEntity.isRepeatable|] ([|org:apache:http:conn:BasicManagedEntity|] v1 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d2a0.   v0:= 0  @length 4;
#L09d2a2.   return v0;

   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.releaseConnection|] ([|org:apache:http:conn:BasicManagedEntity|] v0 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseConnection:()V|] @Access PUBLIC {
      local temp ;
      
#L09d2b4.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.consumeContent|](v0) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d2ba.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|] ([|org:apache:http:conn:BasicManagedEntity|] v2 @type (this)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L09d2cc.   v1:= 0  @length 4;
#L09d2ce.   v0:= v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d2d2.   if v0 == 0 then goto L09d2e4;
#L09d2d6.   v0:= v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d2da.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d2e0.   v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]  := v1 @type object;
#L09d2e4.   return @void ;
#L09d2e6.   v0:= Exception  @type object;
#L09d2e8.   v2.[|org:apache:http:conn:BasicManagedEntity.managedConn|]  := v1 @type object;
#L09d2ec.   throw v0;
  catch  [|any|] @[L09d2d6..L09d2e0] goto L09d2e6;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicManagedEntity.streamAbort|] ([|org:apache:http:conn:BasicManagedEntity|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.streamAbort:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d30c.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d310.   if v0 == 0 then goto L09d31e;
#L09d314.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d318.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.abortConnection|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.abortConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d31e.   v0:= 0  @length 4;
#L09d320.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:BasicManagedEntity.streamClosed|] ([|org:apache:http:conn:BasicManagedEntity|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.streamClosed:(Ljava/io/InputStream;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d334.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.attemptReuse|]   @boolean;
#L09d338.   if v0 == 0 then goto L09d354;
#L09d33c.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d340.   if v0 == 0 then goto L09d354;
#L09d344.   call temp:=  [|java:io:InputStream.close|](v2) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d34a.   v0:= v1.[|org:apache:http:conn:BasicManagedEntity.managedConn|]   @type object;
#L09d34e.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L09d354.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d35a.   v0:= 0  @length 4;
#L09d35c.   return v0;
#L09d35e.   v0:= Exception  @type object;
#L09d360.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.releaseManagedConnection|](v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.releaseManagedConnection:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d366.   throw v0;
  catch  [|any|] @[L09d334..L09d354] goto L09d35e;

   }
    procedure [|void|] [|org:apache:http:conn:BasicManagedEntity.writeTo|] ([|org:apache:http:conn:BasicManagedEntity|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|org:apache:http:conn:BasicManagedEntity|] @signature [|Lorg/apache/http/conn/BasicManagedEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
      
#L09d384.   call temp:=  [|org:apache:http:entity:HttpEntityWrapper.writeTo|](v0, v1) @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|org:apache:http:entity:HttpEntityWrapper|] @type super;
#L09d38a.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.consumeContent|](v0) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type virtual;
#L09d390.   return @void ;

   }
record [|org:apache:http:conn:ClientConnectionManager|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionManager.closeExpiredConnections|] () @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.closeExpiredConnections:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionManager.closeIdleConnections|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:conn:ClientConnectionManager.getSchemeRegistry|] () @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionManager.releaseConnection|] ([|org:apache:http:conn:ManagedClientConnection|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:ClientConnectionRequest|] [|org:apache:http:conn:ClientConnectionManager.requestConnection|] ([|org:apache:http:conn:routing:HttpRoute|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.requestConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionManager.shutdown|] () @owner [|org:apache:http:conn:ClientConnectionManager|] @signature [|Lorg/apache/http/conn/ClientConnectionManager;.shutdown:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ClientConnectionManagerFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:conn:ClientConnectionManagerFactory.newInstance|] ([|org:apache:http:params:HttpParams|] v0 @type (object), [|org:apache:http:conn:scheme:SchemeRegistry|] v1 @type (object)) @owner [|org:apache:http:conn:ClientConnectionManagerFactory|] @signature [|Lorg/apache/http/conn/ClientConnectionManagerFactory;.newInstance:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionManager;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ClientConnectionOperator|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:conn:ClientConnectionOperator.createConnection|] () @owner [|org:apache:http:conn:ClientConnectionOperator|] @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.createConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionOperator.openConnection|] ([|org:apache:http:conn:OperatedClientConnection|] v0 @type (object), [|org:apache:http:HttpHost|] v1 @type (object), [|java:net:InetAddress|] v2 @type (object), [|org:apache:http:protocol:HttpContext|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:conn:ClientConnectionOperator|] @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.openConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionOperator.updateSecureConnection|] ([|org:apache:http:conn:OperatedClientConnection|] v0 @type (object), [|org:apache:http:HttpHost|] v1 @type (object), [|org:apache:http:protocol:HttpContext|] v2 @type (object), [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:ClientConnectionOperator|] @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.updateSecureConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ClientConnectionRequest|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:conn:ClientConnectionRequest.abortRequest|] () @owner [|org:apache:http:conn:ClientConnectionRequest|] @signature [|Lorg/apache/http/conn/ClientConnectionRequest;.abortRequest:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:conn:ClientConnectionRequest.getConnection|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|org:apache:http:conn:ClientConnectionRequest|] @signature [|Lorg/apache/http/conn/ClientConnectionRequest;.getConnection:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ConnectTimeoutException|]  @type class @AccessFlag PUBLIC  extends [|java:io:InterruptedIOException|] {
   }
      global [|long|] @@[|org:apache:http:conn:ConnectTimeoutException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:ConnectTimeoutException.<init>|] ([|org:apache:http:conn:ConnectTimeoutException|] v0 @type (this)) @owner [|org:apache:http:conn:ConnectTimeoutException|] @signature [|Lorg/apache/http/conn/ConnectTimeoutException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d3a4.   call temp:=  [|java:io:InterruptedIOException.<init>|](v0) @signature [|Ljava/io/InterruptedIOException;.<init>:()V|] @classDescriptor [|java:io:InterruptedIOException|] @type direct;
#L09d3aa.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ConnectTimeoutException.<init>|] ([|org:apache:http:conn:ConnectTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:ConnectTimeoutException|] @signature [|Lorg/apache/http/conn/ConnectTimeoutException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d3bc.   call temp:=  [|java:io:InterruptedIOException.<init>|](v0, v1) @signature [|Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InterruptedIOException|] @type direct;
#L09d3c2.   return @void ;

   }
record [|org:apache:http:conn:ConnectionKeepAliveStrategy|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|long|] [|org:apache:http:conn:ConnectionKeepAliveStrategy.getKeepAliveDuration|] ([|org:apache:http:HttpResponse|] v0 @type (object), [|org:apache:http:protocol:HttpContext|] v1 @type (object)) @owner [|org:apache:http:conn:ConnectionKeepAliveStrategy|] @signature [|Lorg/apache/http/conn/ConnectionKeepAliveStrategy;.getKeepAliveDuration:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ConnectionPoolTimeoutException|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:conn:ConnectTimeoutException|] {
   }
      global [|long|] @@[|org:apache:http:conn:ConnectionPoolTimeoutException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:ConnectionPoolTimeoutException.<init>|] ([|org:apache:http:conn:ConnectionPoolTimeoutException|] v0 @type (this)) @owner [|org:apache:http:conn:ConnectionPoolTimeoutException|] @signature [|Lorg/apache/http/conn/ConnectionPoolTimeoutException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d3d4.   call temp:=  [|org:apache:http:conn:ConnectTimeoutException.<init>|](v0) @signature [|Lorg/apache/http/conn/ConnectTimeoutException;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ConnectTimeoutException|] @type direct;
#L09d3da.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ConnectionPoolTimeoutException.<init>|] ([|org:apache:http:conn:ConnectionPoolTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:ConnectionPoolTimeoutException|] @signature [|Lorg/apache/http/conn/ConnectionPoolTimeoutException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d3ec.   call temp:=  [|org:apache:http:conn:ConnectTimeoutException.<init>|](v0, v1) @signature [|Lorg/apache/http/conn/ConnectTimeoutException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:conn:ConnectTimeoutException|] @type direct;
#L09d3f2.   return @void ;

   }
record [|org:apache:http:conn:EofSensorInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|], [|org:apache:http:conn:ConnectionReleaseTrigger|] {
      [|org:apache:http:conn:EofSensorWatcher|] [|org:apache:http:conn:EofSensorInputStream.eofWatcher|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:conn:EofSensorInputStream.selfClosed|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|org:apache:http:conn:EofSensorInputStream.wrappedStream|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.<init>|] ([|org:apache:http:conn:EofSensorInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|org:apache:http:conn:EofSensorWatcher|] v4 @type (object)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.<init>:(Ljava/io/InputStream;Lorg/apache/http/conn/EofSensorWatcher;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09d404.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L09d40a.   if v3 != 0 then goto L09d41e;
#L09d40e.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d412.   v1:= "Wrapped stream may not be null." @type (object, string);
#L09d416.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d41c.   throw v0;
#L09d41e.   v2.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d422.   v0:= 0  @length 4;
#L09d424.   v2.[|org:apache:http:conn:EofSensorInputStream.selfClosed|]  := v0 @boolean;
#L09d428.   v2.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]  := v4 @type object;
#L09d42c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.abortConnection|] ([|org:apache:http:conn:EofSensorInputStream|] v1 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.abortConnection:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d440.   v0:= 1  @length 4;
#L09d442.   v1.[|org:apache:http:conn:EofSensorInputStream.selfClosed|]  := v0 @boolean;
#L09d446.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkAbort|](v1) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d44c.   return @void ;

   }
    procedure [|int|] [|org:apache:http:conn:EofSensorInputStream.available|] ([|org:apache:http:conn:EofSensorInputStream|] v3 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09d460.   v0:= 0  @length 4;
#L09d462.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.isReadAllowed|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.isReadAllowed:()Z|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d468.   v2:= temp;
#L09d46a.   if v2 == 0 then goto L09d47a;
#L09d46e.   v2:= v3.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d472.   call temp:=  [|java:io:InputStream.available|](v2) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d478.   v0:= temp;
#L09d47a.   return v0;
#L09d47c.   v1:= Exception  @type object;
#L09d47e.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkAbort|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d484.   throw v1;
  catch  [|java:io:IOException|] @[L09d46e..L09d478] goto L09d47c;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.checkAbort|] ([|org:apache:http:conn:EofSensorInputStream|] v4 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09d4a8.   v3:= 0  @length 4;
#L09d4aa.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d4ae.   if v1 == 0 then goto L09d4de;
#L09d4b2.   v0:= 1  @length 4;
#L09d4b4.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d4b8.   if v1 == 0 then goto L09d4cc;
#L09d4bc.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d4c0.   v2:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d4c4.   call temp:=  [|org:apache:http:conn:EofSensorWatcher.streamAbort|](v1, v2) @signature [|Lorg/apache/http/conn/EofSensorWatcher;.streamAbort:(Ljava/io/InputStream;)Z|] @classDescriptor [|org:apache:http:conn:EofSensorWatcher|] @type interface;
#L09d4ca.   v0:= temp;
#L09d4cc.   if v0 == 0 then goto L09d4da;
#L09d4d0.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d4d4.   call temp:=  [|java:io:InputStream.close|](v1) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d4da.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d4de.   return @void ;
#L09d4e0.   v1:= Exception  @type object;
#L09d4e2.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d4e6.   throw v1;
  catch  [|any|] @[L09d4b4..L09d4da] goto L09d4e0;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.checkClose|] ([|org:apache:http:conn:EofSensorInputStream|] v4 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkClose:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09d504.   v3:= 0  @length 4;
#L09d506.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d50a.   if v1 == 0 then goto L09d53a;
#L09d50e.   v0:= 1  @length 4;
#L09d510.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d514.   if v1 == 0 then goto L09d528;
#L09d518.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d51c.   v2:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d520.   call temp:=  [|org:apache:http:conn:EofSensorWatcher.streamClosed|](v1, v2) @signature [|Lorg/apache/http/conn/EofSensorWatcher;.streamClosed:(Ljava/io/InputStream;)Z|] @classDescriptor [|org:apache:http:conn:EofSensorWatcher|] @type interface;
#L09d526.   v0:= temp;
#L09d528.   if v0 == 0 then goto L09d536;
#L09d52c.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d530.   call temp:=  [|java:io:InputStream.close|](v1) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d536.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d53a.   return @void ;
#L09d53c.   v1:= Exception  @type object;
#L09d53e.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d542.   throw v1;
  catch  [|any|] @[L09d510..L09d536] goto L09d53c;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.checkEOF|] ([|org:apache:http:conn:EofSensorInputStream|] v4 @type (this), [|int|] v5) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkEOF:(I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09d560.   v3:= 0  @length 4;
#L09d562.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d566.   if v1 == 0 then goto L09d59a;
#L09d56a.   if v5 >= 0 then goto L09d59a;
#L09d56e.   v0:= 1  @length 4;
#L09d570.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d574.   if v1 == 0 then goto L09d588;
#L09d578.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.eofWatcher|]   @type object;
#L09d57c.   v2:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d580.   call temp:=  [|org:apache:http:conn:EofSensorWatcher.eofDetected|](v1, v2) @signature [|Lorg/apache/http/conn/EofSensorWatcher;.eofDetected:(Ljava/io/InputStream;)Z|] @classDescriptor [|org:apache:http:conn:EofSensorWatcher|] @type interface;
#L09d586.   v0:= temp;
#L09d588.   if v0 == 0 then goto L09d596;
#L09d58c.   v1:= v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d590.   call temp:=  [|java:io:InputStream.close|](v1) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d596.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d59a.   return @void ;
#L09d59c.   v1:= Exception  @type object;
#L09d59e.   v4.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]  := v3 @type object;
#L09d5a2.   throw v1;
  catch  [|any|] @[L09d570..L09d596] goto L09d59c;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.close|] ([|org:apache:http:conn:EofSensorInputStream|] v1 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d5c0.   v0:= 1  @length 4;
#L09d5c2.   v1.[|org:apache:http:conn:EofSensorInputStream.selfClosed|]  := v0 @boolean;
#L09d5c6.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkClose|](v1) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkClose:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d5cc.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:EofSensorInputStream.isReadAllowed|] ([|org:apache:http:conn:EofSensorInputStream|] v2 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.isReadAllowed:()Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L09d5e0.   v0:= v2.[|org:apache:http:conn:EofSensorInputStream.selfClosed|]   @boolean;
#L09d5e4.   if v0 == 0 then goto L09d5f8;
#L09d5e8.   v0:= new [|java:io:IOException|];
#L09d5ec.   v1:= "Attempted read on closed stream." @type (object, string);
#L09d5f0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09d5f6.   throw v0;
#L09d5f8.   v0:= v2.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d5fc.   if v0 == 0 then goto L09d604;
#L09d600.   v0:= 1  @length 4;
#L09d602.   return v0;
#L09d604.   v0:= 0  @length 4;
#L09d606.   goto L09d602;

   }
    procedure [|int|] [|org:apache:http:conn:EofSensorInputStream.read|] ([|org:apache:http:conn:EofSensorInputStream|] v3 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09d618.   v1:= -1  @length 4;
#L09d61a.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.isReadAllowed|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.isReadAllowed:()Z|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d620.   v2:= temp;
#L09d622.   if v2 == 0 then goto L09d638;
#L09d626.   v2:= v3.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d62a.   call temp:=  [|java:io:InputStream.read|](v2) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d630.   v1:= temp;
#L09d632.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkEOF|](v3, v1) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkEOF:(I)V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d638.   return v1;
#L09d63a.   v0:= Exception  @type object;
#L09d63c.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkAbort|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d642.   throw v0;
  catch  [|java:io:IOException|] @[L09d626..L09d638] goto L09d63a;

   }
    procedure [|int|] [|org:apache:http:conn:EofSensorInputStream.read|] ([|org:apache:http:conn:EofSensorInputStream|] v3 @type (this), [|byte|][] v4) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.read:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09d664.   v1:= -1  @length 4;
#L09d666.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.isReadAllowed|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.isReadAllowed:()Z|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d66c.   v2:= temp;
#L09d66e.   if v2 == 0 then goto L09d684;
#L09d672.   v2:= v3.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d676.   call temp:=  [|java:io:InputStream.read|](v2, v4) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d67c.   v1:= temp;
#L09d67e.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkEOF|](v3, v1) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkEOF:(I)V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d684.   return v1;
#L09d686.   v0:= Exception  @type object;
#L09d688.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkAbort|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d68e.   throw v0;
  catch  [|java:io:IOException|] @[L09d672..L09d684] goto L09d686;

   }
    procedure [|int|] [|org:apache:http:conn:EofSensorInputStream.read|] ([|org:apache:http:conn:EofSensorInputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09d6b0.   v1:= -1  @length 4;
#L09d6b2.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.isReadAllowed|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.isReadAllowed:()Z|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d6b8.   v2:= temp;
#L09d6ba.   if v2 == 0 then goto L09d6d0;
#L09d6be.   v2:= v3.[|org:apache:http:conn:EofSensorInputStream.wrappedStream|]   @type object;
#L09d6c2.   call temp:=  [|java:io:InputStream.read|](v2, v4, v5, v6) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09d6c8.   v1:= temp;
#L09d6ca.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkEOF|](v3, v1) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkEOF:(I)V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d6d0.   return v1;
#L09d6d2.   v0:= Exception  @type object;
#L09d6d4.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.checkAbort|](v3) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.checkAbort:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d6da.   throw v0;
  catch  [|java:io:IOException|] @[L09d6be..L09d6d0] goto L09d6d2;

   }
    procedure [|void|] [|org:apache:http:conn:EofSensorInputStream.releaseConnection|] ([|org:apache:http:conn:EofSensorInputStream|] v0 @type (this)) @owner [|org:apache:http:conn:EofSensorInputStream|] @signature [|Lorg/apache/http/conn/EofSensorInputStream;.releaseConnection:()V|] @Access PUBLIC {
      local temp ;
      
#L09d6fc.   call temp:=  [|org:apache:http:conn:EofSensorInputStream.close|](v0) @signature [|Lorg/apache/http/conn/EofSensorInputStream;.close:()V|] @classDescriptor [|org:apache:http:conn:EofSensorInputStream|] @type virtual;
#L09d702.   return @void ;

   }
record [|org:apache:http:conn:HttpHostConnectException|]  @type class @AccessFlag PUBLIC  extends [|java:net:ConnectException|] {
      [|org:apache:http:HttpHost|] [|org:apache:http:conn:HttpHostConnectException.host|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|org:apache:http:conn:HttpHostConnectException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:HttpHostConnectException.<init>|] ([|org:apache:http:conn:HttpHostConnectException|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object), [|java:net:ConnectException|] v4 @type (object)) @owner [|org:apache:http:conn:HttpHostConnectException|] @signature [|Lorg/apache/http/conn/HttpHostConnectException;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/ConnectException;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09d714.   v0:= new [|java:lang:StringBuilder|];
#L09d718.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09d71e.   v1:= "Connection to " @type (object, string);
#L09d722.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09d728.   v0:= temp  @type object;
#L09d72a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09d730.   v0:= temp  @type object;
#L09d732.   v1:= " refused" @type (object, string);
#L09d736.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09d73c.   v0:= temp  @type object;
#L09d73e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09d744.   v0:= temp  @type object;
#L09d746.   call temp:=  [|java:net:ConnectException.<init>|](v2, v0) @signature [|Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:ConnectException|] @type direct;
#L09d74c.   v2.[|org:apache:http:conn:HttpHostConnectException.host|]  := v3 @type object;
#L09d750.   call temp:=  [|org:apache:http:conn:HttpHostConnectException.initCause|](v2, v4) @signature [|Lorg/apache/http/conn/HttpHostConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|org:apache:http:conn:HttpHostConnectException|] @type virtual;
#L09d756.   return @void ;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:HttpHostConnectException.getHost|] ([|org:apache:http:conn:HttpHostConnectException|] v1 @type (this)) @owner [|org:apache:http:conn:HttpHostConnectException|] @signature [|Lorg/apache/http/conn/HttpHostConnectException;.getHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d768.   v0:= v1.[|org:apache:http:conn:HttpHostConnectException.host|]   @type object;
#L09d76c.   return v0  @type object;

   }
record [|org:apache:http:conn:ManagedClientConnection|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:HttpClientConnection|], [|org:apache:http:HttpInetConnection|], [|org:apache:http:conn:ConnectionReleaseTrigger|] {
   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:conn:ManagedClientConnection.getRoute|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|javax:net:ssl:SSLSession|] [|org:apache:http:conn:ManagedClientConnection.getSSLSession|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getSSLSession:()Ljavax/net/ssl/SSLSession;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|org:apache:http:conn:ManagedClientConnection.getState|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getState:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:ManagedClientConnection.isMarkedReusable|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isMarkedReusable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:ManagedClientConnection.isSecure|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isSecure:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.layerProtocol|] ([|org:apache:http:protocol:HttpContext|] v0 @type (object), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.layerProtocol:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.markReusable|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.open|] ([|org:apache:http:conn:routing:HttpRoute|] v0 @type (object), [|org:apache:http:protocol:HttpContext|] v1 @type (object), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.setIdleDuration|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.setIdleDuration:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.setState|] ([|java:lang:Object|] v0 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.setState:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.tunnelProxy|] ([|org:apache:http:HttpHost|] v0 @type (object), [|boolean|] v1, [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.tunnelProxy:(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.tunnelTarget|] ([|boolean|] v0, [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.tunnelTarget:(ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ManagedClientConnection.unmarkReusable|] () @owner [|org:apache:http:conn:ManagedClientConnection|] @signature [|Lorg/apache/http/conn/ManagedClientConnection;.unmarkReusable:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:scheme:SocketFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:scheme:SocketFactory.connectSocket|] ([|java:net:Socket|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|int|] v2, [|java:net:InetAddress|] v3 @type (object), [|int|] v4, [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:conn:scheme:SocketFactory|] @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.connectSocket:(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:scheme:SocketFactory.createSocket|] () @owner [|org:apache:http:conn:scheme:SocketFactory|] @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:scheme:SocketFactory.isSecure|] ([|java:net:Socket|] v0 @type (object)) @owner [|org:apache:http:conn:scheme:SocketFactory|] @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:MultihomePlainSocketFactory|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:scheme:SocketFactory|] {
   }
      global [|org:apache:http:conn:MultihomePlainSocketFactory|] @@[|org:apache:http:conn:MultihomePlainSocketFactory.DEFAULT_FACTORY|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:MultihomePlainSocketFactory.<clinit>|] () @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09d780.   v0:= new [|org:apache:http:conn:MultihomePlainSocketFactory|];
#L09d784.   call temp:=  [|org:apache:http:conn:MultihomePlainSocketFactory.<init>|](v0) @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.<init>:()V|] @classDescriptor [|org:apache:http:conn:MultihomePlainSocketFactory|] @type direct;
#L09d78a.   @@[|org:apache:http:conn:MultihomePlainSocketFactory.DEFAULT_FACTORY|] := v0  @type object;
#L09d78e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:MultihomePlainSocketFactory.<init>|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v0 @type (this)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09d7a0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09d7a6.   return @void ;

   }
    procedure [|org:apache:http:conn:MultihomePlainSocketFactory|] [|org:apache:http:conn:MultihomePlainSocketFactory.getSocketFactory|] () @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.getSocketFactory:()Lorg/apache/http/conn/MultihomePlainSocketFactory;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09d7b8.   v0:= @@[|org:apache:http:conn:MultihomePlainSocketFactory.DEFAULT_FACTORY|]   @type object;
#L09d7bc.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:MultihomePlainSocketFactory.connectSocket|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v10 @type (this), [|java:net:Socket|] v11 @type (object), [|java:lang:String|] v12 @type (object), [|int|] v13, [|java:net:InetAddress|] v14 @type (object), [|int|] v15, [|org:apache:http:params:HttpParams|] v16 @type (object)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.connectSocket:(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L09d7d0.   if v12 != 0 then goto L09d7e4;
#L09d7d4.   v8:= new [|java:lang:IllegalArgumentException|];
#L09d7d8.   v9:= "Target host may not be null." @type (object, string);
#L09d7dc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d7e2.   throw v8;
#L09d7e4.   if v16 != 0 then goto L09d7f8;
#L09d7e8.   v8:= new [|java:lang:IllegalArgumentException|];
#L09d7ec.   v9:= "Parameters may not be null." @type (object, string);
#L09d7f0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d7f6.   throw v8;
#L09d7f8.   if v11 != 0 then goto L09d804;
#L09d7fc.   call temp:=  [|org:apache:http:conn:MultihomePlainSocketFactory.createSocket|](v10) @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.createSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:MultihomePlainSocketFactory|] @type virtual;
#L09d802.   v11:= temp  @type object;
#L09d804.   if v14 != 0 then goto L09d80c;
#L09d808.   if v15 <= 0 then goto L09d822;
#L09d80c.   if v15 >= 0 then goto L09d812;
#L09d810.   v15:= 0  @length 4;
#L09d812.   v5:= new [|java:net:InetSocketAddress|];
#L09d816.   call temp:=  [|java:net:InetSocketAddress.<init>|](v5, v14, v15) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09d81c.   call temp:=  [|java:net:Socket.bind|](v11, v5) @signature [|Ljava/net/Socket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09d822.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getConnectionTimeout|](v16) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getConnectionTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L09d828.   v7:= temp;
#L09d82a.   call temp:=  [|java:net:InetAddress.getAllByName|](v12) @signature [|Ljava/net/InetAddress;.getAllByName:(Ljava/lang/String;)[Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetAddress|] @type static;
#L09d830.   v4:= temp  @type object;
#L09d832.   v1:= new [|java:util:ArrayList|];
#L09d836.   v8:= v4.length;
#L09d838.   call temp:=  [|java:util:ArrayList.<init>|](v1, v8) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09d83e.   call temp:=  [|java:util:Arrays.asList|](v4) @signature [|Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;|] @classDescriptor [|java:util:Arrays|] @type static;
#L09d844.   v8:= temp  @type object;
#L09d846.   call temp:=  [|java:util:List.addAll|](v1, v8) @signature [|Ljava/util/List;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L09d84c.   call temp:=  [|java:util:Collections.shuffle|](v1) @signature [|Ljava/util/Collections;.shuffle:(Ljava/util/List;)V|] @classDescriptor [|java:util:Collections|] @type static;
#L09d852.   v6:= 0  @length 4;
#L09d854.   call temp:=  [|java:util:List.iterator|](v1) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L09d85a.   v3:= temp  @type object;
#L09d85c.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09d862.   v8:= temp;
#L09d864.   if v8 == 0 then goto L09d884;
#L09d868.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09d86e.   v0:= temp  @type object;
#L09d870.   v0:= ([|java:net:InetAddress|])v0;
#L09d874.   v8:= new [|java:net:InetSocketAddress|];
#L09d878.   call temp:=  [|java:net:InetSocketAddress.<init>|](v8, v0, v13) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09d87e.   call temp:=  [|java:net:Socket.connect|](v11, v8, v7) @signature [|Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09d884.   if v6 == 0 then goto L09d89e;
#L09d888.   throw v6;
#L09d88a.   v2:= Exception  @type object;
#L09d88c.   throw v2;
#L09d88e.   v2:= Exception  @type object;
#L09d890.   v11:= new [|java:net:Socket|];
#L09d894.   call temp:=  [|java:net:Socket.<init>|](v11) @signature [|Ljava/net/Socket;.<init>:()V|] @classDescriptor [|java:net:Socket|] @type direct;
#L09d89a.   v6:= v2  @type object;
#L09d89c.   goto L09d85c;
#L09d89e.   return v11  @type object;
  catch  [|java:net:SocketTimeoutException|] @[L09d874..L09d884] goto L09d88a;
  catch  [|java:io:IOException|] @[L09d874..L09d884] goto L09d88e;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:MultihomePlainSocketFactory.createSocket|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d8c0.   v0:= new [|java:net:Socket|];
#L09d8c4.   call temp:=  [|java:net:Socket.<init>|](v0) @signature [|Ljava/net/Socket;.<init>:()V|] @classDescriptor [|java:net:Socket|] @type direct;
#L09d8ca.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:conn:MultihomePlainSocketFactory.equals|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d8dc.   if v2 != v1 then goto L09d8e4;
#L09d8e0.   v0:= 1  @length 4;
#L09d8e2.   return v0;
#L09d8e4.   v0:= 0  @length 4;
#L09d8e6.   goto L09d8e2;

   }
    procedure [|int|] [|org:apache:http:conn:MultihomePlainSocketFactory.hashCode|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09d8f8.   v0:= new [|org:apache:http:conn:scheme:PlainSocketFactory|];
#L09d8fc.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09d902.   v0:= temp;
#L09d904.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:MultihomePlainSocketFactory.isSecure|] ([|org:apache:http:conn:MultihomePlainSocketFactory|] v2 @type (this), [|java:net:Socket|] v3 @type (object)) @owner [|org:apache:http:conn:MultihomePlainSocketFactory|] @signature [|Lorg/apache/http/conn/MultihomePlainSocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09d918.   if v3 != 0 then goto L09d92c;
#L09d91c.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d920.   v1:= "Socket may not be null." @type (object, string);
#L09d924.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d92a.   throw v0;
#L09d92c.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09d932.   v0:= temp  @type object;
#L09d934.   v1:= new [|java:net:Socket|];
#L09d938.   if v0 == v1 then goto L09d94c;
#L09d93c.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d940.   v1:= "Socket not created by this factory." @type (object, string);
#L09d944.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d94a.   throw v0;
#L09d94c.   call temp:=  [|java:net:Socket.isClosed|](v3) @signature [|Ljava/net/Socket;.isClosed:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09d952.   v0:= temp;
#L09d954.   if v0 == 0 then goto L09d968;
#L09d958.   v0:= new [|java:lang:IllegalArgumentException|];
#L09d95c.   v1:= "Socket is closed." @type (object, string);
#L09d960.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09d966.   throw v0;
#L09d968.   v0:= 0  @length 4;
#L09d96a.   return v0;

   }
record [|org:apache:http:conn:OperatedClientConnection|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:HttpClientConnection|], [|org:apache:http:HttpInetConnection|] {
   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:OperatedClientConnection.getSocket|] () @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:OperatedClientConnection.getTargetHost|] () @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getTargetHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:OperatedClientConnection.isSecure|] () @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isSecure:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:OperatedClientConnection.openCompleted|] ([|boolean|] v0, [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.openCompleted:(ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:OperatedClientConnection.opening|] ([|java:net:Socket|] v0 @type (object), [|org:apache:http:HttpHost|] v1 @type (object)) @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.opening:(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:OperatedClientConnection.update|] ([|java:net:Socket|] v0 @type (object), [|org:apache:http:HttpHost|] v1 @type (object), [|boolean|] v2, [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:OperatedClientConnection|] @signature [|Lorg/apache/http/conn/OperatedClientConnection;.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:params:ConnConnectionParamBean|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:HttpAbstractParamBean|] {
   }
    procedure [|void|] [|org:apache:http:conn:params:ConnConnectionParamBean.<init>|] ([|org:apache:http:conn:params:ConnConnectionParamBean|] v0 @type (this), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:params:ConnConnectionParamBean|] @signature [|Lorg/apache/http/conn/params/ConnConnectionParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d97c.   call temp:=  [|org:apache:http:params:HttpAbstractParamBean.<init>|](v0, v1) @signature [|Lorg/apache/http/params/HttpAbstractParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:params:HttpAbstractParamBean|] @type direct;
#L09d982.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnConnectionParamBean.setMaxStatusLineGarbage|] ([|org:apache:http:conn:params:ConnConnectionParamBean|] v2 @type (this), [|int|] v3) @owner [|org:apache:http:conn:params:ConnConnectionParamBean|] @signature [|Lorg/apache/http/conn/params/ConnConnectionParamBean;.setMaxStatusLineGarbage:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d994.   v0:= v2.[|org:apache:http:conn:params:ConnConnectionParamBean.params|]   @type object;
#L09d998.   v1:= "http.connection.max-status-line-garbage" @type (object, string);
#L09d99c.   call temp:=  [|org:apache:http:params:HttpParams.setIntParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09d9a2.   return @void ;

   }
record [|org:apache:http:conn:params:ConnManagerParamBean|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:HttpAbstractParamBean|] {
   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParamBean.<init>|] ([|org:apache:http:conn:params:ConnManagerParamBean|] v0 @type (this), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParamBean|] @signature [|Lorg/apache/http/conn/params/ConnManagerParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09d9b4.   call temp:=  [|org:apache:http:params:HttpAbstractParamBean.<init>|](v0, v1) @signature [|Lorg/apache/http/params/HttpAbstractParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:params:HttpAbstractParamBean|] @type direct;
#L09d9ba.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParamBean.setConnectionsPerRoute|] ([|org:apache:http:conn:params:ConnManagerParamBean|] v2 @type (this), [|org:apache:http:conn:params:ConnPerRouteBean|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParamBean|] @signature [|Lorg/apache/http/conn/params/ConnManagerParamBean;.setConnectionsPerRoute:(Lorg/apache/http/conn/params/ConnPerRouteBean;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d9cc.   v0:= v2.[|org:apache:http:conn:params:ConnManagerParamBean.params|]   @type object;
#L09d9d0.   v1:= "http.conn-manager.max-per-route" @type (object, string);
#L09d9d4.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09d9da.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParamBean.setMaxTotalConnections|] ([|org:apache:http:conn:params:ConnManagerParamBean|] v2 @type (this), [|int|] v3) @owner [|org:apache:http:conn:params:ConnManagerParamBean|] @signature [|Lorg/apache/http/conn/params/ConnManagerParamBean;.setMaxTotalConnections:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09d9ec.   v0:= v2.[|org:apache:http:conn:params:ConnManagerParamBean.params|]   @type object;
#L09d9f0.   v1:= "http.conn-manager.max-total" @type (object, string);
#L09d9f4.   call temp:=  [|org:apache:http:params:HttpParams.setIntParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09d9fa.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParamBean.setTimeout|] ([|org:apache:http:conn:params:ConnManagerParamBean|] v2 @type (this), [|long|] v3) @owner [|org:apache:http:conn:params:ConnManagerParamBean|] @signature [|Lorg/apache/http/conn/params/ConnManagerParamBean;.setTimeout:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09da0c.   v0:= v2.[|org:apache:http:conn:params:ConnManagerParamBean.params|]   @type object;
#L09da10.   v1:= "http.conn-manager.timeout" @type (object, string);
#L09da14.   call temp:=  [|org:apache:http:params:HttpParams.setLongParameter|](v0, v1, v3, v4) @signature [|Lorg/apache/http/params/HttpParams;.setLongParameter:(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09da1a.   return @void ;

   }
record [|org:apache:http:conn:params:ConnPerRoute|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|org:apache:http:conn:params:ConnPerRoute.getMaxForRoute|] ([|org:apache:http:conn:routing:HttpRoute|] v0 @type (object)) @owner [|org:apache:http:conn:params:ConnPerRoute|] @signature [|Lorg/apache/http/conn/params/ConnPerRoute;.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:params:ConnManagerParams$1|]  @type class @AccessFlag FINAL extends  [|org:apache:http:conn:params:ConnPerRoute|] {
   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams$1.<init>|] ([|org:apache:http:conn:params:ConnManagerParams$1|] v0 @type (this)) @owner [|org:apache:http:conn:params:ConnManagerParams$1|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L09da2c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09da32.   return @void ;

   }
    procedure [|int|] [|org:apache:http:conn:params:ConnManagerParams$1.getMaxForRoute|] ([|org:apache:http:conn:params:ConnManagerParams$1|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParams$1|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams$1;.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09da44.   v0:= 2  @length 4;
#L09da46.   return v0;

   }
record [|org:apache:http:conn:params:ConnManagerParams|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:params:ConnManagerPNames|] {
   }
      global [|org:apache:http:conn:params:ConnPerRoute|] @@[|org:apache:http:conn:params:ConnManagerParams.DEFAULT_CONN_PER_ROUTE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:params:ConnManagerParams.DEFAULT_MAX_TOTAL_CONNECTIONS|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams.<clinit>|] () @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09da58.   v0:= new [|org:apache:http:conn:params:ConnManagerParams$1|];
#L09da5c.   call temp:=  [|org:apache:http:conn:params:ConnManagerParams$1.<init>|](v0) @signature [|Lorg/apache/http/conn/params/ConnManagerParams$1;.<init>:()V|] @classDescriptor [|org:apache:http:conn:params:ConnManagerParams$1|] @type direct;
#L09da62.   @@[|org:apache:http:conn:params:ConnManagerParams.DEFAULT_CONN_PER_ROUTE|] := v0  @type object;
#L09da66.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams.<init>|] ([|org:apache:http:conn:params:ConnManagerParams|] v0 @type (this)) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09da78.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09da7e.   return @void ;

   }
    procedure [|org:apache:http:conn:params:ConnPerRoute|] [|org:apache:http:conn:params:ConnManagerParams.getMaxConnectionsPerRoute|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getMaxConnectionsPerRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/params/ConnPerRoute;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09da90.   if v3 != 0 then goto L09daa4;
#L09da94.   v1:= new [|java:lang:IllegalArgumentException|];
#L09da98.   v2:= "HTTP parameters must not be null." @type (object, string);
#L09da9c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09daa2.   throw v1;
#L09daa4.   v1:= "http.conn-manager.max-per-route" @type (object, string);
#L09daa8.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v1) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09daae.   v0:= temp  @type object;
#L09dab0.   v0:= ([|org:apache:http:conn:params:ConnPerRoute|])v0;
#L09dab4.   if v0 != 0 then goto L09dabc;
#L09dab8.   v0:= @@[|org:apache:http:conn:params:ConnManagerParams.DEFAULT_CONN_PER_ROUTE|]   @type object;
#L09dabc.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:conn:params:ConnManagerParams.getMaxTotalConnections|] ([|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getMaxTotalConnections:(Lorg/apache/http/params/HttpParams;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09dad0.   if v2 != 0 then goto L09dae4;
#L09dad4.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dad8.   v1:= "HTTP parameters must not be null." @type (object, string);
#L09dadc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dae2.   throw v0;
#L09dae4.   v0:= "http.conn-manager.max-total" @type (object, string);
#L09dae8.   v1:= 20  @length 16;
#L09daec.   call temp:=  [|org:apache:http:params:HttpParams.getIntParameter|](v2, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09daf2.   v0:= temp;
#L09daf4.   return v0;

   }
    procedure [|long|] [|org:apache:http:conn:params:ConnManagerParams.getTimeout|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getTimeout:(Lorg/apache/http/params/HttpParams;)J|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09db08.   if v3 != 0 then goto L09db1c;
#L09db0c.   v0:= new [|java:lang:IllegalArgumentException|];
#L09db10.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09db14.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09db1a.   throw v0;
#L09db1c.   v0:= "http.conn-manager.timeout" @type (object, string);
#L09db20.   v1:= 0  @length wide16;
#L09db24.   call temp:=  [|org:apache:http:params:HttpParams.getLongParameter|](v3, v0, v1, v2) @signature [|Lorg/apache/http/params/HttpParams;.getLongParameter:(Ljava/lang/String;J)J|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09db2a.   v0:= temp  @type wide;
#L09db2c.   return v0  @type wide;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams.setMaxConnectionsPerRoute|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|org:apache:http:conn:params:ConnPerRoute|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.setMaxConnectionsPerRoute:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/params/ConnPerRoute;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09db40.   if v2 != 0 then goto L09db54;
#L09db44.   v0:= new [|java:lang:IllegalArgumentException|];
#L09db48.   v1:= "HTTP parameters must not be null." @type (object, string);
#L09db4c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09db52.   throw v0;
#L09db54.   v0:= "http.conn-manager.max-per-route" @type (object, string);
#L09db58.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09db5e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams.setMaxTotalConnections|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.setMaxTotalConnections:(Lorg/apache/http/params/HttpParams;I)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09db70.   if v2 != 0 then goto L09db84;
#L09db74.   v0:= new [|java:lang:IllegalArgumentException|];
#L09db78.   v1:= "HTTP parameters must not be null." @type (object, string);
#L09db7c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09db82.   throw v0;
#L09db84.   v0:= "http.conn-manager.max-total" @type (object, string);
#L09db88.   call temp:=  [|org:apache:http:params:HttpParams.setIntParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09db8e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnManagerParams.setTimeout|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|long|] v3) @owner [|org:apache:http:conn:params:ConnManagerParams|] @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.setTimeout:(Lorg/apache/http/params/HttpParams;J)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09dba0.   if v2 != 0 then goto L09dbb4;
#L09dba4.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dba8.   v1:= "HTTP parameters may not be null" @type (object, string);
#L09dbac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dbb2.   throw v0;
#L09dbb4.   v0:= "http.conn-manager.timeout" @type (object, string);
#L09dbb8.   call temp:=  [|org:apache:http:params:HttpParams.setLongParameter|](v2, v0, v3, v4) @signature [|Lorg/apache/http/params/HttpParams;.setLongParameter:(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09dbbe.   return @void ;

   }
record [|org:apache:http:conn:params:ConnPerRouteBean|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:params:ConnPerRoute|] {
      [|int|] [|org:apache:http:conn:params:ConnPerRouteBean.defaultMax|]    @AccessFlag PRIVATE;
      [|java:util:Map|] [|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|org:apache:http:conn:params:ConnPerRouteBean.DEFAULT_MAX_CONNECTIONS_PER_ROUTE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:params:ConnPerRouteBean.<init>|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v1 @type (this)) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09dbd0.   v0:= 2  @length 4;
#L09dbd2.   call temp:=  [|org:apache:http:conn:params:ConnPerRouteBean.<init>|](v1, v0) @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.<init>:(I)V|] @classDescriptor [|org:apache:http:conn:params:ConnPerRouteBean|] @type direct;
#L09dbd8.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnPerRouteBean.<init>|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09dbec.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09dbf2.   v0:= new [|java:util:HashMap|];
#L09dbf6.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L09dbfc.   v1.[|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]  := v0 @type object;
#L09dc00.   call temp:=  [|org:apache:http:conn:params:ConnPerRouteBean.setDefaultMaxPerRoute|](v1, v2) @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.setDefaultMaxPerRoute:(I)V|] @classDescriptor [|org:apache:http:conn:params:ConnPerRouteBean|] @type virtual;
#L09dc06.   return @void ;

   }
    procedure [|int|] [|org:apache:http:conn:params:ConnPerRouteBean.getDefaultMax|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v1 @type (this)) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.getDefaultMax:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09dc18.   v0:= v1.[|org:apache:http:conn:params:ConnPerRouteBean.defaultMax|] ;
#L09dc1c.   return v0;

   }
    procedure [|int|] [|org:apache:http:conn:params:ConnPerRouteBean.getMaxForRoute|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v3 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v4 @type (object)) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09dc30.   if v4 != 0 then goto L09dc44;
#L09dc34.   v1:= new [|java:lang:IllegalArgumentException|];
#L09dc38.   v2:= "HTTP route may not be null." @type (object, string);
#L09dc3c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dc42.   throw v1;
#L09dc44.   v1:= v3.[|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]   @type object;
#L09dc48.   call temp:=  [|java:util:Map.get|](v1, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L09dc4e.   v0:= temp  @type object;
#L09dc50.   v0:= ([|java:lang:Integer|])v0;
#L09dc54.   if v0 == 0 then goto L09dc62;
#L09dc58.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L09dc5e.   v1:= temp;
#L09dc60.   return v1;
#L09dc62.   v1:= v3.[|org:apache:http:conn:params:ConnPerRouteBean.defaultMax|] ;
#L09dc66.   goto L09dc60;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnPerRouteBean.setDefaultMaxPerRoute|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v2 @type (this), [|int|] v3) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.setDefaultMaxPerRoute:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09dc78.   v0:= 1  @length 4;
#L09dc7a.   if v3 >= v0 then goto L09dc8e;
#L09dc7e.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dc82.   v1:= "The maximum must be greater than 0." @type (object, string);
#L09dc86.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dc8c.   throw v0;
#L09dc8e.   v2.[|org:apache:http:conn:params:ConnPerRouteBean.defaultMax|]  := v3;
#L09dc92.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnPerRouteBean.setMaxForRoute|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object), [|int|] v4) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.setMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09dca4.   if v3 != 0 then goto L09dcb8;
#L09dca8.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dcac.   v1:= "HTTP route may not be null." @type (object, string);
#L09dcb0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dcb6.   throw v0;
#L09dcb8.   v0:= 1  @length 4;
#L09dcba.   if v4 >= v0 then goto L09dcce;
#L09dcbe.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dcc2.   v1:= "The maximum must be greater than 0." @type (object, string);
#L09dcc6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dccc.   throw v0;
#L09dcce.   v0:= v2.[|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]   @type object;
#L09dcd2.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L09dcd8.   v1:= temp  @type object;
#L09dcda.   call temp:=  [|java:util:Map.put|](v0, v3, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L09dce0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnPerRouteBean.setMaxForRoutes|] ([|org:apache:http:conn:params:ConnPerRouteBean|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|org:apache:http:conn:params:ConnPerRouteBean|] @signature [|Lorg/apache/http/conn/params/ConnPerRouteBean;.setMaxForRoutes:(Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09dcf4.   if v2 != 0 then goto L09dcfa;
#L09dcf8.   return @void ;
#L09dcfa.   v0:= v1.[|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]   @type object;
#L09dcfe.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L09dd04.   v0:= v1.[|org:apache:http:conn:params:ConnPerRouteBean.maxPerHostMap|]   @type object;
#L09dd08.   call temp:=  [|java:util:Map.putAll|](v0, v2) @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:Map|] @type interface;
#L09dd0e.   goto L09dcf8;

   }
record [|org:apache:http:conn:params:ConnRouteParamBean|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:HttpAbstractParamBean|] {
   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParamBean.<init>|] ([|org:apache:http:conn:params:ConnRouteParamBean|] v0 @type (this), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParamBean|] @signature [|Lorg/apache/http/conn/params/ConnRouteParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09dd20.   call temp:=  [|org:apache:http:params:HttpAbstractParamBean.<init>|](v0, v1) @signature [|Lorg/apache/http/params/HttpAbstractParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:params:HttpAbstractParamBean|] @type direct;
#L09dd26.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParamBean.setDefaultProxy|] ([|org:apache:http:conn:params:ConnRouteParamBean|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParamBean|] @signature [|Lorg/apache/http/conn/params/ConnRouteParamBean;.setDefaultProxy:(Lorg/apache/http/HttpHost;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09dd38.   v0:= v2.[|org:apache:http:conn:params:ConnRouteParamBean.params|]   @type object;
#L09dd3c.   v1:= "http.route.default-proxy" @type (object, string);
#L09dd40.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09dd46.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParamBean.setForcedRoute|] ([|org:apache:http:conn:params:ConnRouteParamBean|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParamBean|] @signature [|Lorg/apache/http/conn/params/ConnRouteParamBean;.setForcedRoute:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09dd58.   v0:= v2.[|org:apache:http:conn:params:ConnRouteParamBean.params|]   @type object;
#L09dd5c.   v1:= "http.route.forced-route" @type (object, string);
#L09dd60.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09dd66.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParamBean.setLocalAddress|] ([|org:apache:http:conn:params:ConnRouteParamBean|] v2 @type (this), [|java:net:InetAddress|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParamBean|] @signature [|Lorg/apache/http/conn/params/ConnRouteParamBean;.setLocalAddress:(Ljava/net/InetAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09dd78.   v0:= v2.[|org:apache:http:conn:params:ConnRouteParamBean.params|]   @type object;
#L09dd7c.   v1:= "http.route.local-address" @type (object, string);
#L09dd80.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09dd86.   return @void ;

   }
record [|org:apache:http:conn:params:ConnRouteParams|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:params:ConnRoutePNames|] {
   }
      global [|org:apache:http:HttpHost|] @@[|org:apache:http:conn:params:ConnRouteParams.NO_HOST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|org:apache:http:conn:routing:HttpRoute|] @@[|org:apache:http:conn:params:ConnRouteParams.NO_ROUTE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParams.<clinit>|] () @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09dd98.   v0:= new [|org:apache:http:HttpHost|];
#L09dd9c.   v1:= "127.0.0.255" @type (object, string);
#L09dda0.   v2:= 0  @length 4;
#L09dda2.   v3:= "no-host" @type (object, string);
#L09dda6.   call temp:=  [|org:apache:http:HttpHost.<init>|](v0, v1, v2, v3) @signature [|Lorg/apache/http/HttpHost;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpHost|] @type direct;
#L09ddac.   @@[|org:apache:http:conn:params:ConnRouteParams.NO_HOST|] := v0  @type object;
#L09ddb0.   v0:= new [|org:apache:http:conn:routing:HttpRoute|];
#L09ddb4.   v1:= @@[|org:apache:http:conn:params:ConnRouteParams.NO_HOST|]   @type object;
#L09ddb8.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09ddbe.   @@[|org:apache:http:conn:params:ConnRouteParams.NO_ROUTE|] := v0  @type object;
#L09ddc2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParams.<init>|] ([|org:apache:http:conn:params:ConnRouteParams|] v0 @type (this)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09ddd4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09ddda.   return @void ;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:params:ConnRouteParams.getDefaultProxy|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getDefaultProxy:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/HttpHost;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09ddec.   if v3 != 0 then goto L09de00;
#L09ddf0.   v1:= new [|java:lang:IllegalArgumentException|];
#L09ddf4.   v2:= "Parameters must not be null." @type (object, string);
#L09ddf8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ddfe.   throw v1;
#L09de00.   v1:= "http.route.default-proxy" @type (object, string);
#L09de04.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v1) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09de0a.   v0:= temp  @type object;
#L09de0c.   v0:= ([|org:apache:http:HttpHost|])v0;
#L09de10.   if v0 == 0 then goto L09de26;
#L09de14.   v1:= @@[|org:apache:http:conn:params:ConnRouteParams.NO_HOST|]   @type object;
#L09de18.   call temp:=  [|org:apache:http:HttpHost.equals|](v1, v0) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09de1e.   v1:= temp;
#L09de20.   if v1 == 0 then goto L09de26;
#L09de24.   v0:= 0  @length 4;
#L09de26.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:conn:params:ConnRouteParams.getForcedRoute|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getForcedRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09de38.   if v3 != 0 then goto L09de4c;
#L09de3c.   v1:= new [|java:lang:IllegalArgumentException|];
#L09de40.   v2:= "Parameters must not be null." @type (object, string);
#L09de44.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09de4a.   throw v1;
#L09de4c.   v1:= "http.route.forced-route" @type (object, string);
#L09de50.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v1) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09de56.   v0:= temp  @type object;
#L09de58.   v0:= ([|org:apache:http:conn:routing:HttpRoute|])v0;
#L09de5c.   if v0 == 0 then goto L09de72;
#L09de60.   v1:= @@[|org:apache:http:conn:params:ConnRouteParams.NO_ROUTE|]   @type object;
#L09de64.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.equals|](v1, v0) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L09de6a.   v1:= temp;
#L09de6c.   if v1 == 0 then goto L09de72;
#L09de70.   v0:= 0  @length 4;
#L09de72.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:conn:params:ConnRouteParams.getLocalAddress|] ([|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getLocalAddress:(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09de84.   if v3 != 0 then goto L09de98;
#L09de88.   v1:= new [|java:lang:IllegalArgumentException|];
#L09de8c.   v2:= "Parameters must not be null." @type (object, string);
#L09de90.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09de96.   throw v1;
#L09de98.   v1:= "http.route.local-address" @type (object, string);
#L09de9c.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v1) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09dea2.   v0:= temp  @type object;
#L09dea4.   v0:= ([|java:net:InetAddress|])v0;
#L09dea8.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParams.setDefaultProxy|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|org:apache:http:HttpHost|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.setDefaultProxy:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/HttpHost;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09debc.   if v2 != 0 then goto L09ded0;
#L09dec0.   v0:= new [|java:lang:IllegalArgumentException|];
#L09dec4.   v1:= "Parameters must not be null." @type (object, string);
#L09dec8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09dece.   throw v0;
#L09ded0.   v0:= "http.route.default-proxy" @type (object, string);
#L09ded4.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09deda.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParams.setForcedRoute|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.setForcedRoute:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09deec.   if v2 != 0 then goto L09df00;
#L09def0.   v0:= new [|java:lang:IllegalArgumentException|];
#L09def4.   v1:= "Parameters must not be null." @type (object, string);
#L09def8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09defe.   throw v0;
#L09df00.   v0:= "http.route.forced-route" @type (object, string);
#L09df04.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09df0a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:params:ConnRouteParams.setLocalAddress|] ([|org:apache:http:params:HttpParams|] v2 @type (object), [|java:net:InetAddress|] v3 @type (object)) @owner [|org:apache:http:conn:params:ConnRouteParams|] @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.setLocalAddress:(Lorg/apache/http/params/HttpParams;Ljava/net/InetAddress;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L09df1c.   if v2 != 0 then goto L09df30;
#L09df20.   v0:= new [|java:lang:IllegalArgumentException|];
#L09df24.   v1:= "Parameters must not be null." @type (object, string);
#L09df28.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09df2e.   throw v0;
#L09df30.   v0:= "http.route.local-address" @type (object, string);
#L09df34.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v2, v0, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L09df3a.   return @void ;

   }
record [|org:apache:http:conn:routing:HttpRouteDirector|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.COMPLETE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.CONNECT_PROXY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.CONNECT_TARGET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.LAYER_PROTOCOL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.TUNNEL_PROXY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.TUNNEL_TARGET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:conn:routing:HttpRouteDirector.UNREACHABLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|int|] [|org:apache:http:conn:routing:HttpRouteDirector.nextStep|] ([|org:apache:http:conn:routing:RouteInfo|] v0 @type (object), [|org:apache:http:conn:routing:RouteInfo|] v1 @type (object)) @owner [|org:apache:http:conn:routing:HttpRouteDirector|] @signature [|Lorg/apache/http/conn/routing/HttpRouteDirector;.nextStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:routing:BasicRouteDirector|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:routing:HttpRouteDirector|] {
   }
    procedure [|void|] [|org:apache:http:conn:routing:BasicRouteDirector.<init>|] ([|org:apache:http:conn:routing:BasicRouteDirector|] v0 @type (this)) @owner [|org:apache:http:conn:routing:BasicRouteDirector|] @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09df4c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09df52.   return @void ;

   }
    procedure [|int|] [|org:apache:http:conn:routing:BasicRouteDirector.directStep|] ([|org:apache:http:conn:routing:BasicRouteDirector|] v3 @type (this), [|org:apache:http:conn:routing:RouteInfo|] v4 @type (object), [|org:apache:http:conn:routing:RouteInfo|] v5 @type (object)) @owner [|org:apache:http:conn:routing:BasicRouteDirector|] @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.directStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L09df64.   v0:= -1  @length 4;
#L09df66.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09df6c.   v1:= temp;
#L09df6e.   v2:= 1  @length 4;
#L09df70.   if v1 <= v2 then goto L09df76;
#L09df74.   return v0;
#L09df76.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getTargetHost|](v4) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09df7c.   v1:= temp  @type object;
#L09df7e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getTargetHost|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09df84.   v2:= temp  @type object;
#L09df86.   call temp:=  [|org:apache:http:HttpHost.equals|](v1, v2) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09df8c.   v1:= temp;
#L09df8e.   if v1 == 0 then goto L09df74;
#L09df92.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isSecure|](v4) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09df98.   v1:= temp;
#L09df9a.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isSecure|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09dfa0.   v2:= temp;
#L09dfa2.   if v1 != v2 then goto L09df74;
#L09dfa6.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getLocalAddress|](v4) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09dfac.   v1:= temp  @type object;
#L09dfae.   if v1 == 0 then goto L09dfce;
#L09dfb2.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getLocalAddress|](v4) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09dfb8.   v1:= temp  @type object;
#L09dfba.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getLocalAddress|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09dfc0.   v2:= temp  @type object;
#L09dfc2.   call temp:=  [|java:net:InetAddress.equals|](v1, v2) @signature [|Ljava/net/InetAddress;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L09dfc8.   v1:= temp;
#L09dfca.   if v1 == 0 then goto L09df74;
#L09dfce.   v0:= 0  @length 4;
#L09dfd0.   goto L09df74;

   }
    procedure [|int|] [|org:apache:http:conn:routing:BasicRouteDirector.firstStep|] ([|org:apache:http:conn:routing:BasicRouteDirector|] v2 @type (this), [|org:apache:http:conn:routing:RouteInfo|] v3 @type (object)) @owner [|org:apache:http:conn:routing:BasicRouteDirector|] @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.firstStep:(Lorg/apache/http/conn/routing/RouteInfo;)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L09dfe4.   v0:= 1  @length 4;
#L09dfe6.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v3) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09dfec.   v1:= temp;
#L09dfee.   if v1 <= v0 then goto L09dff4;
#L09dff2.   v0:= 2  @length 4;
#L09dff4.   return v0;

   }
    procedure [|int|] [|org:apache:http:conn:routing:BasicRouteDirector.nextStep|] ([|org:apache:http:conn:routing:BasicRouteDirector|] v3 @type (this), [|org:apache:http:conn:routing:RouteInfo|] v4 @type (object), [|org:apache:http:conn:routing:RouteInfo|] v5 @type (object)) @owner [|org:apache:http:conn:routing:BasicRouteDirector|] @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.nextStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09e008.   v2:= 1  @length 4;
#L09e00a.   if v4 != 0 then goto L09e01e;
#L09e00e.   v1:= new [|java:lang:IllegalArgumentException|];
#L09e012.   v2:= "Planned route may not be null." @type (object, string);
#L09e016.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e01c.   throw v1;
#L09e01e.   v0:= -1  @length 4;
#L09e020.   if v5 == 0 then goto L09e030;
#L09e024.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e02a.   v1:= temp;
#L09e02c.   if v1 >= v2 then goto L09e03a;
#L09e030.   call temp:=  [|org:apache:http:conn:routing:BasicRouteDirector.firstStep|](v3, v4) @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.firstStep:(Lorg/apache/http/conn/routing/RouteInfo;)I|] @classDescriptor [|org:apache:http:conn:routing:BasicRouteDirector|] @type virtual;
#L09e036.   v0:= temp;
#L09e038.   return v0;
#L09e03a.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v4) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e040.   v1:= temp;
#L09e042.   if v1 <= v2 then goto L09e050;
#L09e046.   call temp:=  [|org:apache:http:conn:routing:BasicRouteDirector.proxiedStep|](v3, v4, v5) @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.proxiedStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @classDescriptor [|org:apache:http:conn:routing:BasicRouteDirector|] @type virtual;
#L09e04c.   v0:= temp;
#L09e04e.   goto L09e038;
#L09e050.   call temp:=  [|org:apache:http:conn:routing:BasicRouteDirector.directStep|](v3, v4, v5) @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.directStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @classDescriptor [|org:apache:http:conn:routing:BasicRouteDirector|] @type virtual;
#L09e056.   v0:= temp;
#L09e058.   goto L09e038;

   }
    procedure [|int|] [|org:apache:http:conn:routing:BasicRouteDirector.proxiedStep|] ([|org:apache:http:conn:routing:BasicRouteDirector|] v6 @type (this), [|org:apache:http:conn:routing:RouteInfo|] v7 @type (object), [|org:apache:http:conn:routing:RouteInfo|] v8 @type (object)) @owner [|org:apache:http:conn:routing:BasicRouteDirector|] @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.proxiedStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09e06c.   v3:= -1  @length 4;
#L09e06e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e074.   v4:= temp;
#L09e076.   v5:= 1  @length 4;
#L09e078.   if v4 > v5 then goto L09e07e;
#L09e07c.   return v3;
#L09e07e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getTargetHost|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e084.   v4:= temp  @type object;
#L09e086.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getTargetHost|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e08c.   v5:= temp  @type object;
#L09e08e.   call temp:=  [|org:apache:http:HttpHost.equals|](v4, v5) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e094.   v4:= temp;
#L09e096.   if v4 == 0 then goto L09e07c;
#L09e09a.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0a0.   v2:= temp;
#L09e0a2.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopCount|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0a8.   v0:= temp;
#L09e0aa.   if v2 < v0 then goto L09e07c;
#L09e0ae.   v1:= 0  @length 4;
#L09e0b0.   v4:= v0 + -1;
#L09e0b4.   if v1 >= v4 then goto L09e0da;
#L09e0b8.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopTarget|](v7, v1) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0be.   v4:= temp  @type object;
#L09e0c0.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.getHopTarget|](v8, v1) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0c6.   v5:= temp  @type object;
#L09e0c8.   call temp:=  [|org:apache:http:HttpHost.equals|](v4, v5) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e0ce.   v4:= temp;
#L09e0d0.   if v4 == 0 then goto L09e07c;
#L09e0d4.   v1:= v1 + 1;
#L09e0d8.   goto L09e0b0;
#L09e0da.   if v2 <= v0 then goto L09e0e2;
#L09e0de.   v3:= 4  @length 4;
#L09e0e0.   goto L09e07c;
#L09e0e2.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isTunnelled|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0e8.   v4:= temp;
#L09e0ea.   if v4 == 0 then goto L09e0fa;
#L09e0ee.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isTunnelled|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e0f4.   v4:= temp;
#L09e0f6.   if v4 == 0 then goto L09e07c;
#L09e0fa.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isLayered|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e100.   v4:= temp;
#L09e102.   if v4 == 0 then goto L09e112;
#L09e106.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isLayered|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e10c.   v4:= temp;
#L09e10e.   if v4 == 0 then goto L09e07c;
#L09e112.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isTunnelled|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e118.   v4:= temp;
#L09e11a.   if v4 == 0 then goto L09e12e;
#L09e11e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isTunnelled|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e124.   v4:= temp;
#L09e126.   if v4 != 0 then goto L09e12e;
#L09e12a.   v3:= 3  @length 4;
#L09e12c.   goto L09e07c;
#L09e12e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isLayered|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e134.   v4:= temp;
#L09e136.   if v4 == 0 then goto L09e14a;
#L09e13a.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isLayered|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e140.   v4:= temp;
#L09e142.   if v4 != 0 then goto L09e14a;
#L09e146.   v3:= 5  @length 4;
#L09e148.   goto L09e07c;
#L09e14a.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isSecure|](v7) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e150.   v4:= temp;
#L09e152.   call temp:=  [|org:apache:http:conn:routing:RouteInfo.isSecure|](v8) @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo|] @type interface;
#L09e158.   v5:= temp;
#L09e15a.   if v4 != v5 then goto L09e07c;
#L09e15e.   v3:= 0  @length 4;
#L09e160.   goto L09e07c;

   }
record [|org:apache:http:conn:routing:RouteInfo|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|org:apache:http:conn:routing:RouteInfo.getHopCount|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteInfo.getHopTarget|] ([|int|] v0) @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:RouteInfo.getLayerType|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getLayerType:()Lorg/apache/http/conn/routing/RouteInfo$LayerType;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:InetAddress|] [|org:apache:http:conn:routing:RouteInfo.getLocalAddress|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteInfo.getProxyHost|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getProxyHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteInfo.getTargetHost|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTargetHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:RouteInfo.getTunnelType|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.getTunnelType:()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteInfo.isLayered|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isLayered:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteInfo.isSecure|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isSecure:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteInfo.isTunnelled|] () @owner [|org:apache:http:conn:routing:RouteInfo|] @signature [|Lorg/apache/http/conn/routing/RouteInfo;.isTunnelled:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:routing:HttpRoute|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:routing:RouteInfo|], [|java:lang:Cloneable|] {
      [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:HttpRoute.layered|]    @AccessFlag PRIVATE_FINAL;
      [|java:net:InetAddress|] [|org:apache:http:conn:routing:HttpRoute.localAddress|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:HttpHost|][] [|org:apache:http:conn:routing:HttpRoute.proxyChain|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:conn:routing:HttpRoute.secure|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:HttpRoute.targetHost|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:HttpRoute.tunnelled|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v2 @type (this), [|java:net:InetAddress|] v3 @type (object), [|org:apache:http:HttpHost|] v4 @type (object), [|org:apache:http:HttpHost|][] v5 @type (object), [|boolean|] v6, [|org:apache:http:conn:routing:RouteInfo$TunnelType|] v7 @type (object), [|org:apache:http:conn:routing:RouteInfo$LayerType|] v8 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09e174.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09e17a.   if v4 != 0 then goto L09e18e;
#L09e17e.   v0:= new [|java:lang:IllegalArgumentException|];
#L09e182.   v1:= "Target host may not be null." @type (object, string);
#L09e186.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e18c.   throw v0;
#L09e18e.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09e192.   if v7 != v0 then goto L09e1aa;
#L09e196.   if v5 != 0 then goto L09e1aa;
#L09e19a.   v0:= new [|java:lang:IllegalArgumentException|];
#L09e19e.   v1:= "Proxy required if tunnelled." @type (object, string);
#L09e1a2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e1a8.   throw v0;
#L09e1aa.   if v7 != 0 then goto L09e1b2;
#L09e1ae.   v7:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e1b2.   if v8 != 0 then goto L09e1ba;
#L09e1b6.   v8:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e1ba.   v2.[|org:apache:http:conn:routing:HttpRoute.targetHost|]  := v4 @type object;
#L09e1be.   v2.[|org:apache:http:conn:routing:HttpRoute.localAddress|]  := v3 @type object;
#L09e1c2.   v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]  := v5 @type object;
#L09e1c6.   v2.[|org:apache:http:conn:routing:HttpRoute.secure|]  := v6 @boolean;
#L09e1ca.   v2.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]  := v7 @type object;
#L09e1ce.   v2.[|org:apache:http:conn:routing:HttpRoute.layered|]  := v8 @type object;
#L09e1d2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e1e4.   v1:= 0  @length 4;
#L09e1e6.   v4:= 0  @length 4;
#L09e1e8.   v5:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e1ec.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e1f0.   v0:= v7  @type object;
#L09e1f2.   v2:= v8  @type object;
#L09e1f4.   v3:= v1  @type object;
#L09e1f6.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09e1fc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|java:net:InetAddress|] v9 @type (object), [|org:apache:http:HttpHost|] v10 @type (object), [|boolean|] v11) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e210.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.toChain|](v10) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toChain:(Lorg/apache/http/HttpHost;)[Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type static;
#L09e216.   v3:= temp  @type object;
#L09e218.   if v11 == 0 then goto L09e24a;
#L09e21c.   v5:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09e220.   if v11 == 0 then goto L09e250;
#L09e224.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09e228.   v0:= v7  @type object;
#L09e22a.   v1:= v9  @type object;
#L09e22c.   v2:= v8  @type object;
#L09e22e.   v4:= v11;
#L09e230.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09e236.   if v10 != 0 then goto L09e256;
#L09e23a.   v0:= new [|java:lang:IllegalArgumentException|];
#L09e23e.   v1:= "Proxy host may not be null." @type (object, string);
#L09e242.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e248.   throw v0;
#L09e24a.   v5:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e24e.   goto L09e220;
#L09e250.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e254.   goto L09e228;
#L09e256.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|java:net:InetAddress|] v9 @type (object), [|org:apache:http:HttpHost|] v10 @type (object), [|boolean|] v11, [|org:apache:http:conn:routing:RouteInfo$TunnelType|] v12 @type (object), [|org:apache:http:conn:routing:RouteInfo$LayerType|] v13 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e268.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.toChain|](v10) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toChain:(Lorg/apache/http/HttpHost;)[Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type static;
#L09e26e.   v3:= temp  @type object;
#L09e270.   v0:= v7  @type object;
#L09e272.   v1:= v9  @type object;
#L09e274.   v2:= v8  @type object;
#L09e276.   v4:= v11;
#L09e278.   v5:= v12  @type object;
#L09e27a.   v6:= v13  @type object;
#L09e27c.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09e282.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|java:net:InetAddress|] v9 @type (object), [|boolean|] v10) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e294.   v3:= 0  @length 4;
#L09e296.   v5:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e29a.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e29e.   v0:= v7  @type object;
#L09e2a0.   v1:= v9  @type object;
#L09e2a2.   v2:= v8  @type object;
#L09e2a4.   v4:= v10;
#L09e2a6.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09e2ac.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:HttpRoute.<init>|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|java:net:InetAddress|] v9 @type (object), [|org:apache:http:HttpHost|][] v10 @type (object), [|boolean|] v11, [|org:apache:http:conn:routing:RouteInfo$TunnelType|] v12 @type (object), [|org:apache:http:conn:routing:RouteInfo$LayerType|] v13 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e2c0.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.toChain|](v10) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toChain:([Lorg/apache/http/HttpHost;)[Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type static;
#L09e2c6.   v3:= temp  @type object;
#L09e2c8.   v0:= v7  @type object;
#L09e2ca.   v1:= v9  @type object;
#L09e2cc.   v2:= v8  @type object;
#L09e2ce.   v4:= v11;
#L09e2d0.   v5:= v12  @type object;
#L09e2d2.   v6:= v13  @type object;
#L09e2d4.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Ljava/net/InetAddress;Lorg/apache/http/HttpHost;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09e2da.   return @void ;

   }
    procedure [|org:apache:http:HttpHost|][] [|org:apache:http:conn:routing:HttpRoute.toChain|] ([|org:apache:http:HttpHost|] v2 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toChain:(Lorg/apache/http/HttpHost;)[Lorg/apache/http/HttpHost;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L09e2ec.   if v2 != 0 then goto L09e2f4;
#L09e2f0.   v0:= 0  @length 4;
#L09e2f2.   return v0  @type object;
#L09e2f4.   v0:= 1  @length 4;
#L09e2f6.   v0:= new [|org:apache:http:HttpHost|][v0];
#L09e2fa.   v1:= 0  @length 4;
#L09e2fc.   v0[v1]:= v2  @type object;
#L09e300.   goto L09e2f2;

   }
    procedure [|org:apache:http:HttpHost|][] [|org:apache:http:conn:routing:HttpRoute.toChain|] ([|org:apache:http:HttpHost|][] v8 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toChain:([Lorg/apache/http/HttpHost;)[Lorg/apache/http/HttpHost;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L09e314.   v7:= 0  @length 4;
#L09e316.   if v8 == 0 then goto L09e322;
#L09e31a.   v5:= v8.length;
#L09e31c.   v6:= 1  @length 4;
#L09e31e.   if v5 >= v6 then goto L09e326;
#L09e322.   v4:= 0  @length 4;
#L09e324.   return v4  @type object;
#L09e326.   v0:= v8  @type object;
#L09e328.   v2:= v0.length;
#L09e32a.   v1:= 0  @length 4;
#L09e32c.   if v1 >= v2 then goto L09e34e;
#L09e330.   v3:= v0[v1]  @type object;
#L09e334.   if v3 != 0 then goto L09e348;
#L09e338.   v5:= new [|java:lang:IllegalArgumentException|];
#L09e33c.   v6:= "Proxy chain may not contain null elements." @type (object, string);
#L09e340.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e346.   throw v5;
#L09e348.   v1:= v1 + 1;
#L09e34c.   goto L09e32c;
#L09e34e.   v5:= v8.length;
#L09e350.   v4:= new [|org:apache:http:HttpHost|][v5];
#L09e354.   v5:= v8.length;
#L09e356.   call temp:=  [|java:lang:System.arraycopy|](v8, v7, v4, v7, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L09e35c.   goto L09e324;

   }
    procedure [|java:lang:Object|] [|org:apache:http:conn:routing:HttpRoute.clone|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09e370.   call temp:=  [|java:lang:Object.clone|](v1) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L09e376.   v0:= temp  @type object;
#L09e378.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:HttpRoute.equals|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e38c.   v5:= 1  @length 4;
#L09e38e.   v4:= 0  @length 4;
#L09e390.   if v8 != v7 then goto L09e396;
#L09e394.   return v5;
#L09e396.   v3:= instanceof @varname v8 @type [|org:apache:http:conn:routing:HttpRoute|];
#L09e39a.   if v3 != 0 then goto L09e3a2;
#L09e39e.   v5:= v4;
#L09e3a0.   goto L09e394;
#L09e3a2.   v2:= v8  @type object;
#L09e3a4.   v2:= ([|org:apache:http:conn:routing:HttpRoute|])v2;
#L09e3a8.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e3ac.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e3b0.   call temp:=  [|org:apache:http:HttpHost.equals|](v3, v6) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e3b6.   v0:= temp;
#L09e3b8.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e3bc.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e3c0.   if v3 == v6 then goto L09e3e0;
#L09e3c4.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e3c8.   if v3 == 0 then goto L09e474;
#L09e3cc.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e3d0.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e3d4.   call temp:=  [|java:net:InetAddress.equals|](v3, v6) @signature [|Ljava/net/InetAddress;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L09e3da.   v3:= temp;
#L09e3dc.   if v3 == 0 then goto L09e474;
#L09e3e0.   v3:= v5;
#L09e3e2.   v0:= v0 ^& v3  @type int;
#L09e3e4.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e3e8.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e3ec.   if v3 == v6 then goto L09e410;
#L09e3f0.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e3f4.   if v3 == 0 then goto L09e478;
#L09e3f8.   v3:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e3fc.   if v3 == 0 then goto L09e478;
#L09e400.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e404.   v3:= v3.length;
#L09e406.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e40a.   v6:= v6.length;
#L09e40c.   if v3 != v6 then goto L09e478;
#L09e410.   v3:= v5;
#L09e412.   v0:= v0 ^& v3  @type int;
#L09e414.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.secure|]   @boolean;
#L09e418.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.secure|]   @boolean;
#L09e41c.   if v3 != v6 then goto L09e47c;
#L09e420.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e424.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e428.   if v3 != v6 then goto L09e47c;
#L09e42c.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e430.   v6:= v2.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e434.   if v3 != v6 then goto L09e47c;
#L09e438.   v0:= v0 ^& v5  @type int;
#L09e43a.   if v0 == 0 then goto L09e480;
#L09e43e.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e442.   if v3 == 0 then goto L09e480;
#L09e446.   v1:= 0  @length 4;
#L09e448.   if v0 == 0 then goto L09e480;
#L09e44c.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e450.   v3:= v3.length;
#L09e452.   if v1 >= v3 then goto L09e480;
#L09e456.   v3:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e45a.   v3:= v3[v1]  @type object;
#L09e45e.   v4:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e462.   v4:= v4[v1]  @type object;
#L09e466.   call temp:=  [|org:apache:http:HttpHost.equals|](v3, v4) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e46c.   v0:= temp;
#L09e46e.   v1:= v1 + 1;
#L09e472.   goto L09e448;
#L09e474.   v3:= v4;
#L09e476.   goto L09e3e2;
#L09e478.   v3:= v4;
#L09e47a.   goto L09e412;
#L09e47c.   v5:= v4;
#L09e47e.   goto L09e438;
#L09e480.   v5:= v0;
#L09e482.   goto L09e394;

   }
    procedure [|int|] [|org:apache:http:conn:routing:HttpRoute.getHopCount|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopCount:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e494.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e498.   if v0 != 0 then goto L09e4a0;
#L09e49c.   v0:= 1  @length 4;
#L09e49e.   return v0;
#L09e4a0.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e4a4.   v0:= v0.length;
#L09e4a6.   v0:= v0 + 1;
#L09e4aa.   goto L09e49e;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:HttpRoute.getHopTarget|] ([|org:apache:http:conn:routing:HttpRoute|] v5 @type (this), [|int|] v6) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09e4bc.   if v6 >= 0 then goto L09e4f2;
#L09e4c0.   v2:= new [|java:lang:IllegalArgumentException|];
#L09e4c4.   v3:= new [|java:lang:StringBuilder|];
#L09e4c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09e4ce.   v4:= "Hop index must not be negative: " @type (object, string);
#L09e4d2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e4d8.   v3:= temp  @type object;
#L09e4da.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e4e0.   v3:= temp  @type object;
#L09e4e2.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e4e8.   v3:= temp  @type object;
#L09e4ea.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e4f0.   throw v2;
#L09e4f2.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getHopCount|](v5) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L09e4f8.   v0:= temp;
#L09e4fa.   if v6 < v0 then goto L09e544;
#L09e4fe.   v2:= new [|java:lang:IllegalArgumentException|];
#L09e502.   v3:= new [|java:lang:StringBuilder|];
#L09e506.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09e50c.   v4:= "Hop index " @type (object, string);
#L09e510.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e516.   v3:= temp  @type object;
#L09e518.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e51e.   v3:= temp  @type object;
#L09e520.   v4:= " exceeds route length " @type (object, string);
#L09e524.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e52a.   v3:= temp  @type object;
#L09e52c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e532.   v3:= temp  @type object;
#L09e534.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e53a.   v3:= temp  @type object;
#L09e53c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e542.   throw v2;
#L09e544.   v1:= 0  @length 4;
#L09e546.   v2:= v0 + -1;
#L09e54a.   if v6 >= v2 then goto L09e558;
#L09e54e.   v2:= v5.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e552.   v1:= v2[v6]  @type object;
#L09e556.   return v1  @type object;
#L09e558.   v1:= v5.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e55c.   goto L09e556;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:HttpRoute.getLayerType|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getLayerType:()Lorg/apache/http/conn/routing/RouteInfo$LayerType;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e570.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e574.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:conn:routing:HttpRoute.getLocalAddress|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e588.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e58c.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:HttpRoute.getProxyHost|] ([|org:apache:http:conn:routing:HttpRoute|] v2 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09e5a0.   v0:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e5a4.   if v0 != 0 then goto L09e5ac;
#L09e5a8.   v0:= 0  @length 4;
#L09e5aa.   return v0  @type object;
#L09e5ac.   v0:= v2.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e5b0.   v1:= 0  @length 4;
#L09e5b2.   v0:= v0[v1]  @type object;
#L09e5b6.   goto L09e5aa;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:HttpRoute.getTargetHost|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e5c8.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e5cc.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:HttpRoute.getTunnelType|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTunnelType:()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e5e0.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e5e4.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:conn:routing:HttpRoute.hashCode|] ([|org:apache:http:conn:routing:HttpRoute|] v6 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.hashCode:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09e5f8.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e5fc.   call temp:=  [|org:apache:http:HttpHost.hashCode|](v5) @signature [|Lorg/apache/http/HttpHost;.hashCode:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e602.   v2:= temp;
#L09e604.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e608.   if v5 == 0 then goto L09e61a;
#L09e60c.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e610.   call temp:=  [|java:net:InetAddress.hashCode|](v5) @signature [|Ljava/net/InetAddress;.hashCode:()I|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L09e616.   v5:= temp;
#L09e618.   v2:= v2 ^~ v5  @type int;
#L09e61a.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e61e.   if v5 == 0 then goto L09e64a;
#L09e622.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e626.   v5:= v5.length;
#L09e628.   v2:= v2 ^~ v5  @type int;
#L09e62a.   v1:= v6.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e62e.   v4:= v1.length;
#L09e630.   v3:= 0  @length 4;
#L09e632.   if v3 >= v4 then goto L09e64a;
#L09e636.   v0:= v1[v3]  @type object;
#L09e63a.   call temp:=  [|org:apache:http:HttpHost.hashCode|](v0) @signature [|Lorg/apache/http/HttpHost;.hashCode:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09e640.   v5:= temp;
#L09e642.   v2:= v2 ^~ v5  @type int;
#L09e644.   v3:= v3 + 1;
#L09e648.   goto L09e632;
#L09e64a.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.secure|]   @boolean;
#L09e64e.   if v5 == 0 then goto L09e65a;
#L09e652.    v5:= 0.000000;
#L09e658.   v2:= v2 ^~ v5  @type int;
#L09e65a.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e65e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$TunnelType.hashCode|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.hashCode:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @type virtual;
#L09e664.   v5:= temp;
#L09e666.   v2:= v2 ^~ v5  @type int;
#L09e668.   v5:= v6.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e66c.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$LayerType.hashCode|](v5) @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.hashCode:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$LayerType|] @type virtual;
#L09e672.   v5:= temp;
#L09e674.   v2:= v2 ^~ v5  @type int;
#L09e676.   return v2;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:HttpRoute.isLayered|] ([|org:apache:http:conn:routing:HttpRoute|] v2 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.isLayered:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09e688.   v0:= v2.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e68c.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09e690.   if v0 != v1 then goto L09e698;
#L09e694.   v0:= 1  @length 4;
#L09e696.   return v0;
#L09e698.   v0:= 0  @length 4;
#L09e69a.   goto L09e696;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:HttpRoute.isSecure|] ([|org:apache:http:conn:routing:HttpRoute|] v1 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.isSecure:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09e6ac.   v0:= v1.[|org:apache:http:conn:routing:HttpRoute.secure|]   @boolean;
#L09e6b0.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:HttpRoute.isTunnelled|] ([|org:apache:http:conn:routing:HttpRoute|] v2 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.isTunnelled:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09e6c4.   v0:= v2.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e6c8.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09e6cc.   if v0 != v1 then goto L09e6d4;
#L09e6d0.   v0:= 1  @length 4;
#L09e6d2.   return v0;
#L09e6d4.   v0:= 0  @length 4;
#L09e6d6.   goto L09e6d2;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:routing:HttpRoute.toString|] ([|org:apache:http:conn:routing:HttpRoute|] v7 @type (this)) @owner [|org:apache:http:conn:routing:HttpRoute|] @signature [|Lorg/apache/http/conn/routing/HttpRoute;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09e6e8.   v2:= new [|java:lang:StringBuilder|];
#L09e6ec.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getHopCount|](v7) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L09e6f2.   v5:= temp;
#L09e6f4.   v5:= v5 * 30;
#L09e6f8.   v5:= v5 + 50;
#L09e6fc.   call temp:=  [|java:lang:StringBuilder.<init>|](v2, v5) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09e702.   v5:= "HttpRoute[" @type (object, string);
#L09e706.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e70c.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e710.   if v5 == 0 then goto L09e728;
#L09e714.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.localAddress|]   @type object;
#L09e718.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e71e.   v5:= "->" @type (object, string);
#L09e722.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e728.   v5:= 123  @length 16;
#L09e72c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e732.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.tunnelled|]   @type object;
#L09e736.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09e73a.   if v5 != v6 then goto L09e748;
#L09e73e.   v5:= 116  @length 16;
#L09e742.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e748.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.layered|]   @type object;
#L09e74c.   v6:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09e750.   if v5 != v6 then goto L09e75e;
#L09e754.   v5:= 108  @length 16;
#L09e758.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e75e.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.secure|]   @boolean;
#L09e762.   if v5 == 0 then goto L09e770;
#L09e766.   v5:= 115  @length 16;
#L09e76a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e770.   v5:= "}->" @type (object, string);
#L09e774.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e77a.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e77e.   if v5 == 0 then goto L09e7a8;
#L09e782.   v1:= v7.[|org:apache:http:conn:routing:HttpRoute.proxyChain|]   @type object;
#L09e786.   v4:= v1.length;
#L09e788.   v3:= 0  @length 4;
#L09e78a.   if v3 >= v4 then goto L09e7a8;
#L09e78e.   v0:= v1[v3]  @type object;
#L09e792.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e798.   v5:= "->" @type (object, string);
#L09e79c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e7a2.   v3:= v3 + 1;
#L09e7a6.   goto L09e78a;
#L09e7a8.   v5:= v7.[|org:apache:http:conn:routing:HttpRoute.targetHost|]   @type object;
#L09e7ac.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e7b2.   v5:= 93  @length 16;
#L09e7b6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e7bc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09e7c2.   v5:= temp  @type object;
#L09e7c4.   return v5  @type object;

   }
record [|org:apache:http:conn:routing:HttpRoutePlanner|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:conn:routing:HttpRoutePlanner.determineRoute|] ([|org:apache:http:HttpHost|] v0 @type (object), [|org:apache:http:HttpRequest|] v1 @type (object), [|org:apache:http:protocol:HttpContext|] v2 @type (object)) @owner [|org:apache:http:conn:routing:HttpRoutePlanner|] @signature [|Lorg/apache/http/conn/routing/HttpRoutePlanner;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:routing:RouteInfo$LayerType|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:http:conn:routing:RouteInfo$LayerType|][] @@[|org:apache:http:conn:routing:RouteInfo$LayerType.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:http:conn:routing:RouteInfo$LayerType|] @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:conn:routing:RouteInfo$LayerType|] @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:http:conn:routing:RouteInfo$LayerType.<clinit>|] () @owner [|org:apache:http:conn:routing:RouteInfo$LayerType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09e7d8.   v3:= 1  @length 4;
#L09e7da.   v2:= 0  @length 4;
#L09e7dc.   v0:= new [|org:apache:http:conn:routing:RouteInfo$LayerType|];
#L09e7e0.   v1:= "PLAIN" @type (object, string);
#L09e7e4.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$LayerType.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$LayerType|] @type direct;
#L09e7ea.   @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|] := v0  @type object;
#L09e7ee.   v0:= new [|org:apache:http:conn:routing:RouteInfo$LayerType|];
#L09e7f2.   v1:= "LAYERED" @type (object, string);
#L09e7f6.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$LayerType.<init>|](v0, v1, v3) @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$LayerType|] @type direct;
#L09e7fc.   @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|] := v0  @type object;
#L09e800.   v0:= 2  @length 4;
#L09e802.   v0:= new [|org:apache:http:conn:routing:RouteInfo$LayerType|][v0];
#L09e806.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e80a.   v0[v2]:= v1  @type object;
#L09e80e.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09e812.   v0[v3]:= v1  @type object;
#L09e816.   @@[|org:apache:http:conn:routing:RouteInfo$LayerType.$VALUES|] := v0  @type object;
#L09e81a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteInfo$LayerType.<init>|] ([|org:apache:http:conn:routing:RouteInfo$LayerType|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:http:conn:routing:RouteInfo$LayerType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09e82c.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L09e832.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:RouteInfo$LayerType.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:routing:RouteInfo$LayerType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.valueOf:(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$LayerType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09e844.   v0:= new [|org:apache:http:conn:routing:RouteInfo$LayerType|];
#L09e848.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L09e84e.   v0:= temp  @type object;
#L09e850.   v0:= ([|org:apache:http:conn:routing:RouteInfo$LayerType|])v0;
#L09e854.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$LayerType|][] [|org:apache:http:conn:routing:RouteInfo$LayerType.values|] () @owner [|org:apache:http:conn:routing:RouteInfo$LayerType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.values:()[Lorg/apache/http/conn/routing/RouteInfo$LayerType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09e868.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.$VALUES|]   @type object;
#L09e86c.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$LayerType[].clone|](v0) @signature [|[Lorg/apache/http/conn/routing/RouteInfo$LayerType;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$LayerType[]|] @type virtual;
#L09e872.   v0:= temp  @type object;
#L09e874.   v0:= ([|org:apache:http:conn:routing:RouteInfo$LayerType|][])v0;
#L09e878.   return v0  @type object;

   }
record [|org:apache:http:conn:routing:RouteInfo$TunnelType|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:http:conn:routing:RouteInfo$TunnelType|][] @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:http:conn:routing:RouteInfo$TunnelType.<clinit>|] () @owner [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09e88c.   v3:= 1  @length 4;
#L09e88e.   v2:= 0  @length 4;
#L09e890.   v0:= new [|org:apache:http:conn:routing:RouteInfo$TunnelType|];
#L09e894.   v1:= "PLAIN" @type (object, string);
#L09e898.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$TunnelType.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @type direct;
#L09e89e.   @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|] := v0  @type object;
#L09e8a2.   v0:= new [|org:apache:http:conn:routing:RouteInfo$TunnelType|];
#L09e8a6.   v1:= "TUNNELLED" @type (object, string);
#L09e8aa.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$TunnelType.<init>|](v0, v1, v3) @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @type direct;
#L09e8b0.   @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|] := v0  @type object;
#L09e8b4.   v0:= 2  @length 4;
#L09e8b6.   v0:= new [|org:apache:http:conn:routing:RouteInfo$TunnelType|][v0];
#L09e8ba.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e8be.   v0[v2]:= v1  @type object;
#L09e8c2.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09e8c6.   v0[v3]:= v1  @type object;
#L09e8ca.   @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.$VALUES|] := v0  @type object;
#L09e8ce.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteInfo$TunnelType.<init>|] ([|org:apache:http:conn:routing:RouteInfo$TunnelType|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L09e8e0.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L09e8e6.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:RouteInfo$TunnelType.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.valueOf:(Ljava/lang/String;)Lorg/apache/http/conn/routing/RouteInfo$TunnelType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09e8f8.   v0:= new [|org:apache:http:conn:routing:RouteInfo$TunnelType|];
#L09e8fc.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L09e902.   v0:= temp  @type object;
#L09e904.   v0:= ([|org:apache:http:conn:routing:RouteInfo$TunnelType|])v0;
#L09e908.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$TunnelType|][] [|org:apache:http:conn:routing:RouteInfo$TunnelType.values|] () @owner [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.values:()[Lorg/apache/http/conn/routing/RouteInfo$TunnelType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09e91c.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.$VALUES|]   @type object;
#L09e920.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$TunnelType[].clone|](v0) @signature [|[Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$TunnelType[]|] @type virtual;
#L09e926.   v0:= temp  @type object;
#L09e928.   v0:= ([|org:apache:http:conn:routing:RouteInfo$TunnelType|][])v0;
#L09e92c.   return v0  @type object;

   }
record [|org:apache:http:conn:routing:RouteTracker|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:routing:RouteInfo|], [|java:lang:Cloneable|] {
      [|boolean|] [|org:apache:http:conn:routing:RouteTracker.connected|]    @AccessFlag PRIVATE;
      [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:RouteTracker.layered|]    @AccessFlag PRIVATE;
      [|java:net:InetAddress|] [|org:apache:http:conn:routing:RouteTracker.localAddress|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:HttpHost|][] [|org:apache:http:conn:routing:RouteTracker.proxyChain|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:conn:routing:RouteTracker.secure|]    @AccessFlag PRIVATE;
      [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteTracker.targetHost|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:RouteTracker.tunnelled|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.<init>|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object), [|java:net:InetAddress|] v4 @type (object)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09e940.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09e946.   if v3 != 0 then goto L09e95a;
#L09e94a.   v0:= new [|java:lang:IllegalArgumentException|];
#L09e94e.   v1:= "Target host may not be null." @type (object, string);
#L09e952.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e958.   throw v0;
#L09e95a.   v2.[|org:apache:http:conn:routing:RouteTracker.targetHost|]  := v3 @type object;
#L09e95e.   v2.[|org:apache:http:conn:routing:RouteTracker.localAddress|]  := v4 @type object;
#L09e962.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.PLAIN|]   @type object;
#L09e966.   v2.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]  := v0 @type object;
#L09e96a.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.PLAIN|]   @type object;
#L09e96e.   v2.[|org:apache:http:conn:routing:RouteTracker.layered|]  := v0 @type object;
#L09e972.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.<init>|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.<init>:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09e984.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v3) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L09e98a.   v0:= temp  @type object;
#L09e98c.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getLocalAddress|](v3) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L09e992.   v1:= temp  @type object;
#L09e994.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type direct;
#L09e99a.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:conn:routing:RouteTracker.clone|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09e9ac.   call temp:=  [|java:lang:Object.clone|](v1) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L09e9b2.   v0:= temp  @type object;
#L09e9b4.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.connectProxy|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object), [|boolean|] v4) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.connectProxy:(Lorg/apache/http/HttpHost;Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09e9c8.   v1:= 1  @length 4;
#L09e9ca.   if v3 != 0 then goto L09e9de;
#L09e9ce.   v0:= new [|java:lang:IllegalArgumentException|];
#L09e9d2.   v1:= "Proxy host may not be null." @type (object, string);
#L09e9d6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09e9dc.   throw v0;
#L09e9de.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09e9e2.   if v0 == 0 then goto L09e9f6;
#L09e9e6.   v0:= new [|java:lang:IllegalStateException|];
#L09e9ea.   v1:= "Already connected." @type (object, string);
#L09e9ee.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09e9f4.   throw v0;
#L09e9f6.   v2.[|org:apache:http:conn:routing:RouteTracker.connected|]  := v1 @boolean;
#L09e9fa.   v0:= new [|org:apache:http:HttpHost|][v1];
#L09e9fe.   v1:= 0  @length 4;
#L09ea00.   v0[v1]:= v3  @type object;
#L09ea04.   v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]  := v0 @type object;
#L09ea08.   v2.[|org:apache:http:conn:routing:RouteTracker.secure|]  := v4 @boolean;
#L09ea0c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.connectTarget|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.connectTarget:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09ea20.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ea24.   if v0 == 0 then goto L09ea38;
#L09ea28.   v0:= new [|java:lang:IllegalStateException|];
#L09ea2c.   v1:= "Already connected." @type (object, string);
#L09ea30.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09ea36.   throw v0;
#L09ea38.   v0:= 1  @length 4;
#L09ea3a.   v2.[|org:apache:http:conn:routing:RouteTracker.connected|]  := v0 @boolean;
#L09ea3e.   v2.[|org:apache:http:conn:routing:RouteTracker.secure|]  := v3 @boolean;
#L09ea42.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteTracker.equals|] ([|org:apache:http:conn:routing:RouteTracker|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09ea54.   v5:= 1  @length 4;
#L09ea56.   v4:= 0  @length 4;
#L09ea58.   if v8 != v7 then goto L09ea5e;
#L09ea5c.   return v5;
#L09ea5e.   v3:= instanceof @varname v8 @type [|org:apache:http:conn:routing:RouteTracker|];
#L09ea62.   if v3 != 0 then goto L09ea6a;
#L09ea66.   v5:= v4;
#L09ea68.   goto L09ea5c;
#L09ea6a.   v2:= v8  @type object;
#L09ea6c.   v2:= ([|org:apache:http:conn:routing:RouteTracker|])v2;
#L09ea70.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ea74.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ea78.   call temp:=  [|org:apache:http:HttpHost.equals|](v3, v6) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09ea7e.   v0:= temp;
#L09ea80.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ea84.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ea88.   if v3 == v6 then goto L09eaa8;
#L09ea8c.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ea90.   if v3 == 0 then goto L09eb48;
#L09ea94.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ea98.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ea9c.   call temp:=  [|java:net:InetAddress.equals|](v3, v6) @signature [|Ljava/net/InetAddress;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L09eaa2.   v3:= temp;
#L09eaa4.   if v3 == 0 then goto L09eb48;
#L09eaa8.   v3:= v5;
#L09eaaa.   v0:= v0 ^& v3  @type int;
#L09eaac.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eab0.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eab4.   if v3 == v6 then goto L09ead8;
#L09eab8.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eabc.   if v3 == 0 then goto L09eb4c;
#L09eac0.   v3:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eac4.   if v3 == 0 then goto L09eb4c;
#L09eac8.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eacc.   v3:= v3.length;
#L09eace.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ead2.   v6:= v6.length;
#L09ead4.   if v3 != v6 then goto L09eb4c;
#L09ead8.   v3:= v5;
#L09eada.   v0:= v0 ^& v3  @type int;
#L09eadc.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09eae0.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09eae4.   if v3 != v6 then goto L09eb50;
#L09eae8.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09eaec.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09eaf0.   if v3 != v6 then goto L09eb50;
#L09eaf4.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09eaf8.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09eafc.   if v3 != v6 then goto L09eb50;
#L09eb00.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09eb04.   v6:= v2.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09eb08.   if v3 != v6 then goto L09eb50;
#L09eb0c.   v0:= v0 ^& v5  @type int;
#L09eb0e.   if v0 == 0 then goto L09eb54;
#L09eb12.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb16.   if v3 == 0 then goto L09eb54;
#L09eb1a.   v1:= 0  @length 4;
#L09eb1c.   if v0 == 0 then goto L09eb54;
#L09eb20.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb24.   v3:= v3.length;
#L09eb26.   if v1 >= v3 then goto L09eb54;
#L09eb2a.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb2e.   v3:= v3[v1]  @type object;
#L09eb32.   v4:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb36.   v4:= v4[v1]  @type object;
#L09eb3a.   call temp:=  [|org:apache:http:HttpHost.equals|](v3, v4) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09eb40.   v0:= temp;
#L09eb42.   v1:= v1 + 1;
#L09eb46.   goto L09eb1c;
#L09eb48.   v3:= v4;
#L09eb4a.   goto L09eaaa;
#L09eb4c.   v3:= v4;
#L09eb4e.   goto L09eada;
#L09eb50.   v5:= v4;
#L09eb52.   goto L09eb0c;
#L09eb54.   v5:= v0;
#L09eb56.   goto L09ea5c;

   }
    procedure [|int|] [|org:apache:http:conn:routing:RouteTracker.getHopCount|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getHopCount:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09eb68.   v0:= 0  @length 4;
#L09eb6a.   v1:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09eb6e.   if v1 == 0 then goto L09eb7c;
#L09eb72.   v1:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb76.   if v1 != 0 then goto L09eb7e;
#L09eb7a.   v0:= 1  @length 4;
#L09eb7c.   return v0;
#L09eb7e.   v1:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09eb82.   v1:= v1.length;
#L09eb84.   v0:= v1 + 1;
#L09eb88.   goto L09eb7c;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteTracker.getHopTarget|] ([|org:apache:http:conn:routing:RouteTracker|] v5 @type (this), [|int|] v6) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09eb9c.   if v6 >= 0 then goto L09ebd2;
#L09eba0.   v2:= new [|java:lang:IllegalArgumentException|];
#L09eba4.   v3:= new [|java:lang:StringBuilder|];
#L09eba8.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09ebae.   v4:= "Hop index must not be negative: " @type (object, string);
#L09ebb2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ebb8.   v3:= temp  @type object;
#L09ebba.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ebc0.   v3:= temp  @type object;
#L09ebc2.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ebc8.   v3:= temp  @type object;
#L09ebca.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ebd0.   throw v2;
#L09ebd2.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.getHopCount|](v5) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L09ebd8.   v0:= temp;
#L09ebda.   if v6 < v0 then goto L09ec30;
#L09ebde.   v2:= new [|java:lang:IllegalArgumentException|];
#L09ebe2.   v3:= new [|java:lang:StringBuilder|];
#L09ebe6.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09ebec.   v4:= "Hop index " @type (object, string);
#L09ebf0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ebf6.   v3:= temp  @type object;
#L09ebf8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ebfe.   v3:= temp  @type object;
#L09ec00.   v4:= " exceeds tracked route length " @type (object, string);
#L09ec04.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ec0a.   v3:= temp  @type object;
#L09ec0c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ec12.   v3:= temp  @type object;
#L09ec14.   v4:= "." @type (object, string);
#L09ec18.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ec1e.   v3:= temp  @type object;
#L09ec20.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ec26.   v3:= temp  @type object;
#L09ec28.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ec2e.   throw v2;
#L09ec30.   v1:= 0  @length 4;
#L09ec32.   v2:= v0 + -1;
#L09ec36.   if v6 >= v2 then goto L09ec44;
#L09ec3a.   v2:= v5.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ec3e.   v1:= v2[v6]  @type object;
#L09ec42.   return v1  @type object;
#L09ec44.   v1:= v5.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ec48.   goto L09ec42;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$LayerType|] [|org:apache:http:conn:routing:RouteTracker.getLayerType|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getLayerType:()Lorg/apache/http/conn/routing/RouteInfo$LayerType;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09ec5c.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09ec60.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:conn:routing:RouteTracker.getLocalAddress|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09ec74.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ec78.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteTracker.getProxyHost|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getProxyHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09ec8c.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ec90.   if v0 != 0 then goto L09ec98;
#L09ec94.   v0:= 0  @length 4;
#L09ec96.   return v0  @type object;
#L09ec98.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ec9c.   v1:= 0  @length 4;
#L09ec9e.   v0:= v0[v1]  @type object;
#L09eca2.   goto L09ec96;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:conn:routing:RouteTracker.getTargetHost|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getTargetHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09ecb4.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ecb8.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:RouteInfo$TunnelType|] [|org:apache:http:conn:routing:RouteTracker.getTunnelType|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getTunnelType:()Lorg/apache/http/conn/routing/RouteInfo$TunnelType;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09eccc.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09ecd0.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:conn:routing:RouteTracker.hashCode|] ([|org:apache:http:conn:routing:RouteTracker|] v3 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.hashCode:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L09ece4.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ece8.   call temp:=  [|org:apache:http:HttpHost.hashCode|](v2) @signature [|Lorg/apache/http/HttpHost;.hashCode:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09ecee.   v0:= temp;
#L09ecf0.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ecf4.   if v2 == 0 then goto L09ed06;
#L09ecf8.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ecfc.   call temp:=  [|java:net:InetAddress.hashCode|](v2) @signature [|Ljava/net/InetAddress;.hashCode:()I|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L09ed02.   v2:= temp;
#L09ed04.   v0:= v0 ^~ v2  @type int;
#L09ed06.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ed0a.   if v2 == 0 then goto L09ed3a;
#L09ed0e.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ed12.   v2:= v2.length;
#L09ed14.   v0:= v0 ^~ v2  @type int;
#L09ed16.   v1:= 0  @length 4;
#L09ed18.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ed1c.   v2:= v2.length;
#L09ed1e.   if v1 >= v2 then goto L09ed3a;
#L09ed22.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ed26.   v2:= v2[v1]  @type object;
#L09ed2a.   call temp:=  [|org:apache:http:HttpHost.hashCode|](v2) @signature [|Lorg/apache/http/HttpHost;.hashCode:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09ed30.   v2:= temp;
#L09ed32.   v0:= v0 ^~ v2  @type int;
#L09ed34.   v1:= v1 + 1;
#L09ed38.   goto L09ed18;
#L09ed3a.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ed3e.   if v2 == 0 then goto L09ed4a;
#L09ed42.    v2:= 0.000000;
#L09ed48.   v0:= v0 ^~ v2  @type int;
#L09ed4a.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09ed4e.   if v2 == 0 then goto L09ed5a;
#L09ed52.    v2:= 0.000000;
#L09ed58.   v0:= v0 ^~ v2  @type int;
#L09ed5a.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09ed5e.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$TunnelType.hashCode|](v2) @signature [|Lorg/apache/http/conn/routing/RouteInfo$TunnelType;.hashCode:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$TunnelType|] @type virtual;
#L09ed64.   v2:= temp;
#L09ed66.   v0:= v0 ^~ v2  @type int;
#L09ed68.   v2:= v3.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09ed6c.   call temp:=  [|org:apache:http:conn:routing:RouteInfo$LayerType.hashCode|](v2) @signature [|Lorg/apache/http/conn/routing/RouteInfo$LayerType;.hashCode:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteInfo$LayerType|] @type virtual;
#L09ed72.   v2:= temp;
#L09ed74.   v0:= v0 ^~ v2  @type int;
#L09ed76.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteTracker.isConnected|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isConnected:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09ed88.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ed8c.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteTracker.isLayered|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isLayered:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09eda0.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09eda4.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09eda8.   if v0 != v1 then goto L09edb0;
#L09edac.   v0:= 1  @length 4;
#L09edae.   return v0;
#L09edb0.   v0:= 0  @length 4;
#L09edb2.   goto L09edae;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteTracker.isSecure|] ([|org:apache:http:conn:routing:RouteTracker|] v1 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isSecure:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09edc4.   v0:= v1.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09edc8.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:routing:RouteTracker.isTunnelled|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isTunnelled:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09eddc.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09ede0.   v1:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09ede4.   if v0 != v1 then goto L09edec;
#L09ede8.   v0:= 1  @length 4;
#L09edea.   return v0;
#L09edec.   v0:= 0  @length 4;
#L09edee.   goto L09edea;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.layerProtocol|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.layerProtocol:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09ee00.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ee04.   if v0 != 0 then goto L09ee18;
#L09ee08.   v0:= new [|java:lang:IllegalStateException|];
#L09ee0c.   v1:= "No layered protocol unless connected." @type (object, string);
#L09ee10.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09ee16.   throw v0;
#L09ee18.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09ee1c.   v2.[|org:apache:http:conn:routing:RouteTracker.layered|]  := v0 @type object;
#L09ee20.   v2.[|org:apache:http:conn:routing:RouteTracker.secure|]  := v3 @boolean;
#L09ee24.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:conn:routing:RouteTracker.toRoute|] ([|org:apache:http:conn:routing:RouteTracker|] v7 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.toRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09ee38.   v0:= v7.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ee3c.   if v0 != 0 then goto L09ee44;
#L09ee40.   v0:= 0  @length 4;
#L09ee42.   return v0  @type object;
#L09ee44.   v0:= new [|org:apache:http:conn:routing:HttpRoute|];
#L09ee48.   v1:= v7.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ee4c.   v2:= v7.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09ee50.   v3:= v7.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ee54.   v4:= v7.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09ee58.   v5:= v7.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09ee5c.   v6:= v7.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09ee60.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;[Lorg/apache/http/HttpHost;ZLorg/apache/http/conn/routing/RouteInfo$TunnelType;Lorg/apache/http/conn/routing/RouteInfo$LayerType;)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L09ee66.   goto L09ee42;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:routing:RouteTracker.toString|] ([|org:apache:http:conn:routing:RouteTracker|] v4 @type (this)) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09ee78.   v0:= new [|java:lang:StringBuilder|];
#L09ee7c.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.getHopCount|](v4) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L09ee82.   v2:= temp;
#L09ee84.   v2:= v2 * 30;
#L09ee88.   v2:= v2 + 50;
#L09ee8c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09ee92.   v2:= "RouteTracker[" @type (object, string);
#L09ee96.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ee9c.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09eea0.   if v2 == 0 then goto L09eeb8;
#L09eea4.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.localAddress|]   @type object;
#L09eea8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09eeae.   v2:= "->" @type (object, string);
#L09eeb2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09eeb8.   v2:= 123  @length 16;
#L09eebc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09eec2.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09eec6.   if v2 == 0 then goto L09eed4;
#L09eeca.   v2:= 99  @length 16;
#L09eece.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09eed4.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]   @type object;
#L09eed8.   v3:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09eedc.   if v2 != v3 then goto L09eeea;
#L09eee0.   v2:= 116  @length 16;
#L09eee4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09eeea.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.layered|]   @type object;
#L09eeee.   v3:= @@[|org:apache:http:conn:routing:RouteInfo$LayerType.LAYERED|]   @type object;
#L09eef2.   if v2 != v3 then goto L09ef00;
#L09eef6.   v2:= 108  @length 16;
#L09eefa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef00.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.secure|]   @boolean;
#L09ef04.   if v2 == 0 then goto L09ef12;
#L09ef08.   v2:= 115  @length 16;
#L09ef0c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef12.   v2:= "}->" @type (object, string);
#L09ef16.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef1c.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ef20.   if v2 == 0 then goto L09ef4e;
#L09ef24.   v1:= 0  @length 4;
#L09ef26.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ef2a.   v2:= v2.length;
#L09ef2c.   if v1 >= v2 then goto L09ef4e;
#L09ef30.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09ef34.   v2:= v2[v1]  @type object;
#L09ef38.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef3e.   v2:= "->" @type (object, string);
#L09ef42.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef48.   v1:= v1 + 1;
#L09ef4c.   goto L09ef26;
#L09ef4e.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.targetHost|]   @type object;
#L09ef52.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef58.   v2:= 93  @length 16;
#L09ef5c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef62.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09ef68.   v2:= temp  @type object;
#L09ef6a.   return v2  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.tunnelProxy|] ([|org:apache:http:conn:routing:RouteTracker|] v4 @type (this), [|org:apache:http:HttpHost|] v5 @type (object), [|boolean|] v6) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.tunnelProxy:(Lorg/apache/http/HttpHost;Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09ef7c.   v3:= 0  @length 4;
#L09ef7e.   if v5 != 0 then goto L09ef92;
#L09ef82.   v1:= new [|java:lang:IllegalArgumentException|];
#L09ef86.   v2:= "Proxy host may not be null." @type (object, string);
#L09ef8a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ef90.   throw v1;
#L09ef92.   v1:= v4.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09ef96.   if v1 != 0 then goto L09efaa;
#L09ef9a.   v1:= new [|java:lang:IllegalStateException|];
#L09ef9e.   v2:= "No tunnel unless connected." @type (object, string);
#L09efa2.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09efa8.   throw v1;
#L09efaa.   v1:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09efae.   if v1 != 0 then goto L09efc2;
#L09efb2.   v1:= new [|java:lang:IllegalStateException|];
#L09efb6.   v2:= "No proxy tunnel without proxy." @type (object, string);
#L09efba.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09efc0.   throw v1;
#L09efc2.   v1:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09efc6.   v1:= v1.length;
#L09efc8.   v1:= v1 + 1;
#L09efcc.   v0:= new [|org:apache:http:HttpHost|][v1];
#L09efd0.   v1:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09efd4.   v2:= v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09efd8.   v2:= v2.length;
#L09efda.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L09efe0.   v1:= v0.length;
#L09efe2.   v1:= v1 + -1;
#L09efe6.   v0[v1]:= v5  @type object;
#L09efea.   v4.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]  := v0 @type object;
#L09efee.   v4.[|org:apache:http:conn:routing:RouteTracker.secure|]  := v6 @boolean;
#L09eff2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:routing:RouteTracker.tunnelTarget|] ([|org:apache:http:conn:routing:RouteTracker|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:conn:routing:RouteTracker|] @signature [|Lorg/apache/http/conn/routing/RouteTracker;.tunnelTarget:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09f004.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.connected|]   @boolean;
#L09f008.   if v0 != 0 then goto L09f01c;
#L09f00c.   v0:= new [|java:lang:IllegalStateException|];
#L09f010.   v1:= "No tunnel unless connected." @type (object, string);
#L09f014.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09f01a.   throw v0;
#L09f01c.   v0:= v2.[|org:apache:http:conn:routing:RouteTracker.proxyChain|]   @type object;
#L09f020.   if v0 != 0 then goto L09f034;
#L09f024.   v0:= new [|java:lang:IllegalStateException|];
#L09f028.   v1:= "No tunnel without proxy." @type (object, string);
#L09f02c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09f032.   throw v0;
#L09f034.   v0:= @@[|org:apache:http:conn:routing:RouteInfo$TunnelType.TUNNELLED|]   @type object;
#L09f038.   v2.[|org:apache:http:conn:routing:RouteTracker.tunnelled|]  := v0 @type object;
#L09f03c.   v2.[|org:apache:http:conn:routing:RouteTracker.secure|]  := v3 @boolean;
#L09f040.   return @void ;

   }
record [|org:apache:http:conn:scheme:HostNameResolver|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:net:InetAddress|] [|org:apache:http:conn:scheme:HostNameResolver.resolve|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:conn:scheme:HostNameResolver|] @signature [|Lorg/apache/http/conn/scheme/HostNameResolver;.resolve:(Ljava/lang/String;)Ljava/net/InetAddress;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:scheme:LayeredSocketFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:conn:scheme:SocketFactory|] {
   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:scheme:LayeredSocketFactory.createSocket|] ([|java:net:Socket|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|int|] v2, [|boolean|] v3) @owner [|org:apache:http:conn:scheme:LayeredSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/LayeredSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:scheme:PlainSocketFactory|]  @type class @AccessFlag PUBLIC_FINAL extends  [|org:apache:http:conn:scheme:SocketFactory|] {
      [|org:apache:http:conn:scheme:HostNameResolver|] [|org:apache:http:conn:scheme:PlainSocketFactory.nameResolver|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:http:conn:scheme:PlainSocketFactory|] @@[|org:apache:http:conn:scheme:PlainSocketFactory.DEFAULT_FACTORY|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:scheme:PlainSocketFactory.<clinit>|] () @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09f054.   v0:= new [|org:apache:http:conn:scheme:PlainSocketFactory|];
#L09f058.   call temp:=  [|org:apache:http:conn:scheme:PlainSocketFactory.<init>|](v0) @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<init>:()V|] @classDescriptor [|org:apache:http:conn:scheme:PlainSocketFactory|] @type direct;
#L09f05e.   @@[|org:apache:http:conn:scheme:PlainSocketFactory.DEFAULT_FACTORY|] := v0  @type object;
#L09f062.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:scheme:PlainSocketFactory.<init>|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09f074.   v0:= 0  @length 4;
#L09f076.   call temp:=  [|org:apache:http:conn:scheme:PlainSocketFactory.<init>|](v1, v0) @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<init>:(Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @classDescriptor [|org:apache:http:conn:scheme:PlainSocketFactory|] @type direct;
#L09f07c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:scheme:PlainSocketFactory.<init>|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v0 @type (this), [|org:apache:http:conn:scheme:HostNameResolver|] v1 @type (object)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<init>:(Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09f090.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09f096.   v0.[|org:apache:http:conn:scheme:PlainSocketFactory.nameResolver|]  := v1 @type object;
#L09f09a.   return @void ;

   }
    procedure [|org:apache:http:conn:scheme:PlainSocketFactory|] [|org:apache:http:conn:scheme:PlainSocketFactory.getSocketFactory|] () @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.getSocketFactory:()Lorg/apache/http/conn/scheme/PlainSocketFactory;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09f0ac.   v0:= @@[|org:apache:http:conn:scheme:PlainSocketFactory.DEFAULT_FACTORY|]   @type object;
#L09f0b0.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:scheme:PlainSocketFactory.connectSocket|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v7 @type (this), [|java:net:Socket|] v8 @type (object), [|java:lang:String|] v9 @type (object), [|int|] v10, [|java:net:InetAddress|] v11 @type (object), [|int|] v12, [|org:apache:http:params:HttpParams|] v13 @type (object)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.connectSocket:(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09f0c4.   if v9 != 0 then goto L09f0d8;
#L09f0c8.   v4:= new [|java:lang:IllegalArgumentException|];
#L09f0cc.   v5:= "Target host may not be null." @type (object, string);
#L09f0d0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f0d6.   throw v4;
#L09f0d8.   if v13 != 0 then goto L09f0ec;
#L09f0dc.   v4:= new [|java:lang:IllegalArgumentException|];
#L09f0e0.   v5:= "Parameters may not be null." @type (object, string);
#L09f0e4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f0ea.   throw v4;
#L09f0ec.   if v8 != 0 then goto L09f0f8;
#L09f0f0.   call temp:=  [|org:apache:http:conn:scheme:PlainSocketFactory.createSocket|](v7) @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.createSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:scheme:PlainSocketFactory|] @type virtual;
#L09f0f6.   v8:= temp  @type object;
#L09f0f8.   if v11 != 0 then goto L09f100;
#L09f0fc.   if v12 <= 0 then goto L09f116;
#L09f100.   if v12 >= 0 then goto L09f106;
#L09f104.   v12:= 0  @length 4;
#L09f106.   v1:= new [|java:net:InetSocketAddress|];
#L09f10a.   call temp:=  [|java:net:InetSocketAddress.<init>|](v1, v11, v12) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09f110.   call temp:=  [|java:net:Socket.bind|](v8, v1) @signature [|Ljava/net/Socket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09f116.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getConnectionTimeout|](v13) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getConnectionTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L09f11c.   v3:= temp;
#L09f11e.   v4:= v7.[|org:apache:http:conn:scheme:PlainSocketFactory.nameResolver|]   @type object;
#L09f122.   if v4 == 0 then goto L09f144;
#L09f126.   v2:= new [|java:net:InetSocketAddress|];
#L09f12a.   v4:= v7.[|org:apache:http:conn:scheme:PlainSocketFactory.nameResolver|]   @type object;
#L09f12e.   call temp:=  [|org:apache:http:conn:scheme:HostNameResolver.resolve|](v4, v9) @signature [|Lorg/apache/http/conn/scheme/HostNameResolver;.resolve:(Ljava/lang/String;)Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:scheme:HostNameResolver|] @type interface;
#L09f134.   v4:= temp  @type object;
#L09f136.   call temp:=  [|java:net:InetSocketAddress.<init>|](v2, v4, v10) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09f13c.   call temp:=  [|java:net:Socket.connect|](v8, v2, v3) @signature [|Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09f142.   return v8  @type object;
#L09f144.   v2:= new [|java:net:InetSocketAddress|];
#L09f148.   call temp:=  [|java:net:InetSocketAddress.<init>|](v2, v9, v10) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09f14e.   goto L09f13c;
#L09f150.   v0:= Exception  @type object;
#L09f152.   v4:= new [|org:apache:http:conn:ConnectTimeoutException|];
#L09f156.   v5:= new [|java:lang:StringBuilder|];
#L09f15a.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09f160.   v6:= "Connect to " @type (object, string);
#L09f164.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f16a.   v5:= temp  @type object;
#L09f16c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f172.   v5:= temp  @type object;
#L09f174.   v6:= " timed out" @type (object, string);
#L09f178.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f17e.   v5:= temp  @type object;
#L09f180.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f186.   v5:= temp  @type object;
#L09f188.   call temp:=  [|org:apache:http:conn:ConnectTimeoutException.<init>|](v4, v5) @signature [|Lorg/apache/http/conn/ConnectTimeoutException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:conn:ConnectTimeoutException|] @type direct;
#L09f18e.   throw v4;
  catch  [|java:net:SocketTimeoutException|] @[L09f13c..L09f142] goto L09f150;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:scheme:PlainSocketFactory.createSocket|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09f1b0.   v0:= new [|java:net:Socket|];
#L09f1b4.   call temp:=  [|java:net:Socket.<init>|](v0) @signature [|Ljava/net/Socket;.<init>:()V|] @classDescriptor [|java:net:Socket|] @type direct;
#L09f1ba.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:conn:scheme:PlainSocketFactory.equals|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09f1cc.   if v2 != v1 then goto L09f1d4;
#L09f1d0.   v0:= 1  @length 4;
#L09f1d2.   return v0;
#L09f1d4.   v0:= 0  @length 4;
#L09f1d6.   goto L09f1d2;

   }
    procedure [|int|] [|org:apache:http:conn:scheme:PlainSocketFactory.hashCode|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09f1e8.   v0:= new [|org:apache:http:conn:scheme:PlainSocketFactory|];
#L09f1ec.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09f1f2.   v0:= temp;
#L09f1f4.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:scheme:PlainSocketFactory.isSecure|] ([|org:apache:http:conn:scheme:PlainSocketFactory|] v2 @type (this), [|java:net:Socket|] v3 @type (object)) @owner [|org:apache:http:conn:scheme:PlainSocketFactory|] @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09f208.   if v3 != 0 then goto L09f21c;
#L09f20c.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f210.   v1:= "Socket may not be null." @type (object, string);
#L09f214.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f21a.   throw v0;
#L09f21c.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09f222.   v0:= temp  @type object;
#L09f224.   v1:= new [|java:net:Socket|];
#L09f228.   if v0 == v1 then goto L09f23c;
#L09f22c.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f230.   v1:= "Socket not created by this factory." @type (object, string);
#L09f234.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f23a.   throw v0;
#L09f23c.   call temp:=  [|java:net:Socket.isClosed|](v3) @signature [|Ljava/net/Socket;.isClosed:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L09f242.   v0:= temp;
#L09f244.   if v0 == 0 then goto L09f258;
#L09f248.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f24c.   v1:= "Socket is closed." @type (object, string);
#L09f250.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f256.   throw v0;
#L09f258.   v0:= 0  @length 4;
#L09f25a.   return v0;

   }
record [|org:apache:http:conn:scheme:Scheme|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|int|] [|org:apache:http:conn:scheme:Scheme.defaultPort|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:conn:scheme:Scheme.layered|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|org:apache:http:conn:scheme:Scheme.name|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:conn:scheme:SocketFactory|] [|org:apache:http:conn:scheme:Scheme.socketFactory|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|org:apache:http:conn:scheme:Scheme.stringRep|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:conn:scheme:Scheme.<init>|] ([|org:apache:http:conn:scheme:Scheme|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|org:apache:http:conn:scheme:SocketFactory|] v5 @type (object), [|int|] v6) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.<init>:(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L09f26c.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09f272.   if v4 != 0 then goto L09f286;
#L09f276.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f27a.   v1:= "Scheme name may not be null" @type (object, string);
#L09f27e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f284.   throw v0;
#L09f286.   if v5 != 0 then goto L09f29a;
#L09f28a.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f28e.   v1:= "Socket factory may not be null" @type (object, string);
#L09f292.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f298.   throw v0;
#L09f29a.   if v6 <= 0 then goto L09f2a8;
#L09f29e.    v0:= 0.000000;
#L09f2a4.   if v6 <= v0 then goto L09f2da;
#L09f2a8.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f2ac.   v1:= new [|java:lang:StringBuilder|];
#L09f2b0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09f2b6.   v2:= "Port is invalid: " @type (object, string);
#L09f2ba.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f2c0.   v1:= temp  @type object;
#L09f2c2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f2c8.   v1:= temp  @type object;
#L09f2ca.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f2d0.   v1:= temp  @type object;
#L09f2d2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f2d8.   throw v0;
#L09f2da.   v0:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L09f2de.   call temp:=  [|java:lang:String.toLowerCase|](v4, v0) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f2e4.   v0:= temp  @type object;
#L09f2e6.   v3.[|org:apache:http:conn:scheme:Scheme.name|]  := v0 @type object;
#L09f2ea.   v3.[|org:apache:http:conn:scheme:Scheme.socketFactory|]  := v5 @type object;
#L09f2ee.   v3.[|org:apache:http:conn:scheme:Scheme.defaultPort|]  := v6;
#L09f2f2.   v0:= instanceof @varname v5 @type [|org:apache:http:conn:scheme:LayeredSocketFactory|];
#L09f2f6.   v3.[|org:apache:http:conn:scheme:Scheme.layered|]  := v0 @boolean;
#L09f2fa.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:scheme:Scheme.equals|] ([|org:apache:http:conn:scheme:Scheme|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09f30c.   v1:= 1  @length 4;
#L09f30e.   v2:= 0  @length 4;
#L09f310.   if v6 != 0 then goto L09f316;
#L09f314.   return v2;
#L09f316.   if v5 != v6 then goto L09f31e;
#L09f31a.   v2:= v1;
#L09f31c.   goto L09f314;
#L09f31e.   v3:= instanceof @varname v6 @type [|org:apache:http:conn:scheme:Scheme|];
#L09f322.   if v3 == 0 then goto L09f314;
#L09f326.   v0:= v6  @type object;
#L09f328.   v0:= ([|org:apache:http:conn:scheme:Scheme|])v0;
#L09f32c.   v3:= v5.[|org:apache:http:conn:scheme:Scheme.name|]   @type object;
#L09f330.   v4:= v0.[|org:apache:http:conn:scheme:Scheme.name|]   @type object;
#L09f334.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f33a.   v3:= temp;
#L09f33c.   if v3 == 0 then goto L09f370;
#L09f340.   v3:= v5.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f344.   v4:= v0.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f348.   if v3 != v4 then goto L09f370;
#L09f34c.   v3:= v5.[|org:apache:http:conn:scheme:Scheme.layered|]   @boolean;
#L09f350.   v4:= v0.[|org:apache:http:conn:scheme:Scheme.layered|]   @boolean;
#L09f354.   if v3 != v4 then goto L09f370;
#L09f358.   v3:= v5.[|org:apache:http:conn:scheme:Scheme.socketFactory|]   @type object;
#L09f35c.   v4:= v0.[|org:apache:http:conn:scheme:Scheme.socketFactory|]   @type object;
#L09f360.   call temp:=  [|java:lang:Object.equals|](v3, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09f366.   v3:= temp;
#L09f368.   if v3 == 0 then goto L09f370;
#L09f36c.   v2:= v1;
#L09f36e.   goto L09f314;
#L09f370.   v1:= v2;
#L09f372.   goto L09f36c;

   }
    procedure [|int|] [|org:apache:http:conn:scheme:Scheme.getDefaultPort|] ([|org:apache:http:conn:scheme:Scheme|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.getDefaultPort:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09f384.   v0:= v1.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f388.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:scheme:Scheme.getName|] ([|org:apache:http:conn:scheme:Scheme|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.getName:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09f39c.   v0:= v1.[|org:apache:http:conn:scheme:Scheme.name|]   @type object;
#L09f3a0.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:scheme:SocketFactory|] [|org:apache:http:conn:scheme:Scheme.getSocketFactory|] ([|org:apache:http:conn:scheme:Scheme|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.getSocketFactory:()Lorg/apache/http/conn/scheme/SocketFactory;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09f3b4.   v0:= v1.[|org:apache:http:conn:scheme:Scheme.socketFactory|]   @type object;
#L09f3b8.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:conn:scheme:Scheme.hashCode|] ([|org:apache:http:conn:scheme:Scheme|] v2 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09f3cc.   v0:= 17  @length 16;
#L09f3d0.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f3d4.   call temp:=  [|org:apache:http:util:LangUtils.hashCode|](v0, v1) @signature [|Lorg/apache/http/util/LangUtils;.hashCode:(II)I|] @classDescriptor [|org:apache:http:util:LangUtils|] @type static;
#L09f3da.   v0:= temp;
#L09f3dc.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.name|]   @type object;
#L09f3e0.   call temp:=  [|org:apache:http:util:LangUtils.hashCode|](v0, v1) @signature [|Lorg/apache/http/util/LangUtils;.hashCode:(ILjava/lang/Object;)I|] @classDescriptor [|org:apache:http:util:LangUtils|] @type static;
#L09f3e6.   v0:= temp;
#L09f3e8.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.layered|]   @boolean;
#L09f3ec.   call temp:=  [|org:apache:http:util:LangUtils.hashCode|](v0, v1) @signature [|Lorg/apache/http/util/LangUtils;.hashCode:(IZ)I|] @classDescriptor [|org:apache:http:util:LangUtils|] @type static;
#L09f3f2.   v0:= temp;
#L09f3f4.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.socketFactory|]   @type object;
#L09f3f8.   call temp:=  [|org:apache:http:util:LangUtils.hashCode|](v0, v1) @signature [|Lorg/apache/http/util/LangUtils;.hashCode:(ILjava/lang/Object;)I|] @classDescriptor [|org:apache:http:util:LangUtils|] @type static;
#L09f3fe.   v0:= temp;
#L09f400.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:scheme:Scheme.isLayered|] ([|org:apache:http:conn:scheme:Scheme|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.isLayered:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09f414.   v0:= v1.[|org:apache:http:conn:scheme:Scheme.layered|]   @boolean;
#L09f418.   return v0;

   }
    procedure [|int|] [|org:apache:http:conn:scheme:Scheme.resolvePort|] ([|org:apache:http:conn:scheme:Scheme|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.resolvePort:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09f42c.   if v2 <= 0 then goto L09f43a;
#L09f430.    v0:= 0.000000;
#L09f436.   if v2 <= v0 then goto L09f43e;
#L09f43a.   v2:= v1.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f43e.   return v2;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:scheme:Scheme.toString|] ([|org:apache:http:conn:scheme:Scheme|] v2 @type (this)) @owner [|org:apache:http:conn:scheme:Scheme|] @signature [|Lorg/apache/http/conn/scheme/Scheme;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09f450.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.stringRep|]   @type object;
#L09f454.   if v1 != 0 then goto L09f494;
#L09f458.   v0:= new [|java:lang:StringBuilder|];
#L09f45c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09f462.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.name|]   @type object;
#L09f466.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f46c.   v1:= 58  @length 16;
#L09f470.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f476.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.defaultPort|] ;
#L09f47a.   call temp:=  [|java:lang:Integer.toString|](v1) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L09f480.   v1:= temp  @type object;
#L09f482.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f488.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f48e.   v1:= temp  @type object;
#L09f490.   v2.[|org:apache:http:conn:scheme:Scheme.stringRep|]  := v1 @type object;
#L09f494.   v1:= v2.[|org:apache:http:conn:scheme:Scheme.stringRep|]   @type object;
#L09f498.   return v1  @type object;

   }
record [|org:apache:http:conn:scheme:SchemeRegistry|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|java:util:Map|] [|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:conn:scheme:SchemeRegistry.<init>|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v1 @type (this)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09f4ac.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09f4b2.   v0:= new [|java:util:LinkedHashMap|];
#L09f4b6.   call temp:=  [|java:util:LinkedHashMap.<init>|](v0) @signature [|Ljava/util/LinkedHashMap;.<init>:()V|] @classDescriptor [|java:util:LinkedHashMap|] @type direct;
#L09f4bc.   v1.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]  := v0 @type object;
#L09f4c0.   return @void ;

   }
    procedure [|org:apache:http:conn:scheme:Scheme|] [|org:apache:http:conn:scheme:SchemeRegistry.get|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.get:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L09f4d4.   (@monitorenter v3)
#L09f4d6.   if v4 != 0 then goto L09f4f0;
#L09f4da.   v1:= new [|java:lang:IllegalArgumentException|];
#L09f4de.   v2:= "Name must not be null." @type (object, string);
#L09f4e2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f4e8.   throw v1;
#L09f4ea.   v1:= Exception  @type object;
#L09f4ec.   (@monitorexit v3)
#L09f4ee.   throw v1;
#L09f4f0.   v1:= v3.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f4f4.   call temp:=  [|java:util:Map.get|](v1, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L09f4fa.   v0:= temp  @type object;
#L09f4fc.   v0:= ([|org:apache:http:conn:scheme:Scheme|])v0;
#L09f500.   (@monitorexit v3)
#L09f502.   return v0  @type object;
  catch  [|any|] @[L09f4da..L09f4ea] goto L09f4ea;
  catch  [|any|] @[L09f4f0..L09f500] goto L09f4ea;

   }
    procedure [|org:apache:http:conn:scheme:Scheme|] [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09f528.   (@monitorenter v4)
#L09f52a.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.get|](v4, v5) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.get:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L09f530.   v0:= temp  @type object;
#L09f532.   if v0 != 0 then goto L09f57a;
#L09f536.   v1:= new [|java:lang:IllegalStateException|];
#L09f53a.   v2:= new [|java:lang:StringBuilder|];
#L09f53e.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09f544.   v3:= "Scheme '" @type (object, string);
#L09f548.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f54e.   v2:= temp  @type object;
#L09f550.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f556.   v2:= temp  @type object;
#L09f558.   v3:= "' not registered." @type (object, string);
#L09f55c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f562.   v2:= temp  @type object;
#L09f564.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09f56a.   v2:= temp  @type object;
#L09f56c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L09f572.   throw v1;
#L09f574.   v1:= Exception  @type object;
#L09f576.   (@monitorexit v4)
#L09f578.   throw v1;
#L09f57a.   (@monitorexit v4)
#L09f57c.   return v0  @type object;
  catch  [|any|] @[L09f52a..L09f574] goto L09f574;

   }
    procedure [|org:apache:http:conn:scheme:Scheme|] [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Lorg/apache/http/HttpHost;)Lorg/apache/http/conn/scheme/Scheme;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L09f59c.   (@monitorenter v2)
#L09f59e.   if v3 != 0 then goto L09f5b8;
#L09f5a2.   v0:= new [|java:lang:IllegalArgumentException|];
#L09f5a6.   v1:= "Host must not be null." @type (object, string);
#L09f5aa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f5b0.   throw v0;
#L09f5b2.   v0:= Exception  @type object;
#L09f5b4.   (@monitorexit v2)
#L09f5b6.   throw v0;
#L09f5b8.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v3) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L09f5be.   v0:= temp  @type object;
#L09f5c0.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v2, v0) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L09f5c6.   v0:= temp  @type object;
#L09f5c8.   (@monitorexit v2)
#L09f5ca.   return v0  @type object;
  catch  [|any|] @[L09f5a2..L09f5b2] goto L09f5b2;
  catch  [|any|] @[L09f5b8..L09f5c6] goto L09f5b2;

   }
    procedure [|java:util:List|] [|org:apache:http:conn:scheme:SchemeRegistry.getSchemeNames|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v2 @type (this)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getSchemeNames:()Ljava/util/List;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L09f5f0.   (@monitorenter v2)
#L09f5f2.   v0:= new [|java:util:ArrayList|];
#L09f5f6.   v1:= v2.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f5fa.   call temp:=  [|java:util:Map.keySet|](v1) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L09f600.   v1:= temp  @type object;
#L09f602.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L09f608.   (@monitorexit v2)
#L09f60a.   return v0  @type object;
#L09f60c.   v0:= Exception  @type object;
#L09f60e.   (@monitorexit v2)
#L09f610.   throw v0;
  catch  [|any|] @[L09f5f2..L09f608] goto L09f60c;

   }
    procedure [|org:apache:http:conn:scheme:Scheme|] [|org:apache:http:conn:scheme:SchemeRegistry.register|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (this), [|org:apache:http:conn:scheme:Scheme|] v4 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.register:(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L09f630.   (@monitorenter v3)
#L09f632.   if v4 != 0 then goto L09f64c;
#L09f636.   v1:= new [|java:lang:IllegalArgumentException|];
#L09f63a.   v2:= "Scheme must not be null." @type (object, string);
#L09f63e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f644.   throw v1;
#L09f646.   v1:= Exception  @type object;
#L09f648.   (@monitorexit v3)
#L09f64a.   throw v1;
#L09f64c.   v1:= v3.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f650.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getName|](v4) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L09f656.   v2:= temp  @type object;
#L09f658.   call temp:=  [|java:util:Map.put|](v1, v2, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L09f65e.   v0:= temp  @type object;
#L09f660.   v0:= ([|org:apache:http:conn:scheme:Scheme|])v0;
#L09f664.   (@monitorexit v3)
#L09f666.   return v0  @type object;
  catch  [|any|] @[L09f636..L09f646] goto L09f646;
  catch  [|any|] @[L09f64c..L09f664] goto L09f646;

   }
    procedure [|void|] [|org:apache:http:conn:scheme:SchemeRegistry.setItems|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.setItems:(Ljava/util/Map;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L09f68c.   (@monitorenter v1)
#L09f68e.   if v2 != 0 then goto L09f696;
#L09f692.   (@monitorexit v1)
#L09f694.   return @void ;
#L09f696.   v0:= v1.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f69a.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L09f6a0.   v0:= v1.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f6a4.   call temp:=  [|java:util:Map.putAll|](v0, v2) @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:Map|] @type interface;
#L09f6aa.   goto L09f692;
#L09f6ac.   v0:= Exception  @type object;
#L09f6ae.   (@monitorexit v1)
#L09f6b0.   throw v0;
  catch  [|any|] @[L09f696..L09f6aa] goto L09f6ac;

   }
    procedure [|org:apache:http:conn:scheme:Scheme|] [|org:apache:http:conn:scheme:SchemeRegistry.unregister|] ([|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:conn:scheme:SchemeRegistry|] @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.unregister:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L09f6d0.   (@monitorenter v3)
#L09f6d2.   if v4 != 0 then goto L09f6ec;
#L09f6d6.   v1:= new [|java:lang:IllegalArgumentException|];
#L09f6da.   v2:= "Name must not be null." @type (object, string);
#L09f6de.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09f6e4.   throw v1;
#L09f6e6.   v1:= Exception  @type object;
#L09f6e8.   (@monitorexit v3)
#L09f6ea.   throw v1;
#L09f6ec.   v1:= v3.[|org:apache:http:conn:scheme:SchemeRegistry.registeredSchemes|]   @type object;
#L09f6f0.   call temp:=  [|java:util:Map.remove|](v1, v4) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L09f6f6.   v0:= temp  @type object;
#L09f6f8.   v0:= ([|org:apache:http:conn:scheme:Scheme|])v0;
#L09f6fc.   (@monitorexit v3)
#L09f6fe.   return v0  @type object;
  catch  [|any|] @[L09f6d6..L09f6e6] goto L09f6e6;
  catch  [|any|] @[L09f6ec..L09f6fc] goto L09f6e6;

   }
record [|org:apache:http:conn:ssl:X509HostnameVerifier|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|javax:net:ssl:HostnameVerifier|] {
   }
    procedure [|void|] [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|] ([|java:lang:String|] v0 @type (object), [|java:security:cert:X509Certificate|] v1 @type (object)) @owner [|org:apache:http:conn:ssl:X509HostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|] ([|java:lang:String|] v0 @type (object), [|javax:net:ssl:SSLSocket|] v1 @type (object)) @owner [|org:apache:http:conn:ssl:X509HostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|][] v1 @type (object), [|java:lang:String|][] v2 @type (object)) @owner [|org:apache:http:conn:ssl:X509HostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|] ([|java:lang:String|] v0 @type (object), [|javax:net:ssl:SSLSession|] v1 @type (object)) @owner [|org:apache:http:conn:ssl:X509HostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:conn:ssl:AbstractVerifier|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:conn:ssl:X509HostnameVerifier|] {
   }
      global [|java:lang:String|][] @@[|org:apache:http:conn:ssl:AbstractVerifier.BAD_COUNTRY_2LDS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:ssl:AbstractVerifier.<clinit>|] () @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L09f724.   v0:= 14  @length 16;
#L09f728.   v0:= new [|java:lang:String|][v0];
#L09f72c.   v1:= 0  @length 4;
#L09f72e.   v2:= "ac" @type (object, string);
#L09f732.   v0[v1]:= v2  @type object;
#L09f736.   v1:= 1  @length 4;
#L09f738.   v2:= "co" @type (object, string);
#L09f73c.   v0[v1]:= v2  @type object;
#L09f740.   v1:= 2  @length 4;
#L09f742.   v2:= "com" @type (object, string);
#L09f746.   v0[v1]:= v2  @type object;
#L09f74a.   v1:= 3  @length 4;
#L09f74c.   v2:= "ed" @type (object, string);
#L09f750.   v0[v1]:= v2  @type object;
#L09f754.   v1:= 4  @length 4;
#L09f756.   v2:= "edu" @type (object, string);
#L09f75a.   v0[v1]:= v2  @type object;
#L09f75e.   v1:= 5  @length 4;
#L09f760.   v2:= "go" @type (object, string);
#L09f764.   v0[v1]:= v2  @type object;
#L09f768.   v1:= 6  @length 4;
#L09f76a.   v2:= "gouv" @type (object, string);
#L09f76e.   v0[v1]:= v2  @type object;
#L09f772.   v1:= 7  @length 4;
#L09f774.   v2:= "gov" @type (object, string);
#L09f778.   v0[v1]:= v2  @type object;
#L09f77c.   v1:= 8  @length 16;
#L09f780.   v2:= "info" @type (object, string);
#L09f784.   v0[v1]:= v2  @type object;
#L09f788.   v1:= 9  @length 16;
#L09f78c.   v2:= "lg" @type (object, string);
#L09f790.   v0[v1]:= v2  @type object;
#L09f794.   v1:= 10  @length 16;
#L09f798.   v2:= "ne" @type (object, string);
#L09f79c.   v0[v1]:= v2  @type object;
#L09f7a0.   v1:= 11  @length 16;
#L09f7a4.   v2:= "net" @type (object, string);
#L09f7a8.   v0[v1]:= v2  @type object;
#L09f7ac.   v1:= 12  @length 16;
#L09f7b0.   v2:= "or" @type (object, string);
#L09f7b4.   v0[v1]:= v2  @type object;
#L09f7b8.   v1:= 13  @length 16;
#L09f7bc.   v2:= "org" @type (object, string);
#L09f7c0.   v0[v1]:= v2  @type object;
#L09f7c4.   @@[|org:apache:http:conn:ssl:AbstractVerifier.BAD_COUNTRY_2LDS|] := v0  @type object;
#L09f7c8.   v0:= @@[|org:apache:http:conn:ssl:AbstractVerifier.BAD_COUNTRY_2LDS|]   @type object;
#L09f7cc.   call temp:=  [|java:util:Arrays.sort|](v0) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L09f7d2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:AbstractVerifier.<init>|] ([|org:apache:http:conn:ssl:AbstractVerifier|] v0 @type (this)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09f7e4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09f7ea.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:ssl:AbstractVerifier.acceptableCountryWildcard|] ([|java:lang:String|] v6 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.acceptableCountryWildcard:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L09f7fc.   v3:= 1  @length 4;
#L09f7fe.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f804.   v0:= temp;
#L09f806.   v4:= 7  @length 4;
#L09f808.   if v0 < v4 then goto L09f846;
#L09f80c.   v4:= 9  @length 16;
#L09f810.   if v0 > v4 then goto L09f846;
#L09f814.   v4:= v0 + -3;
#L09f818.   call temp:=  [|java:lang:String.charAt|](v6, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f81e.   v4:= temp;
#L09f820.   v5:= 46  @length 16;
#L09f824.   if v4 != v5 then goto L09f846;
#L09f828.   v4:= 2  @length 4;
#L09f82a.   v5:= v0 + -3;
#L09f82e.   call temp:=  [|java:lang:String.substring|](v6, v4, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f834.   v1:= temp  @type object;
#L09f836.   v4:= @@[|org:apache:http:conn:ssl:AbstractVerifier.BAD_COUNTRY_2LDS|]   @type object;
#L09f83a.   call temp:=  [|java:util:Arrays.binarySearch|](v4, v1) @signature [|Ljava/util/Arrays;.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L09f840.   v2:= temp;
#L09f842.   if v2 >= 0 then goto L09f848;
#L09f846.   return v3;
#L09f848.   v3:= 0  @length 4;
#L09f84a.   goto L09f846;

   }
    procedure [|int|] [|org:apache:http:conn:ssl:AbstractVerifier.countDots|] ([|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.countDots:(Ljava/lang/String;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09f85c.   v0:= 0  @length 4;
#L09f85e.   v1:= 0  @length 4;
#L09f860.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f866.   v2:= temp;
#L09f868.   if v1 >= v2 then goto L09f886;
#L09f86c.   call temp:=  [|java:lang:String.charAt|](v4, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f872.   v2:= temp;
#L09f874.   v3:= 46  @length 16;
#L09f878.   if v2 != v3 then goto L09f880;
#L09f87c.   v0:= v0 + 1;
#L09f880.   v1:= v1 + 1;
#L09f884.   goto L09f860;
#L09f886.   return v0;

   }
    procedure [|java:lang:String|][] [|org:apache:http:conn:ssl:AbstractVerifier.getCNs|] ([|java:security:cert:X509Certificate|] v7 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.getCNs:(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09f898.   v0:= new [|java:util:LinkedList|];
#L09f89c.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L09f8a2.   call temp:=  [|java:security:cert:X509Certificate.getSubjectX500Principal|](v7) @signature [|Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L09f8a8.   v6:= temp  @type object;
#L09f8aa.   call temp:=  [|javax:security:auth:x500:X500Principal.toString|](v6) @signature [|Ljavax/security/auth/x500/X500Principal;.toString:()Ljava/lang/String;|] @classDescriptor [|javax:security:auth:x500:X500Principal|] @type virtual;
#L09f8b0.   v3:= temp  @type object;
#L09f8b2.   v2:= new [|java:util:StringTokenizer|];
#L09f8b6.   v6:= "," @type (object, string);
#L09f8ba.   call temp:=  [|java:util:StringTokenizer.<init>|](v2, v3, v6) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L09f8c0.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v2) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L09f8c6.   v6:= temp;
#L09f8c8.   if v6 == 0 then goto L09f8f8;
#L09f8cc.   call temp:=  [|java:util:StringTokenizer.nextToken|](v2) @signature [|Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L09f8d2.   v4:= temp  @type object;
#L09f8d4.   v6:= "CN=" @type (object, string);
#L09f8d8.   call temp:=  [|java:lang:String.indexOf|](v4, v6) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f8de.   v5:= temp;
#L09f8e0.   if v5 < 0 then goto L09f8c0;
#L09f8e4.   v6:= v5 + 3;
#L09f8e8.   call temp:=  [|java:lang:String.substring|](v4, v6) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09f8ee.   v6:= temp  @type object;
#L09f8f0.   call temp:=  [|java:util:LinkedList.add|](v0, v6) @signature [|Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f8f6.   goto L09f8c0;
#L09f8f8.   call temp:=  [|java:util:LinkedList.isEmpty|](v0) @signature [|Ljava/util/LinkedList;.isEmpty:()Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f8fe.   v6:= temp;
#L09f900.   if v6 != 0 then goto L09f918;
#L09f904.   call temp:=  [|java:util:LinkedList.size|](v0) @signature [|Ljava/util/LinkedList;.size:()I|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f90a.   v6:= temp;
#L09f90c.   v1:= new [|java:lang:String|][v6];
#L09f910.   call temp:=  [|java:util:LinkedList.toArray|](v0, v1) @signature [|Ljava/util/LinkedList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f916.   return v1  @type object;
#L09f918.   v1:= 0  @length 4;
#L09f91a.   goto L09f916;

   }
    procedure [|java:lang:String|][] [|org:apache:http:conn:ssl:AbstractVerifier.getDNSSubjectAlts|] ([|java:security:cert:X509Certificate|] v12 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.getDNSSubjectAlts:(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L09f92c.   v6:= new [|java:util:LinkedList|];
#L09f930.   call temp:=  [|java:util:LinkedList.<init>|](v6) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L09f936.   v1:= 0  @length 4;
#L09f938.   call temp:=  [|java:security:cert:X509Certificate.getSubjectAlternativeNames|](v12) @signature [|Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;|] @classDescriptor [|java:security:cert:X509Certificate|] @type virtual;
#L09f93e.   v1:= temp  @type object;
#L09f940.   if v1 == 0 then goto L09f9be;
#L09f944.   call temp:=  [|java:util:Collection.iterator|](v1) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L09f94a.   v3:= temp  @type object;
#L09f94c.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09f952.   v9:= temp;
#L09f954.   if v9 == 0 then goto L09f9be;
#L09f958.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09f95e.   v0:= temp  @type object;
#L09f960.   v0:= ([|java:util:List|])v0;
#L09f964.   v4:= v0  @type object;
#L09f966.   v9:= 0  @length 4;
#L09f968.   call temp:=  [|java:util:List.get|](v4, v9) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L09f96e.   v9:= temp  @type object;
#L09f970.   v9:= ([|java:lang:Integer|])v9;
#L09f974.   call temp:=  [|java:lang:Integer.intValue|](v9) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L09f97a.   v8:= temp;
#L09f97c.   v9:= 2  @length 4;
#L09f97e.   if v8 != v9 then goto L09f94c;
#L09f982.   v9:= 1  @length 4;
#L09f984.   call temp:=  [|java:util:List.get|](v4, v9) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L09f98a.   v5:= temp  @type object;
#L09f98c.   v5:= ([|java:lang:String|])v5;
#L09f990.   call temp:=  [|java:util:LinkedList.add|](v6, v5) @signature [|Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f996.   goto L09f94c;
#L09f998.   v2:= Exception  @type object;
#L09f99a.   v9:= new [|org:apache:http:conn:ssl:AbstractVerifier|];
#L09f99e.   call temp:=  [|java:lang:Class.getName|](v9) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09f9a4.   v9:= temp  @type object;
#L09f9a6.   call temp:=  [|java:util:logging:Logger.getLogger|](v9) @signature [|Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;|] @classDescriptor [|java:util:logging:Logger|] @type static;
#L09f9ac.   v9:= temp  @type object;
#L09f9ae.   v10:= @@[|java:util:logging:Level.FINE|]   @type object;
#L09f9b2.   v11:= "Error parsing certificate." @type (object, string);
#L09f9b6.   call temp:=  [|java:util:logging:Logger.log|](v9, v10, v11, v2) @signature [|Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:logging:Logger|] @type virtual;
#L09f9bc.   goto L09f940;
#L09f9be.   call temp:=  [|java:util:LinkedList.isEmpty|](v6) @signature [|Ljava/util/LinkedList;.isEmpty:()Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f9c4.   v9:= temp;
#L09f9c6.   if v9 != 0 then goto L09f9de;
#L09f9ca.   call temp:=  [|java:util:LinkedList.size|](v6) @signature [|Ljava/util/LinkedList;.size:()I|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f9d0.   v9:= temp;
#L09f9d2.   v7:= new [|java:lang:String|][v9];
#L09f9d6.   call temp:=  [|java:util:LinkedList.toArray|](v6, v7) @signature [|Ljava/util/LinkedList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09f9dc.   return v7  @type object;
#L09f9de.   v7:= 0  @length 4;
#L09f9e0.   goto L09f9dc;
  catch  [|java:security:cert:CertificateParsingException|] @[L09f938..L09f93e] goto L09f998;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:AbstractVerifier.verify|] ([|org:apache:http:conn:ssl:AbstractVerifier|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:security:cert:X509Certificate|] v4 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L09fa04.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.getCNs|](v4) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.getCNs:(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type static;
#L09fa0a.   v0:= temp  @type object;
#L09fa0c.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.getDNSSubjectAlts|](v4) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.getDNSSubjectAlts:(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type static;
#L09fa12.   v1:= temp  @type object;
#L09fa14.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.verify|](v2, v3, v0, v1) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type virtual;
#L09fa1a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:AbstractVerifier.verify|] ([|org:apache:http:conn:ssl:AbstractVerifier|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|javax:net:ssl:SSLSocket|] v7 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09fa2c.   if v6 != 0 then goto L09fa40;
#L09fa30.   v3:= new [|java:lang:NullPointerException|];
#L09fa34.   v4:= "host to verify is null" @type (object, string);
#L09fa38.   call temp:=  [|java:lang:NullPointerException.<init>|](v3, v4) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09fa3e.   throw v3;
#L09fa40.   call temp:=  [|javax:net:ssl:SSLSocket.getSession|](v7) @signature [|Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L09fa46.   v1:= temp  @type object;
#L09fa48.   call temp:=  [|javax:net:ssl:SSLSession.getPeerCertificates|](v1) @signature [|Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L09fa4e.   v0:= temp  @type object;
#L09fa50.   v3:= 0  @length 4;
#L09fa52.   v2:= v0[v3]  @type object;
#L09fa56.   v2:= ([|java:security:cert:X509Certificate|])v2;
#L09fa5a.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.verify|](v5, v6, v2) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type virtual;
#L09fa60.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:AbstractVerifier.verify|] ([|org:apache:http:conn:ssl:AbstractVerifier|] v16 @type (this), [|java:lang:String|] v17 @type (object), [|java:lang:String|][] v18 @type (object), [|java:lang:String|][] v19 @type (object), [|boolean|] v20) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L09fa74.   v11:= new [|java:util:LinkedList|];
#L09fa78.   call temp:=  [|java:util:LinkedList.<init>|](v11) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L09fa7e.   if v18 == 0 then goto L09faa2;
#L09fa82.   v0:= v18  @type object;
#L09fa86.   v13:= v0.length;
#L09fa88.   if v13 <= 0 then goto L09faa2;
#L09fa8c.   v13:= 0  @length 4;
#L09fa8e.   v13:= v18[v13]  @type object;
#L09fa92.   if v13 == 0 then goto L09faa2;
#L09fa96.   v13:= 0  @length 4;
#L09fa98.   v13:= v18[v13]  @type object;
#L09fa9c.   call temp:=  [|java:util:LinkedList.add|](v11, v13) @signature [|Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09faa2.   if v19 == 0 then goto L09fac6;
#L09faa6.   v1:= v19  @type object;
#L09faaa.   v8:= v1.length;
#L09faac.   v6:= 0  @length 4;
#L09faae.   if v6 >= v8 then goto L09fac6;
#L09fab2.   v12:= v1[v6]  @type object;
#L09fab6.   if v12 == 0 then goto L09fac0;
#L09faba.   call temp:=  [|java:util:LinkedList.add|](v11, v12) @signature [|Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09fac0.   v6:= v6 + 1;
#L09fac4.   goto L09faae;
#L09fac6.   call temp:=  [|java:util:LinkedList.isEmpty|](v11) @signature [|Ljava/util/LinkedList;.isEmpty:()Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09facc.   v13:= temp;
#L09face.   if v13 == 0 then goto L09fb14;
#L09fad2.   v13:= new [|java:lang:StringBuilder|];
#L09fad6.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09fadc.   v14:= "Certificate for <" @type (object, string);
#L09fae0.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fae6.   v13:= temp  @type object;
#L09fae8.   v0:= v17  @type object;
#L09faec.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09faf2.   v13:= temp  @type object;
#L09faf4.   v14:= "> doesn't contain CN or DNS subjectAlt" @type (object, string);
#L09faf8.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fafe.   v13:= temp  @type object;
#L09fb00.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fb06.   v10:= temp  @type object;
#L09fb08.   v13:= new [|javax:net:ssl:SSLException|];
#L09fb0c.   call temp:=  [|javax:net:ssl:SSLException.<init>|](v13, v10) @signature [|Ljavax/net/ssl/SSLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLException|] @type direct;
#L09fb12.   throw v13;
#L09fb14.   v2:= new [|java:lang:StringBuffer|];
#L09fb18.   call temp:=  [|java:lang:StringBuffer.<init>|](v2) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L09fb1e.   call temp:=  [|java:lang:String.trim|](v17) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fb24.   v13:= temp  @type object;
#L09fb26.   v14:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L09fb2a.   call temp:=  [|java:lang:String.toLowerCase|](v13, v14) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fb30.   v5:= temp  @type object;
#L09fb32.   v9:= 0  @length 4;
#L09fb34.   call temp:=  [|java:util:LinkedList.iterator|](v11) @signature [|Ljava/util/LinkedList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L09fb3a.   v7:= temp  @type object;
#L09fb3c.   call temp:=  [|java:util:Iterator.hasNext|](v7) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09fb42.   v13:= temp;
#L09fb44.   if v13 == 0 then goto L09fc06;
#L09fb48.   call temp:=  [|java:util:Iterator.next|](v7) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09fb4e.   v3:= temp  @type object;
#L09fb50.   v3:= ([|java:lang:String|])v3;
#L09fb54.   v13:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L09fb58.   call temp:=  [|java:lang:String.toLowerCase|](v3, v13) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fb5e.   v3:= temp  @type object;
#L09fb60.   v13:= " <" @type (object, string);
#L09fb64.   call temp:=  [|java:lang:StringBuffer.append|](v2, v13) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L09fb6a.   call temp:=  [|java:lang:StringBuffer.append|](v2, v3) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L09fb70.   v13:= 62  @length 16;
#L09fb74.   call temp:=  [|java:lang:StringBuffer.append|](v2, v13) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L09fb7a.   call temp:=  [|java:util:Iterator.hasNext|](v7) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L09fb80.   v13:= temp;
#L09fb82.   if v13 == 0 then goto L09fb90;
#L09fb86.   v13:= " OR" @type (object, string);
#L09fb8a.   call temp:=  [|java:lang:StringBuffer.append|](v2, v13) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L09fb90.   v13:= "*." @type (object, string);
#L09fb94.   call temp:=  [|java:lang:String.startsWith|](v3, v13) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fb9a.   v13:= temp;
#L09fb9c.   if v13 == 0 then goto L09fc54;
#L09fba0.   v13:= 46  @length 16;
#L09fba4.   v14:= 2  @length 4;
#L09fba6.   call temp:=  [|java:lang:String.indexOf|](v3, v13, v14) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fbac.   v13:= temp;
#L09fbae.   v14:= -1  @length 4;
#L09fbb0.   if v13 == v14 then goto L09fc54;
#L09fbb4.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.acceptableCountryWildcard|](v3) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.acceptableCountryWildcard:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type static;
#L09fbba.   v13:= temp;
#L09fbbc.   if v13 == 0 then goto L09fc54;
#L09fbc0.   call temp:=  [|org:apache:http:conn:util:InetAddressUtils.isIPv4Address|](v17) @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv4Address:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:conn:util:InetAddressUtils|] @type static;
#L09fbc6.   v13:= temp;
#L09fbc8.   if v13 != 0 then goto L09fc54;
#L09fbcc.   v4:= 1  @length 4;
#L09fbce.   if v4 == 0 then goto L09fc5c;
#L09fbd2.   v13:= 1  @length 4;
#L09fbd4.   call temp:=  [|java:lang:String.substring|](v3, v13) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fbda.   v13:= temp  @type object;
#L09fbdc.   call temp:=  [|java:lang:String.endsWith|](v5, v13) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fbe2.   v9:= temp;
#L09fbe4.   if v9 == 0 then goto L09fc02;
#L09fbe8.   if v20 == 0 then goto L09fc02;
#L09fbec.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.countDots|](v5) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.countDots:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type static;
#L09fbf2.   v13:= temp;
#L09fbf4.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.countDots|](v3) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.countDots:(Ljava/lang/String;)I|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type static;
#L09fbfa.   v14:= temp;
#L09fbfc.   if v13 != v14 then goto L09fc58;
#L09fc00.   v9:= 1  @length 4;
#L09fc02.   if v9 == 0 then goto L09fb3c;
#L09fc06.   if v9 != 0 then goto L09fc66;
#L09fc0a.   v13:= new [|javax:net:ssl:SSLException|];
#L09fc0e.   v14:= new [|java:lang:StringBuilder|];
#L09fc12.   call temp:=  [|java:lang:StringBuilder.<init>|](v14) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09fc18.   v15:= "hostname in certificate didn't match: <" @type (object, string);
#L09fc1c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fc22.   v14:= temp  @type object;
#L09fc24.   v0:= v17  @type object;
#L09fc28.   call temp:=  [|java:lang:StringBuilder.append|](v14, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fc2e.   v14:= temp  @type object;
#L09fc30.   v15:= "> !=" @type (object, string);
#L09fc34.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fc3a.   v14:= temp  @type object;
#L09fc3c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fc42.   v14:= temp  @type object;
#L09fc44.   call temp:=  [|java:lang:StringBuilder.toString|](v14) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09fc4a.   v14:= temp  @type object;
#L09fc4c.   call temp:=  [|javax:net:ssl:SSLException.<init>|](v13, v14) @signature [|Ljavax/net/ssl/SSLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|javax:net:ssl:SSLException|] @type direct;
#L09fc52.   throw v13;
#L09fc54.   v4:= 0  @length 4;
#L09fc56.   goto L09fbce;
#L09fc58.   v9:= 0  @length 4;
#L09fc5a.   goto L09fc02;
#L09fc5c.   call temp:=  [|java:lang:String.equals|](v5, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09fc62.   v9:= temp;
#L09fc64.   goto L09fc02;
#L09fc66.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:ssl:AbstractVerifier.verify|] ([|org:apache:http:conn:ssl:AbstractVerifier|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|javax:net:ssl:SSLSession|] v7 @type (object)) @owner [|org:apache:http:conn:ssl:AbstractVerifier|] @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09fc78.   v3:= 0  @length 4;
#L09fc7a.   call temp:=  [|javax:net:ssl:SSLSession.getPeerCertificates|](v7) @signature [|Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L09fc80.   v0:= temp  @type object;
#L09fc82.   v4:= 0  @length 4;
#L09fc84.   v2:= v0[v4]  @type object;
#L09fc88.   v2:= ([|java:security:cert:X509Certificate|])v2;
#L09fc8c.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.verify|](v5, v6, v2) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type virtual;
#L09fc92.   v3:= 1  @length 4;
#L09fc94.   return v3;
#L09fc96.   v1:= Exception  @type object;
#L09fc98.   goto L09fc94;
  catch  [|javax:net:ssl:SSLException|] @[L09fc7a..L09fc92] goto L09fc96;

   }
record [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:conn:ssl:AbstractVerifier|] {
   }
    procedure [|void|] [|org:apache:http:conn:ssl:AllowAllHostnameVerifier.<init>|] ([|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] v0 @type (this)) @owner [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/AllowAllHostnameVerifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09fcbc.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type direct;
#L09fcc2.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:ssl:AllowAllHostnameVerifier.toString|] ([|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] v1 @type (this)) @owner [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/AllowAllHostnameVerifier;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09fcd4.   v0:= "ALLOW_ALL" @type (object, string);
#L09fcd8.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:AllowAllHostnameVerifier.verify|] ([|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|][] v2 @type (object), [|java:lang:String|][] v3 @type (object)) @owner [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/AllowAllHostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L09fcec.   return @void ;

   }
record [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:conn:ssl:AbstractVerifier|] {
   }
    procedure [|void|] [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier.<init>|] ([|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] v0 @type (this)) @owner [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L09fd00.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type direct;
#L09fd06.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier.toString|] ([|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] v1 @type (this)) @owner [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09fd18.   v0:= "BROWSER_COMPATIBLE" @type (object, string);
#L09fd1c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier.verify|] ([|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|][] v3 @type (object), [|java:lang:String|][] v4 @type (object)) @owner [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09fd30.   v0:= 0  @length 4;
#L09fd32.   call temp:=  [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier.verify|](v1, v2, v3, v4, v0) @signature [|Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] @type virtual;
#L09fd38.   return @void ;

   }
record [|org:apache:http:conn:ssl:SSLSocketFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:scheme:LayeredSocketFactory|] {
      [|org:apache:http:conn:ssl:X509HostnameVerifier|] [|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]    @AccessFlag PRIVATE;
      [|org:apache:http:conn:scheme:HostNameResolver|] [|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]    @AccessFlag PRIVATE_FINAL;
      [|javax:net:ssl:SSLSocketFactory|] [|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]    @AccessFlag PRIVATE_FINAL;
      [|javax:net:ssl:SSLContext|] [|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:http:conn:ssl:X509HostnameVerifier|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|org:apache:http:conn:ssl:X509HostnameVerifier|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|org:apache:http:conn:ssl:SSLSocketFactory|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.DEFAULT_FACTORY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.SSL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.SSLV2|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|org:apache:http:conn:ssl:X509HostnameVerifier|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.STRICT_HOSTNAME_VERIFIER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:conn:ssl:SSLSocketFactory.TLS|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<clinit>|] () @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09fd4c.   v0:= new [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|];
#L09fd50.   call temp:=  [|org:apache:http:conn:ssl:AllowAllHostnameVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/AllowAllHostnameVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:AllowAllHostnameVerifier|] @type direct;
#L09fd56.   @@[|org:apache:http:conn:ssl:SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER|] := v0  @type object;
#L09fd5a.   v0:= new [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|];
#L09fd5e.   call temp:=  [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/BrowserCompatHostnameVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:BrowserCompatHostnameVerifier|] @type direct;
#L09fd64.   @@[|org:apache:http:conn:ssl:SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER|] := v0  @type object;
#L09fd68.   v0:= new [|org:apache:http:conn:ssl:StrictHostnameVerifier|];
#L09fd6c.   call temp:=  [|org:apache:http:conn:ssl:StrictHostnameVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:StrictHostnameVerifier|] @type direct;
#L09fd72.   @@[|org:apache:http:conn:ssl:SSLSocketFactory.STRICT_HOSTNAME_VERIFIER|] := v0  @type object;
#L09fd76.   v0:= new [|org:apache:http:conn:ssl:SSLSocketFactory|];
#L09fd7a.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type direct;
#L09fd80.   @@[|org:apache:http:conn:ssl:SSLSocketFactory.DEFAULT_FACTORY|] := v0  @type object;
#L09fd84.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v2 @type (this)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09fd98.   v1:= 0  @length 4;
#L09fd9a.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09fda0.   v0:= @@[|org:apache:http:conn:ssl:SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER|]   @type object;
#L09fda4.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]  := v0 @type object;
#L09fda8.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]  := v1 @type object;
#L09fdac.   call temp:=  [|javax:net:ssl:HttpsURLConnection.getDefaultSSLSocketFactory|]() @signature [|Ljavax/net/ssl/HttpsURLConnection;.getDefaultSSLSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;|] @classDescriptor [|javax:net:ssl:HttpsURLConnection|] @type static;
#L09fdb2.   v0:= temp  @type object;
#L09fdb4.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]  := v0 @type object;
#L09fdb8.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]  := v1 @type object;
#L09fdbc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:security:KeyStore|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:security:KeyStore|] v7 @type (object), [|java:security:SecureRandom|] v8 @type (object), [|org:apache:http:conn:scheme:HostNameResolver|] v9 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L09fdd0.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09fdd6.   v2:= @@[|org:apache:http:conn:ssl:SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER|]   @type object;
#L09fdda.   v3.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]  := v2 @type object;
#L09fdde.   if v4 != 0 then goto L09fde6;
#L09fde2.   v4:= "TLS" @type (object, string);
#L09fde6.   v0:= 0  @length 4;
#L09fde8.   if v5 == 0 then goto L09fdf4;
#L09fdec.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.createKeyManagers|](v5, v6) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createKeyManagers:(Ljava/security/KeyStore;Ljava/lang/String;)[Ljavax/net/ssl/KeyManager;|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type static;
#L09fdf2.   v0:= temp  @type object;
#L09fdf4.   v1:= 0  @length 4;
#L09fdf6.   if v7 == 0 then goto L09fe02;
#L09fdfa.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.createTrustManagers|](v7) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createTrustManagers:(Ljava/security/KeyStore;)[Ljavax/net/ssl/TrustManager;|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type static;
#L09fe00.   v1:= temp  @type object;
#L09fe02.   call temp:=  [|javax:net:ssl:SSLContext.getInstance|](v4) @signature [|Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;|] @classDescriptor [|javax:net:ssl:SSLContext|] @type static;
#L09fe08.   v2:= temp  @type object;
#L09fe0a.   v3.[|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]  := v2 @type object;
#L09fe0e.   v2:= v3.[|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]   @type object;
#L09fe12.   call temp:=  [|javax:net:ssl:SSLContext.init|](v2, v0, v1, v8) @signature [|Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V|] @classDescriptor [|javax:net:ssl:SSLContext|] @type virtual;
#L09fe18.   v2:= v3.[|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]   @type object;
#L09fe1c.   call temp:=  [|javax:net:ssl:SSLContext.getSocketFactory|](v2) @signature [|Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;|] @classDescriptor [|javax:net:ssl:SSLContext|] @type virtual;
#L09fe22.   v2:= temp  @type object;
#L09fe24.   v3.[|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]  := v2 @type object;
#L09fe28.   v3.[|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]  := v9 @type object;
#L09fe2c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v7 @type (this), [|java:security:KeyStore|] v8 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/security/KeyStore;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09fe40.   v2:= 0  @length 4;
#L09fe42.   v1:= "TLS" @type (object, string);
#L09fe46.   v0:= v7  @type object;
#L09fe48.   v3:= v2  @type object;
#L09fe4a.   v4:= v8  @type object;
#L09fe4c.   v5:= v2  @type object;
#L09fe4e.   v6:= v2  @type object;
#L09fe50.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type direct;
#L09fe56.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v7 @type (this), [|java:security:KeyStore|] v8 @type (object), [|java:lang:String|] v9 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/security/KeyStore;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09fe68.   v4:= 0  @length 4;
#L09fe6a.   v1:= "TLS" @type (object, string);
#L09fe6e.   v0:= v7  @type object;
#L09fe70.   v2:= v8  @type object;
#L09fe72.   v3:= v9  @type object;
#L09fe74.   v5:= v4  @type object;
#L09fe76.   v6:= v4  @type object;
#L09fe78.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type direct;
#L09fe7e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v7 @type (this), [|java:security:KeyStore|] v8 @type (object), [|java:lang:String|] v9 @type (object), [|java:security:KeyStore|] v10 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09fe90.   v5:= 0  @length 4;
#L09fe92.   v1:= "TLS" @type (object, string);
#L09fe96.   v0:= v7  @type object;
#L09fe98.   v2:= v8  @type object;
#L09fe9a.   v3:= v9  @type object;
#L09fe9c.   v4:= v10  @type object;
#L09fe9e.   v6:= v5  @type object;
#L09fea0.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type direct;
#L09fea6.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.<init>|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v2 @type (this), [|javax:net:ssl:SSLSocketFactory|] v3 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.<init>:(Ljavax/net/ssl/SSLSocketFactory;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L09feb8.   v1:= 0  @length 4;
#L09feba.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09fec0.   v0:= @@[|org:apache:http:conn:ssl:SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER|]   @type object;
#L09fec4.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]  := v0 @type object;
#L09fec8.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.sslcontext|]  := v1 @type object;
#L09fecc.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]  := v3 @type object;
#L09fed0.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]  := v1 @type object;
#L09fed4.   return @void ;

   }
    procedure [|javax:net:ssl:KeyManager|][] [|org:apache:http:conn:ssl:SSLSocketFactory.createKeyManagers|] ([|java:security:KeyStore|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createKeyManagers:(Ljava/security/KeyStore;Ljava/lang/String;)[Ljavax/net/ssl/KeyManager;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09fee8.   if v3 != 0 then goto L09fefc;
#L09feec.   v1:= new [|java:lang:IllegalArgumentException|];
#L09fef0.   v2:= "Keystore may not be null" @type (object, string);
#L09fef4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09fefa.   throw v1;
#L09fefc.   call temp:=  [|javax:net:ssl:KeyManagerFactory.getDefaultAlgorithm|]() @signature [|Ljavax/net/ssl/KeyManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;|] @classDescriptor [|javax:net:ssl:KeyManagerFactory|] @type static;
#L09ff02.   v1:= temp  @type object;
#L09ff04.   call temp:=  [|javax:net:ssl:KeyManagerFactory.getInstance|](v1) @signature [|Ljavax/net/ssl/KeyManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;|] @classDescriptor [|javax:net:ssl:KeyManagerFactory|] @type static;
#L09ff0a.   v0:= temp  @type object;
#L09ff0c.   if v4 == 0 then goto L09ff28;
#L09ff10.   call temp:=  [|java:lang:String.toCharArray|](v4) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L09ff16.   v1:= temp  @type object;
#L09ff18.   call temp:=  [|javax:net:ssl:KeyManagerFactory.init|](v0, v3, v1) @signature [|Ljavax/net/ssl/KeyManagerFactory;.init:(Ljava/security/KeyStore;[C)V|] @classDescriptor [|javax:net:ssl:KeyManagerFactory|] @type virtual;
#L09ff1e.   call temp:=  [|javax:net:ssl:KeyManagerFactory.getKeyManagers|](v0) @signature [|Ljavax/net/ssl/KeyManagerFactory;.getKeyManagers:()[Ljavax/net/ssl/KeyManager;|] @classDescriptor [|javax:net:ssl:KeyManagerFactory|] @type virtual;
#L09ff24.   v1:= temp  @type object;
#L09ff26.   return v1  @type object;
#L09ff28.   v1:= 0  @length 4;
#L09ff2a.   goto L09ff18;

   }
    procedure [|javax:net:ssl:TrustManager|][] [|org:apache:http:conn:ssl:SSLSocketFactory.createTrustManagers|] ([|java:security:KeyStore|] v3 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createTrustManagers:(Ljava/security/KeyStore;)[Ljavax/net/ssl/TrustManager;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09ff3c.   if v3 != 0 then goto L09ff50;
#L09ff40.   v1:= new [|java:lang:IllegalArgumentException|];
#L09ff44.   v2:= "Keystore may not be null" @type (object, string);
#L09ff48.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ff4e.   throw v1;
#L09ff50.   call temp:=  [|javax:net:ssl:TrustManagerFactory.getDefaultAlgorithm|]() @signature [|Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;|] @classDescriptor [|javax:net:ssl:TrustManagerFactory|] @type static;
#L09ff56.   v1:= temp  @type object;
#L09ff58.   call temp:=  [|javax:net:ssl:TrustManagerFactory.getInstance|](v1) @signature [|Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;|] @classDescriptor [|javax:net:ssl:TrustManagerFactory|] @type static;
#L09ff5e.   v0:= temp  @type object;
#L09ff60.   call temp:=  [|javax:net:ssl:TrustManagerFactory.init|](v0, v3) @signature [|Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V|] @classDescriptor [|javax:net:ssl:TrustManagerFactory|] @type virtual;
#L09ff66.   call temp:=  [|javax:net:ssl:TrustManagerFactory.getTrustManagers|](v0) @signature [|Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;|] @classDescriptor [|javax:net:ssl:TrustManagerFactory|] @type virtual;
#L09ff6c.   v1:= temp  @type object;
#L09ff6e.   return v1  @type object;

   }
    procedure [|org:apache:http:conn:ssl:SSLSocketFactory|] [|org:apache:http:conn:ssl:SSLSocketFactory.getSocketFactory|] () @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.getSocketFactory:()Lorg/apache/http/conn/ssl/SSLSocketFactory;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L09ff80.   v0:= @@[|org:apache:http:conn:ssl:SSLSocketFactory.DEFAULT_FACTORY|]   @type object;
#L09ff84.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:ssl:SSLSocketFactory.connectSocket|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v8 @type (this), [|java:net:Socket|] v9 @type (object), [|java:lang:String|] v10 @type (object), [|int|] v11, [|java:net:InetAddress|] v12 @type (object), [|int|] v13, [|org:apache:http:params:HttpParams|] v14 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.connectSocket:(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L09ff98.   if v10 != 0 then goto L09ffac;
#L09ff9c.   v6:= new [|java:lang:IllegalArgumentException|];
#L09ffa0.   v7:= "Target host may not be null." @type (object, string);
#L09ffa4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ffaa.   throw v6;
#L09ffac.   if v14 != 0 then goto L09ffc0;
#L09ffb0.   v6:= new [|java:lang:IllegalArgumentException|];
#L09ffb4.   v7:= "Parameters may not be null." @type (object, string);
#L09ffb8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09ffbe.   throw v6;
#L09ffc0.   if v9 == 0 then goto L0a0034;
#L09ffc4.   v6:= v9  @type object;
#L09ffc6.   v6:= ([|javax:net:ssl:SSLSocket|])v6;
#L09ffca.   v5:= v6  @type object;
#L09ffcc.   v5:= ([|javax:net:ssl:SSLSocket|])v5;
#L09ffd0.   if v12 != 0 then goto L09ffd8;
#L09ffd4.   if v13 <= 0 then goto L09ffee;
#L09ffd8.   if v13 >= 0 then goto L09ffde;
#L09ffdc.   v13:= 0  @length 4;
#L09ffde.   v2:= new [|java:net:InetSocketAddress|];
#L09ffe2.   call temp:=  [|java:net:InetSocketAddress.<init>|](v2, v12, v13) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L09ffe8.   call temp:=  [|javax:net:ssl:SSLSocket.bind|](v5, v2) @signature [|Ljavax/net/ssl/SSLSocket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L09ffee.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getConnectionTimeout|](v14) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getConnectionTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L09fff4.   v0:= temp;
#L09fff6.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSoTimeout|](v14) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSoTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L09fffc.   v4:= temp;
#L09fffe.   v6:= v8.[|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]   @type object;
#L0a0002.   if v6 == 0 then goto L0a003e;
#L0a0006.   v3:= new [|java:net:InetSocketAddress|];
#L0a000a.   v6:= v8.[|org:apache:http:conn:ssl:SSLSocketFactory.nameResolver|]   @type object;
#L0a000e.   call temp:=  [|org:apache:http:conn:scheme:HostNameResolver.resolve|](v6, v10) @signature [|Lorg/apache/http/conn/scheme/HostNameResolver;.resolve:(Ljava/lang/String;)Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:scheme:HostNameResolver|] @type interface;
#L0a0014.   v6:= temp  @type object;
#L0a0016.   call temp:=  [|java:net:InetSocketAddress.<init>|](v3, v6, v11) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0a001c.   call temp:=  [|javax:net:ssl:SSLSocket.connect|](v5, v3, v0) @signature [|Ljavax/net/ssl/SSLSocket;.connect:(Ljava/net/SocketAddress;I)V|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L0a0022.   call temp:=  [|javax:net:ssl:SSLSocket.setSoTimeout|](v5, v4) @signature [|Ljavax/net/ssl/SSLSocket;.setSoTimeout:(I)V|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L0a0028.   v6:= v8.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]   @type object;
#L0a002c.   call temp:=  [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|](v6, v10, v5) @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V|] @classDescriptor [|org:apache:http:conn:ssl:X509HostnameVerifier|] @type interface;
#L0a0032.   return v5  @type object;
#L0a0034.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.createSocket|](v8) @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type virtual;
#L0a003a.   v6:= temp  @type object;
#L0a003c.   goto L09ffc6;
#L0a003e.   v3:= new [|java:net:InetSocketAddress|];
#L0a0042.   call temp:=  [|java:net:InetSocketAddress.<init>|](v3, v10, v11) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0a0048.   goto L0a001c;
#L0a004a.   v1:= Exception  @type object;
#L0a004c.   call temp:=  [|javax:net:ssl:SSLSocket.close|](v5) @signature [|Ljavax/net/ssl/SSLSocket;.close:()V|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L0a0052.   throw v1;
#L0a0054.   v6:= Exception  @type object;
#L0a0056.   goto L0a0052;
  catch  [|java:io:IOException|] @[L0a0028..L0a0032] goto L0a004a;
  catch  [|java:lang:Exception|] @[L0a004c..L0a0052] goto L0a0054;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:ssl:SSLSocketFactory.createSocket|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createSocket:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0084.   v0:= v1.[|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]   @type object;
#L0a0088.   call temp:=  [|javax:net:ssl:SSLSocketFactory.createSocket|](v0) @signature [|Ljavax/net/ssl/SSLSocketFactory;.createSocket:()Ljava/net/Socket;|] @classDescriptor [|javax:net:ssl:SSLSocketFactory|] @type virtual;
#L0a008e.   v0:= temp  @type object;
#L0a0090.   v0:= ([|javax:net:ssl:SSLSocket|])v0;
#L0a0094.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|org:apache:http:conn:ssl:SSLSocketFactory.createSocket|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v2 @type (this), [|java:net:Socket|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|int|] v5, [|boolean|] v6) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a00a8.   v1:= v2.[|org:apache:http:conn:ssl:SSLSocketFactory.socketfactory|]   @type object;
#L0a00ac.   call temp:=  [|javax:net:ssl:SSLSocketFactory.createSocket|](v1, v3, v4, v5, v6) @signature [|Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;|] @classDescriptor [|javax:net:ssl:SSLSocketFactory|] @type virtual;
#L0a00b2.   v0:= temp  @type object;
#L0a00b4.   v0:= ([|javax:net:ssl:SSLSocket|])v0;
#L0a00b8.   v1:= v2.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]   @type object;
#L0a00bc.   call temp:=  [|org:apache:http:conn:ssl:X509HostnameVerifier.verify|](v1, v4, v0) @signature [|Lorg/apache/http/conn/ssl/X509HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V|] @classDescriptor [|org:apache:http:conn:ssl:X509HostnameVerifier|] @type interface;
#L0a00c2.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:ssl:X509HostnameVerifier|] [|org:apache:http:conn:ssl:SSLSocketFactory.getHostnameVerifier|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v1 @type (this)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.getHostnameVerifier:()Lorg/apache/http/conn/ssl/X509HostnameVerifier;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a00d4.   v0:= v1.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]   @type object;
#L0a00d8.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:conn:ssl:SSLSocketFactory.isSecure|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v2 @type (this), [|java:net:Socket|] v3 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a00ec.   if v3 != 0 then goto L0a0100;
#L0a00f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a00f4.   v1:= "Socket may not be null." @type (object, string);
#L0a00f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a00fe.   throw v0;
#L0a0100.   v0:= instanceof @varname v3 @type [|javax:net:ssl:SSLSocket|];
#L0a0104.   if v0 != 0 then goto L0a0118;
#L0a0108.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a010c.   v1:= "Socket not created by this factory." @type (object, string);
#L0a0110.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0116.   throw v0;
#L0a0118.   call temp:=  [|java:net:Socket.isClosed|](v3) @signature [|Ljava/net/Socket;.isClosed:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a011e.   v0:= temp;
#L0a0120.   if v0 == 0 then goto L0a0134;
#L0a0124.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0128.   v1:= "Socket is closed." @type (object, string);
#L0a012c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0132.   throw v0;
#L0a0134.   v0:= 1  @length 4;
#L0a0136.   return v0;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:SSLSocketFactory.setHostnameVerifier|] ([|org:apache:http:conn:ssl:SSLSocketFactory|] v2 @type (this), [|org:apache:http:conn:ssl:X509HostnameVerifier|] v3 @type (object)) @owner [|org:apache:http:conn:ssl:SSLSocketFactory|] @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.setHostnameVerifier:(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0148.   if v3 != 0 then goto L0a015c;
#L0a014c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0150.   v1:= "Hostname verifier may not be null" @type (object, string);
#L0a0154.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a015a.   throw v0;
#L0a015c.   v2.[|org:apache:http:conn:ssl:SSLSocketFactory.hostnameVerifier|]  := v3 @type object;
#L0a0160.   return @void ;

   }
record [|org:apache:http:conn:ssl:StrictHostnameVerifier|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:conn:ssl:AbstractVerifier|] {
   }
    procedure [|void|] [|org:apache:http:conn:ssl:StrictHostnameVerifier.<init>|] ([|org:apache:http:conn:ssl:StrictHostnameVerifier|] v0 @type (this)) @owner [|org:apache:http:conn:ssl:StrictHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0174.   call temp:=  [|org:apache:http:conn:ssl:AbstractVerifier.<init>|](v0) @signature [|Lorg/apache/http/conn/ssl/AbstractVerifier;.<init>:()V|] @classDescriptor [|org:apache:http:conn:ssl:AbstractVerifier|] @type direct;
#L0a017a.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:conn:ssl:StrictHostnameVerifier.toString|] ([|org:apache:http:conn:ssl:StrictHostnameVerifier|] v1 @type (this)) @owner [|org:apache:http:conn:ssl:StrictHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a018c.   v0:= "STRICT" @type (object, string);
#L0a0190.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:conn:ssl:StrictHostnameVerifier.verify|] ([|org:apache:http:conn:ssl:StrictHostnameVerifier|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|][] v3 @type (object), [|java:lang:String|][] v4 @type (object)) @owner [|org:apache:http:conn:ssl:StrictHostnameVerifier|] @signature [|Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a01a4.   v0:= 1  @length 4;
#L0a01a6.   call temp:=  [|org:apache:http:conn:ssl:StrictHostnameVerifier.verify|](v1, v2, v3, v4, v0) @signature [|Lorg/apache/http/conn/ssl/StrictHostnameVerifier;.verify:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:conn:ssl:StrictHostnameVerifier|] @type virtual;
#L0a01ac.   return @void ;

   }
record [|org:apache:http:conn:util:InetAddressUtils|]  @type class @AccessFlag PUBLIC  {
   }
      global [|java:util:regex:Pattern|] @@[|org:apache:http:conn:util:InetAddressUtils.IPV4_PATTERN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:regex:Pattern|] @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_HEX_COMPRESSED_PATTERN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:regex:Pattern|] @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_STD_PATTERN|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:conn:util:InetAddressUtils.<clinit>|] () @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a01c0.   v0:= "^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$" @type (object, string);
#L0a01c4.   call temp:=  [|java:util:regex:Pattern.compile|](v0) @signature [|Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L0a01ca.   v0:= temp  @type object;
#L0a01cc.   @@[|org:apache:http:conn:util:InetAddressUtils.IPV4_PATTERN|] := v0  @type object;
#L0a01d0.   v0:= "^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$" @type (object, string);
#L0a01d4.   call temp:=  [|java:util:regex:Pattern.compile|](v0) @signature [|Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L0a01da.   v0:= temp  @type object;
#L0a01dc.   @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_STD_PATTERN|] := v0  @type object;
#L0a01e0.   v0:= "^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)$" @type (object, string);
#L0a01e4.   call temp:=  [|java:util:regex:Pattern.compile|](v0) @signature [|Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L0a01ea.   v0:= temp  @type object;
#L0a01ec.   @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_HEX_COMPRESSED_PATTERN|] := v0  @type object;
#L0a01f0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:conn:util:InetAddressUtils.<init>|] ([|org:apache:http:conn:util:InetAddressUtils|] v0 @type (this)) @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0a0204.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a020a.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:conn:util:InetAddressUtils.isIPv4Address|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv4Address:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a021c.   v0:= @@[|org:apache:http:conn:util:InetAddressUtils.IPV4_PATTERN|]   @type object;
#L0a0220.   call temp:=  [|java:util:regex:Pattern.matcher|](v0, v1) @signature [|Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Pattern|] @type virtual;
#L0a0226.   v0:= temp  @type object;
#L0a0228.   call temp:=  [|java:util:regex:Matcher.matches|](v0) @signature [|Ljava/util/regex/Matcher;.matches:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L0a022e.   v0:= temp;
#L0a0230.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:util:InetAddressUtils.isIPv6Address|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv6Address:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a0244.   call temp:=  [|org:apache:http:conn:util:InetAddressUtils.isIPv6StdAddress|](v1) @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv6StdAddress:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:conn:util:InetAddressUtils|] @type static;
#L0a024a.   v0:= temp;
#L0a024c.   if v0 != 0 then goto L0a025c;
#L0a0250.   call temp:=  [|org:apache:http:conn:util:InetAddressUtils.isIPv6HexCompressedAddress|](v1) @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv6HexCompressedAddress:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:conn:util:InetAddressUtils|] @type static;
#L0a0256.   v0:= temp;
#L0a0258.   if v0 == 0 then goto L0a0260;
#L0a025c.   v0:= 1  @length 4;
#L0a025e.   return v0;
#L0a0260.   v0:= 0  @length 4;
#L0a0262.   goto L0a025e;

   }
    procedure [|boolean|] [|org:apache:http:conn:util:InetAddressUtils.isIPv6HexCompressedAddress|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv6HexCompressedAddress:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a0274.   v0:= @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_HEX_COMPRESSED_PATTERN|]   @type object;
#L0a0278.   call temp:=  [|java:util:regex:Pattern.matcher|](v0, v1) @signature [|Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Pattern|] @type virtual;
#L0a027e.   v0:= temp  @type object;
#L0a0280.   call temp:=  [|java:util:regex:Matcher.matches|](v0) @signature [|Ljava/util/regex/Matcher;.matches:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L0a0286.   v0:= temp;
#L0a0288.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:conn:util:InetAddressUtils.isIPv6StdAddress|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:conn:util:InetAddressUtils|] @signature [|Lorg/apache/http/conn/util/InetAddressUtils;.isIPv6StdAddress:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a029c.   v0:= @@[|org:apache:http:conn:util:InetAddressUtils.IPV6_STD_PATTERN|]   @type object;
#L0a02a0.   call temp:=  [|java:util:regex:Pattern.matcher|](v0, v1) @signature [|Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;|] @classDescriptor [|java:util:regex:Pattern|] @type virtual;
#L0a02a6.   v0:= temp  @type object;
#L0a02a8.   call temp:=  [|java:util:regex:Matcher.matches|](v0) @signature [|Ljava/util/regex/Matcher;.matches:()Z|] @classDescriptor [|java:util:regex:Matcher|] @type virtual;
#L0a02ae.   v0:= temp;
#L0a02b0.   return v0;

   }
record [|org:apache:http:cookie:Cookie|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getComment|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getComment:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getCommentURL|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getCommentURL:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getDomain|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Date|] [|org:apache:http:cookie:Cookie.getExpiryDate|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getExpiryDate:()Ljava/util/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getName|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getPath|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|][] [|org:apache:http:cookie:Cookie.getPorts|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getPorts:()[I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:Cookie.getValue|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getValue:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:cookie:Cookie.getVersion|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:cookie:Cookie.isExpired|] ([|java:util:Date|] v0 @type (object)) @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.isExpired:(Ljava/util/Date;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:cookie:Cookie.isPersistent|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.isPersistent:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:cookie:Cookie.isSecure|] () @owner [|org:apache:http:cookie:Cookie|] @signature [|Lorg/apache/http/cookie/Cookie;.isSecure:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:ClientCookie|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:cookie:Cookie|] {
   }
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.COMMENTURL_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.COMMENT_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.DISCARD_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.DOMAIN_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.EXPIRES_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.MAX_AGE_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.PATH_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.PORT_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.SECURE_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:ClientCookie.VERSION_ATTR|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|boolean|] [|org:apache:http:cookie:ClientCookie.containsAttribute|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:ClientCookie|] @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:ClientCookie.getAttribute|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:ClientCookie|] @signature [|Lorg/apache/http/cookie/ClientCookie;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:CookieAttributeHandler|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|org:apache:http:cookie:CookieAttributeHandler.match|] ([|org:apache:http:cookie:Cookie|] v0 @type (object), [|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieAttributeHandler|] @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:CookieAttributeHandler.parse|] ([|org:apache:http:cookie:SetCookie|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieAttributeHandler|] @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:CookieAttributeHandler.validate|] ([|org:apache:http:cookie:Cookie|] v0 @type (object), [|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieAttributeHandler|] @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:CookieIdentityComparator|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|], [|java:util:Comparator|] {
   }
      global [|long|] @@[|org:apache:http:cookie:CookieIdentityComparator.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:cookie:CookieIdentityComparator.<init>|] ([|org:apache:http:cookie:CookieIdentityComparator|] v0 @type (this)) @owner [|org:apache:http:cookie:CookieIdentityComparator|] @signature [|Lorg/apache/http/cookie/CookieIdentityComparator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a02c4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a02ca.   return @void ;

   }
    procedure [|int|] [|org:apache:http:cookie:CookieIdentityComparator.compare|] ([|org:apache:http:cookie:CookieIdentityComparator|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:http:cookie:CookieIdentityComparator|] @signature [|Lorg/apache/http/cookie/CookieIdentityComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0a02dc.   v2:= ([|org:apache:http:cookie:Cookie|])v2;
#L0a02e0.   v3:= ([|org:apache:http:cookie:Cookie|])v3;
#L0a02e4.   call temp:=  [|org:apache:http:cookie:CookieIdentityComparator.compare|](v1, v2, v3) @signature [|Lorg/apache/http/cookie/CookieIdentityComparator;.compare:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I|] @classDescriptor [|org:apache:http:cookie:CookieIdentityComparator|] @type virtual;
#L0a02ea.   v0:= temp;
#L0a02ec.   return v0;

   }
    procedure [|int|] [|org:apache:http:cookie:CookieIdentityComparator.compare|] ([|org:apache:http:cookie:CookieIdentityComparator|] v5 @type (this), [|org:apache:http:cookie:Cookie|] v6 @type (object), [|org:apache:http:cookie:Cookie|] v7 @type (object)) @owner [|org:apache:http:cookie:CookieIdentityComparator|] @signature [|Lorg/apache/http/cookie/CookieIdentityComparator;.compare:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a0300.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v6) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a0306.   v3:= temp  @type object;
#L0a0308.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v7) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a030e.   v4:= temp  @type object;
#L0a0310.   call temp:=  [|java:lang:String.compareTo|](v3, v4) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0316.   v2:= temp;
#L0a0318.   if v2 != 0 then goto L0a0344;
#L0a031c.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v6) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a0322.   v0:= temp  @type object;
#L0a0324.   if v0 != 0 then goto L0a032c;
#L0a0328.   v0:= "" @type (object, string);
#L0a032c.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v7) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a0332.   v1:= temp  @type object;
#L0a0334.   if v1 != 0 then goto L0a033c;
#L0a0338.   v1:= "" @type (object, string);
#L0a033c.   call temp:=  [|java:lang:String.compareToIgnoreCase|](v0, v1) @signature [|Ljava/lang/String;.compareToIgnoreCase:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0342.   v2:= temp;
#L0a0344.   return v2;

   }
record [|org:apache:http:cookie:CookieOrigin|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|java:lang:String|] [|org:apache:http:cookie:CookieOrigin.host|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|org:apache:http:cookie:CookieOrigin.path|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:cookie:CookieOrigin.port|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:cookie:CookieOrigin.secure|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:cookie:CookieOrigin.<init>|] ([|org:apache:http:cookie:CookieOrigin|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|int|] v5, [|java:lang:String|] v6 @type (object), [|boolean|] v7) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.<init>:(Ljava/lang/String;ILjava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a0358.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a035e.   if v4 != 0 then goto L0a0372;
#L0a0362.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0366.   v1:= "Host of origin may not be null" @type (object, string);
#L0a036a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0370.   throw v0;
#L0a0372.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0378.   v0:= temp  @type object;
#L0a037a.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0380.   v0:= temp;
#L0a0382.   if v0 != 0 then goto L0a0396;
#L0a0386.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a038a.   v1:= "Host of origin may not be blank" @type (object, string);
#L0a038e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0394.   throw v0;
#L0a0396.   if v5 >= 0 then goto L0a03cc;
#L0a039a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a039e.   v1:= new [|java:lang:StringBuilder|];
#L0a03a2.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a03a8.   v2:= "Invalid port: " @type (object, string);
#L0a03ac.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a03b2.   v1:= temp  @type object;
#L0a03b4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a03ba.   v1:= temp  @type object;
#L0a03bc.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a03c2.   v1:= temp  @type object;
#L0a03c4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a03ca.   throw v0;
#L0a03cc.   if v6 != 0 then goto L0a03e0;
#L0a03d0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a03d4.   v1:= "Path of origin may not be null." @type (object, string);
#L0a03d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a03de.   throw v0;
#L0a03e0.   v0:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a03e4.   call temp:=  [|java:lang:String.toLowerCase|](v4, v0) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a03ea.   v0:= temp  @type object;
#L0a03ec.   v3.[|org:apache:http:cookie:CookieOrigin.host|]  := v0 @type object;
#L0a03f0.   v3.[|org:apache:http:cookie:CookieOrigin.port|]  := v5;
#L0a03f4.   call temp:=  [|java:lang:String.trim|](v6) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a03fa.   v0:= temp  @type object;
#L0a03fc.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0402.   v0:= temp;
#L0a0404.   if v0 == 0 then goto L0a0412;
#L0a0408.   v3.[|org:apache:http:cookie:CookieOrigin.path|]  := v6 @type object;
#L0a040c.   v3.[|org:apache:http:cookie:CookieOrigin.secure|]  := v7 @boolean;
#L0a0410.   return @void ;
#L0a0412.   v0:= "/" @type (object, string);
#L0a0416.   v3.[|org:apache:http:cookie:CookieOrigin.path|]  := v0 @type object;
#L0a041a.   goto L0a040c;

   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:CookieOrigin.getHost|] ([|org:apache:http:cookie:CookieOrigin|] v1 @type (this)) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a042c.   v0:= v1.[|org:apache:http:cookie:CookieOrigin.host|]   @type object;
#L0a0430.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:CookieOrigin.getPath|] ([|org:apache:http:cookie:CookieOrigin|] v1 @type (this)) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0444.   v0:= v1.[|org:apache:http:cookie:CookieOrigin.path|]   @type object;
#L0a0448.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:cookie:CookieOrigin.getPort|] ([|org:apache:http:cookie:CookieOrigin|] v1 @type (this)) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a045c.   v0:= v1.[|org:apache:http:cookie:CookieOrigin.port|] ;
#L0a0460.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:cookie:CookieOrigin.isSecure|] ([|org:apache:http:cookie:CookieOrigin|] v1 @type (this)) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.isSecure:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0474.   v0:= v1.[|org:apache:http:cookie:CookieOrigin.secure|]   @boolean;
#L0a0478.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:CookieOrigin.toString|] ([|org:apache:http:cookie:CookieOrigin|] v2 @type (this)) @owner [|org:apache:http:cookie:CookieOrigin|] @signature [|Lorg/apache/http/cookie/CookieOrigin;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a048c.   v0:= new [|java:lang:StringBuilder|];
#L0a0490.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a0496.   v1:= 91  @length 16;
#L0a049a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04a0.   v1:= v2.[|org:apache:http:cookie:CookieOrigin.secure|]   @boolean;
#L0a04a4.   if v1 == 0 then goto L0a04b2;
#L0a04a8.   v1:= "(secure)" @type (object, string);
#L0a04ac.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04b2.   v1:= v2.[|org:apache:http:cookie:CookieOrigin.host|]   @type object;
#L0a04b6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04bc.   v1:= 58  @length 16;
#L0a04c0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04c6.   v1:= v2.[|org:apache:http:cookie:CookieOrigin.port|] ;
#L0a04ca.   call temp:=  [|java:lang:Integer.toString|](v1) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0a04d0.   v1:= temp  @type object;
#L0a04d2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04d8.   v1:= v2.[|org:apache:http:cookie:CookieOrigin.path|]   @type object;
#L0a04dc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04e2.   v1:= 93  @length 16;
#L0a04e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04ec.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a04f2.   v1:= temp  @type object;
#L0a04f4.   return v1  @type object;

   }
record [|org:apache:http:cookie:CookiePathComparator|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|], [|java:util:Comparator|] {
   }
      global [|long|] @@[|org:apache:http:cookie:CookiePathComparator.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:cookie:CookiePathComparator.<init>|] ([|org:apache:http:cookie:CookiePathComparator|] v0 @type (this)) @owner [|org:apache:http:cookie:CookiePathComparator|] @signature [|Lorg/apache/http/cookie/CookiePathComparator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0508.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a050e.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:cookie:CookiePathComparator.normalizePath|] ([|org:apache:http:cookie:CookiePathComparator|] v3 @type (this), [|org:apache:http:cookie:Cookie|] v4 @type (object)) @owner [|org:apache:http:cookie:CookiePathComparator|] @signature [|Lorg/apache/http/cookie/CookiePathComparator;.normalizePath:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a0520.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a0526.   v0:= temp  @type object;
#L0a0528.   if v0 != 0 then goto L0a0530;
#L0a052c.   v0:= "/" @type (object, string);
#L0a0530.   v1:= "/" @type (object, string);
#L0a0534.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a053a.   v1:= temp;
#L0a053c.   if v1 != 0 then goto L0a0566;
#L0a0540.   v1:= new [|java:lang:StringBuilder|];
#L0a0544.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a054a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a0550.   v1:= temp  @type object;
#L0a0552.   v2:= 47  @length 16;
#L0a0556.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a055c.   v1:= temp  @type object;
#L0a055e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a0564.   v0:= temp  @type object;
#L0a0566.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:cookie:CookiePathComparator.compare|] ([|org:apache:http:cookie:CookiePathComparator|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:http:cookie:CookiePathComparator|] @signature [|Lorg/apache/http/cookie/CookiePathComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0a0578.   v2:= ([|org:apache:http:cookie:Cookie|])v2;
#L0a057c.   v3:= ([|org:apache:http:cookie:Cookie|])v3;
#L0a0580.   call temp:=  [|org:apache:http:cookie:CookiePathComparator.compare|](v1, v2, v3) @signature [|Lorg/apache/http/cookie/CookiePathComparator;.compare:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I|] @classDescriptor [|org:apache:http:cookie:CookiePathComparator|] @type virtual;
#L0a0586.   v0:= temp;
#L0a0588.   return v0;

   }
    procedure [|int|] [|org:apache:http:cookie:CookiePathComparator.compare|] ([|org:apache:http:cookie:CookiePathComparator|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:Cookie|] v6 @type (object)) @owner [|org:apache:http:cookie:CookiePathComparator|] @signature [|Lorg/apache/http/cookie/CookiePathComparator;.compare:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/Cookie;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a059c.   v2:= 0  @length 4;
#L0a059e.   call temp:=  [|org:apache:http:cookie:CookiePathComparator.normalizePath|](v4, v5) @signature [|Lorg/apache/http/cookie/CookiePathComparator;.normalizePath:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookiePathComparator|] @type direct;
#L0a05a4.   v0:= temp  @type object;
#L0a05a6.   call temp:=  [|org:apache:http:cookie:CookiePathComparator.normalizePath|](v4, v6) @signature [|Lorg/apache/http/cookie/CookiePathComparator;.normalizePath:(Lorg/apache/http/cookie/Cookie;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookiePathComparator|] @type direct;
#L0a05ac.   v1:= temp  @type object;
#L0a05ae.   call temp:=  [|java:lang:String.equals|](v0, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a05b4.   v3:= temp;
#L0a05b6.   if v3 == 0 then goto L0a05bc;
#L0a05ba.   return v2;
#L0a05bc.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a05c2.   v3:= temp;
#L0a05c4.   if v3 == 0 then goto L0a05cc;
#L0a05c8.   v2:= -1  @length 4;
#L0a05ca.   goto L0a05ba;
#L0a05cc.   call temp:=  [|java:lang:String.startsWith|](v1, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a05d2.   v3:= temp;
#L0a05d4.   if v3 == 0 then goto L0a05ba;
#L0a05d8.   v2:= 1  @length 4;
#L0a05da.   goto L0a05ba;

   }
record [|org:apache:http:cookie:CookieSpec|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:util:List|] [|org:apache:http:cookie:CookieSpec.formatCookies|] ([|java:util:List|] v0 @type (object)) @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:cookie:CookieSpec.getVersion|] () @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.getVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:Header|] [|org:apache:http:cookie:CookieSpec.getVersionHeader|] () @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:cookie:CookieSpec.match|] ([|org:apache:http:cookie:Cookie|] v0 @type (object), [|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|org:apache:http:cookie:CookieSpec.parse|] ([|org:apache:http:Header|] v0 @type (object), [|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:CookieSpec.validate|] ([|org:apache:http:cookie:Cookie|] v0 @type (object), [|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:cookie:CookieSpec|] @signature [|Lorg/apache/http/cookie/CookieSpec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:CookieSpecFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:cookie:CookieSpecFactory.newInstance|] ([|org:apache:http:params:HttpParams|] v0 @type (object)) @owner [|org:apache:http:cookie:CookieSpecFactory|] @signature [|Lorg/apache/http/cookie/CookieSpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:CookieSpecRegistry|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|java:util:Map|] [|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:cookie:CookieSpecRegistry.<init>|] ([|org:apache:http:cookie:CookieSpecRegistry|] v1 @type (this)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a05ec.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a05f2.   v0:= new [|java:util:LinkedHashMap|];
#L0a05f6.   call temp:=  [|java:util:LinkedHashMap.<init>|](v0) @signature [|Ljava/util/LinkedHashMap;.<init>:()V|] @classDescriptor [|java:util:LinkedHashMap|] @type direct;
#L0a05fc.   v1.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]  := v0 @type object;
#L0a0600.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:cookie:CookieSpecRegistry.getCookieSpec|] ([|org:apache:http:cookie:CookieSpecRegistry|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.getCookieSpec:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a0614.   (@monitorenter v1)
#L0a0616.   v0:= 0  @length 4;
#L0a0618.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.getCookieSpec|](v1, v2, v0) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.getCookieSpec:(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a061e.   v0:= temp  @type object;
#L0a0620.   (@monitorexit v1)
#L0a0622.   return v0  @type object;
#L0a0624.   v0:= Exception  @type object;
#L0a0626.   (@monitorexit v1)
#L0a0628.   throw v0;
  catch  [|any|] @[L0a0618..L0a061e] goto L0a0624;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:cookie:CookieSpecRegistry.getCookieSpec|] ([|org:apache:http:cookie:CookieSpecRegistry|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|org:apache:http:params:HttpParams|] v6 @type (object)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.getCookieSpec:(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a0648.   (@monitorenter v4)
#L0a064a.   if v5 != 0 then goto L0a0664;
#L0a064e.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a0652.   v2:= "Name may not be null" @type (object, string);
#L0a0656.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a065c.   throw v1;
#L0a065e.   v1:= Exception  @type object;
#L0a0660.   (@monitorexit v4)
#L0a0662.   throw v1;
#L0a0664.   v1:= v4.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a0668.   v2:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a066c.   call temp:=  [|java:lang:String.toLowerCase|](v5, v2) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a0672.   v2:= temp  @type object;
#L0a0674.   call temp:=  [|java:util:Map.get|](v1, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a067a.   v0:= temp  @type object;
#L0a067c.   v0:= ([|org:apache:http:cookie:CookieSpecFactory|])v0;
#L0a0680.   if v0 == 0 then goto L0a0690;
#L0a0684.   call temp:=  [|org:apache:http:cookie:CookieSpecFactory.newInstance|](v0, v6) @signature [|Lorg/apache/http/cookie/CookieSpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @classDescriptor [|org:apache:http:cookie:CookieSpecFactory|] @type interface;
#L0a068a.   v1:= temp  @type object;
#L0a068c.   (@monitorexit v4)
#L0a068e.   return v1  @type object;
#L0a0690.   v1:= new [|java:lang:IllegalStateException|];
#L0a0694.   v2:= new [|java:lang:StringBuilder|];
#L0a0698.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a069e.   v3:= "Unsupported cookie spec: " @type (object, string);
#L0a06a2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a06a8.   v2:= temp  @type object;
#L0a06aa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a06b0.   v2:= temp  @type object;
#L0a06b2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a06b8.   v2:= temp  @type object;
#L0a06ba.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a06c0.   throw v1;
  catch  [|any|] @[L0a064e..L0a065e] goto L0a065e;
  catch  [|any|] @[L0a0664..L0a068a] goto L0a065e;
  catch  [|any|] @[L0a0690..L0a06c0] goto L0a065e;

   }
    procedure [|java:util:List|] [|org:apache:http:cookie:CookieSpecRegistry.getSpecNames|] ([|org:apache:http:cookie:CookieSpecRegistry|] v2 @type (this)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.getSpecNames:()Ljava/util/List;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0a06f0.   (@monitorenter v2)
#L0a06f2.   v0:= new [|java:util:ArrayList|];
#L0a06f6.   v1:= v2.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a06fa.   call temp:=  [|java:util:Map.keySet|](v1) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a0700.   v1:= temp  @type object;
#L0a0702.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0a0708.   (@monitorexit v2)
#L0a070a.   return v0  @type object;
#L0a070c.   v0:= Exception  @type object;
#L0a070e.   (@monitorexit v2)
#L0a0710.   throw v0;
  catch  [|any|] @[L0a06f2..L0a0708] goto L0a070c;

   }
    procedure [|void|] [|org:apache:http:cookie:CookieSpecRegistry.register|] ([|org:apache:http:cookie:CookieSpecRegistry|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|org:apache:http:cookie:CookieSpecFactory|] v4 @type (object)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0a0730.   (@monitorenter v2)
#L0a0732.   if v3 != 0 then goto L0a074c;
#L0a0736.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a073a.   v1:= "Name may not be null" @type (object, string);
#L0a073e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0744.   throw v0;
#L0a0746.   v0:= Exception  @type object;
#L0a0748.   (@monitorexit v2)
#L0a074a.   throw v0;
#L0a074c.   if v4 != 0 then goto L0a0760;
#L0a0750.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0754.   v1:= "Cookie spec factory may not be null" @type (object, string);
#L0a0758.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a075e.   throw v0;
#L0a0760.   v0:= v2.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a0764.   v1:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a0768.   call temp:=  [|java:lang:String.toLowerCase|](v3, v1) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a076e.   v1:= temp  @type object;
#L0a0770.   call temp:=  [|java:util:Map.put|](v0, v1, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a0776.   (@monitorexit v2)
#L0a0778.   return @void ;
  catch  [|any|] @[L0a0736..L0a0746] goto L0a0746;
  catch  [|any|] @[L0a0750..L0a0776] goto L0a0746;

   }
    procedure [|void|] [|org:apache:http:cookie:CookieSpecRegistry.setItems|] ([|org:apache:http:cookie:CookieSpecRegistry|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.setItems:(Ljava/util/Map;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a07a0.   (@monitorenter v1)
#L0a07a2.   if v2 != 0 then goto L0a07aa;
#L0a07a6.   (@monitorexit v1)
#L0a07a8.   return @void ;
#L0a07aa.   v0:= v1.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a07ae.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L0a07b4.   v0:= v1.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a07b8.   call temp:=  [|java:util:Map.putAll|](v0, v2) @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:Map|] @type interface;
#L0a07be.   goto L0a07a6;
#L0a07c0.   v0:= Exception  @type object;
#L0a07c2.   (@monitorexit v1)
#L0a07c4.   throw v0;
  catch  [|any|] @[L0a07aa..L0a07be] goto L0a07c0;

   }
    procedure [|void|] [|org:apache:http:cookie:CookieSpecRegistry.unregister|] ([|org:apache:http:cookie:CookieSpecRegistry|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:cookie:CookieSpecRegistry|] @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.unregister:(Ljava/lang/String;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0a07e4.   (@monitorenter v2)
#L0a07e6.   if v3 != 0 then goto L0a0800;
#L0a07ea.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a07ee.   v1:= "Id may not be null" @type (object, string);
#L0a07f2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a07f8.   throw v0;
#L0a07fa.   v0:= Exception  @type object;
#L0a07fc.   (@monitorexit v2)
#L0a07fe.   throw v0;
#L0a0800.   v0:= v2.[|org:apache:http:cookie:CookieSpecRegistry.registeredSpecs|]   @type object;
#L0a0804.   v1:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a0808.   call temp:=  [|java:lang:String.toLowerCase|](v3, v1) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a080e.   v1:= temp  @type object;
#L0a0810.   call temp:=  [|java:util:Map.remove|](v0, v1) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a0816.   (@monitorexit v2)
#L0a0818.   return @void ;
  catch  [|any|] @[L0a07ea..L0a07fa] goto L0a07fa;
  catch  [|any|] @[L0a0800..L0a0816] goto L0a07fa;

   }
record [|org:apache:http:cookie:MalformedCookieException|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:ProtocolException|] {
   }
      global [|long|] @@[|org:apache:http:cookie:MalformedCookieException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:cookie:MalformedCookieException.<init>|] ([|org:apache:http:cookie:MalformedCookieException|] v0 @type (this)) @owner [|org:apache:http:cookie:MalformedCookieException|] @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0840.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v0) @signature [|Lorg/apache/http/ProtocolException;.<init>:()V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a0846.   return @void ;

   }
    procedure [|void|] [|org:apache:http:cookie:MalformedCookieException.<init>|] ([|org:apache:http:cookie:MalformedCookieException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:cookie:MalformedCookieException|] @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0858.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v0, v1) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a085e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:cookie:MalformedCookieException.<init>|] ([|org:apache:http:cookie:MalformedCookieException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|org:apache:http:cookie:MalformedCookieException|] @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0870.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a0876.   return @void ;

   }
record [|org:apache:http:cookie:SM|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|java:lang:String|] @@[|org:apache:http:cookie:SM.COOKIE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:SM.COOKIE2|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:SM.SET_COOKIE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:cookie:SM.SET_COOKIE2|]    @AccessFlag PUBLIC_STATIC_FINAL;
record [|org:apache:http:cookie:SetCookie|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:cookie:Cookie|] {
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setComment|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setComment:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setDomain|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setDomain:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setExpiryDate|] ([|java:util:Date|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setExpiryDate:(Ljava/util/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setPath|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setPath:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setSecure|] ([|boolean|] v0) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setSecure:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setValue|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setValue:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie.setVersion|] ([|int|] v0) @owner [|org:apache:http:cookie:SetCookie|] @signature [|Lorg/apache/http/cookie/SetCookie;.setVersion:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:SetCookie2|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|org:apache:http:cookie:SetCookie|] {
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie2.setCommentURL|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:cookie:SetCookie2|] @signature [|Lorg/apache/http/cookie/SetCookie2;.setCommentURL:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie2.setDiscard|] ([|boolean|] v0) @owner [|org:apache:http:cookie:SetCookie2|] @signature [|Lorg/apache/http/cookie/SetCookie2;.setDiscard:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:cookie:SetCookie2.setPorts|] ([|int|][] v0) @owner [|org:apache:http:cookie:SetCookie2|] @signature [|Lorg/apache/http/cookie/SetCookie2;.setPorts:([I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:cookie:params:CookieSpecParamBean|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:HttpAbstractParamBean|] {
   }
    procedure [|void|] [|org:apache:http:cookie:params:CookieSpecParamBean.<init>|] ([|org:apache:http:cookie:params:CookieSpecParamBean|] v0 @type (this), [|org:apache:http:params:HttpParams|] v1 @type (object)) @owner [|org:apache:http:cookie:params:CookieSpecParamBean|] @signature [|Lorg/apache/http/cookie/params/CookieSpecParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a0888.   call temp:=  [|org:apache:http:params:HttpAbstractParamBean.<init>|](v0, v1) @signature [|Lorg/apache/http/params/HttpAbstractParamBean;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:params:HttpAbstractParamBean|] @type direct;
#L0a088e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:cookie:params:CookieSpecParamBean.setDatePatterns|] ([|org:apache:http:cookie:params:CookieSpecParamBean|] v2 @type (this), [|java:util:Collection|] v3 @type (object)) @owner [|org:apache:http:cookie:params:CookieSpecParamBean|] @signature [|Lorg/apache/http/cookie/params/CookieSpecParamBean;.setDatePatterns:(Ljava/util/Collection;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a08a0.   v0:= v2.[|org:apache:http:cookie:params:CookieSpecParamBean.params|]   @type object;
#L0a08a4.   v1:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0a08a8.   call temp:=  [|org:apache:http:params:HttpParams.setParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a08ae.   return @void ;

   }
    procedure [|void|] [|org:apache:http:cookie:params:CookieSpecParamBean.setSingleHeader|] ([|org:apache:http:cookie:params:CookieSpecParamBean|] v2 @type (this), [|boolean|] v3) @owner [|org:apache:http:cookie:params:CookieSpecParamBean|] @signature [|Lorg/apache/http/cookie/params/CookieSpecParamBean;.setSingleHeader:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a08c0.   v0:= v2.[|org:apache:http:cookie:params:CookieSpecParamBean.params|]   @type object;
#L0a08c4.   v1:= "http.protocol.single-cookie-header" @type (object, string);
#L0a08c8.   call temp:=  [|org:apache:http:params:HttpParams.setBooleanParameter|](v0, v1, v3) @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a08ce.   return @void ;

   }
record [|org:apache:http:entity:BasicHttpEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|] {
      [|java:io:InputStream|] [|org:apache:http:entity:BasicHttpEntity.content|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:entity:BasicHttpEntity.contentObtained|]    @AccessFlag PRIVATE;
      [|long|] [|org:apache:http:entity:BasicHttpEntity.length|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:entity:BasicHttpEntity.<init>|] ([|org:apache:http:entity:BasicHttpEntity|] v2 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a08e0.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a08e6.   v0:= -1  @length wide16;
#L0a08ea.   v2.[|org:apache:http:entity:BasicHttpEntity.length|]  := v0 @wide;
#L0a08ee.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:BasicHttpEntity.consumeContent|] ([|org:apache:http:entity:BasicHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.consumeContent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0900.   v0:= v1.[|org:apache:http:entity:BasicHttpEntity.content|]   @type object;
#L0a0904.   if v0 == 0 then goto L0a0912;
#L0a0908.   v0:= v1.[|org:apache:http:entity:BasicHttpEntity.content|]   @type object;
#L0a090c.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0912.   return @void ;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:BasicHttpEntity.getContent|] ([|org:apache:http:entity:BasicHttpEntity|] v2 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0924.   v0:= v2.[|org:apache:http:entity:BasicHttpEntity.content|]   @type object;
#L0a0928.   if v0 != 0 then goto L0a093c;
#L0a092c.   v0:= new [|java:lang:IllegalStateException|];
#L0a0930.   v1:= "Content has not been provided" @type (object, string);
#L0a0934.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a093a.   throw v0;
#L0a093c.   v0:= v2.[|org:apache:http:entity:BasicHttpEntity.contentObtained|]   @boolean;
#L0a0940.   if v0 == 0 then goto L0a0954;
#L0a0944.   v0:= new [|java:lang:IllegalStateException|];
#L0a0948.   v1:= "Content has been consumed" @type (object, string);
#L0a094c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a0952.   throw v0;
#L0a0954.   v0:= 1  @length 4;
#L0a0956.   v2.[|org:apache:http:entity:BasicHttpEntity.contentObtained|]  := v0 @boolean;
#L0a095a.   v0:= v2.[|org:apache:http:entity:BasicHttpEntity.content|]   @type object;
#L0a095e.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:BasicHttpEntity.getContentLength|] ([|org:apache:http:entity:BasicHttpEntity|] v2 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0970.   v0:= v2.[|org:apache:http:entity:BasicHttpEntity.length|]   @wide;
#L0a0974.   return v0  @type wide;

   }
    procedure [|boolean|] [|org:apache:http:entity:BasicHttpEntity.isRepeatable|] ([|org:apache:http:entity:BasicHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0988.   v0:= 0  @length 4;
#L0a098a.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:BasicHttpEntity.isStreaming|] ([|org:apache:http:entity:BasicHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a099c.   v0:= v1.[|org:apache:http:entity:BasicHttpEntity.contentObtained|]   @boolean;
#L0a09a0.   if v0 != 0 then goto L0a09b0;
#L0a09a4.   v0:= v1.[|org:apache:http:entity:BasicHttpEntity.content|]   @type object;
#L0a09a8.   if v0 == 0 then goto L0a09b0;
#L0a09ac.   v0:= 1  @length 4;
#L0a09ae.   return v0;
#L0a09b0.   v0:= 0  @length 4;
#L0a09b2.   goto L0a09ae;

   }
    procedure [|void|] [|org:apache:http:entity:BasicHttpEntity.setContent|] ([|org:apache:http:entity:BasicHttpEntity|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContent:(Ljava/io/InputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a09c4.   v1.[|org:apache:http:entity:BasicHttpEntity.content|]  := v2 @type object;
#L0a09c8.   v0:= 0  @length 4;
#L0a09ca.   v1.[|org:apache:http:entity:BasicHttpEntity.contentObtained|]  := v0 @boolean;
#L0a09ce.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:BasicHttpEntity.setContentLength|] ([|org:apache:http:entity:BasicHttpEntity|] v0 @type (this), [|long|] v1) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentLength:(J)V|] @Access PUBLIC {
      local temp ;
      
#L0a09e0.   v0.[|org:apache:http:entity:BasicHttpEntity.length|]  := v1 @wide;
#L0a09e4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:BasicHttpEntity.writeTo|] ([|org:apache:http:entity:BasicHttpEntity|] v5 @type (this), [|java:io:OutputStream|] v6 @type (object)) @owner [|org:apache:http:entity:BasicHttpEntity|] @signature [|Lorg/apache/http/entity/BasicHttpEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a09f8.   if v6 != 0 then goto L0a0a0c;
#L0a09fc.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a0a00.   v4:= "Output stream may not be null" @type (object, string);
#L0a0a04.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0a0a.   throw v3;
#L0a0a0c.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.getContent|](v5) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.getContent:()Ljava/io/InputStream;|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0a0a12.   v0:= temp  @type object;
#L0a0a14.   v3:= 2048  @length 16;
#L0a0a18.   v2:= new [|byte|][v3];
#L0a0a1c.   call temp:=  [|java:io:InputStream.read|](v0, v2) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0a22.   v1:= temp;
#L0a0a24.   v3:= -1  @length 4;
#L0a0a26.   if v1 == v3 then goto L0a0a34;
#L0a0a2a.   v3:= 0  @length 4;
#L0a0a2c.   call temp:=  [|java:io:OutputStream.write|](v6, v2, v3, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0a32.   goto L0a0a1c;
#L0a0a34.   return @void ;

   }
record [|org:apache:http:entity:BufferedHttpEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:HttpEntityWrapper|] {
      [|byte|][] [|org:apache:http:entity:BufferedHttpEntity.buffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:entity:BufferedHttpEntity.<init>|] ([|org:apache:http:entity:BufferedHttpEntity|] v4 @type (this), [|org:apache:http:HttpEntity|] v5 @type (object)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.<init>:(Lorg/apache/http/HttpEntity;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a0a48.   call temp:=  [|org:apache:http:entity:HttpEntityWrapper.<init>|](v4, v5) @signature [|Lorg/apache/http/entity/HttpEntityWrapper;.<init>:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:entity:HttpEntityWrapper|] @type direct;
#L0a0a4e.   call temp:=  [|org:apache:http:HttpEntity.isRepeatable|](v5) @signature [|Lorg/apache/http/HttpEntity;.isRepeatable:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0a54.   v0:= temp;
#L0a0a56.   if v0 == 0 then goto L0a0a6e;
#L0a0a5a.   call temp:=  [|org:apache:http:HttpEntity.getContentLength|](v5) @signature [|Lorg/apache/http/HttpEntity;.getContentLength:()J|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0a60.   v0:= temp  @type wide;
#L0a0a62.   v2:= 0  @length wide16;
#L0a0a66.   v0:= cmp(v0,v2);
#L0a0a6a.   if v0 >= 0 then goto L0a0a7c;
#L0a0a6e.   call temp:=  [|org:apache:http:util:EntityUtils.toByteArray|](v5) @signature [|Lorg/apache/http/util/EntityUtils;.toByteArray:(Lorg/apache/http/HttpEntity;)[B|] @classDescriptor [|org:apache:http:util:EntityUtils|] @type static;
#L0a0a74.   v0:= temp  @type object;
#L0a0a76.   v4.[|org:apache:http:entity:BufferedHttpEntity.buffer|]  := v0 @type object;
#L0a0a7a.   return @void ;
#L0a0a7c.   v0:= 0  @length 4;
#L0a0a7e.   v4.[|org:apache:http:entity:BufferedHttpEntity.buffer|]  := v0 @type object;
#L0a0a82.   goto L0a0a7a;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:BufferedHttpEntity.getContent|] ([|org:apache:http:entity:BufferedHttpEntity|] v2 @type (this)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0a94.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0a98.   if v0 == 0 then goto L0a0aac;
#L0a0a9c.   v0:= new [|java:io:ByteArrayInputStream|];
#L0a0aa0.   v1:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0aa4.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0a0aaa.   return v0  @type object;
#L0a0aac.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.wrappedEntity|]   @type object;
#L0a0ab0.   call temp:=  [|org:apache:http:HttpEntity.getContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContent:()Ljava/io/InputStream;|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0ab6.   v0:= temp  @type object;
#L0a0ab8.   goto L0a0aaa;

   }
    procedure [|long|] [|org:apache:http:entity:BufferedHttpEntity.getContentLength|] ([|org:apache:http:entity:BufferedHttpEntity|] v2 @type (this)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0acc.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0ad0.   if v0 == 0 then goto L0a0ade;
#L0a0ad4.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0ad8.   v0:= v0.length;
#L0a0ada.   v0:= (long)v0  @type i2l;
#L0a0adc.   return v0  @type wide;
#L0a0ade.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.wrappedEntity|]   @type object;
#L0a0ae2.   call temp:=  [|org:apache:http:HttpEntity.getContentLength|](v0) @signature [|Lorg/apache/http/HttpEntity;.getContentLength:()J|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0ae8.   v0:= temp  @type wide;
#L0a0aea.   goto L0a0adc;

   }
    procedure [|boolean|] [|org:apache:http:entity:BufferedHttpEntity.isChunked|] ([|org:apache:http:entity:BufferedHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.isChunked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0afc.   v0:= v1.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0b00.   if v0 != 0 then goto L0a0b18;
#L0a0b04.   v0:= v1.[|org:apache:http:entity:BufferedHttpEntity.wrappedEntity|]   @type object;
#L0a0b08.   call temp:=  [|org:apache:http:HttpEntity.isChunked|](v0) @signature [|Lorg/apache/http/HttpEntity;.isChunked:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0b0e.   v0:= temp;
#L0a0b10.   if v0 == 0 then goto L0a0b18;
#L0a0b14.   v0:= 1  @length 4;
#L0a0b16.   return v0;
#L0a0b18.   v0:= 0  @length 4;
#L0a0b1a.   goto L0a0b16;

   }
    procedure [|boolean|] [|org:apache:http:entity:BufferedHttpEntity.isRepeatable|] ([|org:apache:http:entity:BufferedHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0b2c.   v0:= 1  @length 4;
#L0a0b2e.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:BufferedHttpEntity.isStreaming|] ([|org:apache:http:entity:BufferedHttpEntity|] v1 @type (this)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0b40.   v0:= v1.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0b44.   if v0 != 0 then goto L0a0b5c;
#L0a0b48.   v0:= v1.[|org:apache:http:entity:BufferedHttpEntity.wrappedEntity|]   @type object;
#L0a0b4c.   call temp:=  [|org:apache:http:HttpEntity.isStreaming|](v0) @signature [|Lorg/apache/http/HttpEntity;.isStreaming:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0b52.   v0:= temp;
#L0a0b54.   if v0 == 0 then goto L0a0b5c;
#L0a0b58.   v0:= 1  @length 4;
#L0a0b5a.   return v0;
#L0a0b5c.   v0:= 0  @length 4;
#L0a0b5e.   goto L0a0b5a;

   }
    procedure [|void|] [|org:apache:http:entity:BufferedHttpEntity.writeTo|] ([|org:apache:http:entity:BufferedHttpEntity|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|org:apache:http:entity:BufferedHttpEntity|] @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0b70.   if v3 != 0 then goto L0a0b84;
#L0a0b74.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0b78.   v1:= "Output stream may not be null" @type (object, string);
#L0a0b7c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0b82.   throw v0;
#L0a0b84.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0b88.   if v0 == 0 then goto L0a0b98;
#L0a0b8c.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.buffer|]   @type object;
#L0a0b90.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0b96.   return @void ;
#L0a0b98.   v0:= v2.[|org:apache:http:entity:BufferedHttpEntity.wrappedEntity|]   @type object;
#L0a0b9c.   call temp:=  [|org:apache:http:HttpEntity.writeTo|](v0, v3) @signature [|Lorg/apache/http/HttpEntity;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a0ba2.   goto L0a0b96;

   }
record [|org:apache:http:entity:ByteArrayEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|], [|java:lang:Cloneable|] {
      [|byte|][] [|org:apache:http:entity:ByteArrayEntity.content|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:entity:ByteArrayEntity.<init>|] ([|org:apache:http:entity:ByteArrayEntity|] v2 @type (this), [|byte|][] v3) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a0bb4.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a0bba.   if v3 != 0 then goto L0a0bce;
#L0a0bbe.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0bc2.   v1:= "Source byte array may not be null" @type (object, string);
#L0a0bc6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0bcc.   throw v0;
#L0a0bce.   v2.[|org:apache:http:entity:ByteArrayEntity.content|]  := v3 @type object;
#L0a0bd2.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:entity:ByteArrayEntity.clone|] ([|org:apache:http:entity:ByteArrayEntity|] v1 @type (this)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0be4.   call temp:=  [|java:lang:Object.clone|](v1) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0a0bea.   v0:= temp  @type object;
#L0a0bec.   return v0  @type object;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:ByteArrayEntity.getContent|] ([|org:apache:http:entity:ByteArrayEntity|] v2 @type (this)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0c00.   v0:= new [|java:io:ByteArrayInputStream|];
#L0a0c04.   v1:= v2.[|org:apache:http:entity:ByteArrayEntity.content|]   @type object;
#L0a0c08.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0a0c0e.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:ByteArrayEntity.getContentLength|] ([|org:apache:http:entity:ByteArrayEntity|] v2 @type (this)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0c20.   v0:= v2.[|org:apache:http:entity:ByteArrayEntity.content|]   @type object;
#L0a0c24.   v0:= v0.length;
#L0a0c26.   v0:= (long)v0  @type i2l;
#L0a0c28.   return v0  @type wide;

   }
    procedure [|boolean|] [|org:apache:http:entity:ByteArrayEntity.isRepeatable|] ([|org:apache:http:entity:ByteArrayEntity|] v1 @type (this)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0c3c.   v0:= 1  @length 4;
#L0a0c3e.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:ByteArrayEntity.isStreaming|] ([|org:apache:http:entity:ByteArrayEntity|] v1 @type (this)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0c50.   v0:= 0  @length 4;
#L0a0c52.   return v0;

   }
    procedure [|void|] [|org:apache:http:entity:ByteArrayEntity.writeTo|] ([|org:apache:http:entity:ByteArrayEntity|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|org:apache:http:entity:ByteArrayEntity|] @signature [|Lorg/apache/http/entity/ByteArrayEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0c64.   if v3 != 0 then goto L0a0c78;
#L0a0c68.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0c6c.   v1:= "Output stream may not be null" @type (object, string);
#L0a0c70.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0c76.   throw v0;
#L0a0c78.   v0:= v2.[|org:apache:http:entity:ByteArrayEntity.content|]   @type object;
#L0a0c7c.   call temp:=  [|java:io:OutputStream.write|](v3, v0) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0c82.   call temp:=  [|java:io:OutputStream.flush|](v3) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0c88.   return @void ;

   }
record [|org:apache:http:entity:ContentLengthStrategy|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|org:apache:http:entity:ContentLengthStrategy.CHUNKED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:entity:ContentLengthStrategy.IDENTITY|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|long|] [|org:apache:http:entity:ContentLengthStrategy.determineLength|] ([|org:apache:http:HttpMessage|] v0 @type (object)) @owner [|org:apache:http:entity:ContentLengthStrategy|] @signature [|Lorg/apache/http/entity/ContentLengthStrategy;.determineLength:(Lorg/apache/http/HttpMessage;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:entity:ContentProducer|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:entity:ContentProducer.writeTo|] ([|java:io:OutputStream|] v0 @type (object)) @owner [|org:apache:http:entity:ContentProducer|] @signature [|Lorg/apache/http/entity/ContentProducer;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:entity:EntityTemplate|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|] {
      [|org:apache:http:entity:ContentProducer|] [|org:apache:http:entity:EntityTemplate.contentproducer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:entity:EntityTemplate.<init>|] ([|org:apache:http:entity:EntityTemplate|] v2 @type (this), [|org:apache:http:entity:ContentProducer|] v3 @type (object)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.<init>:(Lorg/apache/http/entity/ContentProducer;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a0c9c.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a0ca2.   if v3 != 0 then goto L0a0cb6;
#L0a0ca6.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0caa.   v1:= "Content producer may not be null" @type (object, string);
#L0a0cae.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0cb4.   throw v0;
#L0a0cb6.   v2.[|org:apache:http:entity:EntityTemplate.contentproducer|]  := v3 @type object;
#L0a0cba.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:EntityTemplate.consumeContent|] ([|org:apache:http:entity:EntityTemplate|] v0 @type (this)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.consumeContent:()V|] @Access PUBLIC {
      local temp ;
      
#L0a0ccc.   return @void ;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:EntityTemplate.getContent|] ([|org:apache:http:entity:EntityTemplate|] v2 @type (this)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0ce0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0a0ce4.   v1:= "Entity template does not implement getContent()" @type (object, string);
#L0a0ce8.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0a0cee.   throw v0;

   }
    procedure [|long|] [|org:apache:http:entity:EntityTemplate.getContentLength|] ([|org:apache:http:entity:EntityTemplate|] v2 @type (this)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0d00.   v0:= -1  @length wide16;
#L0a0d04.   return v0  @type wide;

   }
    procedure [|boolean|] [|org:apache:http:entity:EntityTemplate.isRepeatable|] ([|org:apache:http:entity:EntityTemplate|] v1 @type (this)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0d18.   v0:= 1  @length 4;
#L0a0d1a.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:EntityTemplate.isStreaming|] ([|org:apache:http:entity:EntityTemplate|] v1 @type (this)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0d2c.   v0:= 1  @length 4;
#L0a0d2e.   return v0;

   }
    procedure [|void|] [|org:apache:http:entity:EntityTemplate.writeTo|] ([|org:apache:http:entity:EntityTemplate|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|org:apache:http:entity:EntityTemplate|] @signature [|Lorg/apache/http/entity/EntityTemplate;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0d40.   if v3 != 0 then goto L0a0d54;
#L0a0d44.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0d48.   v1:= "Output stream may not be null" @type (object, string);
#L0a0d4c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0d52.   throw v0;
#L0a0d54.   v0:= v2.[|org:apache:http:entity:EntityTemplate.contentproducer|]   @type object;
#L0a0d58.   call temp:=  [|org:apache:http:entity:ContentProducer.writeTo|](v0, v3) @signature [|Lorg/apache/http/entity/ContentProducer;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|org:apache:http:entity:ContentProducer|] @type interface;
#L0a0d5e.   return @void ;

   }
record [|org:apache:http:entity:FileEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|], [|java:lang:Cloneable|] {
      [|java:io:File|] [|org:apache:http:entity:FileEntity.file|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:entity:FileEntity.<init>|] ([|org:apache:http:entity:FileEntity|] v2 @type (this), [|java:io:File|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a0d70.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a0d76.   if v3 != 0 then goto L0a0d8a;
#L0a0d7a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0d7e.   v1:= "File may not be null" @type (object, string);
#L0a0d82.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0d88.   throw v0;
#L0a0d8a.   v2.[|org:apache:http:entity:FileEntity.file|]  := v3 @type object;
#L0a0d8e.   call temp:=  [|org:apache:http:entity:FileEntity.setContentType|](v2, v4) @signature [|Lorg/apache/http/entity/FileEntity;.setContentType:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:entity:FileEntity|] @type virtual;
#L0a0d94.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:entity:FileEntity.clone|] ([|org:apache:http:entity:FileEntity|] v1 @type (this)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0da8.   call temp:=  [|java:lang:Object.clone|](v1) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0a0dae.   v0:= temp  @type object;
#L0a0db0.   return v0  @type object;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:FileEntity.getContent|] ([|org:apache:http:entity:FileEntity|] v2 @type (this)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0dc4.   v0:= new [|java:io:FileInputStream|];
#L0a0dc8.   v1:= v2.[|org:apache:http:entity:FileEntity.file|]   @type object;
#L0a0dcc.   call temp:=  [|java:io:FileInputStream.<init>|](v0, v1) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L0a0dd2.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:FileEntity.getContentLength|] ([|org:apache:http:entity:FileEntity|] v2 @type (this)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0de4.   v0:= v2.[|org:apache:http:entity:FileEntity.file|]   @type object;
#L0a0de8.   call temp:=  [|java:io:File.length|](v0) @signature [|Ljava/io/File;.length:()J|] @classDescriptor [|java:io:File|] @type virtual;
#L0a0dee.   v0:= temp  @type wide;
#L0a0df0.   return v0  @type wide;

   }
    procedure [|boolean|] [|org:apache:http:entity:FileEntity.isRepeatable|] ([|org:apache:http:entity:FileEntity|] v1 @type (this)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0e04.   v0:= 1  @length 4;
#L0a0e06.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:FileEntity.isStreaming|] ([|org:apache:http:entity:FileEntity|] v1 @type (this)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0e18.   v0:= 0  @length 4;
#L0a0e1a.   return v0;

   }
    procedure [|void|] [|org:apache:http:entity:FileEntity.writeTo|] ([|org:apache:http:entity:FileEntity|] v5 @type (this), [|java:io:OutputStream|] v6 @type (object)) @owner [|org:apache:http:entity:FileEntity|] @signature [|Lorg/apache/http/entity/FileEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a0e2c.   if v6 != 0 then goto L0a0e40;
#L0a0e30.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a0e34.   v4:= "Output stream may not be null" @type (object, string);
#L0a0e38.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0e3e.   throw v3;
#L0a0e40.   v0:= new [|java:io:FileInputStream|];
#L0a0e44.   v3:= v5.[|org:apache:http:entity:FileEntity.file|]   @type object;
#L0a0e48.   call temp:=  [|java:io:FileInputStream.<init>|](v0, v3) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L0a0e4e.   v3:= 4096  @length 16;
#L0a0e52.   v2:= new [|byte|][v3];
#L0a0e56.   call temp:=  [|java:io:InputStream.read|](v0, v2) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0e5c.   v1:= temp;
#L0a0e5e.   v3:= -1  @length 4;
#L0a0e60.   if v1 == v3 then goto L0a0e78;
#L0a0e64.   v3:= 0  @length 4;
#L0a0e66.   call temp:=  [|java:io:OutputStream.write|](v6, v2, v3, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0e6c.   goto L0a0e56;
#L0a0e6e.   v3:= Exception  @type object;
#L0a0e70.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0e76.   throw v3;
#L0a0e78.   call temp:=  [|java:io:OutputStream.flush|](v6) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0e7e.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0e84.   return @void ;
  catch  [|any|] @[L0a0e52..L0a0e6c] goto L0a0e6e;
  catch  [|any|] @[L0a0e78..L0a0e7e] goto L0a0e6e;

   }
record [|org:apache:http:entity:InputStreamEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|] {
      [|boolean|] [|org:apache:http:entity:InputStreamEntity.consumed|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|org:apache:http:entity:InputStreamEntity.content|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|org:apache:http:entity:InputStreamEntity.length|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|org:apache:http:entity:InputStreamEntity.BUFFER_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:entity:InputStreamEntity.<init>|] ([|org:apache:http:entity:InputStreamEntity|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|long|] v4) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.<init>:(Ljava/io/InputStream;J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a0eac.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a0eb2.   v0:= 0  @length 4;
#L0a0eb4.   v2.[|org:apache:http:entity:InputStreamEntity.consumed|]  := v0 @boolean;
#L0a0eb8.   if v3 != 0 then goto L0a0ecc;
#L0a0ebc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a0ec0.   v1:= "Source input stream may not be null" @type (object, string);
#L0a0ec4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0eca.   throw v0;
#L0a0ecc.   v2.[|org:apache:http:entity:InputStreamEntity.content|]  := v3 @type object;
#L0a0ed0.   v2.[|org:apache:http:entity:InputStreamEntity.length|]  := v4 @wide;
#L0a0ed4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:entity:InputStreamEntity.consumeContent|] ([|org:apache:http:entity:InputStreamEntity|] v1 @type (this)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.consumeContent:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0ee8.   v0:= 1  @length 4;
#L0a0eea.   v1.[|org:apache:http:entity:InputStreamEntity.consumed|]  := v0 @boolean;
#L0a0eee.   v0:= v1.[|org:apache:http:entity:InputStreamEntity.content|]   @type object;
#L0a0ef2.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0ef8.   return @void ;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:InputStreamEntity.getContent|] ([|org:apache:http:entity:InputStreamEntity|] v1 @type (this)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0f0c.   v0:= v1.[|org:apache:http:entity:InputStreamEntity.content|]   @type object;
#L0a0f10.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:InputStreamEntity.getContentLength|] ([|org:apache:http:entity:InputStreamEntity|] v2 @type (this)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a0f24.   v0:= v2.[|org:apache:http:entity:InputStreamEntity.length|]   @wide;
#L0a0f28.   return v0  @type wide;

   }
    procedure [|boolean|] [|org:apache:http:entity:InputStreamEntity.isRepeatable|] ([|org:apache:http:entity:InputStreamEntity|] v1 @type (this)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0f3c.   v0:= 0  @length 4;
#L0a0f3e.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:InputStreamEntity.isStreaming|] ([|org:apache:http:entity:InputStreamEntity|] v1 @type (this)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a0f50.   v0:= v1.[|org:apache:http:entity:InputStreamEntity.consumed|]   @boolean;
#L0a0f54.   if v0 != 0 then goto L0a0f5c;
#L0a0f58.   v0:= 1  @length 4;
#L0a0f5a.   return v0;
#L0a0f5c.   v0:= 0  @length 4;
#L0a0f5e.   goto L0a0f5a;

   }
    procedure [|void|] [|org:apache:http:entity:InputStreamEntity.writeTo|] ([|org:apache:http:entity:InputStreamEntity|] v11 @type (this), [|java:io:OutputStream|] v12 @type (object)) @owner [|org:apache:http:entity:InputStreamEntity|] @signature [|Lorg/apache/http/entity/InputStreamEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0a0f70.   v9:= 0  @length wide16;
#L0a0f74.   v8:= -1  @length 4;
#L0a0f76.   v7:= 0  @length 4;
#L0a0f78.   if v12 != 0 then goto L0a0f8c;
#L0a0f7c.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a0f80.   v6:= "Output stream may not be null" @type (object, string);
#L0a0f84.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a0f8a.   throw v5;
#L0a0f8c.   v1:= v11.[|org:apache:http:entity:InputStreamEntity.content|]   @type object;
#L0a0f90.   v5:= 2048  @length 16;
#L0a0f94.   v0:= new [|byte|][v5];
#L0a0f98.   v5:= v11.[|org:apache:http:entity:InputStreamEntity.length|]   @wide;
#L0a0f9c.   v5:= cmp(v5,v9);
#L0a0fa0.   if v5 >= 0 then goto L0a0fb8;
#L0a0fa4.   call temp:=  [|java:io:InputStream.read|](v1, v0) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0faa.   v2:= temp;
#L0a0fac.   if v2 == v8 then goto L0a0fde;
#L0a0fb0.   call temp:=  [|java:io:OutputStream.write|](v12, v0, v7, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0fb6.   goto L0a0fa4;
#L0a0fb8.   v3:= v11.[|org:apache:http:entity:InputStreamEntity.length|]   @wide;
#L0a0fbc.   v5:= cmp(v3,v9);
#L0a0fc0.   if v5 <= 0 then goto L0a0fde;
#L0a0fc4.   v5:= 2048  @length wide16;
#L0a0fc8.   call temp:=  [|java:lang:Math.min|](v5, v6, v3, v4) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0a0fce.   v5:= temp  @type wide;
#L0a0fd0.   v5:= (int)v5  @type l2i;
#L0a0fd2.   call temp:=  [|java:io:InputStream.read|](v1, v0, v7, v5) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0a0fd8.   v2:= temp;
#L0a0fda.   if v2 != v8 then goto L0a0fe6;
#L0a0fde.   v5:= 1  @length 4;
#L0a0fe0.   v11.[|org:apache:http:entity:InputStreamEntity.consumed|]  := v5 @boolean;
#L0a0fe4.   return @void ;
#L0a0fe6.   call temp:=  [|java:io:OutputStream.write|](v12, v0, v7, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a0fec.   v5:= (long)v2  @type i2l;
#L0a0fee.   v3:= v3 - v5  @type long;
#L0a0ff0.   goto L0a0fbc;

   }
record [|org:apache:http:entity:SerializableEntity|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:entity:AbstractHttpEntity|] {
      [|java:io:Serializable|] [|org:apache:http:entity:SerializableEntity.objRef|]    @AccessFlag PRIVATE;
      [|byte|][] [|org:apache:http:entity:SerializableEntity.objSer|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:entity:SerializableEntity.<init>|] ([|org:apache:http:entity:SerializableEntity|] v2 @type (this), [|java:io:Serializable|] v3 @type (object), [|boolean|] v4) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.<init>:(Ljava/io/Serializable;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a1004.   call temp:=  [|org:apache:http:entity:AbstractHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:AbstractHttpEntity|] @type direct;
#L0a100a.   if v3 != 0 then goto L0a101e;
#L0a100e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a1012.   v1:= "Source object may not be null" @type (object, string);
#L0a1016.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a101c.   throw v0;
#L0a101e.   if v4 == 0 then goto L0a102a;
#L0a1022.   call temp:=  [|org:apache:http:entity:SerializableEntity.createBytes|](v2, v3) @signature [|Lorg/apache/http/entity/SerializableEntity;.createBytes:(Ljava/io/Serializable;)V|] @classDescriptor [|org:apache:http:entity:SerializableEntity|] @type direct;
#L0a1028.   return @void ;
#L0a102a.   v2.[|org:apache:http:entity:SerializableEntity.objRef|]  := v3 @type object;
#L0a102e.   goto L0a1028;

   }
    procedure [|void|] [|org:apache:http:entity:SerializableEntity.createBytes|] ([|org:apache:http:entity:SerializableEntity|] v3 @type (this), [|java:io:Serializable|] v4 @type (object)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.createBytes:(Ljava/io/Serializable;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1040.   v0:= new [|java:io:ByteArrayOutputStream|];
#L0a1044.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v0) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L0a104a.   v1:= new [|java:io:ObjectOutputStream|];
#L0a104e.   call temp:=  [|java:io:ObjectOutputStream.<init>|](v1, v0) @signature [|Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0a1054.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v1, v4) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0a105a.   call temp:=  [|java:io:ObjectOutputStream.flush|](v1) @signature [|Ljava/io/ObjectOutputStream;.flush:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0a1060.   call temp:=  [|java:io:ByteArrayOutputStream.toByteArray|](v0) @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L0a1066.   v2:= temp  @type object;
#L0a1068.   v3.[|org:apache:http:entity:SerializableEntity.objSer|]  := v2 @type object;
#L0a106c.   return @void ;

   }
    procedure [|java:io:InputStream|] [|org:apache:http:entity:SerializableEntity.getContent|] ([|org:apache:http:entity:SerializableEntity|] v2 @type (this)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.getContent:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a1080.   v0:= v2.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a1084.   if v0 != 0 then goto L0a1092;
#L0a1088.   v0:= v2.[|org:apache:http:entity:SerializableEntity.objRef|]   @type object;
#L0a108c.   call temp:=  [|org:apache:http:entity:SerializableEntity.createBytes|](v2, v0) @signature [|Lorg/apache/http/entity/SerializableEntity;.createBytes:(Ljava/io/Serializable;)V|] @classDescriptor [|org:apache:http:entity:SerializableEntity|] @type direct;
#L0a1092.   v0:= new [|java:io:ByteArrayInputStream|];
#L0a1096.   v1:= v2.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a109a.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0a10a0.   return v0  @type object;

   }
    procedure [|long|] [|org:apache:http:entity:SerializableEntity.getContentLength|] ([|org:apache:http:entity:SerializableEntity|] v2 @type (this)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.getContentLength:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a10b4.   v0:= v2.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a10b8.   if v0 != 0 then goto L0a10c2;
#L0a10bc.   v0:= -1  @length wide16;
#L0a10c0.   return v0  @type wide;
#L0a10c2.   v0:= v2.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a10c6.   v0:= v0.length;
#L0a10c8.   v0:= (long)v0  @type i2l;
#L0a10ca.   goto L0a10c0;

   }
    procedure [|boolean|] [|org:apache:http:entity:SerializableEntity.isRepeatable|] ([|org:apache:http:entity:SerializableEntity|] v1 @type (this)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a10dc.   v0:= 1  @length 4;
#L0a10de.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:entity:SerializableEntity.isStreaming|] ([|org:apache:http:entity:SerializableEntity|] v1 @type (this)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.isStreaming:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a10f0.   v0:= v1.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a10f4.   if v0 != 0 then goto L0a10fc;
#L0a10f8.   v0:= 1  @length 4;
#L0a10fa.   return v0;
#L0a10fc.   v0:= 0  @length 4;
#L0a10fe.   goto L0a10fa;

   }
    procedure [|void|] [|org:apache:http:entity:SerializableEntity.writeTo|] ([|org:apache:http:entity:SerializableEntity|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object)) @owner [|org:apache:http:entity:SerializableEntity|] @signature [|Lorg/apache/http/entity/SerializableEntity;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1110.   if v4 != 0 then goto L0a1124;
#L0a1114.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a1118.   v2:= "Output stream may not be null" @type (object, string);
#L0a111c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1122.   throw v1;
#L0a1124.   v1:= v3.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a1128.   if v1 != 0 then goto L0a1148;
#L0a112c.   v0:= new [|java:io:ObjectOutputStream|];
#L0a1130.   call temp:=  [|java:io:ObjectOutputStream.<init>|](v0, v4) @signature [|Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0a1136.   v1:= v3.[|org:apache:http:entity:SerializableEntity.objRef|]   @type object;
#L0a113a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v0, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0a1140.   call temp:=  [|java:io:ObjectOutputStream.flush|](v0) @signature [|Ljava/io/ObjectOutputStream;.flush:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0a1146.   return @void ;
#L0a1148.   v1:= v3.[|org:apache:http:entity:SerializableEntity.objSer|]   @type object;
#L0a114c.   call temp:=  [|java:io:OutputStream.write|](v4, v1) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a1152.   call temp:=  [|java:io:OutputStream.flush|](v4) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0a1158.   goto L0a1146;

   }
record [|org:apache:http:impl:AbstractHttpClientConnection|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:HttpClientConnection|] {
      [|org:apache:http:impl:entity:EntityDeserializer|] [|org:apache:http:impl:AbstractHttpClientConnection.entitydeserializer|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:entity:EntitySerializer|] [|org:apache:http:impl:AbstractHttpClientConnection.entityserializer|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]    @AccessFlag PRIVATE;
      [|org:apache:http:impl:HttpConnectionMetricsImpl|] [|org:apache:http:impl:AbstractHttpClientConnection.metrics|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:AbstractHttpClientConnection.outbuffer|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:HttpMessageWriter|] [|org:apache:http:impl:AbstractHttpClientConnection.requestWriter|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:HttpMessageParser|] [|org:apache:http:impl:AbstractHttpClientConnection.responseParser|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.<init>|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a116c.   v0:= 0  @length 4;
#L0a116e.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a1174.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]  := v0 @type object;
#L0a1178.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.outbuffer|]  := v0 @type object;
#L0a117c.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.responseParser|]  := v0 @type object;
#L0a1180.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.requestWriter|]  := v0 @type object;
#L0a1184.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.metrics|]  := v0 @type object;
#L0a1188.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.createEntitySerializer|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createEntitySerializer:()Lorg/apache/http/impl/entity/EntitySerializer;|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a118e.   v0:= temp  @type object;
#L0a1190.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.entityserializer|]  := v0 @type object;
#L0a1194.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.createEntityDeserializer|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createEntityDeserializer:()Lorg/apache/http/impl/entity/EntityDeserializer;|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a119a.   v0:= temp  @type object;
#L0a119c.   v1.[|org:apache:http:impl:AbstractHttpClientConnection.entitydeserializer|]  := v0 @type object;
#L0a11a0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|] () @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:impl:entity:EntityDeserializer|] [|org:apache:http:impl:AbstractHttpClientConnection.createEntityDeserializer|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createEntityDeserializer:()Lorg/apache/http/impl/entity/EntityDeserializer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a11b4.   v0:= new [|org:apache:http:impl:entity:EntityDeserializer|];
#L0a11b8.   v1:= new [|org:apache:http:impl:entity:LaxContentLengthStrategy|];
#L0a11bc.   call temp:=  [|org:apache:http:impl:entity:LaxContentLengthStrategy.<init>|](v1) @signature [|Lorg/apache/http/impl/entity/LaxContentLengthStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:entity:LaxContentLengthStrategy|] @type direct;
#L0a11c2.   call temp:=  [|org:apache:http:impl:entity:EntityDeserializer.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @classDescriptor [|org:apache:http:impl:entity:EntityDeserializer|] @type direct;
#L0a11c8.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:entity:EntitySerializer|] [|org:apache:http:impl:AbstractHttpClientConnection.createEntitySerializer|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createEntitySerializer:()Lorg/apache/http/impl/entity/EntitySerializer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a11dc.   v0:= new [|org:apache:http:impl:entity:EntitySerializer|];
#L0a11e0.   v1:= new [|org:apache:http:impl:entity:StrictContentLengthStrategy|];
#L0a11e4.   call temp:=  [|org:apache:http:impl:entity:StrictContentLengthStrategy.<init>|](v1) @signature [|Lorg/apache/http/impl/entity/StrictContentLengthStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:entity:StrictContentLengthStrategy|] @type direct;
#L0a11ea.   call temp:=  [|org:apache:http:impl:entity:EntitySerializer.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @classDescriptor [|org:apache:http:impl:entity:EntitySerializer|] @type direct;
#L0a11f0.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpResponseFactory|] [|org:apache:http:impl:AbstractHttpClientConnection.createHttpResponseFactory|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createHttpResponseFactory:()Lorg/apache/http/HttpResponseFactory;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1204.   v0:= new [|org:apache:http:impl:DefaultHttpResponseFactory|];
#L0a1208.   call temp:=  [|org:apache:http:impl:DefaultHttpResponseFactory.<init>|](v0) @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:DefaultHttpResponseFactory|] @type direct;
#L0a120e.   return v0  @type object;

   }
    procedure [|org:apache:http:io:HttpMessageWriter|] [|org:apache:http:impl:AbstractHttpClientConnection.createRequestWriter|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v2 @type (this), [|org:apache:http:io:SessionOutputBuffer|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createRequestWriter:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1220.   v0:= new [|org:apache:http:impl:io:HttpRequestWriter|];
#L0a1224.   v1:= 0  @length 4;
#L0a1226.   call temp:=  [|org:apache:http:impl:io:HttpRequestWriter.<init>|](v0, v3, v1, v4) @signature [|Lorg/apache/http/impl/io/HttpRequestWriter;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:HttpRequestWriter|] @type direct;
#L0a122c.   return v0  @type object;

   }
    procedure [|org:apache:http:io:HttpMessageParser|] [|org:apache:http:impl:AbstractHttpClientConnection.createResponseParser|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:HttpResponseFactory|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createResponseParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1240.   v0:= new [|org:apache:http:impl:io:HttpResponseParser|];
#L0a1244.   v1:= 0  @length 4;
#L0a1246.   call temp:=  [|org:apache:http:impl:io:HttpResponseParser.<init>|](v0, v3, v1, v4, v5) @signature [|Lorg/apache/http/impl/io/HttpResponseParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:HttpResponseParser|] @type direct;
#L0a124c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.doFlush|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.doFlush:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1260.   v0:= v1.[|org:apache:http:impl:AbstractHttpClientConnection.outbuffer|]   @type object;
#L0a1264.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.flush|](v0) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.flush:()V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a126a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.flush|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v0 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L0a127c.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v0) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a1282.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.doFlush|](v0) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.doFlush:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a1288.   return @void ;

   }
    procedure [|org:apache:http:HttpConnectionMetrics|] [|org:apache:http:impl:AbstractHttpClientConnection.getMetrics|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a129c.   v0:= v1.[|org:apache:http:impl:AbstractHttpClientConnection.metrics|]   @type object;
#L0a12a0.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.init|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v3 @type (this), [|org:apache:http:io:SessionInputBuffer|] v4 @type (object), [|org:apache:http:io:SessionOutputBuffer|] v5 @type (object), [|org:apache:http:params:HttpParams|] v6 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.init:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a12b4.   if v4 != 0 then goto L0a12c8;
#L0a12b8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a12bc.   v1:= "Input session buffer may not be null" @type (object, string);
#L0a12c0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a12c6.   throw v0;
#L0a12c8.   if v5 != 0 then goto L0a12dc;
#L0a12cc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a12d0.   v1:= "Output session buffer may not be null" @type (object, string);
#L0a12d4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a12da.   throw v0;
#L0a12dc.   v3.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]  := v4 @type object;
#L0a12e0.   v3.[|org:apache:http:impl:AbstractHttpClientConnection.outbuffer|]  := v5 @type object;
#L0a12e4.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.createHttpResponseFactory|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createHttpResponseFactory:()Lorg/apache/http/HttpResponseFactory;|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a12ea.   v0:= temp  @type object;
#L0a12ec.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.createResponseParser|](v3, v4, v0, v6) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createResponseParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a12f2.   v0:= temp  @type object;
#L0a12f4.   v3.[|org:apache:http:impl:AbstractHttpClientConnection.responseParser|]  := v0 @type object;
#L0a12f8.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.createRequestWriter|](v3, v5, v6) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.createRequestWriter:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a12fe.   v0:= temp  @type object;
#L0a1300.   v3.[|org:apache:http:impl:AbstractHttpClientConnection.requestWriter|]  := v0 @type object;
#L0a1304.   v0:= new [|org:apache:http:impl:HttpConnectionMetricsImpl|];
#L0a1308.   call temp:=  [|org:apache:http:io:SessionInputBuffer.getMetrics|](v4) @signature [|Lorg/apache/http/io/SessionInputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a130e.   v1:= temp  @type object;
#L0a1310.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.getMetrics|](v5) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a1316.   v2:= temp  @type object;
#L0a1318.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.<init>:(Lorg/apache/http/io/HttpTransportMetrics;Lorg/apache/http/io/HttpTransportMetrics;)V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type direct;
#L0a131e.   v3.[|org:apache:http:impl:AbstractHttpClientConnection.metrics|]  := v0 @type object;
#L0a1322.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:AbstractHttpClientConnection.isResponseAvailable|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.isResponseAvailable:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1334.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a133a.   v0:= v1.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]   @type object;
#L0a133e.   call temp:=  [|org:apache:http:io:SessionInputBuffer.isDataAvailable|](v0, v2) @signature [|Lorg/apache/http/io/SessionInputBuffer;.isDataAvailable:(I)Z|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a1344.   v0:= temp;
#L0a1346.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:AbstractHttpClientConnection.isStale|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v4 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.isStale:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a1358.   v2:= 1  @length 4;
#L0a135a.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.isOpen|](v4) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a1360.   v1:= temp;
#L0a1362.   if v1 != 0 then goto L0a136a;
#L0a1366.   v1:= v2;
#L0a1368.   return v1;
#L0a136a.   v1:= v4.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]   @type object;
#L0a136e.   v1:= instanceof @varname v1 @type [|org:apache:http:impl:io:SocketInputBuffer|];
#L0a1372.   if v1 == 0 then goto L0a1388;
#L0a1376.   v1:= v4.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]   @type object;
#L0a137a.   v1:= ([|org:apache:http:impl:io:SocketInputBuffer|])v1;
#L0a137e.   call temp:=  [|org:apache:http:impl:io:SocketInputBuffer.isStale|](v1) @signature [|Lorg/apache/http/impl/io/SocketInputBuffer;.isStale:()Z|] @classDescriptor [|org:apache:http:impl:io:SocketInputBuffer|] @type virtual;
#L0a1384.   v1:= temp;
#L0a1386.   goto L0a1368;
#L0a1388.   v1:= v4.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]   @type object;
#L0a138c.   v3:= 1  @length 4;
#L0a138e.   call temp:=  [|org:apache:http:io:SessionInputBuffer.isDataAvailable|](v1, v3) @signature [|Lorg/apache/http/io/SessionInputBuffer;.isDataAvailable:(I)Z|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a1394.   v1:= 0  @length 4;
#L0a1396.   goto L0a1368;
#L0a1398.   v0:= Exception  @type object;
#L0a139a.   v1:= v2;
#L0a139c.   goto L0a1368;
  catch  [|java:io:IOException|] @[L0a136a..L0a1394] goto L0a1398;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.receiveResponseEntity|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.receiveResponseEntity:(Lorg/apache/http/HttpResponse;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a13c0.   if v4 != 0 then goto L0a13d4;
#L0a13c4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a13c8.   v2:= "HTTP response may not be null" @type (object, string);
#L0a13cc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a13d2.   throw v1;
#L0a13d4.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a13da.   v1:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.entitydeserializer|]   @type object;
#L0a13de.   v2:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.inbuffer|]   @type object;
#L0a13e2.   call temp:=  [|org:apache:http:impl:entity:EntityDeserializer.deserialize|](v1, v2, v4) @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.deserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:impl:entity:EntityDeserializer|] @type virtual;
#L0a13e8.   v0:= temp  @type object;
#L0a13ea.   call temp:=  [|org:apache:http:HttpResponse.setEntity|](v4, v0) @signature [|Lorg/apache/http/HttpResponse;.setEntity:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a13f0.   return @void ;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:AbstractHttpClientConnection.receiveResponseHeader|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v3 @type (this)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.receiveResponseHeader:()Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1404.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a140a.   v1:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.responseParser|]   @type object;
#L0a140e.   call temp:=  [|org:apache:http:io:HttpMessageParser.parse|](v1) @signature [|Lorg/apache/http/io/HttpMessageParser;.parse:()Lorg/apache/http/HttpMessage;|] @classDescriptor [|org:apache:http:io:HttpMessageParser|] @type interface;
#L0a1414.   v0:= temp  @type object;
#L0a1416.   v0:= ([|org:apache:http:HttpResponse|])v0;
#L0a141a.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v0) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a1420.   v1:= temp  @type object;
#L0a1422.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a1428.   v1:= temp;
#L0a142a.   v2:= 200  @length 16;
#L0a142e.   if v1 < v2 then goto L0a143c;
#L0a1432.   v1:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.metrics|]   @type object;
#L0a1436.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementResponseCount|](v1) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementResponseCount:()V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type virtual;
#L0a143c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.sendRequestEntity|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v3 @type (this), [|org:apache:http:HttpEntityEnclosingRequest|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.sendRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1450.   if v4 != 0 then goto L0a1464;
#L0a1454.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a1458.   v1:= "HTTP request may not be null" @type (object, string);
#L0a145c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1462.   throw v0;
#L0a1464.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a146a.   call temp:=  [|org:apache:http:HttpEntityEnclosingRequest.getEntity|](v4) @signature [|Lorg/apache/http/HttpEntityEnclosingRequest;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpEntityEnclosingRequest|] @type interface;
#L0a1470.   v0:= temp  @type object;
#L0a1472.   if v0 != 0 then goto L0a1478;
#L0a1476.   return @void ;
#L0a1478.   v0:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.entityserializer|]   @type object;
#L0a147c.   v1:= v3.[|org:apache:http:impl:AbstractHttpClientConnection.outbuffer|]   @type object;
#L0a1480.   call temp:=  [|org:apache:http:HttpEntityEnclosingRequest.getEntity|](v4) @signature [|Lorg/apache/http/HttpEntityEnclosingRequest;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpEntityEnclosingRequest|] @type interface;
#L0a1486.   v2:= temp  @type object;
#L0a1488.   call temp:=  [|org:apache:http:impl:entity:EntitySerializer.serialize|](v0, v1, v4, v2) @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.serialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:impl:entity:EntitySerializer|] @type virtual;
#L0a148e.   goto L0a1476;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpClientConnection.sendRequestHeader|] ([|org:apache:http:impl:AbstractHttpClientConnection|] v2 @type (this), [|org:apache:http:HttpRequest|] v3 @type (object)) @owner [|org:apache:http:impl:AbstractHttpClientConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a14a0.   if v3 != 0 then goto L0a14b4;
#L0a14a4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a14a8.   v1:= "HTTP request may not be null" @type (object, string);
#L0a14ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a14b2.   throw v0;
#L0a14b4.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.assertOpen|](v2) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type virtual;
#L0a14ba.   v0:= v2.[|org:apache:http:impl:AbstractHttpClientConnection.requestWriter|]   @type object;
#L0a14be.   call temp:=  [|org:apache:http:io:HttpMessageWriter.write|](v0, v3) @signature [|Lorg/apache/http/io/HttpMessageWriter;.write:(Lorg/apache/http/HttpMessage;)V|] @classDescriptor [|org:apache:http:io:HttpMessageWriter|] @type interface;
#L0a14c4.   v0:= v2.[|org:apache:http:impl:AbstractHttpClientConnection.metrics|]   @type object;
#L0a14c8.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementRequestCount|](v0) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementRequestCount:()V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type virtual;
#L0a14ce.   return @void ;

   }
record [|org:apache:http:impl:AbstractHttpServerConnection|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:HttpServerConnection|] {
      [|org:apache:http:impl:entity:EntityDeserializer|] [|org:apache:http:impl:AbstractHttpServerConnection.entitydeserializer|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:entity:EntitySerializer|] [|org:apache:http:impl:AbstractHttpServerConnection.entityserializer|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:AbstractHttpServerConnection.inbuffer|]    @AccessFlag PRIVATE;
      [|org:apache:http:impl:HttpConnectionMetricsImpl|] [|org:apache:http:impl:AbstractHttpServerConnection.metrics|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:AbstractHttpServerConnection.outbuffer|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:HttpMessageParser|] [|org:apache:http:impl:AbstractHttpServerConnection.requestParser|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:HttpMessageWriter|] [|org:apache:http:impl:AbstractHttpServerConnection.responseWriter|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.<init>|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a14e0.   v0:= 0  @length 4;
#L0a14e2.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a14e8.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.inbuffer|]  := v0 @type object;
#L0a14ec.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.outbuffer|]  := v0 @type object;
#L0a14f0.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.requestParser|]  := v0 @type object;
#L0a14f4.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.responseWriter|]  := v0 @type object;
#L0a14f8.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.metrics|]  := v0 @type object;
#L0a14fc.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.createEntitySerializer|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createEntitySerializer:()Lorg/apache/http/impl/entity/EntitySerializer;|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a1502.   v0:= temp  @type object;
#L0a1504.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.entityserializer|]  := v0 @type object;
#L0a1508.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.createEntityDeserializer|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createEntityDeserializer:()Lorg/apache/http/impl/entity/EntityDeserializer;|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a150e.   v0:= temp  @type object;
#L0a1510.   v1.[|org:apache:http:impl:AbstractHttpServerConnection.entitydeserializer|]  := v0 @type object;
#L0a1514.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|] () @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:impl:entity:EntityDeserializer|] [|org:apache:http:impl:AbstractHttpServerConnection.createEntityDeserializer|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createEntityDeserializer:()Lorg/apache/http/impl/entity/EntityDeserializer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1528.   v0:= new [|org:apache:http:impl:entity:EntityDeserializer|];
#L0a152c.   v1:= new [|org:apache:http:impl:entity:LaxContentLengthStrategy|];
#L0a1530.   call temp:=  [|org:apache:http:impl:entity:LaxContentLengthStrategy.<init>|](v1) @signature [|Lorg/apache/http/impl/entity/LaxContentLengthStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:entity:LaxContentLengthStrategy|] @type direct;
#L0a1536.   call temp:=  [|org:apache:http:impl:entity:EntityDeserializer.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @classDescriptor [|org:apache:http:impl:entity:EntityDeserializer|] @type direct;
#L0a153c.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:entity:EntitySerializer|] [|org:apache:http:impl:AbstractHttpServerConnection.createEntitySerializer|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createEntitySerializer:()Lorg/apache/http/impl/entity/EntitySerializer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1550.   v0:= new [|org:apache:http:impl:entity:EntitySerializer|];
#L0a1554.   v1:= new [|org:apache:http:impl:entity:StrictContentLengthStrategy|];
#L0a1558.   call temp:=  [|org:apache:http:impl:entity:StrictContentLengthStrategy.<init>|](v1) @signature [|Lorg/apache/http/impl/entity/StrictContentLengthStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:entity:StrictContentLengthStrategy|] @type direct;
#L0a155e.   call temp:=  [|org:apache:http:impl:entity:EntitySerializer.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @classDescriptor [|org:apache:http:impl:entity:EntitySerializer|] @type direct;
#L0a1564.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpRequestFactory|] [|org:apache:http:impl:AbstractHttpServerConnection.createHttpRequestFactory|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createHttpRequestFactory:()Lorg/apache/http/HttpRequestFactory;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1578.   v0:= new [|org:apache:http:impl:DefaultHttpRequestFactory|];
#L0a157c.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.<init>|](v0) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type direct;
#L0a1582.   return v0  @type object;

   }
    procedure [|org:apache:http:io:HttpMessageParser|] [|org:apache:http:impl:AbstractHttpServerConnection.createRequestParser|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:HttpRequestFactory|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createRequestParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1594.   v0:= new [|org:apache:http:impl:io:HttpRequestParser|];
#L0a1598.   v1:= 0  @length 4;
#L0a159a.   call temp:=  [|org:apache:http:impl:io:HttpRequestParser.<init>|](v0, v3, v1, v4, v5) @signature [|Lorg/apache/http/impl/io/HttpRequestParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:HttpRequestParser|] @type direct;
#L0a15a0.   return v0  @type object;

   }
    procedure [|org:apache:http:io:HttpMessageWriter|] [|org:apache:http:impl:AbstractHttpServerConnection.createResponseWriter|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this), [|org:apache:http:io:SessionOutputBuffer|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createResponseWriter:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a15b4.   v0:= new [|org:apache:http:impl:io:HttpResponseWriter|];
#L0a15b8.   v1:= 0  @length 4;
#L0a15ba.   call temp:=  [|org:apache:http:impl:io:HttpResponseWriter.<init>|](v0, v3, v1, v4) @signature [|Lorg/apache/http/impl/io/HttpResponseWriter;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/message/LineFormatter;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:HttpResponseWriter|] @type direct;
#L0a15c0.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.doFlush|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.doFlush:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a15d4.   v0:= v1.[|org:apache:http:impl:AbstractHttpServerConnection.outbuffer|]   @type object;
#L0a15d8.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.flush|](v0) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.flush:()V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a15de.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.flush|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v0 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L0a15f0.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|](v0) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a15f6.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.doFlush|](v0) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.doFlush:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a15fc.   return @void ;

   }
    procedure [|org:apache:http:HttpConnectionMetrics|] [|org:apache:http:impl:AbstractHttpServerConnection.getMetrics|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1610.   v0:= v1.[|org:apache:http:impl:AbstractHttpServerConnection.metrics|]   @type object;
#L0a1614.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.init|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v3 @type (this), [|org:apache:http:io:SessionInputBuffer|] v4 @type (object), [|org:apache:http:io:SessionOutputBuffer|] v5 @type (object), [|org:apache:http:params:HttpParams|] v6 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.init:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1628.   if v4 != 0 then goto L0a163c;
#L0a162c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a1630.   v1:= "Input session buffer may not be null" @type (object, string);
#L0a1634.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a163a.   throw v0;
#L0a163c.   if v5 != 0 then goto L0a1650;
#L0a1640.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a1644.   v1:= "Output session buffer may not be null" @type (object, string);
#L0a1648.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a164e.   throw v0;
#L0a1650.   v3.[|org:apache:http:impl:AbstractHttpServerConnection.inbuffer|]  := v4 @type object;
#L0a1654.   v3.[|org:apache:http:impl:AbstractHttpServerConnection.outbuffer|]  := v5 @type object;
#L0a1658.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.createHttpRequestFactory|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createHttpRequestFactory:()Lorg/apache/http/HttpRequestFactory;|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a165e.   v0:= temp  @type object;
#L0a1660.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.createRequestParser|](v3, v4, v0, v6) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createRequestParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpRequestFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a1666.   v0:= temp  @type object;
#L0a1668.   v3.[|org:apache:http:impl:AbstractHttpServerConnection.requestParser|]  := v0 @type object;
#L0a166c.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.createResponseWriter|](v3, v5, v6) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.createResponseWriter:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageWriter;|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a1672.   v0:= temp  @type object;
#L0a1674.   v3.[|org:apache:http:impl:AbstractHttpServerConnection.responseWriter|]  := v0 @type object;
#L0a1678.   v0:= new [|org:apache:http:impl:HttpConnectionMetricsImpl|];
#L0a167c.   call temp:=  [|org:apache:http:io:SessionInputBuffer.getMetrics|](v4) @signature [|Lorg/apache/http/io/SessionInputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a1682.   v1:= temp  @type object;
#L0a1684.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.getMetrics|](v5) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a168a.   v2:= temp  @type object;
#L0a168c.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.<init>:(Lorg/apache/http/io/HttpTransportMetrics;Lorg/apache/http/io/HttpTransportMetrics;)V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type direct;
#L0a1692.   v3.[|org:apache:http:impl:AbstractHttpServerConnection.metrics|]  := v0 @type object;
#L0a1696.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:AbstractHttpServerConnection.isStale|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v4 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.isStale:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a16a8.   v1:= 1  @length 4;
#L0a16aa.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|](v4) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a16b0.   v2:= v4.[|org:apache:http:impl:AbstractHttpServerConnection.inbuffer|]   @type object;
#L0a16b4.   v3:= 1  @length 4;
#L0a16b6.   call temp:=  [|org:apache:http:io:SessionInputBuffer.isDataAvailable|](v2, v3) @signature [|Lorg/apache/http/io/SessionInputBuffer;.isDataAvailable:(I)Z|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a16bc.   v1:= 0  @length 4;
#L0a16be.   return v1;
#L0a16c0.   v0:= Exception  @type object;
#L0a16c2.   goto L0a16be;
  catch  [|java:io:IOException|] @[L0a16b0..L0a16bc] goto L0a16c0;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.receiveRequestEntity|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v3 @type (this), [|org:apache:http:HttpEntityEnclosingRequest|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.receiveRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a16e4.   if v4 != 0 then goto L0a16f8;
#L0a16e8.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a16ec.   v2:= "HTTP request may not be null" @type (object, string);
#L0a16f0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a16f6.   throw v1;
#L0a16f8.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|](v3) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a16fe.   v1:= v3.[|org:apache:http:impl:AbstractHttpServerConnection.entitydeserializer|]   @type object;
#L0a1702.   v2:= v3.[|org:apache:http:impl:AbstractHttpServerConnection.inbuffer|]   @type object;
#L0a1706.   call temp:=  [|org:apache:http:impl:entity:EntityDeserializer.deserialize|](v1, v2, v4) @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.deserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:impl:entity:EntityDeserializer|] @type virtual;
#L0a170c.   v0:= temp  @type object;
#L0a170e.   call temp:=  [|org:apache:http:HttpEntityEnclosingRequest.setEntity|](v4, v0) @signature [|Lorg/apache/http/HttpEntityEnclosingRequest;.setEntity:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:HttpEntityEnclosingRequest|] @type interface;
#L0a1714.   return @void ;

   }
    procedure [|org:apache:http:HttpRequest|] [|org:apache:http:impl:AbstractHttpServerConnection.receiveRequestHeader|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.receiveRequestHeader:()Lorg/apache/http/HttpRequest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a1728.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|](v2) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a172e.   v1:= v2.[|org:apache:http:impl:AbstractHttpServerConnection.requestParser|]   @type object;
#L0a1732.   call temp:=  [|org:apache:http:io:HttpMessageParser.parse|](v1) @signature [|Lorg/apache/http/io/HttpMessageParser;.parse:()Lorg/apache/http/HttpMessage;|] @classDescriptor [|org:apache:http:io:HttpMessageParser|] @type interface;
#L0a1738.   v0:= temp  @type object;
#L0a173a.   v0:= ([|org:apache:http:HttpRequest|])v0;
#L0a173e.   v1:= v2.[|org:apache:http:impl:AbstractHttpServerConnection.metrics|]   @type object;
#L0a1742.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementRequestCount|](v1) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementRequestCount:()V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type virtual;
#L0a1748.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.sendResponseEntity|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.sendResponseEntity:(Lorg/apache/http/HttpResponse;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a175c.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v4) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a1762.   v0:= temp  @type object;
#L0a1764.   if v0 != 0 then goto L0a176a;
#L0a1768.   return @void ;
#L0a176a.   v0:= v3.[|org:apache:http:impl:AbstractHttpServerConnection.entityserializer|]   @type object;
#L0a176e.   v1:= v3.[|org:apache:http:impl:AbstractHttpServerConnection.outbuffer|]   @type object;
#L0a1772.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v4) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a1778.   v2:= temp  @type object;
#L0a177a.   call temp:=  [|org:apache:http:impl:entity:EntitySerializer.serialize|](v0, v1, v4, v2) @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.serialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:impl:entity:EntitySerializer|] @type virtual;
#L0a1780.   goto L0a1768;

   }
    procedure [|void|] [|org:apache:http:impl:AbstractHttpServerConnection.sendResponseHeader|] ([|org:apache:http:impl:AbstractHttpServerConnection|] v2 @type (this), [|org:apache:http:HttpResponse|] v3 @type (object)) @owner [|org:apache:http:impl:AbstractHttpServerConnection|] @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.sendResponseHeader:(Lorg/apache/http/HttpResponse;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a1794.   if v3 != 0 then goto L0a17a8;
#L0a1798.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a179c.   v1:= "HTTP response may not be null" @type (object, string);
#L0a17a0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a17a6.   throw v0;
#L0a17a8.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.assertOpen|](v2) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type virtual;
#L0a17ae.   v0:= v2.[|org:apache:http:impl:AbstractHttpServerConnection.responseWriter|]   @type object;
#L0a17b2.   call temp:=  [|org:apache:http:io:HttpMessageWriter.write|](v0, v3) @signature [|Lorg/apache/http/io/HttpMessageWriter;.write:(Lorg/apache/http/HttpMessage;)V|] @classDescriptor [|org:apache:http:io:HttpMessageWriter|] @type interface;
#L0a17b8.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v3) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a17be.   v0:= temp  @type object;
#L0a17c0.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v0) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a17c6.   v0:= temp;
#L0a17c8.   v1:= 200  @length 16;
#L0a17cc.   if v0 < v1 then goto L0a17da;
#L0a17d0.   v0:= v2.[|org:apache:http:impl:AbstractHttpServerConnection.metrics|]   @type object;
#L0a17d4.   call temp:=  [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementResponseCount|](v0) @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementResponseCount:()V|] @classDescriptor [|org:apache:http:impl:HttpConnectionMetricsImpl|] @type virtual;
#L0a17da.   return @void ;

   }
record [|org:apache:http:impl:DefaultConnectionReuseStrategy|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:ConnectionReuseStrategy|] {
   }
    procedure [|void|] [|org:apache:http:impl:DefaultConnectionReuseStrategy.<init>|] ([|org:apache:http:impl:DefaultConnectionReuseStrategy|] v0 @type (this)) @owner [|org:apache:http:impl:DefaultConnectionReuseStrategy|] @signature [|Lorg/apache/http/impl/DefaultConnectionReuseStrategy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a17ec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a17f2.   return @void ;

   }
    procedure [|org:apache:http:TokenIterator|] [|org:apache:http:impl:DefaultConnectionReuseStrategy.createTokenIterator|] ([|org:apache:http:impl:DefaultConnectionReuseStrategy|] v1 @type (this), [|org:apache:http:HeaderIterator|] v2 @type (object)) @owner [|org:apache:http:impl:DefaultConnectionReuseStrategy|] @signature [|Lorg/apache/http/impl/DefaultConnectionReuseStrategy;.createTokenIterator:(Lorg/apache/http/HeaderIterator;)Lorg/apache/http/TokenIterator;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1804.   v0:= new [|org:apache:http:message:BasicTokenIterator|];
#L0a1808.   call temp:=  [|org:apache:http:message:BasicTokenIterator.<init>|](v0, v2) @signature [|Lorg/apache/http/message/BasicTokenIterator;.<init>:(Lorg/apache/http/HeaderIterator;)V|] @classDescriptor [|org:apache:http:message:BasicTokenIterator|] @type direct;
#L0a180e.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:DefaultConnectionReuseStrategy.keepAlive|] ([|org:apache:http:impl:DefaultConnectionReuseStrategy|] v12 @type (this), [|org:apache:http:HttpResponse|] v13 @type (object), [|org:apache:http:protocol:HttpContext|] v14 @type (object)) @owner [|org:apache:http:impl:DefaultConnectionReuseStrategy|] @signature [|Lorg/apache/http/impl/DefaultConnectionReuseStrategy;.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0a1820.   if v13 != 0 then goto L0a1834;
#L0a1824.   v8:= new [|java:lang:IllegalArgumentException|];
#L0a1828.   v9:= "HTTP response may not be null." @type (object, string);
#L0a182c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1832.   throw v8;
#L0a1834.   if v14 != 0 then goto L0a1848;
#L0a1838.   v8:= new [|java:lang:IllegalArgumentException|];
#L0a183c.   v9:= "HTTP context may not be null." @type (object, string);
#L0a1840.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1846.   throw v8;
#L0a1848.   v8:= "http.connection" @type (object, string);
#L0a184c.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v14, v8) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a1852.   v0:= temp  @type object;
#L0a1854.   v0:= ([|org:apache:http:HttpConnection|])v0;
#L0a1858.   if v0 == 0 then goto L0a186c;
#L0a185c.   call temp:=  [|org:apache:http:HttpConnection.isOpen|](v0) @signature [|Lorg/apache/http/HttpConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:HttpConnection|] @type interface;
#L0a1862.   v8:= temp;
#L0a1864.   if v8 != 0 then goto L0a186c;
#L0a1868.   v8:= 0  @length 4;
#L0a186a.   return v8;
#L0a186c.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v13) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a1872.   v1:= temp  @type object;
#L0a1874.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v13) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a187a.   v8:= temp  @type object;
#L0a187c.   call temp:=  [|org:apache:http:StatusLine.getProtocolVersion|](v8) @signature [|Lorg/apache/http/StatusLine;.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a1882.   v7:= temp  @type object;
#L0a1884.   if v1 == 0 then goto L0a18bc;
#L0a1888.   call temp:=  [|org:apache:http:HttpEntity.getContentLength|](v1) @signature [|Lorg/apache/http/HttpEntity;.getContentLength:()J|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a188e.   v8:= temp  @type wide;
#L0a1890.   v10:= 0  @length wide16;
#L0a1894.   v8:= cmp(v8,v10);
#L0a1898.   if v8 >= 0 then goto L0a18bc;
#L0a189c.   call temp:=  [|org:apache:http:HttpEntity.isChunked|](v1) @signature [|Lorg/apache/http/HttpEntity;.isChunked:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a18a2.   v8:= temp;
#L0a18a4.   if v8 == 0 then goto L0a18b8;
#L0a18a8.   v8:= @@[|org:apache:http:HttpVersion.HTTP_1_0|]   @type object;
#L0a18ac.   call temp:=  [|org:apache:http:ProtocolVersion.lessEquals|](v7, v8) @signature [|Lorg/apache/http/ProtocolVersion;.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z|] @classDescriptor [|org:apache:http:ProtocolVersion|] @type virtual;
#L0a18b2.   v8:= temp;
#L0a18b4.   if v8 == 0 then goto L0a18bc;
#L0a18b8.   v8:= 0  @length 4;
#L0a18ba.   goto L0a186a;
#L0a18bc.   v8:= "Connection" @type (object, string);
#L0a18c0.   call temp:=  [|org:apache:http:HttpResponse.headerIterator|](v13, v8) @signature [|Lorg/apache/http/HttpResponse;.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a18c6.   v2:= temp  @type object;
#L0a18c8.   call temp:=  [|org:apache:http:HeaderIterator.hasNext|](v2) @signature [|Lorg/apache/http/HeaderIterator;.hasNext:()Z|] @classDescriptor [|org:apache:http:HeaderIterator|] @type interface;
#L0a18ce.   v8:= temp;
#L0a18d0.   if v8 != 0 then goto L0a18e0;
#L0a18d4.   v8:= "Proxy-Connection" @type (object, string);
#L0a18d8.   call temp:=  [|org:apache:http:HttpResponse.headerIterator|](v13, v8) @signature [|Lorg/apache/http/HttpResponse;.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a18de.   v2:= temp  @type object;
#L0a18e0.   call temp:=  [|org:apache:http:HeaderIterator.hasNext|](v2) @signature [|Lorg/apache/http/HeaderIterator;.hasNext:()Z|] @classDescriptor [|org:apache:http:HeaderIterator|] @type interface;
#L0a18e6.   v8:= temp;
#L0a18e8.   if v8 == 0 then goto L0a1940;
#L0a18ec.   call temp:=  [|org:apache:http:impl:DefaultConnectionReuseStrategy.createTokenIterator|](v12, v2) @signature [|Lorg/apache/http/impl/DefaultConnectionReuseStrategy;.createTokenIterator:(Lorg/apache/http/HeaderIterator;)Lorg/apache/http/TokenIterator;|] @classDescriptor [|org:apache:http:impl:DefaultConnectionReuseStrategy|] @type virtual;
#L0a18f2.   v5:= temp  @type object;
#L0a18f4.   v3:= 0  @length 4;
#L0a18f6.   call temp:=  [|org:apache:http:TokenIterator.hasNext|](v5) @signature [|Lorg/apache/http/TokenIterator;.hasNext:()Z|] @classDescriptor [|org:apache:http:TokenIterator|] @type interface;
#L0a18fc.   v8:= temp;
#L0a18fe.   if v8 == 0 then goto L0a1932;
#L0a1902.   call temp:=  [|org:apache:http:TokenIterator.nextToken|](v5) @signature [|Lorg/apache/http/TokenIterator;.nextToken:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:TokenIterator|] @type interface;
#L0a1908.   v6:= temp  @type object;
#L0a190a.   v8:= "Close" @type (object, string);
#L0a190e.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v8, v6) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a1914.   v8:= temp;
#L0a1916.   if v8 == 0 then goto L0a191e;
#L0a191a.   v8:= 0  @length 4;
#L0a191c.   goto L0a186a;
#L0a191e.   v8:= "Keep-Alive" @type (object, string);
#L0a1922.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v8, v6) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a1928.   v8:= temp;
#L0a192a.   if v8 == 0 then goto L0a18f6;
#L0a192e.   v3:= 1  @length 4;
#L0a1930.   goto L0a18f6;
#L0a1932.   if v3 == 0 then goto L0a1940;
#L0a1936.   v8:= 1  @length 4;
#L0a1938.   goto L0a186a;
#L0a193a.   v4:= Exception  @type object;
#L0a193c.   v8:= 0  @length 4;
#L0a193e.   goto L0a186a;
#L0a1940.   v8:= @@[|org:apache:http:HttpVersion.HTTP_1_0|]   @type object;
#L0a1944.   call temp:=  [|org:apache:http:ProtocolVersion.lessEquals|](v7, v8) @signature [|Lorg/apache/http/ProtocolVersion;.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z|] @classDescriptor [|org:apache:http:ProtocolVersion|] @type virtual;
#L0a194a.   v8:= temp;
#L0a194c.   if v8 != 0 then goto L0a1954;
#L0a1950.   v8:= 1  @length 4;
#L0a1952.   goto L0a186a;
#L0a1954.   v8:= 0  @length 4;
#L0a1956.   goto L0a186a;
  catch  [|org:apache:http:ParseException|] @[L0a18ec..L0a1928] goto L0a193a;

   }
record [|org:apache:http:impl:SocketHttpClientConnection|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:AbstractHttpClientConnection|], [|org:apache:http:HttpInetConnection|] {
      [|boolean|] [|org:apache:http:impl:SocketHttpClientConnection.open|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:net:Socket|] [|org:apache:http:impl:SocketHttpClientConnection.socket|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.<init>|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a1978.   call temp:=  [|org:apache:http:impl:AbstractHttpClientConnection.<init>|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpClientConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpClientConnection|] @type direct;
#L0a197e.   v0:= 0  @length 4;
#L0a1980.   v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]  := v0 @type object;
#L0a1984.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.assertNotOpen|] ([|org:apache:http:impl:SocketHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.assertNotOpen:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a1998.   v0:= v2.[|org:apache:http:impl:SocketHttpClientConnection.open|]   @boolean;
#L0a199c.   if v0 == 0 then goto L0a19b0;
#L0a19a0.   v0:= new [|java:lang:IllegalStateException|];
#L0a19a4.   v1:= "Connection is already open" @type (object, string);
#L0a19a8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a19ae.   throw v0;
#L0a19b0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.assertOpen|] ([|org:apache:http:impl:SocketHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.assertOpen:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a19c4.   v0:= v2.[|org:apache:http:impl:SocketHttpClientConnection.open|]   @boolean;
#L0a19c8.   if v0 != 0 then goto L0a19dc;
#L0a19cc.   v0:= new [|java:lang:IllegalStateException|];
#L0a19d0.   v1:= "Connection is not open" @type (object, string);
#L0a19d4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a19da.   throw v0;
#L0a19dc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.bind|] ([|org:apache:http:impl:SocketHttpClientConnection|] v3 @type (this), [|java:net:Socket|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a19f0.   if v4 != 0 then goto L0a1a04;
#L0a19f4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a19f8.   v2:= "Socket may not be null" @type (object, string);
#L0a19fc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1a02.   throw v1;
#L0a1a04.   if v5 != 0 then goto L0a1a18;
#L0a1a08.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a1a0c.   v2:= "HTTP parameters may not be null" @type (object, string);
#L0a1a10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1a16.   throw v1;
#L0a1a18.   v3.[|org:apache:http:impl:SocketHttpClientConnection.socket|]  := v4 @type object;
#L0a1a1c.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSocketBufferSize|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSocketBufferSize:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a1a22.   v0:= temp;
#L0a1a24.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.createSessionInputBuffer|](v3, v4, v0, v5) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionInputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type virtual;
#L0a1a2a.   v1:= temp  @type object;
#L0a1a2c.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.createSessionOutputBuffer|](v3, v4, v0, v5) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionOutputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type virtual;
#L0a1a32.   v2:= temp  @type object;
#L0a1a34.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.init|](v3, v1, v2, v5) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.init:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type virtual;
#L0a1a3a.   v1:= 1  @length 4;
#L0a1a3c.   v3.[|org:apache:http:impl:SocketHttpClientConnection.open|]  := v1 @boolean;
#L0a1a40.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.close|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1a54.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.open|]   @boolean;
#L0a1a58.   if v0 != 0 then goto L0a1a5e;
#L0a1a5c.   return @void ;
#L0a1a5e.   v0:= 0  @length 4;
#L0a1a60.   v1.[|org:apache:http:impl:SocketHttpClientConnection.open|]  := v0 @boolean;
#L0a1a64.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.doFlush|](v1) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.doFlush:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type virtual;
#L0a1a6a.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1a6e.   call temp:=  [|java:net:Socket.shutdownOutput|](v0) @signature [|Ljava/net/Socket;.shutdownOutput:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1a74.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1a78.   call temp:=  [|java:net:Socket.shutdownInput|](v0) @signature [|Ljava/net/Socket;.shutdownInput:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1a7e.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1a82.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1a88.   goto L0a1a5c;
#L0a1a8a.   v0:= Exception  @type object;
#L0a1a8c.   goto L0a1a7e;
#L0a1a8e.   v0:= Exception  @type object;
#L0a1a90.   goto L0a1a7e;
#L0a1a92.   v0:= Exception  @type object;
#L0a1a94.   goto L0a1a74;
  catch  [|java:io:IOException|] @[L0a1a6a..L0a1a74] goto L0a1a92;
  catch  [|java:lang:UnsupportedOperationException|] @[L0a1a6a..L0a1a74] goto L0a1a8a;
  catch  [|java:io:IOException|] @[L0a1a74..L0a1a7e] goto L0a1a8e;
  catch  [|java:lang:UnsupportedOperationException|] @[L0a1a74..L0a1a7e] goto L0a1a8a;

   }
    procedure [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:SocketHttpClientConnection.createSessionInputBuffer|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this), [|java:net:Socket|] v2 @type (object), [|int|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionInputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1ac8.   v0:= new [|org:apache:http:impl:io:SocketInputBuffer|];
#L0a1acc.   call temp:=  [|org:apache:http:impl:io:SocketInputBuffer.<init>|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/io/SocketInputBuffer;.<init>:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:SocketInputBuffer|] @type direct;
#L0a1ad2.   return v0  @type object;

   }
    procedure [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:SocketHttpClientConnection.createSessionOutputBuffer|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this), [|java:net:Socket|] v2 @type (object), [|int|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionOutputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1ae4.   v0:= new [|org:apache:http:impl:io:SocketOutputBuffer|];
#L0a1ae8.   call temp:=  [|org:apache:http:impl:io:SocketOutputBuffer.<init>|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/io/SocketOutputBuffer;.<init>:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:SocketOutputBuffer|] @type direct;
#L0a1aee.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:SocketHttpClientConnection.getLocalAddress|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1b00.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b04.   if v0 == 0 then goto L0a1b16;
#L0a1b08.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b0c.   call temp:=  [|java:net:Socket.getLocalAddress|](v0) @signature [|Ljava/net/Socket;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1b12.   v0:= temp  @type object;
#L0a1b14.   return v0  @type object;
#L0a1b16.   v0:= 0  @length 4;
#L0a1b18.   goto L0a1b14;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpClientConnection.getLocalPort|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getLocalPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1b2c.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b30.   if v0 == 0 then goto L0a1b42;
#L0a1b34.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b38.   call temp:=  [|java:net:Socket.getLocalPort|](v0) @signature [|Ljava/net/Socket;.getLocalPort:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1b3e.   v0:= temp;
#L0a1b40.   return v0;
#L0a1b42.   v0:= -1  @length 4;
#L0a1b44.   goto L0a1b40;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:SocketHttpClientConnection.getRemoteAddress|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getRemoteAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1b58.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b5c.   if v0 == 0 then goto L0a1b6e;
#L0a1b60.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b64.   call temp:=  [|java:net:Socket.getInetAddress|](v0) @signature [|Ljava/net/Socket;.getInetAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1b6a.   v0:= temp  @type object;
#L0a1b6c.   return v0  @type object;
#L0a1b6e.   v0:= 0  @length 4;
#L0a1b70.   goto L0a1b6c;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpClientConnection.getRemotePort|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getRemotePort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1b84.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b88.   if v0 == 0 then goto L0a1b9a;
#L0a1b8c.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1b90.   call temp:=  [|java:net:Socket.getPort|](v0) @signature [|Ljava/net/Socket;.getPort:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1b96.   v0:= temp;
#L0a1b98.   return v0;
#L0a1b9a.   v0:= -1  @length 4;
#L0a1b9c.   goto L0a1b98;

   }
    procedure [|java:net:Socket|] [|org:apache:http:impl:SocketHttpClientConnection.getSocket|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getSocket:()Ljava/net/Socket;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1bb0.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1bb4.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpClientConnection.getSocketTimeout|] ([|org:apache:http:impl:SocketHttpClientConnection|] v3 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.getSocketTimeout:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1bc8.   v1:= -1  @length 4;
#L0a1bca.   v2:= v3.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1bce.   if v2 == 0 then goto L0a1bde;
#L0a1bd2.   v2:= v3.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1bd6.   call temp:=  [|java:net:Socket.getSoTimeout|](v2) @signature [|Ljava/net/Socket;.getSoTimeout:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1bdc.   v1:= temp;
#L0a1bde.   return v1;
#L0a1be0.   v0:= Exception  @type object;
#L0a1be2.   goto L0a1bde;
  catch  [|java:net:SocketException|] @[L0a1bd2..L0a1bdc] goto L0a1be0;

   }
    procedure [|boolean|] [|org:apache:http:impl:SocketHttpClientConnection.isOpen|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.isOpen:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1c04.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.open|]   @boolean;
#L0a1c08.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.setSocketTimeout|] ([|org:apache:http:impl:SocketHttpClientConnection|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.setSocketTimeout:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a1c1c.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.assertOpen|](v1) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type virtual;
#L0a1c22.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1c26.   if v0 == 0 then goto L0a1c34;
#L0a1c2a.   v0:= v1.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1c2e.   call temp:=  [|java:net:Socket.setSoTimeout|](v0, v2) @signature [|Ljava/net/Socket;.setSoTimeout:(I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1c34.   return @void ;
#L0a1c36.   v0:= Exception  @type object;
#L0a1c38.   goto L0a1c34;
  catch  [|java:net:SocketException|] @[L0a1c2a..L0a1c34] goto L0a1c36;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpClientConnection.shutdown|] ([|org:apache:http:impl:SocketHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpClientConnection|] @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a1c5c.   v1:= 0  @length 4;
#L0a1c5e.   v2.[|org:apache:http:impl:SocketHttpClientConnection.open|]  := v1 @boolean;
#L0a1c62.   v0:= v2.[|org:apache:http:impl:SocketHttpClientConnection.socket|]   @type object;
#L0a1c66.   if v0 == 0 then goto L0a1c70;
#L0a1c6a.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1c70.   return @void ;

   }
record [|org:apache:http:impl:DefaultHttpClientConnection|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:SocketHttpClientConnection|] {
   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpClientConnection.<init>|] ([|org:apache:http:impl:DefaultHttpClientConnection|] v0 @type (this)) @owner [|org:apache:http:impl:DefaultHttpClientConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a1c84.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.<init>|](v0) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type direct;
#L0a1c8a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpClientConnection.bind|] ([|org:apache:http:impl:DefaultHttpClientConnection|] v3 @type (this), [|java:net:Socket|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:DefaultHttpClientConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1c9c.   if v4 != 0 then goto L0a1cb0;
#L0a1ca0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a1ca4.   v2:= "Socket may not be null" @type (object, string);
#L0a1ca8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1cae.   throw v1;
#L0a1cb0.   if v5 != 0 then goto L0a1cc4;
#L0a1cb4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a1cb8.   v2:= "HTTP parameters may not be null" @type (object, string);
#L0a1cbc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1cc2.   throw v1;
#L0a1cc4.   call temp:=  [|org:apache:http:impl:DefaultHttpClientConnection.assertNotOpen|](v3) @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.assertNotOpen:()V|] @classDescriptor [|org:apache:http:impl:DefaultHttpClientConnection|] @type virtual;
#L0a1cca.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getTcpNoDelay|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getTcpNoDelay:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a1cd0.   v1:= temp;
#L0a1cd2.   call temp:=  [|java:net:Socket.setTcpNoDelay|](v4, v1) @signature [|Ljava/net/Socket;.setTcpNoDelay:(Z)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1cd8.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSoTimeout|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSoTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a1cde.   v1:= temp;
#L0a1ce0.   call temp:=  [|java:net:Socket.setSoTimeout|](v4, v1) @signature [|Ljava/net/Socket;.setSoTimeout:(I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1ce6.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getLinger|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getLinger:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a1cec.   v0:= temp;
#L0a1cee.   if v0 < 0 then goto L0a1cfe;
#L0a1cf2.   if v0 <= 0 then goto L0a1d06;
#L0a1cf6.   v1:= 1  @length 4;
#L0a1cf8.   call temp:=  [|java:net:Socket.setSoLinger|](v4, v1, v0) @signature [|Ljava/net/Socket;.setSoLinger:(ZI)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a1cfe.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.bind|](v3, v4, v5) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a1d04.   return @void ;
#L0a1d06.   v1:= 0  @length 4;
#L0a1d08.   goto L0a1cf8;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:DefaultHttpClientConnection.toString|] ([|org:apache:http:impl:DefaultHttpClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:DefaultHttpClientConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a1d1c.   v0:= new [|java:lang:StringBuffer|];
#L0a1d20.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0a1d26.   v1:= "[" @type (object, string);
#L0a1d2a.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a1d30.   call temp:=  [|org:apache:http:impl:DefaultHttpClientConnection.isOpen|](v2) @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpClientConnection|] @type virtual;
#L0a1d36.   v1:= temp;
#L0a1d38.   if v1 == 0 then goto L0a1d5e;
#L0a1d3c.   call temp:=  [|org:apache:http:impl:DefaultHttpClientConnection.getRemotePort|](v2) @signature [|Lorg/apache/http/impl/DefaultHttpClientConnection;.getRemotePort:()I|] @classDescriptor [|org:apache:http:impl:DefaultHttpClientConnection|] @type virtual;
#L0a1d42.   v1:= temp;
#L0a1d44.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a1d4a.   v1:= "]" @type (object, string);
#L0a1d4e.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a1d54.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a1d5a.   v1:= temp  @type object;
#L0a1d5c.   return v1  @type object;
#L0a1d5e.   v1:= "closed" @type (object, string);
#L0a1d62.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a1d68.   goto L0a1d4a;

   }
record [|org:apache:http:impl:DefaultHttpRequestFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpRequestFactory|] {
   }
      global [|java:lang:String|][] @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_COMMON_METHODS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|][] @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_ENTITY_ENC_METHODS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|][] @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_SPECIAL_METHODS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:DefaultHttpRequestFactory.<clinit>|] () @owner [|org:apache:http:impl:DefaultHttpRequestFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a1d7c.   v4:= 2  @length 4;
#L0a1d7e.   v3:= 1  @length 4;
#L0a1d80.   v2:= 0  @length 4;
#L0a1d82.   v0:= new [|java:lang:String|][v3];
#L0a1d86.   v1:= "GET" @type (object, string);
#L0a1d8a.   v0[v2]:= v1  @type object;
#L0a1d8e.   @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_COMMON_METHODS|] := v0  @type object;
#L0a1d92.   v0:= new [|java:lang:String|][v4];
#L0a1d96.   v1:= "POST" @type (object, string);
#L0a1d9a.   v0[v2]:= v1  @type object;
#L0a1d9e.   v1:= "PUT" @type (object, string);
#L0a1da2.   v0[v3]:= v1  @type object;
#L0a1da6.   @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_ENTITY_ENC_METHODS|] := v0  @type object;
#L0a1daa.   v0:= 4  @length 4;
#L0a1dac.   v0:= new [|java:lang:String|][v0];
#L0a1db0.   v1:= "HEAD" @type (object, string);
#L0a1db4.   v0[v2]:= v1  @type object;
#L0a1db8.   v1:= "OPTIONS" @type (object, string);
#L0a1dbc.   v0[v3]:= v1  @type object;
#L0a1dc0.   v1:= "DELETE" @type (object, string);
#L0a1dc4.   v0[v4]:= v1  @type object;
#L0a1dc8.   v1:= 3  @length 4;
#L0a1dca.   v2:= "TRACE" @type (object, string);
#L0a1dce.   v0[v1]:= v2  @type object;
#L0a1dd2.   @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_SPECIAL_METHODS|] := v0  @type object;
#L0a1dd6.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpRequestFactory.<init>|] ([|org:apache:http:impl:DefaultHttpRequestFactory|] v0 @type (this)) @owner [|org:apache:http:impl:DefaultHttpRequestFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a1de8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a1dee.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|] ([|java:lang:String|][] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:DefaultHttpRequestFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0a1e00.   v0:= 0  @length 4;
#L0a1e02.   v1:= v2.length;
#L0a1e04.   if v0 >= v1 then goto L0a1e22;
#L0a1e08.   v1:= v2[v0]  @type object;
#L0a1e0c.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v3) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a1e12.   v1:= temp;
#L0a1e14.   if v1 == 0 then goto L0a1e1c;
#L0a1e18.   v1:= 1  @length 4;
#L0a1e1a.   return v1;
#L0a1e1c.   v0:= v0 + 1;
#L0a1e20.   goto L0a1e02;
#L0a1e22.   v1:= 0  @length 4;
#L0a1e24.   goto L0a1e1a;

   }
    procedure [|org:apache:http:HttpRequest|] [|org:apache:http:impl:DefaultHttpRequestFactory.newHttpRequest|] ([|org:apache:http:impl:DefaultHttpRequestFactory|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:http:impl:DefaultHttpRequestFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.newHttpRequest:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/http/HttpRequest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a1e38.   v0:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_COMMON_METHODS|]   @type object;
#L0a1e3c.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v0, v4) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1e42.   v0:= temp;
#L0a1e44.   if v0 == 0 then goto L0a1e54;
#L0a1e48.   v0:= new [|org:apache:http:message:BasicHttpRequest|];
#L0a1e4c.   call temp:=  [|org:apache:http:message:BasicHttpRequest.<init>|](v0, v4, v5) @signature [|Lorg/apache/http/message/BasicHttpRequest;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicHttpRequest|] @type direct;
#L0a1e52.   return v0  @type object;
#L0a1e54.   v0:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_ENTITY_ENC_METHODS|]   @type object;
#L0a1e58.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v0, v4) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1e5e.   v0:= temp;
#L0a1e60.   if v0 == 0 then goto L0a1e70;
#L0a1e64.   v0:= new [|org:apache:http:message:BasicHttpEntityEnclosingRequest|];
#L0a1e68.   call temp:=  [|org:apache:http:message:BasicHttpEntityEnclosingRequest.<init>|](v0, v4, v5) @signature [|Lorg/apache/http/message/BasicHttpEntityEnclosingRequest;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicHttpEntityEnclosingRequest|] @type direct;
#L0a1e6e.   goto L0a1e52;
#L0a1e70.   v0:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_SPECIAL_METHODS|]   @type object;
#L0a1e74.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v0, v4) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1e7a.   v0:= temp;
#L0a1e7c.   if v0 == 0 then goto L0a1e8c;
#L0a1e80.   v0:= new [|org:apache:http:message:BasicHttpRequest|];
#L0a1e84.   call temp:=  [|org:apache:http:message:BasicHttpRequest.<init>|](v0, v4, v5) @signature [|Lorg/apache/http/message/BasicHttpRequest;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicHttpRequest|] @type direct;
#L0a1e8a.   goto L0a1e52;
#L0a1e8c.   v0:= new [|org:apache:http:MethodNotSupportedException|];
#L0a1e90.   v1:= new [|java:lang:StringBuilder|];
#L0a1e94.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a1e9a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1ea0.   v1:= temp  @type object;
#L0a1ea2.   v2:= " method not supported" @type (object, string);
#L0a1ea6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1eac.   v1:= temp  @type object;
#L0a1eae.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1eb4.   v1:= temp  @type object;
#L0a1eb6.   call temp:=  [|org:apache:http:MethodNotSupportedException.<init>|](v0, v1) @signature [|Lorg/apache/http/MethodNotSupportedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:MethodNotSupportedException|] @type direct;
#L0a1ebc.   throw v0;

   }
    procedure [|org:apache:http:HttpRequest|] [|org:apache:http:impl:DefaultHttpRequestFactory.newHttpRequest|] ([|org:apache:http:impl:DefaultHttpRequestFactory|] v4 @type (this), [|org:apache:http:RequestLine|] v5 @type (object)) @owner [|org:apache:http:impl:DefaultHttpRequestFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.newHttpRequest:(Lorg/apache/http/RequestLine;)Lorg/apache/http/HttpRequest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a1ed0.   if v5 != 0 then goto L0a1ee4;
#L0a1ed4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a1ed8.   v2:= "Request line may not be null" @type (object, string);
#L0a1edc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1ee2.   throw v1;
#L0a1ee4.   call temp:=  [|org:apache:http:RequestLine.getMethod|](v5) @signature [|Lorg/apache/http/RequestLine;.getMethod:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a1eea.   v0:= temp  @type object;
#L0a1eec.   v1:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_COMMON_METHODS|]   @type object;
#L0a1ef0.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v1, v0) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1ef6.   v1:= temp;
#L0a1ef8.   if v1 == 0 then goto L0a1f08;
#L0a1efc.   v1:= new [|org:apache:http:message:BasicHttpRequest|];
#L0a1f00.   call temp:=  [|org:apache:http:message:BasicHttpRequest.<init>|](v1, v5) @signature [|Lorg/apache/http/message/BasicHttpRequest;.<init>:(Lorg/apache/http/RequestLine;)V|] @classDescriptor [|org:apache:http:message:BasicHttpRequest|] @type direct;
#L0a1f06.   return v1  @type object;
#L0a1f08.   v1:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_ENTITY_ENC_METHODS|]   @type object;
#L0a1f0c.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v1, v0) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1f12.   v1:= temp;
#L0a1f14.   if v1 == 0 then goto L0a1f24;
#L0a1f18.   v1:= new [|org:apache:http:message:BasicHttpEntityEnclosingRequest|];
#L0a1f1c.   call temp:=  [|org:apache:http:message:BasicHttpEntityEnclosingRequest.<init>|](v1, v5) @signature [|Lorg/apache/http/message/BasicHttpEntityEnclosingRequest;.<init>:(Lorg/apache/http/RequestLine;)V|] @classDescriptor [|org:apache:http:message:BasicHttpEntityEnclosingRequest|] @type direct;
#L0a1f22.   goto L0a1f06;
#L0a1f24.   v1:= @@[|org:apache:http:impl:DefaultHttpRequestFactory.RFC2616_SPECIAL_METHODS|]   @type object;
#L0a1f28.   call temp:=  [|org:apache:http:impl:DefaultHttpRequestFactory.isOneOf|](v1, v0) @signature [|Lorg/apache/http/impl/DefaultHttpRequestFactory;.isOneOf:([Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpRequestFactory|] @type static;
#L0a1f2e.   v1:= temp;
#L0a1f30.   if v1 == 0 then goto L0a1f40;
#L0a1f34.   v1:= new [|org:apache:http:message:BasicHttpRequest|];
#L0a1f38.   call temp:=  [|org:apache:http:message:BasicHttpRequest.<init>|](v1, v5) @signature [|Lorg/apache/http/message/BasicHttpRequest;.<init>:(Lorg/apache/http/RequestLine;)V|] @classDescriptor [|org:apache:http:message:BasicHttpRequest|] @type direct;
#L0a1f3e.   goto L0a1f06;
#L0a1f40.   v1:= new [|org:apache:http:MethodNotSupportedException|];
#L0a1f44.   v2:= new [|java:lang:StringBuilder|];
#L0a1f48.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a1f4e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1f54.   v2:= temp  @type object;
#L0a1f56.   v3:= " method not supported" @type (object, string);
#L0a1f5a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1f60.   v2:= temp  @type object;
#L0a1f62.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a1f68.   v2:= temp  @type object;
#L0a1f6a.   call temp:=  [|org:apache:http:MethodNotSupportedException.<init>|](v1, v2) @signature [|Lorg/apache/http/MethodNotSupportedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:MethodNotSupportedException|] @type direct;
#L0a1f70.   throw v1;

   }
record [|org:apache:http:impl:DefaultHttpResponseFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpResponseFactory|] {
      [|org:apache:http:ReasonPhraseCatalog|] [|org:apache:http:impl:DefaultHttpResponseFactory.reasonCatalog|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpResponseFactory.<init>|] ([|org:apache:http:impl:DefaultHttpResponseFactory|] v1 @type (this)) @owner [|org:apache:http:impl:DefaultHttpResponseFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a1f84.   v0:= @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.INSTANCE|]   @type object;
#L0a1f88.   call temp:=  [|org:apache:http:impl:DefaultHttpResponseFactory.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.<init>:(Lorg/apache/http/ReasonPhraseCatalog;)V|] @classDescriptor [|org:apache:http:impl:DefaultHttpResponseFactory|] @type direct;
#L0a1f8e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpResponseFactory.<init>|] ([|org:apache:http:impl:DefaultHttpResponseFactory|] v2 @type (this), [|org:apache:http:ReasonPhraseCatalog|] v3 @type (object)) @owner [|org:apache:http:impl:DefaultHttpResponseFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.<init>:(Lorg/apache/http/ReasonPhraseCatalog;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a1fa0.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a1fa6.   if v3 != 0 then goto L0a1fba;
#L0a1faa.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a1fae.   v1:= "Reason phrase catalog must not be null." @type (object, string);
#L0a1fb2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1fb8.   throw v0;
#L0a1fba.   v2.[|org:apache:http:impl:DefaultHttpResponseFactory.reasonCatalog|]  := v3 @type object;
#L0a1fbe.   return @void ;

   }
    procedure [|java:util:Locale|] [|org:apache:http:impl:DefaultHttpResponseFactory.determineLocale|] ([|org:apache:http:impl:DefaultHttpResponseFactory|] v1 @type (this), [|org:apache:http:protocol:HttpContext|] v2 @type (object)) @owner [|org:apache:http:impl:DefaultHttpResponseFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.determineLocale:(Lorg/apache/http/protocol/HttpContext;)Ljava/util/Locale;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a1fd0.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0a1fd6.   v0:= temp  @type object;
#L0a1fd8.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:DefaultHttpResponseFactory.newHttpResponse|] ([|org:apache:http:impl:DefaultHttpResponseFactory|] v5 @type (this), [|org:apache:http:ProtocolVersion|] v6 @type (object), [|int|] v7, [|org:apache:http:protocol:HttpContext|] v8 @type (object)) @owner [|org:apache:http:impl:DefaultHttpResponseFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.newHttpResponse:(Lorg/apache/http/ProtocolVersion;ILorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a1fec.   if v6 != 0 then goto L0a2000;
#L0a1ff0.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a1ff4.   v4:= "HTTP version may not be null" @type (object, string);
#L0a1ff8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a1ffe.   throw v3;
#L0a2000.   call temp:=  [|org:apache:http:impl:DefaultHttpResponseFactory.determineLocale|](v5, v8) @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.determineLocale:(Lorg/apache/http/protocol/HttpContext;)Ljava/util/Locale;|] @classDescriptor [|org:apache:http:impl:DefaultHttpResponseFactory|] @type virtual;
#L0a2006.   v0:= temp  @type object;
#L0a2008.   v3:= v5.[|org:apache:http:impl:DefaultHttpResponseFactory.reasonCatalog|]   @type object;
#L0a200c.   call temp:=  [|org:apache:http:ReasonPhraseCatalog.getReason|](v3, v7, v0) @signature [|Lorg/apache/http/ReasonPhraseCatalog;.getReason:(ILjava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:ReasonPhraseCatalog|] @type interface;
#L0a2012.   v1:= temp  @type object;
#L0a2014.   v2:= new [|org:apache:http:message:BasicStatusLine|];
#L0a2018.   call temp:=  [|org:apache:http:message:BasicStatusLine.<init>|](v2, v6, v7, v1) @signature [|Lorg/apache/http/message/BasicStatusLine;.<init>:(Lorg/apache/http/ProtocolVersion;ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicStatusLine|] @type direct;
#L0a201e.   v3:= new [|org:apache:http:message:BasicHttpResponse|];
#L0a2022.   v4:= v5.[|org:apache:http:impl:DefaultHttpResponseFactory.reasonCatalog|]   @type object;
#L0a2026.   call temp:=  [|org:apache:http:message:BasicHttpResponse.<init>|](v3, v2, v4, v0) @signature [|Lorg/apache/http/message/BasicHttpResponse;.<init>:(Lorg/apache/http/StatusLine;Lorg/apache/http/ReasonPhraseCatalog;Ljava/util/Locale;)V|] @classDescriptor [|org:apache:http:message:BasicHttpResponse|] @type direct;
#L0a202c.   return v3  @type object;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:DefaultHttpResponseFactory.newHttpResponse|] ([|org:apache:http:impl:DefaultHttpResponseFactory|] v3 @type (this), [|org:apache:http:StatusLine|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:DefaultHttpResponseFactory|] @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.newHttpResponse:(Lorg/apache/http/StatusLine;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a2040.   if v4 != 0 then goto L0a2054;
#L0a2044.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a2048.   v2:= "Status line may not be null" @type (object, string);
#L0a204c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2052.   throw v1;
#L0a2054.   call temp:=  [|org:apache:http:impl:DefaultHttpResponseFactory.determineLocale|](v3, v5) @signature [|Lorg/apache/http/impl/DefaultHttpResponseFactory;.determineLocale:(Lorg/apache/http/protocol/HttpContext;)Ljava/util/Locale;|] @classDescriptor [|org:apache:http:impl:DefaultHttpResponseFactory|] @type virtual;
#L0a205a.   v0:= temp  @type object;
#L0a205c.   v1:= new [|org:apache:http:message:BasicHttpResponse|];
#L0a2060.   v2:= v3.[|org:apache:http:impl:DefaultHttpResponseFactory.reasonCatalog|]   @type object;
#L0a2064.   call temp:=  [|org:apache:http:message:BasicHttpResponse.<init>|](v1, v4, v2, v0) @signature [|Lorg/apache/http/message/BasicHttpResponse;.<init>:(Lorg/apache/http/StatusLine;Lorg/apache/http/ReasonPhraseCatalog;Ljava/util/Locale;)V|] @classDescriptor [|org:apache:http:message:BasicHttpResponse|] @type direct;
#L0a206a.   return v1  @type object;

   }
record [|org:apache:http:impl:SocketHttpServerConnection|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:AbstractHttpServerConnection|], [|org:apache:http:HttpInetConnection|] {
      [|boolean|] [|org:apache:http:impl:SocketHttpServerConnection.open|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:net:Socket|] [|org:apache:http:impl:SocketHttpServerConnection.socket|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.<init>|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a207c.   call temp:=  [|org:apache:http:impl:AbstractHttpServerConnection.<init>|](v1) @signature [|Lorg/apache/http/impl/AbstractHttpServerConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:AbstractHttpServerConnection|] @type direct;
#L0a2082.   v0:= 0  @length 4;
#L0a2084.   v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]  := v0 @type object;
#L0a2088.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.assertNotOpen|] ([|org:apache:http:impl:SocketHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.assertNotOpen:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a209c.   v0:= v2.[|org:apache:http:impl:SocketHttpServerConnection.open|]   @boolean;
#L0a20a0.   if v0 == 0 then goto L0a20b4;
#L0a20a4.   v0:= new [|java:lang:IllegalStateException|];
#L0a20a8.   v1:= "Connection is already open" @type (object, string);
#L0a20ac.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a20b2.   throw v0;
#L0a20b4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.assertOpen|] ([|org:apache:http:impl:SocketHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.assertOpen:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a20c8.   v0:= v2.[|org:apache:http:impl:SocketHttpServerConnection.open|]   @boolean;
#L0a20cc.   if v0 != 0 then goto L0a20e0;
#L0a20d0.   v0:= new [|java:lang:IllegalStateException|];
#L0a20d4.   v1:= "Connection is not open" @type (object, string);
#L0a20d8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a20de.   throw v0;
#L0a20e0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.bind|] ([|org:apache:http:impl:SocketHttpServerConnection|] v3 @type (this), [|java:net:Socket|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a20f4.   if v4 != 0 then goto L0a2108;
#L0a20f8.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a20fc.   v2:= "Socket may not be null" @type (object, string);
#L0a2100.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2106.   throw v1;
#L0a2108.   if v5 != 0 then goto L0a211c;
#L0a210c.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a2110.   v2:= "HTTP parameters may not be null" @type (object, string);
#L0a2114.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a211a.   throw v1;
#L0a211c.   v3.[|org:apache:http:impl:SocketHttpServerConnection.socket|]  := v4 @type object;
#L0a2120.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSocketBufferSize|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSocketBufferSize:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a2126.   v0:= temp;
#L0a2128.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.createHttpDataReceiver|](v3, v4, v0, v5) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.createHttpDataReceiver:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type virtual;
#L0a212e.   v1:= temp  @type object;
#L0a2130.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.createHttpDataTransmitter|](v3, v4, v0, v5) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.createHttpDataTransmitter:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type virtual;
#L0a2136.   v2:= temp  @type object;
#L0a2138.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.init|](v3, v1, v2, v5) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.init:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type virtual;
#L0a213e.   v1:= 1  @length 4;
#L0a2140.   v3.[|org:apache:http:impl:SocketHttpServerConnection.open|]  := v1 @boolean;
#L0a2144.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.close|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2158.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.open|]   @boolean;
#L0a215c.   if v0 != 0 then goto L0a2162;
#L0a2160.   return @void ;
#L0a2162.   v0:= 0  @length 4;
#L0a2164.   v1.[|org:apache:http:impl:SocketHttpServerConnection.open|]  := v0 @boolean;
#L0a2168.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.doFlush|](v1) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.doFlush:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type virtual;
#L0a216e.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2172.   call temp:=  [|java:net:Socket.shutdownOutput|](v0) @signature [|Ljava/net/Socket;.shutdownOutput:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a2178.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a217c.   call temp:=  [|java:net:Socket.shutdownInput|](v0) @signature [|Ljava/net/Socket;.shutdownInput:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a2182.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2186.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a218c.   goto L0a2160;
#L0a218e.   v0:= Exception  @type object;
#L0a2190.   goto L0a2182;
#L0a2192.   v0:= Exception  @type object;
#L0a2194.   goto L0a2178;
  catch  [|java:io:IOException|] @[L0a216e..L0a2178] goto L0a2192;
  catch  [|java:io:IOException|] @[L0a2178..L0a2182] goto L0a218e;

   }
    procedure [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:SocketHttpServerConnection.createHttpDataReceiver|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this), [|java:net:Socket|] v2 @type (object), [|int|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.createHttpDataReceiver:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a21c4.   v0:= new [|org:apache:http:impl:io:SocketInputBuffer|];
#L0a21c8.   call temp:=  [|org:apache:http:impl:io:SocketInputBuffer.<init>|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/io/SocketInputBuffer;.<init>:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:SocketInputBuffer|] @type direct;
#L0a21ce.   return v0  @type object;

   }
    procedure [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:SocketHttpServerConnection.createHttpDataTransmitter|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this), [|java:net:Socket|] v2 @type (object), [|int|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.createHttpDataTransmitter:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a21e0.   v0:= new [|org:apache:http:impl:io:SocketOutputBuffer|];
#L0a21e4.   call temp:=  [|org:apache:http:impl:io:SocketOutputBuffer.<init>|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/io/SocketOutputBuffer;.<init>:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:SocketOutputBuffer|] @type direct;
#L0a21ea.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:SocketHttpServerConnection.getLocalAddress|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a21fc.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2200.   if v0 == 0 then goto L0a2212;
#L0a2204.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2208.   call temp:=  [|java:net:Socket.getLocalAddress|](v0) @signature [|Ljava/net/Socket;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a220e.   v0:= temp  @type object;
#L0a2210.   return v0  @type object;
#L0a2212.   v0:= 0  @length 4;
#L0a2214.   goto L0a2210;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpServerConnection.getLocalPort|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getLocalPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2228.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a222c.   if v0 == 0 then goto L0a223e;
#L0a2230.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2234.   call temp:=  [|java:net:Socket.getLocalPort|](v0) @signature [|Ljava/net/Socket;.getLocalPort:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a223a.   v0:= temp;
#L0a223c.   return v0;
#L0a223e.   v0:= -1  @length 4;
#L0a2240.   goto L0a223c;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:SocketHttpServerConnection.getRemoteAddress|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getRemoteAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2254.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2258.   if v0 == 0 then goto L0a226a;
#L0a225c.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2260.   call temp:=  [|java:net:Socket.getInetAddress|](v0) @signature [|Ljava/net/Socket;.getInetAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a2266.   v0:= temp  @type object;
#L0a2268.   return v0  @type object;
#L0a226a.   v0:= 0  @length 4;
#L0a226c.   goto L0a2268;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpServerConnection.getRemotePort|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getRemotePort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2280.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2284.   if v0 == 0 then goto L0a2296;
#L0a2288.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a228c.   call temp:=  [|java:net:Socket.getPort|](v0) @signature [|Ljava/net/Socket;.getPort:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a2292.   v0:= temp;
#L0a2294.   return v0;
#L0a2296.   v0:= -1  @length 4;
#L0a2298.   goto L0a2294;

   }
    procedure [|java:net:Socket|] [|org:apache:http:impl:SocketHttpServerConnection.getSocket|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getSocket:()Ljava/net/Socket;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a22ac.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a22b0.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:SocketHttpServerConnection.getSocketTimeout|] ([|org:apache:http:impl:SocketHttpServerConnection|] v3 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.getSocketTimeout:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a22c4.   v1:= -1  @length 4;
#L0a22c6.   v2:= v3.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a22ca.   if v2 == 0 then goto L0a22da;
#L0a22ce.   v2:= v3.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a22d2.   call temp:=  [|java:net:Socket.getSoTimeout|](v2) @signature [|Ljava/net/Socket;.getSoTimeout:()I|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a22d8.   v1:= temp;
#L0a22da.   return v1;
#L0a22dc.   v0:= Exception  @type object;
#L0a22de.   goto L0a22da;
  catch  [|java:net:SocketException|] @[L0a22ce..L0a22d8] goto L0a22dc;

   }
    procedure [|boolean|] [|org:apache:http:impl:SocketHttpServerConnection.isOpen|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.isOpen:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2300.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.open|]   @boolean;
#L0a2304.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.setSocketTimeout|] ([|org:apache:http:impl:SocketHttpServerConnection|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.setSocketTimeout:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2318.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.assertOpen|](v1) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type virtual;
#L0a231e.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2322.   if v0 == 0 then goto L0a2330;
#L0a2326.   v0:= v1.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a232a.   call temp:=  [|java:net:Socket.setSoTimeout|](v0, v2) @signature [|Ljava/net/Socket;.setSoTimeout:(I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a2330.   return @void ;
#L0a2332.   v0:= Exception  @type object;
#L0a2334.   goto L0a2330;
  catch  [|java:net:SocketException|] @[L0a2326..L0a2330] goto L0a2332;

   }
    procedure [|void|] [|org:apache:http:impl:SocketHttpServerConnection.shutdown|] ([|org:apache:http:impl:SocketHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:SocketHttpServerConnection|] @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2358.   v1:= 0  @length 4;
#L0a235a.   v2.[|org:apache:http:impl:SocketHttpServerConnection.open|]  := v1 @boolean;
#L0a235e.   v0:= v2.[|org:apache:http:impl:SocketHttpServerConnection.socket|]   @type object;
#L0a2362.   if v0 == 0 then goto L0a236c;
#L0a2366.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a236c.   return @void ;

   }
record [|org:apache:http:impl:DefaultHttpServerConnection|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:SocketHttpServerConnection|] {
   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpServerConnection.<init>|] ([|org:apache:http:impl:DefaultHttpServerConnection|] v0 @type (this)) @owner [|org:apache:http:impl:DefaultHttpServerConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a2380.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.<init>|](v0) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type direct;
#L0a2386.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:DefaultHttpServerConnection.bind|] ([|org:apache:http:impl:DefaultHttpServerConnection|] v3 @type (this), [|java:net:Socket|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:DefaultHttpServerConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a2398.   if v4 != 0 then goto L0a23ac;
#L0a239c.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a23a0.   v2:= "Socket may not be null" @type (object, string);
#L0a23a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a23aa.   throw v1;
#L0a23ac.   if v5 != 0 then goto L0a23c0;
#L0a23b0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a23b4.   v2:= "HTTP parameters may not be null" @type (object, string);
#L0a23b8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a23be.   throw v1;
#L0a23c0.   call temp:=  [|org:apache:http:impl:DefaultHttpServerConnection.assertNotOpen|](v3) @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.assertNotOpen:()V|] @classDescriptor [|org:apache:http:impl:DefaultHttpServerConnection|] @type virtual;
#L0a23c6.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getTcpNoDelay|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getTcpNoDelay:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a23cc.   v1:= temp;
#L0a23ce.   call temp:=  [|java:net:Socket.setTcpNoDelay|](v4, v1) @signature [|Ljava/net/Socket;.setTcpNoDelay:(Z)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a23d4.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSoTimeout|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSoTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a23da.   v1:= temp;
#L0a23dc.   call temp:=  [|java:net:Socket.setSoTimeout|](v4, v1) @signature [|Ljava/net/Socket;.setSoTimeout:(I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a23e2.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getLinger|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getLinger:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a23e8.   v0:= temp;
#L0a23ea.   if v0 < 0 then goto L0a23fa;
#L0a23ee.   if v0 <= 0 then goto L0a2402;
#L0a23f2.   v1:= 1  @length 4;
#L0a23f4.   call temp:=  [|java:net:Socket.setSoLinger|](v4, v1, v0) @signature [|Ljava/net/Socket;.setSoLinger:(ZI)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a23fa.   call temp:=  [|org:apache:http:impl:SocketHttpServerConnection.bind|](v3, v4, v5) @signature [|Lorg/apache/http/impl/SocketHttpServerConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:SocketHttpServerConnection|] @type super;
#L0a2400.   return @void ;
#L0a2402.   v1:= 0  @length 4;
#L0a2404.   goto L0a23f4;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:DefaultHttpServerConnection.toString|] ([|org:apache:http:impl:DefaultHttpServerConnection|] v2 @type (this)) @owner [|org:apache:http:impl:DefaultHttpServerConnection|] @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2418.   v0:= new [|java:lang:StringBuffer|];
#L0a241c.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0a2422.   v1:= "[" @type (object, string);
#L0a2426.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a242c.   call temp:=  [|org:apache:http:impl:DefaultHttpServerConnection.isOpen|](v2) @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:DefaultHttpServerConnection|] @type virtual;
#L0a2432.   v1:= temp;
#L0a2434.   if v1 == 0 then goto L0a245a;
#L0a2438.   call temp:=  [|org:apache:http:impl:DefaultHttpServerConnection.getRemotePort|](v2) @signature [|Lorg/apache/http/impl/DefaultHttpServerConnection;.getRemotePort:()I|] @classDescriptor [|org:apache:http:impl:DefaultHttpServerConnection|] @type virtual;
#L0a243e.   v1:= temp;
#L0a2440.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a2446.   v1:= "]" @type (object, string);
#L0a244a.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a2450.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a2456.   v1:= temp  @type object;
#L0a2458.   return v1  @type object;
#L0a245a.   v1:= "closed" @type (object, string);
#L0a245e.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0a2464.   goto L0a2446;

   }
record [|org:apache:http:impl:EnglishReasonPhraseCatalog|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:ReasonPhraseCatalog|] {
   }
      global [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.INSTANCE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|][][] @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.REASON_PHRASES|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:EnglishReasonPhraseCatalog.<clinit>|] () @owner [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a2478.   v4:= 3  @length 4;
#L0a247a.   v3:= 8  @length 16;
#L0a247e.   v0:= new [|org:apache:http:impl:EnglishReasonPhraseCatalog|];
#L0a2482.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.<init>|](v0) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.<init>:()V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type direct;
#L0a2488.   @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.INSTANCE|] := v0  @type object;
#L0a248c.   v0:= 6  @length 4;
#L0a248e.   v0:= new [|java:lang:String|][v0][];
#L0a2492.   v1:= 0  @length 4;
#L0a2494.   v2:= 0  @length 4;
#L0a2496.   v0[v1]:= v2  @type object;
#L0a249a.   v1:= 1  @length 4;
#L0a249c.   v2:= new [|java:lang:String|][v4];
#L0a24a0.   v0[v1]:= v2  @type object;
#L0a24a4.   v1:= 2  @length 4;
#L0a24a6.   v2:= new [|java:lang:String|][v3];
#L0a24aa.   v0[v1]:= v2  @type object;
#L0a24ae.   v1:= new [|java:lang:String|][v3];
#L0a24b2.   v0[v4]:= v1  @type object;
#L0a24b6.   v1:= 4  @length 4;
#L0a24b8.   v2:= 25  @length 16;
#L0a24bc.   v2:= new [|java:lang:String|][v2];
#L0a24c0.   v0[v1]:= v2  @type object;
#L0a24c4.   v1:= 5  @length 4;
#L0a24c6.   v2:= new [|java:lang:String|][v3];
#L0a24ca.   v0[v1]:= v2  @type object;
#L0a24ce.   @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.REASON_PHRASES|] := v0  @type object;
#L0a24d2.   v0:= 200  @length 16;
#L0a24d6.   v1:= "OK" @type (object, string);
#L0a24da.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a24e0.   v0:= 201  @length 16;
#L0a24e4.   v1:= "Created" @type (object, string);
#L0a24e8.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a24ee.   v0:= 202  @length 16;
#L0a24f2.   v1:= "Accepted" @type (object, string);
#L0a24f6.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a24fc.   v0:= 204  @length 16;
#L0a2500.   v1:= "No Content" @type (object, string);
#L0a2504.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a250a.   v0:= 301  @length 16;
#L0a250e.   v1:= "Moved Permanently" @type (object, string);
#L0a2512.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2518.   v0:= 302  @length 16;
#L0a251c.   v1:= "Moved Temporarily" @type (object, string);
#L0a2520.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2526.   v0:= 304  @length 16;
#L0a252a.   v1:= "Not Modified" @type (object, string);
#L0a252e.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2534.   v0:= 400  @length 16;
#L0a2538.   v1:= "Bad Request" @type (object, string);
#L0a253c.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2542.   v0:= 401  @length 16;
#L0a2546.   v1:= "Unauthorized" @type (object, string);
#L0a254a.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2550.   v0:= 403  @length 16;
#L0a2554.   v1:= "Forbidden" @type (object, string);
#L0a2558.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a255e.   v0:= 404  @length 16;
#L0a2562.   v1:= "Not Found" @type (object, string);
#L0a2566.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a256c.   v0:= 500  @length 16;
#L0a2570.   v1:= "Internal Server Error" @type (object, string);
#L0a2574.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a257a.   v0:= 501  @length 16;
#L0a257e.   v1:= "Not Implemented" @type (object, string);
#L0a2582.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2588.   v0:= 502  @length 16;
#L0a258c.   v1:= "Bad Gateway" @type (object, string);
#L0a2590.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2596.   v0:= 503  @length 16;
#L0a259a.   v1:= "Service Unavailable" @type (object, string);
#L0a259e.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25a4.   v0:= 100  @length 16;
#L0a25a8.   v1:= "Continue" @type (object, string);
#L0a25ac.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25b2.   v0:= 307  @length 16;
#L0a25b6.   v1:= "Temporary Redirect" @type (object, string);
#L0a25ba.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25c0.   v0:= 405  @length 16;
#L0a25c4.   v1:= "Method Not Allowed" @type (object, string);
#L0a25c8.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25ce.   v0:= 409  @length 16;
#L0a25d2.   v1:= "Conflict" @type (object, string);
#L0a25d6.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25dc.   v0:= 412  @length 16;
#L0a25e0.   v1:= "Precondition Failed" @type (object, string);
#L0a25e4.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25ea.   v0:= 413  @length 16;
#L0a25ee.   v1:= "Request Too Long" @type (object, string);
#L0a25f2.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a25f8.   v0:= 414  @length 16;
#L0a25fc.   v1:= "Request-URI Too Long" @type (object, string);
#L0a2600.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2606.   v0:= 415  @length 16;
#L0a260a.   v1:= "Unsupported Media Type" @type (object, string);
#L0a260e.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2614.   v0:= 300  @length 16;
#L0a2618.   v1:= "Multiple Choices" @type (object, string);
#L0a261c.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2622.   v0:= 303  @length 16;
#L0a2626.   v1:= "See Other" @type (object, string);
#L0a262a.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2630.   v0:= 305  @length 16;
#L0a2634.   v1:= "Use Proxy" @type (object, string);
#L0a2638.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a263e.   v0:= 402  @length 16;
#L0a2642.   v1:= "Payment Required" @type (object, string);
#L0a2646.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a264c.   v0:= 406  @length 16;
#L0a2650.   v1:= "Not Acceptable" @type (object, string);
#L0a2654.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a265a.   v0:= 407  @length 16;
#L0a265e.   v1:= "Proxy Authentication Required" @type (object, string);
#L0a2662.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2668.   v0:= 408  @length 16;
#L0a266c.   v1:= "Request Timeout" @type (object, string);
#L0a2670.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2676.   v0:= 101  @length 16;
#L0a267a.   v1:= "Switching Protocols" @type (object, string);
#L0a267e.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2684.   v0:= 203  @length 16;
#L0a2688.   v1:= "Non Authoritative Information" @type (object, string);
#L0a268c.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2692.   v0:= 205  @length 16;
#L0a2696.   v1:= "Reset Content" @type (object, string);
#L0a269a.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26a0.   v0:= 206  @length 16;
#L0a26a4.   v1:= "Partial Content" @type (object, string);
#L0a26a8.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26ae.   v0:= 504  @length 16;
#L0a26b2.   v1:= "Gateway Timeout" @type (object, string);
#L0a26b6.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26bc.   v0:= 505  @length 16;
#L0a26c0.   v1:= "Http Version Not Supported" @type (object, string);
#L0a26c4.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26ca.   v0:= 410  @length 16;
#L0a26ce.   v1:= "Gone" @type (object, string);
#L0a26d2.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26d8.   v0:= 411  @length 16;
#L0a26dc.   v1:= "Length Required" @type (object, string);
#L0a26e0.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26e6.   v0:= 416  @length 16;
#L0a26ea.   v1:= "Requested Range Not Satisfiable" @type (object, string);
#L0a26ee.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a26f4.   v0:= 417  @length 16;
#L0a26f8.   v1:= "Expectation Failed" @type (object, string);
#L0a26fc.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2702.   v0:= 102  @length 16;
#L0a2706.   v1:= "Processing" @type (object, string);
#L0a270a.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2710.   v0:= 207  @length 16;
#L0a2714.   v1:= "Multi-Status" @type (object, string);
#L0a2718.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a271e.   v0:= 422  @length 16;
#L0a2722.   v1:= "Unprocessable Entity" @type (object, string);
#L0a2726.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a272c.   v0:= 419  @length 16;
#L0a2730.   v1:= "Insufficient Space On Resource" @type (object, string);
#L0a2734.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a273a.   v0:= 420  @length 16;
#L0a273e.   v1:= "Method Failure" @type (object, string);
#L0a2742.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2748.   v0:= 423  @length 16;
#L0a274c.   v1:= "Locked" @type (object, string);
#L0a2750.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2756.   v0:= 507  @length 16;
#L0a275a.   v1:= "Insufficient Storage" @type (object, string);
#L0a275e.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2764.   v0:= 424  @length 16;
#L0a2768.   v1:= "Failed Dependency" @type (object, string);
#L0a276c.   call temp:=  [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|](v0, v1) @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @type static;
#L0a2772.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:EnglishReasonPhraseCatalog.<init>|] ([|org:apache:http:impl:EnglishReasonPhraseCatalog|] v0 @type (this)) @owner [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0a2784.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a278a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:EnglishReasonPhraseCatalog.setReason|] ([|int|] v3, [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.setReason:(ILjava/lang/String;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a279c.   v0:= v3 / 100;
#L0a27a0.   v2:= v0 * 100;
#L0a27a4.   v1:= v3 - v2  @type int;
#L0a27a8.   v2:= @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.REASON_PHRASES|]   @type object;
#L0a27ac.   v2:= v2[v0]  @type object;
#L0a27b0.   v2[v1]:= v4  @type object;
#L0a27b4.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:EnglishReasonPhraseCatalog.getReason|] ([|org:apache:http:impl:EnglishReasonPhraseCatalog|] v6 @type (this), [|int|] v7, [|java:util:Locale|] v8 @type (object)) @owner [|org:apache:http:impl:EnglishReasonPhraseCatalog|] @signature [|Lorg/apache/http/impl/EnglishReasonPhraseCatalog;.getReason:(ILjava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a27c8.   v3:= 100  @length 16;
#L0a27cc.   if v7 < v3 then goto L0a27d8;
#L0a27d0.   v3:= 600  @length 16;
#L0a27d4.   if v7 < v3 then goto L0a2816;
#L0a27d8.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a27dc.   v4:= new [|java:lang:StringBuilder|];
#L0a27e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a27e6.   v5:= "Unknown category for status code " @type (object, string);
#L0a27ea.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a27f0.   v4:= temp  @type object;
#L0a27f2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a27f8.   v4:= temp  @type object;
#L0a27fa.   v5:= "." @type (object, string);
#L0a27fe.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2804.   v4:= temp  @type object;
#L0a2806.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a280c.   v4:= temp  @type object;
#L0a280e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2814.   throw v3;
#L0a2816.   v0:= v7 / 100;
#L0a281a.   v3:= v0 * 100;
#L0a281e.   v2:= v7 - v3  @type int;
#L0a2822.   v1:= 0  @length 4;
#L0a2824.   v3:= @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.REASON_PHRASES|]   @type object;
#L0a2828.   v3:= v3[v0]  @type object;
#L0a282c.   v3:= v3.length;
#L0a282e.   if v3 <= v2 then goto L0a283e;
#L0a2832.   v3:= @@[|org:apache:http:impl:EnglishReasonPhraseCatalog.REASON_PHRASES|]   @type object;
#L0a2836.   v3:= v3[v0]  @type object;
#L0a283a.   v1:= v3[v2]  @type object;
#L0a283e.   return v1  @type object;

   }
record [|org:apache:http:impl:HttpConnectionMetricsImpl|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:HttpConnectionMetrics|] {
      [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:HashMap|] [|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]    @AccessFlag PRIVATE;
      [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]    @AccessFlag PRIVATE;
      [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|org:apache:http:impl:HttpConnectionMetricsImpl.RECEIVED_BYTES_COUNT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:HttpConnectionMetricsImpl.REQUEST_COUNT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:HttpConnectionMetricsImpl.RESPONSE_COUNT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:HttpConnectionMetricsImpl.SENT_BYTES_COUNT|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:HttpConnectionMetricsImpl.<init>|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v2 @type (this), [|org:apache:http:io:HttpTransportMetrics|] v3 @type (object), [|org:apache:http:io:HttpTransportMetrics|] v4 @type (object)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.<init>:(Lorg/apache/http/io/HttpTransportMetrics;Lorg/apache/http/io/HttpTransportMetrics;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a2850.   v0:= 0  @length wide16;
#L0a2854.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a285a.   v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]  := v0 @wide;
#L0a285e.   v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]  := v0 @wide;
#L0a2862.   v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]  := v3 @type object;
#L0a2866.   v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]  := v4 @type object;
#L0a286a.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:HttpConnectionMetricsImpl.getMetric|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.getMetric:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a287c.   v1:= 0  @length 4;
#L0a287e.   v0:= 0  @length 4;
#L0a2880.   v2:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]   @type object;
#L0a2884.   if v2 == 0 then goto L0a2894;
#L0a2888.   v2:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]   @type object;
#L0a288c.   call temp:=  [|java:util:HashMap.get|](v2, v4) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a2892.   v0:= temp  @type object;
#L0a2894.   if v0 != 0 then goto L0a28b6;
#L0a2898.   v2:= "http.request-count" @type (object, string);
#L0a289c.   call temp:=  [|java:lang:String.equals|](v2, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a28a2.   v2:= temp;
#L0a28a4.   if v2 == 0 then goto L0a28b8;
#L0a28a8.   v0:= new [|java:lang:Long|];
#L0a28ac.   v1:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]   @wide;
#L0a28b0.   call temp:=  [|java:lang:Long.<init>|](v0, v1, v2) @signature [|Ljava/lang/Long;.<init>:(J)V|] @classDescriptor [|java:lang:Long|] @type direct;
#L0a28b6.   return v0  @type object;
#L0a28b8.   v2:= "http.response-count" @type (object, string);
#L0a28bc.   call temp:=  [|java:lang:String.equals|](v2, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a28c2.   v2:= temp;
#L0a28c4.   if v2 == 0 then goto L0a28d8;
#L0a28c8.   v0:= new [|java:lang:Long|];
#L0a28cc.   v1:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]   @wide;
#L0a28d0.   call temp:=  [|java:lang:Long.<init>|](v0, v1, v2) @signature [|Ljava/lang/Long;.<init>:(J)V|] @classDescriptor [|java:lang:Long|] @type direct;
#L0a28d6.   goto L0a28b6;
#L0a28d8.   v2:= "http.received-bytes-count" @type (object, string);
#L0a28dc.   call temp:=  [|java:lang:String.equals|](v2, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a28e2.   v2:= temp;
#L0a28e4.   if v2 == 0 then goto L0a290c;
#L0a28e8.   v2:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a28ec.   if v2 == 0 then goto L0a2908;
#L0a28f0.   v0:= new [|java:lang:Long|];
#L0a28f4.   v1:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a28f8.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.getBytesTransferred|](v1) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.getBytesTransferred:()J|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a28fe.   v1:= temp  @type wide;
#L0a2900.   call temp:=  [|java:lang:Long.<init>|](v0, v1, v2) @signature [|Ljava/lang/Long;.<init>:(J)V|] @classDescriptor [|java:lang:Long|] @type direct;
#L0a2906.   goto L0a28b6;
#L0a2908.   v0:= v1  @type object;
#L0a290a.   goto L0a28b6;
#L0a290c.   v2:= "http.sent-bytes-count" @type (object, string);
#L0a2910.   call temp:=  [|java:lang:String.equals|](v2, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2916.   v2:= temp;
#L0a2918.   if v2 == 0 then goto L0a28b6;
#L0a291c.   v2:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a2920.   if v2 == 0 then goto L0a293c;
#L0a2924.   v0:= new [|java:lang:Long|];
#L0a2928.   v1:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a292c.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.getBytesTransferred|](v1) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.getBytesTransferred:()J|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a2932.   v1:= temp  @type wide;
#L0a2934.   call temp:=  [|java:lang:Long.<init>|](v0, v1, v2) @signature [|Ljava/lang/Long;.<init>:(J)V|] @classDescriptor [|java:lang:Long|] @type direct;
#L0a293a.   goto L0a28b6;
#L0a293c.   v0:= v1  @type object;
#L0a293e.   goto L0a28b6;

   }
    procedure [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.getReceivedBytesCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v2 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.getReceivedBytesCount:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2950.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a2954.   if v0 == 0 then goto L0a2966;
#L0a2958.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a295c.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.getBytesTransferred|](v0) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.getBytesTransferred:()J|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a2962.   v0:= temp  @type wide;
#L0a2964.   return v0  @type wide;
#L0a2966.   v0:= -1  @length wide16;
#L0a296a.   goto L0a2964;

   }
    procedure [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.getRequestCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v2 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.getRequestCount:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a297c.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]   @wide;
#L0a2980.   return v0  @type wide;

   }
    procedure [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.getResponseCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v2 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.getResponseCount:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2994.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]   @wide;
#L0a2998.   return v0  @type wide;

   }
    procedure [|long|] [|org:apache:http:impl:HttpConnectionMetricsImpl.getSentBytesCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v2 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.getSentBytesCount:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a29ac.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a29b0.   if v0 == 0 then goto L0a29c2;
#L0a29b4.   v0:= v2.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a29b8.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.getBytesTransferred|](v0) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.getBytesTransferred:()J|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a29be.   v0:= temp  @type wide;
#L0a29c0.   return v0  @type wide;
#L0a29c2.   v0:= -1  @length wide16;
#L0a29c6.   goto L0a29c0;

   }
    procedure [|void|] [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementRequestCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v4 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementRequestCount:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a29d8.   v0:= v4.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]   @wide;
#L0a29dc.   v2:= 1  @length wide16;
#L0a29e0.   v0:= v0 + v2  @type long;
#L0a29e2.   v4.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]  := v0 @wide;
#L0a29e6.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:HttpConnectionMetricsImpl.incrementResponseCount|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v4 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.incrementResponseCount:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a29f8.   v0:= v4.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]   @wide;
#L0a29fc.   v2:= 1  @length wide16;
#L0a2a00.   v0:= v0 + v2  @type long;
#L0a2a02.   v4.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]  := v0 @wide;
#L0a2a06.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:HttpConnectionMetricsImpl.reset|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v3 @type (this)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a2a18.   v1:= 0  @length wide16;
#L0a2a1c.   v0:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a2a20.   if v0 == 0 then goto L0a2a2e;
#L0a2a24.   v0:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.outTransportMetric|]   @type object;
#L0a2a28.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.reset|](v0) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.reset:()V|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a2a2e.   v0:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a2a32.   if v0 == 0 then goto L0a2a40;
#L0a2a36.   v0:= v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.inTransportMetric|]   @type object;
#L0a2a3a.   call temp:=  [|org:apache:http:io:HttpTransportMetrics.reset|](v0) @signature [|Lorg/apache/http/io/HttpTransportMetrics;.reset:()V|] @classDescriptor [|org:apache:http:io:HttpTransportMetrics|] @type interface;
#L0a2a40.   v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.requestCount|]  := v1 @wide;
#L0a2a44.   v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.responseCount|]  := v1 @wide;
#L0a2a48.   v0:= 0  @length 4;
#L0a2a4a.   v3.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]  := v0 @type object;
#L0a2a4e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:HttpConnectionMetricsImpl.setMetric|] ([|org:apache:http:impl:HttpConnectionMetricsImpl|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:http:impl:HttpConnectionMetricsImpl|] @signature [|Lorg/apache/http/impl/HttpConnectionMetricsImpl;.setMetric:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2a60.   v0:= v1.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]   @type object;
#L0a2a64.   if v0 != 0 then goto L0a2a76;
#L0a2a68.   v0:= new [|java:util:HashMap|];
#L0a2a6c.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a2a72.   v1.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]  := v0 @type object;
#L0a2a76.   v0:= v1.[|org:apache:http:impl:HttpConnectionMetricsImpl.metricsCache|]   @type object;
#L0a2a7a.   call temp:=  [|java:util:HashMap.put|](v0, v2, v3) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a2a80.   return @void ;

   }
record [|org:apache:http:impl:NoConnectionReuseStrategy|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:ConnectionReuseStrategy|] {
   }
    procedure [|void|] [|org:apache:http:impl:NoConnectionReuseStrategy.<init>|] ([|org:apache:http:impl:NoConnectionReuseStrategy|] v0 @type (this)) @owner [|org:apache:http:impl:NoConnectionReuseStrategy|] @signature [|Lorg/apache/http/impl/NoConnectionReuseStrategy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a2a94.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a2a9a.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:NoConnectionReuseStrategy.keepAlive|] ([|org:apache:http:impl:NoConnectionReuseStrategy|] v2 @type (this), [|org:apache:http:HttpResponse|] v3 @type (object), [|org:apache:http:protocol:HttpContext|] v4 @type (object)) @owner [|org:apache:http:impl:NoConnectionReuseStrategy|] @signature [|Lorg/apache/http/impl/NoConnectionReuseStrategy;.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2aac.   if v3 != 0 then goto L0a2ac0;
#L0a2ab0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a2ab4.   v1:= "HTTP response may not be null" @type (object, string);
#L0a2ab8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2abe.   throw v0;
#L0a2ac0.   if v4 != 0 then goto L0a2ad4;
#L0a2ac4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a2ac8.   v1:= "HTTP context may not be null" @type (object, string);
#L0a2acc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2ad2.   throw v0;
#L0a2ad4.   v0:= 0  @length 4;
#L0a2ad6.   return v0;

   }
record [|org:apache:http:impl:auth:AuthSchemeBase|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:auth:AuthScheme|] {
      [|boolean|] [|org:apache:http:impl:auth:AuthSchemeBase.proxy|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:auth:AuthSchemeBase.<init>|] ([|org:apache:http:impl:auth:AuthSchemeBase|] v0 @type (this)) @owner [|org:apache:http:impl:auth:AuthSchemeBase|] @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a2ae8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a2aee.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:AuthSchemeBase.isProxy|] ([|org:apache:http:impl:auth:AuthSchemeBase|] v1 @type (this)) @owner [|org:apache:http:impl:auth:AuthSchemeBase|] @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.isProxy:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2b00.   v0:= v1.[|org:apache:http:impl:auth:AuthSchemeBase.proxy|]   @boolean;
#L0a2b04.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:auth:AuthSchemeBase.parseChallenge|] ([|org:apache:http:util:CharArrayBuffer|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|org:apache:http:impl:auth:AuthSchemeBase|] @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.parseChallenge:(Lorg/apache/http/util/CharArrayBuffer;II)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:impl:auth:AuthSchemeBase.processChallenge|] ([|org:apache:http:impl:auth:AuthSchemeBase|] v9 @type (this), [|org:apache:http:Header|] v10 @type (object)) @owner [|org:apache:http:impl:auth:AuthSchemeBase|] @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.processChallenge:(Lorg/apache/http/Header;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0a2b18.   if v10 != 0 then goto L0a2b2c;
#L0a2b1c.   v6:= new [|java:lang:IllegalArgumentException|];
#L0a2b20.   v7:= "Header may not be null" @type (object, string);
#L0a2b24.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2b2a.   throw v6;
#L0a2b2c.   call temp:=  [|org:apache:http:Header.getName|](v10) @signature [|Lorg/apache/http/Header;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0a2b32.   v0:= temp  @type object;
#L0a2b34.   v6:= "WWW-Authenticate" @type (object, string);
#L0a2b38.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v0, v6) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2b3e.   v6:= temp;
#L0a2b40.   if v6 == 0 then goto L0a2b92;
#L0a2b44.   v6:= 0  @length 4;
#L0a2b46.   v9.[|org:apache:http:impl:auth:AuthSchemeBase.proxy|]  := v6 @boolean;
#L0a2b4a.   v6:= instanceof @varname v10 @type [|org:apache:http:FormattedHeader|];
#L0a2b4e.   if v6 == 0 then goto L0a2bdc;
#L0a2b52.   v6:= v10  @type object;
#L0a2b54.   v6:= ([|org:apache:http:FormattedHeader|])v6;
#L0a2b58.   call temp:=  [|org:apache:http:FormattedHeader.getBuffer|](v6) @signature [|Lorg/apache/http/FormattedHeader;.getBuffer:()Lorg/apache/http/util/CharArrayBuffer;|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0a2b5e.   v2:= temp  @type object;
#L0a2b60.   v10:= ([|org:apache:http:FormattedHeader|])v10;
#L0a2b64.   call temp:=  [|org:apache:http:FormattedHeader.getValuePos|](v10) @signature [|Lorg/apache/http/FormattedHeader;.getValuePos:()I|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0a2b6a.   v4:= temp;
#L0a2b6c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2b72.   v6:= temp;
#L0a2b74.   if v4 >= v6 then goto L0a2c14;
#L0a2b78.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2b7e.   v6:= temp;
#L0a2b80.   call temp:=  [|org:apache:http:protocol:HTTP.isWhitespace|](v6) @signature [|Lorg/apache/http/protocol/HTTP;.isWhitespace:(C)Z|] @classDescriptor [|org:apache:http:protocol:HTTP|] @type static;
#L0a2b86.   v6:= temp;
#L0a2b88.   if v6 == 0 then goto L0a2c14;
#L0a2b8c.   v4:= v4 + 1;
#L0a2b90.   goto L0a2b6c;
#L0a2b92.   v6:= "Proxy-Authenticate" @type (object, string);
#L0a2b96.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v0, v6) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2b9c.   v6:= temp;
#L0a2b9e.   if v6 == 0 then goto L0a2baa;
#L0a2ba2.   v6:= 1  @length 4;
#L0a2ba4.   v9.[|org:apache:http:impl:auth:AuthSchemeBase.proxy|]  := v6 @boolean;
#L0a2ba8.   goto L0a2b4a;
#L0a2baa.   v6:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a2bae.   v7:= new [|java:lang:StringBuilder|];
#L0a2bb2.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a2bb8.   v8:= "Unexpected header name: " @type (object, string);
#L0a2bbc.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2bc2.   v7:= temp  @type object;
#L0a2bc4.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2bca.   v7:= temp  @type object;
#L0a2bcc.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2bd2.   v7:= temp  @type object;
#L0a2bd4.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v6, v7) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a2bda.   throw v6;
#L0a2bdc.   call temp:=  [|org:apache:http:Header.getValue|](v10) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0a2be2.   v5:= temp  @type object;
#L0a2be4.   if v5 != 0 then goto L0a2bf8;
#L0a2be8.   v6:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a2bec.   v7:= "Header value is null" @type (object, string);
#L0a2bf0.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v6, v7) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a2bf6.   throw v6;
#L0a2bf8.   v2:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a2bfc.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2c02.   v6:= temp;
#L0a2c04.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v2, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a2c0a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v2, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2c10.   v4:= 0  @length 4;
#L0a2c12.   goto L0a2b6c;
#L0a2c14.   v1:= v4;
#L0a2c16.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2c1c.   v6:= temp;
#L0a2c1e.   if v4 >= v6 then goto L0a2c3c;
#L0a2c22.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2c28.   v6:= temp;
#L0a2c2a.   call temp:=  [|org:apache:http:protocol:HTTP.isWhitespace|](v6) @signature [|Lorg/apache/http/protocol/HTTP;.isWhitespace:(C)Z|] @classDescriptor [|org:apache:http:protocol:HTTP|] @type static;
#L0a2c30.   v6:= temp;
#L0a2c32.   if v6 != 0 then goto L0a2c3c;
#L0a2c36.   v4:= v4 + 1;
#L0a2c3a.   goto L0a2c16;
#L0a2c3c.   v3:= v4;
#L0a2c3e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.substring|](v2, v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.substring:(II)Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2c44.   v5:= temp  @type object;
#L0a2c46.   call temp:=  [|org:apache:http:impl:auth:AuthSchemeBase.getSchemeName|](v9) @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:AuthSchemeBase|] @type virtual;
#L0a2c4c.   v6:= temp  @type object;
#L0a2c4e.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v5, v6) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2c54.   v6:= temp;
#L0a2c56.   if v6 != 0 then goto L0a2c8c;
#L0a2c5a.   v6:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a2c5e.   v7:= new [|java:lang:StringBuilder|];
#L0a2c62.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a2c68.   v8:= "Invalid scheme identifier: " @type (object, string);
#L0a2c6c.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2c72.   v7:= temp  @type object;
#L0a2c74.   call temp:=  [|java:lang:StringBuilder.append|](v7, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2c7a.   v7:= temp  @type object;
#L0a2c7c.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2c82.   v7:= temp  @type object;
#L0a2c84.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v6, v7) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a2c8a.   throw v6;
#L0a2c8c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2c92.   v6:= temp;
#L0a2c94.   call temp:=  [|org:apache:http:impl:auth:AuthSchemeBase.parseChallenge|](v9, v2, v4, v6) @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.parseChallenge:(Lorg/apache/http/util/CharArrayBuffer;II)V|] @classDescriptor [|org:apache:http:impl:auth:AuthSchemeBase|] @type virtual;
#L0a2c9a.   return @void ;

   }
record [|org:apache:http:impl:auth:RFC2617Scheme|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|org:apache:http:impl:auth:AuthSchemeBase|] {
      [|java:util:Map|] [|org:apache:http:impl:auth:RFC2617Scheme.params|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:auth:RFC2617Scheme.<init>|] ([|org:apache:http:impl:auth:RFC2617Scheme|] v0 @type (this)) @owner [|org:apache:http:impl:auth:RFC2617Scheme|] @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a2cac.   call temp:=  [|org:apache:http:impl:auth:AuthSchemeBase.<init>|](v0) @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:AuthSchemeBase|] @type direct;
#L0a2cb2.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:RFC2617Scheme.getParameter|] ([|org:apache:http:impl:auth:RFC2617Scheme|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:auth:RFC2617Scheme|] @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a2cc4.   if v3 != 0 then goto L0a2cd8;
#L0a2cc8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a2ccc.   v1:= "Parameter name may not be null" @type (object, string);
#L0a2cd0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2cd6.   throw v0;
#L0a2cd8.   v0:= v2.[|org:apache:http:impl:auth:RFC2617Scheme.params|]   @type object;
#L0a2cdc.   if v0 != 0 then goto L0a2ce4;
#L0a2ce0.   v0:= 0  @length 4;
#L0a2ce2.   return v0  @type object;
#L0a2ce4.   v0:= v2.[|org:apache:http:impl:auth:RFC2617Scheme.params|]   @type object;
#L0a2ce8.   v1:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a2cec.   call temp:=  [|java:lang:String.toLowerCase|](v3, v1) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a2cf2.   v1:= temp  @type object;
#L0a2cf4.   call temp:=  [|java:util:Map.get|](v0, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a2cfa.   v0:= temp  @type object;
#L0a2cfc.   v0:= ([|java:lang:String|])v0;
#L0a2d00.   goto L0a2ce2;

   }
    procedure [|java:util:Map|] [|org:apache:http:impl:auth:RFC2617Scheme.getParameters|] ([|org:apache:http:impl:auth:RFC2617Scheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:RFC2617Scheme|] @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.getParameters:()Ljava/util/Map;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a2d14.   v0:= v1.[|org:apache:http:impl:auth:RFC2617Scheme.params|]   @type object;
#L0a2d18.   if v0 != 0 then goto L0a2d2a;
#L0a2d1c.   v0:= new [|java:util:HashMap|];
#L0a2d20.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a2d26.   v1.[|org:apache:http:impl:auth:RFC2617Scheme.params|]  := v0 @type object;
#L0a2d2a.   v0:= v1.[|org:apache:http:impl:auth:RFC2617Scheme.params|]   @type object;
#L0a2d2e.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:RFC2617Scheme.getRealm|] ([|org:apache:http:impl:auth:RFC2617Scheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:RFC2617Scheme|] @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.getRealm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2d40.   v0:= "realm" @type (object, string);
#L0a2d44.   call temp:=  [|org:apache:http:impl:auth:RFC2617Scheme.getParameter|](v1, v0) @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:RFC2617Scheme|] @type virtual;
#L0a2d4a.   v0:= temp  @type object;
#L0a2d4c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:auth:RFC2617Scheme.parseChallenge|] ([|org:apache:http:impl:auth:RFC2617Scheme|] v10 @type (this), [|org:apache:http:util:CharArrayBuffer|] v11 @type (object), [|int|] v12, [|int|] v13) @owner [|org:apache:http:impl:auth:RFC2617Scheme|] @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.parseChallenge:(Lorg/apache/http/util/CharArrayBuffer;II)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0a2d60.   v6:= @@[|org:apache:http:message:BasicHeaderValueParser.DEFAULT|]   @type object;
#L0a2d64.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0a2d68.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v11) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2d6e.   v7:= temp;
#L0a2d70.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v12, v7) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0a2d76.   call temp:=  [|org:apache:http:message:HeaderValueParser.parseElements|](v6, v11, v1) @signature [|Lorg/apache/http/message/HeaderValueParser;.parseElements:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:message:HeaderValueParser|] @type interface;
#L0a2d7c.   v3:= temp  @type object;
#L0a2d7e.   v7:= v3.length;
#L0a2d80.   if v7 != 0 then goto L0a2d94;
#L0a2d84.   v7:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a2d88.   v8:= "Authentication challenge is empty" @type (object, string);
#L0a2d8c.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v7, v8) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a2d92.   throw v7;
#L0a2d94.   v7:= new [|java:util:HashMap|];
#L0a2d98.   v8:= v3.length;
#L0a2d9a.   call temp:=  [|java:util:HashMap.<init>|](v7, v8) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a2da0.   v10.[|org:apache:http:impl:auth:RFC2617Scheme.params|]  := v7 @type object;
#L0a2da4.   v0:= v3  @type object;
#L0a2da6.   v5:= v0.length;
#L0a2da8.   v4:= 0  @length 4;
#L0a2daa.   if v4 >= v5 then goto L0a2dd2;
#L0a2dae.   v2:= v0[v4]  @type object;
#L0a2db2.   v7:= v10.[|org:apache:http:impl:auth:RFC2617Scheme.params|]   @type object;
#L0a2db6.   call temp:=  [|org:apache:http:HeaderElement.getName|](v2) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0a2dbc.   v8:= temp  @type object;
#L0a2dbe.   call temp:=  [|org:apache:http:HeaderElement.getValue|](v2) @signature [|Lorg/apache/http/HeaderElement;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0a2dc4.   v9:= temp  @type object;
#L0a2dc6.   call temp:=  [|java:util:Map.put|](v7, v8, v9) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a2dcc.   v4:= v4 + 1;
#L0a2dd0.   goto L0a2daa;
#L0a2dd2.   return @void ;

   }
record [|org:apache:http:impl:auth:BasicScheme|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:auth:RFC2617Scheme|] {
      [|boolean|] [|org:apache:http:impl:auth:BasicScheme.complete|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:auth:BasicScheme.<init>|] ([|org:apache:http:impl:auth:BasicScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a2de4.   call temp:=  [|org:apache:http:impl:auth:RFC2617Scheme.<init>|](v1) @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:RFC2617Scheme|] @type direct;
#L0a2dea.   v0:= 0  @length 4;
#L0a2dec.   v1.[|org:apache:http:impl:auth:BasicScheme.complete|]  := v0 @boolean;
#L0a2df0.   return @void ;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:auth:BasicScheme.authenticate|] ([|org:apache:http:auth:Credentials|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|boolean|] v7) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Ljava/lang/String;Z)Lorg/apache/http/Header;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a2e04.   if v5 != 0 then goto L0a2e18;
#L0a2e08.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a2e0c.   v4:= "Credentials may not be null" @type (object, string);
#L0a2e10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2e16.   throw v3;
#L0a2e18.   if v6 != 0 then goto L0a2e2c;
#L0a2e1c.   v3:= new [|java:lang:IllegalArgumentException|];
#L0a2e20.   v4:= "charset may not be null" @type (object, string);
#L0a2e24.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2e2a.   throw v3;
#L0a2e2c.   v2:= new [|java:lang:StringBuilder|];
#L0a2e30.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a2e36.   call temp:=  [|org:apache:http:auth:Credentials.getUserPrincipal|](v5) @signature [|Lorg/apache/http/auth/Credentials;.getUserPrincipal:()Ljava/security/Principal;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a2e3c.   v3:= temp  @type object;
#L0a2e3e.   call temp:=  [|java:security:Principal.getName|](v3) @signature [|Ljava/security/Principal;.getName:()Ljava/lang/String;|] @classDescriptor [|java:security:Principal|] @type interface;
#L0a2e44.   v3:= temp  @type object;
#L0a2e46.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2e4c.   v3:= ":" @type (object, string);
#L0a2e50.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2e56.   call temp:=  [|org:apache:http:auth:Credentials.getPassword|](v5) @signature [|Lorg/apache/http/auth/Credentials;.getPassword:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a2e5c.   v3:= temp  @type object;
#L0a2e5e.   if v3 != 0 then goto L0a2ec0;
#L0a2e62.   v3:= "null" @type (object, string);
#L0a2e66.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2e6c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a2e72.   v3:= temp  @type object;
#L0a2e74.   call temp:=  [|org:apache:http:util:EncodingUtils.getBytes|](v3, v6) @signature [|Lorg/apache/http/util/EncodingUtils;.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a2e7a.   v3:= temp  @type object;
#L0a2e7c.   call temp:=  [|org:apache:commons:codec:binary:Base64.encodeBase64|](v3) @signature [|Lorg/apache/commons/codec/binary/Base64;.encodeBase64:([B)[B|] @classDescriptor [|org:apache:commons:codec:binary:Base64|] @type static;
#L0a2e82.   v0:= temp  @type object;
#L0a2e84.   v1:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a2e88.   v3:= 32  @length 16;
#L0a2e8c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a2e92.   if v7 == 0 then goto L0a2eca;
#L0a2e96.   v3:= "Proxy-Authorization" @type (object, string);
#L0a2e9a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2ea0.   v3:= ": Basic " @type (object, string);
#L0a2ea4.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2eaa.   v3:= 0  @length 4;
#L0a2eac.   v4:= v0.length;
#L0a2eae.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v0, v3, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:([BII)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2eb4.   v3:= new [|org:apache:http:message:BufferedHeader|];
#L0a2eb8.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v3, v1) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0a2ebe.   return v3  @type object;
#L0a2ec0.   call temp:=  [|org:apache:http:auth:Credentials.getPassword|](v5) @signature [|Lorg/apache/http/auth/Credentials;.getPassword:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a2ec6.   v3:= temp  @type object;
#L0a2ec8.   goto L0a2e66;
#L0a2eca.   v3:= "Authorization" @type (object, string);
#L0a2ece.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a2ed4.   goto L0a2ea0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:auth:BasicScheme.authenticate|] ([|org:apache:http:impl:auth:BasicScheme|] v3 @type (this), [|org:apache:http:auth:Credentials|] v4 @type (object), [|org:apache:http:HttpRequest|] v5 @type (object)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a2ee8.   if v4 != 0 then goto L0a2efc;
#L0a2eec.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a2ef0.   v2:= "Credentials may not be null" @type (object, string);
#L0a2ef4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2efa.   throw v1;
#L0a2efc.   if v5 != 0 then goto L0a2f10;
#L0a2f00.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a2f04.   v2:= "HTTP request may not be null" @type (object, string);
#L0a2f08.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a2f0e.   throw v1;
#L0a2f10.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v5) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a2f16.   v1:= temp  @type object;
#L0a2f18.   call temp:=  [|org:apache:http:auth:params:AuthParams.getCredentialCharset|](v1) @signature [|Lorg/apache/http/auth/params/AuthParams;.getCredentialCharset:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:params:AuthParams|] @type static;
#L0a2f1e.   v0:= temp  @type object;
#L0a2f20.   call temp:=  [|org:apache:http:impl:auth:BasicScheme.isProxy|](v3) @signature [|Lorg/apache/http/impl/auth/BasicScheme;.isProxy:()Z|] @classDescriptor [|org:apache:http:impl:auth:BasicScheme|] @type virtual;
#L0a2f26.   v1:= temp;
#L0a2f28.   call temp:=  [|org:apache:http:impl:auth:BasicScheme.authenticate|](v4, v0, v1) @signature [|Lorg/apache/http/impl/auth/BasicScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Ljava/lang/String;Z)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:impl:auth:BasicScheme|] @type static;
#L0a2f2e.   v1:= temp  @type object;
#L0a2f30.   return v1  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:BasicScheme.getSchemeName|] ([|org:apache:http:impl:auth:BasicScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.getSchemeName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2f44.   v0:= "basic" @type (object, string);
#L0a2f48.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:BasicScheme.isComplete|] ([|org:apache:http:impl:auth:BasicScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.isComplete:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2f5c.   v0:= v1.[|org:apache:http:impl:auth:BasicScheme.complete|]   @boolean;
#L0a2f60.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:BasicScheme.isConnectionBased|] ([|org:apache:http:impl:auth:BasicScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.isConnectionBased:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2f74.   v0:= 0  @length 4;
#L0a2f76.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:auth:BasicScheme.processChallenge|] ([|org:apache:http:impl:auth:BasicScheme|] v1 @type (this), [|org:apache:http:Header|] v2 @type (object)) @owner [|org:apache:http:impl:auth:BasicScheme|] @signature [|Lorg/apache/http/impl/auth/BasicScheme;.processChallenge:(Lorg/apache/http/Header;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2f88.   call temp:=  [|org:apache:http:impl:auth:RFC2617Scheme.processChallenge|](v1, v2) @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.processChallenge:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:impl:auth:RFC2617Scheme|] @type super;
#L0a2f8e.   v0:= 1  @length 4;
#L0a2f90.   v1.[|org:apache:http:impl:auth:BasicScheme.complete|]  := v0 @boolean;
#L0a2f94.   return @void ;

   }
record [|org:apache:http:impl:auth:BasicSchemeFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:auth:AuthSchemeFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:auth:BasicSchemeFactory.<init>|] ([|org:apache:http:impl:auth:BasicSchemeFactory|] v0 @type (this)) @owner [|org:apache:http:impl:auth:BasicSchemeFactory|] @signature [|Lorg/apache/http/impl/auth/BasicSchemeFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a2fa8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a2fae.   return @void ;

   }
    procedure [|org:apache:http:auth:AuthScheme|] [|org:apache:http:impl:auth:BasicSchemeFactory.newInstance|] ([|org:apache:http:impl:auth:BasicSchemeFactory|] v1 @type (this), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:impl:auth:BasicSchemeFactory|] @signature [|Lorg/apache/http/impl/auth/BasicSchemeFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a2fc0.   v0:= new [|org:apache:http:impl:auth:BasicScheme|];
#L0a2fc4.   call temp:=  [|org:apache:http:impl:auth:BasicScheme.<init>|](v0) @signature [|Lorg/apache/http/impl/auth/BasicScheme;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:BasicScheme|] @type direct;
#L0a2fca.   return v0  @type object;

   }
record [|org:apache:http:impl:auth:DigestScheme|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:auth:RFC2617Scheme|] {
      [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.cnonce|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:impl:auth:DigestScheme.complete|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:http:impl:auth:DigestScheme.qopVariant|]    @AccessFlag PRIVATE;
   }
      global [|char|][] @@[|org:apache:http:impl:auth:DigestScheme.HEXADECIMAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:auth:DigestScheme.NC|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:impl:auth:DigestScheme.QOP_AUTH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:impl:auth:DigestScheme.QOP_AUTH_INT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|org:apache:http:impl:auth:DigestScheme.QOP_MISSING|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:auth:DigestScheme.<clinit>|] () @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a2fdc.   v0:= 16  @length 16;
#L0a2fe0.   v0:= new [|char|][v0];
#L0a2fe4.   goto L0a2ff0;
#L0a2fea.   @@[|org:apache:http:impl:auth:DigestScheme.HEXADECIMAL|] := v0  @type object;
#L0a2fee.   return @void ;
#L0a2ff0.   v0:=`[48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 ];
               goto L0a2fea;

   }
    procedure [|void|] [|org:apache:http:impl:auth:DigestScheme.<init>|] ([|org:apache:http:impl:auth:DigestScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a3028.   v0:= 0  @length 4;
#L0a302a.   call temp:=  [|org:apache:http:impl:auth:RFC2617Scheme.<init>|](v1) @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:RFC2617Scheme|] @type direct;
#L0a3030.   v1.[|org:apache:http:impl:auth:DigestScheme.qopVariant|]  := v0;
#L0a3034.   v1.[|org:apache:http:impl:auth:DigestScheme.complete|]  := v0 @boolean;
#L0a3038.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.createCnonce|] () @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createCnonce:()Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a304c.   v2:= "MD5" @type (object, string);
#L0a3050.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.createMessageDigest|](v2) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createMessageDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a3056.   v1:= temp  @type object;
#L0a3058.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0a305e.   v2:= temp  @type wide;
#L0a3060.   call temp:=  [|java:lang:Long.toString|](v2, v3) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0a3066.   v0:= temp  @type object;
#L0a3068.   call temp:=  [|org:apache:http:util:EncodingUtils.getAsciiBytes|](v0) @signature [|Lorg/apache/http/util/EncodingUtils;.getAsciiBytes:(Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a306e.   v2:= temp  @type object;
#L0a3070.   call temp:=  [|java:security:MessageDigest.digest|](v1, v2) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L0a3076.   v2:= temp  @type object;
#L0a3078.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.encode|](v2) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a307e.   v0:= temp  @type object;
#L0a3080.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.createDigest|] ([|org:apache:http:impl:auth:DigestScheme|] v25 @type (this), [|org:apache:http:auth:Credentials|] v26 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createDigest:(Lorg/apache/http/auth/Credentials;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
      
#L0a3094.   v22:= "uri" @type (object, string);
#L0a3098.   v0:= v25  @type object;
#L0a309c.   v1:= v22  @type object;
#L0a30a0.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a30a6.   v21:= temp  @type object;
#L0a30a8.   v22:= "realm" @type (object, string);
#L0a30ac.   v0:= v25  @type object;
#L0a30b0.   v1:= v22  @type object;
#L0a30b4.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a30ba.   v14:= temp  @type object;
#L0a30bc.   v22:= "nonce" @type (object, string);
#L0a30c0.   v0:= v25  @type object;
#L0a30c4.   v1:= v22  @type object;
#L0a30c8.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a30ce.   v11:= temp  @type object;
#L0a30d0.   v22:= "methodname" @type (object, string);
#L0a30d4.   v0:= v25  @type object;
#L0a30d8.   v1:= v22  @type object;
#L0a30dc.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a30e2.   v10:= temp  @type object;
#L0a30e4.   v22:= "algorithm" @type (object, string);
#L0a30e8.   v0:= v25  @type object;
#L0a30ec.   v1:= v22  @type object;
#L0a30f0.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a30f6.   v4:= temp  @type object;
#L0a30f8.   if v21 != 0 then goto L0a310c;
#L0a30fc.   v22:= new [|java:lang:IllegalStateException|];
#L0a3100.   v23:= "URI may not be null" @type (object, string);
#L0a3104.   call temp:=  [|java:lang:IllegalStateException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a310a.   throw v22;
#L0a310c.   if v14 != 0 then goto L0a3120;
#L0a3110.   v22:= new [|java:lang:IllegalStateException|];
#L0a3114.   v23:= "Realm may not be null" @type (object, string);
#L0a3118.   call temp:=  [|java:lang:IllegalStateException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a311e.   throw v22;
#L0a3120.   if v11 != 0 then goto L0a3134;
#L0a3124.   v22:= new [|java:lang:IllegalStateException|];
#L0a3128.   v23:= "Nonce may not be null" @type (object, string);
#L0a312c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a3132.   throw v22;
#L0a3134.   if v4 != 0 then goto L0a313c;
#L0a3138.   v4:= "MD5" @type (object, string);
#L0a313c.   v22:= "charset" @type (object, string);
#L0a3140.   v0:= v25  @type object;
#L0a3144.   v1:= v22  @type object;
#L0a3148.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v0, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a314e.   v5:= temp  @type object;
#L0a3150.   if v5 != 0 then goto L0a3158;
#L0a3154.   v5:= "ISO-8859-1" @type (object, string);
#L0a3158.   v0:= v25  @type object;
#L0a315c.   v0:= v0.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a3160.   v22:= v0;
#L0a3164.   v23:= 1  @length 16;
#L0a3168.   v0:= v22;
#L0a316c.   v1:= v23;
#L0a3170.   if v0 != v1 then goto L0a3184;
#L0a3174.   v22:= new [|org:apache:http:auth:AuthenticationException|];
#L0a3178.   v23:= "Unsupported qop in HTTP Digest authentication" @type (object, string);
#L0a317c.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v22, v23) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a3182.   throw v22;
#L0a3184.   v22:= "MD5" @type (object, string);
#L0a3188.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.createMessageDigest|](v22) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createMessageDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a318e.   v7:= temp  @type object;
#L0a3190.   call temp:=  [|org:apache:http:auth:Credentials.getUserPrincipal|](v26) @signature [|Lorg/apache/http/auth/Credentials;.getUserPrincipal:()Ljava/security/Principal;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a3196.   v22:= temp  @type object;
#L0a3198.   call temp:=  [|java:security:Principal.getName|](v22) @signature [|Ljava/security/Principal;.getName:()Ljava/lang/String;|] @classDescriptor [|java:security:Principal|] @type interface;
#L0a319e.   v20:= temp  @type object;
#L0a31a0.   call temp:=  [|org:apache:http:auth:Credentials.getPassword|](v26) @signature [|Lorg/apache/http/auth/Credentials;.getPassword:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a31a6.   v12:= temp  @type object;
#L0a31a8.   v17:= new [|java:lang:StringBuilder|];
#L0a31ac.   call temp:=  [|java:lang:String.length|](v20) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a31b2.   v22:= temp;
#L0a31b4.   call temp:=  [|java:lang:String.length|](v14) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a31ba.   v23:= temp;
#L0a31bc.   v22:= v22 + v23  @type int;
#L0a31c0.   call temp:=  [|java:lang:String.length|](v12) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a31c6.   v23:= temp;
#L0a31c8.   v22:= v22 + v23  @type int;
#L0a31cc.   v22:= v22 + 2;
#L0a31d0.   v0:= v17  @type object;
#L0a31d4.   v1:= v22;
#L0a31d8.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a31de.   v0:= v17  @type object;
#L0a31e2.   v1:= v20  @type object;
#L0a31e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a31ec.   v22:= 58  @length 16;
#L0a31f0.   v0:= v17  @type object;
#L0a31f4.   v1:= v22;
#L0a31f8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a31fe.   v0:= v17  @type object;
#L0a3202.   call temp:=  [|java:lang:StringBuilder.append|](v0, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3208.   v22:= 58  @length 16;
#L0a320c.   v0:= v17  @type object;
#L0a3210.   v1:= v22;
#L0a3214.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a321a.   v0:= v17  @type object;
#L0a321e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3224.   call temp:=  [|java:lang:StringBuilder.toString|](v17) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a322a.   v2:= temp  @type object;
#L0a322c.   v22:= "MD5-sess" @type (object, string);
#L0a3230.   v0:= v22  @type object;
#L0a3234.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v4, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a323a.   v22:= temp;
#L0a323c.   if v22 == 0 then goto L0a33e8;
#L0a3240.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getCnonce|](v25) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getCnonce:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a3246.   v6:= temp  @type object;
#L0a3248.   call temp:=  [|org:apache:http:util:EncodingUtils.getBytes|](v2, v5) @signature [|Lorg/apache/http/util/EncodingUtils;.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a324e.   v22:= temp  @type object;
#L0a3250.   v0:= v22  @type object;
#L0a3254.   call temp:=  [|java:security:MessageDigest.digest|](v7, v0) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L0a325a.   v22:= temp  @type object;
#L0a325c.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.encode|](v22) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a3262.   v18:= temp  @type object;
#L0a3264.   v19:= new [|java:lang:StringBuilder|];
#L0a3268.   call temp:=  [|java:lang:String.length|](v18) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a326e.   v22:= temp;
#L0a3270.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3276.   v23:= temp;
#L0a3278.   v22:= v22 + v23  @type int;
#L0a327c.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3282.   v23:= temp;
#L0a3284.   v22:= v22 + v23  @type int;
#L0a3288.   v22:= v22 + 2;
#L0a328c.   v0:= v19  @type object;
#L0a3290.   v1:= v22;
#L0a3294.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a329a.   v0:= v19  @type object;
#L0a329e.   v1:= v18  @type object;
#L0a32a2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32a8.   v22:= 58  @length 16;
#L0a32ac.   v0:= v19  @type object;
#L0a32b0.   v1:= v22;
#L0a32b4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32ba.   v0:= v19  @type object;
#L0a32be.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32c4.   v22:= 58  @length 16;
#L0a32c8.   v0:= v19  @type object;
#L0a32cc.   v1:= v22;
#L0a32d0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32d6.   v0:= v19  @type object;
#L0a32da.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32e0.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a32e6.   v2:= temp  @type object;
#L0a32e8.   call temp:=  [|org:apache:http:util:EncodingUtils.getBytes|](v2, v5) @signature [|Lorg/apache/http/util/EncodingUtils;.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a32ee.   v22:= temp  @type object;
#L0a32f0.   v0:= v22  @type object;
#L0a32f4.   call temp:=  [|java:security:MessageDigest.digest|](v7, v0) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L0a32fa.   v22:= temp  @type object;
#L0a32fc.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.encode|](v22) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a3302.   v8:= temp  @type object;
#L0a3304.   v3:= 0  @length 4;
#L0a3306.   v0:= v25  @type object;
#L0a330a.   v0:= v0.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a330e.   v22:= v0;
#L0a3312.   v23:= 1  @length 16;
#L0a3316.   v0:= v22;
#L0a331a.   v1:= v23;
#L0a331e.   if v0 != v1 then goto L0a343e;
#L0a3322.   call temp:=  [|org:apache:http:util:EncodingUtils.getAsciiBytes|](v3) @signature [|Lorg/apache/http/util/EncodingUtils;.getAsciiBytes:(Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a3328.   v22:= temp  @type object;
#L0a332a.   v0:= v22  @type object;
#L0a332e.   call temp:=  [|java:security:MessageDigest.digest|](v7, v0) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L0a3334.   v22:= temp  @type object;
#L0a3336.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.encode|](v22) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a333c.   v9:= temp  @type object;
#L0a333e.   v0:= v25  @type object;
#L0a3342.   v0:= v0.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a3346.   v22:= v0;
#L0a334a.   if v22 != 0 then goto L0a347c;
#L0a334e.   v18:= new [|java:lang:StringBuilder|];
#L0a3352.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3358.   v22:= temp;
#L0a335a.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3360.   v23:= temp;
#L0a3362.   v22:= v22 + v23  @type int;
#L0a3366.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a336c.   v23:= temp;
#L0a336e.   v22:= v22 + v23  @type int;
#L0a3372.   v0:= v18  @type object;
#L0a3376.   v1:= v22;
#L0a337a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a3380.   v0:= v18  @type object;
#L0a3384.   call temp:=  [|java:lang:StringBuilder.append|](v0, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a338a.   v22:= 58  @length 16;
#L0a338e.   v0:= v18  @type object;
#L0a3392.   v1:= v22;
#L0a3396.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a339c.   v0:= v18  @type object;
#L0a33a0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a33a6.   v22:= 58  @length 16;
#L0a33aa.   v0:= v18  @type object;
#L0a33ae.   v1:= v22;
#L0a33b2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a33b8.   v0:= v18  @type object;
#L0a33bc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a33c2.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a33c8.   v16:= temp  @type object;
#L0a33ca.   call temp:=  [|org:apache:http:util:EncodingUtils.getAsciiBytes|](v16) @signature [|Lorg/apache/http/util/EncodingUtils;.getAsciiBytes:(Ljava/lang/String;)[B|] @classDescriptor [|org:apache:http:util:EncodingUtils|] @type static;
#L0a33d0.   v22:= temp  @type object;
#L0a33d2.   v0:= v22  @type object;
#L0a33d6.   call temp:=  [|java:security:MessageDigest.digest|](v7, v0) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L0a33dc.   v22:= temp  @type object;
#L0a33de.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.encode|](v22) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a33e4.   v15:= temp  @type object;
#L0a33e6.   return v15  @type object;
#L0a33e8.   v22:= "MD5" @type (object, string);
#L0a33ec.   v0:= v22  @type object;
#L0a33f0.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v4, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a33f6.   v22:= temp;
#L0a33f8.   if v22 != 0 then goto L0a32e8;
#L0a33fc.   v22:= new [|org:apache:http:auth:AuthenticationException|];
#L0a3400.   v23:= new [|java:lang:StringBuilder|];
#L0a3404.   call temp:=  [|java:lang:StringBuilder.<init>|](v23) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a340a.   v24:= "Unhandled algorithm " @type (object, string);
#L0a340e.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3414.   v23:= temp  @type object;
#L0a3416.   v0:= v23  @type object;
#L0a341a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3420.   v23:= temp  @type object;
#L0a3422.   v24:= " requested" @type (object, string);
#L0a3426.   call temp:=  [|java:lang:StringBuilder.append|](v23, v24) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a342c.   v23:= temp  @type object;
#L0a342e.   call temp:=  [|java:lang:StringBuilder.toString|](v23) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3434.   v23:= temp  @type object;
#L0a3436.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v22, v23) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a343c.   throw v22;
#L0a343e.   v22:= new [|java:lang:StringBuilder|];
#L0a3442.   call temp:=  [|java:lang:StringBuilder.<init>|](v22) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a3448.   v0:= v22  @type object;
#L0a344c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3452.   v22:= temp  @type object;
#L0a3454.   v23:= 58  @length 16;
#L0a3458.   call temp:=  [|java:lang:StringBuilder.append|](v22, v23) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a345e.   v22:= temp  @type object;
#L0a3460.   v0:= v22  @type object;
#L0a3464.   v1:= v21  @type object;
#L0a3468.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a346e.   v22:= temp  @type object;
#L0a3470.   call temp:=  [|java:lang:StringBuilder.toString|](v22) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3476.   v3:= temp  @type object;
#L0a3478.   goto L0a3322;
#L0a347c.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getQopVariantString|](v25) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getQopVariantString:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a3482.   v13:= temp  @type object;
#L0a3484.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getCnonce|](v25) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getCnonce:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a348a.   v6:= temp  @type object;
#L0a348c.   v18:= new [|java:lang:StringBuilder|];
#L0a3490.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3496.   v22:= temp;
#L0a3498.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a349e.   v23:= temp;
#L0a34a0.   v22:= v22 + v23  @type int;
#L0a34a4.   v23:= "00000001" @type (object, string);
#L0a34a8.   call temp:=  [|java:lang:String.length|](v23) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a34ae.   v23:= temp;
#L0a34b0.   v22:= v22 + v23  @type int;
#L0a34b4.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a34ba.   v23:= temp;
#L0a34bc.   v22:= v22 + v23  @type int;
#L0a34c0.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a34c6.   v23:= temp;
#L0a34c8.   v22:= v22 + v23  @type int;
#L0a34cc.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a34d2.   v23:= temp;
#L0a34d4.   v22:= v22 + v23  @type int;
#L0a34d8.   v22:= v22 + 5;
#L0a34dc.   v0:= v18  @type object;
#L0a34e0.   v1:= v22;
#L0a34e4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a34ea.   v0:= v18  @type object;
#L0a34ee.   call temp:=  [|java:lang:StringBuilder.append|](v0, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a34f4.   v22:= 58  @length 16;
#L0a34f8.   v0:= v18  @type object;
#L0a34fc.   v1:= v22;
#L0a3500.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3506.   v0:= v18  @type object;
#L0a350a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3510.   v22:= 58  @length 16;
#L0a3514.   v0:= v18  @type object;
#L0a3518.   v1:= v22;
#L0a351c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3522.   v22:= "00000001" @type (object, string);
#L0a3526.   v0:= v18  @type object;
#L0a352a.   v1:= v22  @type object;
#L0a352e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3534.   v22:= 58  @length 16;
#L0a3538.   v0:= v18  @type object;
#L0a353c.   v1:= v22;
#L0a3540.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3546.   v0:= v18  @type object;
#L0a354a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3550.   v22:= 58  @length 16;
#L0a3554.   v0:= v18  @type object;
#L0a3558.   v1:= v22;
#L0a355c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3562.   v0:= v18  @type object;
#L0a3566.   call temp:=  [|java:lang:StringBuilder.append|](v0, v13) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a356c.   v22:= 58  @length 16;
#L0a3570.   v0:= v18  @type object;
#L0a3574.   v1:= v22;
#L0a3578.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a357e.   v0:= v18  @type object;
#L0a3582.   call temp:=  [|java:lang:StringBuilder.append|](v0, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3588.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a358e.   v16:= temp  @type object;
#L0a3590.   goto L0a33ca;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:auth:DigestScheme.createDigestHeader|] ([|org:apache:http:impl:auth:DigestScheme|] v15 @type (this), [|org:apache:http:auth:Credentials|] v16 @type (object), [|java:lang:String|] v17 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createDigestHeader:(Lorg/apache/http/auth/Credentials;Ljava/lang/String;)Lorg/apache/http/Header;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L0a35a4.   v1:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a35a8.   v12:= 128  @length 16;
#L0a35ac.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v1, v12) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a35b2.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.isProxy|](v15) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.isProxy:()Z|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a35b8.   v12:= temp;
#L0a35ba.   if v12 == 0 then goto L0a378c;
#L0a35be.   v12:= "Proxy-Authorization" @type (object, string);
#L0a35c2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v12) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a35c8.   v12:= ": Digest " @type (object, string);
#L0a35cc.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v12) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a35d2.   v12:= "uri" @type (object, string);
#L0a35d6.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v15, v12) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a35dc.   v11:= temp  @type object;
#L0a35de.   v12:= "realm" @type (object, string);
#L0a35e2.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v15, v12) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a35e8.   v8:= temp  @type object;
#L0a35ea.   v12:= "nonce" @type (object, string);
#L0a35ee.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v15, v12) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a35f4.   v4:= temp  @type object;
#L0a35f6.   v12:= "opaque" @type (object, string);
#L0a35fa.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v15, v12) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3600.   v5:= temp  @type object;
#L0a3602.   v9:= v17  @type object;
#L0a3606.   v12:= "algorithm" @type (object, string);
#L0a360a.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v15, v12) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3610.   v0:= temp  @type object;
#L0a3612.   call temp:=  [|org:apache:http:auth:Credentials.getUserPrincipal|](v16) @signature [|Lorg/apache/http/auth/Credentials;.getUserPrincipal:()Ljava/security/Principal;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a3618.   v12:= temp  @type object;
#L0a361a.   call temp:=  [|java:security:Principal.getName|](v12) @signature [|Ljava/security/Principal;.getName:()Ljava/lang/String;|] @classDescriptor [|java:security:Principal|] @type interface;
#L0a3620.   v10:= temp  @type object;
#L0a3622.   v7:= new [|java:util:ArrayList|];
#L0a3626.   v12:= 20  @length 16;
#L0a362a.   call temp:=  [|java:util:ArrayList.<init>|](v7, v12) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0a3630.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a3634.   v13:= "username" @type (object, string);
#L0a3638.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v10) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a363e.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a3644.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a3648.   v13:= "realm" @type (object, string);
#L0a364c.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v8) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a3652.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a3658.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a365c.   v13:= "nonce" @type (object, string);
#L0a3660.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v4) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a3666.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a366c.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a3670.   v13:= "uri" @type (object, string);
#L0a3674.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v11) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a367a.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a3680.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a3684.   v13:= "response" @type (object, string);
#L0a3688.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v9) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a368e.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a3694.   v12:= v15.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a3698.   if v12 == 0 then goto L0a36ec;
#L0a369c.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a36a0.   v13:= "qop" @type (object, string);
#L0a36a4.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getQopVariantString|](v15) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getQopVariantString:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a36aa.   v14:= temp  @type object;
#L0a36ac.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v14) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a36b2.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a36b8.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a36bc.   v13:= "nc" @type (object, string);
#L0a36c0.   v14:= "00000001" @type (object, string);
#L0a36c4.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v14) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a36ca.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a36d0.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a36d4.   v13:= "cnonce" @type (object, string);
#L0a36d8.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getCnonce|](v15) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getCnonce:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a36de.   v14:= temp  @type object;
#L0a36e0.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v14) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a36e6.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a36ec.   if v0 == 0 then goto L0a3704;
#L0a36f0.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a36f4.   v13:= "algorithm" @type (object, string);
#L0a36f8.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v0) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a36fe.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a3704.   if v5 == 0 then goto L0a371c;
#L0a3708.   v12:= new [|org:apache:http:message:BasicNameValuePair|];
#L0a370c.   v13:= "opaque" @type (object, string);
#L0a3710.   call temp:=  [|org:apache:http:message:BasicNameValuePair.<init>|](v12, v13, v5) @signature [|Lorg/apache/http/message/BasicNameValuePair;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type direct;
#L0a3716.   call temp:=  [|java:util:List.add|](v7, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0a371c.   v2:= 0  @length 4;
#L0a371e.   call temp:=  [|java:util:List.size|](v7) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0a3724.   v12:= temp;
#L0a3726.   if v2 >= v12 then goto L0a37a2;
#L0a372a.   call temp:=  [|java:util:List.get|](v7, v2) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0a3730.   v6:= temp  @type object;
#L0a3732.   v6:= ([|org:apache:http:message:BasicNameValuePair|])v6;
#L0a3736.   if v2 <= 0 then goto L0a3744;
#L0a373a.   v12:= ", " @type (object, string);
#L0a373e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v12) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3744.   v12:= "nc" @type (object, string);
#L0a3748.   call temp:=  [|org:apache:http:message:BasicNameValuePair.getName|](v6) @signature [|Lorg/apache/http/message/BasicNameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type virtual;
#L0a374e.   v13:= temp  @type object;
#L0a3750.   call temp:=  [|java:lang:String.equals|](v12, v13) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3756.   v12:= temp;
#L0a3758.   if v12 != 0 then goto L0a3774;
#L0a375c.   v12:= "qop" @type (object, string);
#L0a3760.   call temp:=  [|org:apache:http:message:BasicNameValuePair.getName|](v6) @signature [|Lorg/apache/http/message/BasicNameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:message:BasicNameValuePair|] @type virtual;
#L0a3766.   v13:= temp  @type object;
#L0a3768.   call temp:=  [|java:lang:String.equals|](v12, v13) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a376e.   v12:= temp;
#L0a3770.   if v12 == 0 then goto L0a379a;
#L0a3774.   v3:= 1  @length 4;
#L0a3776.   v13:= @@[|org:apache:http:message:BasicHeaderValueFormatter.DEFAULT|]   @type object;
#L0a377a.   if v3 != 0 then goto L0a379e;
#L0a377e.   v12:= 1  @length 4;
#L0a3780.   call temp:=  [|org:apache:http:message:BasicHeaderValueFormatter.formatNameValuePair|](v13, v1, v6, v12) @signature [|Lorg/apache/http/message/BasicHeaderValueFormatter;.formatNameValuePair:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/NameValuePair;Z)Lorg/apache/http/util/CharArrayBuffer;|] @classDescriptor [|org:apache:http:message:BasicHeaderValueFormatter|] @type virtual;
#L0a3786.   v2:= v2 + 1;
#L0a378a.   goto L0a371e;
#L0a378c.   v12:= "Authorization" @type (object, string);
#L0a3790.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v1, v12) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3796.   goto L0a35c8;
#L0a379a.   v3:= 0  @length 4;
#L0a379c.   goto L0a3776;
#L0a379e.   v12:= 0  @length 4;
#L0a37a0.   goto L0a3780;
#L0a37a2.   v12:= new [|org:apache:http:message:BufferedHeader|];
#L0a37a6.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v12, v1) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0a37ac.   return v12  @type object;

   }
    procedure [|java:security:MessageDigest|] [|org:apache:http:impl:auth:DigestScheme.createMessageDigest|] ([|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createMessageDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a37c0.   call temp:=  [|java:security:MessageDigest.getInstance|](v4) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L0a37c6.   v1:= temp  @type object;
#L0a37c8.   return v1  @type object;
#L0a37ca.   v0:= Exception  @type object;
#L0a37cc.   v1:= new [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|];
#L0a37d0.   v2:= new [|java:lang:StringBuilder|];
#L0a37d4.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a37da.   v3:= "Unsupported algorithm in HTTP Digest authentication: " @type (object, string);
#L0a37de.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a37e4.   v2:= temp  @type object;
#L0a37e6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a37ec.   v2:= temp  @type object;
#L0a37ee.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a37f4.   v2:= temp  @type object;
#L0a37f6.   call temp:=  [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException.<init>|](v1, v2) @signature [|Lorg/apache/http/impl/auth/UnsupportedDigestAlgorithmException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] @type direct;
#L0a37fc.   throw v1;
  catch  [|java:lang:Exception|] @[L0a37c0..L0a37c6] goto L0a37ca;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.encode|] ([|byte|][] v7) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.encode:([B)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a3820.   v6:= 16  @length 16;
#L0a3824.   v4:= v7.length;
#L0a3826.   if v4 == v6 then goto L0a382e;
#L0a382a.   v4:= 0  @length 4;
#L0a382c.   return v4  @type object;
#L0a382e.   v4:= 32  @length 16;
#L0a3832.   v0:= new [|char|][v4];
#L0a3836.   v2:= 0  @length 4;
#L0a3838.   if v2 >= v6 then goto L0a387a;
#L0a383c.   v4:= v7[v2]  @byte;
#L0a3840.   v3:= v4 ^& 15;
#L0a3844.   v4:= v7[v2]  @byte;
#L0a3848.   v4:= v4 ^& 240;
#L0a384c.   v1:= v4 ^> 4;
#L0a3850.   v4:= v2 * 2;
#L0a3854.   v5:= @@[|org:apache:http:impl:auth:DigestScheme.HEXADECIMAL|]   @type object;
#L0a3858.   v5:= v5[v1]  @char;
#L0a385c.   v0[v4]:= v5  @char;
#L0a3860.   v4:= v2 * 2;
#L0a3864.   v4:= v4 + 1;
#L0a3868.   v5:= @@[|org:apache:http:impl:auth:DigestScheme.HEXADECIMAL|]   @type object;
#L0a386c.   v5:= v5[v3]  @char;
#L0a3870.   v0[v4]:= v5  @char;
#L0a3874.   v2:= v2 + 1;
#L0a3878.   goto L0a3838;
#L0a387a.   v4:= new [|java:lang:String|];
#L0a387e.   call temp:=  [|java:lang:String.<init>|](v4, v0) @signature [|Ljava/lang/String;.<init>:([C)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0a3884.   goto L0a382c;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.getCnonce|] ([|org:apache:http:impl:auth:DigestScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getCnonce:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0a3898.   v0:= v1.[|org:apache:http:impl:auth:DigestScheme.cnonce|]   @type object;
#L0a389c.   if v0 != 0 then goto L0a38ac;
#L0a38a0.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.createCnonce|]() @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createCnonce:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type static;
#L0a38a6.   v0:= temp  @type object;
#L0a38a8.   v1.[|org:apache:http:impl:auth:DigestScheme.cnonce|]  := v0 @type object;
#L0a38ac.   v0:= v1.[|org:apache:http:impl:auth:DigestScheme.cnonce|]   @type object;
#L0a38b0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.getQopVariantString|] ([|org:apache:http:impl:auth:DigestScheme|] v3 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getQopVariantString:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a38c4.   v1:= v3.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a38c8.   v2:= 1  @length 4;
#L0a38ca.   if v1 != v2 then goto L0a38d4;
#L0a38ce.   v0:= "auth-int" @type (object, string);
#L0a38d2.   return v0  @type object;
#L0a38d4.   v0:= "auth" @type (object, string);
#L0a38d8.   goto L0a38d2;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:auth:DigestScheme.authenticate|] ([|org:apache:http:impl:auth:DigestScheme|] v5 @type (this), [|org:apache:http:auth:Credentials|] v6 @type (object), [|org:apache:http:HttpRequest|] v7 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a38ec.   if v6 != 0 then goto L0a3900;
#L0a38f0.   v2:= new [|java:lang:IllegalArgumentException|];
#L0a38f4.   v3:= "Credentials may not be null" @type (object, string);
#L0a38f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a38fe.   throw v2;
#L0a3900.   if v7 != 0 then goto L0a3914;
#L0a3904.   v2:= new [|java:lang:IllegalArgumentException|];
#L0a3908.   v3:= "HTTP request may not be null" @type (object, string);
#L0a390c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a3912.   throw v2;
#L0a3914.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameters|](v5) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameters:()Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a391a.   v2:= temp  @type object;
#L0a391c.   v3:= "methodname" @type (object, string);
#L0a3920.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v7) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a3926.   v4:= temp  @type object;
#L0a3928.   call temp:=  [|org:apache:http:RequestLine.getMethod|](v4) @signature [|Lorg/apache/http/RequestLine;.getMethod:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a392e.   v4:= temp  @type object;
#L0a3930.   call temp:=  [|java:util:Map.put|](v2, v3, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a3936.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameters|](v5) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameters:()Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a393c.   v2:= temp  @type object;
#L0a393e.   v3:= "uri" @type (object, string);
#L0a3942.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v7) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a3948.   v4:= temp  @type object;
#L0a394a.   call temp:=  [|org:apache:http:RequestLine.getUri|](v4) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a3950.   v4:= temp  @type object;
#L0a3952.   call temp:=  [|java:util:Map.put|](v2, v3, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a3958.   v2:= "charset" @type (object, string);
#L0a395c.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v5, v2) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3962.   v0:= temp  @type object;
#L0a3964.   if v0 != 0 then goto L0a398a;
#L0a3968.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v7) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a396e.   v2:= temp  @type object;
#L0a3970.   call temp:=  [|org:apache:http:auth:params:AuthParams.getCredentialCharset|](v2) @signature [|Lorg/apache/http/auth/params/AuthParams;.getCredentialCharset:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:params:AuthParams|] @type static;
#L0a3976.   v0:= temp  @type object;
#L0a3978.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameters|](v5) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameters:()Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a397e.   v2:= temp  @type object;
#L0a3980.   v3:= "charset" @type (object, string);
#L0a3984.   call temp:=  [|java:util:Map.put|](v2, v3, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a398a.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.createDigest|](v5, v6) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createDigest:(Lorg/apache/http/auth/Credentials;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a3990.   v1:= temp  @type object;
#L0a3992.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.createDigestHeader|](v5, v6, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.createDigestHeader:(Lorg/apache/http/auth/Credentials;Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a3998.   v2:= temp  @type object;
#L0a399a.   return v2  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:DigestScheme.getSchemeName|] ([|org:apache:http:impl:auth:DigestScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getSchemeName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a39ac.   v0:= "digest" @type (object, string);
#L0a39b0.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:DigestScheme.isComplete|] ([|org:apache:http:impl:auth:DigestScheme|] v2 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.isComplete:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a39c4.   v1:= "stale" @type (object, string);
#L0a39c8.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v2, v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a39ce.   v0:= temp  @type object;
#L0a39d0.   v1:= "true" @type (object, string);
#L0a39d4.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v0) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a39da.   v1:= temp;
#L0a39dc.   if v1 == 0 then goto L0a39e4;
#L0a39e0.   v1:= 0  @length 4;
#L0a39e2.   return v1;
#L0a39e4.   v1:= v2.[|org:apache:http:impl:auth:DigestScheme.complete|]   @boolean;
#L0a39e8.   goto L0a39e2;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:DigestScheme.isConnectionBased|] ([|org:apache:http:impl:auth:DigestScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.isConnectionBased:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a39fc.   v0:= 0  @length 4;
#L0a39fe.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:auth:DigestScheme.overrideParamter|] ([|org:apache:http:impl:auth:DigestScheme|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.overrideParamter:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3a10.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameters|](v1) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameters:()Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3a16.   v0:= temp  @type object;
#L0a3a18.   call temp:=  [|java:util:Map.put|](v0, v2, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a3a1e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:DigestScheme.processChallenge|] ([|org:apache:http:impl:auth:DigestScheme|] v6 @type (this), [|org:apache:http:Header|] v7 @type (object)) @owner [|org:apache:http:impl:auth:DigestScheme|] @signature [|Lorg/apache/http/impl/auth/DigestScheme;.processChallenge:(Lorg/apache/http/Header;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a3a30.   v5:= 1  @length 4;
#L0a3a32.   call temp:=  [|org:apache:http:impl:auth:RFC2617Scheme.processChallenge|](v6, v7) @signature [|Lorg/apache/http/impl/auth/RFC2617Scheme;.processChallenge:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:impl:auth:RFC2617Scheme|] @type super;
#L0a3a38.   v4:= "realm" @type (object, string);
#L0a3a3c.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v6, v4) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3a42.   v4:= temp  @type object;
#L0a3a44.   if v4 != 0 then goto L0a3a58;
#L0a3a48.   v4:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a3a4c.   v5:= "missing realm in challange" @type (object, string);
#L0a3a50.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v4, v5) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a3a56.   throw v4;
#L0a3a58.   v4:= "nonce" @type (object, string);
#L0a3a5c.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v6, v4) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3a62.   v4:= temp  @type object;
#L0a3a64.   if v4 != 0 then goto L0a3a78;
#L0a3a68.   v4:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a3a6c.   v5:= "missing nonce in challange" @type (object, string);
#L0a3a70.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v4, v5) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a3a76.   throw v4;
#L0a3a78.   v2:= 0  @length 4;
#L0a3a7a.   v4:= "qop" @type (object, string);
#L0a3a7e.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.getParameter|](v6, v4) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type virtual;
#L0a3a84.   v0:= temp  @type object;
#L0a3a86.   if v0 == 0 then goto L0a3aca;
#L0a3a8a.   v1:= new [|java:util:StringTokenizer|];
#L0a3a8e.   v4:= "," @type (object, string);
#L0a3a92.   call temp:=  [|java:util:StringTokenizer.<init>|](v1, v0, v4) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L0a3a98.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v1) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0a3a9e.   v4:= temp;
#L0a3aa0.   if v4 == 0 then goto L0a3aca;
#L0a3aa4.   call temp:=  [|java:util:StringTokenizer.nextToken|](v1) @signature [|Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0a3aaa.   v4:= temp  @type object;
#L0a3aac.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3ab2.   v3:= temp  @type object;
#L0a3ab4.   v4:= "auth" @type (object, string);
#L0a3ab8.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3abe.   v4:= temp;
#L0a3ac0.   if v4 == 0 then goto L0a3ae6;
#L0a3ac4.   v4:= 2  @length 4;
#L0a3ac6.   v6.[|org:apache:http:impl:auth:DigestScheme.qopVariant|]  := v4;
#L0a3aca.   if v2 == 0 then goto L0a3b00;
#L0a3ace.   v4:= v6.[|org:apache:http:impl:auth:DigestScheme.qopVariant|] ;
#L0a3ad2.   if v4 != 0 then goto L0a3b00;
#L0a3ad6.   v4:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a3ada.   v5:= "None of the qop methods is supported" @type (object, string);
#L0a3ade.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v4, v5) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a3ae4.   throw v4;
#L0a3ae6.   v4:= "auth-int" @type (object, string);
#L0a3aea.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3af0.   v4:= temp;
#L0a3af2.   if v4 == 0 then goto L0a3afc;
#L0a3af6.   v6.[|org:apache:http:impl:auth:DigestScheme.qopVariant|]  := v5;
#L0a3afa.   goto L0a3a98;
#L0a3afc.   v2:= 1  @length 4;
#L0a3afe.   goto L0a3a98;
#L0a3b00.   v4:= 0  @length 4;
#L0a3b02.   v6.[|org:apache:http:impl:auth:DigestScheme.cnonce|]  := v4 @type object;
#L0a3b06.   v6.[|org:apache:http:impl:auth:DigestScheme.complete|]  := v5 @boolean;
#L0a3b0a.   return @void ;

   }
