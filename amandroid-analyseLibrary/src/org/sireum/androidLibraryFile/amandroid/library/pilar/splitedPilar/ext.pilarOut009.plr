record [|org:apache:http:impl:auth:DigestSchemeFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:auth:AuthSchemeFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:auth:DigestSchemeFactory.<init>|] ([|org:apache:http:impl:auth:DigestSchemeFactory|] v0 @type (this)) @owner [|org:apache:http:impl:auth:DigestSchemeFactory|] @signature [|Lorg/apache/http/impl/auth/DigestSchemeFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3b1c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a3b22.   return @void ;

   }
    procedure [|org:apache:http:auth:AuthScheme|] [|org:apache:http:impl:auth:DigestSchemeFactory.newInstance|] ([|org:apache:http:impl:auth:DigestSchemeFactory|] v1 @type (this), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:impl:auth:DigestSchemeFactory|] @signature [|Lorg/apache/http/impl/auth/DigestSchemeFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3b34.   v0:= new [|org:apache:http:impl:auth:DigestScheme|];
#L0a3b38.   call temp:=  [|org:apache:http:impl:auth:DigestScheme.<init>|](v0) @signature [|Lorg/apache/http/impl/auth/DigestScheme;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:DigestScheme|] @type direct;
#L0a3b3e.   return v0  @type object;

   }
record [|org:apache:http:impl:auth:NTLMEngine|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:NTLMEngine.generateType1Msg|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:auth:NTLMEngine|] @signature [|Lorg/apache/http/impl/auth/NTLMEngine;.generateType1Msg:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:NTLMEngine.generateType3Msg|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:auth:NTLMEngine|] @signature [|Lorg/apache/http/impl/auth/NTLMEngine;.generateType3Msg:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:auth:NTLMEngineException|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:auth:AuthenticationException|] {
   }
      global [|long|] @@[|org:apache:http:impl:auth:NTLMEngineException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:auth:NTLMEngineException.<init>|] ([|org:apache:http:impl:auth:NTLMEngineException|] v0 @type (this)) @owner [|org:apache:http:impl:auth:NTLMEngineException|] @signature [|Lorg/apache/http/impl/auth/NTLMEngineException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3b50.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v0) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:()V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a3b56.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:NTLMEngineException.<init>|] ([|org:apache:http:impl:auth:NTLMEngineException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:auth:NTLMEngineException|] @signature [|Lorg/apache/http/impl/auth/NTLMEngineException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3b68.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v0, v1) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a3b6e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:NTLMEngineException.<init>|] ([|org:apache:http:impl:auth:NTLMEngineException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|org:apache:http:impl:auth:NTLMEngineException|] @signature [|Lorg/apache/http/impl/auth/NTLMEngineException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3b80.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a3b86.   return @void ;

   }
record [|org:apache:http:impl:auth:NTLMScheme$State|]  @type class @AccessFlag FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|org:apache:http:impl:auth:NTLMScheme$State|][] @@[|org:apache:http:impl:auth:NTLMScheme$State.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.CHALLENGE_RECEIVED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE1_GENERATED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE2_RECEVIED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE3_GENERATED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|org:apache:http:impl:auth:NTLMScheme$State|] @@[|org:apache:http:impl:auth:NTLMScheme$State.UNINITIATED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|org:apache:http:impl:auth:NTLMScheme$State.<clinit>|] () @owner [|org:apache:http:impl:auth:NTLMScheme$State|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a3b98.   v7:= 4  @length 4;
#L0a3b9a.   v6:= 3  @length 4;
#L0a3b9c.   v5:= 2  @length 4;
#L0a3b9e.   v4:= 1  @length 4;
#L0a3ba0.   v3:= 0  @length 4;
#L0a3ba2.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3ba6.   v1:= "UNINITIATED" @type (object, string);
#L0a3baa.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v3) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3bb0.   @@[|org:apache:http:impl:auth:NTLMScheme$State.UNINITIATED|] := v0  @type object;
#L0a3bb4.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3bb8.   v1:= "CHALLENGE_RECEIVED" @type (object, string);
#L0a3bbc.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v4) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3bc2.   @@[|org:apache:http:impl:auth:NTLMScheme$State.CHALLENGE_RECEIVED|] := v0  @type object;
#L0a3bc6.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3bca.   v1:= "MSG_TYPE1_GENERATED" @type (object, string);
#L0a3bce.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v5) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3bd4.   @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE1_GENERATED|] := v0  @type object;
#L0a3bd8.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3bdc.   v1:= "MSG_TYPE2_RECEVIED" @type (object, string);
#L0a3be0.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v6) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3be6.   @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE2_RECEVIED|] := v0  @type object;
#L0a3bea.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3bee.   v1:= "MSG_TYPE3_GENERATED" @type (object, string);
#L0a3bf2.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v7) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3bf8.   @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE3_GENERATED|] := v0  @type object;
#L0a3bfc.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3c00.   v1:= "FAILED" @type (object, string);
#L0a3c04.   v2:= 5  @length 4;
#L0a3c06.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State|] @type direct;
#L0a3c0c.   @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|] := v0  @type object;
#L0a3c10.   v0:= 6  @length 4;
#L0a3c12.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|][v0];
#L0a3c16.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.UNINITIATED|]   @type object;
#L0a3c1a.   v0[v3]:= v1  @type object;
#L0a3c1e.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.CHALLENGE_RECEIVED|]   @type object;
#L0a3c22.   v0[v4]:= v1  @type object;
#L0a3c26.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE1_GENERATED|]   @type object;
#L0a3c2a.   v0[v5]:= v1  @type object;
#L0a3c2e.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE2_RECEVIED|]   @type object;
#L0a3c32.   v0[v6]:= v1  @type object;
#L0a3c36.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE3_GENERATED|]   @type object;
#L0a3c3a.   v0[v7]:= v1  @type object;
#L0a3c3e.   v1:= 5  @length 4;
#L0a3c40.   v2:= @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|]   @type object;
#L0a3c44.   v0[v1]:= v2  @type object;
#L0a3c48.   @@[|org:apache:http:impl:auth:NTLMScheme$State.$VALUES|] := v0  @type object;
#L0a3c4c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:NTLMScheme$State.<init>|] ([|org:apache:http:impl:auth:NTLMScheme$State|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|org:apache:http:impl:auth:NTLMScheme$State|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0a3c60.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0a3c66.   return @void ;

   }
    procedure [|org:apache:http:impl:auth:NTLMScheme$State|] [|org:apache:http:impl:auth:NTLMScheme$State.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:auth:NTLMScheme$State|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.valueOf:(Ljava/lang/String;)Lorg/apache/http/impl/auth/NTLMScheme$State;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a3c78.   v0:= new [|org:apache:http:impl:auth:NTLMScheme$State|];
#L0a3c7c.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0a3c82.   v0:= temp  @type object;
#L0a3c84.   v0:= ([|org:apache:http:impl:auth:NTLMScheme$State|])v0;
#L0a3c88.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:auth:NTLMScheme$State|][] [|org:apache:http:impl:auth:NTLMScheme$State.values|] () @owner [|org:apache:http:impl:auth:NTLMScheme$State|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme$State;.values:()[Lorg/apache/http/impl/auth/NTLMScheme$State;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0a3c9c.   v0:= @@[|org:apache:http:impl:auth:NTLMScheme$State.$VALUES|]   @type object;
#L0a3ca0.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme$State[].clone|](v0) @signature [|[Lorg/apache/http/impl/auth/NTLMScheme$State;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme$State[]|] @type virtual;
#L0a3ca6.   v0:= temp  @type object;
#L0a3ca8.   v0:= ([|org:apache:http:impl:auth:NTLMScheme$State|][])v0;
#L0a3cac.   return v0  @type object;

   }
record [|org:apache:http:impl:auth:NTLMScheme|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:auth:AuthSchemeBase|] {
      [|java:lang:String|] [|org:apache:http:impl:auth:NTLMScheme.challenge|]    @AccessFlag PRIVATE;
      [|org:apache:http:impl:auth:NTLMEngine|] [|org:apache:http:impl:auth:NTLMScheme.engine|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:auth:NTLMScheme$State|] [|org:apache:http:impl:auth:NTLMScheme.state|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:auth:NTLMScheme.<init>|] ([|org:apache:http:impl:auth:NTLMScheme|] v2 @type (this), [|org:apache:http:impl:auth:NTLMEngine|] v3 @type (object)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.<init>:(Lorg/apache/http/impl/auth/NTLMEngine;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a3cc0.   call temp:=  [|org:apache:http:impl:auth:AuthSchemeBase.<init>|](v2) @signature [|Lorg/apache/http/impl/auth/AuthSchemeBase;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:AuthSchemeBase|] @type direct;
#L0a3cc6.   if v3 != 0 then goto L0a3cda;
#L0a3cca.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a3cce.   v1:= "NTLM engine may not be null" @type (object, string);
#L0a3cd2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a3cd8.   throw v0;
#L0a3cda.   v2.[|org:apache:http:impl:auth:NTLMScheme.engine|]  := v3 @type object;
#L0a3cde.   v0:= @@[|org:apache:http:impl:auth:NTLMScheme$State.UNINITIATED|]   @type object;
#L0a3ce2.   v2.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v0 @type object;
#L0a3ce6.   v0:= 0  @length 4;
#L0a3ce8.   v2.[|org:apache:http:impl:auth:NTLMScheme.challenge|]  := v0 @type object;
#L0a3cec.   return @void ;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:auth:NTLMScheme.authenticate|] ([|org:apache:http:impl:auth:NTLMScheme|] v11 @type (this), [|org:apache:http:auth:Credentials|] v12 @type (object), [|org:apache:http:HttpRequest|] v13 @type (object)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0a3d00.   v9:= 0  @length 4;
#L0a3d02.   v0:= v12  @type object;
#L0a3d04.   v0:= ([|org:apache:http:auth:NTCredentials|])v0;
#L0a3d08.   v9:= v0  @type object;
#L0a3d0a.   v10:= 0  @length 4;
#L0a3d0c.   v1:= v11.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3d10.   v2:= @@[|org:apache:http:impl:auth:NTLMScheme$State.CHALLENGE_RECEIVED|]   @type object;
#L0a3d14.   if v1 == v2 then goto L0a3d24;
#L0a3d18.   v1:= v11.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3d1c.   v2:= @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|]   @type object;
#L0a3d20.   if v1 != v2 then goto L0a3dcc;
#L0a3d24.   v1:= v11.[|org:apache:http:impl:auth:NTLMScheme.engine|]   @type object;
#L0a3d28.   call temp:=  [|org:apache:http:auth:NTCredentials.getDomain|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3d2e.   v2:= temp  @type object;
#L0a3d30.   call temp:=  [|org:apache:http:auth:NTCredentials.getWorkstation|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getWorkstation:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3d36.   v3:= temp  @type object;
#L0a3d38.   call temp:=  [|org:apache:http:impl:auth:NTLMEngine.generateType1Msg|](v1, v2, v3) @signature [|Lorg/apache/http/impl/auth/NTLMEngine;.generateType1Msg:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:NTLMEngine|] @type interface;
#L0a3d3e.   v10:= temp  @type object;
#L0a3d40.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE1_GENERATED|]   @type object;
#L0a3d44.   v11.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v1 @type object;
#L0a3d48.   v7:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a3d4c.   v1:= 32  @length 16;
#L0a3d50.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v7, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a3d56.   call temp:=  [|org:apache:http:impl:auth:NTLMScheme.isProxy|](v11) @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.isProxy:()Z|] @classDescriptor [|org:apache:http:impl:auth:NTLMScheme|] @type virtual;
#L0a3d5c.   v1:= temp;
#L0a3d5e.   if v1 == 0 then goto L0a3e48;
#L0a3d62.   v1:= "Proxy-Authorization" @type (object, string);
#L0a3d66.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3d6c.   v1:= ": NTLM " @type (object, string);
#L0a3d70.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3d76.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v10) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3d7c.   v1:= new [|org:apache:http:message:BufferedHeader|];
#L0a3d80.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v1, v7) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0a3d86.   return v1  @type object;
#L0a3d88.   v8:= Exception  @type object;
#L0a3d8a.   v1:= new [|org:apache:http:auth:InvalidCredentialsException|];
#L0a3d8e.   v2:= new [|java:lang:StringBuilder|];
#L0a3d92.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a3d98.   v3:= "Credentials cannot be used for NTLM authentication: " @type (object, string);
#L0a3d9c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3da2.   v2:= temp  @type object;
#L0a3da4.   call temp:=  [|java:lang:Object.getClass|](v12) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a3daa.   v3:= temp  @type object;
#L0a3dac.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0a3db2.   v3:= temp  @type object;
#L0a3db4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3dba.   v2:= temp  @type object;
#L0a3dbc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3dc2.   v2:= temp  @type object;
#L0a3dc4.   call temp:=  [|org:apache:http:auth:InvalidCredentialsException.<init>|](v1, v2) @signature [|Lorg/apache/http/auth/InvalidCredentialsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:InvalidCredentialsException|] @type direct;
#L0a3dca.   throw v1;
#L0a3dcc.   v1:= v11.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3dd0.   v2:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE2_RECEVIED|]   @type object;
#L0a3dd4.   if v1 != v2 then goto L0a3e12;
#L0a3dd8.   v1:= v11.[|org:apache:http:impl:auth:NTLMScheme.engine|]   @type object;
#L0a3ddc.   call temp:=  [|org:apache:http:auth:NTCredentials.getUserName|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getUserName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3de2.   v2:= temp  @type object;
#L0a3de4.   call temp:=  [|org:apache:http:auth:NTCredentials.getPassword|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getPassword:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3dea.   v3:= temp  @type object;
#L0a3dec.   call temp:=  [|org:apache:http:auth:NTCredentials.getDomain|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3df2.   v4:= temp  @type object;
#L0a3df4.   call temp:=  [|org:apache:http:auth:NTCredentials.getWorkstation|](v9) @signature [|Lorg/apache/http/auth/NTCredentials;.getWorkstation:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:NTCredentials|] @type virtual;
#L0a3dfa.   v5:= temp  @type object;
#L0a3dfc.   v6:= v11.[|org:apache:http:impl:auth:NTLMScheme.challenge|]   @type object;
#L0a3e00.   call temp:=  [|org:apache:http:impl:auth:NTLMEngine.generateType3Msg|](v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/impl/auth/NTLMEngine;.generateType3Msg:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:auth:NTLMEngine|] @type interface;
#L0a3e06.   v10:= temp  @type object;
#L0a3e08.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE3_GENERATED|]   @type object;
#L0a3e0c.   v11.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v1 @type object;
#L0a3e10.   goto L0a3d48;
#L0a3e12.   v1:= new [|org:apache:http:auth:AuthenticationException|];
#L0a3e16.   v2:= new [|java:lang:StringBuilder|];
#L0a3e1a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a3e20.   v3:= "Unexpected state: " @type (object, string);
#L0a3e24.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3e2a.   v2:= temp  @type object;
#L0a3e2c.   v3:= v11.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3e30.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3e36.   v2:= temp  @type object;
#L0a3e38.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a3e3e.   v2:= temp  @type object;
#L0a3e40.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v1, v2) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a3e46.   throw v1;
#L0a3e48.   v1:= "Authorization" @type (object, string);
#L0a3e4c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3e52.   goto L0a3d6c;
  catch  [|java:lang:ClassCastException|] @[L0a3d02..L0a3d0a] goto L0a3d88;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:NTLMScheme.getParameter|] ([|org:apache:http:impl:auth:NTLMScheme|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.getParameter:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3e74.   v0:= 0  @length 4;
#L0a3e76.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:NTLMScheme.getRealm|] ([|org:apache:http:impl:auth:NTLMScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.getRealm:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3e88.   v0:= 0  @length 4;
#L0a3e8a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:auth:NTLMScheme.getSchemeName|] ([|org:apache:http:impl:auth:NTLMScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.getSchemeName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3e9c.   v0:= "ntlm" @type (object, string);
#L0a3ea0.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:NTLMScheme.isComplete|] ([|org:apache:http:impl:auth:NTLMScheme|] v2 @type (this)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.isComplete:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a3eb4.   v0:= v2.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3eb8.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE3_GENERATED|]   @type object;
#L0a3ebc.   if v0 == v1 then goto L0a3ecc;
#L0a3ec0.   v0:= v2.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3ec4.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|]   @type object;
#L0a3ec8.   if v0 != v1 then goto L0a3ed0;
#L0a3ecc.   v0:= 1  @length 4;
#L0a3ece.   return v0;
#L0a3ed0.   v0:= 0  @length 4;
#L0a3ed2.   goto L0a3ece;

   }
    procedure [|boolean|] [|org:apache:http:impl:auth:NTLMScheme.isConnectionBased|] ([|org:apache:http:impl:auth:NTLMScheme|] v1 @type (this)) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.isConnectionBased:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a3ee4.   v0:= 1  @length 4;
#L0a3ee6.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:auth:NTLMScheme.parseChallenge|] ([|org:apache:http:impl:auth:NTLMScheme|] v3 @type (this), [|org:apache:http:util:CharArrayBuffer|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|org:apache:http:impl:auth:NTLMScheme|] @signature [|Lorg/apache/http/impl/auth/NTLMScheme;.parseChallenge:(Lorg/apache/http/util/CharArrayBuffer;II)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a3ef8.   call temp:=  [|org:apache:http:util:CharArrayBuffer.substringTrimmed|](v4, v5, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.substringTrimmed:(II)Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a3efe.   v0:= temp  @type object;
#L0a3f00.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a3f06.   v1:= temp;
#L0a3f08.   if v1 != 0 then goto L0a3f32;
#L0a3f0c.   v1:= v3.[|org:apache:http:impl:auth:NTLMScheme.state|]   @type object;
#L0a3f10.   v2:= @@[|org:apache:http:impl:auth:NTLMScheme$State.UNINITIATED|]   @type object;
#L0a3f14.   if v1 != v2 then goto L0a3f28;
#L0a3f18.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.CHALLENGE_RECEIVED|]   @type object;
#L0a3f1c.   v3.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v1 @type object;
#L0a3f20.   v1:= 0  @length 4;
#L0a3f22.   v3.[|org:apache:http:impl:auth:NTLMScheme.challenge|]  := v1 @type object;
#L0a3f26.   return @void ;
#L0a3f28.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.FAILED|]   @type object;
#L0a3f2c.   v3.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v1 @type object;
#L0a3f30.   goto L0a3f20;
#L0a3f32.   v1:= @@[|org:apache:http:impl:auth:NTLMScheme$State.MSG_TYPE2_RECEVIED|]   @type object;
#L0a3f36.   v3.[|org:apache:http:impl:auth:NTLMScheme.state|]  := v1 @type object;
#L0a3f3a.   v3.[|org:apache:http:impl:auth:NTLMScheme.challenge|]  := v0 @type object;
#L0a3f3e.   goto L0a3f26;

   }
record [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
   }
      global [|long|] @@[|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException.<init>|] ([|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] v0 @type (this)) @owner [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] @signature [|Lorg/apache/http/impl/auth/UnsupportedDigestAlgorithmException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3f50.   call temp:=  [|java:lang:RuntimeException.<init>|](v0) @signature [|Ljava/lang/RuntimeException;.<init>:()V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0a3f56.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException.<init>|] ([|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] @signature [|Lorg/apache/http/impl/auth/UnsupportedDigestAlgorithmException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3f68.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0a3f6e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException.<init>|] ([|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|org:apache:http:impl:auth:UnsupportedDigestAlgorithmException|] @signature [|Lorg/apache/http/impl/auth/UnsupportedDigestAlgorithmException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a3f80.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0a3f86.   return @void ;

   }
record [|org:apache:http:impl:client:AbstractAuthenticationHandler|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:client:AuthenticationHandler|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:util:List|] @@[|org:apache:http:impl:client:AbstractAuthenticationHandler.DEFAULT_SCHEME_PRIORITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.<clinit>|] () @owner [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a3f98.   v0:= 3  @length 4;
#L0a3f9a.   v0:= new [|java:lang:String|][v0];
#L0a3f9e.   v1:= 0  @length 4;
#L0a3fa0.   v2:= "ntlm" @type (object, string);
#L0a3fa4.   v0[v1]:= v2  @type object;
#L0a3fa8.   v1:= 1  @length 4;
#L0a3faa.   v2:= "digest" @type (object, string);
#L0a3fae.   v0[v1]:= v2  @type object;
#L0a3fb2.   v1:= 2  @length 4;
#L0a3fb4.   v2:= "basic" @type (object, string);
#L0a3fb8.   v0[v1]:= v2  @type object;
#L0a3fbc.   call temp:=  [|java:util:Arrays.asList|](v0) @signature [|Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0a3fc2.   v0:= temp  @type object;
#L0a3fc4.   @@[|org:apache:http:impl:client:AbstractAuthenticationHandler.DEFAULT_SCHEME_PRIORITY|] := v0  @type object;
#L0a3fc8.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.<init>|] ([|org:apache:http:impl:client:AbstractAuthenticationHandler|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a3fdc.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a3fe2.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a3fe8.   v0:= temp  @type object;
#L0a3fea.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a3ff0.   v0:= temp  @type object;
#L0a3ff2.   v1.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]  := v0 @type object;
#L0a3ff6.   return @void ;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.getAuthPreferences|] ([|org:apache:http:impl:client:AbstractAuthenticationHandler|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.getAuthPreferences:()Ljava/util/List;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a4008.   v0:= @@[|org:apache:http:impl:client:AbstractAuthenticationHandler.DEFAULT_SCHEME_PRIORITY|]   @type object;
#L0a400c.   return v0  @type object;

   }
    procedure [|java:util:Map|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.parseChallenges|] ([|org:apache:http:impl:client:AbstractAuthenticationHandler|] v12 @type (this), [|org:apache:http:Header|][] v13 @type (object)) @owner [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.parseChallenges:([Lorg/apache/http/Header;)Ljava/util/Map;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0a4020.   v7:= new [|java:util:HashMap|];
#L0a4024.   v10:= v13.length;
#L0a4026.   call temp:=  [|java:util:HashMap.<init>|](v7, v10) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a402c.   v0:= v13  @type object;
#L0a402e.   v6:= v0.length;
#L0a4030.   v5:= 0  @length 4;
#L0a4032.   if v5 >= v6 then goto L0a4106;
#L0a4036.   v4:= v0[v5]  @type object;
#L0a403a.   v10:= instanceof @varname v4 @type [|org:apache:http:FormattedHeader|];
#L0a403e.   if v10 == 0 then goto L0a4084;
#L0a4042.   v10:= v4  @type object;
#L0a4044.   v10:= ([|org:apache:http:FormattedHeader|])v10;
#L0a4048.   call temp:=  [|org:apache:http:FormattedHeader.getBuffer|](v10) @signature [|Lorg/apache/http/FormattedHeader;.getBuffer:()Lorg/apache/http/util/CharArrayBuffer;|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0a404e.   v2:= temp  @type object;
#L0a4050.   v10:= v4  @type object;
#L0a4052.   v10:= ([|org:apache:http:FormattedHeader|])v10;
#L0a4056.   call temp:=  [|org:apache:http:FormattedHeader.getValuePos|](v10) @signature [|Lorg/apache/http/FormattedHeader;.getValuePos:()I|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0a405c.   v8:= temp;
#L0a405e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a4064.   v10:= temp;
#L0a4066.   if v8 >= v10 then goto L0a40bc;
#L0a406a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v8) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a4070.   v10:= temp;
#L0a4072.   call temp:=  [|org:apache:http:protocol:HTTP.isWhitespace|](v10) @signature [|Lorg/apache/http/protocol/HTTP;.isWhitespace:(C)Z|] @classDescriptor [|org:apache:http:protocol:HTTP|] @type static;
#L0a4078.   v10:= temp;
#L0a407a.   if v10 == 0 then goto L0a40bc;
#L0a407e.   v8:= v8 + 1;
#L0a4082.   goto L0a405e;
#L0a4084.   call temp:=  [|org:apache:http:Header.getValue|](v4) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0a408a.   v9:= temp  @type object;
#L0a408c.   if v9 != 0 then goto L0a40a0;
#L0a4090.   v10:= new [|org:apache:http:auth:MalformedChallengeException|];
#L0a4094.   v11:= "Header value is null" @type (object, string);
#L0a4098.   call temp:=  [|org:apache:http:auth:MalformedChallengeException.<init>|](v10, v11) @signature [|Lorg/apache/http/auth/MalformedChallengeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:MalformedChallengeException|] @type direct;
#L0a409e.   throw v10;
#L0a40a0.   v2:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a40a4.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a40aa.   v10:= temp;
#L0a40ac.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v2, v10) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a40b2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v2, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a40b8.   v8:= 0  @length 4;
#L0a40ba.   goto L0a405e;
#L0a40bc.   v1:= v8;
#L0a40be.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a40c4.   v10:= temp;
#L0a40c6.   if v8 >= v10 then goto L0a40e4;
#L0a40ca.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v8) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a40d0.   v10:= temp;
#L0a40d2.   call temp:=  [|org:apache:http:protocol:HTTP.isWhitespace|](v10) @signature [|Lorg/apache/http/protocol/HTTP;.isWhitespace:(C)Z|] @classDescriptor [|org:apache:http:protocol:HTTP|] @type static;
#L0a40d8.   v10:= temp;
#L0a40da.   if v10 != 0 then goto L0a40e4;
#L0a40de.   v8:= v8 + 1;
#L0a40e2.   goto L0a40be;
#L0a40e4.   v3:= v8;
#L0a40e6.   call temp:=  [|org:apache:http:util:CharArrayBuffer.substring|](v2, v1, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.substring:(II)Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a40ec.   v9:= temp  @type object;
#L0a40ee.   v10:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a40f2.   call temp:=  [|java:lang:String.toLowerCase|](v9, v10) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a40f8.   v10:= temp  @type object;
#L0a40fa.   call temp:=  [|java:util:Map.put|](v7, v10, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a4100.   v5:= v5 + 1;
#L0a4104.   goto L0a4032;
#L0a4106.   return v7  @type object;

   }
    procedure [|org:apache:http:auth:AuthScheme|] [|org:apache:http:impl:client:AbstractAuthenticationHandler.selectScheme|] ([|org:apache:http:impl:client:AbstractAuthenticationHandler|] v10 @type (this), [|java:util:Map|] v11 @type (object), [|org:apache:http:HttpResponse|] v12 @type (object), [|org:apache:http:protocol:HttpContext|] v13 @type (object)) @owner [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.selectScheme:(Ljava/util/Map;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/auth/AuthScheme;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0a4118.   v7:= "http.authscheme-registry" @type (object, string);
#L0a411c.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v13, v7) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a4122.   v6:= temp  @type object;
#L0a4124.   v6:= ([|org:apache:http:auth:AuthSchemeRegistry|])v6;
#L0a4128.   if v6 != 0 then goto L0a413c;
#L0a412c.   v7:= new [|java:lang:IllegalStateException|];
#L0a4130.   v8:= "AuthScheme registry not set in HTTP context" @type (object, string);
#L0a4134.   call temp:=  [|java:lang:IllegalStateException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a413a.   throw v7;
#L0a413c.   v7:= "http.auth.scheme-pref" @type (object, string);
#L0a4140.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v13, v7) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a4146.   v0:= temp  @type object;
#L0a4148.   v0:= ([|java:util:List|])v0;
#L0a414c.   if v0 != 0 then goto L0a4158;
#L0a4150.   call temp:=  [|org:apache:http:impl:client:AbstractAuthenticationHandler.getAuthPreferences|](v10) @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.getAuthPreferences:()Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @type virtual;
#L0a4156.   v0:= temp  @type object;
#L0a4158.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a415c.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a4162.   v7:= temp;
#L0a4164.   if v7 == 0 then goto L0a4198;
#L0a4168.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a416c.   v8:= new [|java:lang:StringBuilder|];
#L0a4170.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a4176.   v9:= "Authentication schemes in the order of preference: " @type (object, string);
#L0a417a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4180.   v8:= temp  @type object;
#L0a4182.   call temp:=  [|java:lang:StringBuilder.append|](v8, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4188.   v8:= temp  @type object;
#L0a418a.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4190.   v8:= temp  @type object;
#L0a4192.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a4198.   v1:= 0  @length 4;
#L0a419a.   v4:= 0  @length 4;
#L0a419c.   call temp:=  [|java:util:List.size|](v0) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0a41a2.   v7:= temp;
#L0a41a4.   if v4 >= v7 then goto L0a4220;
#L0a41a8.   call temp:=  [|java:util:List.get|](v0, v4) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0a41ae.   v5:= temp  @type object;
#L0a41b0.   v5:= ([|java:lang:String|])v5;
#L0a41b4.   v7:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a41b8.   call temp:=  [|java:lang:String.toLowerCase|](v5, v7) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a41be.   v7:= temp  @type object;
#L0a41c0.   call temp:=  [|java:util:Map.get|](v11, v7) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a41c6.   v2:= temp  @type object;
#L0a41c8.   v2:= ([|org:apache:http:Header|])v2;
#L0a41cc.   if v2 == 0 then goto L0a42ac;
#L0a41d0.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a41d4.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a41da.   v7:= temp;
#L0a41dc.   if v7 == 0 then goto L0a4210;
#L0a41e0.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a41e4.   v8:= new [|java:lang:StringBuilder|];
#L0a41e8.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a41ee.   call temp:=  [|java:lang:StringBuilder.append|](v8, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a41f4.   v8:= temp  @type object;
#L0a41f6.   v9:= " authentication scheme selected" @type (object, string);
#L0a41fa.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4200.   v8:= temp  @type object;
#L0a4202.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4208.   v8:= temp  @type object;
#L0a420a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a4210.   call temp:=  [|org:apache:http:HttpResponse.getParams|](v12) @signature [|Lorg/apache/http/HttpResponse;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a4216.   v7:= temp  @type object;
#L0a4218.   call temp:=  [|org:apache:http:auth:AuthSchemeRegistry.getAuthScheme|](v6, v5, v7) @signature [|Lorg/apache/http/auth/AuthSchemeRegistry;.getAuthScheme:(Ljava/lang/String;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthSchemeRegistry|] @type virtual;
#L0a421e.   v1:= temp  @type object;
#L0a4220.   if v1 != 0 then goto L0a42fa;
#L0a4224.   v7:= new [|org:apache:http:auth:AuthenticationException|];
#L0a4228.   v8:= new [|java:lang:StringBuilder|];
#L0a422c.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a4232.   v9:= "Unable to respond to any of these challenges: " @type (object, string);
#L0a4236.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a423c.   v8:= temp  @type object;
#L0a423e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4244.   v8:= temp  @type object;
#L0a4246.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a424c.   v8:= temp  @type object;
#L0a424e.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v7, v8) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a4254.   throw v7;
#L0a4256.   v3:= Exception  @type object;
#L0a4258.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a425c.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a4262.   v7:= temp;
#L0a4264.   if v7 == 0 then goto L0a42a4;
#L0a4268.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a426c.   v8:= new [|java:lang:StringBuilder|];
#L0a4270.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a4276.   v9:= "Authentication scheme " @type (object, string);
#L0a427a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4280.   v8:= temp  @type object;
#L0a4282.   call temp:=  [|java:lang:StringBuilder.append|](v8, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4288.   v8:= temp  @type object;
#L0a428a.   v9:= " not supported" @type (object, string);
#L0a428e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a4294.   v8:= temp  @type object;
#L0a4296.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a429c.   v8:= temp  @type object;
#L0a429e.   call temp:=  [|org:apache:commons:logging:Log.warn|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a42a4.   v4:= v4 + 1;
#L0a42a8.   goto L0a419c;
#L0a42ac.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a42b0.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a42b6.   v7:= temp;
#L0a42b8.   if v7 == 0 then goto L0a42a4;
#L0a42bc.   v7:= v10.[|org:apache:http:impl:client:AbstractAuthenticationHandler.log|]   @type object;
#L0a42c0.   v8:= new [|java:lang:StringBuilder|];
#L0a42c4.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a42ca.   v9:= "Challenge for " @type (object, string);
#L0a42ce.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a42d4.   v8:= temp  @type object;
#L0a42d6.   call temp:=  [|java:lang:StringBuilder.append|](v8, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a42dc.   v8:= temp  @type object;
#L0a42de.   v9:= " authentication scheme not available" @type (object, string);
#L0a42e2.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a42e8.   v8:= temp  @type object;
#L0a42ea.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a42f0.   v8:= temp  @type object;
#L0a42f2.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a42f8.   goto L0a42a4;
#L0a42fa.   return v1  @type object;
  catch  [|java:lang:IllegalStateException|] @[L0a4210..L0a421e] goto L0a4256;

   }
record [|org:apache:http:impl:client:AbstractHttpClient|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:client:HttpClient|] {
      [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:client:AbstractHttpClient.connManager|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:CookieStore|] [|org:apache:http:impl:client:AbstractHttpClient.cookieStore|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:CredentialsProvider|] [|org:apache:http:impl:client:AbstractHttpClient.credsProvider|]    @AccessFlag PRIVATE;
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]    @AccessFlag PRIVATE;
      [|org:apache:http:protocol:BasicHttpProcessor|] [|org:apache:http:impl:client:AbstractHttpClient.httpProcessor|]    @AccessFlag PRIVATE;
      [|org:apache:http:conn:ConnectionKeepAliveStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.keepAliveStrategy|]    @AccessFlag PRIVATE;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:client:AbstractHttpClient.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.proxyAuthHandler|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:RedirectHandler|] [|org:apache:http:impl:client:AbstractHttpClient.redirectHandler|]    @AccessFlag PRIVATE;
      [|org:apache:http:protocol:HttpRequestExecutor|] [|org:apache:http:impl:client:AbstractHttpClient.requestExec|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:HttpRequestRetryHandler|] [|org:apache:http:impl:client:AbstractHttpClient.retryHandler|]    @AccessFlag PRIVATE;
      [|org:apache:http:ConnectionReuseStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.reuseStrategy|]    @AccessFlag PRIVATE;
      [|org:apache:http:conn:routing:HttpRoutePlanner|] [|org:apache:http:impl:client:AbstractHttpClient.routePlanner|]    @AccessFlag PRIVATE;
      [|org:apache:http:auth:AuthSchemeRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.supportedAuthSchemes|]    @AccessFlag PRIVATE;
      [|org:apache:http:cookie:CookieSpecRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.supportedCookieSpecs|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.targetAuthHandler|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:UserTokenHandler|] [|org:apache:http:impl:client:AbstractHttpClient.userTokenHandler|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.<init>|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:conn:ClientConnectionManager|] v2 @type (object), [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a431c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a4322.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a4328.   v0:= temp  @type object;
#L0a432a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a4330.   v0:= temp  @type object;
#L0a4332.   v1.[|org:apache:http:impl:client:AbstractHttpClient.log|]  := v0 @type object;
#L0a4336.   v1.[|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]  := v3 @type object;
#L0a433a.   v1.[|org:apache:http:impl:client:AbstractHttpClient.connManager|]  := v2 @type object;
#L0a433e.   return @void ;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:impl:client:AbstractHttpClient.determineTarget|] ([|org:apache:http:impl:client:AbstractHttpClient|] v5 @type (this), [|org:apache:http:client:methods:HttpUriRequest|] v6 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.determineTarget:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpHost;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a4350.   v1:= 0  @length 4;
#L0a4352.   call temp:=  [|org:apache:http:client:methods:HttpUriRequest.getURI|](v6) @signature [|Lorg/apache/http/client/methods/HttpUriRequest;.getURI:()Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:methods:HttpUriRequest|] @type interface;
#L0a4358.   v0:= temp  @type object;
#L0a435a.   call temp:=  [|java:net:URI.isAbsolute|](v0) @signature [|Ljava/net/URI;.isAbsolute:()Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a4360.   v2:= temp;
#L0a4362.   if v2 == 0 then goto L0a4388;
#L0a4366.   v1:= new [|org:apache:http:HttpHost|];
#L0a436a.   call temp:=  [|java:net:URI.getHost|](v0) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a4370.   v2:= temp  @type object;
#L0a4372.   call temp:=  [|java:net:URI.getPort|](v0) @signature [|Ljava/net/URI;.getPort:()I|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a4378.   v3:= temp;
#L0a437a.   call temp:=  [|java:net:URI.getScheme|](v0) @signature [|Ljava/net/URI;.getScheme:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a4380.   v4:= temp  @type object;
#L0a4382.   call temp:=  [|org:apache:http:HttpHost.<init>|](v1, v2, v3, v4) @signature [|Lorg/apache/http/HttpHost;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpHost|] @type direct;
#L0a4388.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.addRequestInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpRequestInterceptor|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.addRequestInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a439c.   (@monitorenter v1)
#L0a439e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a43a4.   v0:= temp  @type object;
#L0a43a6.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a43ac.   (@monitorexit v1)
#L0a43ae.   return @void ;
#L0a43b0.   v0:= Exception  @type object;
#L0a43b2.   (@monitorexit v1)
#L0a43b4.   throw v0;
  catch  [|any|] @[L0a439e..L0a43ac] goto L0a43b0;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.addRequestInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpRequestInterceptor|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.addRequestInterceptor:(Lorg/apache/http/HttpRequestInterceptor;I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a43d4.   (@monitorenter v1)
#L0a43d6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a43dc.   v0:= temp  @type object;
#L0a43de.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v2, v3) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;I)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a43e4.   (@monitorexit v1)
#L0a43e6.   return @void ;
#L0a43e8.   v0:= Exception  @type object;
#L0a43ea.   (@monitorexit v1)
#L0a43ec.   throw v0;
  catch  [|any|] @[L0a43d6..L0a43e4] goto L0a43e8;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.addResponseInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpResponseInterceptor|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.addResponseInterceptor:(Lorg/apache/http/HttpResponseInterceptor;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a440c.   (@monitorenter v1)
#L0a440e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4414.   v0:= temp  @type object;
#L0a4416.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpResponseInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a441c.   (@monitorexit v1)
#L0a441e.   return @void ;
#L0a4420.   v0:= Exception  @type object;
#L0a4422.   (@monitorexit v1)
#L0a4424.   throw v0;
  catch  [|any|] @[L0a440e..L0a441c] goto L0a4420;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.addResponseInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpResponseInterceptor|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.addResponseInterceptor:(Lorg/apache/http/HttpResponseInterceptor;I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4444.   (@monitorenter v1)
#L0a4446.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a444c.   v0:= temp  @type object;
#L0a444e.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v2, v3) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpResponseInterceptor;I)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4454.   (@monitorexit v1)
#L0a4456.   return @void ;
#L0a4458.   v0:= Exception  @type object;
#L0a445a.   (@monitorexit v1)
#L0a445c.   throw v0;
  catch  [|any|] @[L0a4446..L0a4454] goto L0a4458;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.clearRequestInterceptors|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.clearRequestInterceptors:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a447c.   (@monitorenter v1)
#L0a447e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4484.   v0:= temp  @type object;
#L0a4486.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.clearRequestInterceptors|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.clearRequestInterceptors:()V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a448c.   (@monitorexit v1)
#L0a448e.   return @void ;
#L0a4490.   v0:= Exception  @type object;
#L0a4492.   (@monitorexit v1)
#L0a4494.   throw v0;
  catch  [|any|] @[L0a447e..L0a448c] goto L0a4490;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.clearResponseInterceptors|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.clearResponseInterceptors:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a44b4.   (@monitorenter v1)
#L0a44b6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a44bc.   v0:= temp  @type object;
#L0a44be.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.clearResponseInterceptors|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.clearResponseInterceptors:()V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a44c4.   (@monitorexit v1)
#L0a44c6.   return @void ;
#L0a44c8.   v0:= Exception  @type object;
#L0a44ca.   (@monitorexit v1)
#L0a44cc.   throw v0;
  catch  [|any|] @[L0a44b6..L0a44c4] goto L0a44c8;

   }
    procedure [|org:apache:http:auth:AuthSchemeRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.createAuthSchemeRegistry|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createAuthSchemeRegistry:()Lorg/apache/http/auth/AuthSchemeRegistry;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:client:AbstractHttpClient.createClientConnectionManager|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createClientConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:RequestDirector|] [|org:apache:http:impl:client:AbstractHttpClient.createClientRequestDirector|] ([|org:apache:http:impl:client:AbstractHttpClient|] v13 @type (this), [|org:apache:http:protocol:HttpRequestExecutor|] v14 @type (object), [|org:apache:http:conn:ClientConnectionManager|] v15 @type (object), [|org:apache:http:ConnectionReuseStrategy|] v16 @type (object), [|org:apache:http:conn:ConnectionKeepAliveStrategy|] v17 @type (object), [|org:apache:http:conn:routing:HttpRoutePlanner|] v18 @type (object), [|org:apache:http:protocol:HttpProcessor|] v19 @type (object), [|org:apache:http:client:HttpRequestRetryHandler|] v20 @type (object), [|org:apache:http:client:RedirectHandler|] v21 @type (object), [|org:apache:http:client:AuthenticationHandler|] v22 @type (object), [|org:apache:http:client:AuthenticationHandler|] v23 @type (object), [|org:apache:http:client:UserTokenHandler|] v24 @type (object), [|org:apache:http:params:HttpParams|] v25 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createClientRequestDirector:(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/client/RequestDirector;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0a44ec.   v0:= new [|org:apache:http:impl:client:DefaultRequestDirector|];
#L0a44f0.   v1:= v14  @type object;
#L0a44f2.   v2:= v15  @type object;
#L0a44f4.   v3:= v16  @type object;
#L0a44f8.   v4:= v17  @type object;
#L0a44fc.   v5:= v18  @type object;
#L0a4500.   v6:= v19  @type object;
#L0a4504.   v7:= v20  @type object;
#L0a4508.   v8:= v21  @type object;
#L0a450c.   v9:= v22  @type object;
#L0a4510.   v10:= v23  @type object;
#L0a4514.   v11:= v24  @type object;
#L0a4518.   v12:= v25  @type object;
#L0a451c.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.<init>:(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a4522.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:ConnectionKeepAliveStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.createConnectionKeepAliveStrategy|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createConnectionKeepAliveStrategy:()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:ConnectionReuseStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.createConnectionReuseStrategy|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createConnectionReuseStrategy:()Lorg/apache/http/ConnectionReuseStrategy;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:cookie:CookieSpecRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.createCookieSpecRegistry|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCookieSpecRegistry:()Lorg/apache/http/cookie/CookieSpecRegistry;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:CookieStore|] [|org:apache:http:impl:client:AbstractHttpClient.createCookieStore|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCookieStore:()Lorg/apache/http/client/CookieStore;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:CredentialsProvider|] [|org:apache:http:impl:client:AbstractHttpClient.createCredentialsProvider|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:protocol:HttpContext|] [|org:apache:http:impl:client:AbstractHttpClient.createHttpContext|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpContext:()Lorg/apache/http/protocol/HttpContext;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:AbstractHttpClient.createHttpParams|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpParams:()Lorg/apache/http/params/HttpParams;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:protocol:BasicHttpProcessor|] [|org:apache:http:impl:client:AbstractHttpClient.createHttpProcessor|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:HttpRequestRetryHandler|] [|org:apache:http:impl:client:AbstractHttpClient.createHttpRequestRetryHandler|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpRequestRetryHandler:()Lorg/apache/http/client/HttpRequestRetryHandler;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:conn:routing:HttpRoutePlanner|] [|org:apache:http:impl:client:AbstractHttpClient.createHttpRoutePlanner|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpRoutePlanner:()Lorg/apache/http/conn/routing/HttpRoutePlanner;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.createProxyAuthenticationHandler|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createProxyAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:RedirectHandler|] [|org:apache:http:impl:client:AbstractHttpClient.createRedirectHandler|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createRedirectHandler:()Lorg/apache/http/client/RedirectHandler;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:protocol:HttpRequestExecutor|] [|org:apache:http:impl:client:AbstractHttpClient.createRequestExecutor|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createRequestExecutor:()Lorg/apache/http/protocol/HttpRequestExecutor;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.createTargetAuthenticationHandler|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createTargetAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:client:UserTokenHandler|] [|org:apache:http:impl:client:AbstractHttpClient.createUserTokenHandler|] () @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createUserTokenHandler:()Lorg/apache/http/client/UserTokenHandler;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:AbstractHttpClient.determineParams|] ([|org:apache:http:impl:client:AbstractHttpClient|] v4 @type (this), [|org:apache:http:HttpRequest|] v5 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.determineParams:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/params/HttpParams;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a4534.   v3:= 0  @length 4;
#L0a4536.   v0:= new [|org:apache:http:impl:client:ClientParamsStack|];
#L0a453a.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getParams|](v4) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4540.   v1:= temp  @type object;
#L0a4542.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v5) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a4548.   v2:= temp  @type object;
#L0a454a.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.<init>|](v0, v3, v1, v2, v3) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type direct;
#L0a4550.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpHost|] v2 @type (object), [|org:apache:http:HttpRequest|] v3 @type (object), [|org:apache:http:client:ResponseHandler|] v4 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a4564.   v0:= 0  @length 4;
#L0a4566.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v1, v2, v3, v4, v0) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a456c.   v0:= temp  @type object;
#L0a456e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|org:apache:http:HttpRequest|] v9 @type (object), [|org:apache:http:client:ResponseHandler|] v10 @type (object), [|org:apache:http:protocol:HttpContext|] v11 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a4580.   if v10 != 0 then goto L0a4594;
#L0a4584.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a4588.   v6:= "Response handler must not be null." @type (object, string);
#L0a458c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a4592.   throw v5;
#L0a4594.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v7, v8, v9, v11) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a459a.   v1:= temp  @type object;
#L0a459c.   call temp:=  [|org:apache:http:client:ResponseHandler.handleResponse|](v10, v1) @signature [|Lorg/apache/http/client/ResponseHandler;.handleResponse:(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:client:ResponseHandler|] @type interface;
#L0a45a2.   v2:= temp  @type object;
#L0a45a4.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v1) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a45aa.   v0:= temp  @type object;
#L0a45ac.   if v0 == 0 then goto L0a45b6;
#L0a45b0.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a45b6.   return v2  @type object;
#L0a45b8.   v3:= Exception  @type object;
#L0a45ba.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v1) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a45c0.   v0:= temp  @type object;
#L0a45c2.   if v0 == 0 then goto L0a45cc;
#L0a45c6.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v0) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a45cc.   v5:= instanceof @varname v3 @type [|java:lang:Error|];
#L0a45d0.   if v5 == 0 then goto L0a45ec;
#L0a45d4.   v3:= ([|java:lang:Error|])v3;
#L0a45d8.   throw v3;
#L0a45da.   v4:= Exception  @type object;
#L0a45dc.   v5:= v7.[|org:apache:http:impl:client:AbstractHttpClient.log|]   @type object;
#L0a45e0.   v6:= "Error consuming content after an exception." @type (object, string);
#L0a45e4.   call temp:=  [|org:apache:commons:logging:Log.warn|](v5, v6, v4) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a45ea.   goto L0a45cc;
#L0a45ec.   v5:= instanceof @varname v3 @type [|java:lang:RuntimeException|];
#L0a45f0.   if v5 == 0 then goto L0a45fa;
#L0a45f4.   v3:= ([|java:lang:RuntimeException|])v3;
#L0a45f8.   throw v3;
#L0a45fa.   v5:= instanceof @varname v3 @type [|java:io:IOException|];
#L0a45fe.   if v5 == 0 then goto L0a4608;
#L0a4602.   v3:= ([|java:io:IOException|])v3;
#L0a4606.   throw v3;
#L0a4608.   v5:= new [|java:lang:reflect:UndeclaredThrowableException|];
#L0a460c.   call temp:=  [|java:lang:reflect:UndeclaredThrowableException.<init>|](v5, v3) @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:reflect:UndeclaredThrowableException|] @type direct;
#L0a4612.   throw v5;
  catch  [|java:lang:Throwable|] @[L0a459c..L0a45a2] goto L0a45b8;
  catch  [|java:lang:Throwable|] @[L0a45c6..L0a45cc] goto L0a45da;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:methods:HttpUriRequest|] v2 @type (object), [|org:apache:http:client:ResponseHandler|] v3 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a4640.   v0:= 0  @length 4;
#L0a4642.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v1, v2, v3, v0) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4648.   v0:= temp  @type object;
#L0a464a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v2 @type (this), [|org:apache:http:client:methods:HttpUriRequest|] v3 @type (object), [|org:apache:http:client:ResponseHandler|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a465c.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.determineTarget|](v2, v3) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.determineTarget:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type direct;
#L0a4662.   v0:= temp  @type object;
#L0a4664.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v2, v0, v3, v4, v5) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/client/ResponseHandler;Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a466a.   v1:= temp  @type object;
#L0a466c.   return v1  @type object;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:HttpHost|] v2 @type (object), [|org:apache:http:HttpRequest|] v3 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a4680.   v0:= 0  @length 4;
#L0a4682.   v0:= ([|org:apache:http:protocol:HttpContext|])v0;
#L0a4686.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v1, v2, v3, v0) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a468c.   v0:= temp  @type object;
#L0a468e.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v22 @type (this), [|org:apache:http:HttpHost|] v23 @type (object), [|org:apache:http:HttpRequest|] v24 @type (object), [|org:apache:http:protocol:HttpContext|] v25 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
      
#L0a46a0.   if v24 != 0 then goto L0a46b4;
#L0a46a4.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a46a8.   v5:= "Request must not be null." @type (object, string);
#L0a46ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a46b2.   throw v4;
#L0a46b4.   v19:= 0  @length 16;
#L0a46b8.   v18:= 0  @length 16;
#L0a46bc.   (@monitorenter v22)
#L0a46be.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createHttpContext|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpContext:()Lorg/apache/http/protocol/HttpContext;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46c4.   v17:= temp  @type object;
#L0a46c6.   if v25 != 0 then goto L0a4766;
#L0a46ca.   v19:= v17  @type object;
#L0a46ce.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getRequestExecutor|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRequestExecutor:()Lorg/apache/http/protocol/HttpRequestExecutor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46d4.   v5:= temp  @type object;
#L0a46d6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getConnectionManager|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46dc.   v6:= temp  @type object;
#L0a46de.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getConnectionReuseStrategy|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionReuseStrategy:()Lorg/apache/http/ConnectionReuseStrategy;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46e4.   v7:= temp  @type object;
#L0a46e6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getConnectionKeepAliveStrategy|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionKeepAliveStrategy:()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46ec.   v8:= temp  @type object;
#L0a46ee.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getRoutePlanner|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRoutePlanner:()Lorg/apache/http/conn/routing/HttpRoutePlanner;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46f4.   v9:= temp  @type object;
#L0a46f6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a46fc.   v4:= temp  @type object;
#L0a46fe.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.copy|](v4) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.copy:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4704.   v10:= temp  @type object;
#L0a4706.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpRequestRetryHandler|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpRequestRetryHandler:()Lorg/apache/http/client/HttpRequestRetryHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a470c.   v11:= temp  @type object;
#L0a470e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getRedirectHandler|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRedirectHandler:()Lorg/apache/http/client/RedirectHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4714.   v12:= temp  @type object;
#L0a4716.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getTargetAuthenticationHandler|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getTargetAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a471c.   v13:= temp  @type object;
#L0a471e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getProxyAuthenticationHandler|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getProxyAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4724.   v14:= temp  @type object;
#L0a4726.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getUserTokenHandler|](v22) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getUserTokenHandler:()Lorg/apache/http/client/UserTokenHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a472c.   v15:= temp  @type object;
#L0a472e.   v0:= v22  @type object;
#L0a4732.   v1:= v24  @type object;
#L0a4736.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.determineParams|](v0, v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.determineParams:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a473c.   v16:= temp  @type object;
#L0a473e.   v4:= v22  @type object;
#L0a4742.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createClientRequestDirector|](v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createClientRequestDirector:(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/client/RequestDirector;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4748.   v18:= temp  @type object;
#L0a474a.   (@monitorexit v22)
#L0a474c.   v0:= v18  @type object;
#L0a4750.   v1:= v23  @type object;
#L0a4754.   v2:= v24  @type object;
#L0a4758.   v3:= v19  @type object;
#L0a475c.   call temp:=  [|org:apache:http:client:RequestDirector.execute|](v0, v1, v2, v3) @signature [|Lorg/apache/http/client/RequestDirector;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:client:RequestDirector|] @type interface;
#L0a4762.   v4:= temp  @type object;
#L0a4764.   return v4  @type object;
#L0a4766.   v20:= new [|org:apache:http:protocol:DefaultedHttpContext|];
#L0a476a.   v0:= v20  @type object;
#L0a476e.   v1:= v25  @type object;
#L0a4772.   v2:= v17  @type object;
#L0a4776.   call temp:=  [|org:apache:http:protocol:DefaultedHttpContext.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/DefaultedHttpContext;.<init>:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:protocol:DefaultedHttpContext|] @type direct;
#L0a477c.   v19:= v20  @type object;
#L0a4780.   goto L0a46ce;
#L0a4782.   v4:= Exception  @type object;
#L0a4784.   (@monitorexit v22)
#L0a4786.   throw v4;
#L0a4788.   v21:= Exception  @type object;
#L0a478a.   v4:= new [|org:apache:http:client:ClientProtocolException|];
#L0a478e.   v0:= v21  @type object;
#L0a4792.   call temp:=  [|org:apache:http:client:ClientProtocolException.<init>|](v4, v0) @signature [|Lorg/apache/http/client/ClientProtocolException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:client:ClientProtocolException|] @type direct;
#L0a4798.   throw v4;
  catch  [|any|] @[L0a46be..L0a474c] goto L0a4782;
  catch  [|org:apache:http:HttpException|] @[L0a474c..L0a4762] goto L0a4788;
  catch  [|any|] @[L0a4766..L0a4786] goto L0a4782;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:methods:HttpUriRequest|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a47cc.   v0:= 0  @length 4;
#L0a47ce.   v0:= ([|org:apache:http:protocol:HttpContext|])v0;
#L0a47d2.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v1, v2, v0) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a47d8.   v0:= temp  @type object;
#L0a47da.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:AbstractHttpClient.execute|] ([|org:apache:http:impl:client:AbstractHttpClient|] v2 @type (this), [|org:apache:http:client:methods:HttpUriRequest|] v3 @type (object), [|org:apache:http:protocol:HttpContext|] v4 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0a47ec.   if v3 != 0 then goto L0a4800;
#L0a47f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a47f4.   v1:= "Request must not be null." @type (object, string);
#L0a47f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a47fe.   throw v0;
#L0a4800.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.determineTarget|](v2, v3) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.determineTarget:(Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type direct;
#L0a4806.   v0:= temp  @type object;
#L0a4808.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.execute|](v2, v0, v3, v4) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a480e.   v0:= temp  @type object;
#L0a4810.   return v0  @type object;

   }
    procedure [|org:apache:http:auth:AuthSchemeRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.getAuthSchemes|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getAuthSchemes:()Lorg/apache/http/auth/AuthSchemeRegistry;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4824.   (@monitorenter v1)
#L0a4826.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedAuthSchemes|]   @type object;
#L0a482a.   if v0 != 0 then goto L0a483a;
#L0a482e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createAuthSchemeRegistry|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createAuthSchemeRegistry:()Lorg/apache/http/auth/AuthSchemeRegistry;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4834.   v0:= temp  @type object;
#L0a4836.   v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedAuthSchemes|]  := v0 @type object;
#L0a483a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedAuthSchemes|]   @type object;
#L0a483e.   (@monitorexit v1)
#L0a4840.   return v0  @type object;
#L0a4842.   v0:= Exception  @type object;
#L0a4844.   (@monitorexit v1)
#L0a4846.   throw v0;
  catch  [|any|] @[L0a4826..L0a483e] goto L0a4842;

   }
    procedure [|org:apache:http:conn:ConnectionKeepAliveStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.getConnectionKeepAliveStrategy|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionKeepAliveStrategy:()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4864.   (@monitorenter v1)
#L0a4866.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.keepAliveStrategy|]   @type object;
#L0a486a.   if v0 != 0 then goto L0a487a;
#L0a486e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createConnectionKeepAliveStrategy|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createConnectionKeepAliveStrategy:()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4874.   v0:= temp  @type object;
#L0a4876.   v1.[|org:apache:http:impl:client:AbstractHttpClient.keepAliveStrategy|]  := v0 @type object;
#L0a487a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.keepAliveStrategy|]   @type object;
#L0a487e.   (@monitorexit v1)
#L0a4880.   return v0  @type object;
#L0a4882.   v0:= Exception  @type object;
#L0a4884.   (@monitorexit v1)
#L0a4886.   throw v0;
  catch  [|any|] @[L0a4866..L0a487e] goto L0a4882;

   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:client:AbstractHttpClient.getConnectionManager|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a48a4.   (@monitorenter v1)
#L0a48a6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.connManager|]   @type object;
#L0a48aa.   if v0 != 0 then goto L0a48ba;
#L0a48ae.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createClientConnectionManager|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createClientConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a48b4.   v0:= temp  @type object;
#L0a48b6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.connManager|]  := v0 @type object;
#L0a48ba.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.connManager|]   @type object;
#L0a48be.   (@monitorexit v1)
#L0a48c0.   return v0  @type object;
#L0a48c2.   v0:= Exception  @type object;
#L0a48c4.   (@monitorexit v1)
#L0a48c6.   throw v0;
  catch  [|any|] @[L0a48a6..L0a48be] goto L0a48c2;

   }
    procedure [|org:apache:http:ConnectionReuseStrategy|] [|org:apache:http:impl:client:AbstractHttpClient.getConnectionReuseStrategy|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getConnectionReuseStrategy:()Lorg/apache/http/ConnectionReuseStrategy;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a48e4.   (@monitorenter v1)
#L0a48e6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.reuseStrategy|]   @type object;
#L0a48ea.   if v0 != 0 then goto L0a48fa;
#L0a48ee.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createConnectionReuseStrategy|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createConnectionReuseStrategy:()Lorg/apache/http/ConnectionReuseStrategy;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a48f4.   v0:= temp  @type object;
#L0a48f6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.reuseStrategy|]  := v0 @type object;
#L0a48fa.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.reuseStrategy|]   @type object;
#L0a48fe.   (@monitorexit v1)
#L0a4900.   return v0  @type object;
#L0a4902.   v0:= Exception  @type object;
#L0a4904.   (@monitorexit v1)
#L0a4906.   throw v0;
  catch  [|any|] @[L0a48e6..L0a48fe] goto L0a4902;

   }
    procedure [|org:apache:http:cookie:CookieSpecRegistry|] [|org:apache:http:impl:client:AbstractHttpClient.getCookieSpecs|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getCookieSpecs:()Lorg/apache/http/cookie/CookieSpecRegistry;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4924.   (@monitorenter v1)
#L0a4926.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedCookieSpecs|]   @type object;
#L0a492a.   if v0 != 0 then goto L0a493a;
#L0a492e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createCookieSpecRegistry|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCookieSpecRegistry:()Lorg/apache/http/cookie/CookieSpecRegistry;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4934.   v0:= temp  @type object;
#L0a4936.   v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedCookieSpecs|]  := v0 @type object;
#L0a493a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedCookieSpecs|]   @type object;
#L0a493e.   (@monitorexit v1)
#L0a4940.   return v0  @type object;
#L0a4942.   v0:= Exception  @type object;
#L0a4944.   (@monitorexit v1)
#L0a4946.   throw v0;
  catch  [|any|] @[L0a4926..L0a493e] goto L0a4942;

   }
    procedure [|org:apache:http:client:CookieStore|] [|org:apache:http:impl:client:AbstractHttpClient.getCookieStore|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getCookieStore:()Lorg/apache/http/client/CookieStore;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4964.   (@monitorenter v1)
#L0a4966.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.cookieStore|]   @type object;
#L0a496a.   if v0 != 0 then goto L0a497a;
#L0a496e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createCookieStore|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCookieStore:()Lorg/apache/http/client/CookieStore;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4974.   v0:= temp  @type object;
#L0a4976.   v1.[|org:apache:http:impl:client:AbstractHttpClient.cookieStore|]  := v0 @type object;
#L0a497a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.cookieStore|]   @type object;
#L0a497e.   (@monitorexit v1)
#L0a4980.   return v0  @type object;
#L0a4982.   v0:= Exception  @type object;
#L0a4984.   (@monitorexit v1)
#L0a4986.   throw v0;
  catch  [|any|] @[L0a4966..L0a497e] goto L0a4982;

   }
    procedure [|org:apache:http:client:CredentialsProvider|] [|org:apache:http:impl:client:AbstractHttpClient.getCredentialsProvider|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a49a4.   (@monitorenter v1)
#L0a49a6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.credsProvider|]   @type object;
#L0a49aa.   if v0 != 0 then goto L0a49ba;
#L0a49ae.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createCredentialsProvider|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a49b4.   v0:= temp  @type object;
#L0a49b6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.credsProvider|]  := v0 @type object;
#L0a49ba.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.credsProvider|]   @type object;
#L0a49be.   (@monitorexit v1)
#L0a49c0.   return v0  @type object;
#L0a49c2.   v0:= Exception  @type object;
#L0a49c4.   (@monitorexit v1)
#L0a49c6.   throw v0;
  catch  [|any|] @[L0a49a6..L0a49be] goto L0a49c2;

   }
    procedure [|org:apache:http:protocol:BasicHttpProcessor|] [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @Access PROTECTED_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a49e4.   (@monitorenter v1)
#L0a49e6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.httpProcessor|]   @type object;
#L0a49ea.   if v0 != 0 then goto L0a49fa;
#L0a49ee.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a49f4.   v0:= temp  @type object;
#L0a49f6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.httpProcessor|]  := v0 @type object;
#L0a49fa.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.httpProcessor|]   @type object;
#L0a49fe.   (@monitorexit v1)
#L0a4a00.   return v0  @type object;
#L0a4a02.   v0:= Exception  @type object;
#L0a4a04.   (@monitorexit v1)
#L0a4a06.   throw v0;
  catch  [|any|] @[L0a49e6..L0a49fe] goto L0a4a02;

   }
    procedure [|org:apache:http:client:HttpRequestRetryHandler|] [|org:apache:http:impl:client:AbstractHttpClient.getHttpRequestRetryHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpRequestRetryHandler:()Lorg/apache/http/client/HttpRequestRetryHandler;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4a24.   (@monitorenter v1)
#L0a4a26.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.retryHandler|]   @type object;
#L0a4a2a.   if v0 != 0 then goto L0a4a3a;
#L0a4a2e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createHttpRequestRetryHandler|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpRequestRetryHandler:()Lorg/apache/http/client/HttpRequestRetryHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4a34.   v0:= temp  @type object;
#L0a4a36.   v1.[|org:apache:http:impl:client:AbstractHttpClient.retryHandler|]  := v0 @type object;
#L0a4a3a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.retryHandler|]   @type object;
#L0a4a3e.   (@monitorexit v1)
#L0a4a40.   return v0  @type object;
#L0a4a42.   v0:= Exception  @type object;
#L0a4a44.   (@monitorexit v1)
#L0a4a46.   throw v0;
  catch  [|any|] @[L0a4a26..L0a4a3e] goto L0a4a42;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:AbstractHttpClient.getParams|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getParams:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4a64.   (@monitorenter v1)
#L0a4a66.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]   @type object;
#L0a4a6a.   if v0 != 0 then goto L0a4a7a;
#L0a4a6e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createHttpParams|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4a74.   v0:= temp  @type object;
#L0a4a76.   v1.[|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]  := v0 @type object;
#L0a4a7a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]   @type object;
#L0a4a7e.   (@monitorexit v1)
#L0a4a80.   return v0  @type object;
#L0a4a82.   v0:= Exception  @type object;
#L0a4a84.   (@monitorexit v1)
#L0a4a86.   throw v0;
  catch  [|any|] @[L0a4a66..L0a4a7e] goto L0a4a82;

   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.getProxyAuthenticationHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getProxyAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4aa4.   (@monitorenter v1)
#L0a4aa6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.proxyAuthHandler|]   @type object;
#L0a4aaa.   if v0 != 0 then goto L0a4aba;
#L0a4aae.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createProxyAuthenticationHandler|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createProxyAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4ab4.   v0:= temp  @type object;
#L0a4ab6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.proxyAuthHandler|]  := v0 @type object;
#L0a4aba.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.proxyAuthHandler|]   @type object;
#L0a4abe.   (@monitorexit v1)
#L0a4ac0.   return v0  @type object;
#L0a4ac2.   v0:= Exception  @type object;
#L0a4ac4.   (@monitorexit v1)
#L0a4ac6.   throw v0;
  catch  [|any|] @[L0a4aa6..L0a4abe] goto L0a4ac2;

   }
    procedure [|org:apache:http:client:RedirectHandler|] [|org:apache:http:impl:client:AbstractHttpClient.getRedirectHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRedirectHandler:()Lorg/apache/http/client/RedirectHandler;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4ae4.   (@monitorenter v1)
#L0a4ae6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.redirectHandler|]   @type object;
#L0a4aea.   if v0 != 0 then goto L0a4afa;
#L0a4aee.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createRedirectHandler|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createRedirectHandler:()Lorg/apache/http/client/RedirectHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4af4.   v0:= temp  @type object;
#L0a4af6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.redirectHandler|]  := v0 @type object;
#L0a4afa.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.redirectHandler|]   @type object;
#L0a4afe.   (@monitorexit v1)
#L0a4b00.   return v0  @type object;
#L0a4b02.   v0:= Exception  @type object;
#L0a4b04.   (@monitorexit v1)
#L0a4b06.   throw v0;
  catch  [|any|] @[L0a4ae6..L0a4afe] goto L0a4b02;

   }
    procedure [|org:apache:http:protocol:HttpRequestExecutor|] [|org:apache:http:impl:client:AbstractHttpClient.getRequestExecutor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRequestExecutor:()Lorg/apache/http/protocol/HttpRequestExecutor;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4b24.   (@monitorenter v1)
#L0a4b26.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.requestExec|]   @type object;
#L0a4b2a.   if v0 != 0 then goto L0a4b3a;
#L0a4b2e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createRequestExecutor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createRequestExecutor:()Lorg/apache/http/protocol/HttpRequestExecutor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4b34.   v0:= temp  @type object;
#L0a4b36.   v1.[|org:apache:http:impl:client:AbstractHttpClient.requestExec|]  := v0 @type object;
#L0a4b3a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.requestExec|]   @type object;
#L0a4b3e.   (@monitorexit v1)
#L0a4b40.   return v0  @type object;
#L0a4b42.   v0:= Exception  @type object;
#L0a4b44.   (@monitorexit v1)
#L0a4b46.   throw v0;
  catch  [|any|] @[L0a4b26..L0a4b3e] goto L0a4b42;

   }
    procedure [|org:apache:http:HttpRequestInterceptor|] [|org:apache:http:impl:client:AbstractHttpClient.getRequestInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRequestInterceptor:(I)Lorg/apache/http/HttpRequestInterceptor;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4b64.   (@monitorenter v1)
#L0a4b66.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4b6c.   v0:= temp  @type object;
#L0a4b6e.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.getRequestInterceptor|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.getRequestInterceptor:(I)Lorg/apache/http/HttpRequestInterceptor;|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4b74.   v0:= temp  @type object;
#L0a4b76.   (@monitorexit v1)
#L0a4b78.   return v0  @type object;
#L0a4b7a.   v0:= Exception  @type object;
#L0a4b7c.   (@monitorexit v1)
#L0a4b7e.   throw v0;
  catch  [|any|] @[L0a4b66..L0a4b74] goto L0a4b7a;

   }
    procedure [|int|] [|org:apache:http:impl:client:AbstractHttpClient.getRequestInterceptorCount|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRequestInterceptorCount:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4b9c.   (@monitorenter v1)
#L0a4b9e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4ba4.   v0:= temp  @type object;
#L0a4ba6.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.getRequestInterceptorCount|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.getRequestInterceptorCount:()I|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4bac.   v0:= temp;
#L0a4bae.   (@monitorexit v1)
#L0a4bb0.   return v0;
#L0a4bb2.   v0:= Exception  @type object;
#L0a4bb4.   (@monitorexit v1)
#L0a4bb6.   throw v0;
  catch  [|any|] @[L0a4b9e..L0a4bac] goto L0a4bb2;

   }
    procedure [|org:apache:http:HttpResponseInterceptor|] [|org:apache:http:impl:client:AbstractHttpClient.getResponseInterceptor|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getResponseInterceptor:(I)Lorg/apache/http/HttpResponseInterceptor;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4bd4.   (@monitorenter v1)
#L0a4bd6.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4bdc.   v0:= temp  @type object;
#L0a4bde.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.getResponseInterceptor|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.getResponseInterceptor:(I)Lorg/apache/http/HttpResponseInterceptor;|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4be4.   v0:= temp  @type object;
#L0a4be6.   (@monitorexit v1)
#L0a4be8.   return v0  @type object;
#L0a4bea.   v0:= Exception  @type object;
#L0a4bec.   (@monitorexit v1)
#L0a4bee.   throw v0;
  catch  [|any|] @[L0a4bd6..L0a4be4] goto L0a4bea;

   }
    procedure [|int|] [|org:apache:http:impl:client:AbstractHttpClient.getResponseInterceptorCount|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getResponseInterceptorCount:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4c0c.   (@monitorenter v1)
#L0a4c0e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4c14.   v0:= temp  @type object;
#L0a4c16.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.getResponseInterceptorCount|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.getResponseInterceptorCount:()I|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4c1c.   v0:= temp;
#L0a4c1e.   (@monitorexit v1)
#L0a4c20.   return v0;
#L0a4c22.   v0:= Exception  @type object;
#L0a4c24.   (@monitorexit v1)
#L0a4c26.   throw v0;
  catch  [|any|] @[L0a4c0e..L0a4c1c] goto L0a4c22;

   }
    procedure [|org:apache:http:conn:routing:HttpRoutePlanner|] [|org:apache:http:impl:client:AbstractHttpClient.getRoutePlanner|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getRoutePlanner:()Lorg/apache/http/conn/routing/HttpRoutePlanner;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4c44.   (@monitorenter v1)
#L0a4c46.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.routePlanner|]   @type object;
#L0a4c4a.   if v0 != 0 then goto L0a4c5a;
#L0a4c4e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createHttpRoutePlanner|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createHttpRoutePlanner:()Lorg/apache/http/conn/routing/HttpRoutePlanner;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4c54.   v0:= temp  @type object;
#L0a4c56.   v1.[|org:apache:http:impl:client:AbstractHttpClient.routePlanner|]  := v0 @type object;
#L0a4c5a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.routePlanner|]   @type object;
#L0a4c5e.   (@monitorexit v1)
#L0a4c60.   return v0  @type object;
#L0a4c62.   v0:= Exception  @type object;
#L0a4c64.   (@monitorexit v1)
#L0a4c66.   throw v0;
  catch  [|any|] @[L0a4c46..L0a4c5e] goto L0a4c62;

   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:AbstractHttpClient.getTargetAuthenticationHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getTargetAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4c84.   (@monitorenter v1)
#L0a4c86.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.targetAuthHandler|]   @type object;
#L0a4c8a.   if v0 != 0 then goto L0a4c9a;
#L0a4c8e.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createTargetAuthenticationHandler|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createTargetAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4c94.   v0:= temp  @type object;
#L0a4c96.   v1.[|org:apache:http:impl:client:AbstractHttpClient.targetAuthHandler|]  := v0 @type object;
#L0a4c9a.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.targetAuthHandler|]   @type object;
#L0a4c9e.   (@monitorexit v1)
#L0a4ca0.   return v0  @type object;
#L0a4ca2.   v0:= Exception  @type object;
#L0a4ca4.   (@monitorexit v1)
#L0a4ca6.   throw v0;
  catch  [|any|] @[L0a4c86..L0a4c9e] goto L0a4ca2;

   }
    procedure [|org:apache:http:client:UserTokenHandler|] [|org:apache:http:impl:client:AbstractHttpClient.getUserTokenHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getUserTokenHandler:()Lorg/apache/http/client/UserTokenHandler;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4cc4.   (@monitorenter v1)
#L0a4cc6.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.userTokenHandler|]   @type object;
#L0a4cca.   if v0 != 0 then goto L0a4cda;
#L0a4cce.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.createUserTokenHandler|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.createUserTokenHandler:()Lorg/apache/http/client/UserTokenHandler;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4cd4.   v0:= temp  @type object;
#L0a4cd6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.userTokenHandler|]  := v0 @type object;
#L0a4cda.   v0:= v1.[|org:apache:http:impl:client:AbstractHttpClient.userTokenHandler|]   @type object;
#L0a4cde.   (@monitorexit v1)
#L0a4ce0.   return v0  @type object;
#L0a4ce2.   v0:= Exception  @type object;
#L0a4ce4.   (@monitorexit v1)
#L0a4ce6.   throw v0;
  catch  [|any|] @[L0a4cc6..L0a4cde] goto L0a4ce2;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.removeRequestInterceptorByClass|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.removeRequestInterceptorByClass:(Ljava/lang/Class;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a4d04.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4d0a.   v0:= temp  @type object;
#L0a4d0c.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.removeRequestInterceptorByClass|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.removeRequestInterceptorByClass:(Ljava/lang/Class;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4d12.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.removeResponseInterceptorByClass|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.removeResponseInterceptorByClass:(Ljava/lang/Class;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a4d24.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.getHttpProcessor|](v1) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.getHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type virtual;
#L0a4d2a.   v0:= temp  @type object;
#L0a4d2c.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.removeResponseInterceptorByClass|](v0, v2) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.removeResponseInterceptorByClass:(Ljava/lang/Class;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a4d32.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setAuthSchemes|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:auth:AuthSchemeRegistry|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setAuthSchemes:(Lorg/apache/http/auth/AuthSchemeRegistry;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4d44.   (@monitorenter v1)
#L0a4d46.   v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedAuthSchemes|]  := v2 @type object;
#L0a4d4a.   (@monitorexit v1)
#L0a4d4c.   return @void ;
#L0a4d4e.   v0:= Exception  @type object;
#L0a4d50.   (@monitorexit v1)
#L0a4d52.   throw v0;
  catch  [|any|] @[L0a4d46..L0a4d4a] goto L0a4d4e;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setCookieSpecs|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:cookie:CookieSpecRegistry|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setCookieSpecs:(Lorg/apache/http/cookie/CookieSpecRegistry;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4d70.   (@monitorenter v1)
#L0a4d72.   v1.[|org:apache:http:impl:client:AbstractHttpClient.supportedCookieSpecs|]  := v2 @type object;
#L0a4d76.   (@monitorexit v1)
#L0a4d78.   return @void ;
#L0a4d7a.   v0:= Exception  @type object;
#L0a4d7c.   (@monitorexit v1)
#L0a4d7e.   throw v0;
  catch  [|any|] @[L0a4d72..L0a4d76] goto L0a4d7a;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setCookieStore|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:CookieStore|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setCookieStore:(Lorg/apache/http/client/CookieStore;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4d9c.   (@monitorenter v1)
#L0a4d9e.   v1.[|org:apache:http:impl:client:AbstractHttpClient.cookieStore|]  := v2 @type object;
#L0a4da2.   (@monitorexit v1)
#L0a4da4.   return @void ;
#L0a4da6.   v0:= Exception  @type object;
#L0a4da8.   (@monitorexit v1)
#L0a4daa.   throw v0;
  catch  [|any|] @[L0a4d9e..L0a4da2] goto L0a4da6;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setCredentialsProvider|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:CredentialsProvider|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setCredentialsProvider:(Lorg/apache/http/client/CredentialsProvider;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4dc8.   (@monitorenter v1)
#L0a4dca.   v1.[|org:apache:http:impl:client:AbstractHttpClient.credsProvider|]  := v2 @type object;
#L0a4dce.   (@monitorexit v1)
#L0a4dd0.   return @void ;
#L0a4dd2.   v0:= Exception  @type object;
#L0a4dd4.   (@monitorexit v1)
#L0a4dd6.   throw v0;
  catch  [|any|] @[L0a4dca..L0a4dce] goto L0a4dd2;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setHttpRequestRetryHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:HttpRequestRetryHandler|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setHttpRequestRetryHandler:(Lorg/apache/http/client/HttpRequestRetryHandler;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4df4.   (@monitorenter v1)
#L0a4df6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.retryHandler|]  := v2 @type object;
#L0a4dfa.   (@monitorexit v1)
#L0a4dfc.   return @void ;
#L0a4dfe.   v0:= Exception  @type object;
#L0a4e00.   (@monitorexit v1)
#L0a4e02.   throw v0;
  catch  [|any|] @[L0a4df6..L0a4dfa] goto L0a4dfe;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setKeepAliveStrategy|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:conn:ConnectionKeepAliveStrategy|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setKeepAliveStrategy:(Lorg/apache/http/conn/ConnectionKeepAliveStrategy;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4e20.   (@monitorenter v1)
#L0a4e22.   v1.[|org:apache:http:impl:client:AbstractHttpClient.keepAliveStrategy|]  := v2 @type object;
#L0a4e26.   (@monitorexit v1)
#L0a4e28.   return @void ;
#L0a4e2a.   v0:= Exception  @type object;
#L0a4e2c.   (@monitorexit v1)
#L0a4e2e.   throw v0;
  catch  [|any|] @[L0a4e22..L0a4e26] goto L0a4e2a;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setParams|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setParams:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4e4c.   (@monitorenter v1)
#L0a4e4e.   v1.[|org:apache:http:impl:client:AbstractHttpClient.defaultParams|]  := v2 @type object;
#L0a4e52.   (@monitorexit v1)
#L0a4e54.   return @void ;
#L0a4e56.   v0:= Exception  @type object;
#L0a4e58.   (@monitorexit v1)
#L0a4e5a.   throw v0;
  catch  [|any|] @[L0a4e4e..L0a4e52] goto L0a4e56;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setProxyAuthenticationHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:AuthenticationHandler|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setProxyAuthenticationHandler:(Lorg/apache/http/client/AuthenticationHandler;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4e78.   (@monitorenter v1)
#L0a4e7a.   v1.[|org:apache:http:impl:client:AbstractHttpClient.proxyAuthHandler|]  := v2 @type object;
#L0a4e7e.   (@monitorexit v1)
#L0a4e80.   return @void ;
#L0a4e82.   v0:= Exception  @type object;
#L0a4e84.   (@monitorexit v1)
#L0a4e86.   throw v0;
  catch  [|any|] @[L0a4e7a..L0a4e7e] goto L0a4e82;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setRedirectHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:RedirectHandler|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setRedirectHandler:(Lorg/apache/http/client/RedirectHandler;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4ea4.   (@monitorenter v1)
#L0a4ea6.   v1.[|org:apache:http:impl:client:AbstractHttpClient.redirectHandler|]  := v2 @type object;
#L0a4eaa.   (@monitorexit v1)
#L0a4eac.   return @void ;
#L0a4eae.   v0:= Exception  @type object;
#L0a4eb0.   (@monitorexit v1)
#L0a4eb2.   throw v0;
  catch  [|any|] @[L0a4ea6..L0a4eaa] goto L0a4eae;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setReuseStrategy|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:ConnectionReuseStrategy|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setReuseStrategy:(Lorg/apache/http/ConnectionReuseStrategy;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4ed0.   (@monitorenter v1)
#L0a4ed2.   v1.[|org:apache:http:impl:client:AbstractHttpClient.reuseStrategy|]  := v2 @type object;
#L0a4ed6.   (@monitorexit v1)
#L0a4ed8.   return @void ;
#L0a4eda.   v0:= Exception  @type object;
#L0a4edc.   (@monitorexit v1)
#L0a4ede.   throw v0;
  catch  [|any|] @[L0a4ed2..L0a4ed6] goto L0a4eda;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setRoutePlanner|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoutePlanner|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setRoutePlanner:(Lorg/apache/http/conn/routing/HttpRoutePlanner;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4efc.   (@monitorenter v1)
#L0a4efe.   v1.[|org:apache:http:impl:client:AbstractHttpClient.routePlanner|]  := v2 @type object;
#L0a4f02.   (@monitorexit v1)
#L0a4f04.   return @void ;
#L0a4f06.   v0:= Exception  @type object;
#L0a4f08.   (@monitorexit v1)
#L0a4f0a.   throw v0;
  catch  [|any|] @[L0a4efe..L0a4f02] goto L0a4f06;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setTargetAuthenticationHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:AuthenticationHandler|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setTargetAuthenticationHandler:(Lorg/apache/http/client/AuthenticationHandler;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4f28.   (@monitorenter v1)
#L0a4f2a.   v1.[|org:apache:http:impl:client:AbstractHttpClient.targetAuthHandler|]  := v2 @type object;
#L0a4f2e.   (@monitorexit v1)
#L0a4f30.   return @void ;
#L0a4f32.   v0:= Exception  @type object;
#L0a4f34.   (@monitorexit v1)
#L0a4f36.   throw v0;
  catch  [|any|] @[L0a4f2a..L0a4f2e] goto L0a4f32;

   }
    procedure [|void|] [|org:apache:http:impl:client:AbstractHttpClient.setUserTokenHandler|] ([|org:apache:http:impl:client:AbstractHttpClient|] v1 @type (this), [|org:apache:http:client:UserTokenHandler|] v2 @type (object)) @owner [|org:apache:http:impl:client:AbstractHttpClient|] @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.setUserTokenHandler:(Lorg/apache/http/client/UserTokenHandler;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a4f54.   (@monitorenter v1)
#L0a4f56.   v1.[|org:apache:http:impl:client:AbstractHttpClient.userTokenHandler|]  := v2 @type object;
#L0a4f5a.   (@monitorexit v1)
#L0a4f5c.   return @void ;
#L0a4f5e.   v0:= Exception  @type object;
#L0a4f60.   (@monitorexit v1)
#L0a4f62.   throw v0;
  catch  [|any|] @[L0a4f56..L0a4f5a] goto L0a4f5e;

   }
record [|org:apache:http:impl:client:BasicCookieStore|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:CookieStore|] {
      [|java:util:Comparator|] [|org:apache:http:impl:client:BasicCookieStore.cookieComparator|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:ArrayList|] [|org:apache:http:impl:client:BasicCookieStore.cookies|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCookieStore.<init>|] ([|org:apache:http:impl:client:BasicCookieStore|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a4f80.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a4f86.   v0:= new [|java:util:ArrayList|];
#L0a4f8a.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0a4f90.   v1.[|org:apache:http:impl:client:BasicCookieStore.cookies|]  := v0 @type object;
#L0a4f94.   v0:= new [|org:apache:http:cookie:CookieIdentityComparator|];
#L0a4f98.   call temp:=  [|org:apache:http:cookie:CookieIdentityComparator.<init>|](v0) @signature [|Lorg/apache/http/cookie/CookieIdentityComparator;.<init>:()V|] @classDescriptor [|org:apache:http:cookie:CookieIdentityComparator|] @type direct;
#L0a4f9e.   v1.[|org:apache:http:impl:client:BasicCookieStore.cookieComparator|]  := v0 @type object;
#L0a4fa2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCookieStore.addCookie|] ([|org:apache:http:impl:client:BasicCookieStore|] v3 @type (this), [|org:apache:http:cookie:Cookie|] v4 @type (object)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.addCookie:(Lorg/apache/http/cookie/Cookie;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a4fb4.   (@monitorenter v3)
#L0a4fb6.   if v4 == 0 then goto L0a5010;
#L0a4fba.   v1:= v3.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a4fbe.   call temp:=  [|java:util:ArrayList.iterator|](v1) @signature [|Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a4fc4.   v0:= temp  @type object;
#L0a4fc6.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a4fcc.   v1:= temp;
#L0a4fce.   if v1 == 0 then goto L0a4ff0;
#L0a4fd2.   v1:= v3.[|org:apache:http:impl:client:BasicCookieStore.cookieComparator|]   @type object;
#L0a4fd6.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a4fdc.   v2:= temp  @type object;
#L0a4fde.   call temp:=  [|java:util:Comparator.compare|](v1, v4, v2) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L0a4fe4.   v1:= temp;
#L0a4fe6.   if v1 != 0 then goto L0a4fc6;
#L0a4fea.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a4ff0.   v1:= new [|java:util:Date|];
#L0a4ff4.   call temp:=  [|java:util:Date.<init>|](v1) @signature [|Ljava/util/Date;.<init>:()V|] @classDescriptor [|java:util:Date|] @type direct;
#L0a4ffa.   call temp:=  [|org:apache:http:cookie:Cookie.isExpired|](v4, v1) @signature [|Lorg/apache/http/cookie/Cookie;.isExpired:(Ljava/util/Date;)Z|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a5000.   v1:= temp;
#L0a5002.   if v1 != 0 then goto L0a5010;
#L0a5006.   v1:= v3.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a500a.   call temp:=  [|java:util:ArrayList.add|](v1, v4) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a5010.   (@monitorexit v3)
#L0a5012.   return @void ;
#L0a5014.   v1:= Exception  @type object;
#L0a5016.   (@monitorexit v3)
#L0a5018.   throw v1;
  catch  [|any|] @[L0a4fba..L0a5010] goto L0a5014;

   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCookieStore.addCookies|] ([|org:apache:http:impl:client:BasicCookieStore|] v5 @type (this), [|org:apache:http:cookie:Cookie|][] v6 @type (object)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.addCookies:([Lorg/apache/http/cookie/Cookie;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a5038.   (@monitorenter v5)
#L0a503a.   if v6 == 0 then goto L0a5058;
#L0a503e.   v0:= v6  @type object;
#L0a5040.   v3:= v0.length;
#L0a5042.   v2:= 0  @length 4;
#L0a5044.   if v2 >= v3 then goto L0a5058;
#L0a5048.   v1:= v0[v2]  @type object;
#L0a504c.   call temp:=  [|org:apache:http:impl:client:BasicCookieStore.addCookie|](v5, v1) @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.addCookie:(Lorg/apache/http/cookie/Cookie;)V|] @classDescriptor [|org:apache:http:impl:client:BasicCookieStore|] @type virtual;
#L0a5052.   v2:= v2 + 1;
#L0a5056.   goto L0a5044;
#L0a5058.   (@monitorexit v5)
#L0a505a.   return @void ;
#L0a505c.   v4:= Exception  @type object;
#L0a505e.   (@monitorexit v5)
#L0a5060.   throw v4;
  catch  [|any|] @[L0a5040..L0a5052] goto L0a505c;

   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCookieStore.clear|] ([|org:apache:http:impl:client:BasicCookieStore|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.clear:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a5080.   (@monitorenter v1)
#L0a5082.   v0:= v1.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a5086.   call temp:=  [|java:util:ArrayList.clear|](v0) @signature [|Ljava/util/ArrayList;.clear:()V|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a508c.   (@monitorexit v1)
#L0a508e.   return @void ;
#L0a5090.   v0:= Exception  @type object;
#L0a5092.   (@monitorexit v1)
#L0a5094.   throw v0;
  catch  [|any|] @[L0a5082..L0a508c] goto L0a5090;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:BasicCookieStore.clearExpired|] ([|org:apache:http:impl:client:BasicCookieStore|] v3 @type (this), [|java:util:Date|] v4 @type (object)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.clearExpired:(Ljava/util/Date;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a50b4.   (@monitorenter v3)
#L0a50b6.   if v4 != 0 then goto L0a50c0;
#L0a50ba.   v1:= 0  @length 4;
#L0a50bc.   (@monitorexit v3)
#L0a50be.   return v1;
#L0a50c0.   v1:= 0  @length 4;
#L0a50c2.   v2:= v3.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a50c6.   call temp:=  [|java:util:ArrayList.iterator|](v2) @signature [|Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a50cc.   v0:= temp  @type object;
#L0a50ce.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a50d4.   v2:= temp;
#L0a50d6.   if v2 == 0 then goto L0a50bc;
#L0a50da.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a50e0.   v2:= temp  @type object;
#L0a50e2.   v2:= ([|org:apache:http:cookie:Cookie|])v2;
#L0a50e6.   call temp:=  [|org:apache:http:cookie:Cookie.isExpired|](v2, v4) @signature [|Lorg/apache/http/cookie/Cookie;.isExpired:(Ljava/util/Date;)Z|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0a50ec.   v2:= temp;
#L0a50ee.   if v2 == 0 then goto L0a50ce;
#L0a50f2.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a50f8.   v1:= 1  @length 4;
#L0a50fa.   goto L0a50ce;
#L0a50fc.   v2:= Exception  @type object;
#L0a50fe.   (@monitorexit v3)
#L0a5100.   throw v2;
  catch  [|any|] @[L0a50c2..L0a50f8] goto L0a50fc;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:client:BasicCookieStore.getCookies|] ([|org:apache:http:impl:client:BasicCookieStore|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.getCookies:()Ljava/util/List;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a5120.   (@monitorenter v1)
#L0a5122.   v0:= v1.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a5126.   call temp:=  [|java:util:Collections.unmodifiableList|](v0) @signature [|Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L0a512c.   v0:= temp  @type object;
#L0a512e.   (@monitorexit v1)
#L0a5130.   return v0  @type object;
#L0a5132.   v0:= Exception  @type object;
#L0a5134.   (@monitorexit v1)
#L0a5136.   throw v0;
  catch  [|any|] @[L0a5122..L0a512c] goto L0a5132;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:client:BasicCookieStore.toString|] ([|org:apache:http:impl:client:BasicCookieStore|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCookieStore|] @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5154.   v0:= v1.[|org:apache:http:impl:client:BasicCookieStore.cookies|]   @type object;
#L0a5158.   call temp:=  [|java:util:ArrayList.toString|](v0) @signature [|Ljava/util/ArrayList;.toString:()Ljava/lang/String;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a515e.   v0:= temp  @type object;
#L0a5160.   return v0  @type object;

   }
record [|org:apache:http:impl:client:BasicCredentialsProvider|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:CredentialsProvider|] {
      [|java:util:HashMap|] [|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCredentialsProvider.<init>|] ([|org:apache:http:impl:client:BasicCredentialsProvider|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a5174.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a517a.   v0:= new [|java:util:HashMap|];
#L0a517e.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a5184.   v1.[|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]  := v0 @type object;
#L0a5188.   return @void ;

   }
    procedure [|org:apache:http:auth:Credentials|] [|org:apache:http:impl:client:BasicCredentialsProvider.matchCredentials|] ([|java:util:HashMap|] v7 @type (object), [|org:apache:http:auth:AuthScope|] v8 @type (object)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.matchCredentials:(Ljava/util/HashMap;Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a519c.   call temp:=  [|java:util:HashMap.get|](v7, v8) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a51a2.   v2:= temp  @type object;
#L0a51a4.   v2:= ([|org:apache:http:auth:Credentials|])v2;
#L0a51a8.   if v2 != 0 then goto L0a51fa;
#L0a51ac.   v1:= -1  @length 4;
#L0a51ae.   v0:= 0  @length 4;
#L0a51b0.   call temp:=  [|java:util:HashMap.keySet|](v7) @signature [|Ljava/util/HashMap;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a51b6.   v6:= temp  @type object;
#L0a51b8.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0a51be.   v5:= temp  @type object;
#L0a51c0.   call temp:=  [|java:util:Iterator.hasNext|](v5) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a51c6.   v6:= temp;
#L0a51c8.   if v6 == 0 then goto L0a51ea;
#L0a51cc.   call temp:=  [|java:util:Iterator.next|](v5) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a51d2.   v3:= temp  @type object;
#L0a51d4.   v3:= ([|org:apache:http:auth:AuthScope|])v3;
#L0a51d8.   call temp:=  [|org:apache:http:auth:AuthScope.match|](v8, v3) @signature [|Lorg/apache/http/auth/AuthScope;.match:(Lorg/apache/http/auth/AuthScope;)I|] @classDescriptor [|org:apache:http:auth:AuthScope|] @type virtual;
#L0a51de.   v4:= temp;
#L0a51e0.   if v4 <= v1 then goto L0a51c0;
#L0a51e4.   v1:= v4;
#L0a51e6.   v0:= v3  @type object;
#L0a51e8.   goto L0a51c0;
#L0a51ea.   if v0 == 0 then goto L0a51fa;
#L0a51ee.   call temp:=  [|java:util:HashMap.get|](v7, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a51f4.   v2:= temp  @type object;
#L0a51f6.   v2:= ([|org:apache:http:auth:Credentials|])v2;
#L0a51fa.   return v2  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCredentialsProvider.clear|] ([|org:apache:http:impl:client:BasicCredentialsProvider|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.clear:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0a520c.   (@monitorenter v1)
#L0a520e.   v0:= v1.[|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]   @type object;
#L0a5212.   call temp:=  [|java:util:HashMap.clear|](v0) @signature [|Ljava/util/HashMap;.clear:()V|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a5218.   (@monitorexit v1)
#L0a521a.   return @void ;
#L0a521c.   v0:= Exception  @type object;
#L0a521e.   (@monitorexit v1)
#L0a5220.   throw v0;
  catch  [|any|] @[L0a520e..L0a5218] goto L0a521c;

   }
    procedure [|org:apache:http:auth:Credentials|] [|org:apache:http:impl:client:BasicCredentialsProvider.getCredentials|] ([|org:apache:http:impl:client:BasicCredentialsProvider|] v2 @type (this), [|org:apache:http:auth:AuthScope|] v3 @type (object)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.getCredentials:(Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0a5240.   (@monitorenter v2)
#L0a5242.   if v3 != 0 then goto L0a525c;
#L0a5246.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a524a.   v1:= "Authentication scope may not be null" @type (object, string);
#L0a524e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5254.   throw v0;
#L0a5256.   v0:= Exception  @type object;
#L0a5258.   (@monitorexit v2)
#L0a525a.   throw v0;
#L0a525c.   v0:= v2.[|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]   @type object;
#L0a5260.   call temp:=  [|org:apache:http:impl:client:BasicCredentialsProvider.matchCredentials|](v0, v3) @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.matchCredentials:(Ljava/util/HashMap;Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:impl:client:BasicCredentialsProvider|] @type static;
#L0a5266.   v0:= temp  @type object;
#L0a5268.   (@monitorexit v2)
#L0a526a.   return v0  @type object;
  catch  [|any|] @[L0a5246..L0a5256] goto L0a5256;
  catch  [|any|] @[L0a525c..L0a5266] goto L0a5256;

   }
    procedure [|void|] [|org:apache:http:impl:client:BasicCredentialsProvider.setCredentials|] ([|org:apache:http:impl:client:BasicCredentialsProvider|] v2 @type (this), [|org:apache:http:auth:AuthScope|] v3 @type (object), [|org:apache:http:auth:Credentials|] v4 @type (object)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.setCredentials:(Lorg/apache/http/auth/AuthScope;Lorg/apache/http/auth/Credentials;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0a5290.   (@monitorenter v2)
#L0a5292.   if v3 != 0 then goto L0a52ac;
#L0a5296.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a529a.   v1:= "Authentication scope may not be null" @type (object, string);
#L0a529e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a52a4.   throw v0;
#L0a52a6.   v0:= Exception  @type object;
#L0a52a8.   (@monitorexit v2)
#L0a52aa.   throw v0;
#L0a52ac.   v0:= v2.[|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]   @type object;
#L0a52b0.   call temp:=  [|java:util:HashMap.put|](v0, v3, v4) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a52b6.   (@monitorexit v2)
#L0a52b8.   return @void ;
  catch  [|any|] @[L0a5296..L0a52a6] goto L0a52a6;
  catch  [|any|] @[L0a52ac..L0a52b6] goto L0a52a6;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:client:BasicCredentialsProvider.toString|] ([|org:apache:http:impl:client:BasicCredentialsProvider|] v1 @type (this)) @owner [|org:apache:http:impl:client:BasicCredentialsProvider|] @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a52e0.   v0:= v1.[|org:apache:http:impl:client:BasicCredentialsProvider.credMap|]   @type object;
#L0a52e4.   call temp:=  [|java:util:HashMap.toString|](v0) @signature [|Ljava/util/HashMap;.toString:()Ljava/lang/String;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0a52ea.   v0:= temp  @type object;
#L0a52ec.   return v0  @type object;

   }
record [|org:apache:http:impl:client:BasicResponseHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:ResponseHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:BasicResponseHandler.<init>|] ([|org:apache:http:impl:client:BasicResponseHandler|] v0 @type (this)) @owner [|org:apache:http:impl:client:BasicResponseHandler|] @signature [|Lorg/apache/http/impl/client/BasicResponseHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5300.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a5306.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:BasicResponseHandler.handleResponse|] ([|org:apache:http:impl:client:BasicResponseHandler|] v1 @type (this), [|org:apache:http:HttpResponse|] v2 @type (object)) @owner [|org:apache:http:impl:client:BasicResponseHandler|] @signature [|Lorg/apache/http/impl/client/BasicResponseHandler;.handleResponse:(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0a5318.   call temp:=  [|org:apache:http:impl:client:BasicResponseHandler.handleResponse|](v1, v2) @signature [|Lorg/apache/http/impl/client/BasicResponseHandler;.handleResponse:(Lorg/apache/http/HttpResponse;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:client:BasicResponseHandler|] @type virtual;
#L0a531e.   v0:= temp  @type object;
#L0a5320.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:client:BasicResponseHandler.handleResponse|] ([|org:apache:http:impl:client:BasicResponseHandler|] v5 @type (this), [|org:apache:http:HttpResponse|] v6 @type (object)) @owner [|org:apache:http:impl:client:BasicResponseHandler|] @signature [|Lorg/apache/http/impl/client/BasicResponseHandler;.handleResponse:(Lorg/apache/http/HttpResponse;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a5334.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v6) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a533a.   v1:= temp  @type object;
#L0a533c.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a5342.   v2:= temp;
#L0a5344.   v3:= 300  @length 16;
#L0a5348.   if v2 < v3 then goto L0a5368;
#L0a534c.   v2:= new [|org:apache:http:client:HttpResponseException|];
#L0a5350.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a5356.   v3:= temp;
#L0a5358.   call temp:=  [|org:apache:http:StatusLine.getReasonPhrase|](v1) @signature [|Lorg/apache/http/StatusLine;.getReasonPhrase:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a535e.   v4:= temp  @type object;
#L0a5360.   call temp:=  [|org:apache:http:client:HttpResponseException.<init>|](v2, v3, v4) @signature [|Lorg/apache/http/client/HttpResponseException;.<init>:(ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:client:HttpResponseException|] @type direct;
#L0a5366.   throw v2;
#L0a5368.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v6) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a536e.   v0:= temp  @type object;
#L0a5370.   if v0 != 0 then goto L0a5378;
#L0a5374.   v2:= 0  @length 4;
#L0a5376.   return v2  @type object;
#L0a5378.   call temp:=  [|org:apache:http:util:EntityUtils.toString|](v0) @signature [|Lorg/apache/http/util/EntityUtils;.toString:(Lorg/apache/http/HttpEntity;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:EntityUtils|] @type static;
#L0a537e.   v2:= temp  @type object;
#L0a5380.   goto L0a5376;

   }
record [|org:apache:http:params:HttpParams|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.copy|] () @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.copy:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:params:HttpParams.getBooleanParameter|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|org:apache:http:params:HttpParams.getDoubleParameter|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.getDoubleParameter:(Ljava/lang/String;D)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:params:HttpParams.getIntParameter|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|org:apache:http:params:HttpParams.getLongParameter|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.getLongParameter:(Ljava/lang/String;J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|org:apache:http:params:HttpParams.getParameter|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:params:HttpParams.isParameterFalse|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.isParameterFalse:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:params:HttpParams.isParameterTrue|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.isParameterTrue:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:params:HttpParams.removeParameter|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.removeParameter:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.setBooleanParameter|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.setDoubleParameter|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.setDoubleParameter:(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.setIntParameter|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.setLongParameter|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.setLongParameter:(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:HttpParams.setParameter|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|org:apache:http:params:HttpParams|] @signature [|Lorg/apache/http/params/HttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:params:AbstractHttpParams|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:params:HttpParams|] {
   }
    procedure [|void|] [|org:apache:http:params:AbstractHttpParams.<init>|] ([|org:apache:http:params:AbstractHttpParams|] v0 @type (this)) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0a5394.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a539a.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:params:AbstractHttpParams.getBooleanParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a53ac.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getParameter|](v1, v2) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a53b2.   v0:= temp  @type object;
#L0a53b4.   if v0 != 0 then goto L0a53ba;
#L0a53b8.   return v3;
#L0a53ba.   v0:= ([|java:lang:Boolean|])v0;
#L0a53be.   call temp:=  [|java:lang:Boolean.booleanValue|](v0) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L0a53c4.   v3:= temp;
#L0a53c6.   goto L0a53b8;

   }
    procedure [|double|] [|org:apache:http:params:AbstractHttpParams.getDoubleParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|double|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.getDoubleParameter:(Ljava/lang/String;D)D|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a53d8.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getParameter|](v1, v2) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a53de.   v0:= temp  @type object;
#L0a53e0.   if v0 != 0 then goto L0a53e6;
#L0a53e4.   return v3  @type wide;
#L0a53e6.   v0:= ([|java:lang:Double|])v0;
#L0a53ea.   call temp:=  [|java:lang:Double.doubleValue|](v0) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L0a53f0.   v3:= temp  @type wide;
#L0a53f2.   goto L0a53e4;

   }
    procedure [|int|] [|org:apache:http:params:AbstractHttpParams.getIntParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5404.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getParameter|](v1, v2) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a540a.   v0:= temp  @type object;
#L0a540c.   if v0 != 0 then goto L0a5412;
#L0a5410.   return v3;
#L0a5412.   v0:= ([|java:lang:Integer|])v0;
#L0a5416.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0a541c.   v3:= temp;
#L0a541e.   goto L0a5410;

   }
    procedure [|long|] [|org:apache:http:params:AbstractHttpParams.getLongParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|long|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.getLongParameter:(Ljava/lang/String;J)J|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5430.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getParameter|](v1, v2) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a5436.   v0:= temp  @type object;
#L0a5438.   if v0 != 0 then goto L0a543e;
#L0a543c.   return v3  @type wide;
#L0a543e.   v0:= ([|java:lang:Long|])v0;
#L0a5442.   call temp:=  [|java:lang:Long.longValue|](v0) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L0a5448.   v3:= temp  @type wide;
#L0a544a.   goto L0a543c;

   }
    procedure [|boolean|] [|org:apache:http:params:AbstractHttpParams.isParameterFalse|] ([|org:apache:http:params:AbstractHttpParams|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.isParameterFalse:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a545c.   v0:= 0  @length 4;
#L0a545e.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getBooleanParameter|](v2, v3, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a5464.   v1:= temp;
#L0a5466.   if v1 != 0 then goto L0a546c;
#L0a546a.   v0:= 1  @length 4;
#L0a546c.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:params:AbstractHttpParams.isParameterTrue|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.isParameterTrue:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5480.   v0:= 0  @length 4;
#L0a5482.   call temp:=  [|org:apache:http:params:AbstractHttpParams.getBooleanParameter|](v1, v2, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a5488.   v0:= temp;
#L0a548a.   return v0;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:AbstractHttpParams.setBooleanParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.setBooleanParameter:(Ljava/lang/String;Z)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a549c.   if v3 == 0 then goto L0a54ac;
#L0a54a0.   v0:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L0a54a4.   call temp:=  [|org:apache:http:params:AbstractHttpParams.setParameter|](v1, v2, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a54aa.   return v1  @type object;
#L0a54ac.   v0:= @@[|java:lang:Boolean.FALSE|]   @type object;
#L0a54b0.   goto L0a54a4;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:AbstractHttpParams.setDoubleParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|double|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.setDoubleParameter:(Ljava/lang/String;D)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a54c4.   v0:= new [|java:lang:Double|];
#L0a54c8.   call temp:=  [|java:lang:Double.<init>|](v0, v3, v4) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0a54ce.   call temp:=  [|org:apache:http:params:AbstractHttpParams.setParameter|](v1, v2, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a54d4.   return v1  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:AbstractHttpParams.setIntParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a54e8.   v0:= new [|java:lang:Integer|];
#L0a54ec.   call temp:=  [|java:lang:Integer.<init>|](v0, v3) @signature [|Ljava/lang/Integer;.<init>:(I)V|] @classDescriptor [|java:lang:Integer|] @type direct;
#L0a54f2.   call temp:=  [|org:apache:http:params:AbstractHttpParams.setParameter|](v1, v2, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a54f8.   return v1  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:params:AbstractHttpParams.setLongParameter|] ([|org:apache:http:params:AbstractHttpParams|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|long|] v3) @owner [|org:apache:http:params:AbstractHttpParams|] @signature [|Lorg/apache/http/params/AbstractHttpParams;.setLongParameter:(Ljava/lang/String;J)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a550c.   v0:= new [|java:lang:Long|];
#L0a5510.   call temp:=  [|java:lang:Long.<init>|](v0, v3, v4) @signature [|Ljava/lang/Long;.<init>:(J)V|] @classDescriptor [|java:lang:Long|] @type direct;
#L0a5516.   call temp:=  [|org:apache:http:params:AbstractHttpParams.setParameter|](v1, v2, v0) @signature [|Lorg/apache/http/params/AbstractHttpParams;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type virtual;
#L0a551c.   return v1  @type object;

   }
record [|org:apache:http:impl:client:ClientParamsStack|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:params:AbstractHttpParams|] {
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.applicationParams|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.clientParams|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:client:ClientParamsStack.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.overrideParams|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.requestParams|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:ClientParamsStack.<init>|] ([|org:apache:http:impl:client:ClientParamsStack|] v4 @type (this), [|org:apache:http:impl:client:ClientParamsStack|] v5 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/impl/client/ClientParamsStack;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a5530.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getApplicationParams|](v5) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getApplicationParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a5536.   v0:= temp  @type object;
#L0a5538.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getClientParams|](v5) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getClientParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a553e.   v1:= temp  @type object;
#L0a5540.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getRequestParams|](v5) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getRequestParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a5546.   v2:= temp  @type object;
#L0a5548.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getOverrideParams|](v5) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getOverrideParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a554e.   v3:= temp  @type object;
#L0a5550.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.<init>|](v4, v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type direct;
#L0a5556.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:ClientParamsStack.<init>|] ([|org:apache:http:impl:client:ClientParamsStack|] v0 @type (this), [|org:apache:http:impl:client:ClientParamsStack|] v1 @type (object), [|org:apache:http:params:HttpParams|] v2 @type (object), [|org:apache:http:params:HttpParams|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/impl/client/ClientParamsStack;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5568.   if v2 == 0 then goto L0a5580;
#L0a556c.   if v3 == 0 then goto L0a558a;
#L0a5570.   if v4 == 0 then goto L0a5594;
#L0a5574.   if v5 == 0 then goto L0a559e;
#L0a5578.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.<init>|](v0, v2, v3, v4, v5) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type direct;
#L0a557e.   return @void ;
#L0a5580.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getApplicationParams|](v1) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getApplicationParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a5586.   v2:= temp  @type object;
#L0a5588.   goto L0a556c;
#L0a558a.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getClientParams|](v1) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getClientParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a5590.   v3:= temp  @type object;
#L0a5592.   goto L0a5570;
#L0a5594.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getRequestParams|](v1) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getRequestParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a559a.   v4:= temp  @type object;
#L0a559c.   goto L0a5574;
#L0a559e.   call temp:=  [|org:apache:http:impl:client:ClientParamsStack.getOverrideParams|](v1) @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getOverrideParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:ClientParamsStack|] @type virtual;
#L0a55a4.   v5:= temp  @type object;
#L0a55a6.   goto L0a5578;

   }
    procedure [|void|] [|org:apache:http:impl:client:ClientParamsStack.<init>|] ([|org:apache:http:impl:client:ClientParamsStack|] v1 @type (this), [|org:apache:http:params:HttpParams|] v2 @type (object), [|org:apache:http:params:HttpParams|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a55b8.   call temp:=  [|org:apache:http:params:AbstractHttpParams.<init>|](v1) @signature [|Lorg/apache/http/params/AbstractHttpParams;.<init>:()V|] @classDescriptor [|org:apache:http:params:AbstractHttpParams|] @type direct;
#L0a55be.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a55c4.   v0:= temp  @type object;
#L0a55c6.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a55cc.   v0:= temp  @type object;
#L0a55ce.   v1.[|org:apache:http:impl:client:ClientParamsStack.log|]  := v0 @type object;
#L0a55d2.   v1.[|org:apache:http:impl:client:ClientParamsStack.applicationParams|]  := v2 @type object;
#L0a55d6.   v1.[|org:apache:http:impl:client:ClientParamsStack.clientParams|]  := v3 @type object;
#L0a55da.   v1.[|org:apache:http:impl:client:ClientParamsStack.requestParams|]  := v4 @type object;
#L0a55de.   v1.[|org:apache:http:impl:client:ClientParamsStack.overrideParams|]  := v5 @type object;
#L0a55e2.   return @void ;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.copy|] ([|org:apache:http:impl:client:ClientParamsStack|] v0 @type (this)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.copy:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
      
#L0a55f4.   return v0  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.getApplicationParams|] ([|org:apache:http:impl:client:ClientParamsStack|] v1 @type (this)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getApplicationParams:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a5608.   v0:= v1.[|org:apache:http:impl:client:ClientParamsStack.applicationParams|]   @type object;
#L0a560c.   return v0  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.getClientParams|] ([|org:apache:http:impl:client:ClientParamsStack|] v1 @type (this)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getClientParams:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a5620.   v0:= v1.[|org:apache:http:impl:client:ClientParamsStack.clientParams|]   @type object;
#L0a5624.   return v0  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.getOverrideParams|] ([|org:apache:http:impl:client:ClientParamsStack|] v1 @type (this)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getOverrideParams:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a5638.   v0:= v1.[|org:apache:http:impl:client:ClientParamsStack.overrideParams|]   @type object;
#L0a563c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:ClientParamsStack.getParameter|] ([|org:apache:http:impl:client:ClientParamsStack|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a5650.   if v5 != 0 then goto L0a5664;
#L0a5654.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a5658.   v2:= "Parameter name must not be null." @type (object, string);
#L0a565c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5662.   throw v1;
#L0a5664.   v0:= 0  @length 4;
#L0a5666.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.overrideParams|]   @type object;
#L0a566a.   if v1 == 0 then goto L0a567a;
#L0a566e.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.overrideParams|]   @type object;
#L0a5672.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v1, v5) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a5678.   v0:= temp  @type object;
#L0a567a.   if v0 != 0 then goto L0a5692;
#L0a567e.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.requestParams|]   @type object;
#L0a5682.   if v1 == 0 then goto L0a5692;
#L0a5686.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.requestParams|]   @type object;
#L0a568a.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v1, v5) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a5690.   v0:= temp  @type object;
#L0a5692.   if v0 != 0 then goto L0a56aa;
#L0a5696.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.clientParams|]   @type object;
#L0a569a.   if v1 == 0 then goto L0a56aa;
#L0a569e.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.clientParams|]   @type object;
#L0a56a2.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v1, v5) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a56a8.   v0:= temp  @type object;
#L0a56aa.   if v0 != 0 then goto L0a56c2;
#L0a56ae.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.applicationParams|]   @type object;
#L0a56b2.   if v1 == 0 then goto L0a56c2;
#L0a56b6.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.applicationParams|]   @type object;
#L0a56ba.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v1, v5) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a56c0.   v0:= temp  @type object;
#L0a56c2.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.log|]   @type object;
#L0a56c6.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v1) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a56cc.   v1:= temp;
#L0a56ce.   if v1 == 0 then goto L0a5716;
#L0a56d2.   v1:= v4.[|org:apache:http:impl:client:ClientParamsStack.log|]   @type object;
#L0a56d6.   v2:= new [|java:lang:StringBuilder|];
#L0a56da.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a56e0.   v3:= "'" @type (object, string);
#L0a56e4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a56ea.   v2:= temp  @type object;
#L0a56ec.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a56f2.   v2:= temp  @type object;
#L0a56f4.   v3:= "': " @type (object, string);
#L0a56f8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a56fe.   v2:= temp  @type object;
#L0a5700.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5706.   v2:= temp  @type object;
#L0a5708.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a570e.   v2:= temp  @type object;
#L0a5710.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a5716.   return v0  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.getRequestParams|] ([|org:apache:http:impl:client:ClientParamsStack|] v1 @type (this)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.getRequestParams:()Lorg/apache/http/params/HttpParams;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a5728.   v0:= v1.[|org:apache:http:impl:client:ClientParamsStack.requestParams|]   @type object;
#L0a572c.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:ClientParamsStack.removeParameter|] ([|org:apache:http:impl:client:ClientParamsStack|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.removeParameter:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a5740.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0a5744.   v1:= "Removing parameters in a stack is not supported." @type (object, string);
#L0a5748.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0a574e.   throw v0;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:ClientParamsStack.setParameter|] ([|org:apache:http:impl:client:ClientParamsStack|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|org:apache:http:impl:client:ClientParamsStack|] @signature [|Lorg/apache/http/impl/client/ClientParamsStack;.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/params/HttpParams;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a5760.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0a5764.   v1:= "Setting parameters in a stack is not supported." @type (object, string);
#L0a5768.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0a576e.   throw v0;

   }
record [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:ConnectionKeepAliveStrategy|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy.<init>|] ([|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|] v0 @type (this)) @owner [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|] @signature [|Lorg/apache/http/impl/client/DefaultConnectionKeepAliveStrategy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5780.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a5786.   return @void ;

   }
    procedure [|long|] [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy.getKeepAliveDuration|] ([|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|] v8 @type (this), [|org:apache:http:HttpResponse|] v9 @type (object), [|org:apache:http:protocol:HttpContext|] v10 @type (object)) @owner [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|] @signature [|Lorg/apache/http/impl/client/DefaultConnectionKeepAliveStrategy;.getKeepAliveDuration:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a5798.   if v9 != 0 then goto L0a57ac;
#L0a579c.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a57a0.   v5:= "HTTP response may not be null" @type (object, string);
#L0a57a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a57aa.   throw v4;
#L0a57ac.   v1:= new [|org:apache:http:message:BasicHeaderElementIterator|];
#L0a57b0.   v4:= "Keep-Alive" @type (object, string);
#L0a57b4.   call temp:=  [|org:apache:http:HttpResponse.headerIterator|](v9, v4) @signature [|Lorg/apache/http/HttpResponse;.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a57ba.   v4:= temp  @type object;
#L0a57bc.   call temp:=  [|org:apache:http:message:BasicHeaderElementIterator.<init>|](v1, v4) @signature [|Lorg/apache/http/message/BasicHeaderElementIterator;.<init>:(Lorg/apache/http/HeaderIterator;)V|] @classDescriptor [|org:apache:http:message:BasicHeaderElementIterator|] @type direct;
#L0a57c2.   call temp:=  [|org:apache:http:HeaderElementIterator.hasNext|](v1) @signature [|Lorg/apache/http/HeaderElementIterator;.hasNext:()Z|] @classDescriptor [|org:apache:http:HeaderElementIterator|] @type interface;
#L0a57c8.   v4:= temp;
#L0a57ca.   if v4 == 0 then goto L0a580a;
#L0a57ce.   call temp:=  [|org:apache:http:HeaderElementIterator.nextElement|](v1) @signature [|Lorg/apache/http/HeaderElementIterator;.nextElement:()Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:HeaderElementIterator|] @type interface;
#L0a57d4.   v0:= temp  @type object;
#L0a57d6.   call temp:=  [|org:apache:http:HeaderElement.getName|](v0) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0a57dc.   v2:= temp  @type object;
#L0a57de.   call temp:=  [|org:apache:http:HeaderElement.getValue|](v0) @signature [|Lorg/apache/http/HeaderElement;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0a57e4.   v3:= temp  @type object;
#L0a57e6.   if v3 == 0 then goto L0a57c2;
#L0a57ea.   v4:= "timeout" @type (object, string);
#L0a57ee.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v2, v4) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a57f4.   v4:= temp;
#L0a57f6.   if v4 == 0 then goto L0a57c2;
#L0a57fa.   call temp:=  [|java:lang:Long.parseLong|](v3) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J|] @classDescriptor [|java:lang:Long|] @type static;
#L0a5800.   v4:= temp  @type wide;
#L0a5802.   v6:= 1000  @length wide16;
#L0a5806.   v4:= v4 * v6  @type long;
#L0a5808.   return v4  @type wide;
#L0a580a.   v4:= -1  @length wide16;
#L0a580e.   goto L0a5808;
#L0a5810.   v4:= Exception  @type object;
#L0a5812.   goto L0a57c2;
  catch  [|java:lang:NumberFormatException|] @[L0a57fa..L0a5800] goto L0a5810;

   }
record [|org:apache:http:impl:client:DefaultHttpClient|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:client:AbstractHttpClient|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultHttpClient.<init>|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a5834.   v0:= 0  @length 4;
#L0a5836.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.<init>|](v1, v0, v0) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type direct;
#L0a583c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultHttpClient.<init>|] ([|org:apache:http:impl:client:DefaultHttpClient|] v0 @type (this), [|org:apache:http:conn:ClientConnectionManager|] v1 @type (object), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5850.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type direct;
#L0a5856.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultHttpClient.<init>|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this), [|org:apache:http:params:HttpParams|] v2 @type (object)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.<init>:(Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a5868.   v0:= 0  @length 4;
#L0a586a.   call temp:=  [|org:apache:http:impl:client:AbstractHttpClient.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/client/AbstractHttpClient;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:AbstractHttpClient|] @type direct;
#L0a5870.   return @void ;

   }
    procedure [|org:apache:http:auth:AuthSchemeRegistry|] [|org:apache:http:impl:client:DefaultHttpClient.createAuthSchemeRegistry|] ([|org:apache:http:impl:client:DefaultHttpClient|] v3 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createAuthSchemeRegistry:()Lorg/apache/http/auth/AuthSchemeRegistry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5884.   v0:= new [|org:apache:http:auth:AuthSchemeRegistry|];
#L0a5888.   call temp:=  [|org:apache:http:auth:AuthSchemeRegistry.<init>|](v0) @signature [|Lorg/apache/http/auth/AuthSchemeRegistry;.<init>:()V|] @classDescriptor [|org:apache:http:auth:AuthSchemeRegistry|] @type direct;
#L0a588e.   v1:= "Basic" @type (object, string);
#L0a5892.   v2:= new [|org:apache:http:impl:auth:BasicSchemeFactory|];
#L0a5896.   call temp:=  [|org:apache:http:impl:auth:BasicSchemeFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/auth/BasicSchemeFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:BasicSchemeFactory|] @type direct;
#L0a589c.   call temp:=  [|org:apache:http:auth:AuthSchemeRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/auth/AuthSchemeRegistry;.register:(Ljava/lang/String;Lorg/apache/http/auth/AuthSchemeFactory;)V|] @classDescriptor [|org:apache:http:auth:AuthSchemeRegistry|] @type virtual;
#L0a58a2.   v1:= "Digest" @type (object, string);
#L0a58a6.   v2:= new [|org:apache:http:impl:auth:DigestSchemeFactory|];
#L0a58aa.   call temp:=  [|org:apache:http:impl:auth:DigestSchemeFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/auth/DigestSchemeFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:auth:DigestSchemeFactory|] @type direct;
#L0a58b0.   call temp:=  [|org:apache:http:auth:AuthSchemeRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/auth/AuthSchemeRegistry;.register:(Ljava/lang/String;Lorg/apache/http/auth/AuthSchemeFactory;)V|] @classDescriptor [|org:apache:http:auth:AuthSchemeRegistry|] @type virtual;
#L0a58b6.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:client:DefaultHttpClient.createClientConnectionManager|] ([|org:apache:http:impl:client:DefaultHttpClient|] v11 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createClientConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0a58c8.   v6:= new [|org:apache:http:conn:scheme:SchemeRegistry|];
#L0a58cc.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.<init>|](v6) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.<init>:()V|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type direct;
#L0a58d2.   v7:= new [|org:apache:http:conn:scheme:Scheme|];
#L0a58d6.   v8:= "http" @type (object, string);
#L0a58da.   call temp:=  [|org:apache:http:conn:scheme:PlainSocketFactory.getSocketFactory|]() @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.getSocketFactory:()Lorg/apache/http/conn/scheme/PlainSocketFactory;|] @classDescriptor [|org:apache:http:conn:scheme:PlainSocketFactory|] @type static;
#L0a58e0.   v9:= temp  @type object;
#L0a58e2.   v10:= 80  @length 16;
#L0a58e6.   call temp:=  [|org:apache:http:conn:scheme:Scheme.<init>|](v7, v8, v9, v10) @signature [|Lorg/apache/http/conn/scheme/Scheme;.<init>:(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type direct;
#L0a58ec.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.register|](v6, v7) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.register:(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a58f2.   v7:= new [|org:apache:http:conn:scheme:Scheme|];
#L0a58f6.   v8:= "https" @type (object, string);
#L0a58fa.   call temp:=  [|org:apache:http:conn:ssl:SSLSocketFactory.getSocketFactory|]() @signature [|Lorg/apache/http/conn/ssl/SSLSocketFactory;.getSocketFactory:()Lorg/apache/http/conn/ssl/SSLSocketFactory;|] @classDescriptor [|org:apache:http:conn:ssl:SSLSocketFactory|] @type static;
#L0a5900.   v9:= temp  @type object;
#L0a5902.   v10:= 443  @length 16;
#L0a5906.   call temp:=  [|org:apache:http:conn:scheme:Scheme.<init>|](v7, v8, v9, v10) @signature [|Lorg/apache/http/conn/scheme/Scheme;.<init>:(Ljava/lang/String;Lorg/apache/http/conn/scheme/SocketFactory;I)V|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type direct;
#L0a590c.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.register|](v6, v7) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.register:(Lorg/apache/http/conn/scheme/Scheme;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a5912.   v2:= 0  @length 4;
#L0a5914.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getParams|](v11) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a591a.   v5:= temp  @type object;
#L0a591c.   v4:= 0  @length 4;
#L0a591e.   v7:= "http.connection-manager.factory-object" @type (object, string);
#L0a5922.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v5, v7) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a5928.   v4:= temp  @type object;
#L0a592a.   v4:= ([|org:apache:http:conn:ClientConnectionManagerFactory|])v4;
#L0a592e.   if v4 != 0 then goto L0a595a;
#L0a5932.   v7:= "http.connection-manager.factory-class-name" @type (object, string);
#L0a5936.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v5, v7) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a593c.   v0:= temp  @type object;
#L0a593e.   v0:= ([|java:lang:String|])v0;
#L0a5942.   if v0 == 0 then goto L0a595a;
#L0a5946.   call temp:=  [|java:lang:Class.forName|](v0) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L0a594c.   v1:= temp  @type object;
#L0a594e.   call temp:=  [|java:lang:Class.newInstance|](v1) @signature [|Ljava/lang/Class;.newInstance:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0a5954.   v4:= temp  @type object;
#L0a5956.   v4:= ([|org:apache:http:conn:ClientConnectionManagerFactory|])v4;
#L0a595a.   if v4 == 0 then goto L0a59c8;
#L0a595e.   call temp:=  [|org:apache:http:conn:ClientConnectionManagerFactory.newInstance|](v4, v5, v6) @signature [|Lorg/apache/http/conn/ClientConnectionManagerFactory;.newInstance:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:conn:ClientConnectionManagerFactory|] @type interface;
#L0a5964.   v2:= temp  @type object;
#L0a5966.   return v2  @type object;
#L0a5968.   v3:= Exception  @type object;
#L0a596a.   v7:= new [|java:lang:IllegalStateException|];
#L0a596e.   v8:= new [|java:lang:StringBuilder|];
#L0a5972.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a5978.   v9:= "Invalid class name: " @type (object, string);
#L0a597c.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5982.   v8:= temp  @type object;
#L0a5984.   call temp:=  [|java:lang:StringBuilder.append|](v8, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a598a.   v8:= temp  @type object;
#L0a598c.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5992.   v8:= temp  @type object;
#L0a5994.   call temp:=  [|java:lang:IllegalStateException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a599a.   throw v7;
#L0a599c.   v3:= Exception  @type object;
#L0a599e.   v7:= new [|java:lang:IllegalAccessError|];
#L0a59a2.   call temp:=  [|java:lang:IllegalAccessException.getMessage|](v3) @signature [|Ljava/lang/IllegalAccessException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L0a59a8.   v8:= temp  @type object;
#L0a59aa.   call temp:=  [|java:lang:IllegalAccessError.<init>|](v7, v8) @signature [|Ljava/lang/IllegalAccessError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalAccessError|] @type direct;
#L0a59b0.   throw v7;
#L0a59b2.   v3:= Exception  @type object;
#L0a59b4.   v7:= new [|java:lang:InstantiationError|];
#L0a59b8.   call temp:=  [|java:lang:InstantiationException.getMessage|](v3) @signature [|Ljava/lang/InstantiationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:InstantiationException|] @type virtual;
#L0a59be.   v8:= temp  @type object;
#L0a59c0.   call temp:=  [|java:lang:InstantiationError.<init>|](v7, v8) @signature [|Ljava/lang/InstantiationError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InstantiationError|] @type direct;
#L0a59c6.   throw v7;
#L0a59c8.   v2:= new [|org:apache:http:impl:conn:SingleClientConnManager|];
#L0a59cc.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getParams|](v11) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a59d2.   v7:= temp  @type object;
#L0a59d4.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.<init>|](v2, v7, v6) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type direct;
#L0a59da.   goto L0a5966;
  catch  [|java:lang:ClassNotFoundException|] @[L0a5946..L0a595a] goto L0a5968;
  catch  [|java:lang:IllegalAccessException|] @[L0a5946..L0a595a] goto L0a599c;
  catch  [|java:lang:InstantiationException|] @[L0a5946..L0a595a] goto L0a59b2;

   }
    procedure [|org:apache:http:conn:ConnectionKeepAliveStrategy|] [|org:apache:http:impl:client:DefaultHttpClient.createConnectionKeepAliveStrategy|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createConnectionKeepAliveStrategy:()Lorg/apache/http/conn/ConnectionKeepAliveStrategy;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5a00.   v0:= new [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|];
#L0a5a04.   call temp:=  [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultConnectionKeepAliveStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultConnectionKeepAliveStrategy|] @type direct;
#L0a5a0a.   return v0  @type object;

   }
    procedure [|org:apache:http:ConnectionReuseStrategy|] [|org:apache:http:impl:client:DefaultHttpClient.createConnectionReuseStrategy|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createConnectionReuseStrategy:()Lorg/apache/http/ConnectionReuseStrategy;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5a1c.   v0:= new [|org:apache:http:impl:DefaultConnectionReuseStrategy|];
#L0a5a20.   call temp:=  [|org:apache:http:impl:DefaultConnectionReuseStrategy.<init>|](v0) @signature [|Lorg/apache/http/impl/DefaultConnectionReuseStrategy;.<init>:()V|] @classDescriptor [|org:apache:http:impl:DefaultConnectionReuseStrategy|] @type direct;
#L0a5a26.   return v0  @type object;

   }
    procedure [|org:apache:http:cookie:CookieSpecRegistry|] [|org:apache:http:impl:client:DefaultHttpClient.createCookieSpecRegistry|] ([|org:apache:http:impl:client:DefaultHttpClient|] v3 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createCookieSpecRegistry:()Lorg/apache/http/cookie/CookieSpecRegistry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5a38.   v0:= new [|org:apache:http:cookie:CookieSpecRegistry|];
#L0a5a3c.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.<init>|](v0) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.<init>:()V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type direct;
#L0a5a42.   v1:= "best-match" @type (object, string);
#L0a5a46.   v2:= new [|org:apache:http:impl:cookie:BestMatchSpecFactory|];
#L0a5a4a.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpecFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpecFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpecFactory|] @type direct;
#L0a5a50.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a5a56.   v1:= "compatibility" @type (object, string);
#L0a5a5a.   v2:= new [|org:apache:http:impl:cookie:BrowserCompatSpecFactory|];
#L0a5a5e.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpecFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpecFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpecFactory|] @type direct;
#L0a5a64.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a5a6a.   v1:= "netscape" @type (object, string);
#L0a5a6e.   v2:= new [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|];
#L0a5a72.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpecFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|] @type direct;
#L0a5a78.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a5a7e.   v1:= "rfc2109" @type (object, string);
#L0a5a82.   v2:= new [|org:apache:http:impl:cookie:RFC2109SpecFactory|];
#L0a5a86.   call temp:=  [|org:apache:http:impl:cookie:RFC2109SpecFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/RFC2109SpecFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109SpecFactory|] @type direct;
#L0a5a8c.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a5a92.   v1:= "rfc2965" @type (object, string);
#L0a5a96.   v2:= new [|org:apache:http:impl:cookie:RFC2965SpecFactory|];
#L0a5a9a.   call temp:=  [|org:apache:http:impl:cookie:RFC2965SpecFactory.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/RFC2965SpecFactory;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965SpecFactory|] @type direct;
#L0a5aa0.   call temp:=  [|org:apache:http:cookie:CookieSpecRegistry.register|](v0, v1, v2) @signature [|Lorg/apache/http/cookie/CookieSpecRegistry;.register:(Ljava/lang/String;Lorg/apache/http/cookie/CookieSpecFactory;)V|] @classDescriptor [|org:apache:http:cookie:CookieSpecRegistry|] @type virtual;
#L0a5aa6.   return v0  @type object;

   }
    procedure [|org:apache:http:client:CookieStore|] [|org:apache:http:impl:client:DefaultHttpClient.createCookieStore|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createCookieStore:()Lorg/apache/http/client/CookieStore;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5ab8.   v0:= new [|org:apache:http:impl:client:BasicCookieStore|];
#L0a5abc.   call temp:=  [|org:apache:http:impl:client:BasicCookieStore.<init>|](v0) @signature [|Lorg/apache/http/impl/client/BasicCookieStore;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:BasicCookieStore|] @type direct;
#L0a5ac2.   return v0  @type object;

   }
    procedure [|org:apache:http:client:CredentialsProvider|] [|org:apache:http:impl:client:DefaultHttpClient.createCredentialsProvider|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5ad4.   v0:= new [|org:apache:http:impl:client:BasicCredentialsProvider|];
#L0a5ad8.   call temp:=  [|org:apache:http:impl:client:BasicCredentialsProvider.<init>|](v0) @signature [|Lorg/apache/http/impl/client/BasicCredentialsProvider;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:BasicCredentialsProvider|] @type direct;
#L0a5ade.   return v0  @type object;

   }
    procedure [|org:apache:http:protocol:HttpContext|] [|org:apache:http:impl:client:DefaultHttpClient.createHttpContext|] ([|org:apache:http:impl:client:DefaultHttpClient|] v3 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createHttpContext:()Lorg/apache/http/protocol/HttpContext;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5af0.   v0:= new [|org:apache:http:protocol:BasicHttpContext|];
#L0a5af4.   call temp:=  [|org:apache:http:protocol:BasicHttpContext.<init>|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpContext;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:BasicHttpContext|] @type direct;
#L0a5afa.   v1:= "http.authscheme-registry" @type (object, string);
#L0a5afe.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getAuthSchemes|](v3) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getAuthSchemes:()Lorg/apache/http/auth/AuthSchemeRegistry;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a5b04.   v2:= temp  @type object;
#L0a5b06.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a5b0c.   v1:= "http.cookiespec-registry" @type (object, string);
#L0a5b10.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getCookieSpecs|](v3) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getCookieSpecs:()Lorg/apache/http/cookie/CookieSpecRegistry;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a5b16.   v2:= temp  @type object;
#L0a5b18.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a5b1e.   v1:= "http.cookie-store" @type (object, string);
#L0a5b22.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getCookieStore|](v3) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getCookieStore:()Lorg/apache/http/client/CookieStore;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a5b28.   v2:= temp  @type object;
#L0a5b2a.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a5b30.   v1:= "http.auth.credentials-provider" @type (object, string);
#L0a5b34.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getCredentialsProvider|](v3) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getCredentialsProvider:()Lorg/apache/http/client/CredentialsProvider;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a5b3a.   v2:= temp  @type object;
#L0a5b3c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a5b42.   return v0  @type object;

   }
    procedure [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:DefaultHttpClient.createHttpParams|] ([|org:apache:http:impl:client:DefaultHttpClient|] v5 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createHttpParams:()Lorg/apache/http/params/HttpParams;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a5b54.   v0:= new [|org:apache:http:params:BasicHttpParams|];
#L0a5b58.   call temp:=  [|org:apache:http:params:BasicHttpParams.<init>|](v0) @signature [|Lorg/apache/http/params/BasicHttpParams;.<init>:()V|] @classDescriptor [|org:apache:http:params:BasicHttpParams|] @type direct;
#L0a5b5e.   v3:= @@[|org:apache:http:HttpVersion.HTTP_1_1|]   @type object;
#L0a5b62.   call temp:=  [|org:apache:http:params:HttpProtocolParams.setVersion|](v0, v3) @signature [|Lorg/apache/http/params/HttpProtocolParams;.setVersion:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/ProtocolVersion;)V|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a5b68.   v3:= "ISO-8859-1" @type (object, string);
#L0a5b6c.   call temp:=  [|org:apache:http:params:HttpProtocolParams.setContentCharset|](v0, v3) @signature [|Lorg/apache/http/params/HttpProtocolParams;.setContentCharset:(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a5b72.   v3:= 0  @length 4;
#L0a5b74.   call temp:=  [|org:apache:http:params:HttpProtocolParams.setUseExpectContinue|](v0, v3) @signature [|Lorg/apache/http/params/HttpProtocolParams;.setUseExpectContinue:(Lorg/apache/http/params/HttpParams;Z)V|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a5b7a.   v3:= "org.apache.http.client" @type (object, string);
#L0a5b7e.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a5b84.   v4:= temp  @type object;
#L0a5b86.   call temp:=  [|java:lang:Class.getClassLoader|](v4) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0a5b8c.   v4:= temp  @type object;
#L0a5b8e.   call temp:=  [|org:apache:http:util:VersionInfo.loadVersionInfo|](v3, v4) @signature [|Lorg/apache/http/util/VersionInfo;.loadVersionInfo:(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/apache/http/util/VersionInfo;|] @classDescriptor [|org:apache:http:util:VersionInfo|] @type static;
#L0a5b94.   v2:= temp  @type object;
#L0a5b96.   if v2 == 0 then goto L0a5bdc;
#L0a5b9a.   call temp:=  [|org:apache:http:util:VersionInfo.getRelease|](v2) @signature [|Lorg/apache/http/util/VersionInfo;.getRelease:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:util:VersionInfo|] @type virtual;
#L0a5ba0.   v1:= temp  @type object;
#L0a5ba2.   v3:= new [|java:lang:StringBuilder|];
#L0a5ba6.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a5bac.   v4:= "Apache-HttpClient/" @type (object, string);
#L0a5bb0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5bb6.   v3:= temp  @type object;
#L0a5bb8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5bbe.   v3:= temp  @type object;
#L0a5bc0.   v4:= " (java 1.4)" @type (object, string);
#L0a5bc4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5bca.   v3:= temp  @type object;
#L0a5bcc.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5bd2.   v3:= temp  @type object;
#L0a5bd4.   call temp:=  [|org:apache:http:params:HttpProtocolParams.setUserAgent|](v0, v3) @signature [|Lorg/apache/http/params/HttpProtocolParams;.setUserAgent:(Lorg/apache/http/params/HttpParams;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a5bda.   return v0  @type object;
#L0a5bdc.   v1:= "UNAVAILABLE" @type (object, string);
#L0a5be0.   goto L0a5ba2;

   }
    procedure [|org:apache:http:protocol:BasicHttpProcessor|] [|org:apache:http:impl:client:DefaultHttpClient.createHttpProcessor|] ([|org:apache:http:impl:client:DefaultHttpClient|] v2 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createHttpProcessor:()Lorg/apache/http/protocol/BasicHttpProcessor;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a5bf4.   v0:= new [|org:apache:http:protocol:BasicHttpProcessor|];
#L0a5bf8.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.<init>|](v0) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type direct;
#L0a5bfe.   v1:= new [|org:apache:http:client:protocol:RequestDefaultHeaders|];
#L0a5c02.   call temp:=  [|org:apache:http:client:protocol:RequestDefaultHeaders.<init>|](v1) @signature [|Lorg/apache/http/client/protocol/RequestDefaultHeaders;.<init>:()V|] @classDescriptor [|org:apache:http:client:protocol:RequestDefaultHeaders|] @type direct;
#L0a5c08.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c0e.   v1:= new [|org:apache:http:protocol:RequestContent|];
#L0a5c12.   call temp:=  [|org:apache:http:protocol:RequestContent.<init>|](v1) @signature [|Lorg/apache/http/protocol/RequestContent;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:RequestContent|] @type direct;
#L0a5c18.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c1e.   v1:= new [|org:apache:http:protocol:RequestTargetHost|];
#L0a5c22.   call temp:=  [|org:apache:http:protocol:RequestTargetHost.<init>|](v1) @signature [|Lorg/apache/http/protocol/RequestTargetHost;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:RequestTargetHost|] @type direct;
#L0a5c28.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c2e.   v1:= new [|org:apache:http:protocol:RequestConnControl|];
#L0a5c32.   call temp:=  [|org:apache:http:protocol:RequestConnControl.<init>|](v1) @signature [|Lorg/apache/http/protocol/RequestConnControl;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:RequestConnControl|] @type direct;
#L0a5c38.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c3e.   v1:= new [|org:apache:http:protocol:RequestUserAgent|];
#L0a5c42.   call temp:=  [|org:apache:http:protocol:RequestUserAgent.<init>|](v1) @signature [|Lorg/apache/http/protocol/RequestUserAgent;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:RequestUserAgent|] @type direct;
#L0a5c48.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c4e.   v1:= new [|org:apache:http:protocol:RequestExpectContinue|];
#L0a5c52.   call temp:=  [|org:apache:http:protocol:RequestExpectContinue.<init>|](v1) @signature [|Lorg/apache/http/protocol/RequestExpectContinue;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:RequestExpectContinue|] @type direct;
#L0a5c58.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c5e.   v1:= new [|org:apache:http:client:protocol:RequestAddCookies|];
#L0a5c62.   call temp:=  [|org:apache:http:client:protocol:RequestAddCookies.<init>|](v1) @signature [|Lorg/apache/http/client/protocol/RequestAddCookies;.<init>:()V|] @classDescriptor [|org:apache:http:client:protocol:RequestAddCookies|] @type direct;
#L0a5c68.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c6e.   v1:= new [|org:apache:http:client:protocol:ResponseProcessCookies|];
#L0a5c72.   call temp:=  [|org:apache:http:client:protocol:ResponseProcessCookies.<init>|](v1) @signature [|Lorg/apache/http/client/protocol/ResponseProcessCookies;.<init>:()V|] @classDescriptor [|org:apache:http:client:protocol:ResponseProcessCookies|] @type direct;
#L0a5c78.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpResponseInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c7e.   v1:= new [|org:apache:http:client:protocol:RequestTargetAuthentication|];
#L0a5c82.   call temp:=  [|org:apache:http:client:protocol:RequestTargetAuthentication.<init>|](v1) @signature [|Lorg/apache/http/client/protocol/RequestTargetAuthentication;.<init>:()V|] @classDescriptor [|org:apache:http:client:protocol:RequestTargetAuthentication|] @type direct;
#L0a5c88.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c8e.   v1:= new [|org:apache:http:client:protocol:RequestProxyAuthentication|];
#L0a5c92.   call temp:=  [|org:apache:http:client:protocol:RequestProxyAuthentication.<init>|](v1) @signature [|Lorg/apache/http/client/protocol/RequestProxyAuthentication;.<init>:()V|] @classDescriptor [|org:apache:http:client:protocol:RequestProxyAuthentication|] @type direct;
#L0a5c98.   call temp:=  [|org:apache:http:protocol:BasicHttpProcessor.addInterceptor|](v0, v1) @signature [|Lorg/apache/http/protocol/BasicHttpProcessor;.addInterceptor:(Lorg/apache/http/HttpRequestInterceptor;)V|] @classDescriptor [|org:apache:http:protocol:BasicHttpProcessor|] @type virtual;
#L0a5c9e.   return v0  @type object;

   }
    procedure [|org:apache:http:client:HttpRequestRetryHandler|] [|org:apache:http:impl:client:DefaultHttpClient.createHttpRequestRetryHandler|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createHttpRequestRetryHandler:()Lorg/apache/http/client/HttpRequestRetryHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5cb0.   v0:= new [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|];
#L0a5cb4.   call temp:=  [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @type direct;
#L0a5cba.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:HttpRoutePlanner|] [|org:apache:http:impl:client:DefaultHttpClient.createHttpRoutePlanner|] ([|org:apache:http:impl:client:DefaultHttpClient|] v3 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createHttpRoutePlanner:()Lorg/apache/http/conn/routing/HttpRoutePlanner;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5ccc.   v0:= new [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|];
#L0a5cd0.   call temp:=  [|org:apache:http:impl:client:DefaultHttpClient.getConnectionManager|](v3) @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.getConnectionManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpClient|] @type virtual;
#L0a5cd6.   v1:= temp  @type object;
#L0a5cd8.   call temp:=  [|org:apache:http:conn:ClientConnectionManager.getSchemeRegistry|](v1) @signature [|Lorg/apache/http/conn/ClientConnectionManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @classDescriptor [|org:apache:http:conn:ClientConnectionManager|] @type interface;
#L0a5cde.   v1:= temp  @type object;
#L0a5ce0.   v2:= 0  @length 4;
#L0a5ce2.   call temp:=  [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;Ljava/net/ProxySelector;)V|] @classDescriptor [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @type direct;
#L0a5ce8.   return v0  @type object;

   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:DefaultHttpClient.createProxyAuthenticationHandler|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createProxyAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5cfc.   v0:= new [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|];
#L0a5d00.   call temp:=  [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] @type direct;
#L0a5d06.   return v0  @type object;

   }
    procedure [|org:apache:http:client:RedirectHandler|] [|org:apache:http:impl:client:DefaultHttpClient.createRedirectHandler|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createRedirectHandler:()Lorg/apache/http/client/RedirectHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5d18.   v0:= new [|org:apache:http:impl:client:DefaultRedirectHandler|];
#L0a5d1c.   call temp:=  [|org:apache:http:impl:client:DefaultRedirectHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultRedirectHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRedirectHandler|] @type direct;
#L0a5d22.   return v0  @type object;

   }
    procedure [|org:apache:http:protocol:HttpRequestExecutor|] [|org:apache:http:impl:client:DefaultHttpClient.createRequestExecutor|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createRequestExecutor:()Lorg/apache/http/protocol/HttpRequestExecutor;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5d34.   v0:= new [|org:apache:http:protocol:HttpRequestExecutor|];
#L0a5d38.   call temp:=  [|org:apache:http:protocol:HttpRequestExecutor.<init>|](v0) @signature [|Lorg/apache/http/protocol/HttpRequestExecutor;.<init>:()V|] @classDescriptor [|org:apache:http:protocol:HttpRequestExecutor|] @type direct;
#L0a5d3e.   return v0  @type object;

   }
    procedure [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:DefaultHttpClient.createTargetAuthenticationHandler|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createTargetAuthenticationHandler:()Lorg/apache/http/client/AuthenticationHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5d50.   v0:= new [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|];
#L0a5d54.   call temp:=  [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] @type direct;
#L0a5d5a.   return v0  @type object;

   }
    procedure [|org:apache:http:client:UserTokenHandler|] [|org:apache:http:impl:client:DefaultHttpClient.createUserTokenHandler|] ([|org:apache:http:impl:client:DefaultHttpClient|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpClient|] @signature [|Lorg/apache/http/impl/client/DefaultHttpClient;.createUserTokenHandler:()Lorg/apache/http/client/UserTokenHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a5d6c.   v0:= new [|org:apache:http:impl:client:DefaultUserTokenHandler|];
#L0a5d70.   call temp:=  [|org:apache:http:impl:client:DefaultUserTokenHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultUserTokenHandler|] @type direct;
#L0a5d76.   return v0  @type object;

   }
record [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:HttpRequestRetryHandler|] {
      [|boolean|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.requestSentRetryEnabled|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.retryCount|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.<init>|] ([|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] v2 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a5d88.   v0:= 3  @length 4;
#L0a5d8a.   v1:= 0  @length 4;
#L0a5d8c.   call temp:=  [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.<init>:(IZ)V|] @classDescriptor [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @type direct;
#L0a5d92.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.<init>|] ([|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] v0 @type (this), [|int|] v1, [|boolean|] v2) @owner [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.<init>:(IZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5da4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a5daa.   v0.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.retryCount|]  := v1;
#L0a5dae.   v0.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.requestSentRetryEnabled|]  := v2 @boolean;
#L0a5db2.   return @void ;

   }
    procedure [|int|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.getRetryCount|] ([|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.getRetryCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5dc4.   v0:= v1.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.retryCount|] ;
#L0a5dc8.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.isRequestSentRetryEnabled|] ([|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.isRequestSentRetryEnabled:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a5ddc.   v0:= v1.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.requestSentRetryEnabled|]   @boolean;
#L0a5de0.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.retryRequest|] ([|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] v5 @type (this), [|java:io:IOException|] v6 @type (object), [|int|] v7, [|org:apache:http:protocol:HttpContext|] v8 @type (object)) @owner [|org:apache:http:impl:client:DefaultHttpRequestRetryHandler|] @signature [|Lorg/apache/http/impl/client/DefaultHttpRequestRetryHandler;.retryRequest:(Ljava/io/IOException;ILorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a5df4.   v3:= 1  @length 4;
#L0a5df6.   v2:= 0  @length 4;
#L0a5df8.   if v6 != 0 then goto L0a5e0c;
#L0a5dfc.   v2:= new [|java:lang:IllegalArgumentException|];
#L0a5e00.   v3:= "Exception parameter may not be null" @type (object, string);
#L0a5e04.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5e0a.   throw v2;
#L0a5e0c.   if v8 != 0 then goto L0a5e20;
#L0a5e10.   v2:= new [|java:lang:IllegalArgumentException|];
#L0a5e14.   v3:= "HTTP context may not be null" @type (object, string);
#L0a5e18.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5e1e.   throw v2;
#L0a5e20.   v4:= v5.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.retryCount|] ;
#L0a5e24.   if v7 <= v4 then goto L0a5e2a;
#L0a5e28.   return v2;
#L0a5e2a.   v4:= instanceof @varname v6 @type [|org:apache:http:NoHttpResponseException|];
#L0a5e2e.   if v4 == 0 then goto L0a5e36;
#L0a5e32.   v2:= v3;
#L0a5e34.   goto L0a5e28;
#L0a5e36.   v4:= instanceof @varname v6 @type [|java:io:InterruptedIOException|];
#L0a5e3a.   if v4 != 0 then goto L0a5e28;
#L0a5e3e.   v4:= instanceof @varname v6 @type [|java:net:UnknownHostException|];
#L0a5e42.   if v4 != 0 then goto L0a5e28;
#L0a5e46.   v4:= instanceof @varname v6 @type [|javax:net:ssl:SSLHandshakeException|];
#L0a5e4a.   if v4 != 0 then goto L0a5e28;
#L0a5e4e.   v4:= "http.request_sent" @type (object, string);
#L0a5e52.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v8, v4) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a5e58.   v0:= temp  @type object;
#L0a5e5a.   v0:= ([|java:lang:Boolean|])v0;
#L0a5e5e.   if v0 == 0 then goto L0a5e80;
#L0a5e62.   call temp:=  [|java:lang:Boolean.booleanValue|](v0) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L0a5e68.   v4:= temp;
#L0a5e6a.   if v4 == 0 then goto L0a5e80;
#L0a5e6e.   v1:= v3;
#L0a5e70.   if v1 == 0 then goto L0a5e7c;
#L0a5e74.   v4:= v5.[|org:apache:http:impl:client:DefaultHttpRequestRetryHandler.requestSentRetryEnabled|]   @boolean;
#L0a5e78.   if v4 == 0 then goto L0a5e28;
#L0a5e7c.   v2:= v3;
#L0a5e7e.   goto L0a5e28;
#L0a5e80.   v1:= v2;
#L0a5e82.   goto L0a5e70;

   }
record [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:client:AbstractAuthenticationHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler.<init>|] ([|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] v0 @type (this)) @owner [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a5e94.   call temp:=  [|org:apache:http:impl:client:AbstractAuthenticationHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @type direct;
#L0a5e9a.   return @void ;

   }
    procedure [|java:util:Map|] [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler.getChallenges|] ([|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;.getChallenges:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5eac.   if v4 != 0 then goto L0a5ec0;
#L0a5eb0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a5eb4.   v2:= "HTTP response may not be null" @type (object, string);
#L0a5eb8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5ebe.   throw v1;
#L0a5ec0.   v1:= "Proxy-Authenticate" @type (object, string);
#L0a5ec4.   call temp:=  [|org:apache:http:HttpResponse.getHeaders|](v4, v1) @signature [|Lorg/apache/http/HttpResponse;.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a5eca.   v0:= temp  @type object;
#L0a5ecc.   call temp:=  [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler.parseChallenges|](v3, v0) @signature [|Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;.parseChallenges:([Lorg/apache/http/Header;)Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] @type virtual;
#L0a5ed2.   v1:= temp  @type object;
#L0a5ed4.   return v1  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler.isAuthenticationRequested|] ([|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultProxyAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultProxyAuthenticationHandler;.isAuthenticationRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a5ee8.   if v4 != 0 then goto L0a5efc;
#L0a5eec.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a5ef0.   v2:= "HTTP response may not be null" @type (object, string);
#L0a5ef4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5efa.   throw v1;
#L0a5efc.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v4) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a5f02.   v1:= temp  @type object;
#L0a5f04.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a5f0a.   v0:= temp;
#L0a5f0c.   v1:= 407  @length 16;
#L0a5f10.   if v0 != v1 then goto L0a5f18;
#L0a5f14.   v1:= 1  @length 4;
#L0a5f16.   return v1;
#L0a5f18.   v1:= 0  @length 4;
#L0a5f1a.   goto L0a5f16;

   }
record [|org:apache:http:impl:client:DefaultRedirectHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:RedirectHandler|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:client:DefaultRedirectHandler.log|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:String|] @@[|org:apache:http:impl:client:DefaultRedirectHandler.REDIRECT_LOCATIONS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:client:DefaultRedirectHandler.<init>|] ([|org:apache:http:impl:client:DefaultRedirectHandler|] v1 @type (this)) @owner [|org:apache:http:impl:client:DefaultRedirectHandler|] @signature [|Lorg/apache/http/impl/client/DefaultRedirectHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a5f2c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a5f32.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a5f38.   v0:= temp  @type object;
#L0a5f3a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a5f40.   v0:= temp  @type object;
#L0a5f42.   v1.[|org:apache:http:impl:client:DefaultRedirectHandler.log|]  := v0 @type object;
#L0a5f46.   return @void ;

   }
    procedure [|java:net:URI|] [|org:apache:http:impl:client:DefaultRedirectHandler.getLocationURI|] ([|org:apache:http:impl:client:DefaultRedirectHandler|] v15 @type (this), [|org:apache:http:HttpResponse|] v16 @type (object), [|org:apache:http:protocol:HttpContext|] v17 @type (object)) @owner [|org:apache:http:impl:client:DefaultRedirectHandler|] @signature [|Lorg/apache/http/impl/client/DefaultRedirectHandler;.getLocationURI:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/net/URI;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L0a5f58.   if v16 != 0 then goto L0a5f6c;
#L0a5f5c.   v12:= new [|java:lang:IllegalArgumentException|];
#L0a5f60.   v13:= "HTTP response may not be null" @type (object, string);
#L0a5f64.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v12, v13) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a5f6a.   throw v12;
#L0a5f6c.   v12:= "location" @type (object, string);
#L0a5f70.   v0:= v16  @type object;
#L0a5f74.   call temp:=  [|org:apache:http:HttpResponse.getFirstHeader|](v0, v12) @signature [|Lorg/apache/http/HttpResponse;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a5f7a.   v4:= temp  @type object;
#L0a5f7c.   if v4 != 0 then goto L0a5fc6;
#L0a5f80.   v12:= new [|org:apache:http:ProtocolException|];
#L0a5f84.   v13:= new [|java:lang:StringBuilder|];
#L0a5f88.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a5f8e.   v14:= "Received redirect response " @type (object, string);
#L0a5f92.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5f98.   v13:= temp  @type object;
#L0a5f9a.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v16) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a5fa0.   v14:= temp  @type object;
#L0a5fa2.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5fa8.   v13:= temp  @type object;
#L0a5faa.   v14:= " but no location header" @type (object, string);
#L0a5fae.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5fb4.   v13:= temp  @type object;
#L0a5fb6.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5fbc.   v13:= temp  @type object;
#L0a5fbe.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v12, v13) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a5fc4.   throw v12;
#L0a5fc6.   call temp:=  [|org:apache:http:Header.getValue|](v4) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0a5fcc.   v3:= temp  @type object;
#L0a5fce.   v12:= v15.[|org:apache:http:impl:client:DefaultRedirectHandler.log|]   @type object;
#L0a5fd2.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v12) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a5fd8.   v12:= temp;
#L0a5fda.   if v12 == 0 then goto L0a601a;
#L0a5fde.   v12:= v15.[|org:apache:http:impl:client:DefaultRedirectHandler.log|]   @type object;
#L0a5fe2.   v13:= new [|java:lang:StringBuilder|];
#L0a5fe6.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a5fec.   v14:= "Redirect requested to location '" @type (object, string);
#L0a5ff0.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5ff6.   v13:= temp  @type object;
#L0a5ff8.   call temp:=  [|java:lang:StringBuilder.append|](v13, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a5ffe.   v13:= temp  @type object;
#L0a6000.   v14:= "'" @type (object, string);
#L0a6004.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a600a.   v13:= temp  @type object;
#L0a600c.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6012.   v13:= temp  @type object;
#L0a6014.   call temp:=  [|org:apache:commons:logging:Log.debug|](v12, v13) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a601a.   v11:= new [|java:net:URI|];
#L0a601e.   call temp:=  [|java:net:URI.<init>|](v11, v3) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L0a6024.   call temp:=  [|org:apache:http:HttpResponse.getParams|](v16) @signature [|Lorg/apache/http/HttpResponse;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a602a.   v5:= temp  @type object;
#L0a602c.   call temp:=  [|java:net:URI.isAbsolute|](v11) @signature [|Ljava/net/URI;.isAbsolute:()Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6032.   v12:= temp;
#L0a6034.   if v12 != 0 then goto L0a6122;
#L0a6038.   v12:= "http.protocol.reject-relative-redirect" @type (object, string);
#L0a603c.   call temp:=  [|org:apache:http:params:HttpParams.isParameterTrue|](v5, v12) @signature [|Lorg/apache/http/params/HttpParams;.isParameterTrue:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a6042.   v12:= temp;
#L0a6044.   if v12 == 0 then goto L0a60ba;
#L0a6048.   v12:= new [|org:apache:http:ProtocolException|];
#L0a604c.   v13:= new [|java:lang:StringBuilder|];
#L0a6050.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6056.   v14:= "Relative redirect location '" @type (object, string);
#L0a605a.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6060.   v13:= temp  @type object;
#L0a6062.   call temp:=  [|java:lang:StringBuilder.append|](v13, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6068.   v13:= temp  @type object;
#L0a606a.   v14:= "' not allowed" @type (object, string);
#L0a606e.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6074.   v13:= temp  @type object;
#L0a6076.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a607c.   v13:= temp  @type object;
#L0a607e.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v12, v13) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a6084.   throw v12;
#L0a6086.   v2:= Exception  @type object;
#L0a6088.   v12:= new [|org:apache:http:ProtocolException|];
#L0a608c.   v13:= new [|java:lang:StringBuilder|];
#L0a6090.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6096.   v14:= "Invalid redirect URI: " @type (object, string);
#L0a609a.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a60a0.   v13:= temp  @type object;
#L0a60a2.   call temp:=  [|java:lang:StringBuilder.append|](v13, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a60a8.   v13:= temp  @type object;
#L0a60aa.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a60b0.   v13:= temp  @type object;
#L0a60b2.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v12, v13, v2) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a60b8.   throw v12;
#L0a60ba.   v12:= "http.target_host" @type (object, string);
#L0a60be.   v0:= v17  @type object;
#L0a60c2.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v12) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a60c8.   v10:= temp  @type object;
#L0a60ca.   v10:= ([|org:apache:http:HttpHost|])v10;
#L0a60ce.   if v10 != 0 then goto L0a60e2;
#L0a60d2.   v12:= new [|java:lang:IllegalStateException|];
#L0a60d6.   v13:= "Target host not available in the HTTP context" @type (object, string);
#L0a60da.   call temp:=  [|java:lang:IllegalStateException.<init>|](v12, v13) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a60e0.   throw v12;
#L0a60e2.   v12:= "http.request" @type (object, string);
#L0a60e6.   v0:= v17  @type object;
#L0a60ea.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v12) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a60f0.   v8:= temp  @type object;
#L0a60f2.   v8:= ([|org:apache:http:HttpRequest|])v8;
#L0a60f6.   v9:= new [|java:net:URI|];
#L0a60fa.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v8) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a6100.   v12:= temp  @type object;
#L0a6102.   call temp:=  [|org:apache:http:RequestLine.getUri|](v12) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a6108.   v12:= temp  @type object;
#L0a610a.   call temp:=  [|java:net:URI.<init>|](v9, v12) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L0a6110.   v12:= 1  @length 4;
#L0a6112.   call temp:=  [|org:apache:http:client:utils:URIUtils.rewriteURI|](v9, v10, v12) @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;Z)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L0a6118.   v1:= temp  @type object;
#L0a611a.   call temp:=  [|org:apache:http:client:utils:URIUtils.resolve|](v1, v11) @signature [|Lorg/apache/http/client/utils/URIUtils;.resolve:(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L0a6120.   v11:= temp  @type object;
#L0a6122.   v12:= "http.protocol.allow-circular-redirects" @type (object, string);
#L0a6126.   call temp:=  [|org:apache:http:params:HttpParams.isParameterFalse|](v5, v12) @signature [|Lorg/apache/http/params/HttpParams;.isParameterFalse:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a612c.   v12:= temp;
#L0a612e.   if v12 == 0 then goto L0a621a;
#L0a6132.   v12:= "http.protocol.redirect-locations" @type (object, string);
#L0a6136.   v0:= v17  @type object;
#L0a613a.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v12) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a6140.   v6:= temp  @type object;
#L0a6142.   v6:= ([|org:apache:http:impl:client:RedirectLocations|])v6;
#L0a6146.   if v6 != 0 then goto L0a6162;
#L0a614a.   v6:= new [|org:apache:http:impl:client:RedirectLocations|];
#L0a614e.   call temp:=  [|org:apache:http:impl:client:RedirectLocations.<init>|](v6) @signature [|Lorg/apache/http/impl/client/RedirectLocations;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:RedirectLocations|] @type direct;
#L0a6154.   v12:= "http.protocol.redirect-locations" @type (object, string);
#L0a6158.   v0:= v17  @type object;
#L0a615c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v12, v6) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a6162.   call temp:=  [|java:net:URI.getFragment|](v11) @signature [|Ljava/net/URI;.getFragment:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6168.   v12:= temp  @type object;
#L0a616a.   if v12 == 0 then goto L0a6210;
#L0a616e.   v10:= new [|org:apache:http:HttpHost|];
#L0a6172.   call temp:=  [|java:net:URI.getHost|](v11) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6178.   v12:= temp  @type object;
#L0a617a.   call temp:=  [|java:net:URI.getPort|](v11) @signature [|Ljava/net/URI;.getPort:()I|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6180.   v13:= temp;
#L0a6182.   call temp:=  [|java:net:URI.getScheme|](v11) @signature [|Ljava/net/URI;.getScheme:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6188.   v14:= temp  @type object;
#L0a618a.   call temp:=  [|org:apache:http:HttpHost.<init>|](v10, v12, v13, v14) @signature [|Lorg/apache/http/HttpHost;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpHost|] @type direct;
#L0a6190.   v12:= 1  @length 4;
#L0a6192.   call temp:=  [|org:apache:http:client:utils:URIUtils.rewriteURI|](v11, v10, v12) @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;Z)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L0a6198.   v7:= temp  @type object;
#L0a619a.   call temp:=  [|org:apache:http:impl:client:RedirectLocations.contains|](v6, v7) @signature [|Lorg/apache/http/impl/client/RedirectLocations;.contains:(Ljava/net/URI;)Z|] @classDescriptor [|org:apache:http:impl:client:RedirectLocations|] @type virtual;
#L0a61a0.   v12:= temp;
#L0a61a2.   if v12 == 0 then goto L0a6214;
#L0a61a6.   v12:= new [|org:apache:http:client:CircularRedirectException|];
#L0a61aa.   v13:= new [|java:lang:StringBuilder|];
#L0a61ae.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a61b4.   v14:= "Circular redirect to '" @type (object, string);
#L0a61b8.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a61be.   v13:= temp  @type object;
#L0a61c0.   call temp:=  [|java:lang:StringBuilder.append|](v13, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a61c6.   v13:= temp  @type object;
#L0a61c8.   v14:= "'" @type (object, string);
#L0a61cc.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a61d2.   v13:= temp  @type object;
#L0a61d4.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a61da.   v13:= temp  @type object;
#L0a61dc.   call temp:=  [|org:apache:http:client:CircularRedirectException.<init>|](v12, v13) @signature [|Lorg/apache/http/client/CircularRedirectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:client:CircularRedirectException|] @type direct;
#L0a61e2.   throw v12;
#L0a61e4.   v2:= Exception  @type object;
#L0a61e6.   v12:= new [|org:apache:http:ProtocolException|];
#L0a61ea.   call temp:=  [|java:net:URISyntaxException.getMessage|](v2) @signature [|Ljava/net/URISyntaxException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:net:URISyntaxException|] @type virtual;
#L0a61f0.   v13:= temp  @type object;
#L0a61f2.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v12, v13, v2) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a61f8.   throw v12;
#L0a61fa.   v2:= Exception  @type object;
#L0a61fc.   v12:= new [|org:apache:http:ProtocolException|];
#L0a6200.   call temp:=  [|java:net:URISyntaxException.getMessage|](v2) @signature [|Ljava/net/URISyntaxException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:net:URISyntaxException|] @type virtual;
#L0a6206.   v13:= temp  @type object;
#L0a6208.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v12, v13, v2) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a620e.   throw v12;
#L0a6210.   v7:= v11  @type object;
#L0a6212.   goto L0a619a;
#L0a6214.   call temp:=  [|org:apache:http:impl:client:RedirectLocations.add|](v6, v7) @signature [|Lorg/apache/http/impl/client/RedirectLocations;.add:(Ljava/net/URI;)V|] @classDescriptor [|org:apache:http:impl:client:RedirectLocations|] @type virtual;
#L0a621a.   return v11  @type object;
  catch  [|java:net:URISyntaxException|] @[L0a601a..L0a6024] goto L0a6086;
  catch  [|java:net:URISyntaxException|] @[L0a60f6..L0a6120] goto L0a61e4;
  catch  [|java:net:URISyntaxException|] @[L0a616e..L0a6198] goto L0a61fa;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultRedirectHandler.isRedirectRequested|] ([|org:apache:http:impl:client:DefaultRedirectHandler|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultRedirectHandler|] @signature [|Lorg/apache/http/impl/client/DefaultRedirectHandler;.isRedirectRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a6254.   if v4 != 0 then goto L0a6268;
#L0a6258.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a625c.   v2:= "HTTP response may not be null" @type (object, string);
#L0a6260.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6266.   throw v1;
#L0a6268.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v4) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a626e.   v1:= temp  @type object;
#L0a6270.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a6276.   v0:= temp;
#L0a6278.   goto L0a6288;
#L0a627e.   v1:= 0  @length 4;
#L0a6280.   return v1;
#L0a6282.   v1:= 1  @length 4;
#L0a6284.   goto L0a6280;
#L0a6286.   
#L0a6288.   switch  v0
                 | 301 => goto L0a6282
                 | 302 => goto L0a6282
                 | 303 => goto L0a6282
                 | 304 => goto L0a627e
                 | 305 => goto L0a627e
                 | 306 => goto L0a627e
                 | 307 => goto L0a6282
                 | => goto L0a627e;

   }
record [|org:apache:http:impl:client:DefaultRequestDirector|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:RequestDirector|] {
      [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:client:DefaultRequestDirector.connManager|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:protocol:HttpProcessor|] [|org:apache:http:impl:client:DefaultRequestDirector.httpProcessor|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:ConnectionKeepAliveStrategy|] [|org:apache:http:impl:client:DefaultRequestDirector.keepAliveStrategy|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:client:DefaultRequestDirector.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]    @AccessFlag PROTECTED;
      [|int|] [|org:apache:http:impl:client:DefaultRequestDirector.maxRedirects|]    @AccessFlag PRIVATE;
      [|org:apache:http:params:HttpParams|] [|org:apache:http:impl:client:DefaultRequestDirector.params|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:auth:AuthState|] [|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:client:DefaultRequestDirector.redirectCount|]    @AccessFlag PRIVATE;
      [|org:apache:http:client:RedirectHandler|] [|org:apache:http:impl:client:DefaultRequestDirector.redirectHandler|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:protocol:HttpRequestExecutor|] [|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:client:HttpRequestRetryHandler|] [|org:apache:http:impl:client:DefaultRequestDirector.retryHandler|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:ConnectionReuseStrategy|] [|org:apache:http:impl:client:DefaultRequestDirector.reuseStrategy|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:routing:HttpRoutePlanner|] [|org:apache:http:impl:client:DefaultRequestDirector.routePlanner|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:client:AuthenticationHandler|] [|org:apache:http:impl:client:DefaultRequestDirector.targetAuthHandler|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:auth:AuthState|] [|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:client:UserTokenHandler|] [|org:apache:http:impl:client:DefaultRequestDirector.userTokenHandler|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.<init>|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v3 @type (this), [|org:apache:http:protocol:HttpRequestExecutor|] v4 @type (object), [|org:apache:http:conn:ClientConnectionManager|] v5 @type (object), [|org:apache:http:ConnectionReuseStrategy|] v6 @type (object), [|org:apache:http:conn:ConnectionKeepAliveStrategy|] v7 @type (object), [|org:apache:http:conn:routing:HttpRoutePlanner|] v8 @type (object), [|org:apache:http:protocol:HttpProcessor|] v9 @type (object), [|org:apache:http:client:HttpRequestRetryHandler|] v10 @type (object), [|org:apache:http:client:RedirectHandler|] v11 @type (object), [|org:apache:http:client:AuthenticationHandler|] v12 @type (object), [|org:apache:http:client:AuthenticationHandler|] v13 @type (object), [|org:apache:http:client:UserTokenHandler|] v14 @type (object), [|org:apache:http:params:HttpParams|] v15 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.<init>:(Lorg/apache/http/protocol/HttpRequestExecutor;Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/ConnectionReuseStrategy;Lorg/apache/http/conn/ConnectionKeepAliveStrategy;Lorg/apache/http/conn/routing/HttpRoutePlanner;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/client/HttpRequestRetryHandler;Lorg/apache/http/client/RedirectHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/client/UserTokenHandler;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a62bc.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a62c2.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a62c8.   v0:= temp  @type object;
#L0a62ca.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a62d0.   v0:= temp  @type object;
#L0a62d2.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.log|]  := v0 @type object;
#L0a62d6.   if v4 != 0 then goto L0a62ea;
#L0a62da.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a62de.   v1:= "Request executor may not be null." @type (object, string);
#L0a62e2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a62e8.   throw v0;
#L0a62ea.   if v5 != 0 then goto L0a62fe;
#L0a62ee.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a62f2.   v1:= "Client connection manager may not be null." @type (object, string);
#L0a62f6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a62fc.   throw v0;
#L0a62fe.   if v6 != 0 then goto L0a6312;
#L0a6302.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a6306.   v1:= "Connection reuse strategy may not be null." @type (object, string);
#L0a630a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6310.   throw v0;
#L0a6312.   if v7 != 0 then goto L0a6326;
#L0a6316.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a631a.   v1:= "Connection keep alive strategy may not be null." @type (object, string);
#L0a631e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6324.   throw v0;
#L0a6326.   if v8 != 0 then goto L0a633a;
#L0a632a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a632e.   v1:= "Route planner may not be null." @type (object, string);
#L0a6332.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6338.   throw v0;
#L0a633a.   if v9 != 0 then goto L0a634e;
#L0a633e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a6342.   v1:= "HTTP protocol processor may not be null." @type (object, string);
#L0a6346.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a634c.   throw v0;
#L0a634e.   if v10 != 0 then goto L0a6362;
#L0a6352.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a6356.   v1:= "HTTP request retry handler may not be null." @type (object, string);
#L0a635a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6360.   throw v0;
#L0a6362.   if v11 != 0 then goto L0a6376;
#L0a6366.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a636a.   v1:= "Redirect handler may not be null." @type (object, string);
#L0a636e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6374.   throw v0;
#L0a6376.   if v12 != 0 then goto L0a638a;
#L0a637a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a637e.   v1:= "Target authentication handler may not be null." @type (object, string);
#L0a6382.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a6388.   throw v0;
#L0a638a.   if v13 != 0 then goto L0a639e;
#L0a638e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a6392.   v1:= "Proxy authentication handler may not be null." @type (object, string);
#L0a6396.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a639c.   throw v0;
#L0a639e.   if v14 != 0 then goto L0a63b2;
#L0a63a2.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a63a6.   v1:= "User token handler may not be null." @type (object, string);
#L0a63aa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a63b0.   throw v0;
#L0a63b2.   if v15 != 0 then goto L0a63c6;
#L0a63b6.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a63ba.   v1:= "HTTP parameters may not be null" @type (object, string);
#L0a63be.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a63c4.   throw v0;
#L0a63c6.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]  := v4 @type object;
#L0a63ca.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.connManager|]  := v5 @type object;
#L0a63ce.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.reuseStrategy|]  := v6 @type object;
#L0a63d2.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.keepAliveStrategy|]  := v7 @type object;
#L0a63d6.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.routePlanner|]  := v8 @type object;
#L0a63da.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.httpProcessor|]  := v9 @type object;
#L0a63de.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.retryHandler|]  := v10 @type object;
#L0a63e2.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.redirectHandler|]  := v11 @type object;
#L0a63e6.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthHandler|]  := v12 @type object;
#L0a63ea.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]  := v13 @type object;
#L0a63ee.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.userTokenHandler|]  := v14 @type object;
#L0a63f2.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.params|]  := v15 @type object;
#L0a63f6.   v0:= 0  @length 4;
#L0a63f8.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]  := v0 @type object;
#L0a63fc.   v0:= 0  @length 4;
#L0a63fe.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.redirectCount|]  := v0;
#L0a6402.   v0:= v3.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6406.   v1:= "http.protocol.max-redirects" @type (object, string);
#L0a640a.   v2:= 100  @length 16;
#L0a640e.   call temp:=  [|org:apache:http:params:HttpParams.getIntParameter|](v0, v1, v2) @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a6414.   v0:= temp;
#L0a6416.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.maxRedirects|]  := v0;
#L0a641a.   v0:= new [|org:apache:http:auth:AuthState|];
#L0a641e.   call temp:=  [|org:apache:http:auth:AuthState.<init>|](v0) @signature [|Lorg/apache/http/auth/AuthState;.<init>:()V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type direct;
#L0a6424.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]  := v0 @type object;
#L0a6428.   v0:= new [|org:apache:http:auth:AuthState|];
#L0a642c.   call temp:=  [|org:apache:http:auth:AuthState.<init>|](v0) @signature [|Lorg/apache/http/auth/AuthState;.<init>:()V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type direct;
#L0a6432.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]  := v0 @type object;
#L0a6436.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.abortConnection|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v5 @type (this)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.abortConnection:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a6448.   v2:= v5.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a644c.   if v2 == 0 then goto L0a6462;
#L0a6450.   v3:= 0  @length 4;
#L0a6452.   v5.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]  := v3 @type object;
#L0a6456.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.abortConnection|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.abortConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a645c.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6462.   return @void ;
#L0a6464.   v0:= Exception  @type object;
#L0a6466.   v3:= v5.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a646a.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6470.   v3:= temp;
#L0a6472.   if v3 == 0 then goto L0a645c;
#L0a6476.   v3:= v5.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a647a.   call temp:=  [|java:io:IOException.getMessage|](v0) @signature [|Ljava/io/IOException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L0a6480.   v4:= temp  @type object;
#L0a6482.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6488.   goto L0a645c;
#L0a648a.   v1:= Exception  @type object;
#L0a648c.   v3:= v5.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6490.   v4:= "Error releasing connection" @type (object, string);
#L0a6494.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4, v1) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a649a.   goto L0a6462;
  catch  [|java:io:IOException|] @[L0a6456..L0a645c] goto L0a6464;
  catch  [|java:io:IOException|] @[L0a645c..L0a6462] goto L0a648a;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.processChallenges|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v6 @type (this), [|java:util:Map|] v7 @type (object), [|org:apache:http:auth:AuthState|] v8 @type (object), [|org:apache:http:client:AuthenticationHandler|] v9 @type (object), [|org:apache:http:HttpResponse|] v10 @type (object), [|org:apache:http:protocol:HttpContext|] v11 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.processChallenges:(Ljava/util/Map;Lorg/apache/http/auth/AuthState;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a64c8.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v8) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a64ce.   v0:= temp  @type object;
#L0a64d0.   if v0 != 0 then goto L0a64e2;
#L0a64d4.   call temp:=  [|org:apache:http:client:AuthenticationHandler.selectScheme|](v9, v7, v10, v11) @signature [|Lorg/apache/http/client/AuthenticationHandler;.selectScheme:(Ljava/util/Map;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a64da.   v0:= temp  @type object;
#L0a64dc.   call temp:=  [|org:apache:http:auth:AuthState.setAuthScheme|](v8, v0) @signature [|Lorg/apache/http/auth/AuthState;.setAuthScheme:(Lorg/apache/http/auth/AuthScheme;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a64e2.   call temp:=  [|org:apache:http:auth:AuthScheme.getSchemeName|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a64e8.   v2:= temp  @type object;
#L0a64ea.   v3:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0a64ee.   call temp:=  [|java:lang:String.toLowerCase|](v2, v3) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a64f4.   v3:= temp  @type object;
#L0a64f6.   call temp:=  [|java:util:Map.get|](v7, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a64fc.   v1:= temp  @type object;
#L0a64fe.   v1:= ([|org:apache:http:Header|])v1;
#L0a6502.   if v1 != 0 then goto L0a6538;
#L0a6506.   v3:= new [|org:apache:http:auth:AuthenticationException|];
#L0a650a.   v4:= new [|java:lang:StringBuilder|];
#L0a650e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6514.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a651a.   v4:= temp  @type object;
#L0a651c.   v5:= " authorization challenge expected, but not found" @type (object, string);
#L0a6520.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6526.   v4:= temp  @type object;
#L0a6528.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a652e.   v4:= temp  @type object;
#L0a6530.   call temp:=  [|org:apache:http:auth:AuthenticationException.<init>|](v3, v4) @signature [|Lorg/apache/http/auth/AuthenticationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type direct;
#L0a6536.   throw v3;
#L0a6538.   call temp:=  [|org:apache:http:auth:AuthScheme.processChallenge|](v0, v1) @signature [|Lorg/apache/http/auth/AuthScheme;.processChallenge:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a653e.   v3:= v6.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6542.   v4:= "Authorization challenge processed" @type (object, string);
#L0a6546.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a654c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.updateAuthState|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v9 @type (this), [|org:apache:http:auth:AuthState|] v10 @type (object), [|org:apache:http:HttpHost|] v11 @type (object), [|org:apache:http:client:CredentialsProvider|] v12 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.updateAuthState:(Lorg/apache/http/auth/AuthState;Lorg/apache/http/HttpHost;Lorg/apache/http/client/CredentialsProvider;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0a6560.   call temp:=  [|org:apache:http:auth:AuthState.isValid|](v10) @signature [|Lorg/apache/http/auth/AuthState;.isValid:()Z|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6566.   v6:= temp;
#L0a6568.   if v6 != 0 then goto L0a656e;
#L0a656c.   return @void ;
#L0a656e.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v11) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a6574.   v3:= temp  @type object;
#L0a6576.   call temp:=  [|org:apache:http:HttpHost.getPort|](v11) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a657c.   v4:= temp;
#L0a657e.   if v4 >= 0 then goto L0a659e;
#L0a6582.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.connManager|]   @type object;
#L0a6586.   call temp:=  [|org:apache:http:conn:ClientConnectionManager.getSchemeRegistry|](v6) @signature [|Lorg/apache/http/conn/ClientConnectionManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @classDescriptor [|org:apache:http:conn:ClientConnectionManager|] @type interface;
#L0a658c.   v6:= temp  @type object;
#L0a658e.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v6, v11) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Lorg/apache/http/HttpHost;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a6594.   v5:= temp  @type object;
#L0a6596.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getDefaultPort|](v5) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getDefaultPort:()I|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a659c.   v4:= temp;
#L0a659e.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v10) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a65a4.   v0:= temp  @type object;
#L0a65a6.   v1:= new [|org:apache:http:auth:AuthScope|];
#L0a65aa.   call temp:=  [|org:apache:http:auth:AuthScheme.getRealm|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.getRealm:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a65b0.   v6:= temp  @type object;
#L0a65b2.   call temp:=  [|org:apache:http:auth:AuthScheme.getSchemeName|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a65b8.   v7:= temp  @type object;
#L0a65ba.   call temp:=  [|org:apache:http:auth:AuthScope.<init>|](v1, v3, v4, v6, v7) @signature [|Lorg/apache/http/auth/AuthScope;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:auth:AuthScope|] @type direct;
#L0a65c0.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a65c4.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v6) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a65ca.   v6:= temp;
#L0a65cc.   if v6 == 0 then goto L0a6600;
#L0a65d0.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a65d4.   v7:= new [|java:lang:StringBuilder|];
#L0a65d8.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a65de.   v8:= "Authentication scope: " @type (object, string);
#L0a65e2.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a65e8.   v7:= temp  @type object;
#L0a65ea.   call temp:=  [|java:lang:StringBuilder.append|](v7, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a65f0.   v7:= temp  @type object;
#L0a65f2.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a65f8.   v7:= temp  @type object;
#L0a65fa.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6600.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v10) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6606.   v2:= temp  @type object;
#L0a6608.   if v2 != 0 then goto L0a6654;
#L0a660c.   call temp:=  [|org:apache:http:client:CredentialsProvider.getCredentials|](v12, v1) @signature [|Lorg/apache/http/client/CredentialsProvider;.getCredentials:(Lorg/apache/http/auth/AuthScope;)Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:client:CredentialsProvider|] @type interface;
#L0a6612.   v2:= temp  @type object;
#L0a6614.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6618.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v6) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a661e.   v6:= temp;
#L0a6620.   if v6 == 0 then goto L0a6636;
#L0a6624.   if v2 == 0 then goto L0a6644;
#L0a6628.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a662c.   v7:= "Found credentials" @type (object, string);
#L0a6630.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6636.   call temp:=  [|org:apache:http:auth:AuthState.setAuthScope|](v10, v1) @signature [|Lorg/apache/http/auth/AuthState;.setAuthScope:(Lorg/apache/http/auth/AuthScope;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a663c.   call temp:=  [|org:apache:http:auth:AuthState.setCredentials|](v10, v2) @signature [|Lorg/apache/http/auth/AuthState;.setCredentials:(Lorg/apache/http/auth/Credentials;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6642.   goto L0a656c;
#L0a6644.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6648.   v7:= "Credentials not found" @type (object, string);
#L0a664c.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6652.   goto L0a6636;
#L0a6654.   call temp:=  [|org:apache:http:auth:AuthScheme.isComplete|](v0) @signature [|Lorg/apache/http/auth/AuthScheme;.isComplete:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a665a.   v6:= temp;
#L0a665c.   if v6 == 0 then goto L0a6636;
#L0a6660.   v6:= v9.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6664.   v7:= "Authentication failed" @type (object, string);
#L0a6668.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a666e.   v2:= 0  @length 4;
#L0a6670.   goto L0a6636;

   }
    procedure [|org:apache:http:impl:client:RequestWrapper|] [|org:apache:http:impl:client:DefaultRequestDirector.wrapRequest|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v1 @type (this), [|org:apache:http:HttpRequest|] v2 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.wrapRequest:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/impl/client/RequestWrapper;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0a6684.   v0:= instanceof @varname v2 @type [|org:apache:http:HttpEntityEnclosingRequest|];
#L0a6688.   if v0 == 0 then goto L0a669c;
#L0a668c.   v0:= new [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|];
#L0a6690.   v2:= ([|org:apache:http:HttpEntityEnclosingRequest|])v2;
#L0a6694.   call temp:=  [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.<init>|](v0, v2) @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.<init>:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @classDescriptor [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @type direct;
#L0a669a.   return v0  @type object;
#L0a669c.   v0:= new [|org:apache:http:impl:client:RequestWrapper|];
#L0a66a0.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.<init>|](v0, v2) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.<init>:(Lorg/apache/http/HttpRequest;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type direct;
#L0a66a6.   goto L0a669a;

   }
    procedure [|org:apache:http:HttpRequest|] [|org:apache:http:impl:client:DefaultRequestDirector.createConnectRequest|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v10 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v11 @type (object), [|org:apache:http:protocol:HttpContext|] v12 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createConnectRequest:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpRequest;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0a66b8.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v11) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a66be.   v6:= temp  @type object;
#L0a66c0.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v6) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a66c6.   v2:= temp  @type object;
#L0a66c8.   call temp:=  [|org:apache:http:HttpHost.getPort|](v6) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a66ce.   v3:= temp;
#L0a66d0.   if v3 >= 0 then goto L0a66f8;
#L0a66d4.   v8:= v10.[|org:apache:http:impl:client:DefaultRequestDirector.connManager|]   @type object;
#L0a66d8.   call temp:=  [|org:apache:http:conn:ClientConnectionManager.getSchemeRegistry|](v8) @signature [|Lorg/apache/http/conn/ClientConnectionManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @classDescriptor [|org:apache:http:conn:ClientConnectionManager|] @type interface;
#L0a66de.   v8:= temp  @type object;
#L0a66e0.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v6) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a66e6.   v9:= temp  @type object;
#L0a66e8.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v8, v9) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a66ee.   v5:= temp  @type object;
#L0a66f0.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getDefaultPort|](v5) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getDefaultPort:()I|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a66f6.   v3:= temp;
#L0a66f8.   v1:= new [|java:lang:StringBuilder|];
#L0a66fc.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a6702.   v8:= temp;
#L0a6704.   v8:= v8 + 6;
#L0a6708.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v8) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a670e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6714.   v8:= 58  @length 16;
#L0a6718.   call temp:=  [|java:lang:StringBuilder.append|](v1, v8) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a671e.   call temp:=  [|java:lang:Integer.toString|](v3) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0a6724.   v8:= temp  @type object;
#L0a6726.   call temp:=  [|java:lang:StringBuilder.append|](v1, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a672c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6732.   v0:= temp  @type object;
#L0a6734.   v8:= v10.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6738.   call temp:=  [|org:apache:http:params:HttpProtocolParams.getVersion|](v8) @signature [|Lorg/apache/http/params/HttpProtocolParams;.getVersion:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a673e.   v7:= temp  @type object;
#L0a6740.   v4:= new [|org:apache:http:message:BasicHttpRequest|];
#L0a6744.   v8:= "CONNECT" @type (object, string);
#L0a6748.   call temp:=  [|org:apache:http:message:BasicHttpRequest.<init>|](v4, v8, v0, v7) @signature [|Lorg/apache/http/message/BasicHttpRequest;.<init>:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V|] @classDescriptor [|org:apache:http:message:BasicHttpRequest|] @type direct;
#L0a674e.   return v4  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultRequestDirector.createTunnelToProxy|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object), [|int|] v4, [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createTunnelToProxy:(Lorg/apache/http/conn/routing/HttpRoute;ILorg/apache/http/protocol/HttpContext;)Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a6760.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0a6764.   v1:= "Proxy chains are not supported." @type (object, string);
#L0a6768.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0, v1) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0a676e.   throw v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultRequestDirector.createTunnelToTarget|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v20 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v21 @type (object), [|org:apache:http:protocol:HttpContext|] v22 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createTunnelToTarget:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
      
#L0a6780.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getProxyHost|](v21) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a6786.   v17:= temp  @type object;
#L0a6788.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v21) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a678e.   v19:= temp  @type object;
#L0a6790.   v6:= 0  @length 4;
#L0a6792.   v14:= 0  @length 4;
#L0a6794.   if v14 != 0 then goto L0a6a62;
#L0a6798.   v14:= 1  @length 4;
#L0a679a.   v0:= v20  @type object;
#L0a679e.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a67a2.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.isOpen|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a67a8.   v2:= temp;
#L0a67aa.   if v2 != 0 then goto L0a67cc;
#L0a67ae.   v0:= v20  @type object;
#L0a67b2.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a67b6.   v0:= v20  @type object;
#L0a67ba.   v4:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a67be.   v0:= v21  @type object;
#L0a67c2.   v1:= v22  @type object;
#L0a67c6.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.open|](v2, v0, v1, v4) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a67cc.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.createConnectRequest|](v20, v21, v22) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createConnectRequest:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpRequest;|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a67d2.   v11:= temp  @type object;
#L0a67d4.   v0:= v20  @type object;
#L0a67d8.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a67dc.   call temp:=  [|org:apache:http:params:HttpProtocolParams.getUserAgent|](v2) @signature [|Lorg/apache/http/params/HttpProtocolParams;.getUserAgent:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a67e2.   v8:= temp  @type object;
#L0a67e4.   if v8 == 0 then goto L0a67f2;
#L0a67e8.   v2:= "User-Agent" @type (object, string);
#L0a67ec.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v11, v2, v8) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a67f2.   v2:= "Host" @type (object, string);
#L0a67f6.   call temp:=  [|org:apache:http:HttpHost.toHostString|](v19) @signature [|Lorg/apache/http/HttpHost;.toHostString:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a67fc.   v4:= temp  @type object;
#L0a67fe.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v11, v2, v4) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a6804.   v0:= v20  @type object;
#L0a6808.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a680c.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v2) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6812.   v9:= temp  @type object;
#L0a6814.   v0:= v20  @type object;
#L0a6818.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a681c.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScope|](v2) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScope:()Lorg/apache/http/auth/AuthScope;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6822.   v10:= temp  @type object;
#L0a6824.   v0:= v20  @type object;
#L0a6828.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a682c.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v2) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6832.   v12:= temp  @type object;
#L0a6834.   if v12 == 0 then goto L0a6856;
#L0a6838.   if v10 != 0 then goto L0a6848;
#L0a683c.   call temp:=  [|org:apache:http:auth:AuthScheme.isConnectionBased|](v9) @signature [|Lorg/apache/http/auth/AuthScheme;.isConnectionBased:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a6842.   v2:= temp;
#L0a6844.   if v2 != 0 then goto L0a6856;
#L0a6848.   call temp:=  [|org:apache:http:auth:AuthScheme.authenticate|](v9, v12, v11) @signature [|Lorg/apache/http/auth/AuthScheme;.authenticate:(Lorg/apache/http/auth/Credentials;Lorg/apache/http/HttpRequest;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a684e.   v2:= temp  @type object;
#L0a6850.   call temp:=  [|org:apache:http:HttpRequest.addHeader|](v11, v2) @signature [|Lorg/apache/http/HttpRequest;.addHeader:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a6856.   v0:= v20  @type object;
#L0a685a.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]   @type object;
#L0a685e.   v0:= v20  @type object;
#L0a6862.   v4:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6866.   v0:= v22  @type object;
#L0a686a.   call temp:=  [|org:apache:http:protocol:HttpRequestExecutor.execute|](v2, v11, v4, v0) @signature [|Lorg/apache/http/protocol/HttpRequestExecutor;.execute:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:protocol:HttpRequestExecutor|] @type virtual;
#L0a6870.   v6:= temp  @type object;
#L0a6872.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v6) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6878.   v2:= temp  @type object;
#L0a687a.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v2) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a6880.   v18:= temp;
#L0a6882.   v2:= 200  @length 16;
#L0a6886.   v0:= v18;
#L0a688a.   if v0 >= v2 then goto L0a691c;
#L0a688e.   v2:= new [|org:apache:http:HttpException|];
#L0a6892.   v4:= new [|java:lang:StringBuilder|];
#L0a6896.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a689c.   v5:= "Unexpected response to CONNECT request: " @type (object, string);
#L0a68a0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a68a6.   v4:= temp  @type object;
#L0a68a8.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v6) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a68ae.   v5:= temp  @type object;
#L0a68b0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a68b6.   v4:= temp  @type object;
#L0a68b8.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a68be.   v4:= temp  @type object;
#L0a68c0.   call temp:=  [|org:apache:http:HttpException.<init>|](v2, v4) @signature [|Lorg/apache/http/HttpException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpException|] @type direct;
#L0a68c6.   throw v2;
#L0a68c8.   v16:= Exception  @type object;
#L0a68ca.   v0:= v20  @type object;
#L0a68ce.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a68d2.   call temp:=  [|org:apache:commons:logging:Log.isErrorEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isErrorEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a68d8.   v2:= temp;
#L0a68da.   if v2 == 0 then goto L0a6856;
#L0a68de.   v0:= v20  @type object;
#L0a68e2.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a68e6.   v4:= new [|java:lang:StringBuilder|];
#L0a68ea.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a68f0.   v5:= "Proxy authentication error: " @type (object, string);
#L0a68f4.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a68fa.   v4:= temp  @type object;
#L0a68fc.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v16) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L0a6902.   v5:= temp  @type object;
#L0a6904.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a690a.   v4:= temp  @type object;
#L0a690c.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6912.   v4:= temp  @type object;
#L0a6914.   call temp:=  [|org:apache:commons:logging:Log.error|](v2, v4) @signature [|Lorg/apache/commons/logging/Log;.error:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a691a.   goto L0a6856;
#L0a691c.   v2:= "http.auth.credentials-provider" @type (object, string);
#L0a6920.   v0:= v22  @type object;
#L0a6924.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a692a.   v13:= temp  @type object;
#L0a692c.   v13:= ([|org:apache:http:client:CredentialsProvider|])v13;
#L0a6930.   if v13 == 0 then goto L0a6794;
#L0a6934.   v0:= v20  @type object;
#L0a6938.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a693c.   call temp:=  [|org:apache:http:client:params:HttpClientParams.isAuthenticating|](v2) @signature [|Lorg/apache/http/client/params/HttpClientParams;.isAuthenticating:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:client:params:HttpClientParams|] @type static;
#L0a6942.   v2:= temp;
#L0a6944.   if v2 == 0 then goto L0a6794;
#L0a6948.   v0:= v20  @type object;
#L0a694c.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a6950.   v0:= v22  @type object;
#L0a6954.   call temp:=  [|org:apache:http:client:AuthenticationHandler.isAuthenticationRequested|](v2, v6, v0) @signature [|Lorg/apache/http/client/AuthenticationHandler;.isAuthenticationRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a695a.   v2:= temp;
#L0a695c.   if v2 == 0 then goto L0a6af4;
#L0a6960.   v0:= v20  @type object;
#L0a6964.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6968.   v4:= "Proxy requested authentication" @type (object, string);
#L0a696c.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6972.   v0:= v20  @type object;
#L0a6976.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a697a.   v0:= v22  @type object;
#L0a697e.   call temp:=  [|org:apache:http:client:AuthenticationHandler.getChallenges|](v2, v6, v0) @signature [|Lorg/apache/http/client/AuthenticationHandler;.getChallenges:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a6984.   v3:= temp  @type object;
#L0a6986.   v0:= v20  @type object;
#L0a698a.   v4:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a698e.   v0:= v20  @type object;
#L0a6992.   v5:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a6996.   v2:= v20  @type object;
#L0a699a.   v7:= v22  @type object;
#L0a699e.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.processChallenges|](v2, v3, v4, v5, v6, v7) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.processChallenges:(Ljava/util/Map;Lorg/apache/http/auth/AuthState;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a69a4.   v0:= v20  @type object;
#L0a69a8.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a69ac.   v0:= v20  @type object;
#L0a69b0.   v1:= v17  @type object;
#L0a69b4.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.updateAuthState|](v0, v2, v1, v13) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.updateAuthState:(Lorg/apache/http/auth/AuthState;Lorg/apache/http/HttpHost;Lorg/apache/http/client/CredentialsProvider;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a69ba.   v0:= v20  @type object;
#L0a69be.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a69c2.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v2) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a69c8.   v2:= temp  @type object;
#L0a69ca.   if v2 == 0 then goto L0a6794;
#L0a69ce.   v14:= 0  @length 4;
#L0a69d0.   v0:= v20  @type object;
#L0a69d4.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.reuseStrategy|]   @type object;
#L0a69d8.   v0:= v22  @type object;
#L0a69dc.   call temp:=  [|org:apache:http:ConnectionReuseStrategy.keepAlive|](v2, v6, v0) @signature [|Lorg/apache/http/ConnectionReuseStrategy;.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:ConnectionReuseStrategy|] @type interface;
#L0a69e2.   v2:= temp;
#L0a69e4.   if v2 == 0 then goto L0a6ae2;
#L0a69e8.   v0:= v20  @type object;
#L0a69ec.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a69f0.   v4:= "Connection kept alive" @type (object, string);
#L0a69f4.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a69fa.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v6) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6a00.   v15:= temp  @type object;
#L0a6a02.   if v15 == 0 then goto L0a6794;
#L0a6a06.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v15) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a6a0c.   goto L0a6794;
#L0a6a10.   v16:= Exception  @type object;
#L0a6a12.   v0:= v20  @type object;
#L0a6a16.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6a1a.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6a20.   v2:= temp;
#L0a6a22.   if v2 == 0 then goto L0a69a4;
#L0a6a26.   v0:= v20  @type object;
#L0a6a2a.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6a2e.   v4:= new [|java:lang:StringBuilder|];
#L0a6a32.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6a38.   v5:= "Authentication error: " @type (object, string);
#L0a6a3c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6a42.   v4:= temp  @type object;
#L0a6a44.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v16) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L0a6a4a.   v5:= temp  @type object;
#L0a6a4c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6a52.   v4:= temp  @type object;
#L0a6a54.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6a5a.   v4:= temp  @type object;
#L0a6a5c.   call temp:=  [|org:apache:commons:logging:Log.warn|](v2, v4) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6a62.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v6) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6a68.   v2:= temp  @type object;
#L0a6a6a.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v2) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a6a70.   v18:= temp;
#L0a6a72.   v2:= 299  @length 16;
#L0a6a76.   v0:= v18;
#L0a6a7a.   if v0 <= v2 then goto L0a6b08;
#L0a6a7e.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v6) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6a84.   v15:= temp  @type object;
#L0a6a86.   if v15 == 0 then goto L0a6a9a;
#L0a6a8a.   v2:= new [|org:apache:http:entity:BufferedHttpEntity|];
#L0a6a8e.   call temp:=  [|org:apache:http:entity:BufferedHttpEntity.<init>|](v2, v15) @signature [|Lorg/apache/http/entity/BufferedHttpEntity;.<init>:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:entity:BufferedHttpEntity|] @type direct;
#L0a6a94.   call temp:=  [|org:apache:http:HttpResponse.setEntity|](v6, v2) @signature [|Lorg/apache/http/HttpResponse;.setEntity:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6a9a.   v0:= v20  @type object;
#L0a6a9e.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6aa2.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.close|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6aa8.   v2:= new [|org:apache:http:impl:client:TunnelRefusedException|];
#L0a6aac.   v4:= new [|java:lang:StringBuilder|];
#L0a6ab0.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6ab6.   v5:= "CONNECT refused by proxy: " @type (object, string);
#L0a6aba.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6ac0.   v4:= temp  @type object;
#L0a6ac2.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v6) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a6ac8.   v5:= temp  @type object;
#L0a6aca.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6ad0.   v4:= temp  @type object;
#L0a6ad2.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6ad8.   v4:= temp  @type object;
#L0a6ada.   call temp:=  [|org:apache:http:impl:client:TunnelRefusedException.<init>|](v2, v4, v6) @signature [|Lorg/apache/http/impl/client/TunnelRefusedException;.<init>:(Ljava/lang/String;Lorg/apache/http/HttpResponse;)V|] @classDescriptor [|org:apache:http:impl:client:TunnelRefusedException|] @type direct;
#L0a6ae0.   throw v2;
#L0a6ae2.   v0:= v20  @type object;
#L0a6ae6.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6aea.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.close|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6af0.   goto L0a6794;
#L0a6af4.   v0:= v20  @type object;
#L0a6af8.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a6afc.   v4:= 0  @length 4;
#L0a6afe.   call temp:=  [|org:apache:http:auth:AuthState.setAuthScope|](v2, v4) @signature [|Lorg/apache/http/auth/AuthState;.setAuthScope:(Lorg/apache/http/auth/AuthScope;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a6b04.   goto L0a6794;
#L0a6b08.   v0:= v20  @type object;
#L0a6b0c.   v2:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6b10.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v2) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6b16.   v2:= 0  @length 4;
#L0a6b18.   return v2;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L0a6848..L0a6856] goto L0a68c8;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L0a6986..L0a69a4] goto L0a6a10;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:client:DefaultRequestDirector.determineRoute|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v7 @type (this), [|org:apache:http:HttpHost|] v8 @type (object), [|org:apache:http:HttpRequest|] v9 @type (object), [|org:apache:http:protocol:HttpContext|] v10 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a6b48.   if v8 != 0 then goto L0a6b64;
#L0a6b4c.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v9) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a6b52.   v4:= temp  @type object;
#L0a6b54.   v5:= "http.default-host" @type (object, string);
#L0a6b58.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v4, v5) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a6b5e.   v8:= temp  @type object;
#L0a6b60.   v8:= ([|org:apache:http:HttpHost|])v8;
#L0a6b64.   if v8 != 0 then goto L0a6bf8;
#L0a6b68.   v2:= 0  @length 4;
#L0a6b6a.   v0:= 0  @length 4;
#L0a6b6c.   v1:= 0  @length 4;
#L0a6b6e.   v4:= instanceof @varname v9 @type [|org:apache:http:client:methods:HttpUriRequest|];
#L0a6b72.   if v4 == 0 then goto L0a6b9e;
#L0a6b76.   v9:= ([|org:apache:http:client:methods:HttpUriRequest|])v9;
#L0a6b7a.   call temp:=  [|org:apache:http:client:methods:HttpUriRequest.getURI|](v9) @signature [|Lorg/apache/http/client/methods/HttpUriRequest;.getURI:()Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:methods:HttpUriRequest|] @type interface;
#L0a6b80.   v3:= temp  @type object;
#L0a6b82.   if v3 == 0 then goto L0a6b9e;
#L0a6b86.   call temp:=  [|java:net:URI.getScheme|](v3) @signature [|Ljava/net/URI;.getScheme:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6b8c.   v2:= temp  @type object;
#L0a6b8e.   call temp:=  [|java:net:URI.getHost|](v3) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6b94.   v0:= temp  @type object;
#L0a6b96.   call temp:=  [|java:net:URI.getPath|](v3) @signature [|Ljava/net/URI;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a6b9c.   v1:= temp  @type object;
#L0a6b9e.   v4:= new [|java:lang:IllegalStateException|];
#L0a6ba2.   v5:= new [|java:lang:StringBuilder|];
#L0a6ba6.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6bac.   v6:= "Target host must not be null, or set in parameters. scheme=" @type (object, string);
#L0a6bb0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bb6.   v5:= temp  @type object;
#L0a6bb8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bbe.   v5:= temp  @type object;
#L0a6bc0.   v6:= ", host=" @type (object, string);
#L0a6bc4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bca.   v5:= temp  @type object;
#L0a6bcc.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bd2.   v5:= temp  @type object;
#L0a6bd4.   v6:= ", path=" @type (object, string);
#L0a6bd8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bde.   v5:= temp  @type object;
#L0a6be0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6be6.   v5:= temp  @type object;
#L0a6be8.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6bee.   v5:= temp  @type object;
#L0a6bf0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a6bf6.   throw v4;
#L0a6bf8.   v4:= v7.[|org:apache:http:impl:client:DefaultRequestDirector.routePlanner|]   @type object;
#L0a6bfc.   call temp:=  [|org:apache:http:conn:routing:HttpRoutePlanner.determineRoute|](v4, v8, v9, v10) @signature [|Lorg/apache/http/conn/routing/HttpRoutePlanner;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoutePlanner|] @type interface;
#L0a6c02.   v4:= temp  @type object;
#L0a6c04.   return v4  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.establishRoute|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v8 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v9 @type (object), [|org:apache:http:protocol:HttpContext|] v10 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.establishRoute:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a6c18.   v2:= new [|org:apache:http:conn:routing:BasicRouteDirector|];
#L0a6c1c.   call temp:=  [|org:apache:http:conn:routing:BasicRouteDirector.<init>|](v2) @signature [|Lorg/apache/http/conn/routing/BasicRouteDirector;.<init>:()V|] @classDescriptor [|org:apache:http:conn:routing:BasicRouteDirector|] @type direct;
#L0a6c22.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6c26.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.getRoute|](v5) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6c2c.   v0:= temp  @type object;
#L0a6c2e.   call temp:=  [|org:apache:http:conn:routing:HttpRouteDirector.nextStep|](v2, v9, v0) @signature [|Lorg/apache/http/conn/routing/HttpRouteDirector;.nextStep:(Lorg/apache/http/conn/routing/RouteInfo;Lorg/apache/http/conn/routing/RouteInfo;)I|] @classDescriptor [|org:apache:http:conn:routing:HttpRouteDirector|] @type interface;
#L0a6c34.   v4:= temp;
#L0a6c36.   goto L0a6d44;
#L0a6c3c.   v5:= new [|java:lang:IllegalStateException|];
#L0a6c40.   v6:= new [|java:lang:StringBuilder|];
#L0a6c44.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6c4a.   v7:= "Unknown step indicator " @type (object, string);
#L0a6c4e.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6c54.   v6:= temp  @type object;
#L0a6c56.   call temp:=  [|java:lang:StringBuilder.append|](v6, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6c5c.   v6:= temp  @type object;
#L0a6c5e.   v7:= " from RouteDirector." @type (object, string);
#L0a6c62.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6c68.   v6:= temp  @type object;
#L0a6c6a.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6c70.   v6:= temp  @type object;
#L0a6c72.   call temp:=  [|java:lang:IllegalStateException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a6c78.   throw v5;
#L0a6c7a.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6c7e.   v6:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6c82.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.open|](v5, v9, v10, v6) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6c88.   if v4 > 0 then goto L0a6c22;
#L0a6c8c.   return @void ;
#L0a6c8e.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.createTunnelToTarget|](v8, v9, v10) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createTunnelToTarget:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a6c94.   v3:= temp;
#L0a6c96.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6c9a.   v6:= "Tunnel to target created." @type (object, string);
#L0a6c9e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6ca4.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6ca8.   v6:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6cac.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.tunnelTarget|](v5, v3, v6) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.tunnelTarget:(ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6cb2.   goto L0a6c88;
#L0a6cb4.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getHopCount|](v0) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a6cba.   v5:= temp;
#L0a6cbc.   v1:= v5 + -1;
#L0a6cc0.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.createTunnelToProxy|](v8, v9, v1, v10) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.createTunnelToProxy:(Lorg/apache/http/conn/routing/HttpRoute;ILorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a6cc6.   v3:= temp;
#L0a6cc8.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6ccc.   v6:= "Tunnel to proxy created." @type (object, string);
#L0a6cd0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6cd6.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6cda.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getHopTarget|](v9, v1) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopTarget:(I)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a6ce0.   v6:= temp  @type object;
#L0a6ce2.   v7:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6ce6.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.tunnelProxy|](v5, v6, v3, v7) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.tunnelProxy:(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6cec.   goto L0a6c88;
#L0a6cee.   v5:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6cf2.   v6:= v8.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6cf6.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.layerProtocol|](v5, v10, v6) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.layerProtocol:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6cfc.   goto L0a6c88;
#L0a6cfe.   v5:= new [|java:lang:IllegalStateException|];
#L0a6d02.   v6:= new [|java:lang:StringBuilder|];
#L0a6d06.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a6d0c.   v7:= "Unable to establish route.planned = " @type (object, string);
#L0a6d10.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6d16.   v6:= temp  @type object;
#L0a6d18.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6d1e.   v6:= temp  @type object;
#L0a6d20.   v7:= "current = " @type (object, string);
#L0a6d24.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6d2a.   v6:= temp  @type object;
#L0a6d2c.   call temp:=  [|java:lang:StringBuilder.append|](v6, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6d32.   v6:= temp  @type object;
#L0a6d34.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a6d3a.   v6:= temp  @type object;
#L0a6d3c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a6d42.   throw v5;
#L0a6d44.   switch  v4
                 | -1 => goto L0a6cfe
                 | 0 => goto L0a6c88
                 | 1 => goto L0a6c7a
                 | 2 => goto L0a6c7a
                 | 3 => goto L0a6c8e
                 | 4 => goto L0a6cb4
                 | 5 => goto L0a6cee
                 | => goto L0a6c3c;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:DefaultRequestDirector.execute|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v31 @type (this), [|org:apache:http:HttpHost|] v32 @type (object), [|org:apache:http:HttpRequest|] v33 @type (object), [|org:apache:http:protocol:HttpContext|] v34 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.execute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
        v27;
        v28;
        v29;
        v30;
      
#L0a6d78.   v15:= v33  @type object;
#L0a6d7c.   v0:= v31  @type object;
#L0a6d80.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.wrapRequest|](v0, v15) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.wrapRequest:(Lorg/apache/http/HttpRequest;)Lorg/apache/http/impl/client/RequestWrapper;|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a6d86.   v17:= temp  @type object;
#L0a6d88.   v0:= v31  @type object;
#L0a6d8c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6d90.   v28:= v0  @type object;
#L0a6d94.   v0:= v17  @type object;
#L0a6d98.   v1:= v28  @type object;
#L0a6d9c.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setParams|](v0, v1) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setParams:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a6da2.   v0:= v31  @type object;
#L0a6da6.   v1:= v32  @type object;
#L0a6daa.   v2:= v17  @type object;
#L0a6dae.   v3:= v34  @type object;
#L0a6db2.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.determineRoute|](v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a6db8.   v16:= temp  @type object;
#L0a6dba.   v22:= new [|org:apache:http:impl:client:RoutedRequest|];
#L0a6dbe.   v0:= v22  @type object;
#L0a6dc2.   v1:= v17  @type object;
#L0a6dc6.   v2:= v16  @type object;
#L0a6dca.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.<init>:(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type direct;
#L0a6dd0.   v0:= v31  @type object;
#L0a6dd4.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6dd8.   v28:= v0  @type object;
#L0a6ddc.   call temp:=  [|org:apache:http:conn:params:ConnManagerParams.getTimeout|](v28) @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getTimeout:(Lorg/apache/http/params/HttpParams;)J|] @classDescriptor [|org:apache:http:conn:params:ConnManagerParams|] @type static;
#L0a6de2.   v24:= temp  @type wide;
#L0a6de4.   v11:= 0  @length 4;
#L0a6de6.   v21:= 0  @length 16;
#L0a6dea.   v19:= 0  @length 16;
#L0a6dee.   v5:= 0  @length 4;
#L0a6df0.   if v5 != 0 then goto L0a7176;
#L0a6df4.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRequest|](v22) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRequest:()Lorg/apache/http/impl/client/RequestWrapper;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a6dfa.   v27:= temp  @type object;
#L0a6dfc.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRoute|](v22) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a6e02.   v23:= temp  @type object;
#L0a6e04.   v28:= "http.user-token" @type (object, string);
#L0a6e08.   v0:= v34  @type object;
#L0a6e0c.   v1:= v28  @type object;
#L0a6e10.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v1) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a6e16.   v26:= temp  @type object;
#L0a6e18.   v0:= v31  @type object;
#L0a6e1c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6e20.   v28:= v0  @type object;
#L0a6e24.   if v28 != 0 then goto L0a6ef6;
#L0a6e28.   v0:= v31  @type object;
#L0a6e2c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.connManager|]   @type object;
#L0a6e30.   v28:= v0  @type object;
#L0a6e34.   v0:= v28  @type object;
#L0a6e38.   v1:= v23  @type object;
#L0a6e3c.   v2:= v26  @type object;
#L0a6e40.   call temp:=  [|org:apache:http:conn:ClientConnectionManager.requestConnection|](v0, v1, v2) @signature [|Lorg/apache/http/conn/ClientConnectionManager;.requestConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;|] @classDescriptor [|org:apache:http:conn:ClientConnectionManager|] @type interface;
#L0a6e46.   v4:= temp  @type object;
#L0a6e48.   v0:= instanceof @varname v15 @type [|org:apache:http:client:methods:AbortableHttpRequest|];
#L0a6e4c.   v28:= v0;
#L0a6e50.   if v28 == 0 then goto L0a6e68;
#L0a6e54.   v0:= v15  @type object;
#L0a6e56.   v0:= ([|org:apache:http:client:methods:AbortableHttpRequest|])v0;
#L0a6e5a.   v28:= v0  @type object;
#L0a6e5e.   v0:= v28  @type object;
#L0a6e62.   call temp:=  [|org:apache:http:client:methods:AbortableHttpRequest.setConnectionRequest|](v0, v4) @signature [|Lorg/apache/http/client/methods/AbortableHttpRequest;.setConnectionRequest:(Lorg/apache/http/conn/ClientConnectionRequest;)V|] @classDescriptor [|org:apache:http:client:methods:AbortableHttpRequest|] @type interface;
#L0a6e68.   v28:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L0a6e6c.   v0:= v24  @type wide;
#L0a6e70.   v2:= v28  @type object;
#L0a6e74.   call temp:=  [|org:apache:http:conn:ClientConnectionRequest.getConnection|](v4, v0, v1, v2) @signature [|Lorg/apache/http/conn/ClientConnectionRequest;.getConnection:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;|] @classDescriptor [|org:apache:http:conn:ClientConnectionRequest|] @type interface;
#L0a6e7a.   v28:= temp  @type object;
#L0a6e7c.   v0:= v28  @type object;
#L0a6e80.   v1:= v31  @type object;
#L0a6e84.   v1.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]  := v0 @type object;
#L0a6e88.   v0:= v31  @type object;
#L0a6e8c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6e90.   v28:= v0  @type object;
#L0a6e94.   call temp:=  [|org:apache:http:params:HttpConnectionParams.isStaleCheckingEnabled|](v28) @signature [|Lorg/apache/http/params/HttpConnectionParams;.isStaleCheckingEnabled:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a6e9a.   v28:= temp;
#L0a6e9c.   if v28 == 0 then goto L0a6ef6;
#L0a6ea0.   v0:= v31  @type object;
#L0a6ea4.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6ea8.   v28:= v0  @type object;
#L0a6eac.   v29:= "Stale connection check" @type (object, string);
#L0a6eb0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6eb6.   v0:= v31  @type object;
#L0a6eba.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6ebe.   v28:= v0  @type object;
#L0a6ec2.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.isStale|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isStale:()Z|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6ec8.   v28:= temp;
#L0a6eca.   if v28 == 0 then goto L0a6ef6;
#L0a6ece.   v0:= v31  @type object;
#L0a6ed2.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a6ed6.   v28:= v0  @type object;
#L0a6eda.   v29:= "Stale connection detected" @type (object, string);
#L0a6ede.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a6ee4.   v0:= v31  @type object;
#L0a6ee8.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6eec.   v28:= v0  @type object;
#L0a6ef0.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.close|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6ef6.   v0:= instanceof @varname v15 @type [|org:apache:http:client:methods:AbortableHttpRequest|];
#L0a6efa.   v28:= v0;
#L0a6efe.   if v28 == 0 then goto L0a6f1e;
#L0a6f02.   v0:= v15  @type object;
#L0a6f04.   v0:= ([|org:apache:http:client:methods:AbortableHttpRequest|])v0;
#L0a6f08.   v28:= v0  @type object;
#L0a6f0c.   v0:= v31  @type object;
#L0a6f10.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6f14.   v29:= v0  @type object;
#L0a6f18.   call temp:=  [|org:apache:http:client:methods:AbortableHttpRequest.setReleaseTrigger|](v28, v29) @signature [|Lorg/apache/http/client/methods/AbortableHttpRequest;.setReleaseTrigger:(Lorg/apache/http/conn/ConnectionReleaseTrigger;)V|] @classDescriptor [|org:apache:http:client:methods:AbortableHttpRequest|] @type interface;
#L0a6f1e.   v0:= v31  @type object;
#L0a6f22.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6f26.   v28:= v0  @type object;
#L0a6f2a.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.isOpen|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6f30.   v28:= temp;
#L0a6f32.   if v28 != 0 then goto L0a7106;
#L0a6f36.   v0:= v31  @type object;
#L0a6f3a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6f3e.   v28:= v0  @type object;
#L0a6f42.   v0:= v31  @type object;
#L0a6f46.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a6f4a.   v29:= v0  @type object;
#L0a6f4e.   v0:= v28  @type object;
#L0a6f52.   v1:= v23  @type object;
#L0a6f56.   v2:= v34  @type object;
#L0a6f5a.   v3:= v29  @type object;
#L0a6f5e.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.open|](v0, v1, v2, v3) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a6f64.   v0:= v31  @type object;
#L0a6f68.   v1:= v23  @type object;
#L0a6f6c.   v2:= v34  @type object;
#L0a6f70.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.establishRoute|](v0, v1, v2) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.establishRoute:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a6f76.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.resetHeaders|](v27) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.resetHeaders:()V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a6f7c.   v0:= v31  @type object;
#L0a6f80.   v1:= v27  @type object;
#L0a6f84.   v2:= v23  @type object;
#L0a6f88.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.rewriteRequestURI|](v0, v1, v2) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.rewriteRequestURI:(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a6f8e.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getParams|](v27) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a6f94.   v28:= temp  @type object;
#L0a6f96.   v29:= "http.virtual-host" @type (object, string);
#L0a6f9a.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v28, v29) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a6fa0.   v28:= temp  @type object;
#L0a6fa2.   v0:= v28  @type object;
#L0a6fa6.   v0:= ([|org:apache:http:HttpHost|])v0;
#L0a6faa.   v32:= v0  @type object;
#L0a6fae.   if v32 != 0 then goto L0a6fba;
#L0a6fb2.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v23) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a6fb8.   v32:= temp  @type object;
#L0a6fba.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getProxyHost|](v23) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a6fc0.   v18:= temp  @type object;
#L0a6fc2.   v28:= "http.target_host" @type (object, string);
#L0a6fc6.   v0:= v34  @type object;
#L0a6fca.   v1:= v28  @type object;
#L0a6fce.   v2:= v32  @type object;
#L0a6fd2.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a6fd8.   v28:= "http.proxy_host" @type (object, string);
#L0a6fdc.   v0:= v34  @type object;
#L0a6fe0.   v1:= v28  @type object;
#L0a6fe4.   v2:= v18  @type object;
#L0a6fe8.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a6fee.   v28:= "http.connection" @type (object, string);
#L0a6ff2.   v0:= v31  @type object;
#L0a6ff6.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a6ffa.   v29:= v0  @type object;
#L0a6ffe.   v0:= v34  @type object;
#L0a7002.   v1:= v28  @type object;
#L0a7006.   v2:= v29  @type object;
#L0a700a.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7010.   v28:= "http.auth.target-scope" @type (object, string);
#L0a7014.   v0:= v31  @type object;
#L0a7018.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]   @type object;
#L0a701c.   v29:= v0  @type object;
#L0a7020.   v0:= v34  @type object;
#L0a7024.   v1:= v28  @type object;
#L0a7028.   v2:= v29  @type object;
#L0a702c.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7032.   v28:= "http.auth.proxy-scope" @type (object, string);
#L0a7036.   v0:= v31  @type object;
#L0a703a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a703e.   v29:= v0  @type object;
#L0a7042.   v0:= v34  @type object;
#L0a7046.   v1:= v28  @type object;
#L0a704a.   v2:= v29  @type object;
#L0a704e.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7054.   v0:= v31  @type object;
#L0a7058.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]   @type object;
#L0a705c.   v28:= v0  @type object;
#L0a7060.   v0:= v31  @type object;
#L0a7064.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.httpProcessor|]   @type object;
#L0a7068.   v29:= v0  @type object;
#L0a706c.   v0:= v28  @type object;
#L0a7070.   v1:= v27  @type object;
#L0a7074.   v2:= v29  @type object;
#L0a7078.   v3:= v34  @type object;
#L0a707c.   call temp:=  [|org:apache:http:protocol:HttpRequestExecutor.preProcess|](v0, v1, v2, v3) @signature [|Lorg/apache/http/protocol/HttpRequestExecutor;.preProcess:(Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:protocol:HttpRequestExecutor|] @type virtual;
#L0a7082.   v28:= "http.request" @type (object, string);
#L0a7086.   v0:= v34  @type object;
#L0a708a.   v1:= v28  @type object;
#L0a708e.   v2:= v27  @type object;
#L0a7092.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7098.   v20:= 1  @length 16;
#L0a709c.   if v20 == 0 then goto L0a73ca;
#L0a70a0.   v11:= v11 + 1;
#L0a70a4.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.incrementExecCount|](v27) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.incrementExecCount:()V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a70aa.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getExecCount|](v27) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getExecCount:()I|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a70b0.   v28:= temp;
#L0a70b2.   v29:= 1  @length 16;
#L0a70b6.   v0:= v28;
#L0a70ba.   v1:= v29;
#L0a70be.   if v0 <= v1 then goto L0a71b8;
#L0a70c2.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.isRepeatable|](v27) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.isRepeatable:()Z|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a70c8.   v28:= temp;
#L0a70ca.   if v28 != 0 then goto L0a71b8;
#L0a70ce.   v28:= new [|org:apache:http:client:NonRepeatableRequestException|];
#L0a70d2.   v29:= "Cannot retry request with a non-repeatable request entity" @type (object, string);
#L0a70d6.   call temp:=  [|org:apache:http:client:NonRepeatableRequestException.<init>|](v28, v29) @signature [|Lorg/apache/http/client/NonRepeatableRequestException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:client:NonRepeatableRequestException|] @type direct;
#L0a70dc.   throw v28;
#L0a70de.   v10:= Exception  @type object;
#L0a70e0.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.abortConnection|](v31) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.abortConnection:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a70e6.   throw v10;
#L0a70e8.   v13:= Exception  @type object;
#L0a70ea.   v14:= new [|java:io:InterruptedIOException|];
#L0a70ee.   call temp:=  [|java:io:InterruptedIOException.<init>|](v14) @signature [|Ljava/io/InterruptedIOException;.<init>:()V|] @classDescriptor [|java:io:InterruptedIOException|] @type direct;
#L0a70f4.   call temp:=  [|java:io:InterruptedIOException.initCause|](v14, v13) @signature [|Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:InterruptedIOException|] @type virtual;
#L0a70fa.   throw v14;
#L0a70fc.   v10:= Exception  @type object;
#L0a70fe.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.abortConnection|](v31) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.abortConnection:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a7104.   throw v10;
#L0a7106.   v0:= v31  @type object;
#L0a710a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a710e.   v28:= v0  @type object;
#L0a7112.   v0:= v31  @type object;
#L0a7116.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a711a.   v29:= v0  @type object;
#L0a711e.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSoTimeout|](v29) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSoTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a7124.   v29:= temp;
#L0a7126.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.setSocketTimeout|](v28, v29) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.setSocketTimeout:(I)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a712c.   goto L0a6f64;
#L0a7130.   v10:= Exception  @type object;
#L0a7132.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.abortConnection|](v31) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.abortConnection:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a7138.   throw v10;
#L0a713a.   v10:= Exception  @type object;
#L0a713c.   v0:= v31  @type object;
#L0a7140.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7144.   v28:= v0  @type object;
#L0a7148.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v28) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a714e.   v28:= temp;
#L0a7150.   if v28 == 0 then goto L0a716e;
#L0a7154.   v0:= v31  @type object;
#L0a7158.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a715c.   v28:= v0  @type object;
#L0a7160.   call temp:=  [|org:apache:http:impl:client:TunnelRefusedException.getMessage|](v10) @signature [|Lorg/apache/http/impl/client/TunnelRefusedException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:client:TunnelRefusedException|] @type virtual;
#L0a7166.   v29:= temp  @type object;
#L0a7168.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a716e.   call temp:=  [|org:apache:http:impl:client:TunnelRefusedException.getResponse|](v10) @signature [|Lorg/apache/http/impl/client/TunnelRefusedException;.getResponse:()Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:client:TunnelRefusedException|] @type virtual;
#L0a7174.   v19:= temp  @type object;
#L0a7176.   if v19 == 0 then goto L0a719a;
#L0a717a.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v19) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a7180.   v28:= temp  @type object;
#L0a7182.   if v28 == 0 then goto L0a719a;
#L0a7186.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v19) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a718c.   v28:= temp  @type object;
#L0a718e.   call temp:=  [|org:apache:http:HttpEntity.isStreaming|](v28) @signature [|Lorg/apache/http/HttpEntity;.isStreaming:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a7194.   v28:= temp;
#L0a7196.   if v28 != 0 then goto L0a756c;
#L0a719a.   if v21 == 0 then goto L0a71b0;
#L0a719e.   v0:= v31  @type object;
#L0a71a2.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a71a6.   v28:= v0  @type object;
#L0a71aa.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a71b0.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.releaseConnection|](v31) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.releaseConnection:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a71b6.   return v19  @type object;
#L0a71b8.   v0:= v31  @type object;
#L0a71bc.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a71c0.   v28:= v0  @type object;
#L0a71c4.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v28) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a71ca.   v28:= temp;
#L0a71cc.   if v28 == 0 then goto L0a7218;
#L0a71d0.   v0:= v31  @type object;
#L0a71d4.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a71d8.   v28:= v0  @type object;
#L0a71dc.   v29:= new [|java:lang:StringBuilder|];
#L0a71e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v29) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a71e6.   v30:= "Attempt " @type (object, string);
#L0a71ea.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a71f0.   v29:= temp  @type object;
#L0a71f2.   v0:= v29  @type object;
#L0a71f6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a71fc.   v29:= temp  @type object;
#L0a71fe.   v30:= " to execute request" @type (object, string);
#L0a7202.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7208.   v29:= temp  @type object;
#L0a720a.   call temp:=  [|java:lang:StringBuilder.toString|](v29) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7210.   v29:= temp  @type object;
#L0a7212.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7218.   v0:= v31  @type object;
#L0a721c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]   @type object;
#L0a7220.   v28:= v0  @type object;
#L0a7224.   v0:= v31  @type object;
#L0a7228.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a722c.   v29:= v0  @type object;
#L0a7230.   v0:= v28  @type object;
#L0a7234.   v1:= v27  @type object;
#L0a7238.   v2:= v29  @type object;
#L0a723c.   v3:= v34  @type object;
#L0a7240.   call temp:=  [|org:apache:http:protocol:HttpRequestExecutor.execute|](v0, v1, v2, v3) @signature [|Lorg/apache/http/protocol/HttpRequestExecutor;.execute:(Lorg/apache/http/HttpRequest;Lorg/apache/http/HttpClientConnection;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:protocol:HttpRequestExecutor|] @type virtual;
#L0a7246.   v19:= temp  @type object;
#L0a7248.   v20:= 0  @length 16;
#L0a724c.   goto L0a709c;
#L0a7250.   v10:= Exception  @type object;
#L0a7252.   v0:= v31  @type object;
#L0a7256.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a725a.   v28:= v0  @type object;
#L0a725e.   v29:= "Closing the connection." @type (object, string);
#L0a7262.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7268.   v0:= v31  @type object;
#L0a726c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a7270.   v28:= v0  @type object;
#L0a7274.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.close|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a727a.   v0:= v31  @type object;
#L0a727e.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.retryHandler|]   @type object;
#L0a7282.   v28:= v0  @type object;
#L0a7286.   v0:= v28  @type object;
#L0a728a.   v1:= v34  @type object;
#L0a728e.   call temp:=  [|org:apache:http:client:HttpRequestRetryHandler.retryRequest|](v0, v10, v11, v1) @signature [|Lorg/apache/http/client/HttpRequestRetryHandler;.retryRequest:(Ljava/io/IOException;ILorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:client:HttpRequestRetryHandler|] @type interface;
#L0a7294.   v28:= temp;
#L0a7296.   if v28 == 0 then goto L0a73c6;
#L0a729a.   v0:= v31  @type object;
#L0a729e.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a72a2.   v28:= v0  @type object;
#L0a72a6.   call temp:=  [|org:apache:commons:logging:Log.isInfoEnabled|](v28) @signature [|Lorg/apache/commons/logging/Log;.isInfoEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a72ac.   v28:= temp;
#L0a72ae.   if v28 == 0 then goto L0a7316;
#L0a72b2.   v0:= v31  @type object;
#L0a72b6.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a72ba.   v28:= v0  @type object;
#L0a72be.   v29:= new [|java:lang:StringBuilder|];
#L0a72c2.   call temp:=  [|java:lang:StringBuilder.<init>|](v29) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a72c8.   v30:= "I/O exception (" @type (object, string);
#L0a72cc.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a72d2.   v29:= temp  @type object;
#L0a72d4.   call temp:=  [|java:lang:Object.getClass|](v10) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a72da.   v30:= temp  @type object;
#L0a72dc.   call temp:=  [|java:lang:Class.getName|](v30) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0a72e2.   v30:= temp  @type object;
#L0a72e4.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a72ea.   v29:= temp  @type object;
#L0a72ec.   v30:= ") caught when processing request: " @type (object, string);
#L0a72f0.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a72f6.   v29:= temp  @type object;
#L0a72f8.   call temp:=  [|java:io:IOException.getMessage|](v10) @signature [|Ljava/io/IOException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L0a72fe.   v30:= temp  @type object;
#L0a7300.   call temp:=  [|java:lang:StringBuilder.append|](v29, v30) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7306.   v29:= temp  @type object;
#L0a7308.   call temp:=  [|java:lang:StringBuilder.toString|](v29) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a730e.   v29:= temp  @type object;
#L0a7310.   call temp:=  [|org:apache:commons:logging:Log.info|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7316.   v0:= v31  @type object;
#L0a731a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a731e.   v28:= v0  @type object;
#L0a7322.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v28) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7328.   v28:= temp;
#L0a732a.   if v28 == 0 then goto L0a7350;
#L0a732e.   v0:= v31  @type object;
#L0a7332.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7336.   v28:= v0  @type object;
#L0a733a.   call temp:=  [|java:io:IOException.getMessage|](v10) @signature [|Ljava/io/IOException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:io:IOException|] @type virtual;
#L0a7340.   v29:= temp  @type object;
#L0a7342.   v0:= v28  @type object;
#L0a7346.   v1:= v29  @type object;
#L0a734a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v0, v1, v10) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7350.   v0:= v31  @type object;
#L0a7354.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7358.   v28:= v0  @type object;
#L0a735c.   v29:= "Retrying request" @type (object, string);
#L0a7360.   call temp:=  [|org:apache:commons:logging:Log.info|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.info:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7366.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getHopCount|](v23) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getHopCount:()I|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a736c.   v28:= temp;
#L0a736e.   v29:= 1  @length 16;
#L0a7372.   v0:= v28;
#L0a7376.   v1:= v29;
#L0a737a.   if v0 != v1 then goto L0a73c8;
#L0a737e.   v0:= v31  @type object;
#L0a7382.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7386.   v28:= v0  @type object;
#L0a738a.   v29:= "Reopening the direct connection." @type (object, string);
#L0a738e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7394.   v0:= v31  @type object;
#L0a7398.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a739c.   v28:= v0  @type object;
#L0a73a0.   v0:= v31  @type object;
#L0a73a4.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a73a8.   v29:= v0  @type object;
#L0a73ac.   v0:= v28  @type object;
#L0a73b0.   v1:= v23  @type object;
#L0a73b4.   v2:= v34  @type object;
#L0a73b8.   v3:= v29  @type object;
#L0a73bc.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.open|](v0, v1, v2, v3) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a73c2.   goto L0a709c;
#L0a73c6.   throw v10;
#L0a73c8.   throw v10;
#L0a73ca.   v0:= v31  @type object;
#L0a73ce.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.params|]   @type object;
#L0a73d2.   v28:= v0  @type object;
#L0a73d6.   v0:= v19  @type object;
#L0a73da.   v1:= v28  @type object;
#L0a73de.   call temp:=  [|org:apache:http:HttpResponse.setParams|](v0, v1) @signature [|Lorg/apache/http/HttpResponse;.setParams:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a73e4.   v0:= v31  @type object;
#L0a73e8.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.requestExec|]   @type object;
#L0a73ec.   v28:= v0  @type object;
#L0a73f0.   v0:= v31  @type object;
#L0a73f4.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.httpProcessor|]   @type object;
#L0a73f8.   v29:= v0  @type object;
#L0a73fc.   v0:= v28  @type object;
#L0a7400.   v1:= v19  @type object;
#L0a7404.   v2:= v29  @type object;
#L0a7408.   v3:= v34  @type object;
#L0a740c.   call temp:=  [|org:apache:http:protocol:HttpRequestExecutor.postProcess|](v0, v1, v2, v3) @signature [|Lorg/apache/http/protocol/HttpRequestExecutor;.postProcess:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpProcessor;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:protocol:HttpRequestExecutor|] @type virtual;
#L0a7412.   v0:= v31  @type object;
#L0a7416.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.reuseStrategy|]   @type object;
#L0a741a.   v28:= v0  @type object;
#L0a741e.   v0:= v28  @type object;
#L0a7422.   v1:= v19  @type object;
#L0a7426.   v2:= v34  @type object;
#L0a742a.   call temp:=  [|org:apache:http:ConnectionReuseStrategy.keepAlive|](v0, v1, v2) @signature [|Lorg/apache/http/ConnectionReuseStrategy;.keepAlive:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:ConnectionReuseStrategy|] @type interface;
#L0a7430.   v21:= temp;
#L0a7432.   if v21 == 0 then goto L0a7474;
#L0a7436.   v0:= v31  @type object;
#L0a743a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.keepAliveStrategy|]   @type object;
#L0a743e.   v28:= v0  @type object;
#L0a7442.   v0:= v28  @type object;
#L0a7446.   v1:= v19  @type object;
#L0a744a.   v2:= v34  @type object;
#L0a744e.   call temp:=  [|org:apache:http:conn:ConnectionKeepAliveStrategy.getKeepAliveDuration|](v0, v1, v2) @signature [|Lorg/apache/http/conn/ConnectionKeepAliveStrategy;.getKeepAliveDuration:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)J|] @classDescriptor [|org:apache:http:conn:ConnectionKeepAliveStrategy|] @type interface;
#L0a7454.   v6:= temp  @type wide;
#L0a7456.   v0:= v31  @type object;
#L0a745a.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a745e.   v28:= v0  @type object;
#L0a7462.   v29:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L0a7466.   v0:= v28  @type object;
#L0a746a.   v1:= v29  @type object;
#L0a746e.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.setIdleDuration|](v0, v6, v7, v1) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.setIdleDuration:(JLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a7474.   v0:= v31  @type object;
#L0a7478.   v1:= v22  @type object;
#L0a747c.   v2:= v19  @type object;
#L0a7480.   v3:= v34  @type object;
#L0a7484.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.handleResponse|](v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.handleResponse:(Lorg/apache/http/impl/client/RoutedRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/impl/client/RoutedRequest;|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a748a.   v12:= temp  @type object;
#L0a748c.   if v12 != 0 then goto L0a74f2;
#L0a7490.   v5:= 1  @length 4;
#L0a7492.   v0:= v31  @type object;
#L0a7496.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.userTokenHandler|]   @type object;
#L0a749a.   v28:= v0  @type object;
#L0a749e.   v0:= v28  @type object;
#L0a74a2.   v1:= v34  @type object;
#L0a74a6.   call temp:=  [|org:apache:http:client:UserTokenHandler.getUserToken|](v0, v1) @signature [|Lorg/apache/http/client/UserTokenHandler;.getUserToken:(Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:client:UserTokenHandler|] @type interface;
#L0a74ac.   v26:= temp  @type object;
#L0a74ae.   v28:= "http.user-token" @type (object, string);
#L0a74b2.   v0:= v34  @type object;
#L0a74b6.   v1:= v28  @type object;
#L0a74ba.   v2:= v26  @type object;
#L0a74be.   call temp:=  [|org:apache:http:protocol:HttpContext.setAttribute|](v0, v1, v2) @signature [|Lorg/apache/http/protocol/HttpContext;.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a74c4.   v0:= v31  @type object;
#L0a74c8.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a74cc.   v28:= v0  @type object;
#L0a74d0.   if v28 == 0 then goto L0a6df0;
#L0a74d4.   v0:= v31  @type object;
#L0a74d8.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a74dc.   v28:= v0  @type object;
#L0a74e0.   v0:= v28  @type object;
#L0a74e4.   v1:= v26  @type object;
#L0a74e8.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.setState|](v0, v1) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.setState:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a74ee.   goto L0a6df0;
#L0a74f2.   if v21 == 0 then goto L0a7558;
#L0a74f6.   v0:= v31  @type object;
#L0a74fa.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a74fe.   v28:= v0  @type object;
#L0a7502.   v29:= "Connection kept alive" @type (object, string);
#L0a7506.   call temp:=  [|org:apache:commons:logging:Log.debug|](v28, v29) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a750c.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v19) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a7512.   v8:= temp  @type object;
#L0a7514.   if v8 == 0 then goto L0a751e;
#L0a7518.   call temp:=  [|org:apache:http:HttpEntity.consumeContent|](v8) @signature [|Lorg/apache/http/HttpEntity;.consumeContent:()V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a751e.   v0:= v31  @type object;
#L0a7522.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a7526.   v28:= v0  @type object;
#L0a752a.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.markReusable|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.markReusable:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a7530.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRoute|](v12) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a7536.   v28:= temp  @type object;
#L0a7538.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRoute|](v22) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a753e.   v29:= temp  @type object;
#L0a7540.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.equals|](v28, v29) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7546.   v28:= temp;
#L0a7548.   if v28 != 0 then goto L0a7552;
#L0a754c.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.releaseConnection|](v31) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.releaseConnection:()V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a7552.   v22:= v12  @type object;
#L0a7556.   goto L0a7492;
#L0a7558.   v0:= v31  @type object;
#L0a755c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a7560.   v28:= v0  @type object;
#L0a7564.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.close|](v28) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a756a.   goto L0a7530;
#L0a756c.   call temp:=  [|org:apache:http:HttpResponse.getEntity|](v19) @signature [|Lorg/apache/http/HttpResponse;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a7572.   v8:= temp  @type object;
#L0a7574.   v9:= new [|org:apache:http:conn:BasicManagedEntity|];
#L0a7578.   v0:= v31  @type object;
#L0a757c.   v0:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a7580.   v28:= v0  @type object;
#L0a7584.   v0:= v28  @type object;
#L0a7588.   v1:= v21;
#L0a758c.   call temp:=  [|org:apache:http:conn:BasicManagedEntity.<init>|](v9, v8, v0, v1) @signature [|Lorg/apache/http/conn/BasicManagedEntity;.<init>:(Lorg/apache/http/HttpEntity;Lorg/apache/http/conn/ManagedClientConnection;Z)V|] @classDescriptor [|org:apache:http:conn:BasicManagedEntity|] @type direct;
#L0a7592.   v0:= v19  @type object;
#L0a7596.   call temp:=  [|org:apache:http:HttpResponse.setEntity|](v0, v9) @signature [|Lorg/apache/http/HttpResponse;.setEntity:(Lorg/apache/http/HttpEntity;)V|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a759c.   goto L0a71b6;
#L0a75a0.   v28:= Exception  @type object;
#L0a75a2.   goto L0a6ef6;
  catch  [|org:apache:http:HttpException|] @[L0a6df4..L0a6e68] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6df4..L0a6e68] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6df4..L0a6e68] goto L0a7130;
  catch  [|java:lang:InterruptedException|] @[L0a6e68..L0a6e88] goto L0a70e8;
  catch  [|org:apache:http:HttpException|] @[L0a6e68..L0a6e88] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6e68..L0a6e88] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6e68..L0a6e88] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a6e88..L0a6ee4] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6e88..L0a6ee4] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6e88..L0a6ee4] goto L0a7130;
  catch  [|java:io:IOException|] @[L0a6ee4..L0a6ef6] goto L0a75a0;
  catch  [|org:apache:http:HttpException|] @[L0a6ee4..L0a6ef6] goto L0a70de;
  catch  [|java:lang:RuntimeException|] @[L0a6ee4..L0a6ef6] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a6ef6..L0a6f64] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6ef6..L0a6f64] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6ef6..L0a6f64] goto L0a7130;
  catch  [|org:apache:http:impl:client:TunnelRefusedException|] @[L0a6f64..L0a6f76] goto L0a713a;
  catch  [|org:apache:http:HttpException|] @[L0a6f64..L0a6f76] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6f64..L0a6f76] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6f64..L0a6f76] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a6f76..L0a70de] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a6f76..L0a70de] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a6f76..L0a70de] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a70ea..L0a70fc] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a70ea..L0a70fc] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a70ea..L0a70fc] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a7106..L0a712c] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a7106..L0a712c] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a7106..L0a712c] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a713c..L0a71b6] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a713c..L0a71b6] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a713c..L0a71b6] goto L0a7130;
  catch  [|java:io:IOException|] @[L0a71b8..L0a7246] goto L0a7250;
  catch  [|org:apache:http:HttpException|] @[L0a71b8..L0a7246] goto L0a70de;
  catch  [|java:lang:RuntimeException|] @[L0a71b8..L0a7246] goto L0a7130;
  catch  [|org:apache:http:HttpException|] @[L0a7252..L0a759c] goto L0a70de;
  catch  [|java:io:IOException|] @[L0a7252..L0a759c] goto L0a70fc;
  catch  [|java:lang:RuntimeException|] @[L0a7252..L0a759c] goto L0a7130;

   }
    procedure [|org:apache:http:impl:client:RoutedRequest|] [|org:apache:http:impl:client:DefaultRequestDirector.handleResponse|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v23 @type (this), [|org:apache:http:impl:client:RoutedRequest|] v24 @type (object), [|org:apache:http:HttpResponse|] v25 @type (object), [|org:apache:http:protocol:HttpContext|] v26 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.handleResponse:(Lorg/apache/http/impl/client/RoutedRequest;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/impl/client/RoutedRequest;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
      
#L0a7664.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRoute|](v24) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a766a.   v19:= temp  @type object;
#L0a766c.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getProxyHost|](v19) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7672.   v16:= temp  @type object;
#L0a7674.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.getRequest|](v24) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRequest:()Lorg/apache/http/impl/client/RequestWrapper;|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type virtual;
#L0a767a.   v18:= temp  @type object;
#L0a767c.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getParams|](v18) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7682.   v15:= temp  @type object;
#L0a7684.   call temp:=  [|org:apache:http:client:params:HttpClientParams.isRedirecting|](v15) @signature [|Lorg/apache/http/client/params/HttpClientParams;.isRedirecting:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:client:params:HttpClientParams|] @type static;
#L0a768a.   v3:= temp;
#L0a768c.   if v3 == 0 then goto L0a7824;
#L0a7690.   v0:= v23  @type object;
#L0a7694.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.redirectHandler|]   @type object;
#L0a7698.   v0:= v25  @type object;
#L0a769c.   v1:= v26  @type object;
#L0a76a0.   call temp:=  [|org:apache:http:client:RedirectHandler.isRedirectRequested|](v3, v0, v1) @signature [|Lorg/apache/http/client/RedirectHandler;.isRedirectRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:client:RedirectHandler|] @type interface;
#L0a76a6.   v3:= temp;
#L0a76a8.   if v3 == 0 then goto L0a7824;
#L0a76ac.   v0:= v23  @type object;
#L0a76b0.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.redirectCount|] ;
#L0a76b4.   v0:= v23  @type object;
#L0a76b8.   v5:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.maxRedirects|] ;
#L0a76bc.   if v3 < v5 then goto L0a7706;
#L0a76c0.   v3:= new [|org:apache:http:client:RedirectException|];
#L0a76c4.   v5:= new [|java:lang:StringBuilder|];
#L0a76c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a76ce.   v6:= "Maximum redirects (" @type (object, string);
#L0a76d2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a76d8.   v5:= temp  @type object;
#L0a76da.   v0:= v23  @type object;
#L0a76de.   v6:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.maxRedirects|] ;
#L0a76e2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a76e8.   v5:= temp  @type object;
#L0a76ea.   v6:= ") exceeded" @type (object, string);
#L0a76ee.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a76f4.   v5:= temp  @type object;
#L0a76f6.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a76fc.   v5:= temp  @type object;
#L0a76fe.   call temp:=  [|org:apache:http:client:RedirectException.<init>|](v3, v5) @signature [|Lorg/apache/http/client/RedirectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:client:RedirectException|] @type direct;
#L0a7704.   throw v3;
#L0a7706.   v0:= v23  @type object;
#L0a770a.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.redirectCount|] ;
#L0a770e.   v3:= v3 + 1;
#L0a7712.   v0:= v23  @type object;
#L0a7716.   v0.[|org:apache:http:impl:client:DefaultRequestDirector.redirectCount|]  := v3;
#L0a771a.   v0:= v23  @type object;
#L0a771e.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.redirectHandler|]   @type object;
#L0a7722.   v0:= v25  @type object;
#L0a7726.   v1:= v26  @type object;
#L0a772a.   call temp:=  [|org:apache:http:client:RedirectHandler.getLocationURI|](v3, v0, v1) @signature [|Lorg/apache/http/client/RedirectHandler;.getLocationURI:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:RedirectHandler|] @type interface;
#L0a7730.   v21:= temp  @type object;
#L0a7732.   v13:= new [|org:apache:http:HttpHost|];
#L0a7736.   call temp:=  [|java:net:URI.getHost|](v21) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a773c.   v3:= temp  @type object;
#L0a773e.   call temp:=  [|java:net:URI.getPort|](v21) @signature [|Ljava/net/URI;.getPort:()I|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a7744.   v5:= temp;
#L0a7746.   call temp:=  [|java:net:URI.getScheme|](v21) @signature [|Ljava/net/URI;.getScheme:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a774c.   v6:= temp  @type object;
#L0a774e.   call temp:=  [|org:apache:http:HttpHost.<init>|](v13, v3, v5, v6) @signature [|Lorg/apache/http/HttpHost;.<init>:(Ljava/lang/String;ILjava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpHost|] @type direct;
#L0a7754.   v17:= new [|org:apache:http:client:methods:HttpGet|];
#L0a7758.   v0:= v17  @type object;
#L0a775c.   v1:= v21  @type object;
#L0a7760.   call temp:=  [|org:apache:http:client:methods:HttpGet.<init>|](v0, v1) @signature [|Lorg/apache/http/client/methods/HttpGet;.<init>:(Ljava/net/URI;)V|] @classDescriptor [|org:apache:http:client:methods:HttpGet|] @type direct;
#L0a7766.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getOriginal|](v18) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getOriginal:()Lorg/apache/http/HttpRequest;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a776c.   v14:= temp  @type object;
#L0a776e.   call temp:=  [|org:apache:http:HttpRequest.getAllHeaders|](v14) @signature [|Lorg/apache/http/HttpRequest;.getAllHeaders:()[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a7774.   v3:= temp  @type object;
#L0a7776.   v0:= v17  @type object;
#L0a777a.   call temp:=  [|org:apache:http:client:methods:HttpGet.setHeaders|](v0, v3) @signature [|Lorg/apache/http/client/methods/HttpGet;.setHeaders:([Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:client:methods:HttpGet|] @type virtual;
#L0a7780.   v22:= new [|org:apache:http:impl:client:RequestWrapper|];
#L0a7784.   v0:= v22  @type object;
#L0a7788.   v1:= v17  @type object;
#L0a778c.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.<init>:(Lorg/apache/http/HttpRequest;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type direct;
#L0a7792.   v0:= v22  @type object;
#L0a7796.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setParams|](v0, v15) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setParams:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a779c.   v0:= v23  @type object;
#L0a77a0.   v1:= v22  @type object;
#L0a77a4.   v2:= v26  @type object;
#L0a77a8.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.determineRoute|](v0, v13, v1, v2) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type virtual;
#L0a77ae.   v12:= temp  @type object;
#L0a77b0.   v11:= new [|org:apache:http:impl:client:RoutedRequest|];
#L0a77b4.   v0:= v22  @type object;
#L0a77b8.   call temp:=  [|org:apache:http:impl:client:RoutedRequest.<init>|](v11, v0, v12) @signature [|Lorg/apache/http/impl/client/RoutedRequest;.<init>:(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:client:RoutedRequest|] @type direct;
#L0a77be.   v0:= v23  @type object;
#L0a77c2.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a77c6.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a77cc.   v3:= temp;
#L0a77ce.   if v3 == 0 then goto L0a781e;
#L0a77d2.   v0:= v23  @type object;
#L0a77d6.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a77da.   v5:= new [|java:lang:StringBuilder|];
#L0a77de.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a77e4.   v6:= "Redirecting to '" @type (object, string);
#L0a77e8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a77ee.   v5:= temp  @type object;
#L0a77f0.   v0:= v21  @type object;
#L0a77f4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a77fa.   v5:= temp  @type object;
#L0a77fc.   v6:= "' via " @type (object, string);
#L0a7800.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7806.   v5:= temp  @type object;
#L0a7808.   call temp:=  [|java:lang:StringBuilder.append|](v5, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a780e.   v5:= temp  @type object;
#L0a7810.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7816.   v5:= temp  @type object;
#L0a7818.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a781e.   v24:= v11  @type object;
#L0a7822.   return v24  @type object;
#L0a7824.   v3:= "http.auth.credentials-provider" @type (object, string);
#L0a7828.   v0:= v26  @type object;
#L0a782c.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7832.   v9:= temp  @type object;
#L0a7834.   v9:= ([|org:apache:http:client:CredentialsProvider|])v9;
#L0a7838.   if v9 == 0 then goto L0a7a6e;
#L0a783c.   call temp:=  [|org:apache:http:client:params:HttpClientParams.isAuthenticating|](v15) @signature [|Lorg/apache/http/client/params/HttpClientParams;.isAuthenticating:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:client:params:HttpClientParams|] @type static;
#L0a7842.   v3:= temp;
#L0a7844.   if v3 == 0 then goto L0a7a6e;
#L0a7848.   v0:= v23  @type object;
#L0a784c.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthHandler|]   @type object;
#L0a7850.   v0:= v25  @type object;
#L0a7854.   v1:= v26  @type object;
#L0a7858.   call temp:=  [|org:apache:http:client:AuthenticationHandler.isAuthenticationRequested|](v3, v0, v1) @signature [|Lorg/apache/http/client/AuthenticationHandler;.isAuthenticationRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a785e.   v3:= temp;
#L0a7860.   if v3 == 0 then goto L0a795a;
#L0a7864.   v3:= "http.target_host" @type (object, string);
#L0a7868.   v0:= v26  @type object;
#L0a786c.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v0, v3) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7872.   v20:= temp  @type object;
#L0a7874.   v20:= ([|org:apache:http:HttpHost|])v20;
#L0a7878.   if v20 != 0 then goto L0a7884;
#L0a787c.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v19) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7882.   v20:= temp  @type object;
#L0a7884.   v0:= v23  @type object;
#L0a7888.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a788c.   v5:= "Target requested authentication" @type (object, string);
#L0a7890.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7896.   v0:= v23  @type object;
#L0a789a.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthHandler|]   @type object;
#L0a789e.   v0:= v25  @type object;
#L0a78a2.   v1:= v26  @type object;
#L0a78a6.   call temp:=  [|org:apache:http:client:AuthenticationHandler.getChallenges|](v3, v0, v1) @signature [|Lorg/apache/http/client/AuthenticationHandler;.getChallenges:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a78ac.   v4:= temp  @type object;
#L0a78ae.   v0:= v23  @type object;
#L0a78b2.   v5:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]   @type object;
#L0a78b6.   v0:= v23  @type object;
#L0a78ba.   v6:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthHandler|]   @type object;
#L0a78be.   v3:= v23  @type object;
#L0a78c2.   v7:= v25  @type object;
#L0a78c6.   v8:= v26  @type object;
#L0a78ca.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.processChallenges|](v3, v4, v5, v6, v7, v8) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.processChallenges:(Ljava/util/Map;Lorg/apache/http/auth/AuthState;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a78d0.   v0:= v23  @type object;
#L0a78d4.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]   @type object;
#L0a78d8.   v0:= v23  @type object;
#L0a78dc.   v1:= v20  @type object;
#L0a78e0.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.updateAuthState|](v0, v3, v1, v9) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.updateAuthState:(Lorg/apache/http/auth/AuthState;Lorg/apache/http/HttpHost;Lorg/apache/http/client/CredentialsProvider;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a78e6.   v0:= v23  @type object;
#L0a78ea.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]   @type object;
#L0a78ee.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v3) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a78f4.   v3:= temp  @type object;
#L0a78f6.   if v3 != 0 then goto L0a7822;
#L0a78fa.   v24:= 0  @length 16;
#L0a78fe.   goto L0a7822;
#L0a7900.   v10:= Exception  @type object;
#L0a7902.   v0:= v23  @type object;
#L0a7906.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a790a.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7910.   v3:= temp;
#L0a7912.   if v3 == 0 then goto L0a78d0;
#L0a7916.   v0:= v23  @type object;
#L0a791a.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a791e.   v5:= new [|java:lang:StringBuilder|];
#L0a7922.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a7928.   v6:= "Authentication error: " @type (object, string);
#L0a792c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7932.   v5:= temp  @type object;
#L0a7934.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v10) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L0a793a.   v6:= temp  @type object;
#L0a793c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7942.   v5:= temp  @type object;
#L0a7944.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a794a.   v5:= temp  @type object;
#L0a794c.   call temp:=  [|org:apache:commons:logging:Log.warn|](v3, v5) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7952.   v24:= 0  @length 16;
#L0a7956.   goto L0a7822;
#L0a795a.   v0:= v23  @type object;
#L0a795e.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.targetAuthState|]   @type object;
#L0a7962.   v5:= 0  @length 4;
#L0a7964.   call temp:=  [|org:apache:http:auth:AuthState.setAuthScope|](v3, v5) @signature [|Lorg/apache/http/auth/AuthState;.setAuthScope:(Lorg/apache/http/auth/AuthScope;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a796a.   v0:= v23  @type object;
#L0a796e.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a7972.   v0:= v25  @type object;
#L0a7976.   v1:= v26  @type object;
#L0a797a.   call temp:=  [|org:apache:http:client:AuthenticationHandler.isAuthenticationRequested|](v3, v0, v1) @signature [|Lorg/apache/http/client/AuthenticationHandler;.isAuthenticationRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a7980.   v3:= temp;
#L0a7982.   if v3 == 0 then goto L0a7a5e;
#L0a7986.   v0:= v23  @type object;
#L0a798a.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a798e.   v5:= "Proxy requested authentication" @type (object, string);
#L0a7992.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7998.   v0:= v23  @type object;
#L0a799c.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a79a0.   v0:= v25  @type object;
#L0a79a4.   v1:= v26  @type object;
#L0a79a8.   call temp:=  [|org:apache:http:client:AuthenticationHandler.getChallenges|](v3, v0, v1) @signature [|Lorg/apache/http/client/AuthenticationHandler;.getChallenges:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;|] @classDescriptor [|org:apache:http:client:AuthenticationHandler|] @type interface;
#L0a79ae.   v4:= temp  @type object;
#L0a79b0.   v0:= v23  @type object;
#L0a79b4.   v5:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a79b8.   v0:= v23  @type object;
#L0a79bc.   v6:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthHandler|]   @type object;
#L0a79c0.   v3:= v23  @type object;
#L0a79c4.   v7:= v25  @type object;
#L0a79c8.   v8:= v26  @type object;
#L0a79cc.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.processChallenges|](v3, v4, v5, v6, v7, v8) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.processChallenges:(Ljava/util/Map;Lorg/apache/http/auth/AuthState;Lorg/apache/http/client/AuthenticationHandler;Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a79d2.   v0:= v23  @type object;
#L0a79d6.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a79da.   v0:= v23  @type object;
#L0a79de.   v1:= v16  @type object;
#L0a79e2.   call temp:=  [|org:apache:http:impl:client:DefaultRequestDirector.updateAuthState|](v0, v3, v1, v9) @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.updateAuthState:(Lorg/apache/http/auth/AuthState;Lorg/apache/http/HttpHost;Lorg/apache/http/client/CredentialsProvider;)V|] @classDescriptor [|org:apache:http:impl:client:DefaultRequestDirector|] @type direct;
#L0a79e8.   v0:= v23  @type object;
#L0a79ec.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a79f0.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v3) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a79f6.   v3:= temp  @type object;
#L0a79f8.   if v3 != 0 then goto L0a7822;
#L0a79fc.   v24:= 0  @length 16;
#L0a7a00.   goto L0a7822;
#L0a7a04.   v10:= Exception  @type object;
#L0a7a06.   v0:= v23  @type object;
#L0a7a0a.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7a0e.   call temp:=  [|org:apache:commons:logging:Log.isWarnEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isWarnEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7a14.   v3:= temp;
#L0a7a16.   if v3 == 0 then goto L0a79d2;
#L0a7a1a.   v0:= v23  @type object;
#L0a7a1e.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7a22.   v5:= new [|java:lang:StringBuilder|];
#L0a7a26.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a7a2c.   v6:= "Authentication error: " @type (object, string);
#L0a7a30.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7a36.   v5:= temp  @type object;
#L0a7a38.   call temp:=  [|org:apache:http:auth:AuthenticationException.getMessage|](v10) @signature [|Lorg/apache/http/auth/AuthenticationException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:auth:AuthenticationException|] @type virtual;
#L0a7a3e.   v6:= temp  @type object;
#L0a7a40.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7a46.   v5:= temp  @type object;
#L0a7a48.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7a4e.   v5:= temp  @type object;
#L0a7a50.   call temp:=  [|org:apache:commons:logging:Log.warn|](v3, v5) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7a56.   v24:= 0  @length 16;
#L0a7a5a.   goto L0a7822;
#L0a7a5e.   v0:= v23  @type object;
#L0a7a62.   v3:= v0.[|org:apache:http:impl:client:DefaultRequestDirector.proxyAuthState|]   @type object;
#L0a7a66.   v5:= 0  @length 4;
#L0a7a68.   call temp:=  [|org:apache:http:auth:AuthState.setAuthScope|](v3, v5) @signature [|Lorg/apache/http/auth/AuthState;.setAuthScope:(Lorg/apache/http/auth/AuthScope;)V|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a7a6e.   v24:= 0  @length 16;
#L0a7a72.   goto L0a7822;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L0a78ae..L0a78d0] goto L0a7900;
  catch  [|org:apache:http:auth:AuthenticationException|] @[L0a79b0..L0a79d2] goto L0a7a04;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.releaseConnection|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v3 @type (this)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.releaseConnection:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a7aa4.   v1:= v3.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]   @type object;
#L0a7aa8.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.releaseConnection|](v1) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.releaseConnection:()V|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a7aae.   v1:= 0  @length 4;
#L0a7ab0.   v3.[|org:apache:http:impl:client:DefaultRequestDirector.managedConn|]  := v1 @type object;
#L0a7ab4.   return @void ;
#L0a7ab6.   v0:= Exception  @type object;
#L0a7ab8.   v1:= v3.[|org:apache:http:impl:client:DefaultRequestDirector.log|]   @type object;
#L0a7abc.   v2:= "IOException releasing connection" @type (object, string);
#L0a7ac0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a7ac6.   goto L0a7aae;
  catch  [|java:io:IOException|] @[L0a7aa4..L0a7aae] goto L0a7ab6;

   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultRequestDirector.rewriteRequestURI|] ([|org:apache:http:impl:client:DefaultRequestDirector|] v6 @type (this), [|org:apache:http:impl:client:RequestWrapper|] v7 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v8 @type (object)) @owner [|org:apache:http:impl:client:DefaultRequestDirector|] @signature [|Lorg/apache/http/impl/client/DefaultRequestDirector;.rewriteRequestURI:(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a7ae8.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getURI|](v7) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getURI:()Ljava/net/URI;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7aee.   v2:= temp  @type object;
#L0a7af0.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getProxyHost|](v8) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7af6.   v3:= temp  @type object;
#L0a7af8.   if v3 == 0 then goto L0a7b2c;
#L0a7afc.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.isTunnelled|](v8) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7b02.   v3:= temp;
#L0a7b04.   if v3 != 0 then goto L0a7b2c;
#L0a7b08.   call temp:=  [|java:net:URI.isAbsolute|](v2) @signature [|Ljava/net/URI;.isAbsolute:()Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a7b0e.   v3:= temp;
#L0a7b10.   if v3 != 0 then goto L0a7b2a;
#L0a7b14.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v8) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a7b1a.   v1:= temp  @type object;
#L0a7b1c.   call temp:=  [|org:apache:http:client:utils:URIUtils.rewriteURI|](v2, v1) @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L0a7b22.   v2:= temp  @type object;
#L0a7b24.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setURI|](v7, v2) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setURI:(Ljava/net/URI;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7b2a.   return @void ;
#L0a7b2c.   call temp:=  [|java:net:URI.isAbsolute|](v2) @signature [|Ljava/net/URI;.isAbsolute:()Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a7b32.   v3:= temp;
#L0a7b34.   if v3 == 0 then goto L0a7b2a;
#L0a7b38.   v3:= 0  @length 4;
#L0a7b3a.   call temp:=  [|org:apache:http:client:utils:URIUtils.rewriteURI|](v2, v3) @signature [|Lorg/apache/http/client/utils/URIUtils;.rewriteURI:(Ljava/net/URI;Lorg/apache/http/HttpHost;)Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:utils:URIUtils|] @type static;
#L0a7b40.   v2:= temp  @type object;
#L0a7b42.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setURI|](v7, v2) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setURI:(Ljava/net/URI;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7b48.   goto L0a7b2a;
#L0a7b4a.   v0:= Exception  @type object;
#L0a7b4c.   v3:= new [|org:apache:http:ProtocolException|];
#L0a7b50.   v4:= new [|java:lang:StringBuilder|];
#L0a7b54.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a7b5a.   v5:= "Invalid URI: " @type (object, string);
#L0a7b5e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7b64.   v4:= temp  @type object;
#L0a7b66.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getRequestLine|](v7) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7b6c.   v5:= temp  @type object;
#L0a7b6e.   call temp:=  [|org:apache:http:RequestLine.getUri|](v5) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a7b74.   v5:= temp  @type object;
#L0a7b76.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7b7c.   v4:= temp  @type object;
#L0a7b7e.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7b84.   v4:= temp  @type object;
#L0a7b86.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v3, v4, v0) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a7b8c.   throw v3;
  catch  [|java:net:URISyntaxException|] @[L0a7ae8..L0a7b48] goto L0a7b4a;

   }
record [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:client:AbstractAuthenticationHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler.<init>|] ([|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] v0 @type (this)) @owner [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a7bb0.   call temp:=  [|org:apache:http:impl:client:AbstractAuthenticationHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/client/AbstractAuthenticationHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:client:AbstractAuthenticationHandler|] @type direct;
#L0a7bb6.   return @void ;

   }
    procedure [|java:util:Map|] [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler.getChallenges|] ([|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;.getChallenges:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Ljava/util/Map;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a7bc8.   if v4 != 0 then goto L0a7bdc;
#L0a7bcc.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a7bd0.   v2:= "HTTP response may not be null" @type (object, string);
#L0a7bd4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a7bda.   throw v1;
#L0a7bdc.   v1:= "WWW-Authenticate" @type (object, string);
#L0a7be0.   call temp:=  [|org:apache:http:HttpResponse.getHeaders|](v4, v1) @signature [|Lorg/apache/http/HttpResponse;.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a7be6.   v0:= temp  @type object;
#L0a7be8.   call temp:=  [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler.parseChallenges|](v3, v0) @signature [|Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;.parseChallenges:([Lorg/apache/http/Header;)Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] @type virtual;
#L0a7bee.   v1:= temp  @type object;
#L0a7bf0.   return v1  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler.isAuthenticationRequested|] ([|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] v3 @type (this), [|org:apache:http:HttpResponse|] v4 @type (object), [|org:apache:http:protocol:HttpContext|] v5 @type (object)) @owner [|org:apache:http:impl:client:DefaultTargetAuthenticationHandler|] @signature [|Lorg/apache/http/impl/client/DefaultTargetAuthenticationHandler;.isAuthenticationRequested:(Lorg/apache/http/HttpResponse;Lorg/apache/http/protocol/HttpContext;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a7c04.   if v4 != 0 then goto L0a7c18;
#L0a7c08.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a7c0c.   v2:= "HTTP response may not be null" @type (object, string);
#L0a7c10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a7c16.   throw v1;
#L0a7c18.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v4) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a7c1e.   v1:= temp  @type object;
#L0a7c20.   call temp:=  [|org:apache:http:StatusLine.getStatusCode|](v1) @signature [|Lorg/apache/http/StatusLine;.getStatusCode:()I|] @classDescriptor [|org:apache:http:StatusLine|] @type interface;
#L0a7c26.   v0:= temp;
#L0a7c28.   v1:= 401  @length 16;
#L0a7c2c.   if v0 != v1 then goto L0a7c34;
#L0a7c30.   v1:= 1  @length 4;
#L0a7c32.   return v1;
#L0a7c34.   v1:= 0  @length 4;
#L0a7c36.   goto L0a7c32;

   }
record [|org:apache:http:impl:client:DefaultUserTokenHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:client:UserTokenHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:client:DefaultUserTokenHandler.<init>|] ([|org:apache:http:impl:client:DefaultUserTokenHandler|] v0 @type (this)) @owner [|org:apache:http:impl:client:DefaultUserTokenHandler|] @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a7c48.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a7c4e.   return @void ;

   }
    procedure [|java:security:Principal|] [|org:apache:http:impl:client:DefaultUserTokenHandler.getAuthPrincipal|] ([|org:apache:http:auth:AuthState|] v3 @type (object)) @owner [|org:apache:http:impl:client:DefaultUserTokenHandler|] @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.getAuthPrincipal:(Lorg/apache/http/auth/AuthState;)Ljava/security/Principal;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a7c60.   call temp:=  [|org:apache:http:auth:AuthState.getAuthScheme|](v3) @signature [|Lorg/apache/http/auth/AuthState;.getAuthScheme:()Lorg/apache/http/auth/AuthScheme;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a7c66.   v1:= temp  @type object;
#L0a7c68.   if v1 == 0 then goto L0a7c9a;
#L0a7c6c.   call temp:=  [|org:apache:http:auth:AuthScheme.isComplete|](v1) @signature [|Lorg/apache/http/auth/AuthScheme;.isComplete:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a7c72.   v2:= temp;
#L0a7c74.   if v2 == 0 then goto L0a7c9a;
#L0a7c78.   call temp:=  [|org:apache:http:auth:AuthScheme.isConnectionBased|](v1) @signature [|Lorg/apache/http/auth/AuthScheme;.isConnectionBased:()Z|] @classDescriptor [|org:apache:http:auth:AuthScheme|] @type interface;
#L0a7c7e.   v2:= temp;
#L0a7c80.   if v2 == 0 then goto L0a7c9a;
#L0a7c84.   call temp:=  [|org:apache:http:auth:AuthState.getCredentials|](v3) @signature [|Lorg/apache/http/auth/AuthState;.getCredentials:()Lorg/apache/http/auth/Credentials;|] @classDescriptor [|org:apache:http:auth:AuthState|] @type virtual;
#L0a7c8a.   v0:= temp  @type object;
#L0a7c8c.   if v0 == 0 then goto L0a7c9a;
#L0a7c90.   call temp:=  [|org:apache:http:auth:Credentials.getUserPrincipal|](v0) @signature [|Lorg/apache/http/auth/Credentials;.getUserPrincipal:()Ljava/security/Principal;|] @classDescriptor [|org:apache:http:auth:Credentials|] @type interface;
#L0a7c96.   v2:= temp  @type object;
#L0a7c98.   return v2  @type object;
#L0a7c9a.   v2:= 0  @length 4;
#L0a7c9c.   goto L0a7c98;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:client:DefaultUserTokenHandler.getUserToken|] ([|org:apache:http:impl:client:DefaultUserTokenHandler|] v6 @type (this), [|org:apache:http:protocol:HttpContext|] v7 @type (object)) @owner [|org:apache:http:impl:client:DefaultUserTokenHandler|] @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.getUserToken:(Lorg/apache/http/protocol/HttpContext;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a7cb0.   v4:= 0  @length 4;
#L0a7cb2.   v5:= "http.auth.target-scope" @type (object, string);
#L0a7cb6.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v7, v5) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7cbc.   v3:= temp  @type object;
#L0a7cbe.   v3:= ([|org:apache:http:auth:AuthState|])v3;
#L0a7cc2.   if v3 == 0 then goto L0a7cea;
#L0a7cc6.   call temp:=  [|org:apache:http:impl:client:DefaultUserTokenHandler.getAuthPrincipal|](v3) @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.getAuthPrincipal:(Lorg/apache/http/auth/AuthState;)Ljava/security/Principal;|] @classDescriptor [|org:apache:http:impl:client:DefaultUserTokenHandler|] @type static;
#L0a7ccc.   v4:= temp  @type object;
#L0a7cce.   if v4 != 0 then goto L0a7cea;
#L0a7cd2.   v5:= "http.auth.proxy-scope" @type (object, string);
#L0a7cd6.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v7, v5) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7cdc.   v1:= temp  @type object;
#L0a7cde.   v1:= ([|org:apache:http:auth:AuthState|])v1;
#L0a7ce2.   call temp:=  [|org:apache:http:impl:client:DefaultUserTokenHandler.getAuthPrincipal|](v1) @signature [|Lorg/apache/http/impl/client/DefaultUserTokenHandler;.getAuthPrincipal:(Lorg/apache/http/auth/AuthState;)Ljava/security/Principal;|] @classDescriptor [|org:apache:http:impl:client:DefaultUserTokenHandler|] @type static;
#L0a7ce8.   v4:= temp  @type object;
#L0a7cea.   if v4 != 0 then goto L0a7d1e;
#L0a7cee.   v5:= "http.connection" @type (object, string);
#L0a7cf2.   call temp:=  [|org:apache:http:protocol:HttpContext.getAttribute|](v7, v5) @signature [|Lorg/apache/http/protocol/HttpContext;.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:protocol:HttpContext|] @type interface;
#L0a7cf8.   v0:= temp  @type object;
#L0a7cfa.   v0:= ([|org:apache:http:conn:ManagedClientConnection|])v0;
#L0a7cfe.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.isOpen|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a7d04.   v5:= temp;
#L0a7d06.   if v5 == 0 then goto L0a7d1e;
#L0a7d0a.   call temp:=  [|org:apache:http:conn:ManagedClientConnection.getSSLSession|](v0) @signature [|Lorg/apache/http/conn/ManagedClientConnection;.getSSLSession:()Ljavax/net/ssl/SSLSession;|] @classDescriptor [|org:apache:http:conn:ManagedClientConnection|] @type interface;
#L0a7d10.   v2:= temp  @type object;
#L0a7d12.   if v2 == 0 then goto L0a7d1e;
#L0a7d16.   call temp:=  [|javax:net:ssl:SSLSession.getLocalPrincipal|](v2) @signature [|Ljavax/net/ssl/SSLSession;.getLocalPrincipal:()Ljava/security/Principal;|] @classDescriptor [|javax:net:ssl:SSLSession|] @type interface;
#L0a7d1c.   v4:= temp  @type object;
#L0a7d1e.   return v4  @type object;

   }
record [|org:apache:http:impl:client:RequestWrapper|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:message:AbstractHttpMessage|], [|org:apache:http:client:methods:HttpUriRequest|] {
      [|int|] [|org:apache:http:impl:client:RequestWrapper.execCount|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:http:impl:client:RequestWrapper.method|]    @AccessFlag PRIVATE;
      [|org:apache:http:HttpRequest|] [|org:apache:http:impl:client:RequestWrapper.original|]    @AccessFlag PRIVATE_FINAL;
      [|java:net:URI|] [|org:apache:http:impl:client:RequestWrapper.uri|]    @AccessFlag PRIVATE;
      [|org:apache:http:ProtocolVersion|] [|org:apache:http:impl:client:RequestWrapper.version|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.<init>|] ([|org:apache:http:impl:client:RequestWrapper|] v5 @type (this), [|org:apache:http:HttpRequest|] v6 @type (object)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.<init>:(Lorg/apache/http/HttpRequest;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0a7d30.   call temp:=  [|org:apache:http:message:AbstractHttpMessage.<init>|](v5) @signature [|Lorg/apache/http/message/AbstractHttpMessage;.<init>:()V|] @classDescriptor [|org:apache:http:message:AbstractHttpMessage|] @type direct;
#L0a7d36.   if v6 != 0 then goto L0a7d4a;
#L0a7d3a.   v2:= new [|java:lang:IllegalArgumentException|];
#L0a7d3e.   v3:= "HTTP request may not be null" @type (object, string);
#L0a7d42.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a7d48.   throw v2;
#L0a7d4a.   v5.[|org:apache:http:impl:client:RequestWrapper.original|]  := v6 @type object;
#L0a7d4e.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v6) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a7d54.   v2:= temp  @type object;
#L0a7d56.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setParams|](v5, v2) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setParams:(Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7d5c.   v2:= instanceof @varname v6 @type [|org:apache:http:client:methods:HttpUriRequest|];
#L0a7d60.   if v2 == 0 then goto L0a7d94;
#L0a7d64.   v2:= v6  @type object;
#L0a7d66.   v2:= ([|org:apache:http:client:methods:HttpUriRequest|])v2;
#L0a7d6a.   call temp:=  [|org:apache:http:client:methods:HttpUriRequest.getURI|](v2) @signature [|Lorg/apache/http/client/methods/HttpUriRequest;.getURI:()Ljava/net/URI;|] @classDescriptor [|org:apache:http:client:methods:HttpUriRequest|] @type interface;
#L0a7d70.   v2:= temp  @type object;
#L0a7d72.   v5.[|org:apache:http:impl:client:RequestWrapper.uri|]  := v2 @type object;
#L0a7d76.   v6:= ([|org:apache:http:client:methods:HttpUriRequest|])v6;
#L0a7d7a.   call temp:=  [|org:apache:http:client:methods:HttpUriRequest.getMethod|](v6) @signature [|Lorg/apache/http/client/methods/HttpUriRequest;.getMethod:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:client:methods:HttpUriRequest|] @type interface;
#L0a7d80.   v2:= temp  @type object;
#L0a7d82.   v5.[|org:apache:http:impl:client:RequestWrapper.method|]  := v2 @type object;
#L0a7d86.   v2:= 0  @length 4;
#L0a7d88.   v5.[|org:apache:http:impl:client:RequestWrapper.version|]  := v2 @type object;
#L0a7d8c.   v2:= 0  @length 4;
#L0a7d8e.   v5.[|org:apache:http:impl:client:RequestWrapper.execCount|]  := v2;
#L0a7d92.   return @void ;
#L0a7d94.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v6) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a7d9a.   v1:= temp  @type object;
#L0a7d9c.   v2:= new [|java:net:URI|];
#L0a7da0.   call temp:=  [|org:apache:http:RequestLine.getUri|](v1) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a7da6.   v3:= temp  @type object;
#L0a7da8.   call temp:=  [|java:net:URI.<init>|](v2, v3) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L0a7dae.   v5.[|org:apache:http:impl:client:RequestWrapper.uri|]  := v2 @type object;
#L0a7db2.   call temp:=  [|org:apache:http:RequestLine.getMethod|](v1) @signature [|Lorg/apache/http/RequestLine;.getMethod:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a7db8.   v2:= temp  @type object;
#L0a7dba.   v5.[|org:apache:http:impl:client:RequestWrapper.method|]  := v2 @type object;
#L0a7dbe.   call temp:=  [|org:apache:http:HttpRequest.getProtocolVersion|](v6) @signature [|Lorg/apache/http/HttpRequest;.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a7dc4.   v2:= temp  @type object;
#L0a7dc6.   v5.[|org:apache:http:impl:client:RequestWrapper.version|]  := v2 @type object;
#L0a7dca.   goto L0a7d8c;
#L0a7dcc.   v0:= Exception  @type object;
#L0a7dce.   v2:= new [|org:apache:http:ProtocolException|];
#L0a7dd2.   v3:= new [|java:lang:StringBuilder|];
#L0a7dd6.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a7ddc.   v4:= "Invalid request URI: " @type (object, string);
#L0a7de0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7de6.   v3:= temp  @type object;
#L0a7de8.   call temp:=  [|org:apache:http:RequestLine.getUri|](v1) @signature [|Lorg/apache/http/RequestLine;.getUri:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:RequestLine|] @type interface;
#L0a7dee.   v4:= temp  @type object;
#L0a7df0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7df6.   v3:= temp  @type object;
#L0a7df8.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a7dfe.   v3:= temp  @type object;
#L0a7e00.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v2, v3, v0) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a7e06.   throw v2;
  catch  [|java:net:URISyntaxException|] @[L0a7d9c..L0a7db2] goto L0a7dcc;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.abort|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.abort:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7e28.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0a7e2c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0a7e32.   throw v0;

   }
    procedure [|int|] [|org:apache:http:impl:client:RequestWrapper.getExecCount|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getExecCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7e44.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.execCount|] ;
#L0a7e48.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:client:RequestWrapper.getMethod|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getMethod:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7e5c.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.method|]   @type object;
#L0a7e60.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpRequest|] [|org:apache:http:impl:client:RequestWrapper.getOriginal|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getOriginal:()Lorg/apache/http/HttpRequest;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7e74.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.original|]   @type object;
#L0a7e78.   return v0  @type object;

   }
    procedure [|org:apache:http:ProtocolVersion|] [|org:apache:http:impl:client:RequestWrapper.getProtocolVersion|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7e8c.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.version|]   @type object;
#L0a7e90.   if v0 == 0 then goto L0a7e9a;
#L0a7e94.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.version|]   @type object;
#L0a7e98.   return v0  @type object;
#L0a7e9a.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getParams|](v1) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7ea0.   v0:= temp  @type object;
#L0a7ea2.   call temp:=  [|org:apache:http:params:HttpProtocolParams.getVersion|](v0) @signature [|Lorg/apache/http/params/HttpProtocolParams;.getVersion:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;|] @classDescriptor [|org:apache:http:params:HttpProtocolParams|] @type static;
#L0a7ea8.   v0:= temp  @type object;
#L0a7eaa.   goto L0a7e98;

   }
    procedure [|org:apache:http:RequestLine|] [|org:apache:http:impl:client:RequestWrapper.getRequestLine|] ([|org:apache:http:impl:client:RequestWrapper|] v4 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getRequestLine:()Lorg/apache/http/RequestLine;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a7ebc.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getMethod|](v4) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getMethod:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7ec2.   v0:= temp  @type object;
#L0a7ec4.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.getProtocolVersion|](v4) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7eca.   v2:= temp  @type object;
#L0a7ecc.   v1:= 0  @length 4;
#L0a7ece.   v3:= v4.[|org:apache:http:impl:client:RequestWrapper.uri|]   @type object;
#L0a7ed2.   if v3 == 0 then goto L0a7ee2;
#L0a7ed6.   v3:= v4.[|org:apache:http:impl:client:RequestWrapper.uri|]   @type object;
#L0a7eda.   call temp:=  [|java:net:URI.toASCIIString|](v3) @signature [|Ljava/net/URI;.toASCIIString:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0a7ee0.   v1:= temp  @type object;
#L0a7ee2.   if v1 == 0 then goto L0a7ef2;
#L0a7ee6.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a7eec.   v3:= temp;
#L0a7eee.   if v3 != 0 then goto L0a7ef6;
#L0a7ef2.   v1:= "/" @type (object, string);
#L0a7ef6.   v3:= new [|org:apache:http:message:BasicRequestLine|];
#L0a7efa.   call temp:=  [|org:apache:http:message:BasicRequestLine.<init>|](v3, v0, v1, v2) @signature [|Lorg/apache/http/message/BasicRequestLine;.<init>:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V|] @classDescriptor [|org:apache:http:message:BasicRequestLine|] @type direct;
#L0a7f00.   return v3  @type object;

   }
    procedure [|java:net:URI|] [|org:apache:http:impl:client:RequestWrapper.getURI|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.getURI:()Ljava/net/URI;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7f14.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.uri|]   @type object;
#L0a7f18.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.incrementExecCount|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.incrementExecCount:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7f2c.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.execCount|] ;
#L0a7f30.   v0:= v0 + 1;
#L0a7f34.   v1.[|org:apache:http:impl:client:RequestWrapper.execCount|]  := v0;
#L0a7f38.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:RequestWrapper.isAborted|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.isAborted:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7f4c.   v0:= 0  @length 4;
#L0a7f4e.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:RequestWrapper.isRepeatable|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7f60.   v0:= 1  @length 4;
#L0a7f62.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.resetHeaders|] ([|org:apache:http:impl:client:RequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.resetHeaders:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a7f74.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.headergroup|]   @type object;
#L0a7f78.   call temp:=  [|org:apache:http:message:HeaderGroup.clear|](v0) @signature [|Lorg/apache/http/message/HeaderGroup;.clear:()V|] @classDescriptor [|org:apache:http:message:HeaderGroup|] @type virtual;
#L0a7f7e.   v0:= v1.[|org:apache:http:impl:client:RequestWrapper.original|]   @type object;
#L0a7f82.   call temp:=  [|org:apache:http:HttpRequest.getAllHeaders|](v0) @signature [|Lorg/apache/http/HttpRequest;.getAllHeaders:()[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a7f88.   v0:= temp  @type object;
#L0a7f8a.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.setHeaders|](v1, v0) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setHeaders:([Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type virtual;
#L0a7f90.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.setMethod|] ([|org:apache:http:impl:client:RequestWrapper|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setMethod:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a7fa4.   if v3 != 0 then goto L0a7fb8;
#L0a7fa8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a7fac.   v1:= "Method name may not be null" @type (object, string);
#L0a7fb0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a7fb6.   throw v0;
#L0a7fb8.   v2.[|org:apache:http:impl:client:RequestWrapper.method|]  := v3 @type object;
#L0a7fbc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.setProtocolVersion|] ([|org:apache:http:impl:client:RequestWrapper|] v0 @type (this), [|org:apache:http:ProtocolVersion|] v1 @type (object)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setProtocolVersion:(Lorg/apache/http/ProtocolVersion;)V|] @Access PUBLIC {
      local temp ;
      
#L0a7fd0.   v0.[|org:apache:http:impl:client:RequestWrapper.version|]  := v1 @type object;
#L0a7fd4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:RequestWrapper.setURI|] ([|org:apache:http:impl:client:RequestWrapper|] v0 @type (this), [|java:net:URI|] v1 @type (object)) @owner [|org:apache:http:impl:client:RequestWrapper|] @signature [|Lorg/apache/http/impl/client/RequestWrapper;.setURI:(Ljava/net/URI;)V|] @Access PUBLIC {
      local temp ;
      
#L0a7fe8.   v0.[|org:apache:http:impl:client:RequestWrapper.uri|]  := v1 @type object;
#L0a7fec.   return @void ;

   }
record [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:client:RequestWrapper|], [|org:apache:http:HttpEntityEnclosingRequest|] {
      [|org:apache:http:HttpEntity|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.<init>|] ([|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] v1 @type (this), [|org:apache:http:HttpEntityEnclosingRequest|] v2 @type (object)) @owner [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.<init>:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a8000.   call temp:=  [|org:apache:http:impl:client:RequestWrapper.<init>|](v1, v2) @signature [|Lorg/apache/http/impl/client/RequestWrapper;.<init>:(Lorg/apache/http/HttpRequest;)V|] @classDescriptor [|org:apache:http:impl:client:RequestWrapper|] @type direct;
#L0a8006.   call temp:=  [|org:apache:http:HttpEntityEnclosingRequest.getEntity|](v2) @signature [|Lorg/apache/http/HttpEntityEnclosingRequest;.getEntity:()Lorg/apache/http/HttpEntity;|] @classDescriptor [|org:apache:http:HttpEntityEnclosingRequest|] @type interface;
#L0a800c.   v0:= temp  @type object;
#L0a800e.   v1.[|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]  := v0 @type object;
#L0a8012.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.expectContinue|] ([|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] v3 @type (this)) @owner [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.expectContinue:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a8024.   v1:= "Expect" @type (object, string);
#L0a8028.   call temp:=  [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.getFirstHeader|](v3, v1) @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @type virtual;
#L0a802e.   v0:= temp  @type object;
#L0a8030.   if v0 == 0 then goto L0a8050;
#L0a8034.   v1:= "100-continue" @type (object, string);
#L0a8038.   call temp:=  [|org:apache:http:Header.getValue|](v0) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0a803e.   v2:= temp  @type object;
#L0a8040.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v1, v2) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0a8046.   v1:= temp;
#L0a8048.   if v1 == 0 then goto L0a8050;
#L0a804c.   v1:= 1  @length 4;
#L0a804e.   return v1;
#L0a8050.   v1:= 0  @length 4;
#L0a8052.   goto L0a804e;

   }
    procedure [|org:apache:http:HttpEntity|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.getEntity|] ([|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.getEntity:()Lorg/apache/http/HttpEntity;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8064.   v0:= v1.[|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]   @type object;
#L0a8068.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.isRepeatable|] ([|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] v1 @type (this)) @owner [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.isRepeatable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a807c.   v0:= v1.[|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]   @type object;
#L0a8080.   if v0 == 0 then goto L0a8094;
#L0a8084.   v0:= v1.[|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]   @type object;
#L0a8088.   call temp:=  [|org:apache:http:HttpEntity.isRepeatable|](v0) @signature [|Lorg/apache/http/HttpEntity;.isRepeatable:()Z|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0a808e.   v0:= temp;
#L0a8090.   if v0 == 0 then goto L0a8098;
#L0a8094.   v0:= 1  @length 4;
#L0a8096.   return v0;
#L0a8098.   v0:= 0  @length 4;
#L0a809a.   goto L0a8096;

   }
    procedure [|void|] [|org:apache:http:impl:client:EntityEnclosingRequestWrapper.setEntity|] ([|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] v0 @type (this), [|org:apache:http:HttpEntity|] v1 @type (object)) @owner [|org:apache:http:impl:client:EntityEnclosingRequestWrapper|] @signature [|Lorg/apache/http/impl/client/EntityEnclosingRequestWrapper;.setEntity:(Lorg/apache/http/HttpEntity;)V|] @Access PUBLIC {
      local temp ;
      
#L0a80ac.   v0.[|org:apache:http:impl:client:EntityEnclosingRequestWrapper.entity|]  := v1 @type object;
#L0a80b0.   return @void ;

   }
record [|org:apache:http:impl:client:RedirectLocations|]  @type class @AccessFlag PUBLIC  {
      [|java:util:Set|] [|org:apache:http:impl:client:RedirectLocations.uris|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:RedirectLocations.<init>|] ([|org:apache:http:impl:client:RedirectLocations|] v1 @type (this)) @owner [|org:apache:http:impl:client:RedirectLocations|] @signature [|Lorg/apache/http/impl/client/RedirectLocations;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a80c4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a80ca.   v0:= new [|java:util:HashSet|];
#L0a80ce.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0a80d4.   v1.[|org:apache:http:impl:client:RedirectLocations.uris|]  := v0 @type object;
#L0a80d8.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:client:RedirectLocations.add|] ([|org:apache:http:impl:client:RedirectLocations|] v1 @type (this), [|java:net:URI|] v2 @type (object)) @owner [|org:apache:http:impl:client:RedirectLocations|] @signature [|Lorg/apache/http/impl/client/RedirectLocations;.add:(Ljava/net/URI;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a80ec.   v0:= v1.[|org:apache:http:impl:client:RedirectLocations.uris|]   @type object;
#L0a80f0.   call temp:=  [|java:util:Set.add|](v0, v2) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0a80f6.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:RedirectLocations.contains|] ([|org:apache:http:impl:client:RedirectLocations|] v1 @type (this), [|java:net:URI|] v2 @type (object)) @owner [|org:apache:http:impl:client:RedirectLocations|] @signature [|Lorg/apache/http/impl/client/RedirectLocations;.contains:(Ljava/net/URI;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8108.   v0:= v1.[|org:apache:http:impl:client:RedirectLocations.uris|]   @type object;
#L0a810c.   call temp:=  [|java:util:Set.contains|](v0, v2) @signature [|Ljava/util/Set;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0a8112.   v0:= temp;
#L0a8114.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:client:RedirectLocations.remove|] ([|org:apache:http:impl:client:RedirectLocations|] v1 @type (this), [|java:net:URI|] v2 @type (object)) @owner [|org:apache:http:impl:client:RedirectLocations|] @signature [|Lorg/apache/http/impl/client/RedirectLocations;.remove:(Ljava/net/URI;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8128.   v0:= v1.[|org:apache:http:impl:client:RedirectLocations.uris|]   @type object;
#L0a812c.   call temp:=  [|java:util:Set.remove|](v0, v2) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0a8132.   v0:= temp;
#L0a8134.   return v0;

   }
record [|org:apache:http:impl:client:RoutedRequest|]  @type class @AccessFlag PUBLIC  {
      [|org:apache:http:impl:client:RequestWrapper|] [|org:apache:http:impl:client:RoutedRequest.request|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:client:RoutedRequest.route|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:client:RoutedRequest.<init>|] ([|org:apache:http:impl:client:RoutedRequest|] v0 @type (this), [|org:apache:http:impl:client:RequestWrapper|] v1 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object)) @owner [|org:apache:http:impl:client:RoutedRequest|] @signature [|Lorg/apache/http/impl/client/RoutedRequest;.<init>:(Lorg/apache/http/impl/client/RequestWrapper;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a8148.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a814e.   v0.[|org:apache:http:impl:client:RoutedRequest.request|]  := v1 @type object;
#L0a8152.   v0.[|org:apache:http:impl:client:RoutedRequest.route|]  := v2 @type object;
#L0a8156.   return @void ;

   }
    procedure [|org:apache:http:impl:client:RequestWrapper|] [|org:apache:http:impl:client:RoutedRequest.getRequest|] ([|org:apache:http:impl:client:RoutedRequest|] v1 @type (this)) @owner [|org:apache:http:impl:client:RoutedRequest|] @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRequest:()Lorg/apache/http/impl/client/RequestWrapper;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a8168.   v0:= v1.[|org:apache:http:impl:client:RoutedRequest.request|]   @type object;
#L0a816c.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:client:RoutedRequest.getRoute|] ([|org:apache:http:impl:client:RoutedRequest|] v1 @type (this)) @owner [|org:apache:http:impl:client:RoutedRequest|] @signature [|Lorg/apache/http/impl/client/RoutedRequest;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a8180.   v0:= v1.[|org:apache:http:impl:client:RoutedRequest.route|]   @type object;
#L0a8184.   return v0  @type object;

   }
record [|org:apache:http:impl:client:TunnelRefusedException|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:HttpException|] {
      [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:TunnelRefusedException.response|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|org:apache:http:impl:client:TunnelRefusedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:client:TunnelRefusedException.<init>|] ([|org:apache:http:impl:client:TunnelRefusedException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|org:apache:http:HttpResponse|] v2 @type (object)) @owner [|org:apache:http:impl:client:TunnelRefusedException|] @signature [|Lorg/apache/http/impl/client/TunnelRefusedException;.<init>:(Ljava/lang/String;Lorg/apache/http/HttpResponse;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a8198.   call temp:=  [|org:apache:http:HttpException.<init>|](v0, v1) @signature [|Lorg/apache/http/HttpException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpException|] @type direct;
#L0a819e.   v0.[|org:apache:http:impl:client:TunnelRefusedException.response|]  := v2 @type object;
#L0a81a2.   return @void ;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:client:TunnelRefusedException.getResponse|] ([|org:apache:http:impl:client:TunnelRefusedException|] v1 @type (this)) @owner [|org:apache:http:impl:client:TunnelRefusedException|] @signature [|Lorg/apache/http/impl/client/TunnelRefusedException;.getResponse:()Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a81b4.   v0:= v1.[|org:apache:http:impl:client:TunnelRefusedException.response|]   @type object;
#L0a81b8.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:AbstractClientConnAdapter|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:conn:ManagedClientConnection|] {
      [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]    @AccessFlag PRIVATE_VOLATILE;
      [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]    @AccessFlag PRIVATE_VOLATILE;
      [|long|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:lang:Thread|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.executionThread|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.markedReusable|]    @AccessFlag PRIVATE_VOLATILE;
      [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.wrappedConnection|]    @AccessFlag PRIVATE_VOLATILE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.<init>|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this), [|org:apache:http:conn:ClientConnectionManager|] v3 @type (object), [|org:apache:http:conn:OperatedClientConnection|] v4 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/conn/OperatedClientConnection;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a81cc.   v1:= 0  @length 4;
#L0a81ce.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a81d4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0a81da.   v0:= temp  @type object;
#L0a81dc.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.executionThread|]  := v0 @type object;
#L0a81e0.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]  := v3 @type object;
#L0a81e4.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.wrappedConnection|]  := v4 @type object;
#L0a81e8.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.markedReusable|]  := v1 @boolean;
#L0a81ec.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]  := v1 @boolean;
#L0a81f0.   v0:= nanL  @length wide;
#L0a81fa.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]  := v0 @wide;
#L0a81fe.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.abortConnection|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.abortConnection:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8210.   v0:= v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]   @boolean;
#L0a8214.   if v0 == 0 then goto L0a821a;
#L0a8218.   return @void ;
#L0a821a.   v0:= 1  @length 4;
#L0a821c.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]  := v0 @boolean;
#L0a8220.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8226.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.shutdown|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a822c.   v0:= v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.executionThread|]   @type object;
#L0a8230.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0a8236.   v1:= temp  @type object;
#L0a8238.   call temp:=  [|java:lang:Object.equals|](v0, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a823e.   v0:= temp;
#L0a8240.   if v0 == 0 then goto L0a8218;
#L0a8244.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.releaseConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.releaseConnection:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a824a.   goto L0a8218;
#L0a824c.   v0:= Exception  @type object;
#L0a824e.   goto L0a822c;
  catch  [|java:io:IOException|] @[L0a8226..L0a822c] goto L0a824c;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0a8270.   v0:= v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]   @boolean;
#L0a8274.   if v0 == 0 then goto L0a8288;
#L0a8278.   v0:= new [|java:io:InterruptedIOException|];
#L0a827c.   v1:= "Connection has been shut down." @type (object, string);
#L0a8280.   call temp:=  [|java:io:InterruptedIOException.<init>|](v0, v1) @signature [|Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InterruptedIOException|] @type direct;
#L0a8286.   throw v0;
#L0a8288.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this), [|org:apache:http:conn:OperatedClientConnection|] v3 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0a829c.   if v3 != 0 then goto L0a82b0;
#L0a82a0.   v0:= new [|java:lang:IllegalStateException|];
#L0a82a4.   v1:= "No wrapped connection." @type (object, string);
#L0a82a8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a82ae.   throw v0;
#L0a82b0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.detach|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.detach:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a82c4.   v0:= 0  @length 4;
#L0a82c6.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.wrappedConnection|]  := v0 @type object;
#L0a82ca.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]  := v0 @type object;
#L0a82ce.   v0:= nanL  @length wide;
#L0a82d8.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]  := v0 @wide;
#L0a82dc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.flush|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a82f0.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a82f6.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a82fc.   v0:= temp  @type object;
#L0a82fe.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v1, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8304.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.flush|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.flush:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a830a.   return @void ;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getLocalAddress|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a831c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8322.   v0:= temp  @type object;
#L0a8324.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a832a.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getLocalAddress|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8330.   v1:= temp  @type object;
#L0a8332.   return v1  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getLocalPort|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getLocalPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8344.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a834a.   v0:= temp  @type object;
#L0a834c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8352.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getLocalPort|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getLocalPort:()I|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8358.   v1:= temp;
#L0a835a.   return v1;

   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getManager|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a836c.   v0:= v1.[|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]   @type object;
#L0a8370.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpConnectionMetrics|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getMetrics|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8384.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a838a.   v0:= temp  @type object;
#L0a838c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8392.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getMetrics|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8398.   v1:= temp  @type object;
#L0a839a.   return v1  @type object;

   }
    procedure [|java:net:InetAddress|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getRemoteAddress|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getRemoteAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a83ac.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a83b2.   v0:= temp  @type object;
#L0a83b4.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a83ba.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getRemoteAddress|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getRemoteAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a83c0.   v1:= temp  @type object;
#L0a83c2.   return v1  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getRemotePort|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getRemotePort:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a83d4.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a83da.   v0:= temp  @type object;
#L0a83dc.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a83e2.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getRemotePort|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getRemotePort:()I|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a83e8.   v1:= temp;
#L0a83ea.   return v1;

   }
    procedure [|javax:net:ssl:SSLSession|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getSSLSession|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v4 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getSSLSession:()Ljavax/net/ssl/SSLSession;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a83fc.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v4) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8402.   v0:= temp  @type object;
#L0a8404.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v4, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a840a.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.isOpen|](v4) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8410.   v3:= temp;
#L0a8412.   if v3 != 0 then goto L0a841a;
#L0a8416.   v1:= 0  @length 4;
#L0a8418.   return v1  @type object;
#L0a841a.   v1:= 0  @length 4;
#L0a841c.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8422.   v2:= temp  @type object;
#L0a8424.   v3:= instanceof @varname v2 @type [|javax:net:ssl:SSLSocket|];
#L0a8428.   if v3 == 0 then goto L0a8418;
#L0a842c.   v2:= ([|javax:net:ssl:SSLSocket|])v2;
#L0a8430.   call temp:=  [|javax:net:ssl:SSLSocket.getSession|](v2) @signature [|Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;|] @classDescriptor [|javax:net:ssl:SSLSocket|] @type virtual;
#L0a8436.   v1:= temp  @type object;
#L0a8438.   goto L0a8418;

   }
    procedure [|int|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getSocketTimeout|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getSocketTimeout:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a844c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8452.   v0:= temp  @type object;
#L0a8454.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a845a.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocketTimeout|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocketTimeout:()I|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8460.   v1:= temp;
#L0a8462.   return v1;

   }
    procedure [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a8474.   v0:= v1.[|org:apache:http:impl:conn:AbstractClientConnAdapter.wrappedConnection|]   @type object;
#L0a8478.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.isMarkedReusable|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isMarkedReusable:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a848c.   v0:= v1.[|org:apache:http:impl:conn:AbstractClientConnAdapter.markedReusable|]   @boolean;
#L0a8490.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.isOpen|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isOpen:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a84a4.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a84aa.   v0:= temp  @type object;
#L0a84ac.   if v0 != 0 then goto L0a84b4;
#L0a84b0.   v1:= 0  @length 4;
#L0a84b2.   return v1;
#L0a84b4.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a84ba.   v1:= temp;
#L0a84bc.   goto L0a84b2;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.isResponseAvailable|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this), [|int|] v3) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isResponseAvailable:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a84d0.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a84d6.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a84dc.   v0:= temp  @type object;
#L0a84de.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a84e4.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isResponseAvailable|](v0, v3) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isResponseAvailable:(I)Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a84ea.   v1:= temp;
#L0a84ec.   return v1;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.isSecure|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isSecure:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8500.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8506.   v0:= temp  @type object;
#L0a8508.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a850e.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isSecure|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8514.   v1:= temp;
#L0a8516.   return v1;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.isStale|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v3 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.isStale:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a8528.   v1:= 1  @length 4;
#L0a852a.   v2:= v3.[|org:apache:http:impl:conn:AbstractClientConnAdapter.aborted|]   @boolean;
#L0a852e.   if v2 == 0 then goto L0a8534;
#L0a8532.   return v1;
#L0a8534.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v3) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a853a.   v0:= temp  @type object;
#L0a853c.   if v0 == 0 then goto L0a8532;
#L0a8540.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isStale|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isStale:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8546.   v1:= temp;
#L0a8548.   goto L0a8532;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.markReusable|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.markReusable:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a855c.   v0:= 1  @length 4;
#L0a855e.   v1.[|org:apache:http:impl:conn:AbstractClientConnAdapter.markedReusable|]  := v0 @boolean;
#L0a8562.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.receiveResponseEntity|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this), [|org:apache:http:HttpResponse|] v2 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.receiveResponseEntity:(Lorg/apache/http/HttpResponse;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8574.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a857a.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8580.   v0:= temp  @type object;
#L0a8582.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v1, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8588.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a858e.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.receiveResponseEntity|](v0, v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.receiveResponseEntity:(Lorg/apache/http/HttpResponse;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8594.   return @void ;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.receiveResponseHeader|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.receiveResponseHeader:()Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a85a8.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a85ae.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a85b4.   v0:= temp  @type object;
#L0a85b6.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a85bc.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a85c2.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.receiveResponseHeader|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.receiveResponseHeader:()Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a85c8.   v1:= temp  @type object;
#L0a85ca.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.releaseConnection|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v4 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.releaseConnection:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a85dc.   v0:= v4.[|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]   @type object;
#L0a85e0.   if v0 == 0 then goto L0a85f6;
#L0a85e4.   v0:= v4.[|org:apache:http:impl:conn:AbstractClientConnAdapter.connManager|]   @type object;
#L0a85e8.   v1:= v4.[|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]   @wide;
#L0a85ec.   v3:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L0a85f0.   call temp:=  [|org:apache:http:conn:ClientConnectionManager.releaseConnection|](v0, v4, v1, v2, v3) @signature [|Lorg/apache/http/conn/ClientConnectionManager;.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:conn:ClientConnectionManager|] @type interface;
#L0a85f6.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.sendRequestEntity|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this), [|org:apache:http:HttpEntityEnclosingRequest|] v2 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.sendRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8608.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a860e.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8614.   v0:= temp  @type object;
#L0a8616.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v1, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a861c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8622.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.sendRequestEntity|](v0, v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.sendRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8628.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.sendRequestHeader|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this), [|org:apache:http:HttpRequest|] v2 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a863c.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertNotAborted|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertNotAborted:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8642.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8648.   v0:= temp  @type object;
#L0a864a.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v1, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8650.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a8656.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.sendRequestHeader|](v0, v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a865c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.setIdleDuration|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v2 @type (this), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.setIdleDuration:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8670.   v0:= 0  @length wide16;
#L0a8674.   v0:= cmp(v3,v0);
#L0a8678.   if v0 <= 0 then goto L0a868a;
#L0a867c.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v5, v3, v4) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0a8682.   v0:= temp  @type wide;
#L0a8684.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]  := v0 @wide;
#L0a8688.   return @void ;
#L0a868a.   v0:= -1  @length wide16;
#L0a868e.   v2.[|org:apache:http:impl:conn:AbstractClientConnAdapter.duration|]  := v0 @wide;
#L0a8692.   goto L0a8688;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.setSocketTimeout|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.setSocketTimeout:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a86a4.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.getWrappedConnection|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a86aa.   v0:= temp  @type object;
#L0a86ac.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.assertValid|](v1, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.assertValid:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type virtual;
#L0a86b2.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.setSocketTimeout|](v0, v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.setSocketTimeout:(I)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a86b8.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractClientConnAdapter.unmarkReusable|] ([|org:apache:http:impl:conn:AbstractClientConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.unmarkReusable:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a86cc.   v0:= 0  @length 4;
#L0a86ce.   v1.[|org:apache:http:impl:conn:AbstractClientConnAdapter.markedReusable|]  := v0 @boolean;
#L0a86d2.   return @void ;

   }
record [|org:apache:http:impl:conn:AbstractPoolEntry|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:AbstractPoolEntry.connOperator|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:impl:conn:AbstractPoolEntry.connection|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:AbstractPoolEntry.route|]    @AccessFlag PROTECTED_VOLATILE;
      [|java:lang:Object|] [|org:apache:http:impl:conn:AbstractPoolEntry.state|]    @AccessFlag PROTECTED_VOLATILE;
      [|org:apache:http:conn:routing:RouteTracker|] [|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]    @AccessFlag PROTECTED_VOLATILE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.<init>|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v2 @type (this), [|org:apache:http:conn:ClientConnectionOperator|] v3 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v4 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a86e4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a86ea.   if v3 != 0 then goto L0a86fe;
#L0a86ee.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a86f2.   v1:= "Connection operator may not be null" @type (object, string);
#L0a86f6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a86fc.   throw v0;
#L0a86fe.   v2.[|org:apache:http:impl:conn:AbstractPoolEntry.connOperator|]  := v3 @type object;
#L0a8702.   call temp:=  [|org:apache:http:conn:ClientConnectionOperator.createConnection|](v3) @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.createConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:conn:ClientConnectionOperator|] @type interface;
#L0a8708.   v0:= temp  @type object;
#L0a870a.   v2.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]  := v0 @type object;
#L0a870e.   v2.[|org:apache:http:impl:conn:AbstractPoolEntry.route|]  := v4 @type object;
#L0a8712.   v0:= 0  @length 4;
#L0a8714.   v2.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]  := v0 @type object;
#L0a8718.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:conn:AbstractPoolEntry.getState|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.getState:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a872c.   v0:= v1.[|org:apache:http:impl:conn:AbstractPoolEntry.state|]   @type object;
#L0a8730.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.layerProtocol|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v3 @type (this), [|org:apache:http:protocol:HttpContext|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.layerProtocol:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a8744.   if v5 != 0 then goto L0a8758;
#L0a8748.   v1:= new [|java:lang:IllegalArgumentException|];
#L0a874c.   v2:= "Parameters must not be null." @type (object, string);
#L0a8750.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a8756.   throw v1;
#L0a8758.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a875c.   if v1 == 0 then goto L0a8770;
#L0a8760.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8764.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isConnected|](v1) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isConnected:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a876a.   v1:= temp;
#L0a876c.   if v1 != 0 then goto L0a8780;
#L0a8770.   v1:= new [|java:lang:IllegalStateException|];
#L0a8774.   v2:= "Connection not open." @type (object, string);
#L0a8778.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a877e.   throw v1;
#L0a8780.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8784.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isTunnelled|](v1) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a878a.   v1:= temp;
#L0a878c.   if v1 != 0 then goto L0a87a0;
#L0a8790.   v1:= new [|java:lang:IllegalStateException|];
#L0a8794.   v2:= "Protocol layering without a tunnel not supported." @type (object, string);
#L0a8798.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a879e.   throw v1;
#L0a87a0.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a87a4.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isLayered|](v1) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a87aa.   v1:= temp;
#L0a87ac.   if v1 == 0 then goto L0a87c0;
#L0a87b0.   v1:= new [|java:lang:IllegalStateException|];
#L0a87b4.   v2:= "Multiple protocol layering not supported." @type (object, string);
#L0a87b8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a87be.   throw v1;
#L0a87c0.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a87c4.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.getTargetHost|](v1) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a87ca.   v0:= temp  @type object;
#L0a87cc.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.connOperator|]   @type object;
#L0a87d0.   v2:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a87d4.   call temp:=  [|org:apache:http:conn:ClientConnectionOperator.updateSecureConnection|](v1, v2, v0, v4, v5) @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.updateSecureConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ClientConnectionOperator|] @type interface;
#L0a87da.   v1:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a87de.   v2:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a87e2.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isSecure|](v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a87e8.   v2:= temp;
#L0a87ea.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.layerProtocol|](v1, v2) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.layerProtocol:(Z)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a87f0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.open|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v8 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v9 @type (object), [|org:apache:http:protocol:HttpContext|] v10 @type (object), [|org:apache:http:params:HttpParams|] v11 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a8804.   if v9 != 0 then goto L0a8818;
#L0a8808.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a880c.   v1:= "Route must not be null." @type (object, string);
#L0a8810.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a8816.   throw v0;
#L0a8818.   if v11 != 0 then goto L0a882c;
#L0a881c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8820.   v1:= "Parameters must not be null." @type (object, string);
#L0a8824.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a882a.   throw v0;
#L0a882c.   v0:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8830.   if v0 == 0 then goto L0a8854;
#L0a8834.   v0:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8838.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isConnected|](v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isConnected:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a883e.   v0:= temp;
#L0a8840.   if v0 == 0 then goto L0a8854;
#L0a8844.   v0:= new [|java:lang:IllegalStateException|];
#L0a8848.   v1:= "Connection already open." @type (object, string);
#L0a884c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a8852.   throw v0;
#L0a8854.   v0:= new [|org:apache:http:conn:routing:RouteTracker|];
#L0a8858.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.<init>|](v0, v9) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.<init>:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type direct;
#L0a885e.   v8.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]  := v0 @type object;
#L0a8862.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getProxyHost|](v9) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getProxyHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a8868.   v7:= temp  @type object;
#L0a886a.   v0:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.connOperator|]   @type object;
#L0a886e.   v1:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a8872.   if v7 == 0 then goto L0a88a2;
#L0a8876.   v2:= v7  @type object;
#L0a8878.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getLocalAddress|](v9) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a887e.   v3:= temp  @type object;
#L0a8880.   v4:= v10  @type object;
#L0a8882.   v5:= v11  @type object;
#L0a8884.   call temp:=  [|org:apache:http:conn:ClientConnectionOperator.openConnection|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/conn/ClientConnectionOperator;.openConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:ClientConnectionOperator|] @type interface;
#L0a888a.   v6:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a888e.   if v6 != 0 then goto L0a88ac;
#L0a8892.   v0:= new [|java:io:IOException|];
#L0a8896.   v1:= "Request aborted" @type (object, string);
#L0a889a.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0a88a0.   throw v0;
#L0a88a2.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.getTargetHost|](v9) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0a88a8.   v2:= temp  @type object;
#L0a88aa.   goto L0a8878;
#L0a88ac.   if v7 != 0 then goto L0a88c4;
#L0a88b0.   v0:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a88b4.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isSecure|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a88ba.   v0:= temp;
#L0a88bc.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.connectTarget|](v6, v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.connectTarget:(Z)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a88c2.   return @void ;
#L0a88c4.   v0:= v8.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a88c8.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isSecure|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isSecure:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a88ce.   v0:= temp;
#L0a88d0.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.connectProxy|](v6, v7, v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.connectProxy:(Lorg/apache/http/HttpHost;Z)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a88d6.   goto L0a88c2;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.setState|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.setState:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L0a88e8.   v0.[|org:apache:http:impl:conn:AbstractPoolEntry.state|]  := v1 @type object;
#L0a88ec.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.shutdownEntry|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.shutdownEntry:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a8900.   v0:= 0  @length 4;
#L0a8902.   v1.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]  := v0 @type object;
#L0a8906.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.tunnelProxy|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v2 @type (this), [|org:apache:http:HttpHost|] v3 @type (object), [|boolean|] v4, [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.tunnelProxy:(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8918.   if v3 != 0 then goto L0a892c;
#L0a891c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8920.   v1:= "Next proxy must not be null." @type (object, string);
#L0a8924.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a892a.   throw v0;
#L0a892c.   if v5 != 0 then goto L0a8940;
#L0a8930.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8934.   v1:= "Parameters must not be null." @type (object, string);
#L0a8938.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a893e.   throw v0;
#L0a8940.   v0:= v2.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8944.   if v0 == 0 then goto L0a8958;
#L0a8948.   v0:= v2.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a894c.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isConnected|](v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isConnected:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a8952.   v0:= temp;
#L0a8954.   if v0 != 0 then goto L0a8968;
#L0a8958.   v0:= new [|java:lang:IllegalStateException|];
#L0a895c.   v1:= "Connection not open." @type (object, string);
#L0a8960.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a8966.   throw v0;
#L0a8968.   v0:= v2.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a896c.   v1:= 0  @length 4;
#L0a896e.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.update|](v0, v1, v3, v4, v5) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8974.   v0:= v2.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8978.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.tunnelProxy|](v0, v3, v4) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.tunnelProxy:(Lorg/apache/http/HttpHost;Z)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a897e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPoolEntry.tunnelTarget|] ([|org:apache:http:impl:conn:AbstractPoolEntry|] v3 @type (this), [|boolean|] v4, [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPoolEntry|] @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.tunnelTarget:(ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a8990.   if v5 != 0 then goto L0a89a4;
#L0a8994.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8998.   v1:= "Parameters must not be null." @type (object, string);
#L0a899c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a89a2.   throw v0;
#L0a89a4.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a89a8.   if v0 == 0 then goto L0a89bc;
#L0a89ac.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a89b0.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isConnected|](v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isConnected:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a89b6.   v0:= temp;
#L0a89b8.   if v0 != 0 then goto L0a89cc;
#L0a89bc.   v0:= new [|java:lang:IllegalStateException|];
#L0a89c0.   v1:= "Connection not open." @type (object, string);
#L0a89c4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a89ca.   throw v0;
#L0a89cc.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a89d0.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.isTunnelled|](v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.isTunnelled:()Z|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a89d6.   v0:= temp;
#L0a89d8.   if v0 == 0 then goto L0a89ec;
#L0a89dc.   v0:= new [|java:lang:IllegalStateException|];
#L0a89e0.   v1:= "Connection is already tunnelled." @type (object, string);
#L0a89e4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a89ea.   throw v0;
#L0a89ec.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a89f0.   v1:= 0  @length 4;
#L0a89f2.   v2:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a89f6.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.getTargetHost|](v2) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.getTargetHost:()Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a89fc.   v2:= temp  @type object;
#L0a89fe.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.update|](v0, v1, v2, v4, v5) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8a04.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8a08.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.tunnelTarget|](v0, v4) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.tunnelTarget:(Z)V|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a8a0e.   return @void ;

   }
record [|org:apache:http:impl:conn:AbstractPooledConnAdapter|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|org:apache:http:impl:conn:AbstractClientConnAdapter|] {
      [|org:apache:http:impl:conn:AbstractPoolEntry|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]    @AccessFlag PROTECTED_VOLATILE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.<init>|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|org:apache:http:conn:ClientConnectionManager|] v2 @type (object), [|org:apache:http:impl:conn:AbstractPoolEntry|] v3 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a8a20.   v0:= v3.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0a8a24.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.<init>|](v1, v2, v0) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type direct;
#L0a8a2a.   v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]  := v3 @type object;
#L0a8a2e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0a8a40.   v0:= v2.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8a44.   if v0 != 0 then goto L0a8a58;
#L0a8a48.   v0:= new [|java:lang:IllegalStateException|];
#L0a8a4c.   v1:= "Adapter is detached." @type (object, string);
#L0a8a50.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a8a56.   throw v0;
#L0a8a58.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.close|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8a6c.   v1:= v2.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8a70.   if v1 == 0 then goto L0a8a7e;
#L0a8a74.   v1:= v2.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8a78.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.shutdownEntry|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.shutdownEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8a7e.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8a84.   v0:= temp  @type object;
#L0a8a86.   if v0 == 0 then goto L0a8a90;
#L0a8a8a.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.close|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8a90.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.detach|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.detach:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0a8aa4.   call temp:=  [|org:apache:http:impl:conn:AbstractClientConnAdapter.detach|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractClientConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractClientConnAdapter|] @type super;
#L0a8aaa.   v0:= 0  @length 4;
#L0a8aac.   v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]  := v0 @type object;
#L0a8ab0.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.getRoute|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8ac4.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8aca.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8ace.   v0:= v0.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8ad2.   if v0 != 0 then goto L0a8ada;
#L0a8ad6.   v0:= 0  @length 4;
#L0a8ad8.   return v0  @type object;
#L0a8ada.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8ade.   v0:= v0.[|org:apache:http:impl:conn:AbstractPoolEntry.tracker|]   @type object;
#L0a8ae2.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.toRoute|](v0) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.toRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0a8ae8.   v0:= temp  @type object;
#L0a8aea.   goto L0a8ad8;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.getState|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.getState:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8afc.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8b02.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b06.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.getState|](v0) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.getState:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8b0c.   v0:= temp  @type object;
#L0a8b0e.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.layerProtocol|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|org:apache:http:protocol:HttpContext|] v2 @type (object), [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.layerProtocol:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8b20.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8b26.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b2a.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.layerProtocol|](v0, v2, v3) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.layerProtocol:(Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8b30.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.open|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object), [|org:apache:http:protocol:HttpContext|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8b44.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8b4a.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b4e.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.open|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.open:(Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8b54.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.setState|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.setState:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8b68.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8b6e.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b72.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.setState|](v0, v2) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.setState:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8b78.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.shutdown|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v2 @type (this)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8b8c.   v1:= v2.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b90.   if v1 == 0 then goto L0a8b9e;
#L0a8b94.   v1:= v2.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8b98.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.shutdownEntry|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.shutdownEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8b9e.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.getWrappedConnection|](v2) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.getWrappedConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8ba4.   v0:= temp  @type object;
#L0a8ba6.   if v0 == 0 then goto L0a8bb0;
#L0a8baa.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.shutdown|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.shutdown:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a8bb0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.tunnelProxy|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|org:apache:http:HttpHost|] v2 @type (object), [|boolean|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.tunnelProxy:(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8bc4.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8bca.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8bce.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.tunnelProxy|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.tunnelProxy:(Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8bd4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:AbstractPooledConnAdapter.tunnelTarget|] ([|org:apache:http:impl:conn:AbstractPooledConnAdapter|] v1 @type (this), [|boolean|] v2, [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.tunnelTarget:(ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a8be8.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.assertAttached|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.assertAttached:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type virtual;
#L0a8bee.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0a8bf2.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.tunnelTarget|](v0, v2, v3) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.tunnelTarget:(ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type virtual;
#L0a8bf8.   return @void ;

   }
record [|org:apache:http:impl:conn:DefaultClientConnection|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:SocketHttpClientConnection|], [|org:apache:http:conn:OperatedClientConnection|] {
      [|boolean|] [|org:apache:http:impl:conn:DefaultClientConnection.connSecure|]    @AccessFlag PRIVATE;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:DefaultClientConnection.log|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:impl:conn:DefaultClientConnection.shutdown|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:net:Socket|] [|org:apache:http:impl:conn:DefaultClientConnection.socket|]    @AccessFlag PRIVATE_VOLATILE;
      [|org:apache:http:HttpHost|] [|org:apache:http:impl:conn:DefaultClientConnection.targetHost|]    @AccessFlag PRIVATE;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.<init>|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a8c0c.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.<init>|](v1) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type direct;
#L0a8c12.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a8c18.   v0:= temp  @type object;
#L0a8c1a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a8c20.   v0:= temp  @type object;
#L0a8c22.   v1.[|org:apache:http:impl:conn:DefaultClientConnection.log|]  := v0 @type object;
#L0a8c26.   v0:= "org.apache.http.headers" @type (object, string);
#L0a8c2a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a8c30.   v0:= temp  @type object;
#L0a8c32.   v1.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]  := v0 @type object;
#L0a8c36.   v0:= "org.apache.http.wire" @type (object, string);
#L0a8c3a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a8c40.   v0:= temp  @type object;
#L0a8c42.   v1.[|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]  := v0 @type object;
#L0a8c46.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.close|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v2 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8c58.   v0:= v2.[|org:apache:http:impl:conn:DefaultClientConnection.log|]   @type object;
#L0a8c5c.   v1:= "Connection closed" @type (object, string);
#L0a8c60.   call temp:=  [|org:apache:commons:logging:Log.debug|](v0, v1) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8c66.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.close|](v2) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.close:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8c6c.   return @void ;

   }
    procedure [|org:apache:http:io:HttpMessageParser|] [|org:apache:http:impl:conn:DefaultClientConnection.createResponseParser|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:HttpResponseFactory|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.createResponseParser:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)Lorg/apache/http/io/HttpMessageParser;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a8c80.   v0:= new [|org:apache:http:impl:conn:DefaultResponseParser|];
#L0a8c84.   v1:= 0  @length 4;
#L0a8c86.   call temp:=  [|org:apache:http:impl:conn:DefaultResponseParser.<init>|](v0, v3, v1, v4, v5) @signature [|Lorg/apache/http/impl/conn/DefaultResponseParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultResponseParser|] @type direct;
#L0a8c8c.   return v0  @type object;

   }
    procedure [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:conn:DefaultClientConnection.createSessionInputBuffer|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v4 @type (this), [|java:net:Socket|] v5 @type (object), [|int|] v6, [|org:apache:http:params:HttpParams|] v7 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.createSessionInputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a8ca0.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.createSessionInputBuffer|](v4, v5, v6, v7) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionInputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionInputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8ca6.   v0:= temp  @type object;
#L0a8ca8.   v2:= v4.[|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]   @type object;
#L0a8cac.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8cb2.   v2:= temp;
#L0a8cb4.   if v2 == 0 then goto L0a8cd2;
#L0a8cb8.   v1:= new [|org:apache:http:impl:conn:LoggingSessionInputBuffer|];
#L0a8cbc.   v2:= new [|org:apache:http:impl:conn:Wire|];
#L0a8cc0.   v3:= v4.[|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]   @type object;
#L0a8cc4.   call temp:=  [|org:apache:http:impl:conn:Wire.<init>|](v2, v3) @signature [|Lorg/apache/http/impl/conn/Wire;.<init>:(Lorg/apache/commons/logging/Log;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0a8cca.   call temp:=  [|org:apache:http:impl:conn:LoggingSessionInputBuffer.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/impl/conn/Wire;)V|] @classDescriptor [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @type direct;
#L0a8cd0.   v0:= v1  @type object;
#L0a8cd2.   return v0  @type object;

   }
    procedure [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:conn:DefaultClientConnection.createSessionOutputBuffer|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v4 @type (this), [|java:net:Socket|] v5 @type (object), [|int|] v6, [|org:apache:http:params:HttpParams|] v7 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.createSessionOutputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a8ce4.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.createSessionOutputBuffer|](v4, v5, v6, v7) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.createSessionOutputBuffer:(Ljava/net/Socket;ILorg/apache/http/params/HttpParams;)Lorg/apache/http/io/SessionOutputBuffer;|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8cea.   v0:= temp  @type object;
#L0a8cec.   v2:= v4.[|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]   @type object;
#L0a8cf0.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8cf6.   v2:= temp;
#L0a8cf8.   if v2 == 0 then goto L0a8d16;
#L0a8cfc.   v1:= new [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|];
#L0a8d00.   v2:= new [|org:apache:http:impl:conn:Wire|];
#L0a8d04.   v3:= v4.[|org:apache:http:impl:conn:DefaultClientConnection.wireLog|]   @type object;
#L0a8d08.   call temp:=  [|org:apache:http:impl:conn:Wire.<init>|](v2, v3) @signature [|Lorg/apache/http/impl/conn/Wire;.<init>:(Lorg/apache/commons/logging/Log;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0a8d0e.   call temp:=  [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/impl/conn/Wire;)V|] @classDescriptor [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @type direct;
#L0a8d14.   v0:= v1  @type object;
#L0a8d16.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|org:apache:http:impl:conn:DefaultClientConnection.getSocket|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.getSocket:()Ljava/net/Socket;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a8d28.   v0:= v1.[|org:apache:http:impl:conn:DefaultClientConnection.socket|]   @type object;
#L0a8d2c.   return v0  @type object;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:impl:conn:DefaultClientConnection.getTargetHost|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.getTargetHost:()Lorg/apache/http/HttpHost;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a8d40.   v0:= v1.[|org:apache:http:impl:conn:DefaultClientConnection.targetHost|]   @type object;
#L0a8d44.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:DefaultClientConnection.isSecure|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v1 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.isSecure:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0a8d58.   v0:= v1.[|org:apache:http:impl:conn:DefaultClientConnection.connSecure|]   @boolean;
#L0a8d5c.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.openCompleted|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v2 @type (this), [|boolean|] v3, [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.openCompleted:(ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8d70.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.assertNotOpen|](v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.assertNotOpen:()V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type virtual;
#L0a8d76.   if v4 != 0 then goto L0a8d8a;
#L0a8d7a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8d7e.   v1:= "Parameters must not be null." @type (object, string);
#L0a8d82.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a8d88.   throw v0;
#L0a8d8a.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.connSecure|]  := v3 @boolean;
#L0a8d8e.   v0:= v2.[|org:apache:http:impl:conn:DefaultClientConnection.socket|]   @type object;
#L0a8d92.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.bind|](v2, v0, v4) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type virtual;
#L0a8d98.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.opening|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v2 @type (this), [|java:net:Socket|] v3 @type (object), [|org:apache:http:HttpHost|] v4 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.opening:(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8dac.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.assertNotOpen|](v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.assertNotOpen:()V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type virtual;
#L0a8db2.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.socket|]  := v3 @type object;
#L0a8db6.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.targetHost|]  := v4 @type object;
#L0a8dba.   v0:= v2.[|org:apache:http:impl:conn:DefaultClientConnection.shutdown|]   @boolean;
#L0a8dbe.   if v0 == 0 then goto L0a8dd8;
#L0a8dc2.   call temp:=  [|java:net:Socket.close|](v3) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a8dc8.   v0:= new [|java:io:IOException|];
#L0a8dcc.   v1:= "Connection already shutdown" @type (object, string);
#L0a8dd0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0a8dd6.   throw v0;
#L0a8dd8.   return @void ;

   }
    procedure [|org:apache:http:HttpResponse|] [|org:apache:http:impl:conn:DefaultClientConnection.receiveResponseHeader|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v9 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.receiveResponseHeader:()Lorg/apache/http/HttpResponse;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0a8dec.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.receiveResponseHeader|](v9) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.receiveResponseHeader:()Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8df2.   v5:= temp  @type object;
#L0a8df4.   v6:= v9.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8df8.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v6) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8dfe.   v6:= temp;
#L0a8e00.   if v6 == 0 then goto L0a8e98;
#L0a8e04.   v6:= v9.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8e08.   v7:= new [|java:lang:StringBuilder|];
#L0a8e0c.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a8e12.   v8:= "<< " @type (object, string);
#L0a8e16.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e1c.   v7:= temp  @type object;
#L0a8e1e.   call temp:=  [|org:apache:http:HttpResponse.getStatusLine|](v5) @signature [|Lorg/apache/http/HttpResponse;.getStatusLine:()Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a8e24.   v8:= temp  @type object;
#L0a8e26.   call temp:=  [|java:lang:Object.toString|](v8) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a8e2c.   v8:= temp  @type object;
#L0a8e2e.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e34.   v7:= temp  @type object;
#L0a8e36.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e3c.   v7:= temp  @type object;
#L0a8e3e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8e44.   call temp:=  [|org:apache:http:HttpResponse.getAllHeaders|](v5) @signature [|Lorg/apache/http/HttpResponse;.getAllHeaders:()[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpResponse|] @type interface;
#L0a8e4a.   v2:= temp  @type object;
#L0a8e4c.   v0:= v2  @type object;
#L0a8e4e.   v4:= v0.length;
#L0a8e50.   v3:= 0  @length 4;
#L0a8e52.   if v3 >= v4 then goto L0a8e98;
#L0a8e56.   v1:= v0[v3]  @type object;
#L0a8e5a.   v6:= v9.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8e5e.   v7:= new [|java:lang:StringBuilder|];
#L0a8e62.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a8e68.   v8:= "<< " @type (object, string);
#L0a8e6c.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e72.   v7:= temp  @type object;
#L0a8e74.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a8e7a.   v8:= temp  @type object;
#L0a8e7c.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e82.   v7:= temp  @type object;
#L0a8e84.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8e8a.   v7:= temp  @type object;
#L0a8e8c.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8e92.   v3:= v3 + 1;
#L0a8e96.   goto L0a8e52;
#L0a8e98.   return v5  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.sendRequestHeader|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v8 @type (this), [|org:apache:http:HttpRequest|] v9 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a8eac.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.sendRequestHeader|](v8, v9) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8eb2.   v5:= v8.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8eb6.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v5) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8ebc.   v5:= temp;
#L0a8ebe.   if v5 == 0 then goto L0a8f56;
#L0a8ec2.   v5:= v8.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8ec6.   v6:= new [|java:lang:StringBuilder|];
#L0a8eca.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a8ed0.   v7:= ">> " @type (object, string);
#L0a8ed4.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8eda.   v6:= temp  @type object;
#L0a8edc.   call temp:=  [|org:apache:http:HttpRequest.getRequestLine|](v9) @signature [|Lorg/apache/http/HttpRequest;.getRequestLine:()Lorg/apache/http/RequestLine;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a8ee2.   v7:= temp  @type object;
#L0a8ee4.   call temp:=  [|java:lang:Object.toString|](v7) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a8eea.   v7:= temp  @type object;
#L0a8eec.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8ef2.   v6:= temp  @type object;
#L0a8ef4.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8efa.   v6:= temp  @type object;
#L0a8efc.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8f02.   call temp:=  [|org:apache:http:HttpRequest.getAllHeaders|](v9) @signature [|Lorg/apache/http/HttpRequest;.getAllHeaders:()[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a8f08.   v2:= temp  @type object;
#L0a8f0a.   v0:= v2  @type object;
#L0a8f0c.   v4:= v0.length;
#L0a8f0e.   v3:= 0  @length 4;
#L0a8f10.   if v3 >= v4 then goto L0a8f56;
#L0a8f14.   v1:= v0[v3]  @type object;
#L0a8f18.   v5:= v8.[|org:apache:http:impl:conn:DefaultClientConnection.headerLog|]   @type object;
#L0a8f1c.   v6:= new [|java:lang:StringBuilder|];
#L0a8f20.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a8f26.   v7:= ">> " @type (object, string);
#L0a8f2a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8f30.   v6:= temp  @type object;
#L0a8f32.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a8f38.   v7:= temp  @type object;
#L0a8f3a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8f40.   v6:= temp  @type object;
#L0a8f42.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a8f48.   v6:= temp  @type object;
#L0a8f4a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8f50.   v3:= v3 + 1;
#L0a8f54.   goto L0a8f10;
#L0a8f56.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.shutdown|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v3 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a8f68.   v1:= v3.[|org:apache:http:impl:conn:DefaultClientConnection.log|]   @type object;
#L0a8f6c.   v2:= "Connection shut down" @type (object, string);
#L0a8f70.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a8f76.   v1:= 1  @length 4;
#L0a8f78.   v3.[|org:apache:http:impl:conn:DefaultClientConnection.shutdown|]  := v1 @boolean;
#L0a8f7c.   call temp:=  [|org:apache:http:impl:SocketHttpClientConnection.shutdown|](v3) @signature [|Lorg/apache/http/impl/SocketHttpClientConnection;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:SocketHttpClientConnection|] @type super;
#L0a8f82.   v0:= v3.[|org:apache:http:impl:conn:DefaultClientConnection.socket|]   @type object;
#L0a8f86.   if v0 == 0 then goto L0a8f90;
#L0a8f8a.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a8f90.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnection.update|] ([|org:apache:http:impl:conn:DefaultClientConnection|] v2 @type (this), [|java:net:Socket|] v3 @type (object), [|org:apache:http:HttpHost|] v4 @type (object), [|boolean|] v5, [|org:apache:http:params:HttpParams|] v6 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnection|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a8fa4.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.assertOpen|](v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.assertOpen:()V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type virtual;
#L0a8faa.   if v4 != 0 then goto L0a8fbe;
#L0a8fae.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8fb2.   v1:= "Target host must not be null." @type (object, string);
#L0a8fb6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a8fbc.   throw v0;
#L0a8fbe.   if v6 != 0 then goto L0a8fd2;
#L0a8fc2.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a8fc6.   v1:= "Parameters must not be null." @type (object, string);
#L0a8fca.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a8fd0.   throw v0;
#L0a8fd2.   if v3 == 0 then goto L0a8fe0;
#L0a8fd6.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.socket|]  := v3 @type object;
#L0a8fda.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.bind|](v2, v3, v6) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.bind:(Ljava/net/Socket;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type virtual;
#L0a8fe0.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.targetHost|]  := v4 @type object;
#L0a8fe4.   v2.[|org:apache:http:impl:conn:DefaultClientConnection.connSecure|]  := v5 @boolean;
#L0a8fe8.   return @void ;

   }
record [|org:apache:http:impl:conn:DefaultClientConnectionOperator|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:ClientConnectionOperator|] {
      [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.schemeRegistry|]    @AccessFlag PROTECTED;
   }
      global [|org:apache:http:conn:scheme:PlainSocketFactory|] @@[|org:apache:http:impl:conn:DefaultClientConnectionOperator.staticPlainSocketFactory|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.<clinit>|] () @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a8ffc.   v0:= new [|org:apache:http:conn:scheme:PlainSocketFactory|];
#L0a9000.   call temp:=  [|org:apache:http:conn:scheme:PlainSocketFactory.<init>|](v0) @signature [|Lorg/apache/http/conn/scheme/PlainSocketFactory;.<init>:()V|] @classDescriptor [|org:apache:http:conn:scheme:PlainSocketFactory|] @type direct;
#L0a9006.   @@[|org:apache:http:impl:conn:DefaultClientConnectionOperator.staticPlainSocketFactory|] := v0  @type object;
#L0a900a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.<init>|] ([|org:apache:http:impl:conn:DefaultClientConnectionOperator|] v2 @type (this), [|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a901c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a9022.   if v3 != 0 then goto L0a9036;
#L0a9026.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a902a.   v1:= "Scheme registry must not be null." @type (object, string);
#L0a902e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9034.   throw v0;
#L0a9036.   v2.[|org:apache:http:impl:conn:DefaultClientConnectionOperator.schemeRegistry|]  := v3 @type object;
#L0a903a.   return @void ;

   }
    procedure [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.createConnection|] ([|org:apache:http:impl:conn:DefaultClientConnectionOperator|] v1 @type (this)) @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.createConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a904c.   v0:= new [|org:apache:http:impl:conn:DefaultClientConnection|];
#L0a9050.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnection.<init>|](v0) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnection;.<init>:()V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnection|] @type direct;
#L0a9056.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.openConnection|] ([|org:apache:http:impl:conn:DefaultClientConnectionOperator|] v19 @type (this), [|org:apache:http:conn:OperatedClientConnection|] v20 @type (object), [|org:apache:http:HttpHost|] v21 @type (object), [|java:net:InetAddress|] v22 @type (object), [|org:apache:http:protocol:HttpContext|] v23 @type (object), [|org:apache:http:params:HttpParams|] v24 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.openConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
      
#L0a9068.   if v20 != 0 then goto L0a907c;
#L0a906c.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a9070.   v6:= "Connection must not be null." @type (object, string);
#L0a9074.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a907a.   throw v5;
#L0a907c.   if v21 != 0 then goto L0a9090;
#L0a9080.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a9084.   v6:= "Target host must not be null." @type (object, string);
#L0a9088.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a908e.   throw v5;
#L0a9090.   if v24 != 0 then goto L0a90a4;
#L0a9094.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a9098.   v6:= "Parameters must not be null." @type (object, string);
#L0a909c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a90a2.   throw v5;
#L0a90a4.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v20) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a90aa.   v5:= temp;
#L0a90ac.   if v5 == 0 then goto L0a90c0;
#L0a90b0.   v5:= new [|java:lang:IllegalArgumentException|];
#L0a90b4.   v6:= "Connection must not be open." @type (object, string);
#L0a90b8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a90be.   throw v5;
#L0a90c0.   v0:= v19  @type object;
#L0a90c4.   v5:= v0.[|org:apache:http:impl:conn:DefaultClientConnectionOperator.schemeRegistry|]   @type object;
#L0a90c8.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v21) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a90ce.   v6:= temp  @type object;
#L0a90d0.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v5, v6) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a90d6.   v17:= temp  @type object;
#L0a90d8.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getSocketFactory|](v17) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getSocketFactory:()Lorg/apache/http/conn/scheme/SocketFactory;|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a90de.   v18:= temp  @type object;
#L0a90e0.   v0:= v18  @type object;
#L0a90e4.   v5:= instanceof @varname v0 @type [|org:apache:http:conn:scheme:LayeredSocketFactory|];
#L0a90e8.   if v5 == 0 then goto L0a91e2;
#L0a90ec.   v3:= @@[|org:apache:http:impl:conn:DefaultClientConnectionOperator.staticPlainSocketFactory|]   @type object;
#L0a90f0.   v15:= v18  @type object;
#L0a90f4.   v15:= ([|org:apache:http:conn:scheme:LayeredSocketFactory|])v15;
#L0a90f8.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v21) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a90fe.   v5:= temp  @type object;
#L0a9100.   call temp:=  [|java:net:InetAddress.getAllByName|](v5) @signature [|Ljava/net/InetAddress;.getAllByName:(Ljava/lang/String;)[Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetAddress|] @type static;
#L0a9106.   v10:= temp  @type object;
#L0a9108.   v14:= 0  @length 4;
#L0a910a.   v5:= v10.length;
#L0a910c.   if v14 >= v5 then goto L0a91e0;
#L0a9110.   call temp:=  [|org:apache:http:conn:scheme:SocketFactory.createSocket|](v3) @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.createSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:scheme:SocketFactory|] @type interface;
#L0a9116.   v4:= temp  @type object;
#L0a9118.   v0:= v20  @type object;
#L0a911c.   v1:= v21  @type object;
#L0a9120.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.opening|](v0, v4, v1) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.opening:(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a9126.   v5:= v10[v14]  @type object;
#L0a912a.   call temp:=  [|java:net:InetAddress.getHostAddress|](v5) @signature [|Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L0a9130.   v5:= temp  @type object;
#L0a9132.   call temp:=  [|org:apache:http:HttpHost.getPort|](v21) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a9138.   v6:= temp;
#L0a913a.   v0:= v17  @type object;
#L0a913e.   call temp:=  [|org:apache:http:conn:scheme:Scheme.resolvePort|](v0, v6) @signature [|Lorg/apache/http/conn/scheme/Scheme;.resolvePort:(I)I|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a9144.   v6:= temp;
#L0a9146.   v8:= 0  @length 4;
#L0a9148.   v7:= v22  @type object;
#L0a914c.   v9:= v24  @type object;
#L0a9150.   call temp:=  [|org:apache:http:conn:scheme:SocketFactory.connectSocket|](v3, v4, v5, v6, v7, v8, v9) @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.connectSocket:(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:scheme:SocketFactory|] @type interface;
#L0a9156.   v12:= temp  @type object;
#L0a9158.   if v4 == v12 then goto L0a916c;
#L0a915c.   v4:= v12  @type object;
#L0a915e.   v0:= v20  @type object;
#L0a9162.   v1:= v21  @type object;
#L0a9166.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.opening|](v0, v4, v1) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.opening:(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a916c.   v0:= v19  @type object;
#L0a9170.   v1:= v23  @type object;
#L0a9174.   v2:= v24  @type object;
#L0a9178.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnectionOperator.prepareSocket|](v0, v4, v1, v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.prepareSocket:(Ljava/net/Socket;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @type virtual;
#L0a917e.   if v15 == 0 then goto L0a91ea;
#L0a9182.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v21) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a9188.   v5:= temp  @type object;
#L0a918a.   call temp:=  [|org:apache:http:HttpHost.getPort|](v21) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a9190.   v6:= temp;
#L0a9192.   v0:= v17  @type object;
#L0a9196.   call temp:=  [|org:apache:http:conn:scheme:Scheme.resolvePort|](v0, v6) @signature [|Lorg/apache/http/conn/scheme/Scheme;.resolvePort:(I)I|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a919c.   v6:= temp;
#L0a919e.   v7:= 1  @length 4;
#L0a91a0.   call temp:=  [|org:apache:http:conn:scheme:LayeredSocketFactory.createSocket|](v15, v4, v5, v6, v7) @signature [|Lorg/apache/http/conn/scheme/LayeredSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:scheme:LayeredSocketFactory|] @type interface;
#L0a91a6.   v16:= temp  @type object;
#L0a91a8.   v0:= v16  @type object;
#L0a91ac.   if v0 == v4 then goto L0a91c2;
#L0a91b0.   v0:= v20  @type object;
#L0a91b4.   v1:= v16  @type object;
#L0a91b8.   v2:= v21  @type object;
#L0a91bc.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.opening|](v0, v1, v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.opening:(Ljava/net/Socket;Lorg/apache/http/HttpHost;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a91c2.   v0:= v18  @type object;
#L0a91c6.   v1:= v16  @type object;
#L0a91ca.   call temp:=  [|org:apache:http:conn:scheme:SocketFactory.isSecure|](v0, v1) @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @classDescriptor [|org:apache:http:conn:scheme:SocketFactory|] @type interface;
#L0a91d0.   v5:= temp;
#L0a91d2.   v0:= v20  @type object;
#L0a91d6.   v1:= v24  @type object;
#L0a91da.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.openCompleted|](v0, v5, v1) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.openCompleted:(ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a91e0.   return @void ;
#L0a91e2.   v3:= v18  @type object;
#L0a91e6.   v15:= 0  @length 4;
#L0a91e8.   goto L0a90f8;
#L0a91ea.   v0:= v18  @type object;
#L0a91ee.   call temp:=  [|org:apache:http:conn:scheme:SocketFactory.isSecure|](v0, v4) @signature [|Lorg/apache/http/conn/scheme/SocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @classDescriptor [|org:apache:http:conn:scheme:SocketFactory|] @type interface;
#L0a91f4.   v5:= temp;
#L0a91f6.   v0:= v20  @type object;
#L0a91fa.   v1:= v24  @type object;
#L0a91fe.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.openCompleted|](v0, v5, v1) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.openCompleted:(ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a9204.   goto L0a91e0;
#L0a9206.   v13:= Exception  @type object;
#L0a9208.   v5:= v10.length;
#L0a920a.   v5:= v5 + -1;
#L0a920e.   if v14 != v5 then goto L0a9252;
#L0a9212.   v5:= instanceof @varname v13 @type [|java:net:ConnectException|];
#L0a9216.   if v5 == 0 then goto L0a9230;
#L0a921a.   v13:= ([|java:net:ConnectException|])v13;
#L0a921e.   v11:= v13  @type object;
#L0a9220.   v5:= new [|org:apache:http:conn:HttpHostConnectException|];
#L0a9224.   v0:= v21  @type object;
#L0a9228.   call temp:=  [|org:apache:http:conn:HttpHostConnectException.<init>|](v5, v0, v11) @signature [|Lorg/apache/http/conn/HttpHostConnectException;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/ConnectException;)V|] @classDescriptor [|org:apache:http:conn:HttpHostConnectException|] @type direct;
#L0a922e.   throw v5;
#L0a9230.   v11:= new [|java:net:ConnectException|];
#L0a9234.   call temp:=  [|java:net:SocketException.getMessage|](v13) @signature [|Ljava/net/SocketException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:net:SocketException|] @type virtual;
#L0a923a.   v5:= temp  @type object;
#L0a923c.   call temp:=  [|java:net:ConnectException.<init>|](v11, v5, v13) @signature [|Ljava/net/ConnectException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:net:ConnectException|] @type direct;
#L0a9242.   goto L0a9220;
#L0a9244.   v13:= Exception  @type object;
#L0a9246.   v5:= v10.length;
#L0a9248.   v5:= v5 + -1;
#L0a924c.   if v14 != v5 then goto L0a9252;
#L0a9250.   throw v13;
#L0a9252.   v14:= v14 + 1;
#L0a9256.   goto L0a910a;
  catch  [|java:net:SocketException|] @[L0a9126..L0a9204] goto L0a9206;
  catch  [|org:apache:http:conn:ConnectTimeoutException|] @[L0a9126..L0a9204] goto L0a9244;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.prepareSocket|] ([|org:apache:http:impl:conn:DefaultClientConnectionOperator|] v2 @type (this), [|java:net:Socket|] v3 @type (object), [|org:apache:http:protocol:HttpContext|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.prepareSocket:(Ljava/net/Socket;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0a9280.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getTcpNoDelay|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getTcpNoDelay:(Lorg/apache/http/params/HttpParams;)Z|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a9286.   v1:= temp;
#L0a9288.   call temp:=  [|java:net:Socket.setTcpNoDelay|](v3, v1) @signature [|Ljava/net/Socket;.setTcpNoDelay:(Z)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a928e.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getSoTimeout|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getSoTimeout:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a9294.   v1:= temp;
#L0a9296.   call temp:=  [|java:net:Socket.setSoTimeout|](v3, v1) @signature [|Ljava/net/Socket;.setSoTimeout:(I)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a929c.   call temp:=  [|org:apache:http:params:HttpConnectionParams.getLinger|](v5) @signature [|Lorg/apache/http/params/HttpConnectionParams;.getLinger:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:params:HttpConnectionParams|] @type static;
#L0a92a2.   v0:= temp;
#L0a92a4.   if v0 < 0 then goto L0a92b4;
#L0a92a8.   if v0 <= 0 then goto L0a92b6;
#L0a92ac.   v1:= 1  @length 4;
#L0a92ae.   call temp:=  [|java:net:Socket.setSoLinger|](v3, v1, v0) @signature [|Ljava/net/Socket;.setSoLinger:(ZI)V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0a92b4.   return @void ;
#L0a92b6.   v1:= 0  @length 4;
#L0a92b8.   goto L0a92ae;

   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultClientConnectionOperator.updateSecureConnection|] ([|org:apache:http:impl:conn:DefaultClientConnectionOperator|] v8 @type (this), [|org:apache:http:conn:OperatedClientConnection|] v9 @type (object), [|org:apache:http:HttpHost|] v10 @type (object), [|org:apache:http:protocol:HttpContext|] v11 @type (object), [|org:apache:http:params:HttpParams|] v12 @type (object)) @owner [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.updateSecureConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a92cc.   if v9 != 0 then goto L0a92e0;
#L0a92d0.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a92d4.   v5:= "Connection must not be null." @type (object, string);
#L0a92d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a92de.   throw v4;
#L0a92e0.   if v10 != 0 then goto L0a92f4;
#L0a92e4.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a92e8.   v5:= "Target host must not be null." @type (object, string);
#L0a92ec.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a92f2.   throw v4;
#L0a92f4.   if v12 != 0 then goto L0a9308;
#L0a92f8.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a92fc.   v5:= "Parameters must not be null." @type (object, string);
#L0a9300.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9306.   throw v4;
#L0a9308.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v9) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a930e.   v4:= temp;
#L0a9310.   if v4 != 0 then goto L0a9324;
#L0a9314.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a9318.   v5:= "Connection must be open." @type (object, string);
#L0a931c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9322.   throw v4;
#L0a9324.   v4:= v8.[|org:apache:http:impl:conn:DefaultClientConnectionOperator.schemeRegistry|]   @type object;
#L0a9328.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v10) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a932e.   v5:= temp  @type object;
#L0a9330.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v4, v5) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a9336.   v2:= temp  @type object;
#L0a9338.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getSocketFactory|](v2) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getSocketFactory:()Lorg/apache/http/conn/scheme/SocketFactory;|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a933e.   v4:= temp  @type object;
#L0a9340.   v4:= instanceof @varname v4 @type [|org:apache:http:conn:scheme:LayeredSocketFactory|];
#L0a9344.   if v4 != 0 then goto L0a938e;
#L0a9348.   v4:= new [|java:lang:IllegalArgumentException|];
#L0a934c.   v5:= new [|java:lang:StringBuilder|];
#L0a9350.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9356.   v6:= "Target scheme (" @type (object, string);
#L0a935a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9360.   v5:= temp  @type object;
#L0a9362.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getName|](v2) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a9368.   v6:= temp  @type object;
#L0a936a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9370.   v5:= temp  @type object;
#L0a9372.   v6:= ") must have layered socket factory." @type (object, string);
#L0a9376.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a937c.   v5:= temp  @type object;
#L0a937e.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9384.   v5:= temp  @type object;
#L0a9386.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a938c.   throw v4;
#L0a938e.   call temp:=  [|org:apache:http:conn:scheme:Scheme.getSocketFactory|](v2) @signature [|Lorg/apache/http/conn/scheme/Scheme;.getSocketFactory:()Lorg/apache/http/conn/scheme/SocketFactory;|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a9394.   v1:= temp  @type object;
#L0a9396.   v1:= ([|org:apache:http:conn:scheme:LayeredSocketFactory|])v1;
#L0a939a.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v9) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a93a0.   v4:= temp  @type object;
#L0a93a2.   call temp:=  [|org:apache:http:HttpHost.getHostName|](v10) @signature [|Lorg/apache/http/HttpHost;.getHostName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a93a8.   v5:= temp  @type object;
#L0a93aa.   call temp:=  [|org:apache:http:HttpHost.getPort|](v10) @signature [|Lorg/apache/http/HttpHost;.getPort:()I|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a93b0.   v6:= temp;
#L0a93b2.   call temp:=  [|org:apache:http:conn:scheme:Scheme.resolvePort|](v2, v6) @signature [|Lorg/apache/http/conn/scheme/Scheme;.resolvePort:(I)I|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a93b8.   v6:= temp;
#L0a93ba.   v7:= 1  @length 4;
#L0a93bc.   call temp:=  [|org:apache:http:conn:scheme:LayeredSocketFactory.createSocket|](v1, v4, v5, v6, v7) @signature [|Lorg/apache/http/conn/scheme/LayeredSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:scheme:LayeredSocketFactory|] @type interface;
#L0a93c2.   v3:= temp  @type object;
#L0a93c4.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnectionOperator.prepareSocket|](v8, v3, v11, v12) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.prepareSocket:(Ljava/net/Socket;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @type virtual;
#L0a93ca.   call temp:=  [|org:apache:http:conn:scheme:LayeredSocketFactory.isSecure|](v1, v3) @signature [|Lorg/apache/http/conn/scheme/LayeredSocketFactory;.isSecure:(Ljava/net/Socket;)Z|] @classDescriptor [|org:apache:http:conn:scheme:LayeredSocketFactory|] @type interface;
#L0a93d0.   v4:= temp;
#L0a93d2.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.update|](v9, v3, v10, v4, v12) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0a93d8.   return @void ;
#L0a93da.   v0:= Exception  @type object;
#L0a93dc.   v4:= new [|org:apache:http:conn:HttpHostConnectException|];
#L0a93e0.   call temp:=  [|org:apache:http:conn:HttpHostConnectException.<init>|](v4, v10, v0) @signature [|Lorg/apache/http/conn/HttpHostConnectException;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/ConnectException;)V|] @classDescriptor [|org:apache:http:conn:HttpHostConnectException|] @type direct;
#L0a93e6.   throw v4;
  catch  [|java:net:ConnectException|] @[L0a939a..L0a93c2] goto L0a93da;

   }
record [|org:apache:http:impl:conn:DefaultHttpRoutePlanner|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:routing:HttpRoutePlanner|] {
      [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:DefaultHttpRoutePlanner.schemeRegistry|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultHttpRoutePlanner.<init>|] ([|org:apache:http:impl:conn:DefaultHttpRoutePlanner|] v2 @type (this), [|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (object)) @owner [|org:apache:http:impl:conn:DefaultHttpRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/DefaultHttpRoutePlanner;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a9408.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a940e.   if v3 != 0 then goto L0a9422;
#L0a9412.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a9416.   v1:= "SchemeRegistry must not be null." @type (object, string);
#L0a941a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9420.   throw v0;
#L0a9422.   v2.[|org:apache:http:impl:conn:DefaultHttpRoutePlanner.schemeRegistry|]  := v3 @type object;
#L0a9426.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:DefaultHttpRoutePlanner.determineRoute|] ([|org:apache:http:impl:conn:DefaultHttpRoutePlanner|] v8 @type (this), [|org:apache:http:HttpHost|] v9 @type (object), [|org:apache:http:HttpRequest|] v10 @type (object), [|org:apache:http:protocol:HttpContext|] v11 @type (object)) @owner [|org:apache:http:impl:conn:DefaultHttpRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/DefaultHttpRoutePlanner;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a9438.   if v10 != 0 then goto L0a944c;
#L0a943c.   v6:= new [|java:lang:IllegalStateException|];
#L0a9440.   v7:= "Request must not be null." @type (object, string);
#L0a9444.   call temp:=  [|java:lang:IllegalStateException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a944a.   throw v6;
#L0a944c.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a9452.   v6:= temp  @type object;
#L0a9454.   call temp:=  [|org:apache:http:conn:params:ConnRouteParams.getForcedRoute|](v6) @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getForcedRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:params:ConnRouteParams|] @type static;
#L0a945a.   v2:= temp  @type object;
#L0a945c.   if v2 == 0 then goto L0a9464;
#L0a9460.   v3:= v2  @type object;
#L0a9462.   return v3  @type object;
#L0a9464.   if v9 != 0 then goto L0a9478;
#L0a9468.   v6:= new [|java:lang:IllegalStateException|];
#L0a946c.   v7:= "Target host must not be null." @type (object, string);
#L0a9470.   call temp:=  [|java:lang:IllegalStateException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0a9476.   throw v6;
#L0a9478.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a947e.   v6:= temp  @type object;
#L0a9480.   call temp:=  [|org:apache:http:conn:params:ConnRouteParams.getLocalAddress|](v6) @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getLocalAddress:(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:params:ConnRouteParams|] @type static;
#L0a9486.   v0:= temp  @type object;
#L0a9488.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0a948e.   v6:= temp  @type object;
#L0a9490.   call temp:=  [|org:apache:http:conn:params:ConnRouteParams.getDefaultProxy|](v6) @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getDefaultProxy:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:conn:params:ConnRouteParams|] @type static;
#L0a9496.   v1:= temp  @type object;
#L0a9498.   v6:= v8.[|org:apache:http:impl:conn:DefaultHttpRoutePlanner.schemeRegistry|]   @type object;
#L0a949c.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v9) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0a94a2.   v7:= temp  @type object;
#L0a94a4.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v6, v7) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0a94aa.   v4:= temp  @type object;
#L0a94ac.   call temp:=  [|org:apache:http:conn:scheme:Scheme.isLayered|](v4) @signature [|Lorg/apache/http/conn/scheme/Scheme;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0a94b2.   v5:= temp;
#L0a94b4.   if v1 != 0 then goto L0a94c6;
#L0a94b8.   v2:= new [|org:apache:http:conn:routing:HttpRoute|];
#L0a94bc.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v2, v9, v0, v5) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Z)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L0a94c2.   v3:= v2  @type object;
#L0a94c4.   goto L0a9462;
#L0a94c6.   v2:= new [|org:apache:http:conn:routing:HttpRoute|];
#L0a94ca.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v2, v9, v0, v1, v5) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;Z)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L0a94d0.   goto L0a94c2;

   }
record [|org:apache:http:io:HttpMessageParser|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:HttpMessage|] [|org:apache:http:io:HttpMessageParser.parse|] () @owner [|org:apache:http:io:HttpMessageParser|] @signature [|Lorg/apache/http/io/HttpMessageParser;.parse:()Lorg/apache/http/HttpMessage;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:io:AbstractMessageParser|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:io:HttpMessageParser|] {
      [|org:apache:http:message:LineParser|] [|org:apache:http:impl:io:AbstractMessageParser.lineParser|]    @AccessFlag PROTECTED_FINAL;
      [|int|] [|org:apache:http:impl:io:AbstractMessageParser.maxHeaderCount|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:io:AbstractMessageParser.maxLineLen|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:io:AbstractMessageParser.sessionBuffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:io:AbstractMessageParser.<init>|] ([|org:apache:http:impl:io:AbstractMessageParser|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:message:LineParser|] v4 @type (object), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:io:AbstractMessageParser|] @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a94e4.   v1:= -1  @length 4;
#L0a94e6.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a94ec.   if v3 != 0 then goto L0a9500;
#L0a94f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a94f4.   v1:= "Session input buffer may not be null" @type (object, string);
#L0a94f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a94fe.   throw v0;
#L0a9500.   if v5 != 0 then goto L0a9514;
#L0a9504.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a9508.   v1:= "HTTP parameters may not be null" @type (object, string);
#L0a950c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9512.   throw v0;
#L0a9514.   v2.[|org:apache:http:impl:io:AbstractMessageParser.sessionBuffer|]  := v3 @type object;
#L0a9518.   v0:= "http.connection.max-header-count" @type (object, string);
#L0a951c.   call temp:=  [|org:apache:http:params:HttpParams.getIntParameter|](v5, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a9522.   v0:= temp;
#L0a9524.   v2.[|org:apache:http:impl:io:AbstractMessageParser.maxHeaderCount|]  := v0;
#L0a9528.   v0:= "http.connection.max-line-length" @type (object, string);
#L0a952c.   call temp:=  [|org:apache:http:params:HttpParams.getIntParameter|](v5, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a9532.   v0:= temp;
#L0a9534.   v2.[|org:apache:http:impl:io:AbstractMessageParser.maxLineLen|]  := v0;
#L0a9538.   if v4 == 0 then goto L0a9542;
#L0a953c.   v2.[|org:apache:http:impl:io:AbstractMessageParser.lineParser|]  := v4 @type object;
#L0a9540.   return @void ;
#L0a9542.   v4:= @@[|org:apache:http:message:BasicLineParser.DEFAULT|]   @type object;
#L0a9546.   goto L0a953c;

   }
    procedure [|org:apache:http:Header|][] [|org:apache:http:impl:io:AbstractMessageParser.parseHeaders|] ([|org:apache:http:io:SessionInputBuffer|] v11 @type (object), [|int|] v12, [|int|] v13, [|org:apache:http:message:LineParser|] v14 @type (object)) @owner [|org:apache:http:impl:io:AbstractMessageParser|] @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.parseHeaders:(Lorg/apache/http/io/SessionInputBuffer;IILorg/apache/http/message/LineParser;)[Lorg/apache/http/Header;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0a9558.   if v11 != 0 then goto L0a956c;
#L0a955c.   v9:= new [|java:lang:IllegalArgumentException|];
#L0a9560.   v10:= "Session input buffer may not be null" @type (object, string);
#L0a9564.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v9, v10) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a956a.   throw v9;
#L0a956c.   if v14 != 0 then goto L0a9574;
#L0a9570.   v14:= @@[|org:apache:http:message:BasicLineParser.DEFAULT|]   @type object;
#L0a9574.   v4:= new [|java:util:ArrayList|];
#L0a9578.   call temp:=  [|java:util:ArrayList.<init>|](v4) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0a957e.   v2:= 0  @length 4;
#L0a9580.   v8:= 0  @length 4;
#L0a9582.   if v2 != 0 then goto L0a95e8;
#L0a9586.   v2:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a958a.   v9:= 64  @length 16;
#L0a958e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v2, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a9594.   call temp:=  [|org:apache:http:io:SessionInputBuffer.readLine|](v11, v2) @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a959a.   v7:= temp;
#L0a959c.   v9:= -1  @length 4;
#L0a959e.   if v7 == v9 then goto L0a95b0;
#L0a95a2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a95a8.   v9:= temp;
#L0a95aa.   v10:= 1  @length 4;
#L0a95ac.   if v9 >= v10 then goto L0a95f0;
#L0a95b0.   call temp:=  [|java:util:ArrayList.size|](v4) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a95b6.   v9:= temp;
#L0a95b8.   v5:= new [|org:apache:http:Header|][v9];
#L0a95bc.   v6:= 0  @length 4;
#L0a95be.   call temp:=  [|java:util:ArrayList.size|](v4) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a95c4.   v9:= temp;
#L0a95c6.   if v6 >= v9 then goto L0a96d0;
#L0a95ca.   call temp:=  [|java:util:ArrayList.get|](v4, v6) @signature [|Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a95d0.   v0:= temp  @type object;
#L0a95d2.   v0:= ([|org:apache:http:util:CharArrayBuffer|])v0;
#L0a95d6.   call temp:=  [|org:apache:http:message:LineParser.parseHeader|](v14, v0) @signature [|Lorg/apache/http/message/LineParser;.parseHeader:(Lorg/apache/http/util/CharArrayBuffer;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:message:LineParser|] @type interface;
#L0a95dc.   v9:= temp  @type object;
#L0a95de.   v5[v6]:= v9  @type object;
#L0a95e2.   v6:= v6 + 1;
#L0a95e6.   goto L0a95be;
#L0a95e8.   call temp:=  [|org:apache:http:util:CharArrayBuffer.clear|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.clear:()V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a95ee.   goto L0a9594;
#L0a95f0.   v9:= 0  @length 4;
#L0a95f2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a95f8.   v9:= temp;
#L0a95fa.   v10:= 32  @length 16;
#L0a95fe.   if v9 == v10 then goto L0a9614;
#L0a9602.   v9:= 0  @length 4;
#L0a9604.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a960a.   v9:= temp;
#L0a960c.   v10:= 9  @length 16;
#L0a9610.   if v9 != v10 then goto L0a96ae;
#L0a9614.   if v8 == 0 then goto L0a96ae;
#L0a9618.   v6:= 0  @length 4;
#L0a961a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9620.   v9:= temp;
#L0a9622.   if v6 >= v9 then goto L0a963e;
#L0a9626.   call temp:=  [|org:apache:http:util:CharArrayBuffer.charAt|](v2, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.charAt:(I)C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a962c.   v1:= temp;
#L0a962e.   v9:= 32  @length 16;
#L0a9632.   if v1 == v9 then goto L0a966e;
#L0a9636.   v9:= 9  @length 16;
#L0a963a.   if v1 == v9 then goto L0a966e;
#L0a963e.   if v13 <= 0 then goto L0a9674;
#L0a9642.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v8) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9648.   v9:= temp;
#L0a964a.   v9:= v9 + 1;
#L0a964e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9654.   v10:= temp;
#L0a9656.   v9:= v9 + v10  @type int;
#L0a9658.   v9:= v9 - v6  @type int;
#L0a965a.   if v9 <= v13 then goto L0a9674;
#L0a965e.   v9:= new [|java:io:IOException|];
#L0a9662.   v10:= "Maximum line length limit exceeded" @type (object, string);
#L0a9666.   call temp:=  [|java:io:IOException.<init>|](v9, v10) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0a966c.   throw v9;
#L0a966e.   v6:= v6 + 1;
#L0a9672.   goto L0a961a;
#L0a9674.   v9:= 32  @length 16;
#L0a9678.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v8, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(C)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a967e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v2) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9684.   v9:= temp;
#L0a9686.   v9:= v9 - v6  @type int;
#L0a9688.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v8, v2, v6, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Lorg/apache/http/util/CharArrayBuffer;II)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a968e.   if v12 <= 0 then goto L0a9582;
#L0a9692.   call temp:=  [|java:util:ArrayList.size|](v4) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a9698.   v9:= temp;
#L0a969a.   if v9 < v12 then goto L0a9582;
#L0a969e.   v9:= new [|java:io:IOException|];
#L0a96a2.   v10:= "Maximum header count exceeded" @type (object, string);
#L0a96a6.   call temp:=  [|java:io:IOException.<init>|](v9, v10) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0a96ac.   throw v9;
#L0a96ae.   call temp:=  [|java:util:ArrayList.add|](v4, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0a96b4.   v8:= v2  @type object;
#L0a96b6.   v2:= 0  @length 4;
#L0a96b8.   goto L0a968e;
#L0a96ba.   v3:= Exception  @type object;
#L0a96bc.   v9:= new [|org:apache:http:ProtocolException|];
#L0a96c0.   call temp:=  [|org:apache:http:ParseException.getMessage|](v3) @signature [|Lorg/apache/http/ParseException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:ParseException|] @type virtual;
#L0a96c6.   v10:= temp  @type object;
#L0a96c8.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v9, v10) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a96ce.   throw v9;
#L0a96d0.   return v5  @type object;
  catch  [|org:apache:http:ParseException|] @[L0a95d6..L0a95e2] goto L0a96ba;

   }
    procedure [|org:apache:http:HttpMessage|] [|org:apache:http:impl:io:AbstractMessageParser.parse|] ([|org:apache:http:impl:io:AbstractMessageParser|] v7 @type (this)) @owner [|org:apache:http:impl:io:AbstractMessageParser|] @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.parse:()Lorg/apache/http/HttpMessage;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a96f4.   v1:= 0  @length 4;
#L0a96f6.   v3:= v7.[|org:apache:http:impl:io:AbstractMessageParser.sessionBuffer|]   @type object;
#L0a96fa.   call temp:=  [|org:apache:http:impl:io:AbstractMessageParser.parseHead|](v7, v3) @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.parseHead:(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;|] @classDescriptor [|org:apache:http:impl:io:AbstractMessageParser|] @type virtual;
#L0a9700.   v1:= temp  @type object;
#L0a9702.   v3:= v7.[|org:apache:http:impl:io:AbstractMessageParser.sessionBuffer|]   @type object;
#L0a9706.   v4:= v7.[|org:apache:http:impl:io:AbstractMessageParser.maxHeaderCount|] ;
#L0a970a.   v5:= v7.[|org:apache:http:impl:io:AbstractMessageParser.maxLineLen|] ;
#L0a970e.   v6:= v7.[|org:apache:http:impl:io:AbstractMessageParser.lineParser|]   @type object;
#L0a9712.   call temp:=  [|org:apache:http:impl:io:AbstractMessageParser.parseHeaders|](v3, v4, v5, v6) @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.parseHeaders:(Lorg/apache/http/io/SessionInputBuffer;IILorg/apache/http/message/LineParser;)[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:impl:io:AbstractMessageParser|] @type static;
#L0a9718.   v0:= temp  @type object;
#L0a971a.   call temp:=  [|org:apache:http:HttpMessage.setHeaders|](v1, v0) @signature [|Lorg/apache/http/HttpMessage;.setHeaders:([Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0a9720.   return v1  @type object;
#L0a9722.   v2:= Exception  @type object;
#L0a9724.   v3:= new [|org:apache:http:ProtocolException|];
#L0a9728.   call temp:=  [|org:apache:http:ParseException.getMessage|](v2) @signature [|Lorg/apache/http/ParseException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:ParseException|] @type virtual;
#L0a972e.   v4:= temp  @type object;
#L0a9730.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v3, v4, v2) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a9736.   throw v3;
  catch  [|org:apache:http:ParseException|] @[L0a96f6..L0a9700] goto L0a9722;

   }
    procedure [|org:apache:http:HttpMessage|] [|org:apache:http:impl:io:AbstractMessageParser.parseHead|] ([|org:apache:http:io:SessionInputBuffer|] v0 @type (object)) @owner [|org:apache:http:impl:io:AbstractMessageParser|] @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.parseHead:(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:conn:DefaultResponseParser|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:io:AbstractMessageParser|] {
      [|org:apache:http:util:CharArrayBuffer|] [|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:conn:DefaultResponseParser.maxGarbageLines|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:HttpResponseFactory|] [|org:apache:http:impl:conn:DefaultResponseParser.responseFactory|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:DefaultResponseParser.<init>|] ([|org:apache:http:impl:conn:DefaultResponseParser|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:message:LineParser|] v4 @type (object), [|org:apache:http:HttpResponseFactory|] v5 @type (object), [|org:apache:http:params:HttpParams|] v6 @type (object)) @owner [|org:apache:http:impl:conn:DefaultResponseParser|] @signature [|Lorg/apache/http/impl/conn/DefaultResponseParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/HttpResponseFactory;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a9758.   call temp:=  [|org:apache:http:impl:io:AbstractMessageParser.<init>|](v2, v3, v4, v6) @signature [|Lorg/apache/http/impl/io/AbstractMessageParser;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/message/LineParser;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:io:AbstractMessageParser|] @type direct;
#L0a975e.   if v5 != 0 then goto L0a9772;
#L0a9762.   v0:= new [|java:lang:IllegalArgumentException|];
#L0a9766.   v1:= "Response factory may not be null" @type (object, string);
#L0a976a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0a9770.   throw v0;
#L0a9772.   v2.[|org:apache:http:impl:conn:DefaultResponseParser.responseFactory|]  := v5 @type object;
#L0a9776.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0a977a.   v1:= 128  @length 16;
#L0a977e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0a9784.   v2.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]  := v0 @type object;
#L0a9788.   v0:= "http.connection.max-status-line-garbage" @type (object, string);
#L0a978c.    v1:= nan;
#L0a9792.   call temp:=  [|org:apache:http:params:HttpParams.getIntParameter|](v6, v0, v1) @signature [|Lorg/apache/http/params/HttpParams;.getIntParameter:(Ljava/lang/String;I)I|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0a9798.   v0:= temp;
#L0a979a.   v2.[|org:apache:http:impl:conn:DefaultResponseParser.maxGarbageLines|]  := v0;
#L0a979e.   return @void ;

   }
    procedure [|org:apache:http:HttpMessage|] [|org:apache:http:impl:conn:DefaultResponseParser.parseHead|] ([|org:apache:http:impl:conn:DefaultResponseParser|] v7 @type (this), [|org:apache:http:io:SessionInputBuffer|] v8 @type (object)) @owner [|org:apache:http:impl:conn:DefaultResponseParser|] @signature [|Lorg/apache/http/impl/conn/DefaultResponseParser;.parseHead:(Lorg/apache/http/io/SessionInputBuffer;)Lorg/apache/http/HttpMessage;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0a97b0.   v6:= -1  @length 4;
#L0a97b2.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]   @type object;
#L0a97b6.   call temp:=  [|org:apache:http:util:CharArrayBuffer.clear|](v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.clear:()V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a97bc.   v0:= 0  @length 4;
#L0a97be.   v1:= 0  @length 4;
#L0a97c0.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]   @type object;
#L0a97c4.   call temp:=  [|org:apache:http:io:SessionInputBuffer.readLine|](v8, v4) @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a97ca.   v2:= temp;
#L0a97cc.   if v2 != v6 then goto L0a97e4;
#L0a97d0.   if v0 != 0 then goto L0a97e4;
#L0a97d4.   v4:= new [|org:apache:http:NoHttpResponseException|];
#L0a97d8.   v5:= "The target server failed to respond" @type (object, string);
#L0a97dc.   call temp:=  [|org:apache:http:NoHttpResponseException.<init>|](v4, v5) @signature [|Lorg/apache/http/NoHttpResponseException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:NoHttpResponseException|] @type direct;
#L0a97e2.   throw v4;
#L0a97e4.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0a97e8.   v4:= 0  @length 4;
#L0a97ea.   v5:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]   @type object;
#L0a97ee.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a97f4.   v5:= temp;
#L0a97f6.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v4, v5) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0a97fc.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineParser|]   @type object;
#L0a9800.   v5:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]   @type object;
#L0a9804.   call temp:=  [|org:apache:http:message:LineParser.hasProtocolVersion|](v4, v5, v1) @signature [|Lorg/apache/http/message/LineParser;.hasProtocolVersion:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Z|] @classDescriptor [|org:apache:http:message:LineParser|] @type interface;
#L0a980a.   v4:= temp;
#L0a980c.   if v4 == 0 then goto L0a9830;
#L0a9810.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineParser|]   @type object;
#L0a9814.   v5:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.lineBuf|]   @type object;
#L0a9818.   call temp:=  [|org:apache:http:message:LineParser.parseStatusLine|](v4, v5, v1) @signature [|Lorg/apache/http/message/LineParser;.parseStatusLine:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/StatusLine;|] @classDescriptor [|org:apache:http:message:LineParser|] @type interface;
#L0a981e.   v3:= temp  @type object;
#L0a9820.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.responseFactory|]   @type object;
#L0a9824.   v5:= 0  @length 4;
#L0a9826.   call temp:=  [|org:apache:http:HttpResponseFactory.newHttpResponse|](v4, v3, v5) @signature [|Lorg/apache/http/HttpResponseFactory;.newHttpResponse:(Lorg/apache/http/StatusLine;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;|] @classDescriptor [|org:apache:http:HttpResponseFactory|] @type interface;
#L0a982c.   v4:= temp  @type object;
#L0a982e.   return v4  @type object;
#L0a9830.   if v2 == v6 then goto L0a983c;
#L0a9834.   v4:= v7.[|org:apache:http:impl:conn:DefaultResponseParser.maxGarbageLines|] ;
#L0a9838.   if v0 < v4 then goto L0a984c;
#L0a983c.   v4:= new [|org:apache:http:ProtocolException|];
#L0a9840.   v5:= "The server failed to respond with a valid HTTP response" @type (object, string);
#L0a9844.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v4, v5) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0a984a.   throw v4;
#L0a984c.   v0:= v0 + 1;
#L0a9850.   goto L0a97c0;

   }
record [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|]  @type class @AccessFlag   {
      [|long|] [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeAdded|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeExpires|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.<init>|] ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] v2 @type (this), [|long|] v3, [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.<init>:(JJLjava/util/concurrent/TimeUnit;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0a9864.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a986a.   v2.[|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeAdded|]  := v3 @wide;
#L0a986e.   v0:= 0  @length wide16;
#L0a9872.   v0:= cmp(v5,v0);
#L0a9876.   if v0 <= 0 then goto L0a988a;
#L0a987a.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0a9880.   v0:= temp  @type wide;
#L0a9882.   v0:= v0 + v3  @type long;
#L0a9884.   v2.[|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeExpires|]  := v0 @wide;
#L0a9888.   return @void ;
#L0a988a.   v0:= nanL  @length wide;
#L0a9894.   v2.[|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeExpires|]  := v0 @wide;
#L0a9898.   goto L0a9888;

   }
    procedure [|long|] [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$000|] ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] v2 @type (object)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$000:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
        v1;
      
#L0a98ac.   v0:= v2.[|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeExpires|]   @wide;
#L0a98b0.   return v0  @type wide;

   }
    procedure [|long|] [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$100|] ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] v2 @type (object)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$100:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
        v1;
      
#L0a98c4.   v0:= v2.[|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.timeAdded|]   @wide;
#L0a98c8.   return v0  @type wide;

   }
record [|org:apache:http:impl:conn:IdleConnectionHandler|]  @type class @AccessFlag PUBLIC  {
      [|java:util:Map|] [|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:IdleConnectionHandler.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler.<init>|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v1 @type (this)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0a98dc.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a98e2.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0a98e8.   v0:= temp  @type object;
#L0a98ea.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0a98f0.   v0:= temp  @type object;
#L0a98f2.   v1.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]  := v0 @type object;
#L0a98f6.   v0:= new [|java:util:HashMap|];
#L0a98fa.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0a9900.   v1.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]  := v0 @type object;
#L0a9904.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler.add|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v8 @type (this), [|org:apache:http:HttpConnection|] v9 @type (object), [|long|] v10, [|java:util:concurrent:TimeUnit|] v12 @type (object)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.add:(Lorg/apache/http/HttpConnection;JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0a9918.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0a991e.   v0:= temp  @type wide;
#L0a9920.   call temp:=  [|java:lang:Long.valueOf|](v0, v1) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L0a9926.   v6:= temp  @type object;
#L0a9928.   v0:= v8.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a992c.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v0) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9932.   v0:= temp;
#L0a9934.   if v0 == 0 then goto L0a9968;
#L0a9938.   v0:= v8.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a993c.   v1:= new [|java:lang:StringBuilder|];
#L0a9940.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9946.   v2:= "Adding connection at: " @type (object, string);
#L0a994a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9950.   v1:= temp  @type object;
#L0a9952.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9958.   v1:= temp  @type object;
#L0a995a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9960.   v1:= temp  @type object;
#L0a9962.   call temp:=  [|org:apache:commons:logging:Log.debug|](v0, v1) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9968.   v7:= v8.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a996c.   v0:= new [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|];
#L0a9970.   call temp:=  [|java:lang:Long.longValue|](v6) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L0a9976.   v1:= temp  @type wide;
#L0a9978.   v3:= v10  @type wide;
#L0a997a.   v5:= v12  @type object;
#L0a997c.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.<init>:(JJLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @type direct;
#L0a9982.   call temp:=  [|java:util:Map.put|](v7, v9, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9988.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler.closeExpiredConnections|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v10 @type (this)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.closeExpiredConnections:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0a999c.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0a99a2.   v3:= temp  @type wide;
#L0a99a4.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a99a8.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v6) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a99ae.   v6:= temp;
#L0a99b0.   if v6 == 0 then goto L0a99e4;
#L0a99b4.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a99b8.   v7:= new [|java:lang:StringBuilder|];
#L0a99bc.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a99c2.   v8:= "Checking for expired connections, now: " @type (object, string);
#L0a99c6.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a99cc.   v7:= temp  @type object;
#L0a99ce.   call temp:=  [|java:lang:StringBuilder.append|](v7, v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a99d4.   v7:= temp  @type object;
#L0a99d6.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a99dc.   v7:= temp  @type object;
#L0a99de.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a99e4.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a99e8.   call temp:=  [|java:util:Map.keySet|](v6) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a99ee.   v6:= temp  @type object;
#L0a99f0.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0a99f6.   v1:= temp  @type object;
#L0a99f8.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a99fe.   v6:= temp;
#L0a9a00.   if v6 == 0 then goto L0a9a98;
#L0a9a04.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a9a0a.   v0:= temp  @type object;
#L0a9a0c.   v0:= ([|org:apache:http:HttpConnection|])v0;
#L0a9a10.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a9a14.   call temp:=  [|java:util:Map.get|](v6, v0) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9a1a.   v5:= temp  @type object;
#L0a9a1c.   v5:= ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|])v5;
#L0a9a20.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$000|](v5) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$000:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @type static;
#L0a9a26.   v6:= temp  @type wide;
#L0a9a28.   v6:= cmp(v6,v3);
#L0a9a2c.   if v6 > 0 then goto L0a99f8;
#L0a9a30.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9a34.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v6) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9a3a.   v6:= temp;
#L0a9a3c.   if v6 == 0 then goto L0a9a78;
#L0a9a40.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9a44.   v7:= new [|java:lang:StringBuilder|];
#L0a9a48.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9a4e.   v8:= "Closing connection, expired @: " @type (object, string);
#L0a9a52.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9a58.   v7:= temp  @type object;
#L0a9a5a.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$000|](v5) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$000:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @type static;
#L0a9a60.   v8:= temp  @type wide;
#L0a9a62.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9a68.   v7:= temp  @type object;
#L0a9a6a.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9a70.   v7:= temp  @type object;
#L0a9a72.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9a78.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a9a7e.   call temp:=  [|org:apache:http:HttpConnection.close|](v0) @signature [|Lorg/apache/http/HttpConnection;.close:()V|] @classDescriptor [|org:apache:http:HttpConnection|] @type interface;
#L0a9a84.   goto L0a99f8;
#L0a9a86.   v2:= Exception  @type object;
#L0a9a88.   v6:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9a8c.   v7:= "I/O error closing connection" @type (object, string);
#L0a9a90.   call temp:=  [|org:apache:commons:logging:Log.debug|](v6, v7, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9a96.   goto L0a99f8;
#L0a9a98.   return @void ;
  catch  [|java:io:IOException|] @[L0a9a7e..L0a9a84] goto L0a9a86;

   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler.closeIdleConnections|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v10 @type (this), [|long|] v11) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.closeIdleConnections:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0a9abc.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0a9ac2.   v7:= temp  @type wide;
#L0a9ac4.   v4:= v7 - v11  @type long;
#L0a9ac8.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9acc.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9ad2.   v7:= temp;
#L0a9ad4.   if v7 == 0 then goto L0a9b08;
#L0a9ad8.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9adc.   v8:= new [|java:lang:StringBuilder|];
#L0a9ae0.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9ae6.   v9:= "Checking for connections, idleTimeout: " @type (object, string);
#L0a9aea.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9af0.   v8:= temp  @type object;
#L0a9af2.   call temp:=  [|java:lang:StringBuilder.append|](v8, v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9af8.   v8:= temp  @type object;
#L0a9afa.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9b00.   v8:= temp  @type object;
#L0a9b02.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9b08.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a9b0c.   call temp:=  [|java:util:Map.keySet|](v7) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9b12.   v7:= temp  @type object;
#L0a9b14.   call temp:=  [|java:util:Set.iterator|](v7) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0a9b1a.   v1:= temp  @type object;
#L0a9b1c.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a9b22.   v7:= temp;
#L0a9b24.   if v7 == 0 then goto L0a9bc4;
#L0a9b28.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a9b2e.   v0:= temp  @type object;
#L0a9b30.   v0:= ([|org:apache:http:HttpConnection|])v0;
#L0a9b34.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a9b38.   call temp:=  [|java:util:Map.get|](v7, v0) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9b3e.   v6:= temp  @type object;
#L0a9b40.   v6:= ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|])v6;
#L0a9b44.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$100|](v6) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$100:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @type static;
#L0a9b4a.   v7:= temp  @type wide;
#L0a9b4c.   call temp:=  [|java:lang:Long.valueOf|](v7, v8) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L0a9b52.   v2:= temp  @type object;
#L0a9b54.   call temp:=  [|java:lang:Long.longValue|](v2) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L0a9b5a.   v7:= temp  @type wide;
#L0a9b5c.   v7:= cmp(v7,v4);
#L0a9b60.   if v7 > 0 then goto L0a9b1c;
#L0a9b64.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9b68.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9b6e.   v7:= temp;
#L0a9b70.   if v7 == 0 then goto L0a9ba4;
#L0a9b74.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9b78.   v8:= new [|java:lang:StringBuilder|];
#L0a9b7c.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9b82.   v9:= "Closing connection, connection time: " @type (object, string);
#L0a9b86.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9b8c.   v8:= temp  @type object;
#L0a9b8e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9b94.   v8:= temp  @type object;
#L0a9b96.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9b9c.   v8:= temp  @type object;
#L0a9b9e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9ba4.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0a9baa.   call temp:=  [|org:apache:http:HttpConnection.close|](v0) @signature [|Lorg/apache/http/HttpConnection;.close:()V|] @classDescriptor [|org:apache:http:HttpConnection|] @type interface;
#L0a9bb0.   goto L0a9b1c;
#L0a9bb2.   v3:= Exception  @type object;
#L0a9bb4.   v7:= v10.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9bb8.   v8:= "I/O error closing connection" @type (object, string);
#L0a9bbc.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9bc2.   goto L0a9b1c;
#L0a9bc4.   return @void ;
  catch  [|java:io:IOException|] @[L0a9baa..L0a9bb0] goto L0a9bb2;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:IdleConnectionHandler.remove|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v6 @type (this), [|org:apache:http:HttpConnection|] v7 @type (object)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.remove:(Lorg/apache/http/HttpConnection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a9be8.   v1:= 1  @length 4;
#L0a9bea.   v2:= v6.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a9bee.   call temp:=  [|java:util:Map.remove|](v2, v7) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9bf4.   v0:= temp  @type object;
#L0a9bf6.   v0:= ([|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|])v0;
#L0a9bfa.   if v0 != 0 then goto L0a9c0e;
#L0a9bfe.   v2:= v6.[|org:apache:http:impl:conn:IdleConnectionHandler.log|]   @type object;
#L0a9c02.   v3:= "Removing a connection that never existed!" @type (object, string);
#L0a9c06.   call temp:=  [|org:apache:commons:logging:Log.warn|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0a9c0c.   return v1;
#L0a9c0e.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0a9c14.   v2:= temp  @type wide;
#L0a9c16.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues.access$000|](v0) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;.access$000:(Lorg/apache/http/impl/conn/IdleConnectionHandler$TimeValues;)J|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler$TimeValues|] @type static;
#L0a9c1c.   v4:= temp  @type wide;
#L0a9c1e.   v2:= cmp(v2,v4);
#L0a9c22.   if v2 <= 0 then goto L0a9c0c;
#L0a9c26.   v1:= 0  @length 4;
#L0a9c28.   goto L0a9c0c;

   }
    procedure [|void|] [|org:apache:http:impl:conn:IdleConnectionHandler.removeAll|] ([|org:apache:http:impl:conn:IdleConnectionHandler|] v1 @type (this)) @owner [|org:apache:http:impl:conn:IdleConnectionHandler|] @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.removeAll:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9c3c.   v0:= v1.[|org:apache:http:impl:conn:IdleConnectionHandler.connectionToTimes|]   @type object;
#L0a9c40.   call temp:=  [|java:util:Map.clear|](v0) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L0a9c46.   return @void ;

   }
record [|org:apache:http:io:SessionInputBuffer|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:io:SessionInputBuffer.getMetrics|] () @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|org:apache:http:io:SessionInputBuffer.isDataAvailable|] ([|int|] v0) @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.isDataAvailable:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:io:SessionInputBuffer.read|] () @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:io:SessionInputBuffer.read|] ([|byte|][] v0) @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:([B)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:io:SessionInputBuffer.read|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:([BII)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|org:apache:http:io:SessionInputBuffer.readLine|] ([|org:apache:http:util:CharArrayBuffer|] v0 @type (object)) @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|org:apache:http:io:SessionInputBuffer.readLine|] () @owner [|org:apache:http:io:SessionInputBuffer|] @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:conn:LoggingSessionInputBuffer|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:io:SessionInputBuffer|] {
      [|org:apache:http:io:SessionInputBuffer|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:conn:Wire|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.<init>|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v0 @type (this), [|org:apache:http:io:SessionInputBuffer|] v1 @type (object), [|org:apache:http:impl:conn:Wire|] v2 @type (object)) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.<init>:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/impl/conn/Wire;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a9c58.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a9c5e.   v0.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]  := v1 @type object;
#L0a9c62.   v0.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]  := v2 @type object;
#L0a9c66.   return @void ;

   }
    procedure [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.getMetrics|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v1 @type (this)) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9c78.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9c7c.   call temp:=  [|org:apache:http:io:SessionInputBuffer.getMetrics|](v0) @signature [|Lorg/apache/http/io/SessionInputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9c82.   v0:= temp  @type object;
#L0a9c84.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.isDataAvailable|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.isDataAvailable:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9c98.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9c9c.   call temp:=  [|org:apache:http:io:SessionInputBuffer.isDataAvailable|](v0, v2) @signature [|Lorg/apache/http/io/SessionInputBuffer;.isDataAvailable:(I)Z|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9ca2.   v0:= temp;
#L0a9ca4.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.read|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v2 @type (this)) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a9cb8.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9cbc.   call temp:=  [|org:apache:http:io:SessionInputBuffer.read|](v1) @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:()I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9cc2.   v0:= temp;
#L0a9cc4.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9cc8.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v1) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9cce.   v1:= temp;
#L0a9cd0.   if v1 == 0 then goto L0a9ce2;
#L0a9cd4.   if v0 <= 0 then goto L0a9ce2;
#L0a9cd8.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9cdc.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v1, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.input:(I)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9ce2.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.read|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v3 @type (this), [|byte|][] v4) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.read:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a9cf4.   v1:= v3.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9cf8.   call temp:=  [|org:apache:http:io:SessionInputBuffer.read|](v1, v4) @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:([B)I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9cfe.   v0:= temp;
#L0a9d00.   v1:= v3.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9d04.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v1) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9d0a.   v1:= temp;
#L0a9d0c.   if v1 == 0 then goto L0a9d20;
#L0a9d10.   if v0 <= 0 then goto L0a9d20;
#L0a9d14.   v1:= v3.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9d18.   v2:= 0  @length 4;
#L0a9d1a.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v1, v4, v2, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.input:([BII)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9d20.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.read|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0a9d34.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9d38.   call temp:=  [|org:apache:http:io:SessionInputBuffer.read|](v1, v3, v4, v5) @signature [|Lorg/apache/http/io/SessionInputBuffer;.read:([BII)I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9d3e.   v0:= temp;
#L0a9d40.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9d44.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v1) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9d4a.   v1:= temp;
#L0a9d4c.   if v1 == 0 then goto L0a9d5e;
#L0a9d50.   if v0 <= 0 then goto L0a9d5e;
#L0a9d54.   v1:= v2.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9d58.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v1, v3, v4, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.input:([BII)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9d5e.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.readLine|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v6 @type (this), [|org:apache:http:util:CharArrayBuffer|] v7 @type (object)) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0a9d70.   v3:= v6.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9d74.   call temp:=  [|org:apache:http:io:SessionInputBuffer.readLine|](v3, v7) @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9d7a.   v0:= temp;
#L0a9d7c.   v3:= v6.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9d80.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v3) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9d86.   v3:= temp;
#L0a9d88.   if v3 == 0 then goto L0a9dde;
#L0a9d8c.   if v0 <= 0 then goto L0a9dde;
#L0a9d90.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v7) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9d96.   v3:= temp;
#L0a9d98.   v1:= v3 - v0  @type int;
#L0a9d9c.   v2:= new [|java:lang:String|];
#L0a9da0.   call temp:=  [|org:apache:http:util:CharArrayBuffer.buffer|](v7) @signature [|Lorg/apache/http/util/CharArrayBuffer;.buffer:()[C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9da6.   v3:= temp  @type object;
#L0a9da8.   call temp:=  [|java:lang:String.<init>|](v2, v3, v1, v0) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0a9dae.   v3:= v6.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9db2.   v4:= new [|java:lang:StringBuilder|];
#L0a9db6.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9dbc.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9dc2.   v4:= temp  @type object;
#L0a9dc4.   v5:= "[EOL]" @type (object, string);
#L0a9dc8.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9dce.   v4:= temp  @type object;
#L0a9dd0.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9dd6.   v4:= temp  @type object;
#L0a9dd8.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v3, v4) @signature [|Lorg/apache/http/impl/conn/Wire;.input:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9dde.   return v0;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:conn:LoggingSessionInputBuffer.readLine|] ([|org:apache:http:impl:conn:LoggingSessionInputBuffer|] v4 @type (this)) @owner [|org:apache:http:impl:conn:LoggingSessionInputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionInputBuffer;.readLine:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a9df0.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.in|]   @type object;
#L0a9df4.   call temp:=  [|org:apache:http:io:SessionInputBuffer.readLine|](v1) @signature [|Lorg/apache/http/io/SessionInputBuffer;.readLine:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:io:SessionInputBuffer|] @type interface;
#L0a9dfa.   v0:= temp  @type object;
#L0a9dfc.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9e00.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v1) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9e06.   v1:= temp;
#L0a9e08.   if v1 == 0 then goto L0a9e40;
#L0a9e0c.   if v0 == 0 then goto L0a9e40;
#L0a9e10.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionInputBuffer.wire|]   @type object;
#L0a9e14.   v2:= new [|java:lang:StringBuilder|];
#L0a9e18.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9e1e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9e24.   v2:= temp  @type object;
#L0a9e26.   v3:= "[EOL]" @type (object, string);
#L0a9e2a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9e30.   v2:= temp  @type object;
#L0a9e32.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9e38.   v2:= temp  @type object;
#L0a9e3a.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v1, v2) @signature [|Lorg/apache/http/impl/conn/Wire;.input:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9e40.   return v0  @type object;

   }
record [|org:apache:http:io:SessionOutputBuffer|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.flush|] () @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:io:SessionOutputBuffer.getMetrics|] () @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.write|] ([|int|] v0) @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.write|] ([|byte|][] v0) @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:([B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.write|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:([BII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.writeLine|] ([|java:lang:String|] v0 @type (object)) @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.writeLine:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:io:SessionOutputBuffer.writeLine|] ([|org:apache:http:util:CharArrayBuffer|] v0 @type (object)) @owner [|org:apache:http:io:SessionOutputBuffer|] @signature [|Lorg/apache/http/io/SessionOutputBuffer;.writeLine:(Lorg/apache/http/util/CharArrayBuffer;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:io:SessionOutputBuffer|] {
      [|org:apache:http:io:SessionOutputBuffer|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:conn:Wire|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.<init>|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v0 @type (this), [|org:apache:http:io:SessionOutputBuffer|] v1 @type (object), [|org:apache:http:impl:conn:Wire|] v2 @type (object)) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/impl/conn/Wire;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0a9e54.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0a9e5a.   v0.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]  := v1 @type object;
#L0a9e5e.   v0.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]  := v2 @type object;
#L0a9e62.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.flush|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v1 @type (this)) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9e74.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9e78.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.flush|](v0) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.flush:()V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9e7e.   return @void ;

   }
    procedure [|org:apache:http:io:HttpTransportMetrics|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.getMetrics|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v1 @type (this)) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9e90.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9e94.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.getMetrics|](v0) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.getMetrics:()Lorg/apache/http/io/HttpTransportMetrics;|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9e9a.   v0:= temp  @type object;
#L0a9e9c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.write|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v1 @type (this), [|int|] v2) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9eb0.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9eb4.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.write|](v0, v2) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:(I)V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9eba.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9ebe.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v0) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9ec4.   v0:= temp;
#L0a9ec6.   if v0 == 0 then goto L0a9ed4;
#L0a9eca.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9ece.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v0, v2) @signature [|Lorg/apache/http/impl/conn/Wire;.output:(I)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9ed4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.write|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v1 @type (this), [|byte|][] v2) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.write:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9ee8.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9eec.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.write|](v0, v2) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:([B)V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9ef2.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9ef6.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v0) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9efc.   v0:= temp;
#L0a9efe.   if v0 == 0 then goto L0a9f0c;
#L0a9f02.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9f06.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v0, v2) @signature [|Lorg/apache/http/impl/conn/Wire;.output:([B)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9f0c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.write|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0a9f20.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9f24.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.write|](v0, v2, v3, v4) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.write:([BII)V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9f2a.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9f2e.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v0) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9f34.   v0:= temp;
#L0a9f36.   if v0 == 0 then goto L0a9f44;
#L0a9f3a.   v0:= v1.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9f3e.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/conn/Wire;.output:([BII)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9f44.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.writeLine|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.writeLine:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0a9f58.   v0:= v3.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9f5c.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.writeLine|](v0, v4) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.writeLine:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9f62.   v0:= v3.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9f66.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v0) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9f6c.   v0:= temp;
#L0a9f6e.   if v0 == 0 then goto L0a9fa2;
#L0a9f72.   v0:= v3.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9f76.   v1:= new [|java:lang:StringBuilder|];
#L0a9f7a.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9f80.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9f86.   v1:= temp  @type object;
#L0a9f88.   v2:= "[EOL]" @type (object, string);
#L0a9f8c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9f92.   v1:= temp  @type object;
#L0a9f94.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9f9a.   v1:= temp  @type object;
#L0a9f9c.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v0, v1) @signature [|Lorg/apache/http/impl/conn/Wire;.output:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9fa2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:LoggingSessionOutputBuffer.writeLine|] ([|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] v4 @type (this), [|org:apache:http:util:CharArrayBuffer|] v5 @type (object)) @owner [|org:apache:http:impl:conn:LoggingSessionOutputBuffer|] @signature [|Lorg/apache/http/impl/conn/LoggingSessionOutputBuffer;.writeLine:(Lorg/apache/http/util/CharArrayBuffer;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0a9fb4.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.out|]   @type object;
#L0a9fb8.   call temp:=  [|org:apache:http:io:SessionOutputBuffer.writeLine|](v1, v5) @signature [|Lorg/apache/http/io/SessionOutputBuffer;.writeLine:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:io:SessionOutputBuffer|] @type interface;
#L0a9fbe.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9fc2.   call temp:=  [|org:apache:http:impl:conn:Wire.enabled|](v1) @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0a9fc8.   v1:= temp;
#L0a9fca.   if v1 == 0 then goto L0aa01a;
#L0a9fce.   v0:= new [|java:lang:String|];
#L0a9fd2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.buffer|](v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.buffer:()[C|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9fd8.   v1:= temp  @type object;
#L0a9fda.   v2:= 0  @length 4;
#L0a9fdc.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0a9fe2.   v3:= temp;
#L0a9fe4.   call temp:=  [|java:lang:String.<init>|](v0, v1, v2, v3) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0a9fea.   v1:= v4.[|org:apache:http:impl:conn:LoggingSessionOutputBuffer.wire|]   @type object;
#L0a9fee.   v2:= new [|java:lang:StringBuilder|];
#L0a9ff2.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0a9ff8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0a9ffe.   v2:= temp  @type object;
#L0aa000.   v3:= "[EOL]" @type (object, string);
#L0aa004.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa00a.   v2:= temp  @type object;
#L0aa00c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa012.   v2:= temp  @type object;
#L0aa014.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v1, v2) @signature [|Lorg/apache/http/impl/conn/Wire;.output:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0aa01a.   return @void ;

   }
record [|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1|]  @type class @AccessFlag SYNTHETIC  {
   }
      global [|int|][] @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
    procedure [|void|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.<clinit>|] () @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner$1;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aa02c.   call temp:=  [|java:net:Proxy$Type.values|]() @signature [|Ljava/net/Proxy$Type;.values:()[Ljava/net/Proxy$Type;|] @classDescriptor [|java:net:Proxy$Type|] @type static;
#L0aa032.   v0:= temp  @type object;
#L0aa034.   v0:= v0.length;
#L0aa036.   v0:= new [|int|][v0];
#L0aa03a.   @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|] := v0  @type object;
#L0aa03e.   v0:= @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|]   @type object;
#L0aa042.   v1:= @@[|java:net:Proxy$Type.DIRECT|]   @type object;
#L0aa046.   call temp:=  [|java:net:Proxy$Type.ordinal|](v1) @signature [|Ljava/net/Proxy$Type;.ordinal:()I|] @classDescriptor [|java:net:Proxy$Type|] @type virtual;
#L0aa04c.   v1:= temp;
#L0aa04e.   v2:= 1  @length 4;
#L0aa050.   v0[v1]:= v2;
#L0aa054.   v0:= @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|]   @type object;
#L0aa058.   v1:= @@[|java:net:Proxy$Type.HTTP|]   @type object;
#L0aa05c.   call temp:=  [|java:net:Proxy$Type.ordinal|](v1) @signature [|Ljava/net/Proxy$Type;.ordinal:()I|] @classDescriptor [|java:net:Proxy$Type|] @type virtual;
#L0aa062.   v1:= temp;
#L0aa064.   v2:= 2  @length 4;
#L0aa066.   v0[v1]:= v2;
#L0aa06a.   v0:= @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|]   @type object;
#L0aa06e.   v1:= @@[|java:net:Proxy$Type.SOCKS|]   @type object;
#L0aa072.   call temp:=  [|java:net:Proxy$Type.ordinal|](v1) @signature [|Ljava/net/Proxy$Type;.ordinal:()I|] @classDescriptor [|java:net:Proxy$Type|] @type virtual;
#L0aa078.   v1:= temp;
#L0aa07a.   v2:= 3  @length 4;
#L0aa07c.   v0[v1]:= v2;
#L0aa080.   return @void ;
#L0aa082.   v0:= Exception  @type object;
#L0aa084.   goto L0aa080;
#L0aa086.   v0:= Exception  @type object;
#L0aa088.   goto L0aa06a;
#L0aa08a.   v0:= Exception  @type object;
#L0aa08c.   goto L0aa054;
  catch  [|java:lang:NoSuchFieldError|] @[L0aa03e..L0aa054] goto L0aa08a;
  catch  [|java:lang:NoSuchFieldError|] @[L0aa054..L0aa06a] goto L0aa086;
  catch  [|java:lang:NoSuchFieldError|] @[L0aa06a..L0aa080] goto L0aa082;

   }
record [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:routing:HttpRoutePlanner|] {
      [|java:net:ProxySelector|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.proxySelector|]    @AccessFlag PROTECTED;
      [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.schemeRegistry|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.<init>|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v2 @type (this), [|org:apache:http:conn:scheme:SchemeRegistry|] v3 @type (object), [|java:net:ProxySelector|] v4 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;Ljava/net/ProxySelector;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0aa0c8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aa0ce.   if v3 != 0 then goto L0aa0e2;
#L0aa0d2.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aa0d6.   v1:= "SchemeRegistry must not be null." @type (object, string);
#L0aa0da.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa0e0.   throw v0;
#L0aa0e2.   v2.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.schemeRegistry|]  := v3 @type object;
#L0aa0e6.   v2.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.proxySelector|]  := v4 @type object;
#L0aa0ea.   return @void ;

   }
    procedure [|java:net:Proxy|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.chooseProxy|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v5 @type (this), [|java:util:List|] v6 @type (object), [|org:apache:http:HttpHost|] v7 @type (object), [|org:apache:http:HttpRequest|] v8 @type (object), [|org:apache:http:protocol:HttpContext|] v9 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.chooseProxy:(Ljava/util/List;Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Ljava/net/Proxy;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0aa0fc.   if v6 == 0 then goto L0aa10c;
#L0aa100.   call temp:=  [|java:util:List.isEmpty|](v6) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0aa106.   v3:= temp;
#L0aa108.   if v3 == 0 then goto L0aa11c;
#L0aa10c.   v3:= new [|java:lang:IllegalArgumentException|];
#L0aa110.   v4:= "Proxy list must not be empty." @type (object, string);
#L0aa114.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa11a.   throw v3;
#L0aa11c.   v2:= 0  @length 4;
#L0aa11e.   v0:= 0  @length 4;
#L0aa120.   if v2 != 0 then goto L0aa164;
#L0aa124.   call temp:=  [|java:util:List.size|](v6) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0aa12a.   v3:= temp;
#L0aa12c.   if v0 >= v3 then goto L0aa164;
#L0aa130.   call temp:=  [|java:util:List.get|](v6, v0) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0aa136.   v1:= temp  @type object;
#L0aa138.   v1:= ([|java:net:Proxy|])v1;
#L0aa13c.   v3:= @@[|org:apache:http:impl:conn:ProxySelectorRoutePlanner$1.$SwitchMap$java$net$Proxy$Type|]   @type object;
#L0aa140.   call temp:=  [|java:net:Proxy.type|](v1) @signature [|Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;|] @classDescriptor [|java:net:Proxy|] @type virtual;
#L0aa146.   v4:= temp  @type object;
#L0aa148.   call temp:=  [|java:net:Proxy$Type.ordinal|](v4) @signature [|Ljava/net/Proxy$Type;.ordinal:()I|] @classDescriptor [|java:net:Proxy$Type|] @type virtual;
#L0aa14e.   v4:= temp;
#L0aa150.   v3:= v3[v4];
#L0aa154.   goto L0aa170;
#L0aa15a.   v0:= v0 + 1;
#L0aa15e.   goto L0aa120;
#L0aa160.   v2:= v1  @type object;
#L0aa162.   goto L0aa15a;
#L0aa164.   if v2 != 0 then goto L0aa16c;
#L0aa168.   v2:= @@[|java:net:Proxy.NO_PROXY|]   @type object;
#L0aa16c.   return v2  @type object;
#L0aa16e.   
#L0aa170.   switch  v3
                 | 1 => goto L0aa160
                 | 2 => goto L0aa160
                 | => goto L0aa15a;

   }
    procedure [|org:apache:http:HttpHost|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.determineProxy|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v10 @type (this), [|org:apache:http:HttpHost|] v11 @type (object), [|org:apache:http:HttpRequest|] v12 @type (object), [|org:apache:http:protocol:HttpContext|] v13 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.determineProxy:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpHost;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0aa190.   v3:= v10.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.proxySelector|]   @type object;
#L0aa194.   if v3 != 0 then goto L0aa1a0;
#L0aa198.   call temp:=  [|java:net:ProxySelector.getDefault|]() @signature [|Ljava/net/ProxySelector;.getDefault:()Ljava/net/ProxySelector;|] @classDescriptor [|java:net:ProxySelector|] @type static;
#L0aa19e.   v3:= temp  @type object;
#L0aa1a0.   if v3 != 0 then goto L0aa1a8;
#L0aa1a4.   v4:= 0  @length 4;
#L0aa1a6.   return v4  @type object;
#L0aa1a8.   v5:= 0  @length 4;
#L0aa1aa.   v5:= new [|java:net:URI|];
#L0aa1ae.   call temp:=  [|org:apache:http:HttpHost.toURI|](v11) @signature [|Lorg/apache/http/HttpHost;.toURI:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0aa1b4.   v7:= temp  @type object;
#L0aa1b6.   call temp:=  [|java:net:URI.<init>|](v5, v7) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L0aa1bc.   call temp:=  [|java:net:ProxySelector.select|](v3, v5) @signature [|Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;|] @classDescriptor [|java:net:ProxySelector|] @type virtual;
#L0aa1c2.   v2:= temp  @type object;
#L0aa1c4.   call temp:=  [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.chooseProxy|](v10, v2, v11, v12, v13) @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.chooseProxy:(Ljava/util/List;Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Ljava/net/Proxy;|] @classDescriptor [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @type virtual;
#L0aa1ca.   v1:= temp  @type object;
#L0aa1cc.   v4:= 0  @length 4;
#L0aa1ce.   call temp:=  [|java:net:Proxy.type|](v1) @signature [|Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;|] @classDescriptor [|java:net:Proxy|] @type virtual;
#L0aa1d4.   v7:= temp  @type object;
#L0aa1d6.   v8:= @@[|java:net:Proxy$Type.HTTP|]   @type object;
#L0aa1da.   if v7 != v8 then goto L0aa1a6;
#L0aa1de.   call temp:=  [|java:net:Proxy.address|](v1) @signature [|Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;|] @classDescriptor [|java:net:Proxy|] @type virtual;
#L0aa1e4.   v7:= temp  @type object;
#L0aa1e6.   v7:= instanceof @varname v7 @type [|java:net:InetSocketAddress|];
#L0aa1ea.   if v7 != 0 then goto L0aa25c;
#L0aa1ee.   v7:= new [|org:apache:http:HttpException|];
#L0aa1f2.   v8:= new [|java:lang:StringBuilder|];
#L0aa1f6.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aa1fc.   v9:= "Unable to handle non-Inet proxy address: " @type (object, string);
#L0aa200.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa206.   v8:= temp  @type object;
#L0aa208.   call temp:=  [|java:net:Proxy.address|](v1) @signature [|Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;|] @classDescriptor [|java:net:Proxy|] @type virtual;
#L0aa20e.   v9:= temp  @type object;
#L0aa210.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa216.   v8:= temp  @type object;
#L0aa218.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa21e.   v8:= temp  @type object;
#L0aa220.   call temp:=  [|org:apache:http:HttpException.<init>|](v7, v8) @signature [|Lorg/apache/http/HttpException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:HttpException|] @type direct;
#L0aa226.   throw v7;
#L0aa228.   v6:= Exception  @type object;
#L0aa22a.   v7:= new [|org:apache:http:HttpException|];
#L0aa22e.   v8:= new [|java:lang:StringBuilder|];
#L0aa232.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aa238.   v9:= "Cannot convert host to URI: " @type (object, string);
#L0aa23c.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa242.   v8:= temp  @type object;
#L0aa244.   call temp:=  [|java:lang:StringBuilder.append|](v8, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa24a.   v8:= temp  @type object;
#L0aa24c.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa252.   v8:= temp  @type object;
#L0aa254.   call temp:=  [|org:apache:http:HttpException.<init>|](v7, v8, v6) @signature [|Lorg/apache/http/HttpException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:HttpException|] @type direct;
#L0aa25a.   throw v7;
#L0aa25c.   call temp:=  [|java:net:Proxy.address|](v1) @signature [|Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;|] @classDescriptor [|java:net:Proxy|] @type virtual;
#L0aa262.   v0:= temp  @type object;
#L0aa264.   v0:= ([|java:net:InetSocketAddress|])v0;
#L0aa268.   v4:= new [|org:apache:http:HttpHost|];
#L0aa26c.   call temp:=  [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.getHost|](v10, v0) @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.getHost:(Ljava/net/InetSocketAddress;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @type virtual;
#L0aa272.   v7:= temp  @type object;
#L0aa274.   call temp:=  [|java:net:InetSocketAddress.getPort|](v0) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0aa27a.   v8:= temp;
#L0aa27c.   call temp:=  [|org:apache:http:HttpHost.<init>|](v4, v7, v8) @signature [|Lorg/apache/http/HttpHost;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:HttpHost|] @type direct;
#L0aa282.   goto L0aa1a6;
  catch  [|java:net:URISyntaxException|] @[L0aa1aa..L0aa1bc] goto L0aa228;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.determineRoute|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v8 @type (this), [|org:apache:http:HttpHost|] v9 @type (object), [|org:apache:http:HttpRequest|] v10 @type (object), [|org:apache:http:protocol:HttpContext|] v11 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.determineRoute:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0aa2a4.   if v10 != 0 then goto L0aa2b8;
#L0aa2a8.   v6:= new [|java:lang:IllegalStateException|];
#L0aa2ac.   v7:= "Request must not be null." @type (object, string);
#L0aa2b0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0aa2b6.   throw v6;
#L0aa2b8.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0aa2be.   v6:= temp  @type object;
#L0aa2c0.   call temp:=  [|org:apache:http:conn:params:ConnRouteParams.getForcedRoute|](v6) @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getForcedRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:params:ConnRouteParams|] @type static;
#L0aa2c6.   v2:= temp  @type object;
#L0aa2c8.   if v2 == 0 then goto L0aa2d0;
#L0aa2cc.   v3:= v2  @type object;
#L0aa2ce.   return v3  @type object;
#L0aa2d0.   if v9 != 0 then goto L0aa2e4;
#L0aa2d4.   v6:= new [|java:lang:IllegalStateException|];
#L0aa2d8.   v7:= "Target host must not be null." @type (object, string);
#L0aa2dc.   call temp:=  [|java:lang:IllegalStateException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0aa2e2.   throw v6;
#L0aa2e4.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0aa2ea.   v6:= temp  @type object;
#L0aa2ec.   call temp:=  [|org:apache:http:conn:params:ConnRouteParams.getLocalAddress|](v6) @signature [|Lorg/apache/http/conn/params/ConnRouteParams;.getLocalAddress:(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;|] @classDescriptor [|org:apache:http:conn:params:ConnRouteParams|] @type static;
#L0aa2f2.   v0:= temp  @type object;
#L0aa2f4.   call temp:=  [|org:apache:http:HttpRequest.getParams|](v10) @signature [|Lorg/apache/http/HttpRequest;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpRequest|] @type interface;
#L0aa2fa.   v6:= temp  @type object;
#L0aa2fc.   v7:= "http.route.default-proxy" @type (object, string);
#L0aa300.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v6, v7) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0aa306.   v1:= temp  @type object;
#L0aa308.   v1:= ([|org:apache:http:HttpHost|])v1;
#L0aa30c.   if v1 != 0 then goto L0aa346;
#L0aa310.   call temp:=  [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.determineProxy|](v8, v9, v10, v11) @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.determineProxy:(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpHost;|] @classDescriptor [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @type virtual;
#L0aa316.   v1:= temp  @type object;
#L0aa318.   v6:= v8.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.schemeRegistry|]   @type object;
#L0aa31c.   call temp:=  [|org:apache:http:HttpHost.getSchemeName|](v9) @signature [|Lorg/apache/http/HttpHost;.getSchemeName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0aa322.   v7:= temp  @type object;
#L0aa324.   call temp:=  [|org:apache:http:conn:scheme:SchemeRegistry.getScheme|](v6, v7) @signature [|Lorg/apache/http/conn/scheme/SchemeRegistry;.getScheme:(Ljava/lang/String;)Lorg/apache/http/conn/scheme/Scheme;|] @classDescriptor [|org:apache:http:conn:scheme:SchemeRegistry|] @type virtual;
#L0aa32a.   v4:= temp  @type object;
#L0aa32c.   call temp:=  [|org:apache:http:conn:scheme:Scheme.isLayered|](v4) @signature [|Lorg/apache/http/conn/scheme/Scheme;.isLayered:()Z|] @classDescriptor [|org:apache:http:conn:scheme:Scheme|] @type virtual;
#L0aa332.   v5:= temp;
#L0aa334.   if v1 != 0 then goto L0aa35a;
#L0aa338.   v2:= new [|org:apache:http:conn:routing:HttpRoute|];
#L0aa33c.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v2, v9, v0, v5) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Z)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L0aa342.   v3:= v2  @type object;
#L0aa344.   goto L0aa2ce;
#L0aa346.   v6:= @@[|org:apache:http:conn:params:ConnRouteParams.NO_HOST|]   @type object;
#L0aa34a.   call temp:=  [|org:apache:http:HttpHost.equals|](v6, v1) @signature [|Lorg/apache/http/HttpHost;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:HttpHost|] @type virtual;
#L0aa350.   v6:= temp;
#L0aa352.   if v6 == 0 then goto L0aa318;
#L0aa356.   v1:= 0  @length 4;
#L0aa358.   goto L0aa318;
#L0aa35a.   v2:= new [|org:apache:http:conn:routing:HttpRoute|];
#L0aa35e.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.<init>|](v2, v9, v0, v1, v5) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.<init>:(Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/HttpHost;Z)V|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type direct;
#L0aa364.   goto L0aa342;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.getHost|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v1 @type (this), [|java:net:InetSocketAddress|] v2 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.getHost:(Ljava/net/InetSocketAddress;)Ljava/lang/String;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0aa378.   call temp:=  [|java:net:InetSocketAddress.isUnresolved|](v2) @signature [|Ljava/net/InetSocketAddress;.isUnresolved:()Z|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0aa37e.   v0:= temp;
#L0aa380.   if v0 == 0 then goto L0aa38e;
#L0aa384.   call temp:=  [|java:net:InetSocketAddress.getHostName|](v2) @signature [|Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0aa38a.   v0:= temp  @type object;
#L0aa38c.   return v0  @type object;
#L0aa38e.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v2) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0aa394.   v0:= temp  @type object;
#L0aa396.   call temp:=  [|java:net:InetAddress.getHostAddress|](v0) @signature [|Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L0aa39c.   v0:= temp  @type object;
#L0aa39e.   goto L0aa38c;

   }
    procedure [|java:net:ProxySelector|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.getProxySelector|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v1 @type (this)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.getProxySelector:()Ljava/net/ProxySelector;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aa3b0.   v0:= v1.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.proxySelector|]   @type object;
#L0aa3b4.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:ProxySelectorRoutePlanner.setProxySelector|] ([|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] v0 @type (this), [|java:net:ProxySelector|] v1 @type (object)) @owner [|org:apache:http:impl:conn:ProxySelectorRoutePlanner|] @signature [|Lorg/apache/http/impl/conn/ProxySelectorRoutePlanner;.setProxySelector:(Ljava/net/ProxySelector;)V|] @Access PUBLIC {
      local temp ;
      
#L0aa3c8.   v0.[|org:apache:http:impl:conn:ProxySelectorRoutePlanner.proxySelector|]  := v1 @type object;
#L0aa3cc.   return @void ;

   }
record [|org:apache:http:impl:conn:SingleClientConnManager$1|]  @type class @AccessFlag  extends  [|org:apache:http:conn:ClientConnectionRequest|] {
      [|org:apache:http:impl:conn:SingleClientConnManager|] [|org:apache:http:impl:conn:SingleClientConnManager$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:SingleClientConnManager$1.val$route|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:lang:Object|] [|org:apache:http:impl:conn:SingleClientConnManager$1.val$state|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$1.<init>|] ([|org:apache:http:impl:conn:SingleClientConnManager$1|] v0 @type (this), [|org:apache:http:impl:conn:SingleClientConnManager|] v1 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$1;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0aa3e0.   v0.[|org:apache:http:impl:conn:SingleClientConnManager$1.this$0|]  := v1 @type object;
#L0aa3e4.   v0.[|org:apache:http:impl:conn:SingleClientConnManager$1.val$route|]  := v2 @type object;
#L0aa3e8.   v0.[|org:apache:http:impl:conn:SingleClientConnManager$1.val$state|]  := v3 @type object;
#L0aa3ec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aa3f2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$1.abortRequest|] ([|org:apache:http:impl:conn:SingleClientConnManager$1|] v0 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$1;.abortRequest:()V|] @Access PUBLIC {
      local temp ;
      
#L0aa404.   return @void ;

   }
    procedure [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:impl:conn:SingleClientConnManager$1.getConnection|] ([|org:apache:http:impl:conn:SingleClientConnManager$1|] v3 @type (this), [|long|] v4, [|java:util:concurrent:TimeUnit|] v6 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$1;.getConnection:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aa418.   v0:= v3.[|org:apache:http:impl:conn:SingleClientConnManager$1.this$0|]   @type object;
#L0aa41c.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager$1.val$route|]   @type object;
#L0aa420.   v2:= v3.[|org:apache:http:impl:conn:SingleClientConnManager$1.val$state|]   @type object;
#L0aa424.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.getConnection|](v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.getConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ManagedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa42a.   v0:= temp  @type object;
#L0aa42c.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] {
      [|org:apache:http:impl:conn:SingleClientConnManager|] [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.<init>|] ([|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] v0 @type (this), [|org:apache:http:impl:conn:SingleClientConnManager|] v1 @type (object), [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] v2 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0aa440.   v0.[|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.this$0|]  := v1 @type object;
#L0aa444.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type direct;
#L0aa44a.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.markReusable|](v0) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.markReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa450.   v2.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.route|]  := v3 @type object;
#L0aa454.   return @void ;

   }
record [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:conn:AbstractPoolEntry|] {
      [|org:apache:http:impl:conn:SingleClientConnManager|] [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.<init>|] ([|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] v2 @type (this), [|org:apache:http:impl:conn:SingleClientConnManager|] v3 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0aa468.   v2.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.this$0|]  := v3 @type object;
#L0aa46c.   v0:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.connOperator|]   @type object;
#L0aa470.   v1:= 0  @length 4;
#L0aa472.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type direct;
#L0aa478.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.close|] ([|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.close:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0aa48c.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdownEntry|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdownEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aa492.   v0:= v1.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa496.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa49c.   v0:= temp;
#L0aa49e.   if v0 == 0 then goto L0aa4ac;
#L0aa4a2.   v0:= v1.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa4a6.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.close|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa4ac.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdown|] ([|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdown:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0aa4c0.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdownEntry|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdownEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aa4c6.   v0:= v1.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa4ca.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa4d0.   v0:= temp;
#L0aa4d2.   if v0 == 0 then goto L0aa4e0;
#L0aa4d6.   v0:= v1.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa4da.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.shutdown|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.shutdown:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa4e0.   return @void ;

   }
record [|org:apache:http:impl:conn:SingleClientConnManager|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:ClientConnectionManager|] {
      [|boolean|] [|org:apache:http:impl:conn:SingleClientConnManager.alwaysShutDown|]    @AccessFlag PROTECTED;
      [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:SingleClientConnManager.connOperator|]    @AccessFlag PROTECTED;
      [|long|] [|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]    @AccessFlag PROTECTED;
      [|boolean|] [|org:apache:http:impl:conn:SingleClientConnManager.isShutDown|]    @AccessFlag PROTECTED_VOLATILE;
      [|long|] [|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]    @AccessFlag PROTECTED;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:SingleClientConnManager.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] [|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]    @AccessFlag PROTECTED;
      [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:SingleClientConnManager.schemeRegistry|]    @AccessFlag PROTECTED;
      [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] [|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]    @AccessFlag PROTECTED;
   }
      global [|java:lang:String|] @@[|org:apache:http:impl:conn:SingleClientConnManager.MISUSE_MESSAGE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.<init>|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v3 @type (this), [|org:apache:http:params:HttpParams|] v4 @type (object), [|org:apache:http:conn:scheme:SchemeRegistry|] v5 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aa4f4.   v2:= 0  @length 4;
#L0aa4f6.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aa4fc.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0aa502.   v0:= temp  @type object;
#L0aa504.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0aa50a.   v0:= temp  @type object;
#L0aa50c.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.log|]  := v0 @type object;
#L0aa510.   if v5 != 0 then goto L0aa524;
#L0aa514.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aa518.   v1:= "Scheme registry must not be null." @type (object, string);
#L0aa51c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa522.   throw v0;
#L0aa524.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.schemeRegistry|]  := v5 @type object;
#L0aa528.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.createConnectionOperator|](v3, v5) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa52e.   v0:= temp  @type object;
#L0aa530.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.connOperator|]  := v0 @type object;
#L0aa534.   v0:= new [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|];
#L0aa538.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.<init>|](v0, v3) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type direct;
#L0aa53e.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]  := v0 @type object;
#L0aa542.   v0:= 0  @length 4;
#L0aa544.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]  := v0 @type object;
#L0aa548.   v0:= -1  @length wide16;
#L0aa54c.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]  := v0 @wide;
#L0aa550.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.alwaysShutDown|]  := v2 @boolean;
#L0aa554.   v3.[|org:apache:http:impl:conn:SingleClientConnManager.isShutDown|]  := v2 @boolean;
#L0aa558.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.assertStillUp|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v2 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.assertStillUp:()V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0aa56c.   v0:= v2.[|org:apache:http:impl:conn:SingleClientConnManager.isShutDown|]   @boolean;
#L0aa570.   if v0 == 0 then goto L0aa584;
#L0aa574.   v0:= new [|java:lang:IllegalStateException|];
#L0aa578.   v1:= "Manager is shut down." @type (object, string);
#L0aa57c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0aa582.   throw v0;
#L0aa584.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.closeExpiredConnections|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v4 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.closeExpiredConnections:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aa598.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0aa59e.   v0:= temp  @type wide;
#L0aa5a0.   v2:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]   @wide;
#L0aa5a4.   v0:= cmp(v0,v2);
#L0aa5a8.   if v0 < 0 then goto L0aa5ba;
#L0aa5ac.   v0:= 0  @length wide16;
#L0aa5b0.   v2:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L0aa5b4.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.closeIdleConnections|](v4, v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa5ba.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.closeIdleConnections|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v7 @type (this), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0aa5cc.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.assertStillUp|](v7) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.assertStillUp:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa5d2.   if v10 != 0 then goto L0aa5e6;
#L0aa5d6.   v3:= new [|java:lang:IllegalArgumentException|];
#L0aa5da.   v4:= "Time unit must not be null." @type (object, string);
#L0aa5de.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa5e4.   throw v3;
#L0aa5e6.   v3:= v7.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aa5ea.   if v3 != 0 then goto L0aa62c;
#L0aa5ee.   v3:= v7.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa5f2.   v3:= v3.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa5f6.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v3) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa5fc.   v3:= temp;
#L0aa5fe.   if v3 == 0 then goto L0aa62c;
#L0aa602.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0aa608.   v3:= temp  @type wide;
#L0aa60a.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v10, v8, v9) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0aa610.   v5:= temp  @type wide;
#L0aa612.   v0:= v3 - v5  @type long;
#L0aa616.   v3:= v7.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]   @wide;
#L0aa61a.   v3:= cmp(v3,v0);
#L0aa61e.   if v3 > 0 then goto L0aa62c;
#L0aa622.   v3:= v7.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa626.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.close|](v3) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.close:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aa62c.   return @void ;
#L0aa62e.   v2:= Exception  @type object;
#L0aa630.   v3:= v7.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa634.   v4:= "Problem closing idle connection." @type (object, string);
#L0aa638.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa63e.   goto L0aa62c;
  catch  [|java:io:IOException|] @[L0aa622..L0aa62c] goto L0aa62e;

   }
    procedure [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:SingleClientConnManager.createConnectionOperator|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v1 @type (this), [|org:apache:http:conn:scheme:SchemeRegistry|] v2 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0aa660.   v0:= new [|org:apache:http:impl:conn:DefaultClientConnectionOperator|];
#L0aa664.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnectionOperator.<init>|](v0, v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @type direct;
#L0aa66a.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.finalize|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v0 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.finalize:()V|] @Access PROTECTED {
      local temp ;
      
#L0aa67c.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.shutdown|](v0) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa682.   call temp:=  [|java:lang:Object.finalize|](v0) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0aa688.   return @void ;

   }
    procedure [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:impl:conn:SingleClientConnManager.getConnection|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v8 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v9 @type (object), [|java:lang:Object|] v10 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.getConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ManagedClientConnection;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0aa69c.   if v9 != 0 then goto L0aa6b0;
#L0aa6a0.   v5:= new [|java:lang:IllegalArgumentException|];
#L0aa6a4.   v6:= "Route may not be null." @type (object, string);
#L0aa6a8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa6ae.   throw v5;
#L0aa6b0.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.assertStillUp|](v8) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.assertStillUp:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa6b6.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa6ba.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v5) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa6c0.   v5:= temp;
#L0aa6c2.   if v5 == 0 then goto L0aa6f6;
#L0aa6c6.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa6ca.   v6:= new [|java:lang:StringBuilder|];
#L0aa6ce.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aa6d4.   v7:= "Get connection for route " @type (object, string);
#L0aa6d8.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa6de.   v6:= temp  @type object;
#L0aa6e0.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa6e6.   v6:= temp  @type object;
#L0aa6e8.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa6ee.   v6:= temp  @type object;
#L0aa6f0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa6f6.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aa6fa.   if v5 == 0 then goto L0aa704;
#L0aa6fe.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.revokeConnection|](v8) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.revokeConnection:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa704.   v1:= 0  @length 4;
#L0aa706.   v2:= 0  @length 4;
#L0aa708.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.closeExpiredConnections|](v8) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.closeExpiredConnections:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa70e.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa712.   v5:= v5.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa716.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v5) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa71c.   v5:= temp;
#L0aa71e.   if v5 == 0 then goto L0aa7a4;
#L0aa722.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa726.   v4:= v5.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.tracker|]   @type object;
#L0aa72a.   if v4 == 0 then goto L0aa742;
#L0aa72e.   call temp:=  [|org:apache:http:conn:routing:RouteTracker.toRoute|](v4) @signature [|Lorg/apache/http/conn/routing/RouteTracker;.toRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:conn:routing:RouteTracker|] @type virtual;
#L0aa734.   v5:= temp  @type object;
#L0aa736.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.equals|](v5, v9) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0aa73c.   v5:= temp;
#L0aa73e.   if v5 != 0 then goto L0aa7a0;
#L0aa742.   v2:= 1  @length 4;
#L0aa744.   if v2 == 0 then goto L0aa754;
#L0aa748.   v1:= 1  @length 4;
#L0aa74a.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa74e.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdown|](v5) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aa754.   if v1 == 0 then goto L0aa766;
#L0aa758.   v5:= new [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|];
#L0aa75c.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.<init>|](v5, v8) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type direct;
#L0aa762.   v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]  := v5 @type object;
#L0aa766.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa76a.   v5:= v5.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa76e.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v5) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa774.   v3:= temp  @type object;
#L0aa776.   if v3 == 0 then goto L0aa788;
#L0aa77a.   call temp:=  [|dalvik:system:SocketTagger.get|]() @signature [|Ldalvik/system/SocketTagger;.get:()Ldalvik/system/SocketTagger;|] @classDescriptor [|dalvik:system:SocketTagger|] @type static;
#L0aa780.   v5:= temp  @type object;
#L0aa782.   call temp:=  [|dalvik:system:SocketTagger.tag|](v5, v3) @signature [|Ldalvik/system/SocketTagger;.tag:(Ljava/net/Socket;)V|] @classDescriptor [|dalvik:system:SocketTagger|] @type virtual;
#L0aa788.   v5:= new [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|];
#L0aa78c.   v6:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa790.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.<init>|](v5, v8, v6, v9) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type direct;
#L0aa796.   v8.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]  := v5 @type object;
#L0aa79a.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aa79e.   return v5  @type object;
#L0aa7a0.   v2:= 0  @length 4;
#L0aa7a2.   goto L0aa744;
#L0aa7a4.   v1:= 1  @length 4;
#L0aa7a6.   goto L0aa744;
#L0aa7a8.   v0:= Exception  @type object;
#L0aa7aa.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa7ae.   v6:= "Problem shutting down connection." @type (object, string);
#L0aa7b2.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa7b8.   goto L0aa754;
#L0aa7ba.   v0:= Exception  @type object;
#L0aa7bc.   v5:= v8.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa7c0.   v6:= "Problem tagging socket." @type (object, string);
#L0aa7c4.   call temp:=  [|org:apache:commons:logging:Log.debug|](v5, v6, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa7ca.   goto L0aa788;
  catch  [|java:io:IOException|] @[L0aa74a..L0aa754] goto L0aa7a8;
  catch  [|java:io:IOException|] @[L0aa766..L0aa788] goto L0aa7ba;

   }
    procedure [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:SingleClientConnManager.getSchemeRegistry|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v1 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aa7f8.   v0:= v1.[|org:apache:http:impl:conn:SingleClientConnManager.schemeRegistry|]   @type object;
#L0aa7fc.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.releaseConnection|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v9 @type (this), [|org:apache:http:conn:ManagedClientConnection|] v10 @type (object), [|long|] v11, [|java:util:concurrent:TimeUnit|] v13 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0aa810.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager.assertStillUp|](v9) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.assertStillUp:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager|] @type virtual;
#L0aa816.   v4:= instanceof @varname v10 @type [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|];
#L0aa81a.   if v4 != 0 then goto L0aa82e;
#L0aa81e.   v4:= new [|java:lang:IllegalArgumentException|];
#L0aa822.   v5:= "Connection class mismatch, connection not obtained from this manager." @type (object, string);
#L0aa826.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa82c.   throw v4;
#L0aa82e.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa832.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v4) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa838.   v4:= temp;
#L0aa83a.   if v4 == 0 then goto L0aa86e;
#L0aa83e.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa842.   v5:= new [|java:lang:StringBuilder|];
#L0aa846.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aa84c.   v6:= "Releasing connection " @type (object, string);
#L0aa850.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa856.   v5:= temp  @type object;
#L0aa858.   call temp:=  [|java:lang:StringBuilder.append|](v5, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa85e.   v5:= temp  @type object;
#L0aa860.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aa866.   v5:= temp  @type object;
#L0aa868.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa86e.   v2:= v10  @type object;
#L0aa870.   v2:= ([|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|])v2;
#L0aa874.   v4:= v2.[|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.poolEntry|]   @type object;
#L0aa878.   if v4 != 0 then goto L0aa87e;
#L0aa87c.   return @void ;
#L0aa87e.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.getManager|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.getManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa884.   v1:= temp  @type object;
#L0aa886.   if v1 == 0 then goto L0aa89e;
#L0aa88a.   if v1 == v9 then goto L0aa89e;
#L0aa88e.   v4:= new [|java:lang:IllegalArgumentException|];
#L0aa892.   v5:= "Connection not obtained from this manager." @type (object, string);
#L0aa896.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aa89c.   throw v4;
#L0aa89e.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aa8a2.   v4:= v4.[|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.connection|]   @type object;
#L0aa8a6.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v4) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aa8ac.   v3:= temp  @type object;
#L0aa8ae.   if v3 == 0 then goto L0aa8c0;
#L0aa8b2.   call temp:=  [|dalvik:system:SocketTagger.get|]() @signature [|Ldalvik/system/SocketTagger;.get:()Ldalvik/system/SocketTagger;|] @classDescriptor [|dalvik:system:SocketTagger|] @type static;
#L0aa8b8.   v4:= temp  @type object;
#L0aa8ba.   call temp:=  [|dalvik:system:SocketTagger.untag|](v4, v3) @signature [|Ldalvik/system/SocketTagger;.untag:(Ljava/net/Socket;)V|] @classDescriptor [|dalvik:system:SocketTagger|] @type virtual;
#L0aa8c0.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.isOpen|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa8c6.   v4:= temp;
#L0aa8c8.   if v4 == 0 then goto L0aa904;
#L0aa8cc.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.alwaysShutDown|]   @boolean;
#L0aa8d0.   if v4 != 0 then goto L0aa8e0;
#L0aa8d4.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.isMarkedReusable|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.isMarkedReusable:()Z|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa8da.   v4:= temp;
#L0aa8dc.   if v4 != 0 then goto L0aa904;
#L0aa8e0.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa8e4.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v4) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa8ea.   v4:= temp;
#L0aa8ec.   if v4 == 0 then goto L0aa8fe;
#L0aa8f0.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa8f4.   v5:= "Released connection open but not reusable." @type (object, string);
#L0aa8f8.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa8fe.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.shutdown|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa904.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.detach|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa90a.   v4:= 0  @length 4;
#L0aa90c.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]  := v4 @type object;
#L0aa910.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0aa916.   v4:= temp  @type wide;
#L0aa918.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]  := v4 @wide;
#L0aa91c.   v4:= 0  @length wide16;
#L0aa920.   v4:= cmp(v11,v4);
#L0aa924.   if v4 <= 0 then goto L0aa93c;
#L0aa928.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v13, v11, v12) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0aa92e.   v4:= temp  @type wide;
#L0aa930.   v6:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]   @wide;
#L0aa934.   v4:= v4 + v6  @type long;
#L0aa936.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v4 @wide;
#L0aa93a.   goto L0aa87c;
#L0aa93c.   v4:= nanL  @length wide;
#L0aa946.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v4 @wide;
#L0aa94a.   goto L0aa87c;
#L0aa94c.   v0:= Exception  @type object;
#L0aa94e.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa952.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v4) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa958.   v4:= temp;
#L0aa95a.   if v4 == 0 then goto L0aa96c;
#L0aa95e.   v4:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aa962.   v5:= "Exception shutting down released connection." @type (object, string);
#L0aa966.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aa96c.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.detach|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa972.   v4:= 0  @length 4;
#L0aa974.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]  := v4 @type object;
#L0aa978.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0aa97e.   v4:= temp  @type wide;
#L0aa980.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]  := v4 @wide;
#L0aa984.   v4:= 0  @length wide16;
#L0aa988.   v4:= cmp(v11,v4);
#L0aa98c.   if v4 <= 0 then goto L0aa9a6;
#L0aa990.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v13, v11, v12) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0aa996.   v4:= temp  @type wide;
#L0aa998.   v6:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]   @wide;
#L0aa99c.   v4:= v4 + v6  @type long;
#L0aa99e.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v4 @wide;
#L0aa9a2.   goto L0aa87c;
#L0aa9a6.   v4:= nanL  @length wide;
#L0aa9b0.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v4 @wide;
#L0aa9b4.   goto L0aa87c;
#L0aa9b8.   v4:= Exception  @type object;
#L0aa9ba.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.detach|](v2) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aa9c0.   v5:= 0  @length 4;
#L0aa9c2.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]  := v5 @type object;
#L0aa9c6.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0aa9cc.   v5:= temp  @type wide;
#L0aa9ce.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]  := v5 @wide;
#L0aa9d2.   v5:= 0  @length wide16;
#L0aa9d6.   v5:= cmp(v11,v5);
#L0aa9da.   if v5 <= 0 then goto L0aa9f2;
#L0aa9de.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v13, v11, v12) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0aa9e4.   v5:= temp  @type wide;
#L0aa9e6.   v7:= v9.[|org:apache:http:impl:conn:SingleClientConnManager.lastReleaseTime|]   @wide;
#L0aa9ea.   v5:= v5 + v7  @type long;
#L0aa9ec.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v5 @wide;
#L0aa9f0.   throw v4;
#L0aa9f2.   v5:= nanL  @length wide;
#L0aa9fc.   v9.[|org:apache:http:impl:conn:SingleClientConnManager.connectionExpiresTime|]  := v5 @wide;
#L0aaa00.   goto L0aa9f0;
  catch  [|java:io:IOException|] @[L0aa89e..L0aa904] goto L0aa94c;
  catch  [|any|] @[L0aa89e..L0aa904] goto L0aa9b8;
  catch  [|any|] @[L0aa94e..L0aa96c] goto L0aa9b8;

   }
    procedure [|org:apache:http:conn:ClientConnectionRequest|] [|org:apache:http:impl:conn:SingleClientConnManager.requestConnection|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.requestConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0aaa30.   v0:= new [|org:apache:http:impl:conn:SingleClientConnManager$1|];
#L0aaa34.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$1.<init>|](v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$1;.<init>:(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$1|] @type direct;
#L0aaa3a.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.revokeConnection|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v3 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.revokeConnection:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aaa4c.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aaa50.   if v1 != 0 then goto L0aaa56;
#L0aaa54.   return @void ;
#L0aaa56.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aaa5a.   v2:= "Invalid use of SingleClientConnManager: connection still allocated.Make sure to release the connection before allocating another one." @type (object, string);
#L0aaa5e.   call temp:=  [|org:apache:commons:logging:Log.warn|](v1, v2) @signature [|Lorg/apache/commons/logging/Log;.warn:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aaa64.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aaa68.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.detach|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aaa6e.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aaa72.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdown|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aaa78.   goto L0aaa54;
#L0aaa7a.   v0:= Exception  @type object;
#L0aaa7c.   v1:= v3.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aaa80.   v2:= "Problem while shutting down connection." @type (object, string);
#L0aaa84.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aaa8a.   goto L0aaa54;
  catch  [|java:io:IOException|] @[L0aaa6e..L0aaa78] goto L0aaa7a;

   }
    procedure [|void|] [|org:apache:http:impl:conn:SingleClientConnManager.shutdown|] ([|org:apache:http:impl:conn:SingleClientConnManager|] v4 @type (this)) @owner [|org:apache:http:impl:conn:SingleClientConnManager|] @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aaaac.   v3:= 0  @length 4;
#L0aaaae.   v1:= 1  @length 4;
#L0aaab0.   v4.[|org:apache:http:impl:conn:SingleClientConnManager.isShutDown|]  := v1 @boolean;
#L0aaab4.   v1:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aaab8.   if v1 == 0 then goto L0aaac6;
#L0aaabc.   v1:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.managedConn|]   @type object;
#L0aaac0.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter.detach|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$ConnAdapter|] @type virtual;
#L0aaac6.   v1:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aaaca.   if v1 == 0 then goto L0aaad8;
#L0aaace.   v1:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]   @type object;
#L0aaad2.   call temp:=  [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry.shutdown|](v1) @signature [|Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:SingleClientConnManager$PoolEntry|] @type virtual;
#L0aaad8.   v4.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]  := v3 @type object;
#L0aaadc.   return @void ;
#L0aaade.   v0:= Exception  @type object;
#L0aaae0.   v1:= v4.[|org:apache:http:impl:conn:SingleClientConnManager.log|]   @type object;
#L0aaae4.   v2:= "Problem while shutting down manager." @type (object, string);
#L0aaae8.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aaaee.   v4.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]  := v3 @type object;
#L0aaaf2.   goto L0aaadc;
#L0aaaf4.   v1:= Exception  @type object;
#L0aaaf6.   v4.[|org:apache:http:impl:conn:SingleClientConnManager.uniquePoolEntry|]  := v3 @type object;
#L0aaafa.   throw v1;
  catch  [|java:io:IOException|] @[L0aaac6..L0aaad8] goto L0aaade;
  catch  [|any|] @[L0aaac6..L0aaad8] goto L0aaaf4;
  catch  [|any|] @[L0aaae0..L0aaaee] goto L0aaaf4;

   }
record [|org:apache:http:impl:conn:Wire|]  @type class @AccessFlag PUBLIC  {
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:Wire.log|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.<init>|] ([|org:apache:http:impl:conn:Wire|] v0 @type (this), [|org:apache:commons:logging:Log|] v1 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.<init>:(Lorg/apache/commons/logging/Log;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aab24.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aab2a.   v0.[|org:apache:http:impl:conn:Wire.log|]  := v1 @type object;
#L0aab2e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.wire|] ([|org:apache:http:impl:conn:Wire|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|java:io:InputStream|] v8 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0aab40.   v5:= 34  @length 16;
#L0aab44.   v4:= 0  @length 4;
#L0aab46.   v0:= new [|java:lang:StringBuilder|];
#L0aab4a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aab50.   call temp:=  [|java:io:InputStream.read|](v8) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0aab56.   v1:= temp;
#L0aab58.   v2:= -1  @length 4;
#L0aab5a.   if v1 == v2 then goto L0aabec;
#L0aab5e.   v2:= 13  @length 16;
#L0aab62.   if v1 != v2 then goto L0aab72;
#L0aab66.   v2:= "[\\r]" @type (object, string);
#L0aab6a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aab70.   goto L0aab50;
#L0aab72.   v2:= 10  @length 16;
#L0aab76.   if v1 != v2 then goto L0aabae;
#L0aab7a.   v2:= "[\\n]\"" @type (object, string);
#L0aab7e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aab84.   v2:= "\"" @type (object, string);
#L0aab88.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v4, v2) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aab8e.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v4, v7) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aab94.   v2:= v6.[|org:apache:http:impl:conn:Wire.log|]   @type object;
#L0aab98.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aab9e.   v3:= temp  @type object;
#L0aaba0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aaba6.   call temp:=  [|java:lang:StringBuilder.setLength|](v0, v4) @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabac.   goto L0aab50;
#L0aabae.   v2:= 32  @length 16;
#L0aabb2.   if v1 < v2 then goto L0aabbe;
#L0aabb6.   v2:= 127  @length 16;
#L0aabba.   if v1 <= v2 then goto L0aabe2;
#L0aabbe.   v2:= "[0x" @type (object, string);
#L0aabc2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabc8.   call temp:=  [|java:lang:Integer.toHexString|](v1) @signature [|Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0aabce.   v2:= temp  @type object;
#L0aabd0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabd6.   v2:= "]" @type (object, string);
#L0aabda.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabe0.   goto L0aab50;
#L0aabe2.   v2:= (char)v1  @type i2c;
#L0aabe4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabea.   goto L0aab50;
#L0aabec.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabf2.   v2:= temp;
#L0aabf4.   if v2 <= 0 then goto L0aac1c;
#L0aabf8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aabfe.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v4, v5) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aac04.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v4, v7) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aac0a.   v2:= v6.[|org:apache:http:impl:conn:Wire.log|]   @type object;
#L0aac0e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aac14.   v3:= temp  @type object;
#L0aac16.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aac1c.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:Wire.enabled|] ([|org:apache:http:impl:conn:Wire|] v1 @type (this)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.enabled:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aac30.   v0:= v1.[|org:apache:http:impl:conn:Wire.log|]   @type object;
#L0aac34.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v0) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aac3a.   v0:= temp;
#L0aac3c.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.input|] ([|org:apache:http:impl:conn:Wire|] v3 @type (this), [|int|] v4) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.input:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aac50.   v0:= 1  @length 4;
#L0aac52.   v0:= new [|byte|][v0];
#L0aac56.   v1:= 0  @length 4;
#L0aac58.   v2:= (byte)v4  @type i2b;
#L0aac5a.   v0[v1]:= v2  @byte;
#L0aac5e.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v3, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.input:([B)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0aac64.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.input|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.input:(Ljava/io/InputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aac78.   if v3 != 0 then goto L0aac8c;
#L0aac7c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aac80.   v1:= "Input may not be null" @type (object, string);
#L0aac84.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aac8a.   throw v0;
#L0aac8c.   v0:= "<< " @type (object, string);
#L0aac90.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v3) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aac96.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.input|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.input:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aaca8.   if v3 != 0 then goto L0aacbc;
#L0aacac.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aacb0.   v1:= "Input may not be null" @type (object, string);
#L0aacb4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aacba.   throw v0;
#L0aacbc.   call temp:=  [|java:lang:String.getBytes|](v3) @signature [|Ljava/lang/String;.getBytes:()[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aacc2.   v0:= temp  @type object;
#L0aacc4.   call temp:=  [|org:apache:http:impl:conn:Wire.input|](v2, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.input:([B)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0aacca.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.input|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|byte|][] v3) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.input:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aacdc.   if v3 != 0 then goto L0aacf0;
#L0aace0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aace4.   v1:= "Input may not be null" @type (object, string);
#L0aace8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aacee.   throw v0;
#L0aacf0.   v0:= "<< " @type (object, string);
#L0aacf4.   v1:= new [|java:io:ByteArrayInputStream|];
#L0aacf8.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v3) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0aacfe.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v1) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aad04.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.input|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.input:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aad18.   if v3 != 0 then goto L0aad2c;
#L0aad1c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aad20.   v1:= "Input may not be null" @type (object, string);
#L0aad24.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aad2a.   throw v0;
#L0aad2c.   v0:= "<< " @type (object, string);
#L0aad30.   v1:= new [|java:io:ByteArrayInputStream|];
#L0aad34.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v3, v4, v5) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([BII)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0aad3a.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v1) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aad40.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.output|] ([|org:apache:http:impl:conn:Wire|] v3 @type (this), [|int|] v4) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.output:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aad54.   v0:= 1  @length 4;
#L0aad56.   v0:= new [|byte|][v0];
#L0aad5a.   v1:= 0  @length 4;
#L0aad5c.   v2:= (byte)v4  @type i2b;
#L0aad5e.   v0[v1]:= v2  @byte;
#L0aad62.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v3, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.output:([B)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0aad68.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.output|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.output:(Ljava/io/InputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aad7c.   if v3 != 0 then goto L0aad90;
#L0aad80.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aad84.   v1:= "Output may not be null" @type (object, string);
#L0aad88.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aad8e.   throw v0;
#L0aad90.   v0:= ">> " @type (object, string);
#L0aad94.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v3) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aad9a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.output|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.output:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aadac.   if v3 != 0 then goto L0aadc0;
#L0aadb0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aadb4.   v1:= "Output may not be null" @type (object, string);
#L0aadb8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aadbe.   throw v0;
#L0aadc0.   call temp:=  [|java:lang:String.getBytes|](v3) @signature [|Ljava/lang/String;.getBytes:()[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aadc6.   v0:= temp  @type object;
#L0aadc8.   call temp:=  [|org:apache:http:impl:conn:Wire.output|](v2, v0) @signature [|Lorg/apache/http/impl/conn/Wire;.output:([B)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type virtual;
#L0aadce.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.output|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|byte|][] v3) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.output:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aade0.   if v3 != 0 then goto L0aadf4;
#L0aade4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aade8.   v1:= "Output may not be null" @type (object, string);
#L0aadec.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aadf2.   throw v0;
#L0aadf4.   v0:= ">> " @type (object, string);
#L0aadf8.   v1:= new [|java:io:ByteArrayInputStream|];
#L0aadfc.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v3) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0aae02.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v1) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aae08.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:Wire.output|] ([|org:apache:http:impl:conn:Wire|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|org:apache:http:impl:conn:Wire|] @signature [|Lorg/apache/http/impl/conn/Wire;.output:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aae1c.   if v3 != 0 then goto L0aae30;
#L0aae20.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aae24.   v1:= "Output may not be null" @type (object, string);
#L0aae28.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aae2e.   throw v0;
#L0aae30.   v0:= ">> " @type (object, string);
#L0aae34.   v1:= new [|java:io:ByteArrayInputStream|];
#L0aae38.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v3, v4, v5) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([BII)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L0aae3e.   call temp:=  [|org:apache:http:impl:conn:Wire.wire|](v2, v0, v1) @signature [|Lorg/apache/http/impl/conn/Wire;.wire:(Ljava/lang/String;Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:impl:conn:Wire|] @type direct;
#L0aae44.   return @void ;

   }
record [|org:apache:http:impl:conn:tsccm:RefQueueHandler|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RefQueueHandler.handleReference|] ([|java:lang:ref:Reference|] v0 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RefQueueHandler|] @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;.handleReference:(Ljava/lang/ref/Reference;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:conn:tsccm:AbstractConnPool|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:impl:conn:tsccm:RefQueueHandler|] {
      [|org:apache:http:impl:conn:IdleConnectionHandler|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.idleConnHandler|]    @AccessFlag PROTECTED;
      [|boolean|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.isShutDown|]    @AccessFlag PROTECTED_VOLATILE;
      [|java:util:Set|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.issuedConnections|]    @AccessFlag PROTECTED;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.log|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.numConnections|]    @AccessFlag PROTECTED;
      [|java:util:concurrent:locks:Lock|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]    @AccessFlag PROTECTED_FINAL;
      [|java:lang:ref:ReferenceQueue|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.refQueue|]    @AccessFlag PROTECTED;
      [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.refWorker|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.<init>|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0aae58.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aae5e.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0aae64.   v1:= temp  @type object;
#L0aae66.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v1) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0aae6c.   v1:= temp  @type object;
#L0aae6e.   v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.log|]  := v1 @type object;
#L0aae72.   v1:= new [|java:util:HashSet|];
#L0aae76.   call temp:=  [|java:util:HashSet.<init>|](v1) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0aae7c.   v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.issuedConnections|]  := v1 @type object;
#L0aae80.   v1:= new [|org:apache:http:impl:conn:IdleConnectionHandler|];
#L0aae84.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type direct;
#L0aae8a.   v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.idleConnHandler|]  := v1 @type object;
#L0aae8e.   v0:= 0  @length 4;
#L0aae90.   v1:= new [|java:util:concurrent:locks:ReentrantLock|];
#L0aae94.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v1, v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L0aae9a.   v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]  := v1 @type object;
#L0aae9e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeConnection|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v3 @type (this), [|org:apache:http:conn:OperatedClientConnection|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aaeb0.   if v4 == 0 then goto L0aaeba;
#L0aaeb4.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.close|](v4) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aaeba.   return @void ;
#L0aaebc.   v0:= Exception  @type object;
#L0aaebe.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.log|]   @type object;
#L0aaec2.   v2:= "I/O error closing connection" @type (object, string);
#L0aaec6.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aaecc.   goto L0aaeba;
  catch  [|java:io:IOException|] @[L0aaeb4..L0aaeba] goto L0aaebc;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeExpiredConnections|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeExpiredConnections:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aaef0.   v0:= v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaef4.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaefa.   v0:= v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.idleConnHandler|]   @type object;
#L0aaefe.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.closeExpiredConnections|](v0) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.closeExpiredConnections:()V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0aaf04.   v0:= v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaf08.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaf0e.   return @void ;
#L0aaf10.   v0:= Exception  @type object;
#L0aaf12.   v1:= v2.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaf16.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaf1c.   throw v0;
  catch  [|any|] @[L0aaefa..L0aaf04] goto L0aaf10;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeIdleConnections|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v3 @type (this), [|long|] v4, [|java:util:concurrent:TimeUnit|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aaf3c.   if v6 != 0 then goto L0aaf50;
#L0aaf40.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aaf44.   v1:= "Time unit must not be null." @type (object, string);
#L0aaf48.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aaf4e.   throw v0;
#L0aaf50.   v0:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaf54.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaf5a.   v0:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.idleConnHandler|]   @type object;
#L0aaf5e.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v6, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0aaf64.   v1:= temp  @type wide;
#L0aaf66.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.closeIdleConnections|](v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.closeIdleConnections:(J)V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0aaf6c.   v0:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaf70.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaf76.   return @void ;
#L0aaf78.   v0:= Exception  @type object;
#L0aaf7a.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaf7e.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaf84.   throw v0;
  catch  [|any|] @[L0aaf5a..L0aaf6c] goto L0aaf78;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.deleteClosedConnections|] () @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.deleteClosedConnections:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.enableConnectionGC|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v3 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.enableConnectionGC:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aafa4.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refQueue|]   @type object;
#L0aafa8.   if v1 == 0 then goto L0aafbc;
#L0aafac.   v1:= new [|java:lang:IllegalStateException|];
#L0aafb0.   v2:= "Connection GC already enabled." @type (object, string);
#L0aafb4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0aafba.   throw v1;
#L0aafbc.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aafc0.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aafc6.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.numConnections|] ;
#L0aafca.   if v1 <= 0 then goto L0aafec;
#L0aafce.   v1:= new [|java:lang:IllegalStateException|];
#L0aafd2.   v2:= "Pool already in use." @type (object, string);
#L0aafd6.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0aafdc.   throw v1;
#L0aafde.   v1:= Exception  @type object;
#L0aafe0.   v2:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aafe4.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aafea.   throw v1;
#L0aafec.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0aaff0.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0aaff6.   v1:= new [|java:lang:ref:ReferenceQueue|];
#L0aaffa.   call temp:=  [|java:lang:ref:ReferenceQueue.<init>|](v1) @signature [|Ljava/lang/ref/ReferenceQueue;.<init>:()V|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type direct;
#L0ab000.   v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refQueue|]  := v1 @type object;
#L0ab004.   v1:= new [|org:apache:http:impl:conn:tsccm:RefQueueWorker|];
#L0ab008.   v2:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refQueue|]   @type object;
#L0ab00c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RefQueueWorker.<init>|](v1, v2, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.<init>:(Ljava/lang/ref/ReferenceQueue;Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @type direct;
#L0ab012.   v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refWorker|]  := v1 @type object;
#L0ab016.   v0:= new [|java:lang:Thread|];
#L0ab01a.   v1:= v3.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refWorker|]   @type object;
#L0ab01e.   call temp:=  [|java:lang:Thread.<init>|](v0, v1) @signature [|Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L0ab024.   v1:= 1  @length 4;
#L0ab026.   call temp:=  [|java:lang:Thread.setDaemon|](v0, v1) @signature [|Ljava/lang/Thread;.setDaemon:(Z)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ab02c.   v1:= new [|java:lang:StringBuilder|];
#L0ab030.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab036.   v2:= "RefQueueWorker@" @type (object, string);
#L0ab03a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab040.   v1:= temp  @type object;
#L0ab042.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab048.   v1:= temp  @type object;
#L0ab04a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab050.   v1:= temp  @type object;
#L0ab052.   call temp:=  [|java:lang:Thread.setName|](v0, v1) @signature [|Ljava/lang/Thread;.setName:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ab058.   call temp:=  [|java:lang:Thread.start|](v0) @signature [|Ljava/lang/Thread;.start:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ab05e.   return @void ;
  catch  [|any|] @[L0aafc6..L0aafde] goto L0aafde;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.freeEntry|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v0 @type (object), [|boolean|] v1, [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.getEntry|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|long|] v4, [|java:util:concurrent:TimeUnit|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.getEntry:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ab07c.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.requestPoolEntry|](v1, v2, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.requestPoolEntry:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ab082.   v0:= temp  @type object;
#L0ab084.   call temp:=  [|org:apache:http:impl:conn:tsccm:PoolEntryRequest.getPoolEntry|](v0, v4, v5, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;.getPoolEntry:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] @type interface;
#L0ab08a.   v0:= temp  @type object;
#L0ab08c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.handleLostEntry|] ([|org:apache:http:conn:routing:HttpRoute|] v0 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.handleLostEntry:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.handleReference|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v5 @type (this), [|java:lang:ref:Reference|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.handleReference:(Ljava/lang/ref/Reference;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ab0a0.   v2:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab0a4.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab0aa.   v2:= instanceof @varname v6 @type [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|];
#L0ab0ae.   if v2 == 0 then goto L0ab114;
#L0ab0b2.   v2:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.issuedConnections|]   @type object;
#L0ab0b6.   call temp:=  [|java:util:Set.remove|](v2, v6) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0ab0bc.   v0:= temp;
#L0ab0be.   if v0 == 0 then goto L0ab114;
#L0ab0c2.   v6:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|])v6;
#L0ab0c6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.getRoute|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] @type virtual;
#L0ab0cc.   v1:= temp  @type object;
#L0ab0ce.   v2:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.log|]   @type object;
#L0ab0d2.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab0d8.   v2:= temp;
#L0ab0da.   if v2 == 0 then goto L0ab10e;
#L0ab0de.   v2:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.log|]   @type object;
#L0ab0e2.   v3:= new [|java:lang:StringBuilder|];
#L0ab0e6.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab0ec.   v4:= "Connection garbage collected. " @type (object, string);
#L0ab0f0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab0f6.   v3:= temp  @type object;
#L0ab0f8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab0fe.   v3:= temp  @type object;
#L0ab100.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab106.   v3:= temp  @type object;
#L0ab108.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab10e.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.handleLostEntry|](v5, v1) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.handleLostEntry:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ab114.   v2:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab118.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab11e.   return @void ;
#L0ab120.   v2:= Exception  @type object;
#L0ab122.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab126.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab12c.   throw v2;
  catch  [|any|] @[L0ab0aa..L0ab114] goto L0ab120;

   }
    procedure [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.requestPoolEntry|] ([|org:apache:http:conn:routing:HttpRoute|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.requestPoolEntry:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:AbstractConnPool.shutdown|] ([|org:apache:http:impl:conn:tsccm:AbstractConnPool|] v5 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ab14c.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab150.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab156.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.isShutDown|]   @boolean;
#L0ab15a.   if v3 == 0 then goto L0ab16a;
#L0ab15e.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab162.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab168.   return @void ;
#L0ab16a.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refWorker|]   @type object;
#L0ab16e.   if v3 == 0 then goto L0ab17c;
#L0ab172.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.refWorker|]   @type object;
#L0ab176.   call temp:=  [|org:apache:http:impl:conn:tsccm:RefQueueWorker.shutdown|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @type virtual;
#L0ab17c.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.issuedConnections|]   @type object;
#L0ab180.   call temp:=  [|java:util:Set.iterator|](v3) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0ab186.   v1:= temp  @type object;
#L0ab188.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab18e.   v3:= temp;
#L0ab190.   if v3 == 0 then goto L0ab1d4;
#L0ab194.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab19a.   v2:= temp  @type object;
#L0ab19c.   v2:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|])v2;
#L0ab1a0.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab1a6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.get|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;.get:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] @type virtual;
#L0ab1ac.   v0:= temp  @type object;
#L0ab1ae.   v0:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v0;
#L0ab1b2.   if v0 == 0 then goto L0ab188;
#L0ab1b6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab1bc.   v3:= temp  @type object;
#L0ab1be.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeConnection|](v5, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ab1c4.   goto L0ab188;
#L0ab1c6.   v3:= Exception  @type object;
#L0ab1c8.   v4:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab1cc.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab1d2.   throw v3;
#L0ab1d4.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.idleConnHandler|]   @type object;
#L0ab1d8.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.removeAll|](v3) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.removeAll:()V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0ab1de.   v3:= 1  @length 4;
#L0ab1e0.   v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.isShutDown|]  := v3 @boolean;
#L0ab1e4.   v3:= v5.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.poolLock|]   @type object;
#L0ab1e8.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab1ee.   goto L0ab168;
  catch  [|any|] @[L0ab156..L0ab15a] goto L0ab1c6;
  catch  [|any|] @[L0ab16a..L0ab1c4] goto L0ab1c6;
  catch  [|any|] @[L0ab1d4..L0ab1e4] goto L0ab1c6;

   }
record [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:conn:AbstractPoolEntry|] {
      [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.reference|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.<init>|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v2 @type (this), [|org:apache:http:conn:ClientConnectionOperator|] v3 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v4 @type (object), [|java:lang:ref:ReferenceQueue|] v5 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/ref/ReferenceQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ab21c.   call temp:=  [|org:apache:http:impl:conn:AbstractPoolEntry.<init>|](v2, v3, v4) @signature [|Lorg/apache/http/impl/conn/AbstractPoolEntry;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPoolEntry|] @type direct;
#L0ab222.   if v4 != 0 then goto L0ab236;
#L0ab226.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ab22a.   v1:= "HTTP route may not be null" @type (object, string);
#L0ab22e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ab234.   throw v0;
#L0ab236.   v0:= new [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|];
#L0ab23a.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.<init>|](v0, v2, v5) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;.<init>:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] @type direct;
#L0ab240.   v2.[|org:apache:http:impl:conn:tsccm:BasicPoolEntry.reference|]  := v0 @type object;
#L0ab244.   return @void ;

   }
    procedure [|org:apache:http:conn:OperatedClientConnection|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0ab258.   v0:= v1.[|org:apache:http:impl:conn:AbstractPoolEntry.connection|]   @type object;
#L0ab25c.   return v0  @type object;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0ab270.   v0:= v1.[|org:apache:http:impl:conn:AbstractPoolEntry.route|]   @type object;
#L0ab274.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getWeakRef|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getWeakRef:()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0ab288.   v0:= v1.[|org:apache:http:impl:conn:tsccm:BasicPoolEntry.reference|]   @type object;
#L0ab28c.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|]  @type class @AccessFlag PUBLIC  extends [|java:lang:ref:WeakReference|] {
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.route|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.<init>|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] v2 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v3 @type (object), [|java:lang:ref:ReferenceQueue|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;.<init>:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;Ljava/lang/ref/ReferenceQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ab2a0.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v2, v3, v4) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L0ab2a6.   if v3 != 0 then goto L0ab2ba;
#L0ab2aa.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ab2ae.   v1:= "Pool entry must not be null." @type (object, string);
#L0ab2b2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ab2b8.   throw v0;
#L0ab2ba.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab2c0.   v0:= temp  @type object;
#L0ab2c2.   v2.[|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.route|]  := v0 @type object;
#L0ab2c6.   return @void ;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.getRoute|] ([|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ab2d8.   v0:= v1.[|org:apache:http:impl:conn:tsccm:BasicPoolEntryRef.route|]   @type object;
#L0ab2dc.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] {
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.<init>|] ([|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] v0 @type (this), [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (object), [|org:apache:http:impl:conn:AbstractPoolEntry|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.<init>:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0ab2f0.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.<init>:(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type direct;
#L0ab2f6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.markReusable|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.markReusable:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0ab2fc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.detach|] ([|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] v0 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.detach:()V|] @Access PROTECTED {
      local temp ;
      
#L0ab310.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.detach|](v0) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type super;
#L0ab316.   return @void ;

   }
    procedure [|org:apache:http:conn:ClientConnectionManager|] [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getManager|] ([|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ab328.   call temp:=  [|org:apache:http:impl:conn:AbstractPooledConnAdapter.getManager|](v1) @signature [|Lorg/apache/http/impl/conn/AbstractPooledConnAdapter;.getManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:conn:AbstractPooledConnAdapter|] @type super;
#L0ab32e.   v0:= temp  @type object;
#L0ab330.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:conn:AbstractPoolEntry|] [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|] ([|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ab344.   v0:= v1.[|org:apache:http:impl:conn:AbstractPooledConnAdapter.poolEntry|]   @type object;
#L0ab348.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:PoolEntryRequest.abortRequest|] () @owner [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] @signature [|Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;.abortRequest:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:PoolEntryRequest.getPoolEntry|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] @signature [|Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;.getPoolEntry:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|]  @type class @AccessFlag  extends  [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] {
      [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$aborter|]    @AccessFlag FINAL_SYNTHETIC;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$route|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:lang:Object|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$state|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.<init>|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] v0 @type (this), [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v1 @type (object), [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] v2 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute$1;.<init>:(Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0ab35c.   v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]  := v1 @type object;
#L0ab360.   v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$aborter|]  := v2 @type object;
#L0ab364.   v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$route|]  := v3 @type object;
#L0ab368.   v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$state|]  := v4 @type object;
#L0ab36c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ab372.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.abortRequest|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute$1;.abortRequest:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ab384.   v0:= v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]   @type object;
#L0ab388.   v0:= v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab38c.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab392.   v0:= v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$aborter|]   @type object;
#L0ab396.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.abort|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.abort:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @type virtual;
#L0ab39c.   v0:= v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]   @type object;
#L0ab3a0.   v0:= v0.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab3a4.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab3aa.   return @void ;
#L0ab3ac.   v0:= Exception  @type object;
#L0ab3ae.   v1:= v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]   @type object;
#L0ab3b2.   v1:= v1.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab3b6.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab3bc.   throw v0;
  catch  [|any|] @[L0ab392..L0ab39c] goto L0ab3ac;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.getPoolEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] v7 @type (this), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute$1;.getPoolEntry:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ab3dc.   v0:= v7.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.this$0|]   @type object;
#L0ab3e0.   v1:= v7.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$route|]   @type object;
#L0ab3e4.   v2:= v7.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$state|]   @type object;
#L0ab3e8.   v6:= v7.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.val$aborter|]   @type object;
#L0ab3ec.   v3:= v8  @type wide;
#L0ab3ee.   v5:= v10  @type object;
#L0ab3f0.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getEntryBlocking|](v0, v1, v2, v3, v4, v5, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getEntryBlocking:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab3f6.   v0:= temp  @type object;
#L0ab3f8.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] {
      [|org:apache:http:conn:params:ConnPerRoute|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.connPerRoute|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Queue|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]    @AccessFlag PROTECTED;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.maxTotalConnections|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.operator|]    @AccessFlag PROTECTED_FINAL;
      [|java:util:Map|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]    @AccessFlag PROTECTED_FINAL;
      [|java:util:Queue|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.<init>|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v2 @type (this), [|org:apache:http:conn:ClientConnectionOperator|] v3 @type (object), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/params/HttpParams;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ab40c.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.<init>|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.<init>:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type direct;
#L0ab412.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ab418.   v0:= temp  @type object;
#L0ab41a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0ab420.   v0:= temp  @type object;
#L0ab422.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]  := v0 @type object;
#L0ab426.   if v3 != 0 then goto L0ab43a;
#L0ab42a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ab42e.   v1:= "Connection operator may not be null" @type (object, string);
#L0ab432.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ab438.   throw v0;
#L0ab43a.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.operator|]  := v3 @type object;
#L0ab43e.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createFreeConnQueue|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createFreeConnQueue:()Ljava/util/Queue;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab444.   v0:= temp  @type object;
#L0ab446.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]  := v0 @type object;
#L0ab44a.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createWaitingThreadQueue|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createWaitingThreadQueue:()Ljava/util/Queue;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab450.   v0:= temp  @type object;
#L0ab452.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]  := v0 @type object;
#L0ab456.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createRouteToPoolMap|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createRouteToPoolMap:()Ljava/util/Map;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab45c.   v0:= temp  @type object;
#L0ab45e.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]  := v0 @type object;
#L0ab462.   call temp:=  [|org:apache:http:conn:params:ConnManagerParams.getMaxTotalConnections|](v4) @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getMaxTotalConnections:(Lorg/apache/http/params/HttpParams;)I|] @classDescriptor [|org:apache:http:conn:params:ConnManagerParams|] @type static;
#L0ab468.   v0:= temp;
#L0ab46a.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.maxTotalConnections|]  := v0;
#L0ab46e.   call temp:=  [|org:apache:http:conn:params:ConnManagerParams.getMaxConnectionsPerRoute|](v4) @signature [|Lorg/apache/http/conn/params/ConnManagerParams;.getMaxConnectionsPerRoute:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/params/ConnPerRoute;|] @classDescriptor [|org:apache:http:conn:params:ConnManagerParams|] @type static;
#L0ab474.   v0:= temp  @type object;
#L0ab476.   v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.connPerRoute|]  := v0 @type object;
#L0ab47a.   return @void ;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v4 @type (this), [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v5 @type (object), [|org:apache:http:conn:ClientConnectionOperator|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createEntry:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Lorg/apache/http/conn/ClientConnectionOperator;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ab48c.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab490.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v1) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab496.   v1:= temp;
#L0ab498.   if v1 == 0 then goto L0ab4e0;
#L0ab49c.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab4a0.   v2:= new [|java:lang:StringBuilder|];
#L0ab4a4.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab4aa.   v3:= "Creating new connection [" @type (object, string);
#L0ab4ae.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab4b4.   v2:= temp  @type object;
#L0ab4b6.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v5) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab4bc.   v3:= temp  @type object;
#L0ab4be.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab4c4.   v2:= temp  @type object;
#L0ab4c6.   v3:= "]" @type (object, string);
#L0ab4ca.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab4d0.   v2:= temp  @type object;
#L0ab4d2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab4d8.   v2:= temp  @type object;
#L0ab4da.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab4e0.   v0:= new [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|];
#L0ab4e4.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v5) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab4ea.   v1:= temp  @type object;
#L0ab4ec.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.refQueue|]   @type object;
#L0ab4f0.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.<init>|](v0, v6, v1, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type direct;
#L0ab4f6.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab4fa.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab500.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.createdEntry|](v5, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.createdEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab506.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0ab50a.   v1:= v1 + 1;
#L0ab50e.   v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|]  := v1;
#L0ab512.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.issuedConnections|]   @type object;
#L0ab516.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getWeakRef|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getWeakRef:()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab51c.   v2:= temp  @type object;
#L0ab51e.   call temp:=  [|java:util:Set.add|](v1, v2) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0ab524.   v1:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab528.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab52e.   return v0  @type object;
#L0ab530.   v1:= Exception  @type object;
#L0ab532.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab536.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab53c.   throw v1;
  catch  [|any|] @[L0ab500..L0ab524] goto L0ab530;

   }
    procedure [|java:util:Queue|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createFreeConnQueue|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createFreeConnQueue:()Ljava/util/Queue;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ab55c.   v0:= new [|java:util:LinkedList|];
#L0ab560.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L0ab566.   return v0  @type object;

   }
    procedure [|java:util:Map|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createRouteToPoolMap|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createRouteToPoolMap:()Ljava/util/Map;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ab578.   v0:= new [|java:util:HashMap|];
#L0ab57c.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ab582.   return v0  @type object;

   }
    procedure [|java:util:Queue|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createWaitingThreadQueue|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createWaitingThreadQueue:()Ljava/util/Queue;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ab594.   v0:= new [|java:util:LinkedList|];
#L0ab598.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L0ab59e.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteClosedConnections|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v4 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteClosedConnections:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ab5b0.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab5b4.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab5ba.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0ab5be.   call temp:=  [|java:util:Queue.iterator|](v2) @signature [|Ljava/util/Queue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ab5c4.   v1:= temp  @type object;
#L0ab5c6.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab5cc.   v2:= temp;
#L0ab5ce.   if v2 == 0 then goto L0ab60e;
#L0ab5d2.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab5d8.   v0:= temp  @type object;
#L0ab5da.   v0:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v0;
#L0ab5de.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab5e4.   v2:= temp  @type object;
#L0ab5e6.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.isOpen|](v2) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.isOpen:()Z|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0ab5ec.   v2:= temp;
#L0ab5ee.   if v2 != 0 then goto L0ab5c6;
#L0ab5f2.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ab5f8.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteEntry|](v4, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab5fe.   goto L0ab5c6;
#L0ab600.   v2:= Exception  @type object;
#L0ab602.   v3:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab606.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab60c.   throw v2;
#L0ab60e.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab612.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab618.   return @void ;
  catch  [|any|] @[L0ab5ba..L0ab5fe] goto L0ab600;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v5 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ab638.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab63e.   v1:= temp  @type object;
#L0ab640.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab644.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab64a.   v2:= temp;
#L0ab64c.   if v2 == 0 then goto L0ab6a8;
#L0ab650.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab654.   v3:= new [|java:lang:StringBuilder|];
#L0ab658.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab65e.   v4:= "Deleting connection [" @type (object, string);
#L0ab662.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab668.   v3:= temp  @type object;
#L0ab66a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab670.   v3:= temp  @type object;
#L0ab672.   v4:= "][" @type (object, string);
#L0ab676.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab67c.   v3:= temp  @type object;
#L0ab67e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getState|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getState:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab684.   v4:= temp  @type object;
#L0ab686.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab68c.   v3:= temp  @type object;
#L0ab68e.   v4:= "]" @type (object, string);
#L0ab692.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab698.   v3:= temp  @type object;
#L0ab69a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab6a0.   v3:= temp  @type object;
#L0ab6a2.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab6a8.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab6ac.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab6b2.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab6b8.   v2:= temp  @type object;
#L0ab6ba.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.closeConnection|](v5, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab6c0.   v2:= 1  @length 4;
#L0ab6c2.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|](v5, v1, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab6c8.   v0:= temp  @type object;
#L0ab6ca.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.deleteEntry|](v0, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.deleteEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab6d0.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0ab6d4.   v2:= v2 + -1;
#L0ab6d8.   v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|]  := v2;
#L0ab6dc.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.isUnused|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.isUnused:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab6e2.   v2:= temp;
#L0ab6e4.   if v2 == 0 then goto L0ab6f2;
#L0ab6e8.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]   @type object;
#L0ab6ec.   call temp:=  [|java:util:Map.remove|](v2, v1) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ab6f2.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.idleConnHandler|]   @type object;
#L0ab6f6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab6fc.   v3:= temp  @type object;
#L0ab6fe.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.remove|](v2, v3) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.remove:(Lorg/apache/http/HttpConnection;)Z|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0ab704.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab708.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab70e.   return @void ;
#L0ab710.   v2:= Exception  @type object;
#L0ab712.   v3:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab716.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab71c.   throw v2;
  catch  [|any|] @[L0ab6b2..L0ab704] goto L0ab710;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteLeastUsedEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v3 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteLeastUsedEntry:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ab73c.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab740.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab746.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0ab74a.   call temp:=  [|java:util:Queue.remove|](v1) @signature [|Ljava/util/Queue;.remove:()Ljava/lang/Object;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ab750.   v0:= temp  @type object;
#L0ab752.   v0:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v0;
#L0ab756.   if v0 == 0 then goto L0ab76c;
#L0ab75a.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteEntry|](v3, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab760.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab764.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab76a.   return @void ;
#L0ab76c.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab770.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v1) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab776.   v1:= temp;
#L0ab778.   if v1 == 0 then goto L0ab760;
#L0ab77c.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab780.   v2:= "No free connection to delete." @type (object, string);
#L0ab784.   call temp:=  [|org:apache:commons:logging:Log.debug|](v1, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab78a.   goto L0ab760;
#L0ab78c.   v1:= Exception  @type object;
#L0ab78e.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab792.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab798.   throw v1;
  catch  [|any|] @[L0ab73c..L0ab760] goto L0ab78c;
  catch  [|any|] @[L0ab76c..L0ab78a] goto L0ab78c;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v5 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v6 @type (object), [|boolean|] v7, [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ab7c0.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab7c6.   v1:= temp  @type object;
#L0ab7c8.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab7cc.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab7d2.   v2:= temp;
#L0ab7d4.   if v2 == 0 then goto L0ab830;
#L0ab7d8.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab7dc.   v3:= new [|java:lang:StringBuilder|];
#L0ab7e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab7e6.   v4:= "Freeing connection [" @type (object, string);
#L0ab7ea.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab7f0.   v3:= temp  @type object;
#L0ab7f2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab7f8.   v3:= temp  @type object;
#L0ab7fa.   v4:= "][" @type (object, string);
#L0ab7fe.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab804.   v3:= temp  @type object;
#L0ab806.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getState|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getState:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab80c.   v4:= temp  @type object;
#L0ab80e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab814.   v3:= temp  @type object;
#L0ab816.   v4:= "]" @type (object, string);
#L0ab81a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab820.   v3:= temp  @type object;
#L0ab822.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab828.   v3:= temp  @type object;
#L0ab82a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab830.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab834.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab83a.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.isShutDown|]   @boolean;
#L0ab83e.   if v2 == 0 then goto L0ab85c;
#L0ab842.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab848.   v2:= temp  @type object;
#L0ab84a.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.closeConnection|](v5, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab850.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab854.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab85a.   return @void ;
#L0ab85c.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.issuedConnections|]   @type object;
#L0ab860.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getWeakRef|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getWeakRef:()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab866.   v3:= temp  @type object;
#L0ab868.   call temp:=  [|java:util:Set.remove|](v2, v3) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0ab86e.   v2:= 1  @length 4;
#L0ab870.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|](v5, v1, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab876.   v0:= temp  @type object;
#L0ab878.   if v7 == 0 then goto L0ab8b0;
#L0ab87c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntry|](v0, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab882.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0ab886.   call temp:=  [|java:util:Queue.add|](v2, v6) @signature [|Ljava/util/Queue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ab88c.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.idleConnHandler|]   @type object;
#L0ab890.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ab896.   v3:= temp  @type object;
#L0ab898.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.add|](v2, v3, v8, v9, v10) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.add:(Lorg/apache/http/HttpConnection;JLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0ab89e.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.notifyWaitingThread|](v5, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.notifyWaitingThread:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab8a4.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab8a8.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab8ae.   goto L0ab85a;
#L0ab8b0.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.dropEntry|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.dropEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab8b6.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0ab8ba.   v2:= v2 + -1;
#L0ab8be.   v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|]  := v2;
#L0ab8c2.   goto L0ab89e;
#L0ab8c4.   v2:= Exception  @type object;
#L0ab8c6.   v3:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab8ca.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab8d0.   throw v2;
  catch  [|any|] @[L0ab83a..L0ab850] goto L0ab8c4;
  catch  [|any|] @[L0ab85c..L0ab8a4] goto L0ab8c4;
  catch  [|any|] @[L0ab8b0..L0ab8c2] goto L0ab8c4;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getConnectionsInPool|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v3 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getConnectionsInPool:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ab900.   v1:= 0  @length 4;
#L0ab902.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab906.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab90c.   v2:= 0  @length 4;
#L0ab90e.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|](v3, v4, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab914.   v0:= temp  @type object;
#L0ab916.   if v0 == 0 then goto L0ab922;
#L0ab91a.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getEntryCount|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getEntryCount:()I|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ab920.   v1:= temp;
#L0ab922.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab926.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab92c.   return v1;
#L0ab92e.   v1:= Exception  @type object;
#L0ab930.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab934.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab93a.   throw v1;
  catch  [|any|] @[L0ab90e..L0ab920] goto L0ab92e;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getEntryBlocking|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v11 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v12 @type (object), [|java:lang:Object|] v13 @type (object), [|long|] v14, [|java:util:concurrent:TimeUnit|] v16 @type (object), [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] v17 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getEntryBlocking:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0ab958.   v1:= 0  @length 4;
#L0ab95a.   v7:= 0  @length wide16;
#L0ab95e.   v7:= cmp(v14,v7);
#L0ab962.   if v7 <= 0 then goto L0ab986;
#L0ab966.   v1:= new [|java:util:Date|];
#L0ab96a.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0ab970.   v7:= temp  @type wide;
#L0ab972.   v0:= v16  @type object;
#L0ab976.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v0, v14, v15) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L0ab97c.   v9:= temp  @type wide;
#L0ab97e.   v7:= v7 + v9  @type long;
#L0ab980.   call temp:=  [|java:util:Date.<init>|](v1, v7, v8) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ab986.   v2:= 0  @length 4;
#L0ab988.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab98c.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v7) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab992.   v7:= 1  @length 4;
#L0ab994.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|](v11, v12, v7) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ab99a.   v4:= temp  @type object;
#L0ab99c.   v6:= 0  @length 4;
#L0ab99e.   if v2 != 0 then goto L0abaa8;
#L0ab9a2.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.isShutDown|]   @boolean;
#L0ab9a6.   if v7 == 0 then goto L0ab9c8;
#L0ab9aa.   v7:= new [|java:lang:IllegalStateException|];
#L0ab9ae.   v8:= "Connection pool shut down." @type (object, string);
#L0ab9b2.   call temp:=  [|java:lang:IllegalStateException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0ab9b8.   throw v7;
#L0ab9ba.   v7:= Exception  @type object;
#L0ab9bc.   v8:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ab9c0.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v8) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ab9c6.   throw v7;
#L0ab9c8.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab9cc.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ab9d2.   v7:= temp;
#L0ab9d4.   if v7 == 0 then goto L0aba9c;
#L0ab9d8.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ab9dc.   v8:= new [|java:lang:StringBuilder|];
#L0ab9e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ab9e6.   v9:= "Total connections kept alive: " @type (object, string);
#L0ab9ea.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab9f0.   v8:= temp  @type object;
#L0ab9f2.   v9:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0ab9f6.   call temp:=  [|java:util:Queue.size|](v9) @signature [|Ljava/util/Queue;.size:()I|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ab9fc.   v9:= temp;
#L0ab9fe.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba04.   v8:= temp  @type object;
#L0aba06.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba0c.   v8:= temp  @type object;
#L0aba0e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aba14.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0aba18.   v8:= new [|java:lang:StringBuilder|];
#L0aba1c.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aba22.   v9:= "Total issued connections: " @type (object, string);
#L0aba26.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba2c.   v8:= temp  @type object;
#L0aba2e.   v9:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.issuedConnections|]   @type object;
#L0aba32.   call temp:=  [|java:util:Set.size|](v9) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0aba38.   v9:= temp;
#L0aba3a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba40.   v8:= temp  @type object;
#L0aba42.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba48.   v8:= temp  @type object;
#L0aba4a.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aba50.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0aba54.   v8:= new [|java:lang:StringBuilder|];
#L0aba58.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aba5e.   v9:= "Total allocated connection: " @type (object, string);
#L0aba62.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba68.   v8:= temp  @type object;
#L0aba6a.   v9:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0aba6e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba74.   v8:= temp  @type object;
#L0aba76.   v9:= " out of " @type (object, string);
#L0aba7a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba80.   v8:= temp  @type object;
#L0aba82.   v9:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.maxTotalConnections|] ;
#L0aba86.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba8c.   v8:= temp  @type object;
#L0aba8e.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba94.   v8:= temp  @type object;
#L0aba96.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0aba9c.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getFreeEntry|](v11, v4, v13) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getFreeEntry:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abaa2.   v2:= temp  @type object;
#L0abaa4.   if v2 == 0 then goto L0abab4;
#L0abaa8.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abaac.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v7) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abab2.   return v2  @type object;
#L0abab4.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getCapacity|](v4) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getCapacity:()I|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ababa.   v7:= temp;
#L0ababc.   if v7 <= 0 then goto L0abb7a;
#L0abac0.   v3:= 1  @length 4;
#L0abac2.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abac6.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abacc.   v7:= temp;
#L0abace.   if v7 == 0 then goto L0abb5a;
#L0abad2.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abad6.   v8:= new [|java:lang:StringBuilder|];
#L0abada.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abae0.   v9:= "Available capacity: " @type (object, string);
#L0abae4.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abaea.   v8:= temp  @type object;
#L0abaec.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getCapacity|](v4) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getCapacity:()I|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abaf2.   v9:= temp;
#L0abaf4.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abafa.   v8:= temp  @type object;
#L0abafc.   v9:= " out of " @type (object, string);
#L0abb00.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb06.   v8:= temp  @type object;
#L0abb08.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getMaxEntries|](v4) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getMaxEntries:()I|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abb0e.   v9:= temp;
#L0abb10.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb16.   v8:= temp  @type object;
#L0abb18.   v9:= " [" @type (object, string);
#L0abb1c.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb22.   v8:= temp  @type object;
#L0abb24.   call temp:=  [|java:lang:StringBuilder.append|](v8, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb2a.   v8:= temp  @type object;
#L0abb2c.   v9:= "][" @type (object, string);
#L0abb30.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb36.   v8:= temp  @type object;
#L0abb38.   call temp:=  [|java:lang:StringBuilder.append|](v8, v13) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb3e.   v8:= temp  @type object;
#L0abb40.   v9:= "]" @type (object, string);
#L0abb44.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb4a.   v8:= temp  @type object;
#L0abb4c.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb52.   v8:= temp  @type object;
#L0abb54.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abb5a.   if v3 == 0 then goto L0abb7e;
#L0abb5e.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0abb62.   v8:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.maxTotalConnections|] ;
#L0abb66.   if v7 >= v8 then goto L0abb7e;
#L0abb6a.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.operator|]   @type object;
#L0abb6e.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createEntry|](v11, v4, v7) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createEntry:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Lorg/apache/http/conn/ClientConnectionOperator;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abb74.   v2:= temp  @type object;
#L0abb76.   goto L0ab99e;
#L0abb7a.   v3:= 0  @length 4;
#L0abb7c.   goto L0abac2;
#L0abb7e.   if v3 == 0 then goto L0abba8;
#L0abb82.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0abb86.   call temp:=  [|java:util:Queue.isEmpty|](v7) @signature [|Ljava/util/Queue;.isEmpty:()Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0abb8c.   v7:= temp;
#L0abb8e.   if v7 != 0 then goto L0abba8;
#L0abb92.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.deleteLeastUsedEntry|](v11) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.deleteLeastUsedEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abb98.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.operator|]   @type object;
#L0abb9c.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.createEntry|](v11, v4, v7) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.createEntry:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Lorg/apache/http/conn/ClientConnectionOperator;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abba2.   v2:= temp  @type object;
#L0abba4.   goto L0ab99e;
#L0abba8.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abbac.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v7) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abbb2.   v7:= temp;
#L0abbb4.   if v7 == 0 then goto L0abc08;
#L0abbb8.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abbbc.   v8:= new [|java:lang:StringBuilder|];
#L0abbc0.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abbc6.   v9:= "Need to wait for connection [" @type (object, string);
#L0abbca.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbd0.   v8:= temp  @type object;
#L0abbd2.   call temp:=  [|java:lang:StringBuilder.append|](v8, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbd8.   v8:= temp  @type object;
#L0abbda.   v9:= "][" @type (object, string);
#L0abbde.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbe4.   v8:= temp  @type object;
#L0abbe6.   call temp:=  [|java:lang:StringBuilder.append|](v8, v13) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbec.   v8:= temp  @type object;
#L0abbee.   v9:= "]" @type (object, string);
#L0abbf2.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbf8.   v8:= temp  @type object;
#L0abbfa.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abc00.   v8:= temp  @type object;
#L0abc02.   call temp:=  [|org:apache:commons:logging:Log.debug|](v7, v8) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abc08.   if v6 != 0 then goto L0abc2a;
#L0abc0c.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abc10.   call temp:=  [|java:util:concurrent:locks:Lock.newCondition|](v7) @signature [|Ljava/util/concurrent/locks/Lock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abc16.   v7:= temp  @type object;
#L0abc18.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.newWaitingThread|](v11, v7, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.newWaitingThread:(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)Lorg/apache/http/impl/conn/tsccm/WaitingThread;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abc1e.   v6:= temp  @type object;
#L0abc20.   v0:= v17  @type object;
#L0abc24.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.setWaitingThread|](v0, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.setWaitingThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @type virtual;
#L0abc2a.   v5:= 0  @length 4;
#L0abc2c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.queueThread|](v4, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.queueThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abc32.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0abc36.   call temp:=  [|java:util:Queue.add|](v7, v6) @signature [|Ljava/util/Queue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0abc3c.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.await|](v6, v1) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.await:(Ljava/util/Date;)Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type virtual;
#L0abc42.   v5:= temp;
#L0abc44.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.removeThread|](v4, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.removeThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abc4a.   v7:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0abc4e.   call temp:=  [|java:util:Queue.remove|](v7, v6) @signature [|Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0abc54.   if v5 != 0 then goto L0ab99e;
#L0abc58.   if v1 == 0 then goto L0ab99e;
#L0abc5c.   call temp:=  [|java:util:Date.getTime|](v1) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0abc62.   v7:= temp  @type wide;
#L0abc64.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0abc6a.   v9:= temp  @type wide;
#L0abc6c.   v7:= cmp(v7,v9);
#L0abc70.   if v7 > 0 then goto L0ab99e;
#L0abc74.   v7:= new [|org:apache:http:conn:ConnectionPoolTimeoutException|];
#L0abc78.   v8:= "Timeout waiting for connection" @type (object, string);
#L0abc7c.   call temp:=  [|org:apache:http:conn:ConnectionPoolTimeoutException.<init>|](v7, v8) @signature [|Lorg/apache/http/conn/ConnectionPoolTimeoutException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:conn:ConnectionPoolTimeoutException|] @type direct;
#L0abc82.   throw v7;
#L0abc84.   v7:= Exception  @type object;
#L0abc86.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.removeThread|](v4, v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.removeThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abc8c.   v8:= v11.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0abc90.   call temp:=  [|java:util:Queue.remove|](v8, v6) @signature [|Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0abc96.   throw v7;
  catch  [|any|] @[L0ab994..L0ab9ba] goto L0ab9ba;
  catch  [|any|] @[L0ab9c8..L0abaa2] goto L0ab9ba;
  catch  [|any|] @[L0abab4..L0abc2a] goto L0ab9ba;
  catch  [|any|] @[L0abc2c..L0abc42] goto L0abc84;
  catch  [|any|] @[L0abc44..L0abc96] goto L0ab9ba;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getFreeEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v6 @type (this), [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getFreeEntry:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0abcd8.   v1:= 0  @length 4;
#L0abcda.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abcde.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abce4.   v0:= 0  @length 4;
#L0abce6.   if v0 != 0 then goto L0abea0;
#L0abcea.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.allocEntry|](v7, v8) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.allocEntry:(Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abcf0.   v1:= temp  @type object;
#L0abcf2.   if v1 == 0 then goto L0abe32;
#L0abcf6.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abcfa.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abd00.   v3:= temp;
#L0abd02.   if v3 == 0 then goto L0abd5e;
#L0abd06.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abd0a.   v4:= new [|java:lang:StringBuilder|];
#L0abd0e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abd14.   v5:= "Getting free connection [" @type (object, string);
#L0abd18.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd1e.   v4:= temp  @type object;
#L0abd20.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v7) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abd26.   v5:= temp  @type object;
#L0abd28.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd2e.   v4:= temp  @type object;
#L0abd30.   v5:= "][" @type (object, string);
#L0abd34.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd3a.   v4:= temp  @type object;
#L0abd3c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd42.   v4:= temp  @type object;
#L0abd44.   v5:= "]" @type (object, string);
#L0abd48.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd4e.   v4:= temp  @type object;
#L0abd50.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd56.   v4:= temp  @type object;
#L0abd58.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abd5e.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0abd62.   call temp:=  [|java:util:Queue.remove|](v3, v1) @signature [|Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0abd68.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.idleConnHandler|]   @type object;
#L0abd6c.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0abd72.   v4:= temp  @type object;
#L0abd74.   call temp:=  [|org:apache:http:impl:conn:IdleConnectionHandler.remove|](v3, v4) @signature [|Lorg/apache/http/impl/conn/IdleConnectionHandler;.remove:(Lorg/apache/http/HttpConnection;)Z|] @classDescriptor [|org:apache:http:impl:conn:IdleConnectionHandler|] @type virtual;
#L0abd7a.   v2:= temp;
#L0abd7c.   if v2 != 0 then goto L0abe1a;
#L0abd80.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abd84.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abd8a.   v3:= temp;
#L0abd8c.   if v3 == 0 then goto L0abde8;
#L0abd90.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abd94.   v4:= new [|java:lang:StringBuilder|];
#L0abd98.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abd9e.   v5:= "Closing expired free connection [" @type (object, string);
#L0abda2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abda8.   v4:= temp  @type object;
#L0abdaa.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v7) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abdb0.   v5:= temp  @type object;
#L0abdb2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdb8.   v4:= temp  @type object;
#L0abdba.   v5:= "][" @type (object, string);
#L0abdbe.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdc4.   v4:= temp  @type object;
#L0abdc6.   call temp:=  [|java:lang:StringBuilder.append|](v4, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdcc.   v4:= temp  @type object;
#L0abdce.   v5:= "]" @type (object, string);
#L0abdd2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdd8.   v4:= temp  @type object;
#L0abdda.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abde0.   v4:= temp  @type object;
#L0abde2.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abde8.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0abdee.   v3:= temp  @type object;
#L0abdf0.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.closeConnection|](v6, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abdf6.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.dropEntry|](v7) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.dropEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abdfc.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0abe00.   v3:= v3 + -1;
#L0abe04.   v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|]  := v3;
#L0abe08.   goto L0abce6;
#L0abe0c.   v3:= Exception  @type object;
#L0abe0e.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abe12.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abe18.   throw v3;
#L0abe1a.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.issuedConnections|]   @type object;
#L0abe1e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getWeakRef|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getWeakRef:()Lorg/apache/http/impl/conn/tsccm/BasicPoolEntryRef;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0abe24.   v4:= temp  @type object;
#L0abe26.   call temp:=  [|java:util:Set.add|](v3, v4) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0abe2c.   v0:= 1  @length 4;
#L0abe2e.   goto L0abce6;
#L0abe32.   v0:= 1  @length 4;
#L0abe34.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abe38.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abe3e.   v3:= temp;
#L0abe40.   if v3 == 0 then goto L0abce6;
#L0abe44.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0abe48.   v4:= new [|java:lang:StringBuilder|];
#L0abe4c.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abe52.   v5:= "No free connections [" @type (object, string);
#L0abe56.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe5c.   v4:= temp  @type object;
#L0abe5e.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v7) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abe64.   v5:= temp  @type object;
#L0abe66.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe6c.   v4:= temp  @type object;
#L0abe6e.   v5:= "][" @type (object, string);
#L0abe72.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe78.   v4:= temp  @type object;
#L0abe7a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe80.   v4:= temp  @type object;
#L0abe82.   v5:= "]" @type (object, string);
#L0abe86.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe8c.   v4:= temp  @type object;
#L0abe8e.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe94.   v4:= temp  @type object;
#L0abe96.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0abe9c.   goto L0abce6;
#L0abea0.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abea4.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abeaa.   return v1  @type object;
  catch  [|any|] @[L0abcea..L0abe08] goto L0abe0c;
  catch  [|any|] @[L0abe1a..L0abe9c] goto L0abe0c;

   }
    procedure [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v4 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v5 @type (object), [|boolean|] v6) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0abed0.   v1:= 0  @length 4;
#L0abed2.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abed6.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abedc.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]   @type object;
#L0abee0.   call temp:=  [|java:util:Map.get|](v2, v5) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0abee6.   v2:= temp  @type object;
#L0abee8.   v0:= v2  @type object;
#L0abeea.   v0:= ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|])v0;
#L0abeee.   v1:= v0  @type object;
#L0abef0.   if v1 != 0 then goto L0abf0a;
#L0abef4.   if v6 == 0 then goto L0abf0a;
#L0abef8.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.newRouteSpecificPool|](v4, v5) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.newRouteSpecificPool:(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abefe.   v1:= temp  @type object;
#L0abf00.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]   @type object;
#L0abf04.   call temp:=  [|java:util:Map.put|](v2, v5, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0abf0a.   v2:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abf0e.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abf14.   return v1  @type object;
#L0abf16.   v2:= Exception  @type object;
#L0abf18.   v3:= v4.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abf1c.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abf22.   throw v2;
  catch  [|any|] @[L0abedc..L0abf0a] goto L0abf16;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.handleLostEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v3 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.handleLostEntry:(Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0abf40.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abf44.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abf4a.   v1:= 1  @length 4;
#L0abf4c.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getRoutePool|](v3, v4, v1) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getRoutePool:(Lorg/apache/http/conn/routing/HttpRoute;Z)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abf52.   v0:= temp  @type object;
#L0abf54.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.dropEntry|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.dropEntry:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abf5a.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.isUnused|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.isUnused:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0abf60.   v1:= temp;
#L0abf62.   if v1 == 0 then goto L0abf70;
#L0abf66.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]   @type object;
#L0abf6a.   call temp:=  [|java:util:Map.remove|](v1, v4) @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0abf70.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|] ;
#L0abf74.   v1:= v1 + -1;
#L0abf78.   v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.numConnections|]  := v1;
#L0abf7c.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.notifyWaitingThread|](v3, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.notifyWaitingThread:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0abf82.   v1:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abf86.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abf8c.   return @void ;
#L0abf8e.   v1:= Exception  @type object;
#L0abf90.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0abf94.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0abf9a.   throw v1;
  catch  [|any|] @[L0abf4c..L0abf82] goto L0abf8e;

   }
    procedure [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.newRouteSpecificPool|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.newRouteSpecificPool:(Lorg/apache/http/conn/routing/HttpRoute;)Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0abfb8.   v0:= new [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|];
#L0abfbc.   v1:= v2.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.connPerRoute|]   @type object;
#L0abfc0.   call temp:=  [|org:apache:http:conn:params:ConnPerRoute.getMaxForRoute|](v1, v3) @signature [|Lorg/apache/http/conn/params/ConnPerRoute;.getMaxForRoute:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @classDescriptor [|org:apache:http:conn:params:ConnPerRoute|] @type interface;
#L0abfc6.   v1:= temp;
#L0abfc8.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.<init>|](v0, v3, v1) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.<init>:(Lorg/apache/http/conn/routing/HttpRoute;I)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type direct;
#L0abfce.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:conn:tsccm:WaitingThread|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.newWaitingThread|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v1 @type (this), [|java:util:concurrent:locks:Condition|] v2 @type (object), [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v3 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.newWaitingThread:(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)Lorg/apache/http/impl/conn/tsccm/WaitingThread;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0abfe0.   v0:= new [|org:apache:http:impl:conn:tsccm:WaitingThread|];
#L0abfe4.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.<init>|](v0, v2, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.<init>:(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type direct;
#L0abfea.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.notifyWaitingThread|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v5 @type (this), [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v6 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.notifyWaitingThread:(Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0abffc.   v1:= 0  @length 4;
#L0abffe.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac002.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac008.   if v6 == 0 then goto L0ac08a;
#L0ac00c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.hasThread|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.hasThread:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ac012.   v2:= temp;
#L0ac014.   if v2 == 0 then goto L0ac08a;
#L0ac018.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac01c.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac022.   v2:= temp;
#L0ac024.   if v2 == 0 then goto L0ac06c;
#L0ac028.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac02c.   v3:= new [|java:lang:StringBuilder|];
#L0ac030.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac036.   v4:= "Notifying thread waiting on pool [" @type (object, string);
#L0ac03a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac040.   v3:= temp  @type object;
#L0ac042.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ac048.   v4:= temp  @type object;
#L0ac04a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac050.   v3:= temp  @type object;
#L0ac052.   v4:= "]" @type (object, string);
#L0ac056.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac05c.   v3:= temp  @type object;
#L0ac05e.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac064.   v3:= temp  @type object;
#L0ac066.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac06c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.nextThread|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.nextThread:()Lorg/apache/http/impl/conn/tsccm/WaitingThread;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @type virtual;
#L0ac072.   v1:= temp  @type object;
#L0ac074.   if v1 == 0 then goto L0ac07e;
#L0ac078.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.wakeup|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.wakeup:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type virtual;
#L0ac07e.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac082.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac088.   return @void ;
#L0ac08a.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0ac08e.   call temp:=  [|java:util:Queue.isEmpty|](v2) @signature [|Ljava/util/Queue;.isEmpty:()Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac094.   v2:= temp;
#L0ac096.   if v2 != 0 then goto L0ac0ce;
#L0ac09a.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac09e.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac0a4.   v2:= temp;
#L0ac0a6.   if v2 == 0 then goto L0ac0b8;
#L0ac0aa.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac0ae.   v3:= "Notifying thread waiting on any pool" @type (object, string);
#L0ac0b2.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac0b8.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0ac0bc.   call temp:=  [|java:util:Queue.remove|](v2) @signature [|Ljava/util/Queue;.remove:()Ljava/lang/Object;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac0c2.   v2:= temp  @type object;
#L0ac0c4.   v0:= v2  @type object;
#L0ac0c6.   v0:= ([|org:apache:http:impl:conn:tsccm:WaitingThread|])v0;
#L0ac0ca.   v1:= v0  @type object;
#L0ac0cc.   goto L0ac074;
#L0ac0ce.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac0d2.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac0d8.   v2:= temp;
#L0ac0da.   if v2 == 0 then goto L0ac074;
#L0ac0de.   v2:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.log|]   @type object;
#L0ac0e2.   v3:= "Notifying no-one, there are no waiting threads" @type (object, string);
#L0ac0e6.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac0ec.   goto L0ac074;
#L0ac0ee.   v2:= Exception  @type object;
#L0ac0f0.   v3:= v5.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac0f4.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac0fa.   throw v2;
  catch  [|any|] @[L0ac00c..L0ac07e] goto L0ac0ee;
  catch  [|any|] @[L0ac08a..L0ac0ec] goto L0ac0ee;

   }
    procedure [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.requestPoolEntry|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.requestPoolEntry:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac120.   v0:= new [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|];
#L0ac124.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.<init>|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.<init>:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @type direct;
#L0ac12a.   v1:= new [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|];
#L0ac12e.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1.<init>|](v1, v2, v0, v3, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute$1;.<init>:(Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute$1|] @type direct;
#L0ac134.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.shutdown|] ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] v6 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ac148.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac14c.   call temp:=  [|java:util:concurrent:locks:Lock.lock|](v4) @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac152.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.shutdown|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type super;
#L0ac158.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.freeConnections|]   @type object;
#L0ac15c.   call temp:=  [|java:util:Queue.iterator|](v4) @signature [|Ljava/util/Queue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac162.   v1:= temp  @type object;
#L0ac164.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac16a.   v4:= temp;
#L0ac16c.   if v4 == 0 then goto L0ac1a0;
#L0ac170.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac176.   v0:= temp  @type object;
#L0ac178.   v0:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v0;
#L0ac17c.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac182.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac188.   v4:= temp  @type object;
#L0ac18a.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.closeConnection|](v6, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.closeConnection:(Lorg/apache/http/conn/OperatedClientConnection;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0ac190.   goto L0ac164;
#L0ac192.   v4:= Exception  @type object;
#L0ac194.   v5:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac198.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac19e.   throw v4;
#L0ac1a0.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.waitingThreads|]   @type object;
#L0ac1a4.   call temp:=  [|java:util:Queue.iterator|](v4) @signature [|Ljava/util/Queue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac1aa.   v2:= temp  @type object;
#L0ac1ac.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac1b2.   v4:= temp;
#L0ac1b4.   if v4 == 0 then goto L0ac1d2;
#L0ac1b8.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac1be.   v3:= temp  @type object;
#L0ac1c0.   v3:= ([|org:apache:http:impl:conn:tsccm:WaitingThread|])v3;
#L0ac1c4.   call temp:=  [|java:util:Iterator.remove|](v2) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac1ca.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.wakeup|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.wakeup:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type virtual;
#L0ac1d0.   goto L0ac1ac;
#L0ac1d2.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.routeToPool|]   @type object;
#L0ac1d6.   call temp:=  [|java:util:Map.clear|](v4) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L0ac1dc.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.poolLock|]   @type object;
#L0ac1e0.   call temp:=  [|java:util:concurrent:locks:Lock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:Lock|] @type interface;
#L0ac1e6.   return @void ;
  catch  [|any|] @[L0ac152..L0ac190] goto L0ac192;
  catch  [|any|] @[L0ac1a0..L0ac1dc] goto L0ac192;

   }
record [|org:apache:http:impl:conn:tsccm:RefQueueWorker|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Runnable|] {
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:conn:tsccm:RefQueueHandler|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.refHandler|]    @AccessFlag PROTECTED_FINAL;
      [|java:lang:ref:ReferenceQueue|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.refQueue|]    @AccessFlag PROTECTED_FINAL;
      [|java:lang:Thread|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]    @AccessFlag PROTECTED_VOLATILE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.<init>|] ([|org:apache:http:impl:conn:tsccm:RefQueueWorker|] v2 @type (this), [|java:lang:ref:ReferenceQueue|] v3 @type (object), [|org:apache:http:impl:conn:tsccm:RefQueueHandler|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.<init>:(Ljava/lang/ref/ReferenceQueue;Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ac20c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ac212.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac218.   v0:= temp  @type object;
#L0ac21a.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0ac220.   v0:= temp  @type object;
#L0ac222.   v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.log|]  := v0 @type object;
#L0ac226.   if v3 != 0 then goto L0ac23a;
#L0ac22a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ac22e.   v1:= "Queue must not be null." @type (object, string);
#L0ac232.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac238.   throw v0;
#L0ac23a.   if v4 != 0 then goto L0ac24e;
#L0ac23e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ac242.   v1:= "Handler must not be null." @type (object, string);
#L0ac246.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac24c.   throw v0;
#L0ac24e.   v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.refQueue|]  := v3 @type object;
#L0ac252.   v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.refHandler|]  := v4 @type object;
#L0ac256.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.run|] ([|org:apache:http:impl:conn:tsccm:RefQueueWorker|] v5 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ac268.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]   @type object;
#L0ac26c.   if v2 != 0 then goto L0ac27c;
#L0ac270.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ac276.   v2:= temp  @type object;
#L0ac278.   v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]  := v2 @type object;
#L0ac27c.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]   @type object;
#L0ac280.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ac286.   v3:= temp  @type object;
#L0ac288.   if v2 != v3 then goto L0ac2f0;
#L0ac28c.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.refQueue|]   @type object;
#L0ac290.   call temp:=  [|java:lang:ref:ReferenceQueue.remove|](v2) @signature [|Ljava/lang/ref/ReferenceQueue;.remove:()Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type virtual;
#L0ac296.   v1:= temp  @type object;
#L0ac298.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.refHandler|]   @type object;
#L0ac29c.   call temp:=  [|org:apache:http:impl:conn:tsccm:RefQueueHandler.handleReference|](v2, v1) @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueHandler;.handleReference:(Ljava/lang/ref/Reference;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RefQueueHandler|] @type interface;
#L0ac2a2.   goto L0ac27c;
#L0ac2a4.   v0:= Exception  @type object;
#L0ac2a6.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.log|]   @type object;
#L0ac2aa.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v2) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac2b0.   v2:= temp;
#L0ac2b2.   if v2 == 0 then goto L0ac27c;
#L0ac2b6.   v2:= v5.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.log|]   @type object;
#L0ac2ba.   v3:= new [|java:lang:StringBuilder|];
#L0ac2be.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac2c4.   call temp:=  [|org:apache:http:impl:conn:tsccm:RefQueueWorker.toString|](v5) @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.toString:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @type virtual;
#L0ac2ca.   v4:= temp  @type object;
#L0ac2cc.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac2d2.   v3:= temp  @type object;
#L0ac2d4.   v4:= " interrupted" @type (object, string);
#L0ac2d8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac2de.   v3:= temp  @type object;
#L0ac2e0.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac2e6.   v3:= temp  @type object;
#L0ac2e8.   call temp:=  [|org:apache:commons:logging:Log.debug|](v2, v3, v0) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac2ee.   goto L0ac27c;
#L0ac2f0.   return @void ;
  catch  [|java:lang:InterruptedException|] @[L0ac28c..L0ac2a2] goto L0ac2a4;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.shutdown|] ([|org:apache:http:impl:conn:tsccm:RefQueueWorker|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac314.   v0:= v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]   @type object;
#L0ac318.   if v0 == 0 then goto L0ac328;
#L0ac31c.   v1:= 0  @length 4;
#L0ac31e.   v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]  := v1 @type object;
#L0ac322.   call temp:=  [|java:lang:Thread.interrupt|](v0) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ac328.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:conn:tsccm:RefQueueWorker.toString|] ([|org:apache:http:impl:conn:tsccm:RefQueueWorker|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RefQueueWorker|] @signature [|Lorg/apache/http/impl/conn/tsccm/RefQueueWorker;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac33c.   v0:= new [|java:lang:StringBuilder|];
#L0ac340.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac346.   v1:= "RefQueueWorker::" @type (object, string);
#L0ac34a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac350.   v0:= temp  @type object;
#L0ac352.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RefQueueWorker.workerThread|]   @type object;
#L0ac356.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac35c.   v0:= temp  @type object;
#L0ac35e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac364.   v0:= temp  @type object;
#L0ac366.   return v0  @type object;

   }
record [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|]  @type class @AccessFlag PUBLIC  {
      [|java:util:LinkedList|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.log|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.maxEntries|]    @AccessFlag PROTECTED_FINAL;
      [|int|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|]    @AccessFlag PROTECTED;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]    @AccessFlag PROTECTED_FINAL;
      [|java:util:Queue|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.<init>|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object), [|int|] v3) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.<init>:(Lorg/apache/http/conn/routing/HttpRoute;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ac378.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ac37e.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac384.   v0:= temp  @type object;
#L0ac386.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0ac38c.   v0:= temp  @type object;
#L0ac38e.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.log|]  := v0 @type object;
#L0ac392.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]  := v2 @type object;
#L0ac396.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.maxEntries|]  := v3;
#L0ac39a.   v0:= new [|java:util:LinkedList|];
#L0ac39e.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L0ac3a4.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]  := v0 @type object;
#L0ac3a8.   v0:= new [|java:util:LinkedList|];
#L0ac3ac.   call temp:=  [|java:util:LinkedList.<init>|](v0) @signature [|Ljava/util/LinkedList;.<init>:()V|] @classDescriptor [|java:util:LinkedList|] @type direct;
#L0ac3b2.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]  := v0 @type object;
#L0ac3b6.   v0:= 0  @length 4;
#L0ac3b8.   v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|]  := v0;
#L0ac3bc.   return @void ;

   }
    procedure [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.allocEntry|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.allocEntry:(Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ac3d0.   v4:= 0  @length 4;
#L0ac3d2.   v5:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac3d6.   call temp:=  [|java:util:LinkedList.isEmpty|](v5) @signature [|Ljava/util/LinkedList;.isEmpty:()Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac3dc.   v5:= temp;
#L0ac3de.   if v5 != 0 then goto L0ac42e;
#L0ac3e2.   v5:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac3e6.   v6:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac3ea.   call temp:=  [|java:util:LinkedList.size|](v6) @signature [|Ljava/util/LinkedList;.size:()I|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac3f0.   v6:= temp;
#L0ac3f2.   call temp:=  [|java:util:LinkedList.listIterator|](v5, v6) @signature [|Ljava/util/LinkedList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac3f8.   v3:= temp  @type object;
#L0ac3fa.   call temp:=  [|java:util:ListIterator.hasPrevious|](v3) @signature [|Ljava/util/ListIterator;.hasPrevious:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0ac400.   v5:= temp;
#L0ac402.   if v5 == 0 then goto L0ac42e;
#L0ac406.   call temp:=  [|java:util:ListIterator.previous|](v3) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0ac40c.   v1:= temp  @type object;
#L0ac40e.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0ac412.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getState|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getState:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac418.   v5:= temp  @type object;
#L0ac41a.   call temp:=  [|org:apache:http:util:LangUtils.equals|](v8, v5) @signature [|Lorg/apache/http/util/LangUtils;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:util:LangUtils|] @type static;
#L0ac420.   v5:= temp;
#L0ac422.   if v5 == 0 then goto L0ac3fa;
#L0ac426.   call temp:=  [|java:util:ListIterator.remove|](v3) @signature [|Ljava/util/ListIterator;.remove:()V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0ac42c.   return v1  @type object;
#L0ac42e.   v5:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac432.   call temp:=  [|java:util:LinkedList.isEmpty|](v5) @signature [|Ljava/util/LinkedList;.isEmpty:()Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac438.   v5:= temp;
#L0ac43a.   if v5 != 0 then goto L0ac476;
#L0ac43e.   v5:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac442.   call temp:=  [|java:util:LinkedList.remove|](v5) @signature [|Ljava/util/LinkedList;.remove:()Ljava/lang/Object;|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac448.   v1:= temp  @type object;
#L0ac44a.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0ac44e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.setState|](v1, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.setState:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac454.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac45a.   v0:= temp  @type object;
#L0ac45c.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.close|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.close:()V|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0ac462.   goto L0ac42c;
#L0ac464.   v2:= Exception  @type object;
#L0ac466.   v4:= v7.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.log|]   @type object;
#L0ac46a.   v5:= "I/O error closing connection" @type (object, string);
#L0ac46e.   call temp:=  [|org:apache:commons:logging:Log.debug|](v4, v5, v2) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac474.   goto L0ac42c;
#L0ac476.   v1:= v4  @type object;
#L0ac478.   goto L0ac42c;
  catch  [|java:io:IOException|] @[L0ac45c..L0ac462] goto L0ac464;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.createdEntry|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v3 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.createdEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac49c.   v0:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]   @type object;
#L0ac4a0.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|](v4) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac4a6.   v1:= temp  @type object;
#L0ac4a8.   call temp:=  [|org:apache:http:conn:routing:HttpRoute.equals|](v0, v1) @signature [|Lorg/apache/http/conn/routing/HttpRoute;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|org:apache:http:conn:routing:HttpRoute|] @type virtual;
#L0ac4ae.   v0:= temp;
#L0ac4b0.   if v0 != 0 then goto L0ac506;
#L0ac4b4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ac4b8.   v1:= new [|java:lang:StringBuilder|];
#L0ac4bc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac4c2.   v2:= "Entry not planned for this pool.pool: " @type (object, string);
#L0ac4c6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4cc.   v1:= temp  @type object;
#L0ac4ce.   v2:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]   @type object;
#L0ac4d2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4d8.   v1:= temp  @type object;
#L0ac4da.   v2:= "plan: " @type (object, string);
#L0ac4de.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4e4.   v1:= temp  @type object;
#L0ac4e6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getPlannedRoute|](v4) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac4ec.   v2:= temp  @type object;
#L0ac4ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4f4.   v1:= temp  @type object;
#L0ac4f6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4fc.   v1:= temp  @type object;
#L0ac4fe.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac504.   throw v0;
#L0ac506.   v0:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac50a.   v0:= v0 + 1;
#L0ac50e.   v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|]  := v0;
#L0ac512.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.deleteEntry|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v2 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v3 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.deleteEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac524.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac528.   call temp:=  [|java:util:LinkedList.remove|](v1, v3) @signature [|Ljava/util/LinkedList;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac52e.   v0:= temp;
#L0ac530.   if v0 == 0 then goto L0ac540;
#L0ac534.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac538.   v1:= v1 + -1;
#L0ac53c.   v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|]  := v1;
#L0ac540.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.dropEntry|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.dropEntry:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac554.   v0:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac558.   v1:= 1  @length 4;
#L0ac55a.   if v0 >= v1 then goto L0ac56e;
#L0ac55e.   v0:= new [|java:lang:IllegalStateException|];
#L0ac562.   v1:= "There is no entry that could be dropped." @type (object, string);
#L0ac566.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0ac56c.   throw v0;
#L0ac56e.   v0:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac572.   v0:= v0 + -1;
#L0ac576.   v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|]  := v0;
#L0ac57a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntry|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v3 @type (this), [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac58c.   v0:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac590.   v1:= 1  @length 4;
#L0ac592.   if v0 >= v1 then goto L0ac5cc;
#L0ac596.   v0:= new [|java:lang:IllegalStateException|];
#L0ac59a.   v1:= new [|java:lang:StringBuilder|];
#L0ac59e.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac5a4.   v2:= "No entry created for this pool. " @type (object, string);
#L0ac5a8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac5ae.   v1:= temp  @type object;
#L0ac5b0.   v2:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]   @type object;
#L0ac5b4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac5ba.   v1:= temp  @type object;
#L0ac5bc.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac5c2.   v1:= temp  @type object;
#L0ac5c4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0ac5ca.   throw v0;
#L0ac5cc.   v0:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac5d0.   v1:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac5d4.   call temp:=  [|java:util:LinkedList.size|](v1) @signature [|Ljava/util/LinkedList;.size:()I|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac5da.   v1:= temp;
#L0ac5dc.   if v0 > v1 then goto L0ac616;
#L0ac5e0.   v0:= new [|java:lang:IllegalStateException|];
#L0ac5e4.   v1:= new [|java:lang:StringBuilder|];
#L0ac5e8.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac5ee.   v2:= "No entry allocated from this pool. " @type (object, string);
#L0ac5f2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac5f8.   v1:= temp  @type object;
#L0ac5fa.   v2:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]   @type object;
#L0ac5fe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac604.   v1:= temp  @type object;
#L0ac606.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac60c.   v1:= temp  @type object;
#L0ac60e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0ac614.   throw v0;
#L0ac616.   v0:= v3.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.freeEntries|]   @type object;
#L0ac61a.   call temp:=  [|java:util:LinkedList.add|](v0, v4) @signature [|Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:LinkedList|] @type virtual;
#L0ac620.   return @void ;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getCapacity|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getCapacity:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac634.   v0:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.maxEntries|] ;
#L0ac638.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac63c.   v0:= v0 - v1  @type int;
#L0ac63e.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getEntryCount|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getEntryCount:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ac650.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac654.   return v0;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getMaxEntries|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getMaxEntries:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ac668.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.maxEntries|] ;
#L0ac66c.   return v0;

   }
    procedure [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.getRoute|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.getRoute:()Lorg/apache/http/conn/routing/HttpRoute;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ac680.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.route|]   @type object;
#L0ac684.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.hasThread|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.hasThread:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac698.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]   @type object;
#L0ac69c.   call temp:=  [|java:util:Queue.isEmpty|](v0) @signature [|Ljava/util/Queue;.isEmpty:()Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac6a2.   v0:= temp;
#L0ac6a4.   if v0 != 0 then goto L0ac6ac;
#L0ac6a8.   v0:= 1  @length 4;
#L0ac6aa.   return v0;
#L0ac6ac.   v0:= 0  @length 4;
#L0ac6ae.   goto L0ac6aa;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.isUnused|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.isUnused:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac6c0.   v0:= 1  @length 4;
#L0ac6c2.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.numEntries|] ;
#L0ac6c6.   if v1 >= v0 then goto L0ac6dc;
#L0ac6ca.   v1:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]   @type object;
#L0ac6ce.   call temp:=  [|java:util:Queue.isEmpty|](v1) @signature [|Ljava/util/Queue;.isEmpty:()Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac6d4.   v1:= temp;
#L0ac6d6.   if v1 == 0 then goto L0ac6dc;
#L0ac6da.   return v0;
#L0ac6dc.   v0:= 0  @length 4;
#L0ac6de.   goto L0ac6da;

   }
    procedure [|org:apache:http:impl:conn:tsccm:WaitingThread|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.nextThread|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.nextThread:()Lorg/apache/http/impl/conn/tsccm/WaitingThread;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac6f0.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]   @type object;
#L0ac6f4.   call temp:=  [|java:util:Queue.peek|](v0) @signature [|Ljava/util/Queue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac6fa.   v0:= temp  @type object;
#L0ac6fc.   v0:= ([|org:apache:http:impl:conn:tsccm:WaitingThread|])v0;
#L0ac700.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.queueThread|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v2 @type (this), [|org:apache:http:impl:conn:tsccm:WaitingThread|] v3 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.queueThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac714.   if v3 != 0 then goto L0ac728;
#L0ac718.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ac71c.   v1:= "Waiting thread must not be null." @type (object, string);
#L0ac720.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac726.   throw v0;
#L0ac728.   v0:= v2.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]   @type object;
#L0ac72c.   call temp:=  [|java:util:Queue.add|](v0, v3) @signature [|Ljava/util/Queue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac732.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:RouteSpecificPool.removeThread|] ([|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v1 @type (this), [|org:apache:http:impl:conn:tsccm:WaitingThread|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] @signature [|Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;.removeThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac744.   if v2 != 0 then goto L0ac74a;
#L0ac748.   return @void ;
#L0ac74a.   v0:= v1.[|org:apache:http:impl:conn:tsccm:RouteSpecificPool.waitingThreads|]   @type object;
#L0ac74e.   call temp:=  [|java:util:Queue.remove|](v0, v2) @signature [|Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Queue|] @type interface;
#L0ac754.   goto L0ac748;

   }
record [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|]  @type class @AccessFlag  extends  [|org:apache:http:conn:ClientConnectionRequest|] {
      [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$poolRequest|]    @AccessFlag FINAL_SYNTHETIC;
      [|org:apache:http:conn:routing:HttpRoute|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$route|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.<init>|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] v0 @type (this), [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (object), [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] v2 @type (object), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager$1;.<init>:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;Lorg/apache/http/conn/routing/HttpRoute;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0ac768.   v0.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]  := v1 @type object;
#L0ac76c.   v0.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$poolRequest|]  := v2 @type object;
#L0ac770.   v0.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$route|]  := v3 @type object;
#L0ac774.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ac77a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.abortRequest|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager$1;.abortRequest:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac78c.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$poolRequest|]   @type object;
#L0ac790.   call temp:=  [|org:apache:http:impl:conn:tsccm:PoolEntryRequest.abortRequest|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;.abortRequest:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] @type interface;
#L0ac796.   return @void ;

   }
    procedure [|org:apache:http:conn:ManagedClientConnection|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.getConnection|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] v6 @type (this), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager$1;.getConnection:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/conn/ManagedClientConnection;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ac7a8.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$route|]   @type object;
#L0ac7ac.   if v3 != 0 then goto L0ac7c0;
#L0ac7b0.   v3:= new [|java:lang:IllegalArgumentException|];
#L0ac7b4.   v4:= "Route may not be null." @type (object, string);
#L0ac7b8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac7be.   throw v3;
#L0ac7c0.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]   @type object;
#L0ac7c4.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.access$000|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.access$000:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type static;
#L0ac7ca.   v3:= temp  @type object;
#L0ac7cc.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v3) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac7d2.   v3:= temp;
#L0ac7d4.   if v3 == 0 then goto L0ac828;
#L0ac7d8.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]   @type object;
#L0ac7dc.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.access$000|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.access$000:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type static;
#L0ac7e2.   v3:= temp  @type object;
#L0ac7e4.   v4:= new [|java:lang:StringBuilder|];
#L0ac7e8.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac7ee.   v5:= "ThreadSafeClientConnManager.getConnection: " @type (object, string);
#L0ac7f2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac7f8.   v4:= temp  @type object;
#L0ac7fa.   v5:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$route|]   @type object;
#L0ac7fe.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac804.   v4:= temp  @type object;
#L0ac806.   v5:= ", timeout = " @type (object, string);
#L0ac80a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac810.   v4:= temp  @type object;
#L0ac812.   call temp:=  [|java:lang:StringBuilder.append|](v4, v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac818.   v4:= temp  @type object;
#L0ac81a.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac820.   v4:= temp  @type object;
#L0ac822.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac828.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.val$poolRequest|]   @type object;
#L0ac82c.   call temp:=  [|org:apache:http:impl:conn:tsccm:PoolEntryRequest.getPoolEntry|](v3, v7, v8, v9) @signature [|Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;.getPoolEntry:(JLjava/util/concurrent/TimeUnit;)Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:PoolEntryRequest|] @type interface;
#L0ac832.   v0:= temp  @type object;
#L0ac834.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0ac83a.   v3:= temp  @type object;
#L0ac83c.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v3) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0ac842.   v2:= temp  @type object;
#L0ac844.   if v2 == 0 then goto L0ac856;
#L0ac848.   call temp:=  [|dalvik:system:SocketTagger.get|]() @signature [|Ldalvik/system/SocketTagger;.get:()Ldalvik/system/SocketTagger;|] @classDescriptor [|dalvik:system:SocketTagger|] @type static;
#L0ac84e.   v3:= temp  @type object;
#L0ac850.   call temp:=  [|dalvik:system:SocketTagger.tag|](v3, v2) @signature [|Ldalvik/system/SocketTagger;.tag:(Ljava/net/Socket;)V|] @classDescriptor [|dalvik:system:SocketTagger|] @type virtual;
#L0ac856.   v3:= new [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|];
#L0ac85a.   v4:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]   @type object;
#L0ac85e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.<init>|](v3, v4, v0) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.<init>:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/AbstractPoolEntry;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type direct;
#L0ac864.   return v3  @type object;
#L0ac866.   v1:= Exception  @type object;
#L0ac868.   v3:= v6.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.this$0|]   @type object;
#L0ac86c.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.access$000|](v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.access$000:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type static;
#L0ac872.   v3:= temp  @type object;
#L0ac874.   v4:= "Problem tagging socket." @type (object, string);
#L0ac878.   call temp:=  [|org:apache:commons:logging:Log.debug|](v3, v4, v1) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0ac87e.   goto L0ac856;
  catch  [|java:io:IOException|] @[L0ac834..L0ac856] goto L0ac866;

   }
record [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:conn:ClientConnectionManager|] {
      [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connOperator|]    @AccessFlag PROTECTED;
      [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]    @AccessFlag PROTECTED_FINAL;
      [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.schemeRegistry|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.<init>|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v2 @type (this), [|org:apache:http:params:HttpParams|] v3 @type (object), [|org:apache:http:conn:scheme:SchemeRegistry|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.<init>:(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ac8a0.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ac8a6.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac8ac.   v0:= temp  @type object;
#L0ac8ae.   call temp:=  [|org:apache:commons:logging:LogFactory.getLog|](v0) @signature [|Lorg/apache/commons/logging/LogFactory;.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;|] @classDescriptor [|org:apache:commons:logging:LogFactory|] @type static;
#L0ac8b4.   v0:= temp  @type object;
#L0ac8b6.   v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]  := v0 @type object;
#L0ac8ba.   if v3 != 0 then goto L0ac8ce;
#L0ac8be.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ac8c2.   v1:= "HTTP parameters may not be null" @type (object, string);
#L0ac8c6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ac8cc.   throw v0;
#L0ac8ce.   v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.schemeRegistry|]  := v4 @type object;
#L0ac8d2.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.createConnectionOperator|](v2, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type virtual;
#L0ac8d8.   v0:= temp  @type object;
#L0ac8da.   v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connOperator|]  := v0 @type object;
#L0ac8de.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.createConnectionPool|](v2, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.createConnectionPool:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type virtual;
#L0ac8e4.   v0:= temp  @type object;
#L0ac8e6.   v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]  := v0 @type object;
#L0ac8ea.   return @void ;

   }
    procedure [|org:apache:commons:logging:Log|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.access$000|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.access$000:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;)Lorg/apache/commons/logging/Log;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0ac8fc.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]   @type object;
#L0ac900.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.closeExpiredConnections|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.closeExpiredConnections:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac914.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac918.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeExpiredConnections|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeExpiredConnections:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ac91e.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac922.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.deleteClosedConnections|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.deleteClosedConnections:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ac928.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.closeIdleConnections|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac93c.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac940.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.closeIdleConnections|](v0, v2, v3, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ac946.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac94a.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.deleteClosedConnections|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.deleteClosedConnections:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ac950.   return @void ;

   }
    procedure [|org:apache:http:conn:ClientConnectionOperator|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.createConnectionOperator|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this), [|org:apache:http:conn:scheme:SchemeRegistry|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0ac964.   v0:= new [|org:apache:http:impl:conn:DefaultClientConnectionOperator|];
#L0ac968.   call temp:=  [|org:apache:http:impl:conn:DefaultClientConnectionOperator.<init>|](v0, v2) @signature [|Lorg/apache/http/impl/conn/DefaultClientConnectionOperator;.<init>:(Lorg/apache/http/conn/scheme/SchemeRegistry;)V|] @classDescriptor [|org:apache:http:impl:conn:DefaultClientConnectionOperator|] @type direct;
#L0ac96e.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.createConnectionPool|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v3 @type (this), [|org:apache:http:params:HttpParams|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.createConnectionPool:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac980.   v0:= new [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|];
#L0ac984.   v2:= v3.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connOperator|]   @type object;
#L0ac988.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.<init>|](v0, v2, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.<init>:(Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/params/HttpParams;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type direct;
#L0ac98e.   v1:= 1  @length 4;
#L0ac990.   if v1 == 0 then goto L0ac99a;
#L0ac994.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.enableConnectionGC|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.enableConnectionGC:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0ac99a.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.finalize|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v0 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.finalize:()V|] @Access PROTECTED {
      local temp ;
      
#L0ac9ac.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.shutdown|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @type virtual;
#L0ac9b2.   call temp:=  [|java:lang:Object.finalize|](v0) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0ac9b8.   return @void ;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.getConnectionsInPool|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.getConnectionsInPool:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ac9cc.   v1:= v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac9d0.   (@monitorenter v1)
#L0ac9d2.   v0:= v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0ac9d6.   v0:= v0.[|org:apache:http:impl:conn:tsccm:AbstractConnPool.numConnections|] ;
#L0ac9da.   (@monitorexit v1)
#L0ac9dc.   return v0;
#L0ac9de.   v0:= Exception  @type object;
#L0ac9e0.   (@monitorexit v1)
#L0ac9e2.   throw v0;
  catch  [|any|] @[L0ac9d2..L0ac9e2] goto L0ac9de;

   }
    procedure [|int|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.getConnectionsInPool|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.getConnectionsInPool:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aca00.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0aca04.   v0:= ([|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|])v0;
#L0aca08.   call temp:=  [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute.getConnectionsInPool|](v0, v2) @signature [|Lorg/apache/http/impl/conn/tsccm/ConnPoolByRoute;.getConnectionsInPool:(Lorg/apache/http/conn/routing/HttpRoute;)I|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ConnPoolByRoute|] @type virtual;
#L0aca0e.   v0:= temp;
#L0aca10.   return v0;

   }
    procedure [|org:apache:http:conn:scheme:SchemeRegistry|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.getSchemeRegistry|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.getSchemeRegistry:()Lorg/apache/http/conn/scheme/SchemeRegistry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aca24.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.schemeRegistry|]   @type object;
#L0aca28.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.releaseConnection|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v10 @type (this), [|org:apache:http:conn:ManagedClientConnection|] v11 @type (object), [|long|] v12, [|java:util:concurrent:TimeUnit|] v14 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0aca3c.   v0:= instanceof @varname v11 @type [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|];
#L0aca40.   if v0 != 0 then goto L0aca54;
#L0aca44.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aca48.   v3:= "Connection class mismatch, connection not obtained from this manager." @type (object, string);
#L0aca4c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aca52.   throw v0;
#L0aca54.   v6:= v11  @type object;
#L0aca56.   v6:= ([|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|])v6;
#L0aca5a.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0aca60.   v0:= temp  @type object;
#L0aca62.   if v0 == 0 then goto L0aca82;
#L0aca66.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getManager|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getManager:()Lorg/apache/http/conn/ClientConnectionManager;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0aca6c.   v0:= temp  @type object;
#L0aca6e.   if v0 == v10 then goto L0aca82;
#L0aca72.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aca76.   v3:= "Connection not obtained from this manager." @type (object, string);
#L0aca7a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aca80.   throw v0;
#L0aca82.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0aca88.   v1:= temp  @type object;
#L0aca8a.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0aca8e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPoolEntry.getConnection|](v1) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;.getConnection:()Lorg/apache/http/conn/OperatedClientConnection;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPoolEntry|] @type virtual;
#L0aca94.   v0:= temp  @type object;
#L0aca96.   call temp:=  [|org:apache:http:conn:OperatedClientConnection.getSocket|](v0) @signature [|Lorg/apache/http/conn/OperatedClientConnection;.getSocket:()Ljava/net/Socket;|] @classDescriptor [|org:apache:http:conn:OperatedClientConnection|] @type interface;
#L0aca9c.   v8:= temp  @type object;
#L0aca9e.   if v8 == 0 then goto L0acab0;
#L0acaa2.   call temp:=  [|dalvik:system:SocketTagger.get|]() @signature [|Ldalvik/system/SocketTagger;.get:()Ldalvik/system/SocketTagger;|] @classDescriptor [|dalvik:system:SocketTagger|] @type static;
#L0acaa8.   v0:= temp  @type object;
#L0acaaa.   call temp:=  [|dalvik:system:SocketTagger.untag|](v0, v8) @signature [|Ldalvik/system/SocketTagger;.untag:(Ljava/net/Socket;)V|] @classDescriptor [|dalvik:system:SocketTagger|] @type virtual;
#L0acab0.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.isOpen|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.isOpen:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acab6.   v0:= temp;
#L0acab8.   if v0 == 0 then goto L0acaec;
#L0acabc.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.isMarkedReusable|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.isMarkedReusable:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acac2.   v0:= temp;
#L0acac4.   if v0 != 0 then goto L0acaec;
#L0acac8.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]   @type object;
#L0acacc.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v0) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0acad2.   v0:= temp;
#L0acad4.   if v0 == 0 then goto L0acae6;
#L0acad8.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]   @type object;
#L0acadc.   v3:= "Released connection open but not marked reusable." @type (object, string);
#L0acae0.   call temp:=  [|org:apache:commons:logging:Log.debug|](v0, v3) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0acae6.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.shutdown|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acaec.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acaf2.   v1:= temp  @type object;
#L0acaf4.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0acaf8.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.isMarkedReusable|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.isMarkedReusable:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acafe.   v2:= temp;
#L0acb00.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.detach|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb06.   if v1 == 0 then goto L0acb18;
#L0acb0a.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0acb0e.   v3:= v12  @type wide;
#L0acb10.   v5:= v14  @type object;
#L0acb12.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.freeEntry|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0acb18.   return @void ;
#L0acb1a.   v7:= Exception  @type object;
#L0acb1c.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]   @type object;
#L0acb20.   call temp:=  [|org:apache:commons:logging:Log.isDebugEnabled|](v0) @signature [|Lorg/apache/commons/logging/Log;.isDebugEnabled:()Z|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0acb26.   v0:= temp;
#L0acb28.   if v0 == 0 then goto L0acb3a;
#L0acb2c.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.log|]   @type object;
#L0acb30.   v3:= "Exception shutting down released connection." @type (object, string);
#L0acb34.   call temp:=  [|org:apache:commons:logging:Log.debug|](v0, v3, v7) @signature [|Lorg/apache/commons/logging/Log;.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:commons:logging:Log|] @type interface;
#L0acb3a.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb40.   v1:= temp  @type object;
#L0acb42.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0acb46.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.isMarkedReusable|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.isMarkedReusable:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb4c.   v2:= temp;
#L0acb4e.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.detach|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb54.   if v1 == 0 then goto L0acb18;
#L0acb58.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0acb5c.   v3:= v12  @type wide;
#L0acb5e.   v5:= v14  @type object;
#L0acb60.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.freeEntry|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0acb66.   goto L0acb18;
#L0acb68.   v0:= Exception  @type object;
#L0acb6a.   v9:= v0  @type object;
#L0acb6c.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.getPoolEntry|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.getPoolEntry:()Lorg/apache/http/impl/conn/AbstractPoolEntry;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb72.   v1:= temp  @type object;
#L0acb74.   v1:= ([|org:apache:http:impl:conn:tsccm:BasicPoolEntry|])v1;
#L0acb78.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.isMarkedReusable|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.isMarkedReusable:()Z|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb7e.   v2:= temp;
#L0acb80.   call temp:=  [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter.detach|](v6) @signature [|Lorg/apache/http/impl/conn/tsccm/BasicPooledConnAdapter;.detach:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:BasicPooledConnAdapter|] @type virtual;
#L0acb86.   if v1 == 0 then goto L0acb98;
#L0acb8a.   v0:= v10.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0acb8e.   v3:= v12  @type wide;
#L0acb90.   v5:= v14  @type object;
#L0acb92.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.freeEntry|](v0, v1, v2, v3, v4, v5) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.freeEntry:(Lorg/apache/http/impl/conn/tsccm/BasicPoolEntry;ZJLjava/util/concurrent/TimeUnit;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0acb98.   throw v9;
  catch  [|java:io:IOException|] @[L0aca82..L0acaec] goto L0acb1a;
  catch  [|any|] @[L0aca82..L0acaec] goto L0acb68;
  catch  [|any|] @[L0acb1c..L0acb3a] goto L0acb68;

   }
    procedure [|org:apache:http:conn:ClientConnectionRequest|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.requestConnection|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v2 @type (this), [|org:apache:http:conn:routing:HttpRoute|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.requestConnection:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/conn/ClientConnectionRequest;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acbc8.   v1:= v2.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0acbcc.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.requestPoolEntry|](v1, v3, v4) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.requestPoolEntry:(Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0acbd2.   v0:= temp  @type object;
#L0acbd4.   v1:= new [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|];
#L0acbd8.   call temp:=  [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1.<init>|](v1, v2, v0, v3) @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager$1;.<init>:(Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;Lorg/apache/http/impl/conn/tsccm/PoolEntryRequest;Lorg/apache/http/conn/routing/HttpRoute;)V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager$1|] @type direct;
#L0acbde.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.shutdown|] ([|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager|] @signature [|Lorg/apache/http/impl/conn/tsccm/ThreadSafeClientConnManager;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acbf0.   v0:= v1.[|org:apache:http:impl:conn:tsccm:ThreadSafeClientConnManager.connectionPool|]   @type object;
#L0acbf4.   call temp:=  [|org:apache:http:impl:conn:tsccm:AbstractConnPool.shutdown|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/AbstractConnPool;.shutdown:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:AbstractConnPool|] @type virtual;
#L0acbfa.   return @void ;

   }
record [|org:apache:http:impl:conn:tsccm:WaitingThread|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|org:apache:http:impl:conn:tsccm:WaitingThread.aborted|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:Condition|] [|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] [|org:apache:http:impl:conn:tsccm:WaitingThread.pool|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Thread|] [|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThread.<init>|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object), [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] v4 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.<init>:(Ljava/util/concurrent/locks/Condition;Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0acc0c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0acc12.   if v3 != 0 then goto L0acc26;
#L0acc16.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acc1a.   v1:= "Condition must not be null." @type (object, string);
#L0acc1e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acc24.   throw v0;
#L0acc26.   v2.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]  := v3 @type object;
#L0acc2a.   v2.[|org:apache:http:impl:conn:tsccm:WaitingThread.pool|]  := v4 @type object;
#L0acc2e.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:conn:tsccm:WaitingThread.await|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v4 @type (this), [|java:util:Date|] v5 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.await:(Ljava/util/Date;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0acc40.   v3:= 0  @length 4;
#L0acc42.   v1:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]   @type object;
#L0acc46.   if v1 == 0 then goto L0acc9c;
#L0acc4a.   v1:= new [|java:lang:IllegalStateException|];
#L0acc4e.   v2:= new [|java:lang:StringBuilder|];
#L0acc52.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0acc58.   v3:= "A thread is already waiting on this object.caller: " @type (object, string);
#L0acc5c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc62.   v2:= temp  @type object;
#L0acc64.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0acc6a.   v3:= temp  @type object;
#L0acc6c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc72.   v2:= temp  @type object;
#L0acc74.   v3:= "waiter: " @type (object, string);
#L0acc78.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc7e.   v2:= temp  @type object;
#L0acc80.   v3:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]   @type object;
#L0acc84.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc8a.   v2:= temp  @type object;
#L0acc8c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc92.   v2:= temp  @type object;
#L0acc94.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0acc9a.   throw v1;
#L0acc9c.   v1:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.aborted|]   @boolean;
#L0acca0.   if v1 == 0 then goto L0accb4;
#L0acca4.   v1:= new [|java:lang:InterruptedException|];
#L0acca8.   v2:= "Operation interrupted" @type (object, string);
#L0accac.   call temp:=  [|java:lang:InterruptedException.<init>|](v1, v2) @signature [|Ljava/lang/InterruptedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L0accb2.   throw v1;
#L0accb4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0accba.   v1:= temp  @type object;
#L0accbc.   v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]  := v1 @type object;
#L0accc0.   v0:= 0  @length 4;
#L0accc2.   if v5 == 0 then goto L0accf2;
#L0accc6.   v1:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]   @type object;
#L0accca.   call temp:=  [|java:util:concurrent:locks:Condition.awaitUntil|](v1, v5) @signature [|Ljava/util/concurrent/locks/Condition;.awaitUntil:(Ljava/util/Date;)Z|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L0accd0.   v0:= temp;
#L0accd2.   v1:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.aborted|]   @boolean;
#L0accd6.   if v1 == 0 then goto L0acd00;
#L0accda.   v1:= new [|java:lang:InterruptedException|];
#L0accde.   v2:= "Operation interrupted" @type (object, string);
#L0acce2.   call temp:=  [|java:lang:InterruptedException.<init>|](v1, v2) @signature [|Ljava/lang/InterruptedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L0acce8.   throw v1;
#L0accea.   v1:= Exception  @type object;
#L0accec.   v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]  := v3 @type object;
#L0accf0.   throw v1;
#L0accf2.   v1:= v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]   @type object;
#L0accf6.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L0accfc.   v0:= 1  @length 4;
#L0accfe.   goto L0accd2;
#L0acd00.   v4.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]  := v3 @type object;
#L0acd04.   return v0;
  catch  [|any|] @[L0accc6..L0accea] goto L0accea;
  catch  [|any|] @[L0accf2..L0accfc] goto L0accea;

   }
    procedure [|java:util:concurrent:locks:Condition|] [|org:apache:http:impl:conn:tsccm:WaitingThread.getCondition|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.getCondition:()Ljava/util/concurrent/locks/Condition;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0acd2c.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]   @type object;
#L0acd30.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:conn:tsccm:RouteSpecificPool|] [|org:apache:http:impl:conn:tsccm:WaitingThread.getPool|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.getPool:()Lorg/apache/http/impl/conn/tsccm/RouteSpecificPool;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0acd44.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThread.pool|]   @type object;
#L0acd48.   return v0  @type object;

   }
    procedure [|java:lang:Thread|] [|org:apache:http:impl:conn:tsccm:WaitingThread.getThread|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.getThread:()Ljava/lang/Thread;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0acd5c.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]   @type object;
#L0acd60.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThread.interrupt|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.interrupt:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acd74.   v0:= 1  @length 4;
#L0acd76.   v1.[|org:apache:http:impl:conn:tsccm:WaitingThread.aborted|]  := v0 @boolean;
#L0acd7a.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]   @type object;
#L0acd7e.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L0acd84.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThread.wakeup|] ([|org:apache:http:impl:conn:tsccm:WaitingThread|] v2 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThread|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.wakeup:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acd98.   v0:= v2.[|org:apache:http:impl:conn:tsccm:WaitingThread.waiter|]   @type object;
#L0acd9c.   if v0 != 0 then goto L0acdb0;
#L0acda0.   v0:= new [|java:lang:IllegalStateException|];
#L0acda4.   v1:= "Nobody waiting on this object." @type (object, string);
#L0acda8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0acdae.   throw v0;
#L0acdb0.   v0:= v2.[|org:apache:http:impl:conn:tsccm:WaitingThread.cond|]   @type object;
#L0acdb4.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L0acdba.   return @void ;

   }
record [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.aborted|]    @AccessFlag PRIVATE;
      [|org:apache:http:impl:conn:tsccm:WaitingThread|] [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.waitingThread|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.<init>|] ([|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] v0 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0acdcc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0acdd2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.abort|] ([|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] v1 @type (this)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.abort:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acde4.   v0:= 1  @length 4;
#L0acde6.   v1.[|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.aborted|]  := v0 @boolean;
#L0acdea.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.waitingThread|]   @type object;
#L0acdee.   if v0 == 0 then goto L0acdfc;
#L0acdf2.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.waitingThread|]   @type object;
#L0acdf6.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.interrupt|](v0) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.interrupt:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type virtual;
#L0acdfc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.setWaitingThread|] ([|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] v1 @type (this), [|org:apache:http:impl:conn:tsccm:WaitingThread|] v2 @type (object)) @owner [|org:apache:http:impl:conn:tsccm:WaitingThreadAborter|] @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThreadAborter;.setWaitingThread:(Lorg/apache/http/impl/conn/tsccm/WaitingThread;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ace10.   v1.[|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.waitingThread|]  := v2 @type object;
#L0ace14.   v0:= v1.[|org:apache:http:impl:conn:tsccm:WaitingThreadAborter.aborted|]   @boolean;
#L0ace18.   if v0 == 0 then goto L0ace22;
#L0ace1c.   call temp:=  [|org:apache:http:impl:conn:tsccm:WaitingThread.interrupt|](v2) @signature [|Lorg/apache/http/impl/conn/tsccm/WaitingThread;.interrupt:()V|] @classDescriptor [|org:apache:http:impl:conn:tsccm:WaitingThread|] @type virtual;
#L0ace22.   return @void ;

   }
record [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ace34.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ace3a.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.match|] ([|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] v1 @type (this), [|org:apache:http:cookie:Cookie|] v2 @type (object), [|org:apache:http:cookie:CookieOrigin|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ace4c.   v0:= 1  @length 4;
#L0ace4e.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.validate|] ([|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] v0 @type (this), [|org:apache:http:cookie:Cookie|] v1 @type (object), [|org:apache:http:cookie:CookieOrigin|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
      
#L0ace60.   return @void ;

   }
record [|org:apache:http:impl:cookie:AbstractCookieSpec|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|org:apache:http:cookie:CookieSpec|] {
      [|java:util:Map|] [|org:apache:http:impl:cookie:AbstractCookieSpec.attribHandlerMap|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:cookie:AbstractCookieSpec.<init>|] ([|org:apache:http:impl:cookie:AbstractCookieSpec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:AbstractCookieSpec|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ace74.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ace7a.   v0:= new [|java:util:HashMap|];
#L0ace7e.   v1:= 10  @length 16;
#L0ace82.   call temp:=  [|java:util:HashMap.<init>|](v0, v1) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ace88.   v2.[|org:apache:http:impl:cookie:AbstractCookieSpec.attribHandlerMap|]  := v0 @type object;
#L0ace8c.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieAttributeHandler|] [|org:apache:http:impl:cookie:AbstractCookieSpec.findAttribHandler|] ([|org:apache:http:impl:cookie:AbstractCookieSpec|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:AbstractCookieSpec|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.findAttribHandler:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0acea0.   v0:= v1.[|org:apache:http:impl:cookie:AbstractCookieSpec.attribHandlerMap|]   @type object;
#L0acea4.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0aceaa.   v0:= temp  @type object;
#L0aceac.   v0:= ([|org:apache:http:cookie:CookieAttributeHandler|])v0;
#L0aceb0.   return v0  @type object;

   }
    procedure [|org:apache:http:cookie:CookieAttributeHandler|] [|org:apache:http:impl:cookie:AbstractCookieSpec.getAttribHandler|] ([|org:apache:http:impl:cookie:AbstractCookieSpec|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:AbstractCookieSpec|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.getAttribHandler:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0acec4.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieSpec.findAttribHandler|](v4, v5) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.findAttribHandler:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieSpec|] @type virtual;
#L0aceca.   v0:= temp  @type object;
#L0acecc.   if v0 != 0 then goto L0acf0e;
#L0aced0.   v1:= new [|java:lang:IllegalStateException|];
#L0aced4.   v2:= new [|java:lang:StringBuilder|];
#L0aced8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0acede.   v3:= "Handler not registered for " @type (object, string);
#L0acee2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acee8.   v2:= temp  @type object;
#L0aceea.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acef0.   v2:= temp  @type object;
#L0acef2.   v3:= " attribute." @type (object, string);
#L0acef6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acefc.   v2:= temp  @type object;
#L0acefe.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acf04.   v2:= temp  @type object;
#L0acf06.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0acf0c.   throw v1;
#L0acf0e.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|org:apache:http:impl:cookie:AbstractCookieSpec.getAttribHandlers|] ([|org:apache:http:impl:cookie:AbstractCookieSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:AbstractCookieSpec|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.getAttribHandlers:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0acf20.   v0:= v1.[|org:apache:http:impl:cookie:AbstractCookieSpec.attribHandlerMap|]   @type object;
#L0acf24.   call temp:=  [|java:util:Map.values|](v0) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L0acf2a.   v0:= temp  @type object;
#L0acf2c.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:AbstractCookieSpec.registerAttribHandler|] ([|org:apache:http:impl:cookie:AbstractCookieSpec|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|org:apache:http:cookie:CookieAttributeHandler|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:AbstractCookieSpec|] @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acf40.   if v3 != 0 then goto L0acf54;
#L0acf44.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acf48.   v1:= "Attribute name may not be null" @type (object, string);
#L0acf4c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acf52.   throw v0;
#L0acf54.   if v4 != 0 then goto L0acf68;
#L0acf58.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acf5c.   v1:= "Attribute handler may not be null" @type (object, string);
#L0acf60.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acf66.   throw v0;
#L0acf68.   v0:= v2.[|org:apache:http:impl:cookie:AbstractCookieSpec.attribHandlerMap|]   @type object;
#L0acf6c.   call temp:=  [|java:util:Map.put|](v0, v3, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0acf72.   return @void ;

   }
record [|org:apache:http:impl:cookie:BasicClientCookie|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:SetCookie|], [|org:apache:http:cookie:ClientCookie|], [|java:lang:Cloneable|] {
      [|java:util:Map|] [|org:apache:http:impl:cookie:BasicClientCookie.attribs|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.cookieComment|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.cookieDomain|]    @AccessFlag PRIVATE;
      [|java:util:Date|] [|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.cookiePath|]    @AccessFlag PRIVATE;
      [|int|] [|org:apache:http:impl:cookie:BasicClientCookie.cookieVersion|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie.isSecure|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.name|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.value|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.<init>|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0acf84.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0acf8a.   if v3 != 0 then goto L0acf9e;
#L0acf8e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acf92.   v1:= "Name may not be null" @type (object, string);
#L0acf96.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acf9c.   throw v0;
#L0acf9e.   v2.[|org:apache:http:impl:cookie:BasicClientCookie.name|]  := v3 @type object;
#L0acfa2.   v0:= new [|java:util:HashMap|];
#L0acfa6.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0acfac.   v2.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]  := v0 @type object;
#L0acfb0.   v2.[|org:apache:http:impl:cookie:BasicClientCookie.value|]  := v4 @type object;
#L0acfb4.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:cookie:BasicClientCookie.clone|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v3 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0acfc8.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0acfce.   v0:= temp  @type object;
#L0acfd0.   v0:= ([|org:apache:http:impl:cookie:BasicClientCookie|])v0;
#L0acfd4.   v1:= new [|java:util:HashMap|];
#L0acfd8.   v2:= v3.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]   @type object;
#L0acfdc.   call temp:=  [|java:util:HashMap.<init>|](v1, v2) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0acfe2.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]  := v1 @type object;
#L0acfe6.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie.containsAttribute|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acff8.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]   @type object;
#L0acffc.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ad002.   v0:= temp  @type object;
#L0ad004.   if v0 == 0 then goto L0ad00c;
#L0ad008.   v0:= 1  @length 4;
#L0ad00a.   return v0;
#L0ad00c.   v0:= 0  @length 4;
#L0ad00e.   goto L0ad00a;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getAttribute|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad020.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]   @type object;
#L0ad024.   call temp:=  [|java:util:Map.get|](v0, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ad02a.   v0:= temp  @type object;
#L0ad02c.   v0:= ([|java:lang:String|])v0;
#L0ad030.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getComment|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getComment:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad044.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieComment|]   @type object;
#L0ad048.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getCommentURL|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getCommentURL:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad05c.   v0:= 0  @length 4;
#L0ad05e.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getDomain|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getDomain:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad070.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieDomain|]   @type object;
#L0ad074.   return v0  @type object;

   }
    procedure [|java:util:Date|] [|org:apache:http:impl:cookie:BasicClientCookie.getExpiryDate|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getExpiryDate:()Ljava/util/Date;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad088.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]   @type object;
#L0ad08c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getName|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad0a0.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.name|]   @type object;
#L0ad0a4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getPath|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getPath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad0b8.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookiePath|]   @type object;
#L0ad0bc.   return v0  @type object;

   }
    procedure [|int|][] [|org:apache:http:impl:cookie:BasicClientCookie.getPorts|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getPorts:()[I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad0d0.   v0:= 0  @length 4;
#L0ad0d2.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.getValue|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getValue:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad0e4.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.value|]   @type object;
#L0ad0e8.   return v0  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:BasicClientCookie.getVersion|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad0fc.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieVersion|] ;
#L0ad100.   return v0;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie.isExpired|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v4 @type (this), [|java:util:Date|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.isExpired:(Ljava/util/Date;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ad114.   if v5 != 0 then goto L0ad128;
#L0ad118.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad11c.   v1:= "Date may not be null" @type (object, string);
#L0ad120.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad126.   throw v0;
#L0ad128.   v0:= v4.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]   @type object;
#L0ad12c.   if v0 == 0 then goto L0ad150;
#L0ad130.   v0:= v4.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]   @type object;
#L0ad134.   call temp:=  [|java:util:Date.getTime|](v0) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ad13a.   v0:= temp  @type wide;
#L0ad13c.   call temp:=  [|java:util:Date.getTime|](v5) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ad142.   v2:= temp  @type wide;
#L0ad144.   v0:= cmp(v0,v2);
#L0ad148.   if v0 > 0 then goto L0ad150;
#L0ad14c.   v0:= 1  @length 4;
#L0ad14e.   return v0;
#L0ad150.   v0:= 0  @length 4;
#L0ad152.   goto L0ad14e;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie.isPersistent|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.isPersistent:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad164.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]   @type object;
#L0ad168.   if v0 == 0 then goto L0ad170;
#L0ad16c.   v0:= 1  @length 4;
#L0ad16e.   return v0;
#L0ad170.   v0:= 0  @length 4;
#L0ad172.   goto L0ad16e;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie.isSecure|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.isSecure:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad184.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.isSecure|]   @boolean;
#L0ad188.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setAttribute|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad19c.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie.attribs|]   @type object;
#L0ad1a0.   call temp:=  [|java:util:Map.put|](v0, v2, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ad1a6.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setComment|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setComment:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L0ad1b8.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.cookieComment|]  := v1 @type object;
#L0ad1bc.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setDomain|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setDomain:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad1d0.   if v2 == 0 then goto L0ad1e6;
#L0ad1d4.   v0:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0ad1d8.   call temp:=  [|java:lang:String.toLowerCase|](v2, v0) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad1de.   v0:= temp  @type object;
#L0ad1e0.   v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieDomain|]  := v0 @type object;
#L0ad1e4.   return @void ;
#L0ad1e6.   v0:= 0  @length 4;
#L0ad1e8.   v1.[|org:apache:http:impl:cookie:BasicClientCookie.cookieDomain|]  := v0 @type object;
#L0ad1ec.   goto L0ad1e4;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setExpiryDate|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|java:util:Date|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setExpiryDate:(Ljava/util/Date;)V|] @Access PUBLIC {
      local temp ;
      
#L0ad200.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]  := v1 @type object;
#L0ad204.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setPath|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setPath:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L0ad218.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.cookiePath|]  := v1 @type object;
#L0ad21c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setSecure|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|boolean|] v1) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setSecure:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L0ad230.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.isSecure|]  := v1 @boolean;
#L0ad234.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setValue|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setValue:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L0ad248.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.value|]  := v1 @type object;
#L0ad24c.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie.setVersion|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v0 @type (this), [|int|] v1) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setVersion:(I)V|] @Access PUBLIC {
      local temp ;
      
#L0ad260.   v0.[|org:apache:http:impl:cookie:BasicClientCookie.cookieVersion|]  := v1;
#L0ad264.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie.toString|] ([|org:apache:http:impl:cookie:BasicClientCookie|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ad278.   v0:= new [|java:lang:StringBuilder|];
#L0ad27c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad282.   v1:= "[version: " @type (object, string);
#L0ad286.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad28c.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.cookieVersion|] ;
#L0ad290.   call temp:=  [|java:lang:Integer.toString|](v1) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ad296.   v1:= temp  @type object;
#L0ad298.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad29e.   v1:= "]" @type (object, string);
#L0ad2a2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2a8.   v1:= "[name: " @type (object, string);
#L0ad2ac.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2b2.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.name|]   @type object;
#L0ad2b6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2bc.   v1:= "]" @type (object, string);
#L0ad2c0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2c6.   v1:= "[value: " @type (object, string);
#L0ad2ca.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2d0.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.value|]   @type object;
#L0ad2d4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2da.   v1:= "]" @type (object, string);
#L0ad2de.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2e4.   v1:= "[domain: " @type (object, string);
#L0ad2e8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2ee.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.cookieDomain|]   @type object;
#L0ad2f2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad2f8.   v1:= "]" @type (object, string);
#L0ad2fc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad302.   v1:= "[path: " @type (object, string);
#L0ad306.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad30c.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.cookiePath|]   @type object;
#L0ad310.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad316.   v1:= "]" @type (object, string);
#L0ad31a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad320.   v1:= "[expiry: " @type (object, string);
#L0ad324.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad32a.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie.cookieExpiryDate|]   @type object;
#L0ad32e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad334.   v1:= "]" @type (object, string);
#L0ad338.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad33e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad344.   v1:= temp  @type object;
#L0ad346.   return v1  @type object;

   }
record [|org:apache:http:impl:cookie:BasicClientCookie2|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:BasicClientCookie|], [|org:apache:http:cookie:SetCookie2|] {
      [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie2.commentURL|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie2.discard|]    @AccessFlag PRIVATE;
      [|int|][] [|org:apache:http:impl:cookie:BasicClientCookie2.ports|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie2.<init>|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad358.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type direct;
#L0ad35e.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:cookie:BasicClientCookie2.clone|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ad370.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.clone|](v2) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.clone:()Ljava/lang/Object;|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type super;
#L0ad376.   v0:= temp  @type object;
#L0ad378.   v0:= ([|org:apache:http:impl:cookie:BasicClientCookie2|])v0;
#L0ad37c.   v1:= v2.[|org:apache:http:impl:cookie:BasicClientCookie2.ports|]   @type object;
#L0ad380.   call temp:=  [|int[].clone|](v1) @signature [|[I.clone:()Ljava/lang/Object;|] @classDescriptor [|int[]|] @type virtual;
#L0ad386.   v1:= temp  @type object;
#L0ad388.   v1:= ([|int|][])v1;
#L0ad38c.   v0.[|org:apache:http:impl:cookie:BasicClientCookie2.ports|]  := v1 @type object;
#L0ad390.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:BasicClientCookie2.getCommentURL|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.getCommentURL:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad3a4.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie2.commentURL|]   @type object;
#L0ad3a8.   return v0  @type object;

   }
    procedure [|int|][] [|org:apache:http:impl:cookie:BasicClientCookie2.getPorts|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.getPorts:()[I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad3bc.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie2.ports|]   @type object;
#L0ad3c0.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie2.isExpired|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v1 @type (this), [|java:util:Date|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.isExpired:(Ljava/util/Date;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad3d4.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie2.discard|]   @boolean;
#L0ad3d8.   if v0 != 0 then goto L0ad3e8;
#L0ad3dc.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.isExpired|](v1, v2) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.isExpired:(Ljava/util/Date;)Z|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type super;
#L0ad3e2.   v0:= temp;
#L0ad3e4.   if v0 == 0 then goto L0ad3ec;
#L0ad3e8.   v0:= 1  @length 4;
#L0ad3ea.   return v0;
#L0ad3ec.   v0:= 0  @length 4;
#L0ad3ee.   goto L0ad3ea;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicClientCookie2.isPersistent|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.isPersistent:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ad400.   v0:= v1.[|org:apache:http:impl:cookie:BasicClientCookie2.discard|]   @boolean;
#L0ad404.   if v0 != 0 then goto L0ad418;
#L0ad408.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.isPersistent|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.isPersistent:()Z|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type super;
#L0ad40e.   v0:= temp;
#L0ad410.   if v0 == 0 then goto L0ad418;
#L0ad414.   v0:= 1  @length 4;
#L0ad416.   return v0;
#L0ad418.   v0:= 0  @length 4;
#L0ad41a.   goto L0ad416;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie2.setCommentURL|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setCommentURL:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
      
#L0ad42c.   v0.[|org:apache:http:impl:cookie:BasicClientCookie2.commentURL|]  := v1 @type object;
#L0ad430.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie2.setDiscard|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v0 @type (this), [|boolean|] v1) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setDiscard:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L0ad444.   v0.[|org:apache:http:impl:cookie:BasicClientCookie2.discard|]  := v1 @boolean;
#L0ad448.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicClientCookie2.setPorts|] ([|org:apache:http:impl:cookie:BasicClientCookie2|] v0 @type (this), [|int|][] v1) @owner [|org:apache:http:impl:cookie:BasicClientCookie2|] @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setPorts:([I)V|] @Access PUBLIC {
      local temp ;
      
#L0ad45c.   v0.[|org:apache:http:impl:cookie:BasicClientCookie2.ports|]  := v1 @type object;
#L0ad460.   return @void ;

   }
record [|org:apache:http:impl:cookie:BasicCommentHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicCommentHandler.<init>|] ([|org:apache:http:impl:cookie:BasicCommentHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BasicCommentHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicCommentHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad474.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @type direct;
#L0ad47a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicCommentHandler.parse|] ([|org:apache:http:impl:cookie:BasicCommentHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicCommentHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicCommentHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ad48c.   if v3 != 0 then goto L0ad4a0;
#L0ad490.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad494.   v1:= "Cookie may not be null" @type (object, string);
#L0ad498.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad49e.   throw v0;
#L0ad4a0.   call temp:=  [|org:apache:http:cookie:SetCookie.setComment|](v3, v4) @signature [|Lorg/apache/http/cookie/SetCookie;.setComment:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0ad4a6.   return @void ;

   }
record [|org:apache:http:impl:cookie:BasicDomainHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicDomainHandler.<init>|] ([|org:apache:http:impl:cookie:BasicDomainHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BasicDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad4b8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ad4be.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicDomainHandler.match|] ([|org:apache:http:impl:cookie:BasicDomainHandler|] v6 @type (this), [|org:apache:http:cookie:Cookie|] v7 @type (object), [|org:apache:http:cookie:CookieOrigin|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:BasicDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ad4d0.   v2:= 0  @length 4;
#L0ad4d2.   v3:= 1  @length 4;
#L0ad4d4.   if v7 != 0 then goto L0ad4e8;
#L0ad4d8.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ad4dc.   v3:= "Cookie may not be null" @type (object, string);
#L0ad4e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad4e6.   throw v2;
#L0ad4e8.   if v8 != 0 then goto L0ad4fc;
#L0ad4ec.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ad4f0.   v3:= "Cookie origin may not be null" @type (object, string);
#L0ad4f4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad4fa.   throw v2;
#L0ad4fc.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0ad502.   v1:= temp  @type object;
#L0ad504.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v7) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ad50a.   v0:= temp  @type object;
#L0ad50c.   if v0 != 0 then goto L0ad512;
#L0ad510.   return v2;
#L0ad512.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad518.   v4:= temp;
#L0ad51a.   if v4 == 0 then goto L0ad522;
#L0ad51e.   v2:= v3;
#L0ad520.   goto L0ad510;
#L0ad522.   v4:= "." @type (object, string);
#L0ad526.   call temp:=  [|java:lang:String.startsWith|](v0, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad52c.   v4:= temp;
#L0ad52e.   if v4 != 0 then goto L0ad558;
#L0ad532.   v4:= new [|java:lang:StringBuilder|];
#L0ad536.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad53c.   v5:= 46  @length 16;
#L0ad540.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad546.   v4:= temp  @type object;
#L0ad548.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad54e.   v4:= temp  @type object;
#L0ad550.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad556.   v0:= temp  @type object;
#L0ad558.   call temp:=  [|java:lang:String.endsWith|](v1, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad55e.   v4:= temp;
#L0ad560.   if v4 != 0 then goto L0ad578;
#L0ad564.   call temp:=  [|java:lang:String.substring|](v0, v3) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad56a.   v4:= temp  @type object;
#L0ad56c.   call temp:=  [|java:lang:String.equals|](v1, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad572.   v4:= temp;
#L0ad574.   if v4 == 0 then goto L0ad510;
#L0ad578.   v2:= v3;
#L0ad57a.   goto L0ad510;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicDomainHandler.parse|] ([|org:apache:http:impl:cookie:BasicDomainHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ad58c.   if v3 != 0 then goto L0ad5a0;
#L0ad590.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad594.   v1:= "Cookie may not be null" @type (object, string);
#L0ad598.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad59e.   throw v0;
#L0ad5a0.   if v4 != 0 then goto L0ad5b4;
#L0ad5a4.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad5a8.   v1:= "Missing value for domain attribute" @type (object, string);
#L0ad5ac.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad5b2.   throw v0;
#L0ad5b4.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad5ba.   v0:= temp  @type object;
#L0ad5bc.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad5c2.   v0:= temp;
#L0ad5c4.   if v0 != 0 then goto L0ad5d8;
#L0ad5c8.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad5cc.   v1:= "Blank value for domain attribute" @type (object, string);
#L0ad5d0.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad5d6.   throw v0;
#L0ad5d8.   call temp:=  [|org:apache:http:cookie:SetCookie.setDomain|](v3, v4) @signature [|Lorg/apache/http/cookie/SetCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0ad5de.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicDomainHandler.validate|] ([|org:apache:http:impl:cookie:BasicDomainHandler|] v5 @type (this), [|org:apache:http:cookie:Cookie|] v6 @type (object), [|org:apache:http:cookie:CookieOrigin|] v7 @type (object)) @owner [|org:apache:http:impl:cookie:BasicDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ad5f0.   if v6 != 0 then goto L0ad604;
#L0ad5f4.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ad5f8.   v3:= "Cookie may not be null" @type (object, string);
#L0ad5fc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad602.   throw v2;
#L0ad604.   if v7 != 0 then goto L0ad618;
#L0ad608.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ad60c.   v3:= "Cookie origin may not be null" @type (object, string);
#L0ad610.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad616.   throw v2;
#L0ad618.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v7) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0ad61e.   v1:= temp  @type object;
#L0ad620.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v6) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ad626.   v0:= temp  @type object;
#L0ad628.   if v0 != 0 then goto L0ad63c;
#L0ad62c.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad630.   v3:= "Cookie domain may not be null" @type (object, string);
#L0ad634.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad63a.   throw v2;
#L0ad63c.   v2:= "." @type (object, string);
#L0ad640.   call temp:=  [|java:lang:String.contains|](v1, v2) @signature [|Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad646.   v2:= temp;
#L0ad648.   if v2 == 0 then goto L0ad6d8;
#L0ad64c.   call temp:=  [|java:lang:String.endsWith|](v1, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad652.   v2:= temp;
#L0ad654.   if v2 != 0 then goto L0ad736;
#L0ad658.   v2:= "." @type (object, string);
#L0ad65c.   call temp:=  [|java:lang:String.startsWith|](v0, v2) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad662.   v2:= temp;
#L0ad664.   if v2 == 0 then goto L0ad67a;
#L0ad668.   v2:= 1  @length 4;
#L0ad66a.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad670.   v3:= temp;
#L0ad672.   call temp:=  [|java:lang:String.substring|](v0, v2, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad678.   v0:= temp  @type object;
#L0ad67a.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad680.   v2:= temp;
#L0ad682.   if v2 != 0 then goto L0ad736;
#L0ad686.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad68a.   v3:= new [|java:lang:StringBuilder|];
#L0ad68e.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad694.   v4:= "Illegal domain attribute \"" @type (object, string);
#L0ad698.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad69e.   v3:= temp  @type object;
#L0ad6a0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6a6.   v3:= temp  @type object;
#L0ad6a8.   v4:= "\". Domain of origin: \"" @type (object, string);
#L0ad6ac.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6b2.   v3:= temp  @type object;
#L0ad6b4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6ba.   v3:= temp  @type object;
#L0ad6bc.   v4:= "\"" @type (object, string);
#L0ad6c0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6c6.   v3:= temp  @type object;
#L0ad6c8.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6ce.   v3:= temp  @type object;
#L0ad6d0.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad6d6.   throw v2;
#L0ad6d8.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad6de.   v2:= temp;
#L0ad6e0.   if v2 != 0 then goto L0ad736;
#L0ad6e4.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad6e8.   v3:= new [|java:lang:StringBuilder|];
#L0ad6ec.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad6f2.   v4:= "Illegal domain attribute \"" @type (object, string);
#L0ad6f6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad6fc.   v3:= temp  @type object;
#L0ad6fe.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad704.   v3:= temp  @type object;
#L0ad706.   v4:= "\". Domain of origin: \"" @type (object, string);
#L0ad70a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad710.   v3:= temp  @type object;
#L0ad712.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad718.   v3:= temp  @type object;
#L0ad71a.   v4:= "\"" @type (object, string);
#L0ad71e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad724.   v3:= temp  @type object;
#L0ad726.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad72c.   v3:= temp  @type object;
#L0ad72e.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad734.   throw v2;
#L0ad736.   return @void ;

   }
record [|org:apache:http:impl:cookie:BasicExpiresHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] {
      [|java:lang:String|][] [|org:apache:http:impl:cookie:BasicExpiresHandler.datepatterns|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicExpiresHandler.<init>|] ([|org:apache:http:impl:cookie:BasicExpiresHandler|] v2 @type (this), [|java:lang:String|][] v3 @type (object)) @owner [|org:apache:http:impl:cookie:BasicExpiresHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicExpiresHandler;.<init>:([Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ad748.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|](v2) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @type direct;
#L0ad74e.   if v3 != 0 then goto L0ad762;
#L0ad752.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad756.   v1:= "Array of date patterns may not be null" @type (object, string);
#L0ad75a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad760.   throw v0;
#L0ad762.   v2.[|org:apache:http:impl:cookie:BasicExpiresHandler.datepatterns|]  := v3 @type object;
#L0ad766.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicExpiresHandler.parse|] ([|org:apache:http:impl:cookie:BasicExpiresHandler|] v4 @type (this), [|org:apache:http:cookie:SetCookie|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:BasicExpiresHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicExpiresHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ad778.   if v5 != 0 then goto L0ad78c;
#L0ad77c.   v1:= new [|java:lang:IllegalArgumentException|];
#L0ad780.   v2:= "Cookie may not be null" @type (object, string);
#L0ad784.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad78a.   throw v1;
#L0ad78c.   if v6 != 0 then goto L0ad7a0;
#L0ad790.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad794.   v2:= "Missing value for expires attribute" @type (object, string);
#L0ad798.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad79e.   throw v1;
#L0ad7a0.   v1:= v4.[|org:apache:http:impl:cookie:BasicExpiresHandler.datepatterns|]   @type object;
#L0ad7a4.   call temp:=  [|org:apache:http:impl:cookie:DateUtils.parseDate|](v6, v1) @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils|] @type static;
#L0ad7aa.   v1:= temp  @type object;
#L0ad7ac.   call temp:=  [|org:apache:http:cookie:SetCookie.setExpiryDate|](v5, v1) @signature [|Lorg/apache/http/cookie/SetCookie;.setExpiryDate:(Ljava/util/Date;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0ad7b2.   return @void ;
#L0ad7b4.   v0:= Exception  @type object;
#L0ad7b6.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad7ba.   v2:= new [|java:lang:StringBuilder|];
#L0ad7be.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad7c4.   v3:= "Unable to parse expires attribute: " @type (object, string);
#L0ad7c8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad7ce.   v2:= temp  @type object;
#L0ad7d0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad7d6.   v2:= temp  @type object;
#L0ad7d8.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad7de.   v2:= temp  @type object;
#L0ad7e0.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad7e6.   throw v1;
  catch  [|org:apache:http:impl:cookie:DateParseException|] @[L0ad7a0..L0ad7b2] goto L0ad7b4;

   }
record [|org:apache:http:impl:cookie:BasicMaxAgeHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicMaxAgeHandler.<init>|] ([|org:apache:http:impl:cookie:BasicMaxAgeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BasicMaxAgeHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicMaxAgeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad808.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @type direct;
#L0ad80e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicMaxAgeHandler.parse|] ([|org:apache:http:impl:cookie:BasicMaxAgeHandler|] v9 @type (this), [|org:apache:http:cookie:SetCookie|] v10 @type (object), [|java:lang:String|] v11 @type (object)) @owner [|org:apache:http:impl:cookie:BasicMaxAgeHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicMaxAgeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0ad820.   if v10 != 0 then goto L0ad834;
#L0ad824.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ad828.   v3:= "Cookie may not be null" @type (object, string);
#L0ad82c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad832.   throw v2;
#L0ad834.   if v11 != 0 then goto L0ad848;
#L0ad838.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad83c.   v3:= "Missing value for max-age attribute" @type (object, string);
#L0ad840.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad846.   throw v2;
#L0ad848.   call temp:=  [|java:lang:Integer.parseInt|](v11) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ad84e.   v0:= temp;
#L0ad850.   if v0 >= 0 then goto L0ad8ba;
#L0ad854.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad858.   v3:= new [|java:lang:StringBuilder|];
#L0ad85c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad862.   v4:= "Negative max-age attribute: " @type (object, string);
#L0ad866.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad86c.   v3:= temp  @type object;
#L0ad86e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad874.   v3:= temp  @type object;
#L0ad876.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad87c.   v3:= temp  @type object;
#L0ad87e.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad884.   throw v2;
#L0ad886.   v1:= Exception  @type object;
#L0ad888.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ad88c.   v3:= new [|java:lang:StringBuilder|];
#L0ad890.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ad896.   v4:= "Invalid max-age attribute: " @type (object, string);
#L0ad89a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad8a0.   v3:= temp  @type object;
#L0ad8a2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad8a8.   v3:= temp  @type object;
#L0ad8aa.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ad8b0.   v3:= temp  @type object;
#L0ad8b2.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ad8b8.   throw v2;
#L0ad8ba.   v2:= new [|java:util:Date|];
#L0ad8be.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0ad8c4.   v3:= temp  @type wide;
#L0ad8c6.   v5:= (long)v0  @type i2l;
#L0ad8c8.   v7:= 1000  @length wide16;
#L0ad8cc.   v5:= v5 * v7  @type long;
#L0ad8ce.   v3:= v3 + v5  @type long;
#L0ad8d0.   call temp:=  [|java:util:Date.<init>|](v2, v3, v4) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ad8d6.   call temp:=  [|org:apache:http:cookie:SetCookie.setExpiryDate|](v10, v2) @signature [|Lorg/apache/http/cookie/SetCookie;.setExpiryDate:(Ljava/util/Date;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0ad8dc.   return @void ;
  catch  [|java:lang:NumberFormatException|] @[L0ad848..L0ad84e] goto L0ad886;

   }
record [|org:apache:http:impl:cookie:BasicPathHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicPathHandler.<init>|] ([|org:apache:http:impl:cookie:BasicPathHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BasicPathHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad900.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ad906.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicPathHandler.match|] ([|org:apache:http:impl:cookie:BasicPathHandler|] v7 @type (this), [|org:apache:http:cookie:Cookie|] v8 @type (object), [|org:apache:http:cookie:CookieOrigin|] v9 @type (object)) @owner [|org:apache:http:impl:cookie:BasicPathHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ad918.   v3:= 1  @length 4;
#L0ad91a.   v4:= 0  @length 4;
#L0ad91c.   if v8 != 0 then goto L0ad930;
#L0ad920.   v3:= new [|java:lang:IllegalArgumentException|];
#L0ad924.   v4:= "Cookie may not be null" @type (object, string);
#L0ad928.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad92e.   throw v3;
#L0ad930.   if v9 != 0 then goto L0ad944;
#L0ad934.   v3:= new [|java:lang:IllegalArgumentException|];
#L0ad938.   v4:= "Cookie origin may not be null" @type (object, string);
#L0ad93c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad942.   throw v3;
#L0ad944.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPath|](v9) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0ad94a.   v1:= temp  @type object;
#L0ad94c.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v8) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ad952.   v2:= temp  @type object;
#L0ad954.   if v2 != 0 then goto L0ad95c;
#L0ad958.   v2:= "/" @type (object, string);
#L0ad95c.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad962.   v5:= temp;
#L0ad964.   if v5 <= v3 then goto L0ad98c;
#L0ad968.   v5:= "/" @type (object, string);
#L0ad96c.   call temp:=  [|java:lang:String.endsWith|](v2, v5) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad972.   v5:= temp;
#L0ad974.   if v5 == 0 then goto L0ad98c;
#L0ad978.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad97e.   v5:= temp;
#L0ad980.   v5:= v5 + -1;
#L0ad984.   call temp:=  [|java:lang:String.substring|](v2, v4, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad98a.   v2:= temp  @type object;
#L0ad98c.   call temp:=  [|java:lang:String.startsWith|](v1, v2) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad992.   v0:= temp;
#L0ad994.   if v0 == 0 then goto L0ad9d6;
#L0ad998.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad99e.   v5:= temp;
#L0ad9a0.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad9a6.   v6:= temp;
#L0ad9a8.   if v5 == v6 then goto L0ad9d6;
#L0ad9ac.   v5:= "/" @type (object, string);
#L0ad9b0.   call temp:=  [|java:lang:String.endsWith|](v2, v5) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad9b6.   v5:= temp;
#L0ad9b8.   if v5 != 0 then goto L0ad9d6;
#L0ad9bc.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad9c2.   v5:= temp;
#L0ad9c4.   call temp:=  [|java:lang:String.charAt|](v1, v5) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad9ca.   v5:= temp;
#L0ad9cc.   v6:= 47  @length 16;
#L0ad9d0.   if v5 != v6 then goto L0ad9d8;
#L0ad9d4.   v0:= v3;
#L0ad9d6.   return v0;
#L0ad9d8.   v0:= v4;
#L0ad9da.   goto L0ad9d6;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicPathHandler.parse|] ([|org:apache:http:impl:cookie:BasicPathHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicPathHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ad9ec.   if v3 != 0 then goto L0ada00;
#L0ad9f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad9f4.   v1:= "Cookie may not be null" @type (object, string);
#L0ad9f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad9fe.   throw v0;
#L0ada00.   if v4 == 0 then goto L0ada18;
#L0ada04.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ada0a.   v0:= temp  @type object;
#L0ada0c.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ada12.   v0:= temp;
#L0ada14.   if v0 != 0 then goto L0ada1c;
#L0ada18.   v4:= "/" @type (object, string);
#L0ada1c.   call temp:=  [|org:apache:http:cookie:SetCookie.setPath|](v3, v4) @signature [|Lorg/apache/http/cookie/SetCookie;.setPath:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0ada22.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicPathHandler.validate|] ([|org:apache:http:impl:cookie:BasicPathHandler|] v3 @type (this), [|org:apache:http:cookie:Cookie|] v4 @type (object), [|org:apache:http:cookie:CookieOrigin|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:BasicPathHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ada34.   call temp:=  [|org:apache:http:impl:cookie:BasicPathHandler.match|](v3, v4, v5) @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:impl:cookie:BasicPathHandler|] @type virtual;
#L0ada3a.   v0:= temp;
#L0ada3c.   if v0 != 0 then goto L0adaa2;
#L0ada40.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ada44.   v1:= new [|java:lang:StringBuilder|];
#L0ada48.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ada4e.   v2:= "Illegal path attribute \"" @type (object, string);
#L0ada52.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada58.   v1:= temp  @type object;
#L0ada5a.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ada60.   v2:= temp  @type object;
#L0ada62.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada68.   v1:= temp  @type object;
#L0ada6a.   v2:= "\". Path of origin: \"" @type (object, string);
#L0ada6e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada74.   v1:= temp  @type object;
#L0ada76.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPath|](v5) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0ada7c.   v2:= temp  @type object;
#L0ada7e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada84.   v1:= temp  @type object;
#L0ada86.   v2:= "\"" @type (object, string);
#L0ada8a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada90.   v1:= temp  @type object;
#L0ada92.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ada98.   v1:= temp  @type object;
#L0ada9a.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0adaa0.   throw v0;
#L0adaa2.   return @void ;

   }
record [|org:apache:http:impl:cookie:BasicSecureHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicSecureHandler.<init>|] ([|org:apache:http:impl:cookie:BasicSecureHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BasicSecureHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0adab4.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @type direct;
#L0adaba.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BasicSecureHandler.match|] ([|org:apache:http:impl:cookie:BasicSecureHandler|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicSecureHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0adacc.   if v3 != 0 then goto L0adae0;
#L0adad0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0adad4.   v1:= "Cookie may not be null" @type (object, string);
#L0adad8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adade.   throw v0;
#L0adae0.   if v4 != 0 then goto L0adaf4;
#L0adae4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0adae8.   v1:= "Cookie origin may not be null" @type (object, string);
#L0adaec.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adaf2.   throw v0;
#L0adaf4.   call temp:=  [|org:apache:http:cookie:Cookie.isSecure|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.isSecure:()Z|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0adafa.   v0:= temp;
#L0adafc.   if v0 == 0 then goto L0adb0c;
#L0adb00.   call temp:=  [|org:apache:http:cookie:CookieOrigin.isSecure|](v4) @signature [|Lorg/apache/http/cookie/CookieOrigin;.isSecure:()Z|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0adb06.   v0:= temp;
#L0adb08.   if v0 == 0 then goto L0adb10;
#L0adb0c.   v0:= 1  @length 4;
#L0adb0e.   return v0;
#L0adb10.   v0:= 0  @length 4;
#L0adb12.   goto L0adb0e;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BasicSecureHandler.parse|] ([|org:apache:http:impl:cookie:BasicSecureHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BasicSecureHandler|] @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0adb24.   if v3 != 0 then goto L0adb38;
#L0adb28.   v0:= new [|java:lang:IllegalArgumentException|];
#L0adb2c.   v1:= "Cookie may not be null" @type (object, string);
#L0adb30.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adb36.   throw v0;
#L0adb38.   v0:= 1  @length 4;
#L0adb3a.   call temp:=  [|org:apache:http:cookie:SetCookie.setSecure|](v3, v0) @signature [|Lorg/apache/http/cookie/SetCookie;.setSecure:(Z)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0adb40.   return @void ;

   }
record [|org:apache:http:impl:cookie:BestMatchSpec|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpec|] {
      [|org:apache:http:impl:cookie:BrowserCompatSpec|] [|org:apache:http:impl:cookie:BestMatchSpec.compat|]    @AccessFlag PRIVATE;
      [|java:lang:String|][] [|org:apache:http:impl:cookie:BestMatchSpec.datepatterns|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:cookie:NetscapeDraftSpec|] [|org:apache:http:impl:cookie:BestMatchSpec.netscape|]    @AccessFlag PRIVATE;
      [|boolean|] [|org:apache:http:impl:cookie:BestMatchSpec.oneHeader|]    @AccessFlag PRIVATE_FINAL;
      [|org:apache:http:impl:cookie:RFC2965Spec|] [|org:apache:http:impl:cookie:BestMatchSpec.strict|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BestMatchSpec.<init>|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0adb54.   v0:= 0  @length 4;
#L0adb56.   v1:= 0  @length 4;
#L0adb58.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adb5e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BestMatchSpec.<init>|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v0 @type (this), [|java:lang:String|][] v1 @type (object), [|boolean|] v2) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.<init>:([Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0adb70.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0adb76.   v0.[|org:apache:http:impl:cookie:BestMatchSpec.datepatterns|]  := v1 @type object;
#L0adb7a.   v0.[|org:apache:http:impl:cookie:BestMatchSpec.oneHeader|]  := v2 @boolean;
#L0adb7e.   return @void ;

   }
    procedure [|org:apache:http:impl:cookie:BrowserCompatSpec|] [|org:apache:http:impl:cookie:BestMatchSpec.getCompat|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getCompat:()Lorg/apache/http/impl/cookie/BrowserCompatSpec;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0adb90.   v0:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.compat|]   @type object;
#L0adb94.   if v0 != 0 then goto L0adbaa;
#L0adb98.   v0:= new [|org:apache:http:impl:cookie:BrowserCompatSpec|];
#L0adb9c.   v1:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.datepatterns|]   @type object;
#L0adba0.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type direct;
#L0adba6.   v2.[|org:apache:http:impl:cookie:BestMatchSpec.compat|]  := v0 @type object;
#L0adbaa.   v0:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.compat|]   @type object;
#L0adbae.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:cookie:NetscapeDraftSpec|] [|org:apache:http:impl:cookie:BestMatchSpec.getNetscape|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getNetscape:()Lorg/apache/http/impl/cookie/NetscapeDraftSpec;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0adbc0.   v1:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.netscape|]   @type object;
#L0adbc4.   if v1 != 0 then goto L0adbe2;
#L0adbc8.   v0:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.datepatterns|]   @type object;
#L0adbcc.   if v0 != 0 then goto L0adbd4;
#L0adbd0.   v0:= @@[|org:apache:http:impl:cookie:BrowserCompatSpec.DATE_PATTERNS|]   @type object;
#L0adbd4.   v1:= new [|org:apache:http:impl:cookie:NetscapeDraftSpec|];
#L0adbd8.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type direct;
#L0adbde.   v2.[|org:apache:http:impl:cookie:BestMatchSpec.netscape|]  := v1 @type object;
#L0adbe2.   v1:= v2.[|org:apache:http:impl:cookie:BestMatchSpec.netscape|]   @type object;
#L0adbe6.   return v1  @type object;

   }
    procedure [|org:apache:http:impl:cookie:RFC2965Spec|] [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v3 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0adbf8.   v0:= v3.[|org:apache:http:impl:cookie:BestMatchSpec.strict|]   @type object;
#L0adbfc.   if v0 != 0 then goto L0adc16;
#L0adc00.   v0:= new [|org:apache:http:impl:cookie:RFC2965Spec|];
#L0adc04.   v1:= v3.[|org:apache:http:impl:cookie:BestMatchSpec.datepatterns|]   @type object;
#L0adc08.   v2:= v3.[|org:apache:http:impl:cookie:BestMatchSpec.oneHeader|]   @boolean;
#L0adc0c.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.<init>|](v0, v1, v2) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0adc12.   v3.[|org:apache:http:impl:cookie:BestMatchSpec.strict|]  := v0 @type object;
#L0adc16.   v0:= v3.[|org:apache:http:impl:cookie:BestMatchSpec.strict|]   @type object;
#L0adc1a.   return v0  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:BestMatchSpec.formatCookies|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v5 @type (this), [|java:util:List|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0adc2c.   if v6 != 0 then goto L0adc40;
#L0adc30.   v3:= new [|java:lang:IllegalArgumentException|];
#L0adc34.   v4:= "List of cookie may not be null" @type (object, string);
#L0adc38.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adc3e.   throw v3;
#L0adc40.    v2:= nan;
#L0adc46.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0adc4c.   v1:= temp  @type object;
#L0adc4e.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adc54.   v3:= temp;
#L0adc56.   if v3 == 0 then goto L0adc7c;
#L0adc5a.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adc60.   v0:= temp  @type object;
#L0adc62.   v0:= ([|org:apache:http:cookie:Cookie|])v0;
#L0adc66.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v0) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0adc6c.   v3:= temp;
#L0adc6e.   if v3 >= v2 then goto L0adc4e;
#L0adc72.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v0) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0adc78.   v2:= temp;
#L0adc7a.   goto L0adc4e;
#L0adc7c.   if v2 <= 0 then goto L0adc92;
#L0adc80.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v5) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adc86.   v3:= temp  @type object;
#L0adc88.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.formatCookies|](v3, v6) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0adc8e.   v3:= temp  @type object;
#L0adc90.   return v3  @type object;
#L0adc92.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getCompat|](v5) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getCompat:()Lorg/apache/http/impl/cookie/BrowserCompatSpec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adc98.   v3:= temp  @type object;
#L0adc9a.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.formatCookies|](v3, v6) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0adca0.   v3:= temp  @type object;
#L0adca2.   goto L0adc90;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:BestMatchSpec.getVersion|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0adcb4.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v1) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adcba.   v0:= temp  @type object;
#L0adcbc.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getVersion|](v0) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getVersion:()I|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0adcc2.   v0:= temp;
#L0adcc4.   return v0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:cookie:BestMatchSpec.getVersionHeader|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0adcd8.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v1) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adcde.   v0:= temp  @type object;
#L0adce0.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getVersionHeader|](v0) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getVersionHeader:()Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0adce6.   v0:= temp  @type object;
#L0adce8.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:BestMatchSpec.match|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0adcfc.   if v3 != 0 then goto L0add10;
#L0add00.   v0:= new [|java:lang:IllegalArgumentException|];
#L0add04.   v1:= "Cookie may not be null" @type (object, string);
#L0add08.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0add0e.   throw v0;
#L0add10.   if v4 != 0 then goto L0add24;
#L0add14.   v0:= new [|java:lang:IllegalArgumentException|];
#L0add18.   v1:= "Cookie origin may not be null" @type (object, string);
#L0add1c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0add22.   throw v0;
#L0add24.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0add2a.   v0:= temp;
#L0add2c.   if v0 <= 0 then goto L0add42;
#L0add30.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0add36.   v0:= temp  @type object;
#L0add38.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.match|](v0, v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0add3e.   v0:= temp;
#L0add40.   return v0;
#L0add42.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getCompat|](v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getCompat:()Lorg/apache/http/impl/cookie/BrowserCompatSpec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0add48.   v0:= temp  @type object;
#L0add4a.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.match|](v0, v3, v4) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0add50.   v0:= temp;
#L0add52.   goto L0add40;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:BestMatchSpec.parse|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v9 @type (this), [|org:apache:http:Header|] v10 @type (object), [|org:apache:http:cookie:CookieOrigin|] v11 @type (object)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0add64.   if v10 != 0 then goto L0add78;
#L0add68.   v7:= new [|java:lang:IllegalArgumentException|];
#L0add6c.   v8:= "Header may not be null" @type (object, string);
#L0add70.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0add76.   throw v7;
#L0add78.   if v11 != 0 then goto L0add8c;
#L0add7c.   v7:= new [|java:lang:IllegalArgumentException|];
#L0add80.   v8:= "Cookie origin may not be null" @type (object, string);
#L0add84.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0add8a.   throw v7;
#L0add8c.   call temp:=  [|org:apache:http:Header.getElements|](v10) @signature [|Lorg/apache/http/Header;.getElements:()[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0add92.   v2:= temp  @type object;
#L0add94.   v6:= 0  @length 4;
#L0add96.   v5:= 0  @length 4;
#L0add98.   v0:= v2  @type object;
#L0add9a.   v4:= v0.length;
#L0add9c.   v3:= 0  @length 4;
#L0add9e.   if v3 >= v4 then goto L0addd0;
#L0adda2.   v1:= v0[v3]  @type object;
#L0adda6.   v7:= "version" @type (object, string);
#L0addaa.   call temp:=  [|org:apache:http:HeaderElement.getParameterByName|](v1, v7) @signature [|Lorg/apache/http/HeaderElement;.getParameterByName:(Ljava/lang/String;)Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0addb0.   v7:= temp  @type object;
#L0addb2.   if v7 == 0 then goto L0addb8;
#L0addb6.   v6:= 1  @length 4;
#L0addb8.   v7:= "expires" @type (object, string);
#L0addbc.   call temp:=  [|org:apache:http:HeaderElement.getParameterByName|](v1, v7) @signature [|Lorg/apache/http/HeaderElement;.getParameterByName:(Ljava/lang/String;)Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0addc2.   v7:= temp  @type object;
#L0addc4.   if v7 == 0 then goto L0addca;
#L0addc8.   v5:= 1  @length 4;
#L0addca.   v3:= v3 + 1;
#L0addce.   goto L0add9e;
#L0addd0.   if v5 == 0 then goto L0addd4;
#L0addd4.   if v6 == 0 then goto L0addea;
#L0addd8.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v9) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0addde.   v7:= temp  @type object;
#L0adde0.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.parse|](v7, v2, v11) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0adde6.   v7:= temp  @type object;
#L0adde8.   return v7  @type object;
#L0addea.   if v5 == 0 then goto L0ade00;
#L0addee.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getNetscape|](v9) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getNetscape:()Lorg/apache/http/impl/cookie/NetscapeDraftSpec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0addf4.   v7:= temp  @type object;
#L0addf6.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.parse|](v7, v10, v11) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0addfc.   v7:= temp  @type object;
#L0addfe.   goto L0adde8;
#L0ade00.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getCompat|](v9) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getCompat:()Lorg/apache/http/impl/cookie/BrowserCompatSpec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0ade06.   v7:= temp  @type object;
#L0ade08.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.parse|](v7, v2, v11) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ade0e.   v7:= temp  @type object;
#L0ade10.   goto L0adde8;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BestMatchSpec.validate|] ([|org:apache:http:impl:cookie:BestMatchSpec|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BestMatchSpec|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ade24.   if v3 != 0 then goto L0ade38;
#L0ade28.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ade2c.   v1:= "Cookie may not be null" @type (object, string);
#L0ade30.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ade36.   throw v0;
#L0ade38.   if v4 != 0 then goto L0ade4c;
#L0ade3c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ade40.   v1:= "Cookie origin may not be null" @type (object, string);
#L0ade44.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ade4a.   throw v0;
#L0ade4c.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ade52.   v0:= temp;
#L0ade54.   if v0 <= 0 then goto L0ade68;
#L0ade58.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getStrict|](v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getStrict:()Lorg/apache/http/impl/cookie/RFC2965Spec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0ade5e.   v0:= temp  @type object;
#L0ade60.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.validate|](v0, v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0ade66.   return @void ;
#L0ade68.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.getCompat|](v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.getCompat:()Lorg/apache/http/impl/cookie/BrowserCompatSpec;|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0ade6e.   v0:= temp  @type object;
#L0ade70.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.validate|](v0, v3, v4) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ade76.   goto L0ade66;

   }
record [|org:apache:http:impl:cookie:BestMatchSpecFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpecFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BestMatchSpecFactory.<init>|] ([|org:apache:http:impl:cookie:BestMatchSpecFactory|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BestMatchSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpecFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ade88.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ade8e.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:impl:cookie:BestMatchSpecFactory.newInstance|] ([|org:apache:http:impl:cookie:BestMatchSpecFactory|] v4 @type (this), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:BestMatchSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/BestMatchSpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0adea0.   if v5 == 0 then goto L0aded4;
#L0adea4.   v1:= new [|org:apache:http:impl:cookie:BestMatchSpec|];
#L0adea8.   v0:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0adeac.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v5, v0) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0adeb2.   v0:= temp  @type object;
#L0adeb4.   v0:= ([|java:lang:String|][])v0;
#L0adeb8.   v0:= ([|java:lang:String|][])v0;
#L0adebc.   v2:= "http.protocol.single-cookie-header" @type (object, string);
#L0adec0.   v3:= 0  @length 4;
#L0adec2.   call temp:=  [|org:apache:http:params:HttpParams.getBooleanParameter|](v5, v2, v3) @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0adec8.   v2:= temp;
#L0adeca.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0aded0.   v0:= v1  @type object;
#L0aded2.   return v0  @type object;
#L0aded4.   v0:= new [|org:apache:http:impl:cookie:BestMatchSpec|];
#L0aded8.   call temp:=  [|org:apache:http:impl:cookie:BestMatchSpec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/BestMatchSpec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BestMatchSpec|] @type direct;
#L0adede.   goto L0aded2;

   }
record [|org:apache:http:impl:cookie:CookieSpecBase|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|org:apache:http:impl:cookie:AbstractCookieSpec|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:CookieSpecBase.<init>|] ([|org:apache:http:impl:cookie:CookieSpecBase|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0adef0.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieSpec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieSpec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieSpec|] @type direct;
#L0adef6.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:CookieSpecBase.getDefaultDomain|] ([|org:apache:http:cookie:CookieOrigin|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getDefaultDomain:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @Access PROTECTED_STATIC {
      local temp ;
        v0;
      
#L0adf08.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v1) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0adf0e.   v0:= temp  @type object;
#L0adf10.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:CookieSpecBase.getDefaultPath|] ([|org:apache:http:cookie:CookieOrigin|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getDefaultPath:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @Access PROTECTED_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0adf24.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPath|](v3) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0adf2a.   v0:= temp  @type object;
#L0adf2c.   v2:= 47  @length 16;
#L0adf30.   call temp:=  [|java:lang:String.lastIndexOf|](v0, v2) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0adf36.   v1:= temp;
#L0adf38.   if v1 < 0 then goto L0adf4c;
#L0adf3c.   if v1 != 0 then goto L0adf42;
#L0adf40.   v1:= 1  @length 4;
#L0adf42.   v2:= 0  @length 4;
#L0adf44.   call temp:=  [|java:lang:String.substring|](v0, v2, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0adf4a.   v0:= temp  @type object;
#L0adf4c.   return v0  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:CookieSpecBase.match|] ([|org:apache:http:impl:cookie:CookieSpecBase|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:CookieOrigin|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0adf60.   if v5 != 0 then goto L0adf74;
#L0adf64.   v2:= new [|java:lang:IllegalArgumentException|];
#L0adf68.   v3:= "Cookie may not be null" @type (object, string);
#L0adf6c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adf72.   throw v2;
#L0adf74.   if v6 != 0 then goto L0adf88;
#L0adf78.   v2:= new [|java:lang:IllegalArgumentException|];
#L0adf7c.   v3:= "Cookie origin may not be null" @type (object, string);
#L0adf80.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0adf86.   throw v2;
#L0adf88.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.getAttribHandlers|](v4) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getAttribHandlers:()Ljava/util/Collection;|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type virtual;
#L0adf8e.   v2:= temp  @type object;
#L0adf90.   call temp:=  [|java:util:Collection.iterator|](v2) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0adf96.   v1:= temp  @type object;
#L0adf98.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adf9e.   v2:= temp;
#L0adfa0.   if v2 == 0 then goto L0adfc0;
#L0adfa4.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adfaa.   v0:= temp  @type object;
#L0adfac.   v0:= ([|org:apache:http:cookie:CookieAttributeHandler|])v0;
#L0adfb0.   call temp:=  [|org:apache:http:cookie:CookieAttributeHandler.match|](v0, v5, v6) @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:cookie:CookieAttributeHandler|] @type interface;
#L0adfb6.   v2:= temp;
#L0adfb8.   if v2 != 0 then goto L0adf98;
#L0adfbc.   v2:= 0  @length 4;
#L0adfbe.   return v2;
#L0adfc0.   v2:= 1  @length 4;
#L0adfc2.   goto L0adfbe;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:CookieSpecBase.parse|] ([|org:apache:http:impl:cookie:CookieSpecBase|] v16 @type (this), [|org:apache:http:HeaderElement|][] v17 @type (object), [|org:apache:http:cookie:CookieOrigin|] v18 @type (object)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L0adfd4.   v5:= new [|java:util:ArrayList|];
#L0adfd8.   v0:= v17  @type object;
#L0adfdc.   v14:= v0.length;
#L0adfde.   call temp:=  [|java:util:ArrayList.<init>|](v5, v14) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0adfe4.   v1:= v17  @type object;
#L0adfe8.   v10:= v1.length;
#L0adfea.   v8:= 0  @length 4;
#L0adfec.   if v8 >= v10 then goto L0ae0b2;
#L0adff0.   v7:= v1[v8]  @type object;
#L0adff4.   call temp:=  [|org:apache:http:HeaderElement.getName|](v7) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0adffa.   v11:= temp  @type object;
#L0adffc.   call temp:=  [|org:apache:http:HeaderElement.getValue|](v7) @signature [|Lorg/apache/http/HeaderElement;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0ae002.   v13:= temp  @type object;
#L0ae004.   if v11 == 0 then goto L0ae014;
#L0ae008.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae00e.   v14:= temp;
#L0ae010.   if v14 != 0 then goto L0ae024;
#L0ae014.   v14:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ae018.   v15:= "Cookie name may not be empty" @type (object, string);
#L0ae01c.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v14, v15) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ae022.   throw v14;
#L0ae024.   v4:= new [|org:apache:http:impl:cookie:BasicClientCookie|];
#L0ae028.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.<init>|](v4, v11, v13) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type direct;
#L0ae02e.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.getDefaultPath|](v18) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getDefaultPath:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type static;
#L0ae034.   v14:= temp  @type object;
#L0ae036.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setPath|](v4, v14) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setPath:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0ae03c.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.getDefaultDomain|](v18) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getDefaultDomain:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type static;
#L0ae042.   v14:= temp  @type object;
#L0ae044.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setDomain|](v4, v14) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0ae04a.   call temp:=  [|org:apache:http:HeaderElement.getParameters|](v7) @signature [|Lorg/apache/http/HeaderElement;.getParameters:()[Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0ae050.   v3:= temp  @type object;
#L0ae052.   v14:= v3.length;
#L0ae054.   v9:= v14 + -1;
#L0ae058.   if v9 < 0 then goto L0ae0a6;
#L0ae05c.   v2:= v3[v9]  @type object;
#L0ae060.   call temp:=  [|org:apache:http:NameValuePair.getName|](v2) @signature [|Lorg/apache/http/NameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0ae066.   v14:= temp  @type object;
#L0ae068.   v15:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0ae06c.   call temp:=  [|java:lang:String.toLowerCase|](v14, v15) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae072.   v12:= temp  @type object;
#L0ae074.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v2) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0ae07a.   v14:= temp  @type object;
#L0ae07c.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setAttribute|](v4, v12, v14) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0ae082.   v0:= v16  @type object;
#L0ae086.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.findAttribHandler|](v0, v12) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.findAttribHandler:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type virtual;
#L0ae08c.   v6:= temp  @type object;
#L0ae08e.   if v6 == 0 then goto L0ae0a0;
#L0ae092.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v2) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0ae098.   v14:= temp  @type object;
#L0ae09a.   call temp:=  [|org:apache:http:cookie:CookieAttributeHandler.parse|](v6, v4, v14) @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:CookieAttributeHandler|] @type interface;
#L0ae0a0.   v9:= v9 + -1;
#L0ae0a4.   goto L0ae058;
#L0ae0a6.   call temp:=  [|java:util:List.add|](v5, v4) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ae0ac.   v8:= v8 + 1;
#L0ae0b0.   goto L0adfec;
#L0ae0b2.   return v5  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:CookieSpecBase.validate|] ([|org:apache:http:impl:cookie:CookieSpecBase|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:CookieOrigin|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:CookieSpecBase|] @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ae0c4.   if v5 != 0 then goto L0ae0d8;
#L0ae0c8.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ae0cc.   v3:= "Cookie may not be null" @type (object, string);
#L0ae0d0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae0d6.   throw v2;
#L0ae0d8.   if v6 != 0 then goto L0ae0ec;
#L0ae0dc.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ae0e0.   v3:= "Cookie origin may not be null" @type (object, string);
#L0ae0e4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae0ea.   throw v2;
#L0ae0ec.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.getAttribHandlers|](v4) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.getAttribHandlers:()Ljava/util/Collection;|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type virtual;
#L0ae0f2.   v2:= temp  @type object;
#L0ae0f4.   call temp:=  [|java:util:Collection.iterator|](v2) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0ae0fa.   v1:= temp  @type object;
#L0ae0fc.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae102.   v2:= temp;
#L0ae104.   if v2 == 0 then goto L0ae11c;
#L0ae108.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae10e.   v0:= temp  @type object;
#L0ae110.   v0:= ([|org:apache:http:cookie:CookieAttributeHandler|])v0;
#L0ae114.   call temp:=  [|org:apache:http:cookie:CookieAttributeHandler.validate|](v0, v5, v6) @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:cookie:CookieAttributeHandler|] @type interface;
#L0ae11a.   goto L0ae0fc;
#L0ae11c.   return @void ;

   }
record [|org:apache:http:impl:cookie:BrowserCompatSpec|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:CookieSpecBase|] {
      [|java:lang:String|][] [|org:apache:http:impl:cookie:BrowserCompatSpec.datepatterns|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:String|][] @@[|org:apache:http:impl:cookie:BrowserCompatSpec.DATE_PATTERNS|]    @AccessFlag PROTECTED_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:BrowserCompatSpec.<clinit>|] () @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ae130.   v0:= 14  @length 16;
#L0ae134.   v0:= new [|java:lang:String|][v0];
#L0ae138.   v1:= 0  @length 4;
#L0ae13a.   v2:= "EEE, dd MMM yyyy HH:mm:ss zzz" @type (object, string);
#L0ae13e.   v0[v1]:= v2  @type object;
#L0ae142.   v1:= 1  @length 4;
#L0ae144.   v2:= "EEEE, dd-MMM-yy HH:mm:ss zzz" @type (object, string);
#L0ae148.   v0[v1]:= v2  @type object;
#L0ae14c.   v1:= 2  @length 4;
#L0ae14e.   v2:= "EEE MMM d HH:mm:ss yyyy" @type (object, string);
#L0ae152.   v0[v1]:= v2  @type object;
#L0ae156.   v1:= 3  @length 4;
#L0ae158.   v2:= "EEE, dd-MMM-yyyy HH:mm:ss z" @type (object, string);
#L0ae15c.   v0[v1]:= v2  @type object;
#L0ae160.   v1:= 4  @length 4;
#L0ae162.   v2:= "EEE, dd-MMM-yyyy HH-mm-ss z" @type (object, string);
#L0ae166.   v0[v1]:= v2  @type object;
#L0ae16a.   v1:= 5  @length 4;
#L0ae16c.   v2:= "EEE, dd MMM yy HH:mm:ss z" @type (object, string);
#L0ae170.   v0[v1]:= v2  @type object;
#L0ae174.   v1:= 6  @length 4;
#L0ae176.   v2:= "EEE dd-MMM-yyyy HH:mm:ss z" @type (object, string);
#L0ae17a.   v0[v1]:= v2  @type object;
#L0ae17e.   v1:= 7  @length 4;
#L0ae180.   v2:= "EEE dd MMM yyyy HH:mm:ss z" @type (object, string);
#L0ae184.   v0[v1]:= v2  @type object;
#L0ae188.   v1:= 8  @length 16;
#L0ae18c.   v2:= "EEE dd-MMM-yyyy HH-mm-ss z" @type (object, string);
#L0ae190.   v0[v1]:= v2  @type object;
#L0ae194.   v1:= 9  @length 16;
#L0ae198.   v2:= "EEE dd-MMM-yy HH:mm:ss z" @type (object, string);
#L0ae19c.   v0[v1]:= v2  @type object;
#L0ae1a0.   v1:= 10  @length 16;
#L0ae1a4.   v2:= "EEE dd MMM yy HH:mm:ss z" @type (object, string);
#L0ae1a8.   v0[v1]:= v2  @type object;
#L0ae1ac.   v1:= 11  @length 16;
#L0ae1b0.   v2:= "EEE,dd-MMM-yy HH:mm:ss z" @type (object, string);
#L0ae1b4.   v0[v1]:= v2  @type object;
#L0ae1b8.   v1:= 12  @length 16;
#L0ae1bc.   v2:= "EEE,dd-MMM-yyyy HH:mm:ss z" @type (object, string);
#L0ae1c0.   v0[v1]:= v2  @type object;
#L0ae1c4.   v1:= 13  @length 16;
#L0ae1c8.   v2:= "EEE, dd-MM-yyyy HH:mm:ss z" @type (object, string);
#L0ae1cc.   v0[v1]:= v2  @type object;
#L0ae1d0.   @@[|org:apache:http:impl:cookie:BrowserCompatSpec.DATE_PATTERNS|] := v0  @type object;
#L0ae1d4.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ae1e8.   v0:= 0  @length 4;
#L0ae1ea.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type direct;
#L0ae1f0.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v3 @type (this), [|java:lang:String|][] v4 @type (object)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:([Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ae204.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.<init>|](v3) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type direct;
#L0ae20a.   if v4 == 0 then goto L0ae29c;
#L0ae20e.   call temp:=  [|java:lang:String[].clone|](v4) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0ae214.   v0:= temp  @type object;
#L0ae216.   v0:= ([|java:lang:String|][])v0;
#L0ae21a.   v3.[|org:apache:http:impl:cookie:BrowserCompatSpec.datepatterns|]  := v0 @type object;
#L0ae21e.   v0:= "path" @type (object, string);
#L0ae222.   v1:= new [|org:apache:http:impl:cookie:BasicPathHandler|];
#L0ae226.   call temp:=  [|org:apache:http:impl:cookie:BasicPathHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicPathHandler|] @type direct;
#L0ae22c.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae232.   v0:= "domain" @type (object, string);
#L0ae236.   v1:= new [|org:apache:http:impl:cookie:BasicDomainHandler|];
#L0ae23a.   call temp:=  [|org:apache:http:impl:cookie:BasicDomainHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicDomainHandler|] @type direct;
#L0ae240.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae246.   v0:= "max-age" @type (object, string);
#L0ae24a.   v1:= new [|org:apache:http:impl:cookie:BasicMaxAgeHandler|];
#L0ae24e.   call temp:=  [|org:apache:http:impl:cookie:BasicMaxAgeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicMaxAgeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicMaxAgeHandler|] @type direct;
#L0ae254.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae25a.   v0:= "secure" @type (object, string);
#L0ae25e.   v1:= new [|org:apache:http:impl:cookie:BasicSecureHandler|];
#L0ae262.   call temp:=  [|org:apache:http:impl:cookie:BasicSecureHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicSecureHandler|] @type direct;
#L0ae268.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae26e.   v0:= "comment" @type (object, string);
#L0ae272.   v1:= new [|org:apache:http:impl:cookie:BasicCommentHandler|];
#L0ae276.   call temp:=  [|org:apache:http:impl:cookie:BasicCommentHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicCommentHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicCommentHandler|] @type direct;
#L0ae27c.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae282.   v0:= "expires" @type (object, string);
#L0ae286.   v1:= new [|org:apache:http:impl:cookie:BasicExpiresHandler|];
#L0ae28a.   v2:= v3.[|org:apache:http:impl:cookie:BrowserCompatSpec.datepatterns|]   @type object;
#L0ae28e.   call temp:=  [|org:apache:http:impl:cookie:BasicExpiresHandler.<init>|](v1, v2) @signature [|Lorg/apache/http/impl/cookie/BasicExpiresHandler;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicExpiresHandler|] @type direct;
#L0ae294.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae29a.   return @void ;
#L0ae29c.   v0:= @@[|org:apache:http:impl:cookie:BrowserCompatSpec.DATE_PATTERNS|]   @type object;
#L0ae2a0.   v3.[|org:apache:http:impl:cookie:BrowserCompatSpec.datepatterns|]  := v0 @type object;
#L0ae2a4.   goto L0ae21e;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:BrowserCompatSpec.formatCookies|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v7 @type (this), [|java:util:List|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ae2b8.   if v8 != 0 then goto L0ae2cc;
#L0ae2bc.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ae2c0.   v6:= "List of cookies may not be null" @type (object, string);
#L0ae2c4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae2ca.   throw v5;
#L0ae2cc.   call temp:=  [|java:util:List.isEmpty|](v8) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ae2d2.   v5:= temp;
#L0ae2d4.   if v5 == 0 then goto L0ae2e8;
#L0ae2d8.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ae2dc.   v6:= "List of cookies may not be empty" @type (object, string);
#L0ae2e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae2e6.   throw v5;
#L0ae2e8.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0ae2ec.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0ae2f2.   v5:= temp;
#L0ae2f4.   v5:= v5 * 20;
#L0ae2f8.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0ae2fe.   v5:= "Cookie" @type (object, string);
#L0ae302.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae308.   v5:= ": " @type (object, string);
#L0ae30c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae312.   v3:= 0  @length 4;
#L0ae314.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0ae31a.   v5:= temp;
#L0ae31c.   if v3 >= v5 then goto L0ae36a;
#L0ae320.   call temp:=  [|java:util:List.get|](v8, v3) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0ae326.   v1:= temp  @type object;
#L0ae328.   v1:= ([|org:apache:http:cookie:Cookie|])v1;
#L0ae32c.   if v3 <= 0 then goto L0ae33a;
#L0ae330.   v5:= "; " @type (object, string);
#L0ae334.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae33a.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ae340.   v5:= temp  @type object;
#L0ae342.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae348.   v5:= "=" @type (object, string);
#L0ae34c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae352.   call temp:=  [|org:apache:http:cookie:Cookie.getValue|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ae358.   v4:= temp  @type object;
#L0ae35a.   if v4 == 0 then goto L0ae364;
#L0ae35e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae364.   v3:= v3 + 1;
#L0ae368.   goto L0ae314;
#L0ae36a.   v2:= new [|java:util:ArrayList|];
#L0ae36e.   v5:= 1  @length 4;
#L0ae370.   call temp:=  [|java:util:ArrayList.<init>|](v2, v5) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ae376.   v5:= new [|org:apache:http:message:BufferedHeader|];
#L0ae37a.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v5, v0) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0ae380.   call temp:=  [|java:util:List.add|](v2, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ae386.   return v2  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:BrowserCompatSpec.getVersion|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae398.   v0:= 0  @length 4;
#L0ae39a.   return v0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:cookie:BrowserCompatSpec.getVersionHeader|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae3ac.   v0:= 0  @length 4;
#L0ae3ae.   return v0  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:BrowserCompatSpec.parse|] ([|org:apache:http:impl:cookie:BrowserCompatSpec|] v13 @type (this), [|org:apache:http:Header|] v14 @type (object), [|org:apache:http:cookie:CookieOrigin|] v15 @type (object)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpec|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0ae3c0.   v12:= 0  @length 4;
#L0ae3c2.   v11:= -1  @length 4;
#L0ae3c4.   if v14 != 0 then goto L0ae3d8;
#L0ae3c8.   v9:= new [|java:lang:IllegalArgumentException|];
#L0ae3cc.   v10:= "Header may not be null" @type (object, string);
#L0ae3d0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v9, v10) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae3d6.   throw v9;
#L0ae3d8.   if v15 != 0 then goto L0ae3ec;
#L0ae3dc.   v9:= new [|java:lang:IllegalArgumentException|];
#L0ae3e0.   v10:= "Cookie origin may not be null" @type (object, string);
#L0ae3e4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v9, v10) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae3ea.   throw v9;
#L0ae3ec.   call temp:=  [|org:apache:http:Header.getValue|](v14) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0ae3f2.   v3:= temp  @type object;
#L0ae3f4.   v6:= 0  @length 4;
#L0ae3f6.   v9:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0ae3fa.   call temp:=  [|java:lang:String.toLowerCase|](v3, v9) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae400.   v9:= temp  @type object;
#L0ae402.   v10:= "expires=" @type (object, string);
#L0ae406.   call temp:=  [|java:lang:String.indexOf|](v9, v10) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae40c.   v4:= temp;
#L0ae40e.   if v4 == v11 then goto L0ae44c;
#L0ae412.   v9:= "expires=" @type (object, string);
#L0ae416.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae41c.   v9:= temp;
#L0ae41e.   v4:= v4 + v9  @type int;
#L0ae420.   v9:= 59  @length 16;
#L0ae424.   call temp:=  [|java:lang:String.indexOf|](v3, v9, v4) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae42a.   v5:= temp;
#L0ae42c.   if v5 != v11 then goto L0ae438;
#L0ae430.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae436.   v5:= temp;
#L0ae438.   call temp:=  [|java:lang:String.substring|](v3, v4, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae43e.   v9:= temp  @type object;
#L0ae440.   v10:= v13.[|org:apache:http:impl:cookie:BrowserCompatSpec.datepatterns|]   @type object;
#L0ae444.   call temp:=  [|org:apache:http:impl:cookie:DateUtils.parseDate|](v9, v10) @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils|] @type static;
#L0ae44a.   v6:= 1  @length 4;
#L0ae44c.   v2:= 0  @length 4;
#L0ae44e.   if v6 == 0 then goto L0ae4ee;
#L0ae452.   v7:= @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DEFAULT|]   @type object;
#L0ae456.   v9:= instanceof @varname v14 @type [|org:apache:http:FormattedHeader|];
#L0ae45a.   if v9 == 0 then goto L0ae4a6;
#L0ae45e.   v9:= v14  @type object;
#L0ae460.   v9:= ([|org:apache:http:FormattedHeader|])v9;
#L0ae464.   call temp:=  [|org:apache:http:FormattedHeader.getBuffer|](v9) @signature [|Lorg/apache/http/FormattedHeader;.getBuffer:()Lorg/apache/http/util/CharArrayBuffer;|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0ae46a.   v0:= temp  @type object;
#L0ae46c.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0ae470.   v14:= ([|org:apache:http:FormattedHeader|])v14;
#L0ae474.   call temp:=  [|org:apache:http:FormattedHeader.getValuePos|](v14) @signature [|Lorg/apache/http/FormattedHeader;.getValuePos:()I|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0ae47a.   v9:= temp;
#L0ae47c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae482.   v10:= temp;
#L0ae484.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v9, v10) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0ae48a.   v9:= 1  @length 4;
#L0ae48c.   v2:= new [|org:apache:http:HeaderElement|][v9];
#L0ae490.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.parseHeader|](v7, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.parseHeader:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @type virtual;
#L0ae496.   v9:= temp  @type object;
#L0ae498.   v2[v12]:= v9  @type object;
#L0ae49c.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.parse|](v13, v2, v15) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type virtual;
#L0ae4a2.   v9:= temp  @type object;
#L0ae4a4.   return v9  @type object;
#L0ae4a6.   call temp:=  [|org:apache:http:Header.getValue|](v14) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0ae4ac.   v8:= temp  @type object;
#L0ae4ae.   if v8 != 0 then goto L0ae4c2;
#L0ae4b2.   v9:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0ae4b6.   v10:= "Header value is null" @type (object, string);
#L0ae4ba.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v9, v10) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0ae4c0.   throw v9;
#L0ae4c2.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0ae4c6.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae4cc.   v9:= temp;
#L0ae4ce.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v9) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0ae4d4.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v8) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae4da.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0ae4de.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0ae4e4.   v9:= temp;
#L0ae4e6.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v12, v9) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0ae4ec.   goto L0ae48a;
#L0ae4ee.   call temp:=  [|org:apache:http:Header.getElements|](v14) @signature [|Lorg/apache/http/Header;.getElements:()[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0ae4f4.   v2:= temp  @type object;
#L0ae4f6.   goto L0ae49c;
#L0ae4f8.   v9:= Exception  @type object;
#L0ae4fa.   goto L0ae44c;
  catch  [|org:apache:http:impl:cookie:DateParseException|] @[L0ae438..L0ae44a] goto L0ae4f8;

   }
record [|org:apache:http:impl:cookie:BrowserCompatSpecFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpecFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:BrowserCompatSpecFactory.<init>|] ([|org:apache:http:impl:cookie:BrowserCompatSpecFactory|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpecFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ae51c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae522.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:impl:cookie:BrowserCompatSpecFactory.newInstance|] ([|org:apache:http:impl:cookie:BrowserCompatSpecFactory|] v2 @type (this), [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:BrowserCompatSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ae534.   if v3 == 0 then goto L0ae55a;
#L0ae538.   v1:= new [|org:apache:http:impl:cookie:BrowserCompatSpec|];
#L0ae53c.   v0:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0ae540.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v0) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0ae546.   v0:= temp  @type object;
#L0ae548.   v0:= ([|java:lang:String|][])v0;
#L0ae54c.   v0:= ([|java:lang:String|][])v0;
#L0ae550.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type direct;
#L0ae556.   v0:= v1  @type object;
#L0ae558.   return v0  @type object;
#L0ae55a.   v0:= new [|org:apache:http:impl:cookie:BrowserCompatSpec|];
#L0ae55e.   call temp:=  [|org:apache:http:impl:cookie:BrowserCompatSpec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/BrowserCompatSpec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BrowserCompatSpec|] @type direct;
#L0ae564.   goto L0ae558;

   }
record [|org:apache:http:impl:cookie:DateParseException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|org:apache:http:impl:cookie:DateParseException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:DateParseException.<init>|] ([|org:apache:http:impl:cookie:DateParseException|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:DateParseException|] @signature [|Lorg/apache/http/impl/cookie/DateParseException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ae578.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0ae57e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:DateParseException.<init>|] ([|org:apache:http:impl:cookie:DateParseException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:DateParseException|] @signature [|Lorg/apache/http/impl/cookie/DateParseException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ae590.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0ae596.   return @void ;

   }
record [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|]  @type class @AccessFlag FINAL  extends [|java:lang:ThreadLocal|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1.<init>|] ([|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0ae5a8.   call temp:=  [|java:lang:ThreadLocal.<init>|](v0) @signature [|Ljava/lang/ThreadLocal;.<init>:()V|] @classDescriptor [|java:lang:ThreadLocal|] @type direct;
#L0ae5ae.   return @void ;

   }
    procedure [|java:lang:Object|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1.initialValue|] ([|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder$1;.initialValue:()Ljava/lang/Object;|] @Access PROTECTED_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ae5c0.   call temp:=  [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1.initialValue|](v1) @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder$1;.initialValue:()Ljava/lang/ref/SoftReference;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] @type virtual;
#L0ae5c6.   v0:= temp  @type object;
#L0ae5c8.   return v0  @type object;

   }
    procedure [|java:lang:ref:SoftReference|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1.initialValue|] ([|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder$1;.initialValue:()Ljava/lang/ref/SoftReference;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0ae5dc.   v0:= new [|java:lang:ref:SoftReference|];
#L0ae5e0.   v1:= new [|java:util:HashMap|];
#L0ae5e4.   call temp:=  [|java:util:HashMap.<init>|](v1) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ae5ea.   call temp:=  [|java:lang:ref:SoftReference.<init>|](v0, v1) @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:SoftReference|] @type direct;
#L0ae5f0.   return v0  @type object;

   }
record [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|]  @type class @AccessFlag FINAL  {
   }
      global [|java:lang:ThreadLocal|] @@[|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.THREADLOCAL_FORMATS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.<clinit>|] () @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ae604.   v0:= new [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|];
#L0ae608.   call temp:=  [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder$1;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder$1|] @type direct;
#L0ae60e.   @@[|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.THREADLOCAL_FORMATS|] := v0  @type object;
#L0ae612.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.<init>|] ([|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0ae624.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae62a.   return @void ;

   }
    procedure [|java:text:SimpleDateFormat|] [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.formatFor|] ([|java:lang:String|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;.formatFor:(Ljava/lang/String;)Ljava/text/SimpleDateFormat;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ae63c.   v3:= @@[|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.THREADLOCAL_FORMATS|]   @type object;
#L0ae640.   call temp:=  [|java:lang:ThreadLocal.get|](v3) @signature [|Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L0ae646.   v2:= temp  @type object;
#L0ae648.   v2:= ([|java:lang:ref:SoftReference|])v2;
#L0ae64c.   call temp:=  [|java:lang:ref:SoftReference.get|](v2) @signature [|Ljava/lang/ref/SoftReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:SoftReference|] @type virtual;
#L0ae652.   v1:= temp  @type object;
#L0ae654.   v1:= ([|java:util:Map|])v1;
#L0ae658.   if v1 != 0 then goto L0ae67a;
#L0ae65c.   v1:= new [|java:util:HashMap|];
#L0ae660.   call temp:=  [|java:util:HashMap.<init>|](v1) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ae666.   v3:= @@[|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.THREADLOCAL_FORMATS|]   @type object;
#L0ae66a.   v4:= new [|java:lang:ref:SoftReference|];
#L0ae66e.   call temp:=  [|java:lang:ref:SoftReference.<init>|](v4, v1) @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:SoftReference|] @type direct;
#L0ae674.   call temp:=  [|java:lang:ThreadLocal.set|](v3, v4) @signature [|Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L0ae67a.   call temp:=  [|java:util:Map.get|](v1, v5) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ae680.   v0:= temp  @type object;
#L0ae682.   v0:= ([|java:text:SimpleDateFormat|])v0;
#L0ae686.   if v0 != 0 then goto L0ae6b0;
#L0ae68a.   v0:= new [|java:text:SimpleDateFormat|];
#L0ae68e.   v3:= @@[|java:util:Locale.US|]   @type object;
#L0ae692.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v0, v5, v3) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0ae698.   v3:= "GMT" @type (object, string);
#L0ae69c.   call temp:=  [|java:util:TimeZone.getTimeZone|](v3) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0ae6a2.   v3:= temp  @type object;
#L0ae6a4.   call temp:=  [|java:text:SimpleDateFormat.setTimeZone|](v0, v3) @signature [|Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ae6aa.   call temp:=  [|java:util:Map.put|](v1, v5, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ae6b0.   return v0  @type object;

   }
record [|org:apache:http:impl:cookie:DateUtils|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:lang:String|][] @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_PATTERNS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Date|] @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_TWO_DIGIT_YEAR_START|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:TimeZone|] @@[|org:apache:http:impl:cookie:DateUtils.GMT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:cookie:DateUtils.PATTERN_ASCTIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:cookie:DateUtils.PATTERN_RFC1036|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|org:apache:http:impl:cookie:DateUtils.PATTERN_RFC1123|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:DateUtils.<clinit>|] () @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ae6c4.   v3:= 1  @length 4;
#L0ae6c6.   v2:= 0  @length 4;
#L0ae6c8.   v1:= 3  @length 4;
#L0ae6ca.   v1:= new [|java:lang:String|][v1];
#L0ae6ce.   v4:= "EEEE, dd-MMM-yy HH:mm:ss zzz" @type (object, string);
#L0ae6d2.   v1[v2]:= v4  @type object;
#L0ae6d6.   v4:= "EEE, dd MMM yyyy HH:mm:ss zzz" @type (object, string);
#L0ae6da.   v1[v3]:= v4  @type object;
#L0ae6de.   v4:= 2  @length 4;
#L0ae6e0.   v5:= "EEE MMM d HH:mm:ss yyyy" @type (object, string);
#L0ae6e4.   v1[v4]:= v5  @type object;
#L0ae6e8.   @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_PATTERNS|] := v1  @type object;
#L0ae6ec.   v1:= "GMT" @type (object, string);
#L0ae6f0.   call temp:=  [|java:util:TimeZone.getTimeZone|](v1) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0ae6f6.   v1:= temp  @type object;
#L0ae6f8.   @@[|org:apache:http:impl:cookie:DateUtils.GMT|] := v1  @type object;
#L0ae6fc.   call temp:=  [|java:util:Calendar.getInstance|]() @signature [|Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;|] @classDescriptor [|java:util:Calendar|] @type static;
#L0ae702.   v0:= temp  @type object;
#L0ae704.   v1:= @@[|org:apache:http:impl:cookie:DateUtils.GMT|]   @type object;
#L0ae708.   call temp:=  [|java:util:Calendar.setTimeZone|](v0, v1) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0ae70e.   v1:= 2000  @length 16;
#L0ae712.   v4:= v2;
#L0ae714.   v5:= v2;
#L0ae716.   v6:= v2;
#L0ae718.   call temp:=  [|java:util:Calendar.set|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Calendar;.set:(IIIIII)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0ae71e.   v1:= 14  @length 16;
#L0ae722.   call temp:=  [|java:util:Calendar.set|](v0, v1, v2) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0ae728.   call temp:=  [|java:util:Calendar.getTime|](v0) @signature [|Ljava/util/Calendar;.getTime:()Ljava/util/Date;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0ae72e.   v1:= temp  @type object;
#L0ae730.   @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_TWO_DIGIT_YEAR_START|] := v1  @type object;
#L0ae734.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:DateUtils.<init>|] ([|org:apache:http:impl:cookie:DateUtils|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0ae748.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae74e.   return @void ;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:DateUtils.formatDate|] ([|java:util:Date|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.formatDate:(Ljava/util/Date;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ae760.   v0:= "EEE, dd MMM yyyy HH:mm:ss zzz" @type (object, string);
#L0ae764.   call temp:=  [|org:apache:http:impl:cookie:DateUtils.formatDate|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/DateUtils;.formatDate:(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils|] @type static;
#L0ae76a.   v0:= temp  @type object;
#L0ae76c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|org:apache:http:impl:cookie:DateUtils.formatDate|] ([|java:util:Date|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.formatDate:(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ae780.   if v3 != 0 then goto L0ae794;
#L0ae784.   v1:= new [|java:lang:IllegalArgumentException|];
#L0ae788.   v2:= "date is null" @type (object, string);
#L0ae78c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae792.   throw v1;
#L0ae794.   if v4 != 0 then goto L0ae7a8;
#L0ae798.   v1:= new [|java:lang:IllegalArgumentException|];
#L0ae79c.   v2:= "pattern is null" @type (object, string);
#L0ae7a0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae7a6.   throw v1;
#L0ae7a8.   call temp:=  [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.formatFor|](v4) @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;.formatFor:(Ljava/lang/String;)Ljava/text/SimpleDateFormat;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] @type static;
#L0ae7ae.   v0:= temp  @type object;
#L0ae7b0.   call temp:=  [|java:text:SimpleDateFormat.format|](v0, v3) @signature [|Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ae7b6.   v1:= temp  @type object;
#L0ae7b8.   return v1  @type object;

   }
    procedure [|java:util:Date|] [|org:apache:http:impl:cookie:DateUtils.parseDate|] ([|java:lang:String|] v1 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;)Ljava/util/Date;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ae7cc.   v0:= 0  @length 4;
#L0ae7ce.   call temp:=  [|org:apache:http:impl:cookie:DateUtils.parseDate|](v1, v0, v0) @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils|] @type static;
#L0ae7d4.   v0:= temp  @type object;
#L0ae7d6.   return v0  @type object;

   }
    procedure [|java:util:Date|] [|org:apache:http:impl:cookie:DateUtils.parseDate|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|][] v2 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Date;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ae7e8.   v0:= 0  @length 4;
#L0ae7ea.   call temp:=  [|org:apache:http:impl:cookie:DateUtils.parseDate|](v1, v2, v0) @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils|] @type static;
#L0ae7f0.   v0:= temp  @type object;
#L0ae7f2.   return v0  @type object;

   }
    procedure [|java:util:Date|] [|org:apache:http:impl:cookie:DateUtils.parseDate|] ([|java:lang:String|] v8 @type (object), [|java:lang:String|][] v9 @type (object), [|java:util:Date|] v10 @type (object)) @owner [|org:apache:http:impl:cookie:DateUtils|] @signature [|Lorg/apache/http/impl/cookie/DateUtils;.parseDate:(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ae804.   v6:= 1  @length 4;
#L0ae806.   if v8 != 0 then goto L0ae81a;
#L0ae80a.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ae80e.   v6:= "dateValue is null" @type (object, string);
#L0ae812.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae818.   throw v5;
#L0ae81a.   if v9 != 0 then goto L0ae822;
#L0ae81e.   v9:= @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_PATTERNS|]   @type object;
#L0ae822.   if v10 != 0 then goto L0ae82a;
#L0ae826.   v10:= @@[|org:apache:http:impl:cookie:DateUtils.DEFAULT_TWO_DIGIT_YEAR_START|]   @type object;
#L0ae82a.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae830.   v5:= temp;
#L0ae832.   if v5 <= v6 then goto L0ae86a;
#L0ae836.   v5:= "'" @type (object, string);
#L0ae83a.   call temp:=  [|java:lang:String.startsWith|](v8, v5) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae840.   v5:= temp;
#L0ae842.   if v5 == 0 then goto L0ae86a;
#L0ae846.   v5:= "'" @type (object, string);
#L0ae84a.   call temp:=  [|java:lang:String.endsWith|](v8, v5) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae850.   v5:= temp;
#L0ae852.   if v5 == 0 then goto L0ae86a;
#L0ae856.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae85c.   v5:= temp;
#L0ae85e.   v5:= v5 + -1;
#L0ae862.   call temp:=  [|java:lang:String.substring|](v8, v6, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae868.   v8:= temp  @type object;
#L0ae86a.   v0:= v9  @type object;
#L0ae86c.   v4:= v0.length;
#L0ae86e.   v3:= 0  @length 4;
#L0ae870.   if v3 >= v4 then goto L0ae898;
#L0ae874.   v1:= v0[v3]  @type object;
#L0ae878.   call temp:=  [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder.formatFor|](v1) @signature [|Lorg/apache/http/impl/cookie/DateUtils$DateFormatHolder;.formatFor:(Ljava/lang/String;)Ljava/text/SimpleDateFormat;|] @classDescriptor [|org:apache:http:impl:cookie:DateUtils$DateFormatHolder|] @type static;
#L0ae87e.   v2:= temp  @type object;
#L0ae880.   call temp:=  [|java:text:SimpleDateFormat.set2DigitYearStart|](v2, v10) @signature [|Ljava/text/SimpleDateFormat;.set2DigitYearStart:(Ljava/util/Date;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ae886.   call temp:=  [|java:text:SimpleDateFormat.parse|](v2, v8) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ae88c.   v5:= temp  @type object;
#L0ae88e.   return v5  @type object;
#L0ae890.   v5:= Exception  @type object;
#L0ae892.   v3:= v3 + 1;
#L0ae896.   goto L0ae870;
#L0ae898.   v5:= new [|org:apache:http:impl:cookie:DateParseException|];
#L0ae89c.   v6:= new [|java:lang:StringBuilder|];
#L0ae8a0.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ae8a6.   v7:= "Unable to parse the date " @type (object, string);
#L0ae8aa.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae8b0.   v6:= temp  @type object;
#L0ae8b2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae8b8.   v6:= temp  @type object;
#L0ae8ba.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae8c0.   v6:= temp  @type object;
#L0ae8c2.   call temp:=  [|org:apache:http:impl:cookie:DateParseException.<init>|](v5, v6) @signature [|Lorg/apache/http/impl/cookie/DateParseException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:DateParseException|] @type direct;
#L0ae8c8.   throw v5;
  catch  [|java:text:ParseException|] @[L0ae886..L0ae88c] goto L0ae890;

   }
record [|org:apache:http:impl:cookie:NetscapeDomainHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:BasicDomainHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDomainHandler.<init>|] ([|org:apache:http:impl:cookie:NetscapeDomainHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ae8ec.   call temp:=  [|org:apache:http:impl:cookie:BasicDomainHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicDomainHandler|] @type direct;
#L0ae8f2.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:NetscapeDomainHandler.isSpecialDomain|] ([|java:lang:String|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.isSpecialDomain:(Ljava/lang/String;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ae904.   v1:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0ae908.   call temp:=  [|java:lang:String.toUpperCase|](v2, v1) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae90e.   v0:= temp  @type object;
#L0ae910.   v1:= ".COM" @type (object, string);
#L0ae914.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae91a.   v1:= temp;
#L0ae91c.   if v1 != 0 then goto L0ae980;
#L0ae920.   v1:= ".EDU" @type (object, string);
#L0ae924.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae92a.   v1:= temp;
#L0ae92c.   if v1 != 0 then goto L0ae980;
#L0ae930.   v1:= ".NET" @type (object, string);
#L0ae934.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae93a.   v1:= temp;
#L0ae93c.   if v1 != 0 then goto L0ae980;
#L0ae940.   v1:= ".GOV" @type (object, string);
#L0ae944.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae94a.   v1:= temp;
#L0ae94c.   if v1 != 0 then goto L0ae980;
#L0ae950.   v1:= ".MIL" @type (object, string);
#L0ae954.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae95a.   v1:= temp;
#L0ae95c.   if v1 != 0 then goto L0ae980;
#L0ae960.   v1:= ".ORG" @type (object, string);
#L0ae964.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae96a.   v1:= temp;
#L0ae96c.   if v1 != 0 then goto L0ae980;
#L0ae970.   v1:= ".INT" @type (object, string);
#L0ae974.   call temp:=  [|java:lang:String.endsWith|](v0, v1) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae97a.   v1:= temp;
#L0ae97c.   if v1 == 0 then goto L0ae984;
#L0ae980.   v1:= 1  @length 4;
#L0ae982.   return v1;
#L0ae984.   v1:= 0  @length 4;
#L0ae986.   goto L0ae982;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:NetscapeDomainHandler.match|] ([|org:apache:http:impl:cookie:NetscapeDomainHandler|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:CookieOrigin|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ae998.   if v5 != 0 then goto L0ae9ac;
#L0ae99c.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ae9a0.   v3:= "Cookie may not be null" @type (object, string);
#L0ae9a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae9aa.   throw v2;
#L0ae9ac.   if v6 != 0 then goto L0ae9c0;
#L0ae9b0.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ae9b4.   v3:= "Cookie origin may not be null" @type (object, string);
#L0ae9b8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ae9be.   throw v2;
#L0ae9c0.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v6) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0ae9c6.   v1:= temp  @type object;
#L0ae9c8.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v5) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0ae9ce.   v0:= temp  @type object;
#L0ae9d0.   if v0 != 0 then goto L0ae9d8;
#L0ae9d4.   v2:= 0  @length 4;
#L0ae9d6.   return v2;
#L0ae9d8.   call temp:=  [|java:lang:String.endsWith|](v1, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ae9de.   v2:= temp;
#L0ae9e0.   goto L0ae9d6;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDomainHandler.validate|] ([|org:apache:http:impl:cookie:NetscapeDomainHandler|] v6 @type (this), [|org:apache:http:cookie:Cookie|] v7 @type (object), [|org:apache:http:cookie:CookieOrigin|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ae9f4.   call temp:=  [|org:apache:http:impl:cookie:BasicDomainHandler.validate|](v6, v7, v8) @signature [|Lorg/apache/http/impl/cookie/BasicDomainHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicDomainHandler|] @type super;
#L0ae9fa.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0aea00.   v2:= temp  @type object;
#L0aea02.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v7) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aea08.   v0:= temp  @type object;
#L0aea0a.   v3:= "." @type (object, string);
#L0aea0e.   call temp:=  [|java:lang:String.contains|](v2, v3) @signature [|Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aea14.   v3:= temp;
#L0aea16.   if v3 == 0 then goto L0aead0;
#L0aea1a.   v3:= new [|java:util:StringTokenizer|];
#L0aea1e.   v4:= "." @type (object, string);
#L0aea22.   call temp:=  [|java:util:StringTokenizer.<init>|](v3, v0, v4) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L0aea28.   call temp:=  [|java:util:StringTokenizer.countTokens|](v3) @signature [|Ljava/util/StringTokenizer;.countTokens:()I|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0aea2e.   v1:= temp;
#L0aea30.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDomainHandler.isSpecialDomain|](v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.isSpecialDomain:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @type static;
#L0aea36.   v3:= temp;
#L0aea38.   if v3 == 0 then goto L0aea8c;
#L0aea3c.   v3:= 2  @length 4;
#L0aea3e.   if v1 >= v3 then goto L0aead0;
#L0aea42.   v3:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0aea46.   v4:= new [|java:lang:StringBuilder|];
#L0aea4a.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aea50.   v5:= "Domain attribute \"" @type (object, string);
#L0aea54.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aea5a.   v4:= temp  @type object;
#L0aea5c.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aea62.   v4:= temp  @type object;
#L0aea64.   v5:= "\" violates the Netscape cookie specification for " @type (object, string);
#L0aea68.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aea6e.   v4:= temp  @type object;
#L0aea70.   v5:= "special domains" @type (object, string);
#L0aea74.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aea7a.   v4:= temp  @type object;
#L0aea7c.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aea82.   v4:= temp  @type object;
#L0aea84.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v3, v4) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0aea8a.   throw v3;
#L0aea8c.   v3:= 3  @length 4;
#L0aea8e.   if v1 >= v3 then goto L0aead0;
#L0aea92.   v3:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0aea96.   v4:= new [|java:lang:StringBuilder|];
#L0aea9a.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aeaa0.   v5:= "Domain attribute \"" @type (object, string);
#L0aeaa4.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aeaaa.   v4:= temp  @type object;
#L0aeaac.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aeab2.   v4:= temp  @type object;
#L0aeab4.   v5:= "\" violates the Netscape cookie specification" @type (object, string);
#L0aeab8.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aeabe.   v4:= temp  @type object;
#L0aeac0.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aeac6.   v4:= temp  @type object;
#L0aeac8.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v3, v4) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0aeace.   throw v3;
#L0aead0.   return @void ;

   }
record [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|]  @type class @AccessFlag PUBLIC  {
      [|org:apache:http:message:BasicHeaderValueParser|] [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.nvpParser|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DEFAULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|char|][] @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DELIMITERS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.<clinit>|] () @owner [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aeae4.   v0:= new [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|];
#L0aeae8.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @type direct;
#L0aeaee.   @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DEFAULT|] := v0  @type object;
#L0aeaf2.   v0:= 1  @length 4;
#L0aeaf4.   v0:= new [|char|][v0];
#L0aeaf8.   v1:= 0  @length 4;
#L0aeafa.   v2:= 59  @length 16;
#L0aeafe.   v0[v1]:= v2  @char;
#L0aeb02.   @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DELIMITERS|] := v0  @type object;
#L0aeb06.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.<init>|] ([|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0aeb18.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aeb1e.   v0:= @@[|org:apache:http:message:BasicHeaderValueParser.DEFAULT|]   @type object;
#L0aeb22.   v1.[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.nvpParser|]  := v0 @type object;
#L0aeb26.   return @void ;

   }
    procedure [|org:apache:http:HeaderElement|] [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.parseHeader|] ([|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] v7 @type (this), [|org:apache:http:util:CharArrayBuffer|] v8 @type (object), [|org:apache:http:message:ParserCursor|] v9 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.parseHeader:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0aeb38.   if v8 != 0 then goto L0aeb4c;
#L0aeb3c.   v3:= new [|java:lang:IllegalArgumentException|];
#L0aeb40.   v4:= "Char array buffer may not be null" @type (object, string);
#L0aeb44.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aeb4a.   throw v3;
#L0aeb4c.   if v9 != 0 then goto L0aeb60;
#L0aeb50.   v3:= new [|java:lang:IllegalArgumentException|];
#L0aeb54.   v4:= "Parser cursor may not be null" @type (object, string);
#L0aeb58.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aeb5e.   throw v3;
#L0aeb60.   v3:= v7.[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.nvpParser|]   @type object;
#L0aeb64.   v4:= @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DELIMITERS|]   @type object;
#L0aeb68.   call temp:=  [|org:apache:http:message:BasicHeaderValueParser.parseNameValuePair|](v3, v8, v9, v4) @signature [|Lorg/apache/http/message/BasicHeaderValueParser;.parseNameValuePair:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;[C)Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:message:BasicHeaderValueParser|] @type virtual;
#L0aeb6e.   v0:= temp  @type object;
#L0aeb70.   v2:= new [|java:util:ArrayList|];
#L0aeb74.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0aeb7a.   call temp:=  [|org:apache:http:message:ParserCursor.atEnd|](v9) @signature [|Lorg/apache/http/message/ParserCursor;.atEnd:()Z|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type virtual;
#L0aeb80.   v3:= temp;
#L0aeb82.   if v3 != 0 then goto L0aeb9e;
#L0aeb86.   v3:= v7.[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.nvpParser|]   @type object;
#L0aeb8a.   v4:= @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DELIMITERS|]   @type object;
#L0aeb8e.   call temp:=  [|org:apache:http:message:BasicHeaderValueParser.parseNameValuePair|](v3, v8, v9, v4) @signature [|Lorg/apache/http/message/BasicHeaderValueParser;.parseNameValuePair:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;[C)Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:message:BasicHeaderValueParser|] @type virtual;
#L0aeb94.   v1:= temp  @type object;
#L0aeb96.   call temp:=  [|java:util:List.add|](v2, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0aeb9c.   goto L0aeb7a;
#L0aeb9e.   v4:= new [|org:apache:http:message:BasicHeaderElement|];
#L0aeba2.   call temp:=  [|org:apache:http:NameValuePair.getName|](v0) @signature [|Lorg/apache/http/NameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0aeba8.   v5:= temp  @type object;
#L0aebaa.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v0) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0aebb0.   v6:= temp  @type object;
#L0aebb2.   call temp:=  [|java:util:List.size|](v2) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0aebb8.   v3:= temp;
#L0aebba.   v3:= new [|org:apache:http:NameValuePair|][v3];
#L0aebbe.   call temp:=  [|java:util:List.toArray|](v2, v3) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0aebc4.   v3:= temp  @type object;
#L0aebc6.   v3:= ([|org:apache:http:NameValuePair|][])v3;
#L0aebca.   call temp:=  [|org:apache:http:message:BasicHeaderElement.<init>|](v4, v5, v6, v3) @signature [|Lorg/apache/http/message/BasicHeaderElement;.<init>:(Ljava/lang/String;Ljava/lang/String;[Lorg/apache/http/NameValuePair;)V|] @classDescriptor [|org:apache:http:message:BasicHeaderElement|] @type direct;
#L0aebd0.   return v4  @type object;

   }
record [|org:apache:http:impl:cookie:NetscapeDraftSpec|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:CookieSpecBase|] {
      [|java:lang:String|][] [|org:apache:http:impl:cookie:NetscapeDraftSpec.datepatterns|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:String|] @@[|org:apache:http:impl:cookie:NetscapeDraftSpec.EXPIRES_PATTERN|]    @AccessFlag PROTECTED_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0aebe4.   v0:= 0  @length 4;
#L0aebe6.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type direct;
#L0aebec.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v3 @type (this), [|java:lang:String|][] v4 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:([Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aec00.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.<init>|](v3) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type direct;
#L0aec06.   if v4 == 0 then goto L0aec98;
#L0aec0a.   call temp:=  [|java:lang:String[].clone|](v4) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0aec10.   v0:= temp  @type object;
#L0aec12.   v0:= ([|java:lang:String|][])v0;
#L0aec16.   v3.[|org:apache:http:impl:cookie:NetscapeDraftSpec.datepatterns|]  := v0 @type object;
#L0aec1a.   v0:= "path" @type (object, string);
#L0aec1e.   v1:= new [|org:apache:http:impl:cookie:BasicPathHandler|];
#L0aec22.   call temp:=  [|org:apache:http:impl:cookie:BasicPathHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicPathHandler|] @type direct;
#L0aec28.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec2e.   v0:= "domain" @type (object, string);
#L0aec32.   v1:= new [|org:apache:http:impl:cookie:NetscapeDomainHandler|];
#L0aec36.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDomainHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDomainHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDomainHandler|] @type direct;
#L0aec3c.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec42.   v0:= "max-age" @type (object, string);
#L0aec46.   v1:= new [|org:apache:http:impl:cookie:BasicMaxAgeHandler|];
#L0aec4a.   call temp:=  [|org:apache:http:impl:cookie:BasicMaxAgeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicMaxAgeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicMaxAgeHandler|] @type direct;
#L0aec50.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec56.   v0:= "secure" @type (object, string);
#L0aec5a.   v1:= new [|org:apache:http:impl:cookie:BasicSecureHandler|];
#L0aec5e.   call temp:=  [|org:apache:http:impl:cookie:BasicSecureHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicSecureHandler|] @type direct;
#L0aec64.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec6a.   v0:= "comment" @type (object, string);
#L0aec6e.   v1:= new [|org:apache:http:impl:cookie:BasicCommentHandler|];
#L0aec72.   call temp:=  [|org:apache:http:impl:cookie:BasicCommentHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicCommentHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicCommentHandler|] @type direct;
#L0aec78.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec7e.   v0:= "expires" @type (object, string);
#L0aec82.   v1:= new [|org:apache:http:impl:cookie:BasicExpiresHandler|];
#L0aec86.   v2:= v3.[|org:apache:http:impl:cookie:NetscapeDraftSpec.datepatterns|]   @type object;
#L0aec8a.   call temp:=  [|org:apache:http:impl:cookie:BasicExpiresHandler.<init>|](v1, v2) @signature [|Lorg/apache/http/impl/cookie/BasicExpiresHandler;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicExpiresHandler|] @type direct;
#L0aec90.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aec96.   return @void ;
#L0aec98.   v0:= 1  @length 4;
#L0aec9a.   v0:= new [|java:lang:String|][v0];
#L0aec9e.   v1:= 0  @length 4;
#L0aeca0.   v2:= "EEE, dd-MMM-yyyy HH:mm:ss z" @type (object, string);
#L0aeca4.   v0[v1]:= v2  @type object;
#L0aeca8.   v3.[|org:apache:http:impl:cookie:NetscapeDraftSpec.datepatterns|]  := v0 @type object;
#L0aecac.   goto L0aec1a;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.formatCookies|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v7 @type (this), [|java:util:List|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0aecc0.   if v8 != 0 then goto L0aecd4;
#L0aecc4.   v5:= new [|java:lang:IllegalArgumentException|];
#L0aecc8.   v6:= "List of cookies may not be null" @type (object, string);
#L0aeccc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aecd2.   throw v5;
#L0aecd4.   call temp:=  [|java:util:List.isEmpty|](v8) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0aecda.   v5:= temp;
#L0aecdc.   if v5 == 0 then goto L0aecf0;
#L0aece0.   v5:= new [|java:lang:IllegalArgumentException|];
#L0aece4.   v6:= "List of cookies may not be empty" @type (object, string);
#L0aece8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aecee.   throw v5;
#L0aecf0.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0aecf4.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0aecfa.   v5:= temp;
#L0aecfc.   v5:= v5 * 20;
#L0aed00.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0aed06.   v5:= "Cookie" @type (object, string);
#L0aed0a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed10.   v5:= ": " @type (object, string);
#L0aed14.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed1a.   v3:= 0  @length 4;
#L0aed1c.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0aed22.   v5:= temp;
#L0aed24.   if v3 >= v5 then goto L0aed72;
#L0aed28.   call temp:=  [|java:util:List.get|](v8, v3) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0aed2e.   v1:= temp  @type object;
#L0aed30.   v1:= ([|org:apache:http:cookie:Cookie|])v1;
#L0aed34.   if v3 <= 0 then goto L0aed42;
#L0aed38.   v5:= "; " @type (object, string);
#L0aed3c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed42.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aed48.   v5:= temp  @type object;
#L0aed4a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed50.   call temp:=  [|org:apache:http:cookie:Cookie.getValue|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aed56.   v4:= temp  @type object;
#L0aed58.   if v4 == 0 then goto L0aed6c;
#L0aed5c.   v5:= "=" @type (object, string);
#L0aed60.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed66.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aed6c.   v3:= v3 + 1;
#L0aed70.   goto L0aed1c;
#L0aed72.   v2:= new [|java:util:ArrayList|];
#L0aed76.   v5:= 1  @length 4;
#L0aed78.   call temp:=  [|java:util:ArrayList.<init>|](v2, v5) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0aed7e.   v5:= new [|org:apache:http:message:BufferedHeader|];
#L0aed82.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v5, v0) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0aed88.   call temp:=  [|java:util:List.add|](v2, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0aed8e.   return v2  @type object;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.getVersion|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aeda0.   v0:= 0  @length 4;
#L0aeda2.   return v0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.getVersionHeader|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aedb4.   v0:= 0  @length 4;
#L0aedb6.   return v0  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:NetscapeDraftSpec.parse|] ([|org:apache:http:impl:cookie:NetscapeDraftSpec|] v7 @type (this), [|org:apache:http:Header|] v8 @type (object), [|org:apache:http:cookie:CookieOrigin|] v9 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0aedc8.   v6:= 0  @length 4;
#L0aedca.   if v8 != 0 then goto L0aedde;
#L0aedce.   v4:= new [|java:lang:IllegalArgumentException|];
#L0aedd2.   v5:= "Header may not be null" @type (object, string);
#L0aedd6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aeddc.   throw v4;
#L0aedde.   if v9 != 0 then goto L0aedf2;
#L0aede2.   v4:= new [|java:lang:IllegalArgumentException|];
#L0aede6.   v5:= "Cookie origin may not be null" @type (object, string);
#L0aedea.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aedf0.   throw v4;
#L0aedf2.   v2:= @@[|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.DEFAULT|]   @type object;
#L0aedf6.   v4:= instanceof @varname v8 @type [|org:apache:http:FormattedHeader|];
#L0aedfa.   if v4 == 0 then goto L0aee46;
#L0aedfe.   v4:= v8  @type object;
#L0aee00.   v4:= ([|org:apache:http:FormattedHeader|])v4;
#L0aee04.   call temp:=  [|org:apache:http:FormattedHeader.getBuffer|](v4) @signature [|Lorg/apache/http/FormattedHeader;.getBuffer:()Lorg/apache/http/util/CharArrayBuffer;|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0aee0a.   v0:= temp  @type object;
#L0aee0c.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0aee10.   v8:= ([|org:apache:http:FormattedHeader|])v8;
#L0aee14.   call temp:=  [|org:apache:http:FormattedHeader.getValuePos|](v8) @signature [|Lorg/apache/http/FormattedHeader;.getValuePos:()I|] @classDescriptor [|org:apache:http:FormattedHeader|] @type interface;
#L0aee1a.   v4:= temp;
#L0aee1c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aee22.   v5:= temp;
#L0aee24.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v4, v5) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0aee2a.   v4:= 1  @length 4;
#L0aee2c.   v4:= new [|org:apache:http:HeaderElement|][v4];
#L0aee30.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser.parseHeader|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftHeaderParser;.parseHeader:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/message/ParserCursor;)Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftHeaderParser|] @type virtual;
#L0aee36.   v5:= temp  @type object;
#L0aee38.   v4[v6]:= v5  @type object;
#L0aee3c.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.parse|](v7, v4, v9) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type virtual;
#L0aee42.   v4:= temp  @type object;
#L0aee44.   return v4  @type object;
#L0aee46.   call temp:=  [|org:apache:http:Header.getValue|](v8) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0aee4c.   v3:= temp  @type object;
#L0aee4e.   if v3 != 0 then goto L0aee62;
#L0aee52.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0aee56.   v5:= "Header value is null" @type (object, string);
#L0aee5a.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0aee60.   throw v4;
#L0aee62.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0aee66.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aee6c.   v4:= temp;
#L0aee6e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0aee74.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v3) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aee7a.   v1:= new [|org:apache:http:message:ParserCursor|];
#L0aee7e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.length|](v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.length:()I|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0aee84.   v4:= temp;
#L0aee86.   call temp:=  [|org:apache:http:message:ParserCursor.<init>|](v1, v6, v4) @signature [|Lorg/apache/http/message/ParserCursor;.<init>:(II)V|] @classDescriptor [|org:apache:http:message:ParserCursor|] @type direct;
#L0aee8c.   goto L0aee2a;

   }
record [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpecFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory.<init>|] ([|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpecFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aeea0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aeea6.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory.newInstance|] ([|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|] v2 @type (this), [|org:apache:http:params:HttpParams|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:NetscapeDraftSpecFactory|] @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aeeb8.   if v3 == 0 then goto L0aeede;
#L0aeebc.   v1:= new [|org:apache:http:impl:cookie:NetscapeDraftSpec|];
#L0aeec0.   v0:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0aeec4.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v3, v0) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0aeeca.   v0:= temp  @type object;
#L0aeecc.   v0:= ([|java:lang:String|][])v0;
#L0aeed0.   v0:= ([|java:lang:String|][])v0;
#L0aeed4.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|](v1, v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type direct;
#L0aeeda.   v0:= v1  @type object;
#L0aeedc.   return v0  @type object;
#L0aeede.   v0:= new [|org:apache:http:impl:cookie:NetscapeDraftSpec|];
#L0aeee2.   call temp:=  [|org:apache:http:impl:cookie:NetscapeDraftSpec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/NetscapeDraftSpec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:NetscapeDraftSpec|] @type direct;
#L0aeee8.   goto L0aeedc;

   }
record [|org:apache:http:impl:cookie:RFC2109DomainHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109DomainHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2109DomainHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109DomainHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109DomainHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aeefc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aef02.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2109DomainHandler.match|] ([|org:apache:http:impl:cookie:RFC2109DomainHandler|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:CookieOrigin|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109DomainHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109DomainHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aef14.   v2:= 0  @length 4;
#L0aef16.   if v5 != 0 then goto L0aef2a;
#L0aef1a.   v2:= new [|java:lang:IllegalArgumentException|];
#L0aef1e.   v3:= "Cookie may not be null" @type (object, string);
#L0aef22.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aef28.   throw v2;
#L0aef2a.   if v6 != 0 then goto L0aef3e;
#L0aef2e.   v2:= new [|java:lang:IllegalArgumentException|];
#L0aef32.   v3:= "Cookie origin may not be null" @type (object, string);
#L0aef36.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aef3c.   throw v2;
#L0aef3e.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v6) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0aef44.   v1:= temp  @type object;
#L0aef46.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v5) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aef4c.   v0:= temp  @type object;
#L0aef4e.   if v0 != 0 then goto L0aef54;
#L0aef52.   return v2;
#L0aef54.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aef5a.   v3:= temp;
#L0aef5c.   if v3 != 0 then goto L0aef7c;
#L0aef60.   v3:= "." @type (object, string);
#L0aef64.   call temp:=  [|java:lang:String.startsWith|](v0, v3) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aef6a.   v3:= temp;
#L0aef6c.   if v3 == 0 then goto L0aef52;
#L0aef70.   call temp:=  [|java:lang:String.endsWith|](v1, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aef76.   v3:= temp;
#L0aef78.   if v3 == 0 then goto L0aef52;
#L0aef7c.   v2:= 1  @length 4;
#L0aef7e.   goto L0aef52;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109DomainHandler.parse|] ([|org:apache:http:impl:cookie:RFC2109DomainHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109DomainHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109DomainHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0aef90.   if v3 != 0 then goto L0aefa4;
#L0aef94.   v0:= new [|java:lang:IllegalArgumentException|];
#L0aef98.   v1:= "Cookie may not be null" @type (object, string);
#L0aef9c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aefa2.   throw v0;
#L0aefa4.   if v4 != 0 then goto L0aefb8;
#L0aefa8.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0aefac.   v1:= "Missing value for domain attribute" @type (object, string);
#L0aefb0.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0aefb6.   throw v0;
#L0aefb8.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aefbe.   v0:= temp  @type object;
#L0aefc0.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0aefc6.   v0:= temp;
#L0aefc8.   if v0 != 0 then goto L0aefdc;
#L0aefcc.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0aefd0.   v1:= "Blank value for domain attribute" @type (object, string);
#L0aefd4.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0aefda.   throw v0;
#L0aefdc.   call temp:=  [|org:apache:http:cookie:SetCookie.setDomain|](v3, v4) @signature [|Lorg/apache/http/cookie/SetCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0aefe2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109DomainHandler.validate|] ([|org:apache:http:impl:cookie:RFC2109DomainHandler|] v9 @type (this), [|org:apache:http:cookie:Cookie|] v10 @type (object), [|org:apache:http:cookie:CookieOrigin|] v11 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109DomainHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109DomainHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0aeff4.   v8:= -1  @length 4;
#L0aeff6.   v7:= 46  @length 16;
#L0aeffa.   if v10 != 0 then goto L0af00e;
#L0aeffe.   v4:= new [|java:lang:IllegalArgumentException|];
#L0af002.   v5:= "Cookie may not be null" @type (object, string);
#L0af006.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af00c.   throw v4;
#L0af00e.   if v11 != 0 then goto L0af022;
#L0af012.   v4:= new [|java:lang:IllegalArgumentException|];
#L0af016.   v5:= "Cookie origin may not be null" @type (object, string);
#L0af01a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af020.   throw v4;
#L0af022.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v11) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0af028.   v2:= temp  @type object;
#L0af02a.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v10) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af030.   v0:= temp  @type object;
#L0af032.   if v0 != 0 then goto L0af046;
#L0af036.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af03a.   v5:= "Cookie domain may not be null" @type (object, string);
#L0af03e.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af044.   throw v4;
#L0af046.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af04c.   v4:= temp;
#L0af04e.   if v4 != 0 then goto L0af22a;
#L0af052.   call temp:=  [|java:lang:String.indexOf|](v0, v7) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af058.   v1:= temp;
#L0af05a.   if v1 != v8 then goto L0af0b0;
#L0af05e.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af062.   v5:= new [|java:lang:StringBuilder|];
#L0af066.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af06c.   v6:= "Domain attribute \"" @type (object, string);
#L0af070.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af076.   v5:= temp  @type object;
#L0af078.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af07e.   v5:= temp  @type object;
#L0af080.   v6:= "\" does not match the host \"" @type (object, string);
#L0af084.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af08a.   v5:= temp  @type object;
#L0af08c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af092.   v5:= temp  @type object;
#L0af094.   v6:= "\"" @type (object, string);
#L0af098.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af09e.   v5:= temp  @type object;
#L0af0a0.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af0a6.   v5:= temp  @type object;
#L0af0a8.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af0ae.   throw v4;
#L0af0b0.   v4:= "." @type (object, string);
#L0af0b4.   call temp:=  [|java:lang:String.startsWith|](v0, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af0ba.   v4:= temp;
#L0af0bc.   if v4 != 0 then goto L0af0fe;
#L0af0c0.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af0c4.   v5:= new [|java:lang:StringBuilder|];
#L0af0c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af0ce.   v6:= "Domain attribute \"" @type (object, string);
#L0af0d2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af0d8.   v5:= temp  @type object;
#L0af0da.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af0e0.   v5:= temp  @type object;
#L0af0e2.   v6:= "\" violates RFC 2109: domain must start with a dot" @type (object, string);
#L0af0e6.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af0ec.   v5:= temp  @type object;
#L0af0ee.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af0f4.   v5:= temp  @type object;
#L0af0f6.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af0fc.   throw v4;
#L0af0fe.   v4:= 1  @length 4;
#L0af100.   call temp:=  [|java:lang:String.indexOf|](v0, v7, v4) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af106.   v1:= temp;
#L0af108.   if v1 < 0 then goto L0af11c;
#L0af10c.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af112.   v4:= temp;
#L0af114.   v4:= v4 + -1;
#L0af118.   if v1 != v4 then goto L0af15a;
#L0af11c.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af120.   v5:= new [|java:lang:StringBuilder|];
#L0af124.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af12a.   v6:= "Domain attribute \"" @type (object, string);
#L0af12e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af134.   v5:= temp  @type object;
#L0af136.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af13c.   v5:= temp  @type object;
#L0af13e.   v6:= "\" violates RFC 2109: domain must contain an embedded dot" @type (object, string);
#L0af142.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af148.   v5:= temp  @type object;
#L0af14a.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af150.   v5:= temp  @type object;
#L0af152.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af158.   throw v4;
#L0af15a.   v4:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0af15e.   call temp:=  [|java:lang:String.toLowerCase|](v2, v4) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af164.   v2:= temp  @type object;
#L0af166.   call temp:=  [|java:lang:String.endsWith|](v2, v0) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af16c.   v4:= temp;
#L0af16e.   if v4 != 0 then goto L0af1c4;
#L0af172.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af176.   v5:= new [|java:lang:StringBuilder|];
#L0af17a.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af180.   v6:= "Illegal domain attribute \"" @type (object, string);
#L0af184.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af18a.   v5:= temp  @type object;
#L0af18c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af192.   v5:= temp  @type object;
#L0af194.   v6:= "\". Domain of origin: \"" @type (object, string);
#L0af198.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af19e.   v5:= temp  @type object;
#L0af1a0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af1a6.   v5:= temp  @type object;
#L0af1a8.   v6:= "\"" @type (object, string);
#L0af1ac.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af1b2.   v5:= temp  @type object;
#L0af1b4.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af1ba.   v5:= temp  @type object;
#L0af1bc.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af1c2.   throw v4;
#L0af1c4.   v4:= 0  @length 4;
#L0af1c6.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af1cc.   v5:= temp;
#L0af1ce.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af1d4.   v6:= temp;
#L0af1d6.   v5:= v5 - v6  @type int;
#L0af1d8.   call temp:=  [|java:lang:String.substring|](v2, v4, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af1de.   v3:= temp  @type object;
#L0af1e0.   call temp:=  [|java:lang:String.indexOf|](v3, v7) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af1e6.   v4:= temp;
#L0af1e8.   if v4 == v8 then goto L0af22a;
#L0af1ec.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af1f0.   v5:= new [|java:lang:StringBuilder|];
#L0af1f4.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af1fa.   v6:= "Domain attribute \"" @type (object, string);
#L0af1fe.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af204.   v5:= temp  @type object;
#L0af206.   call temp:=  [|java:lang:StringBuilder.append|](v5, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af20c.   v5:= temp  @type object;
#L0af20e.   v6:= "\" violates RFC 2109: host minus domain may not contain any dots" @type (object, string);
#L0af212.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af218.   v5:= temp  @type object;
#L0af21a.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af220.   v5:= temp  @type object;
#L0af222.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af228.   throw v4;
#L0af22a.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2109Spec|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:CookieSpecBase|] {
      [|java:lang:String|][] [|org:apache:http:impl:cookie:RFC2109Spec.datepatterns|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|org:apache:http:impl:cookie:RFC2109Spec.oneHeader|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:String|][] @@[|org:apache:http:impl:cookie:RFC2109Spec.DATE_PATTERNS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|org:apache:http:cookie:CookiePathComparator|] @@[|org:apache:http:impl:cookie:RFC2109Spec.PATH_COMPARATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.<clinit>|] () @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af23c.   v0:= new [|org:apache:http:cookie:CookiePathComparator|];
#L0af240.   call temp:=  [|org:apache:http:cookie:CookiePathComparator.<init>|](v0) @signature [|Lorg/apache/http/cookie/CookiePathComparator;.<init>:()V|] @classDescriptor [|org:apache:http:cookie:CookiePathComparator|] @type direct;
#L0af246.   @@[|org:apache:http:impl:cookie:RFC2109Spec.PATH_COMPARATOR|] := v0  @type object;
#L0af24a.   v0:= 3  @length 4;
#L0af24c.   v0:= new [|java:lang:String|][v0];
#L0af250.   v1:= 0  @length 4;
#L0af252.   v2:= "EEE, dd MMM yyyy HH:mm:ss zzz" @type (object, string);
#L0af256.   v0[v1]:= v2  @type object;
#L0af25a.   v1:= 1  @length 4;
#L0af25c.   v2:= "EEEE, dd-MMM-yy HH:mm:ss zzz" @type (object, string);
#L0af260.   v0[v1]:= v2  @type object;
#L0af264.   v1:= 2  @length 4;
#L0af266.   v2:= "EEE MMM d HH:mm:ss yyyy" @type (object, string);
#L0af26a.   v0[v1]:= v2  @type object;
#L0af26e.   @@[|org:apache:http:impl:cookie:RFC2109Spec.DATE_PATTERNS|] := v0  @type object;
#L0af272.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.<init>|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0af284.   v0:= 0  @length 4;
#L0af286.   v1:= 0  @length 4;
#L0af288.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0af28e.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.<init>|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v3 @type (this), [|java:lang:String|][] v4 @type (object), [|boolean|] v5) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:([Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af2a0.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.<init>|](v3) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type direct;
#L0af2a6.   if v4 == 0 then goto L0af350;
#L0af2aa.   call temp:=  [|java:lang:String[].clone|](v4) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0af2b0.   v0:= temp  @type object;
#L0af2b2.   v0:= ([|java:lang:String|][])v0;
#L0af2b6.   v3.[|org:apache:http:impl:cookie:RFC2109Spec.datepatterns|]  := v0 @type object;
#L0af2ba.   v3.[|org:apache:http:impl:cookie:RFC2109Spec.oneHeader|]  := v5 @boolean;
#L0af2be.   v0:= "version" @type (object, string);
#L0af2c2.   v1:= new [|org:apache:http:impl:cookie:RFC2109VersionHandler|];
#L0af2c6.   call temp:=  [|org:apache:http:impl:cookie:RFC2109VersionHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109VersionHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109VersionHandler|] @type direct;
#L0af2cc.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af2d2.   v0:= "path" @type (object, string);
#L0af2d6.   v1:= new [|org:apache:http:impl:cookie:BasicPathHandler|];
#L0af2da.   call temp:=  [|org:apache:http:impl:cookie:BasicPathHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicPathHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicPathHandler|] @type direct;
#L0af2e0.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af2e6.   v0:= "domain" @type (object, string);
#L0af2ea.   v1:= new [|org:apache:http:impl:cookie:RFC2109DomainHandler|];
#L0af2ee.   call temp:=  [|org:apache:http:impl:cookie:RFC2109DomainHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109DomainHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109DomainHandler|] @type direct;
#L0af2f4.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af2fa.   v0:= "max-age" @type (object, string);
#L0af2fe.   v1:= new [|org:apache:http:impl:cookie:BasicMaxAgeHandler|];
#L0af302.   call temp:=  [|org:apache:http:impl:cookie:BasicMaxAgeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicMaxAgeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicMaxAgeHandler|] @type direct;
#L0af308.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af30e.   v0:= "secure" @type (object, string);
#L0af312.   v1:= new [|org:apache:http:impl:cookie:BasicSecureHandler|];
#L0af316.   call temp:=  [|org:apache:http:impl:cookie:BasicSecureHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicSecureHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicSecureHandler|] @type direct;
#L0af31c.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af322.   v0:= "comment" @type (object, string);
#L0af326.   v1:= new [|org:apache:http:impl:cookie:BasicCommentHandler|];
#L0af32a.   call temp:=  [|org:apache:http:impl:cookie:BasicCommentHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/BasicCommentHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:BasicCommentHandler|] @type direct;
#L0af330.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af336.   v0:= "expires" @type (object, string);
#L0af33a.   v1:= new [|org:apache:http:impl:cookie:BasicExpiresHandler|];
#L0af33e.   v2:= v3.[|org:apache:http:impl:cookie:RFC2109Spec.datepatterns|]   @type object;
#L0af342.   call temp:=  [|org:apache:http:impl:cookie:BasicExpiresHandler.<init>|](v1, v2) @signature [|Lorg/apache/http/impl/cookie/BasicExpiresHandler;.<init>:([Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicExpiresHandler|] @type direct;
#L0af348.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.registerAttribHandler|](v3, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af34e.   return @void ;
#L0af350.   v0:= @@[|org:apache:http:impl:cookie:RFC2109Spec.DATE_PATTERNS|]   @type object;
#L0af354.   v3.[|org:apache:http:impl:cookie:RFC2109Spec.datepatterns|]  := v0 @type object;
#L0af358.   goto L0af2ba;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:RFC2109Spec.doFormatManyHeaders|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v6 @type (this), [|java:util:List|] v7 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.doFormatManyHeaders:(Ljava/util/List;)Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0af36c.   v2:= new [|java:util:ArrayList|];
#L0af370.   call temp:=  [|java:util:List.size|](v7) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0af376.   v5:= temp;
#L0af378.   call temp:=  [|java:util:ArrayList.<init>|](v2, v5) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0af37e.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0af384.   v3:= temp  @type object;
#L0af386.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af38c.   v5:= temp;
#L0af38e.   if v5 == 0 then goto L0af3f8;
#L0af392.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af398.   v1:= temp  @type object;
#L0af39a.   v1:= ([|org:apache:http:cookie:Cookie|])v1;
#L0af39e.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af3a4.   v4:= temp;
#L0af3a6.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0af3aa.   v5:= 40  @length 16;
#L0af3ae.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0af3b4.   v5:= "Cookie: " @type (object, string);
#L0af3b8.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af3be.   v5:= "$Version=" @type (object, string);
#L0af3c2.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af3c8.   call temp:=  [|java:lang:Integer.toString|](v4) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0af3ce.   v5:= temp  @type object;
#L0af3d0.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af3d6.   v5:= "; " @type (object, string);
#L0af3da.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af3e0.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatCookieAsVer|](v6, v0, v1, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatCookieAsVer:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af3e6.   v5:= new [|org:apache:http:message:BufferedHeader|];
#L0af3ea.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v5, v0) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0af3f0.   call temp:=  [|java:util:List.add|](v2, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0af3f6.   goto L0af386;
#L0af3f8.   return v2  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:RFC2109Spec.doFormatOneHeader|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v7 @type (this), [|java:util:List|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.doFormatOneHeader:(Ljava/util/List;)Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0af40c.    v5:= nan;
#L0af412.   call temp:=  [|java:util:List.iterator|](v8) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0af418.   v4:= temp  @type object;
#L0af41a.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af420.   v6:= temp;
#L0af422.   if v6 == 0 then goto L0af448;
#L0af426.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af42c.   v1:= temp  @type object;
#L0af42e.   v1:= ([|org:apache:http:cookie:Cookie|])v1;
#L0af432.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af438.   v6:= temp;
#L0af43a.   if v6 >= v5 then goto L0af41a;
#L0af43e.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v1) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af444.   v5:= temp;
#L0af446.   goto L0af41a;
#L0af448.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0af44c.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0af452.   v6:= temp;
#L0af454.   v6:= v6 * 40;
#L0af458.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0af45e.   v6:= "Cookie" @type (object, string);
#L0af462.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af468.   v6:= ": " @type (object, string);
#L0af46c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af472.   v6:= "$Version=" @type (object, string);
#L0af476.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af47c.   call temp:=  [|java:lang:Integer.toString|](v5) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0af482.   v6:= temp  @type object;
#L0af484.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af48a.   call temp:=  [|java:util:List.iterator|](v8) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0af490.   v4:= temp  @type object;
#L0af492.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af498.   v6:= temp;
#L0af49a.   if v6 == 0 then goto L0af4be;
#L0af49e.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0af4a4.   v2:= temp  @type object;
#L0af4a6.   v2:= ([|org:apache:http:cookie:Cookie|])v2;
#L0af4aa.   v6:= "; " @type (object, string);
#L0af4ae.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v6) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af4b4.   v1:= v2  @type object;
#L0af4b6.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatCookieAsVer|](v7, v0, v1, v5) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatCookieAsVer:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af4bc.   goto L0af492;
#L0af4be.   v3:= new [|java:util:ArrayList|];
#L0af4c2.   v6:= 1  @length 4;
#L0af4c4.   call temp:=  [|java:util:ArrayList.<init>|](v3, v6) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0af4ca.   v6:= new [|org:apache:http:message:BufferedHeader|];
#L0af4ce.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v6, v0) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0af4d4.   call temp:=  [|java:util:List.add|](v3, v6) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0af4da.   return v3  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.formatCookieAsVer|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v2 @type (this), [|org:apache:http:util:CharArrayBuffer|] v3 @type (object), [|org:apache:http:cookie:Cookie|] v4 @type (object), [|int|] v5) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatCookieAsVer:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0af4ec.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af4f2.   v0:= temp  @type object;
#L0af4f4.   call temp:=  [|org:apache:http:cookie:Cookie.getValue|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af4fa.   v1:= temp  @type object;
#L0af4fc.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatParamAsVer|](v2, v3, v0, v1, v5) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatParamAsVer:(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af502.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af508.   v0:= temp  @type object;
#L0af50a.   if v0 == 0 then goto L0af548;
#L0af50e.   v0:= instanceof @varname v4 @type [|org:apache:http:cookie:ClientCookie|];
#L0af512.   if v0 == 0 then goto L0af548;
#L0af516.   v0:= v4  @type object;
#L0af518.   v0:= ([|org:apache:http:cookie:ClientCookie|])v0;
#L0af51c.   v1:= "path" @type (object, string);
#L0af520.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v0, v1) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0af526.   v0:= temp;
#L0af528.   if v0 == 0 then goto L0af548;
#L0af52c.   v0:= "; " @type (object, string);
#L0af530.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af536.   v0:= "$Path" @type (object, string);
#L0af53a.   call temp:=  [|org:apache:http:cookie:Cookie.getPath|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af540.   v1:= temp  @type object;
#L0af542.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatParamAsVer|](v2, v3, v0, v1, v5) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatParamAsVer:(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af548.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af54e.   v0:= temp  @type object;
#L0af550.   if v0 == 0 then goto L0af58e;
#L0af554.   v0:= instanceof @varname v4 @type [|org:apache:http:cookie:ClientCookie|];
#L0af558.   if v0 == 0 then goto L0af58e;
#L0af55c.   v0:= v4  @type object;
#L0af55e.   v0:= ([|org:apache:http:cookie:ClientCookie|])v0;
#L0af562.   v1:= "domain" @type (object, string);
#L0af566.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v0, v1) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0af56c.   v0:= temp;
#L0af56e.   if v0 == 0 then goto L0af58e;
#L0af572.   v0:= "; " @type (object, string);
#L0af576.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af57c.   v0:= "$Domain" @type (object, string);
#L0af580.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af586.   v1:= temp  @type object;
#L0af588.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatParamAsVer|](v2, v3, v0, v1, v5) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatParamAsVer:(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af58e.   return @void ;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:RFC2109Spec.formatCookies|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v3 @type (this), [|java:util:List|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatCookies:(Ljava/util/List;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af5a0.   if v4 != 0 then goto L0af5b4;
#L0af5a4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af5a8.   v2:= "List of cookies may not be null" @type (object, string);
#L0af5ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af5b2.   throw v1;
#L0af5b4.   call temp:=  [|java:util:List.isEmpty|](v4) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0af5ba.   v1:= temp;
#L0af5bc.   if v1 == 0 then goto L0af5d0;
#L0af5c0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af5c4.   v2:= "List of cookies may not be empty" @type (object, string);
#L0af5c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af5ce.   throw v1;
#L0af5d0.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0af5d6.   v1:= temp;
#L0af5d8.   v2:= 1  @length 4;
#L0af5da.   if v1 <= v2 then goto L0af5f4;
#L0af5de.   v0:= new [|java:util:ArrayList|];
#L0af5e2.   call temp:=  [|java:util:ArrayList.<init>|](v0, v4) @signature [|Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0af5e8.   v1:= @@[|org:apache:http:impl:cookie:RFC2109Spec.PATH_COMPARATOR|]   @type object;
#L0af5ec.   call temp:=  [|java:util:Collections.sort|](v0, v1) @signature [|Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:Collections|] @type static;
#L0af5f2.   v4:= v0  @type object;
#L0af5f4.   v1:= v3.[|org:apache:http:impl:cookie:RFC2109Spec.oneHeader|]   @boolean;
#L0af5f8.   if v1 == 0 then goto L0af606;
#L0af5fc.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.doFormatOneHeader|](v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.doFormatOneHeader:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0af602.   v1:= temp  @type object;
#L0af604.   return v1  @type object;
#L0af606.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.doFormatManyHeaders|](v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.doFormatManyHeaders:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0af60c.   v1:= temp  @type object;
#L0af60e.   goto L0af604;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.formatParamAsVer|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v2 @type (this), [|org:apache:http:util:CharArrayBuffer|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|int|] v6) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatParamAsVer:(Lorg/apache/http/util/CharArrayBuffer;Ljava/lang/String;Ljava/lang/String;I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0af620.   v1:= 34  @length 16;
#L0af624.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af62a.   v0:= "=" @type (object, string);
#L0af62e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v0) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af634.   if v5 == 0 then goto L0af64e;
#L0af638.   if v6 <= 0 then goto L0af650;
#L0af63c.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(C)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af642.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af648.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(C)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af64e.   return @void ;
#L0af650.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v3, v5) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0af656.   goto L0af64e;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:RFC2109Spec.getVersion|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af668.   v0:= 1  @length 4;
#L0af66a.   return v0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:cookie:RFC2109Spec.getVersionHeader|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af67c.   v0:= 0  @length 4;
#L0af67e.   return v0  @type object;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:RFC2109Spec.parse|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v3 @type (this), [|org:apache:http:Header|] v4 @type (object), [|org:apache:http:cookie:CookieOrigin|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af690.   if v4 != 0 then goto L0af6a4;
#L0af694.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af698.   v2:= "Header may not be null" @type (object, string);
#L0af69c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af6a2.   throw v1;
#L0af6a4.   if v5 != 0 then goto L0af6b8;
#L0af6a8.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af6ac.   v2:= "Cookie origin may not be null" @type (object, string);
#L0af6b0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af6b6.   throw v1;
#L0af6b8.   call temp:=  [|org:apache:http:Header.getElements|](v4) @signature [|Lorg/apache/http/Header;.getElements:()[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0af6be.   v0:= temp  @type object;
#L0af6c0.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.parse|](v3, v0, v5) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.parse:([Lorg/apache/http/HeaderElement;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type virtual;
#L0af6c6.   v1:= temp  @type object;
#L0af6c8.   return v1  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109Spec.validate|] ([|org:apache:http:impl:cookie:RFC2109Spec|] v3 @type (this), [|org:apache:http:cookie:Cookie|] v4 @type (object), [|org:apache:http:cookie:CookieOrigin|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af6dc.   if v4 != 0 then goto L0af6f0;
#L0af6e0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af6e4.   v2:= "Cookie may not be null" @type (object, string);
#L0af6e8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af6ee.   throw v1;
#L0af6f0.   call temp:=  [|org:apache:http:cookie:Cookie.getName|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af6f6.   v0:= temp  @type object;
#L0af6f8.   v1:= 32  @length 16;
#L0af6fc.   call temp:=  [|java:lang:String.indexOf|](v0, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af702.   v1:= temp;
#L0af704.   v2:= -1  @length 4;
#L0af706.   if v1 == v2 then goto L0af71a;
#L0af70a.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af70e.   v2:= "Cookie name may not contain blanks" @type (object, string);
#L0af712.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af718.   throw v1;
#L0af71a.   v1:= "$" @type (object, string);
#L0af71e.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af724.   v1:= temp;
#L0af726.   if v1 == 0 then goto L0af73a;
#L0af72a.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af72e.   v2:= "Cookie name may not start with $" @type (object, string);
#L0af732.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af738.   throw v1;
#L0af73a.   call temp:=  [|org:apache:http:impl:cookie:CookieSpecBase.validate|](v3, v4, v5) @signature [|Lorg/apache/http/impl/cookie/CookieSpecBase;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:impl:cookie:CookieSpecBase|] @type super;
#L0af740.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2109SpecFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpecFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109SpecFactory.<init>|] ([|org:apache:http:impl:cookie:RFC2109SpecFactory|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109SpecFactory|] @signature [|Lorg/apache/http/impl/cookie/RFC2109SpecFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af754.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af75a.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:impl:cookie:RFC2109SpecFactory.newInstance|] ([|org:apache:http:impl:cookie:RFC2109SpecFactory|] v4 @type (this), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109SpecFactory|] @signature [|Lorg/apache/http/impl/cookie/RFC2109SpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0af76c.   if v5 == 0 then goto L0af7a0;
#L0af770.   v1:= new [|org:apache:http:impl:cookie:RFC2109Spec|];
#L0af774.   v0:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0af778.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v5, v0) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0af77e.   v0:= temp  @type object;
#L0af780.   v0:= ([|java:lang:String|][])v0;
#L0af784.   v0:= ([|java:lang:String|][])v0;
#L0af788.   v2:= "http.protocol.single-cookie-header" @type (object, string);
#L0af78c.   v3:= 0  @length 4;
#L0af78e.   call temp:=  [|org:apache:http:params:HttpParams.getBooleanParameter|](v5, v2, v3) @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0af794.   v2:= temp;
#L0af796.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0af79c.   v0:= v1  @type object;
#L0af79e.   return v0  @type object;
#L0af7a0.   v0:= new [|org:apache:http:impl:cookie:RFC2109Spec|];
#L0af7a4.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0af7aa.   goto L0af79e;

   }
record [|org:apache:http:impl:cookie:RFC2109VersionHandler|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109VersionHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2109VersionHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2109VersionHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109VersionHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af7bc.   call temp:=  [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/AbstractCookieAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:AbstractCookieAttributeHandler|] @type direct;
#L0af7c2.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109VersionHandler.parse|] ([|org:apache:http:impl:cookie:RFC2109VersionHandler|] v4 @type (this), [|org:apache:http:cookie:SetCookie|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109VersionHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109VersionHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0af7d4.   if v5 != 0 then goto L0af7e8;
#L0af7d8.   v1:= new [|java:lang:IllegalArgumentException|];
#L0af7dc.   v2:= "Cookie may not be null" @type (object, string);
#L0af7e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af7e6.   throw v1;
#L0af7e8.   if v6 != 0 then goto L0af7fc;
#L0af7ec.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af7f0.   v2:= "Missing value for version attribute" @type (object, string);
#L0af7f4.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af7fa.   throw v1;
#L0af7fc.   call temp:=  [|java:lang:String.trim|](v6) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af802.   v1:= temp  @type object;
#L0af804.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af80a.   v1:= temp;
#L0af80c.   if v1 != 0 then goto L0af820;
#L0af810.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af814.   v2:= "Blank value for version attribute" @type (object, string);
#L0af818.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af81e.   throw v1;
#L0af820.   call temp:=  [|java:lang:Integer.parseInt|](v6) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0af826.   v1:= temp;
#L0af828.   call temp:=  [|org:apache:http:cookie:SetCookie.setVersion|](v5, v1) @signature [|Lorg/apache/http/cookie/SetCookie;.setVersion:(I)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0af82e.   return @void ;
#L0af830.   v0:= Exception  @type object;
#L0af832.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af836.   v2:= new [|java:lang:StringBuilder|];
#L0af83a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af840.   v3:= "Invalid version: " @type (object, string);
#L0af844.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af84a.   v2:= temp  @type object;
#L0af84c.   call temp:=  [|java:lang:NumberFormatException.getMessage|](v0) @signature [|Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:NumberFormatException|] @type virtual;
#L0af852.   v3:= temp  @type object;
#L0af854.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af85a.   v2:= temp  @type object;
#L0af85c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af862.   v2:= temp  @type object;
#L0af864.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af86a.   throw v1;
  catch  [|java:lang:NumberFormatException|] @[L0af820..L0af82e] goto L0af830;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2109VersionHandler.validate|] ([|org:apache:http:impl:cookie:RFC2109VersionHandler|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2109VersionHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2109VersionHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0af88c.   if v3 != 0 then goto L0af8a0;
#L0af890.   v0:= new [|java:lang:IllegalArgumentException|];
#L0af894.   v1:= "Cookie may not be null" @type (object, string);
#L0af898.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0af89e.   throw v0;
#L0af8a0.   call temp:=  [|org:apache:http:cookie:Cookie.getVersion|](v3) @signature [|Lorg/apache/http/cookie/Cookie;.getVersion:()I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0af8a6.   v0:= temp;
#L0af8a8.   if v0 >= 0 then goto L0af8bc;
#L0af8ac.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0af8b0.   v1:= "Cookie version may not be negative" @type (object, string);
#L0af8b4.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0af8ba.   throw v0;
#L0af8bc.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af8d0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af8d6.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler.match|] ([|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] v1 @type (this), [|org:apache:http:cookie:Cookie|] v2 @type (object), [|org:apache:http:cookie:CookieOrigin|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af8e8.   v0:= 1  @length 4;
#L0af8ea.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler.parse|] ([|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0af8fc.   v1:= instanceof @varname v3 @type [|org:apache:http:cookie:SetCookie2|];
#L0af900.   if v1 == 0 then goto L0af910;
#L0af904.   v0:= v3  @type object;
#L0af906.   v0:= ([|org:apache:http:cookie:SetCookie2|])v0;
#L0af90a.   call temp:=  [|org:apache:http:cookie:SetCookie2.setCommentURL|](v0, v4) @signature [|Lorg/apache/http/cookie/SetCookie2;.setCommentURL:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie2|] @type interface;
#L0af910.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler.validate|] ([|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] v0 @type (this), [|org:apache:http:cookie:Cookie|] v1 @type (object), [|org:apache:http:cookie:CookieOrigin|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
      
#L0af924.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DiscardAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af938.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af93e.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler.match|] ([|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] v1 @type (this), [|org:apache:http:cookie:Cookie|] v2 @type (object), [|org:apache:http:cookie:CookieOrigin|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DiscardAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af950.   v0:= 1  @length 4;
#L0af952.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler.parse|] ([|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DiscardAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0af964.   v1:= instanceof @varname v3 @type [|org:apache:http:cookie:SetCookie2|];
#L0af968.   if v1 == 0 then goto L0af97a;
#L0af96c.   v0:= v3  @type object;
#L0af96e.   v0:= ([|org:apache:http:cookie:SetCookie2|])v0;
#L0af972.   v1:= 1  @length 4;
#L0af974.   call temp:=  [|org:apache:http:cookie:SetCookie2.setDiscard|](v0, v1) @signature [|Lorg/apache/http/cookie/SetCookie2;.setDiscard:(Z)V|] @classDescriptor [|org:apache:http:cookie:SetCookie2|] @type interface;
#L0af97a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler.validate|] ([|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] v0 @type (this), [|org:apache:http:cookie:Cookie|] v1 @type (object), [|org:apache:http:cookie:CookieOrigin|] v2 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DiscardAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
      
#L0af98c.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af9a0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af9a6.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.domainMatch|] ([|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0af9b8.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af9be.   v1:= temp;
#L0af9c0.   if v1 != 0 then goto L0af9e0;
#L0af9c4.   v1:= "." @type (object, string);
#L0af9c8.   call temp:=  [|java:lang:String.startsWith|](v4, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af9ce.   v1:= temp;
#L0af9d0.   if v1 == 0 then goto L0af9e4;
#L0af9d4.   call temp:=  [|java:lang:String.endsWith|](v3, v4) @signature [|Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0af9da.   v1:= temp;
#L0af9dc.   if v1 == 0 then goto L0af9e4;
#L0af9e0.   v0:= 1  @length 4;
#L0af9e2.   return v0;
#L0af9e4.   v0:= 0  @length 4;
#L0af9e6.   goto L0af9e2;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.match|] ([|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] v6 @type (this), [|org:apache:http:cookie:Cookie|] v7 @type (object), [|org:apache:http:cookie:CookieOrigin|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0af9f8.   v3:= 0  @length 4;
#L0af9fa.   if v7 != 0 then goto L0afa0e;
#L0af9fe.   v3:= new [|java:lang:IllegalArgumentException|];
#L0afa02.   v4:= "Cookie may not be null" @type (object, string);
#L0afa06.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afa0c.   throw v3;
#L0afa0e.   if v8 != 0 then goto L0afa22;
#L0afa12.   v3:= new [|java:lang:IllegalArgumentException|];
#L0afa16.   v4:= "Cookie origin may not be null" @type (object, string);
#L0afa1a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afa20.   throw v3;
#L0afa22.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0afa28.   v4:= temp  @type object;
#L0afa2a.   v5:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0afa2e.   call temp:=  [|java:lang:String.toLowerCase|](v4, v5) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa34.   v2:= temp  @type object;
#L0afa36.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v7) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afa3c.   v0:= temp  @type object;
#L0afa3e.   call temp:=  [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.domainMatch|](v6, v2, v0) @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @type virtual;
#L0afa44.   v4:= temp;
#L0afa46.   if v4 != 0 then goto L0afa4c;
#L0afa4a.   return v3;
#L0afa4c.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa52.   v4:= temp;
#L0afa54.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa5a.   v5:= temp;
#L0afa5c.   v4:= v4 - v5  @type int;
#L0afa5e.   call temp:=  [|java:lang:String.substring|](v2, v3, v4) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa64.   v1:= temp  @type object;
#L0afa66.   v4:= 46  @length 16;
#L0afa6a.   call temp:=  [|java:lang:String.indexOf|](v1, v4) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa70.   v4:= temp;
#L0afa72.   v5:= -1  @length 4;
#L0afa74.   if v4 != v5 then goto L0afa4a;
#L0afa78.   v3:= 1  @length 4;
#L0afa7a.   goto L0afa4a;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.parse|] ([|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] v2 @type (this), [|org:apache:http:cookie:SetCookie|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0afa8c.   if v3 != 0 then goto L0afaa0;
#L0afa90.   v0:= new [|java:lang:IllegalArgumentException|];
#L0afa94.   v1:= "Cookie may not be null" @type (object, string);
#L0afa98.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afa9e.   throw v0;
#L0afaa0.   if v4 != 0 then goto L0afab4;
#L0afaa4.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afaa8.   v1:= "Missing value for domain attribute" @type (object, string);
#L0afaac.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afab2.   throw v0;
#L0afab4.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afaba.   v0:= temp  @type object;
#L0afabc.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afac2.   v0:= temp;
#L0afac4.   if v0 != 0 then goto L0afad8;
#L0afac8.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afacc.   v1:= "Blank value for domain attribute" @type (object, string);
#L0afad0.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afad6.   throw v0;
#L0afad8.   v0:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0afadc.   call temp:=  [|java:lang:String.toLowerCase|](v4, v0) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afae2.   v4:= temp  @type object;
#L0afae4.   v0:= "." @type (object, string);
#L0afae8.   call temp:=  [|java:lang:String.startsWith|](v4, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afaee.   v0:= temp;
#L0afaf0.   if v0 != 0 then goto L0afb1a;
#L0afaf4.   v0:= new [|java:lang:StringBuilder|];
#L0afaf8.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afafe.   v1:= 46  @length 16;
#L0afb02.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb08.   v0:= temp  @type object;
#L0afb0a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb10.   v0:= temp  @type object;
#L0afb12.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb18.   v4:= temp  @type object;
#L0afb1a.   call temp:=  [|org:apache:http:cookie:SetCookie.setDomain|](v3, v4) @signature [|Lorg/apache/http/cookie/SetCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0afb20.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.validate|] ([|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] v8 @type (this), [|org:apache:http:cookie:Cookie|] v9 @type (object), [|org:apache:http:cookie:CookieOrigin|] v10 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0afb34.   v7:= 46  @length 16;
#L0afb38.   if v9 != 0 then goto L0afb4c;
#L0afb3c.   v4:= new [|java:lang:IllegalArgumentException|];
#L0afb40.   v5:= "Cookie may not be null" @type (object, string);
#L0afb44.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afb4a.   throw v4;
#L0afb4c.   if v10 != 0 then goto L0afb60;
#L0afb50.   v4:= new [|java:lang:IllegalArgumentException|];
#L0afb54.   v5:= "Cookie origin may not be null" @type (object, string);
#L0afb58.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afb5e.   throw v4;
#L0afb60.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v10) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0afb66.   v4:= temp  @type object;
#L0afb68.   v5:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0afb6c.   call temp:=  [|java:lang:String.toLowerCase|](v4, v5) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afb72.   v3:= temp  @type object;
#L0afb74.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afb7a.   v4:= temp  @type object;
#L0afb7c.   if v4 != 0 then goto L0afb90;
#L0afb80.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afb84.   v5:= "Invalid cookie state: domain not specified" @type (object, string);
#L0afb88.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afb8e.   throw v4;
#L0afb90.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afb96.   v4:= temp  @type object;
#L0afb98.   v5:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0afb9c.   call temp:=  [|java:lang:String.toLowerCase|](v4, v5) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afba2.   v0:= temp  @type object;
#L0afba4.   v4:= instanceof @varname v9 @type [|org:apache:http:cookie:ClientCookie|];
#L0afba8.   if v4 == 0 then goto L0afd72;
#L0afbac.   v4:= v9  @type object;
#L0afbae.   v4:= ([|org:apache:http:cookie:ClientCookie|])v4;
#L0afbb2.   v5:= "domain" @type (object, string);
#L0afbb6.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v4, v5) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0afbbc.   v4:= temp;
#L0afbbe.   if v4 == 0 then goto L0afd72;
#L0afbc2.   v4:= "." @type (object, string);
#L0afbc6.   call temp:=  [|java:lang:String.startsWith|](v0, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afbcc.   v4:= temp;
#L0afbce.   if v4 != 0 then goto L0afc18;
#L0afbd2.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afbd6.   v5:= new [|java:lang:StringBuilder|];
#L0afbda.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afbe0.   v6:= "Domain attribute \"" @type (object, string);
#L0afbe4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afbea.   v5:= temp  @type object;
#L0afbec.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afbf2.   v6:= temp  @type object;
#L0afbf4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afbfa.   v5:= temp  @type object;
#L0afbfc.   v6:= "\" violates RFC 2109: domain must start with a dot" @type (object, string);
#L0afc00.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc06.   v5:= temp  @type object;
#L0afc08.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc0e.   v5:= temp  @type object;
#L0afc10.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afc16.   throw v4;
#L0afc18.   v4:= 1  @length 4;
#L0afc1a.   call temp:=  [|java:lang:String.indexOf|](v0, v7, v4) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afc20.   v1:= temp;
#L0afc22.   if v1 < 0 then goto L0afc36;
#L0afc26.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afc2c.   v4:= temp;
#L0afc2e.   v4:= v4 + -1;
#L0afc32.   if v1 != v4 then goto L0afc98;
#L0afc36.   v4:= ".local" @type (object, string);
#L0afc3a.   call temp:=  [|java:lang:String.equals|](v0, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afc40.   v4:= temp;
#L0afc42.   if v4 != 0 then goto L0afc98;
#L0afc46.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afc4a.   v5:= new [|java:lang:StringBuilder|];
#L0afc4e.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afc54.   v6:= "Domain attribute \"" @type (object, string);
#L0afc58.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc5e.   v5:= temp  @type object;
#L0afc60.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afc66.   v6:= temp  @type object;
#L0afc68.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc6e.   v5:= temp  @type object;
#L0afc70.   v6:= "\" violates RFC 2965: the value contains no embedded dots " @type (object, string);
#L0afc74.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc7a.   v5:= temp  @type object;
#L0afc7c.   v6:= "and the value is not .local" @type (object, string);
#L0afc80.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc86.   v5:= temp  @type object;
#L0afc88.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc8e.   v5:= temp  @type object;
#L0afc90.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afc96.   throw v4;
#L0afc98.   call temp:=  [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.domainMatch|](v8, v3, v0) @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @type virtual;
#L0afc9e.   v4:= temp;
#L0afca0.   if v4 != 0 then goto L0afcf6;
#L0afca4.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afca8.   v5:= new [|java:lang:StringBuilder|];
#L0afcac.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afcb2.   v6:= "Domain attribute \"" @type (object, string);
#L0afcb6.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcbc.   v5:= temp  @type object;
#L0afcbe.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afcc4.   v6:= temp  @type object;
#L0afcc6.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afccc.   v5:= temp  @type object;
#L0afcce.   v6:= "\" violates RFC 2965: effective host name does not " @type (object, string);
#L0afcd2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcd8.   v5:= temp  @type object;
#L0afcda.   v6:= "domain-match domain attribute." @type (object, string);
#L0afcde.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afce4.   v5:= temp  @type object;
#L0afce6.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcec.   v5:= temp  @type object;
#L0afcee.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afcf4.   throw v4;
#L0afcf6.   v4:= 0  @length 4;
#L0afcf8.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afcfe.   v5:= temp;
#L0afd00.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afd06.   v6:= temp;
#L0afd08.   v5:= v5 - v6  @type int;
#L0afd0a.   call temp:=  [|java:lang:String.substring|](v3, v4, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afd10.   v2:= temp  @type object;
#L0afd12.   call temp:=  [|java:lang:String.indexOf|](v2, v7) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afd18.   v4:= temp;
#L0afd1a.   v5:= -1  @length 4;
#L0afd1c.   if v4 == v5 then goto L0afdec;
#L0afd20.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afd24.   v5:= new [|java:lang:StringBuilder|];
#L0afd28.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afd2e.   v6:= "Domain attribute \"" @type (object, string);
#L0afd32.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd38.   v5:= temp  @type object;
#L0afd3a.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afd40.   v6:= temp  @type object;
#L0afd42.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd48.   v5:= temp  @type object;
#L0afd4a.   v6:= "\" violates RFC 2965: " @type (object, string);
#L0afd4e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd54.   v5:= temp  @type object;
#L0afd56.   v6:= "effective host minus domain may not contain any dots" @type (object, string);
#L0afd5a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd60.   v5:= temp  @type object;
#L0afd62.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd68.   v5:= temp  @type object;
#L0afd6a.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afd70.   throw v4;
#L0afd72.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afd78.   v4:= temp  @type object;
#L0afd7a.   call temp:=  [|java:lang:String.equals|](v4, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afd80.   v4:= temp;
#L0afd82.   if v4 != 0 then goto L0afdec;
#L0afd86.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afd8a.   v5:= new [|java:lang:StringBuilder|];
#L0afd8e.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afd94.   v6:= "Illegal domain attribute: \"" @type (object, string);
#L0afd98.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd9e.   v5:= temp  @type object;
#L0afda0.   call temp:=  [|org:apache:http:cookie:Cookie.getDomain|](v9) @signature [|Lorg/apache/http/cookie/Cookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0afda6.   v6:= temp  @type object;
#L0afda8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdae.   v5:= temp  @type object;
#L0afdb0.   v6:= "\"." @type (object, string);
#L0afdb4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdba.   v5:= temp  @type object;
#L0afdbc.   v6:= "Domain of origin: \"" @type (object, string);
#L0afdc0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdc6.   v5:= temp  @type object;
#L0afdc8.   call temp:=  [|java:lang:StringBuilder.append|](v5, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdce.   v5:= temp  @type object;
#L0afdd0.   v6:= "\"" @type (object, string);
#L0afdd4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdda.   v5:= temp  @type object;
#L0afddc.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afde2.   v5:= temp  @type object;
#L0afde4.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afdea.   throw v4;
#L0afdec.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0afe00.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0afe06.   return @void ;

   }
    procedure [|int|][] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.parsePortAttribute|] ([|java:lang:String|] v7 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.parsePortAttribute:(Ljava/lang/String;)[I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0afe18.   v3:= new [|java:util:StringTokenizer|];
#L0afe1c.   v4:= "," @type (object, string);
#L0afe20.   call temp:=  [|java:util:StringTokenizer.<init>|](v3, v7, v4) @signature [|Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:util:StringTokenizer|] @type direct;
#L0afe26.   call temp:=  [|java:util:StringTokenizer.countTokens|](v3) @signature [|Ljava/util/StringTokenizer;.countTokens:()I|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0afe2c.   v4:= temp;
#L0afe2e.   v2:= new [|int|][v4];
#L0afe32.   v1:= 0  @length 4;
#L0afe34.   call temp:=  [|java:util:StringTokenizer.hasMoreTokens|](v3) @signature [|Ljava/util/StringTokenizer;.hasMoreTokens:()Z|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0afe3a.   v4:= temp;
#L0afe3c.   if v4 == 0 then goto L0afeb6;
#L0afe40.   call temp:=  [|java:util:StringTokenizer.nextToken|](v3) @signature [|Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;|] @classDescriptor [|java:util:StringTokenizer|] @type virtual;
#L0afe46.   v4:= temp  @type object;
#L0afe48.   call temp:=  [|java:lang:String.trim|](v4) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afe4e.   v4:= temp  @type object;
#L0afe50.   call temp:=  [|java:lang:Integer.parseInt|](v4) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0afe56.   v4:= temp;
#L0afe58.   v2[v1]:= v4;
#L0afe5c.   v4:= v2[v1];
#L0afe60.   if v4 >= 0 then goto L0afeb0;
#L0afe64.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afe68.   v5:= "Invalid Port attribute." @type (object, string);
#L0afe6c.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afe72.   throw v4;
#L0afe74.   v0:= Exception  @type object;
#L0afe76.   v4:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0afe7a.   v5:= new [|java:lang:StringBuilder|];
#L0afe7e.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afe84.   v6:= "Invalid Port attribute: " @type (object, string);
#L0afe88.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afe8e.   v5:= temp  @type object;
#L0afe90.   call temp:=  [|java:lang:NumberFormatException.getMessage|](v0) @signature [|Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:NumberFormatException|] @type virtual;
#L0afe96.   v6:= temp  @type object;
#L0afe98.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afe9e.   v5:= temp  @type object;
#L0afea0.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afea6.   v5:= temp  @type object;
#L0afea8.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v4, v5) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0afeae.   throw v4;
#L0afeb0.   v1:= v1 + 1;
#L0afeb4.   goto L0afe34;
#L0afeb6.   return v2  @type object;
  catch  [|java:lang:NumberFormatException|] @[L0afe34..L0afe74] goto L0afe74;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.portMatch|] ([|int|] v4, [|int|][] v5) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.portMatch:(I[I)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0afed8.   v2:= 0  @length 4;
#L0afeda.   v0:= 0  @length 4;
#L0afedc.   v1:= v5.length;
#L0afede.   if v0 >= v1 then goto L0afeec;
#L0afee2.   v3:= v5[v0];
#L0afee6.   if v4 != v3 then goto L0afeee;
#L0afeea.   v2:= 1  @length 4;
#L0afeec.   return v2;
#L0afeee.   v0:= v0 + 1;
#L0afef2.   goto L0afede;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.match|] ([|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] v4 @type (this), [|org:apache:http:cookie:Cookie|] v5 @type (object), [|org:apache:http:cookie:CookieOrigin|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aff04.   v2:= 0  @length 4;
#L0aff06.   if v5 != 0 then goto L0aff1a;
#L0aff0a.   v1:= new [|java:lang:IllegalArgumentException|];
#L0aff0e.   v2:= "Cookie may not be null" @type (object, string);
#L0aff12.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aff18.   throw v1;
#L0aff1a.   if v6 != 0 then goto L0aff2e;
#L0aff1e.   v1:= new [|java:lang:IllegalArgumentException|];
#L0aff22.   v2:= "Cookie origin may not be null" @type (object, string);
#L0aff26.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0aff2c.   throw v1;
#L0aff2e.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPort|](v6) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPort:()I|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0aff34.   v0:= temp;
#L0aff36.   v1:= instanceof @varname v5 @type [|org:apache:http:cookie:ClientCookie|];
#L0aff3a.   if v1 == 0 then goto L0aff7c;
#L0aff3e.   v1:= v5  @type object;
#L0aff40.   v1:= ([|org:apache:http:cookie:ClientCookie|])v1;
#L0aff44.   v3:= "port" @type (object, string);
#L0aff48.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v1, v3) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0aff4e.   v1:= temp;
#L0aff50.   if v1 == 0 then goto L0aff7c;
#L0aff54.   call temp:=  [|org:apache:http:cookie:Cookie.getPorts|](v5) @signature [|Lorg/apache/http/cookie/Cookie;.getPorts:()[I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aff5a.   v1:= temp  @type object;
#L0aff5c.   if v1 != 0 then goto L0aff64;
#L0aff60.   v1:= v2;
#L0aff62.   return v1;
#L0aff64.   call temp:=  [|org:apache:http:cookie:Cookie.getPorts|](v5) @signature [|Lorg/apache/http/cookie/Cookie;.getPorts:()[I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0aff6a.   v1:= temp  @type object;
#L0aff6c.   call temp:=  [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.portMatch|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.portMatch:(I[I)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @type static;
#L0aff72.   v1:= temp;
#L0aff74.   if v1 != 0 then goto L0aff7c;
#L0aff78.   v1:= v2;
#L0aff7a.   goto L0aff62;
#L0aff7c.   v1:= 1  @length 4;
#L0aff7e.   goto L0aff62;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.parse|] ([|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] v4 @type (this), [|org:apache:http:cookie:SetCookie|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aff90.   if v5 != 0 then goto L0affa4;
#L0aff94.   v2:= new [|java:lang:IllegalArgumentException|];
#L0aff98.   v3:= "Cookie may not be null" @type (object, string);
#L0aff9c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0affa2.   throw v2;
#L0affa4.   v2:= instanceof @varname v5 @type [|org:apache:http:cookie:SetCookie2|];
#L0affa8.   if v2 == 0 then goto L0affd8;
#L0affac.   v0:= v5  @type object;
#L0affae.   v0:= ([|org:apache:http:cookie:SetCookie2|])v0;
#L0affb2.   if v6 == 0 then goto L0affd8;
#L0affb6.   call temp:=  [|java:lang:String.trim|](v6) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0affbc.   v2:= temp  @type object;
#L0affbe.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0affc4.   v2:= temp;
#L0affc6.   if v2 <= 0 then goto L0affd8;
#L0affca.   call temp:=  [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.parsePortAttribute|](v6) @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.parsePortAttribute:(Ljava/lang/String;)[I|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @type static;
#L0affd0.   v1:= temp  @type object;
#L0affd2.   call temp:=  [|org:apache:http:cookie:SetCookie2.setPorts|](v0, v1) @signature [|Lorg/apache/http/cookie/SetCookie2;.setPorts:([I)V|] @classDescriptor [|org:apache:http:cookie:SetCookie2|] @type interface;
#L0affd8.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.validate|] ([|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] v3 @type (this), [|org:apache:http:cookie:Cookie|] v4 @type (object), [|org:apache:http:cookie:CookieOrigin|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0affec.   if v4 != 0 then goto L0b0000;
#L0afff0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0afff4.   v2:= "Cookie may not be null" @type (object, string);
#L0afff8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0afffe.   throw v1;
#L0b0000.   if v5 != 0 then goto L0b0014;
#L0b0004.   v1:= new [|java:lang:IllegalArgumentException|];
#L0b0008.   v2:= "Cookie origin may not be null" @type (object, string);
#L0b000c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0012.   throw v1;
#L0b0014.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPort|](v5) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPort:()I|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b001a.   v0:= temp;
#L0b001c.   v1:= instanceof @varname v4 @type [|org:apache:http:cookie:ClientCookie|];
#L0b0020.   if v1 == 0 then goto L0b005e;
#L0b0024.   v1:= v4  @type object;
#L0b0026.   v1:= ([|org:apache:http:cookie:ClientCookie|])v1;
#L0b002a.   v2:= "port" @type (object, string);
#L0b002e.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v1, v2) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0b0034.   v1:= temp;
#L0b0036.   if v1 == 0 then goto L0b005e;
#L0b003a.   call temp:=  [|org:apache:http:cookie:Cookie.getPorts|](v4) @signature [|Lorg/apache/http/cookie/Cookie;.getPorts:()[I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0b0040.   v1:= temp  @type object;
#L0b0042.   call temp:=  [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.portMatch|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.portMatch:(I[I)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @type static;
#L0b0048.   v1:= temp;
#L0b004a.   if v1 != 0 then goto L0b005e;
#L0b004e.   v1:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0b0052.   v2:= "Port attribute violates RFC 2965: Request port not found in cookie's port list." @type (object, string);
#L0b0056.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v1, v2) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0b005c.   throw v1;
#L0b005e.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965Spec|]  @type class @AccessFlag PUBLIC  extends [|org:apache:http:impl:cookie:RFC2109Spec|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965Spec.<init>|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b0070.   v0:= 0  @length 4;
#L0b0072.   v1:= 0  @length 4;
#L0b0074.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.<init>|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0b007a.   return @void ;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965Spec.<init>|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this), [|java:lang:String|][] v3 @type (object), [|boolean|] v4) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:([Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b008c.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.<init>|](v2, v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type direct;
#L0b0092.   v0:= "domain" @type (object, string);
#L0b0096.   v1:= new [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|];
#L0b009a.   call temp:=  [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965DomainAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965DomainAttributeHandler|] @type direct;
#L0b00a0.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.registerAttribHandler|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b00a6.   v0:= "port" @type (object, string);
#L0b00aa.   v1:= new [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|];
#L0b00ae.   call temp:=  [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965PortAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965PortAttributeHandler|] @type direct;
#L0b00b4.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.registerAttribHandler|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b00ba.   v0:= "commenturl" @type (object, string);
#L0b00be.   v1:= new [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|];
#L0b00c2.   call temp:=  [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965CommentUrlAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965CommentUrlAttributeHandler|] @type direct;
#L0b00c8.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.registerAttribHandler|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b00ce.   v0:= "discard" @type (object, string);
#L0b00d2.   v1:= new [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|];
#L0b00d6.   call temp:=  [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965DiscardAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965DiscardAttributeHandler|] @type direct;
#L0b00dc.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.registerAttribHandler|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b00e2.   v0:= "version" @type (object, string);
#L0b00e6.   v1:= new [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|];
#L0b00ea.   call temp:=  [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler.<init>|](v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965VersionAttributeHandler;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] @type direct;
#L0b00f0.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.registerAttribHandler|](v2, v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.registerAttribHandler:(Ljava/lang/String;Lorg/apache/http/cookie/CookieAttributeHandler;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b00f6.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieOrigin|] [|org:apache:http:impl:cookie:RFC2965Spec.adjustEffectiveHost|] ([|org:apache:http:cookie:CookieOrigin|] v8 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.adjustEffectiveHost:(Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/cookie/CookieOrigin;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b0108.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getHost|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getHost:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b010e.   v1:= temp  @type object;
#L0b0110.   v3:= 1  @length 4;
#L0b0112.   v2:= 0  @length 4;
#L0b0114.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b011a.   v4:= temp;
#L0b011c.   if v2 >= v4 then goto L0b013a;
#L0b0120.   call temp:=  [|java:lang:String.charAt|](v1, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0126.   v0:= temp;
#L0b0128.   v4:= 46  @length 16;
#L0b012c.   if v0 == v4 then goto L0b0138;
#L0b0130.   v4:= 58  @length 16;
#L0b0134.   if v0 != v4 then goto L0b018a;
#L0b0138.   v3:= 0  @length 4;
#L0b013a.   if v3 == 0 then goto L0b0188;
#L0b013e.   v4:= new [|java:lang:StringBuilder|];
#L0b0142.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0148.   call temp:=  [|java:lang:StringBuilder.append|](v4, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b014e.   v4:= temp  @type object;
#L0b0150.   v5:= ".local" @type (object, string);
#L0b0154.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b015a.   v4:= temp  @type object;
#L0b015c.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0162.   v1:= temp  @type object;
#L0b0164.   v4:= new [|org:apache:http:cookie:CookieOrigin|];
#L0b0168.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPort|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPort:()I|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b016e.   v5:= temp;
#L0b0170.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPath|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPath:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b0176.   v6:= temp  @type object;
#L0b0178.   call temp:=  [|org:apache:http:cookie:CookieOrigin.isSecure|](v8) @signature [|Lorg/apache/http/cookie/CookieOrigin;.isSecure:()Z|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b017e.   v7:= temp;
#L0b0180.   call temp:=  [|org:apache:http:cookie:CookieOrigin.<init>|](v4, v1, v5, v6, v7) @signature [|Lorg/apache/http/cookie/CookieOrigin;.<init>:(Ljava/lang/String;ILjava/lang/String;Z)V|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type direct;
#L0b0186.   v8:= v4  @type object;
#L0b0188.   return v8  @type object;
#L0b018a.   v2:= v2 + 1;
#L0b018e.   goto L0b0114;

   }
    procedure [|org:apache:http:impl:cookie:BasicClientCookie|] [|org:apache:http:impl:cookie:RFC2965Spec.createCookie|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|org:apache:http:cookie:CookieOrigin|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.createCookie:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/impl/cookie/BasicClientCookie;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b01a0.   v0:= new [|org:apache:http:impl:cookie:BasicClientCookie|];
#L0b01a4.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.<init>|](v0, v3, v4) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type direct;
#L0b01aa.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getDefaultPath|](v5) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getDefaultPath:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b01b0.   v1:= temp  @type object;
#L0b01b2.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setPath|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setPath:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0b01b8.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getDefaultDomain|](v5) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getDefaultDomain:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b01be.   v1:= temp  @type object;
#L0b01c0.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setDomain|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0b01c6.   return v0  @type object;

   }
    procedure [|org:apache:http:impl:cookie:BasicClientCookie|] [|org:apache:http:impl:cookie:RFC2965Spec.createCookie2|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|org:apache:http:cookie:CookieOrigin|] v7 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.createCookie2:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/impl/cookie/BasicClientCookie;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b01d8.   v0:= new [|org:apache:http:impl:cookie:BasicClientCookie2|];
#L0b01dc.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie2.<init>|](v0, v5, v6) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie2|] @type direct;
#L0b01e2.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getDefaultPath|](v7) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getDefaultPath:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b01e8.   v1:= temp  @type object;
#L0b01ea.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie2.setPath|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setPath:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie2|] @type virtual;
#L0b01f0.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getDefaultDomain|](v7) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getDefaultDomain:(Lorg/apache/http/cookie/CookieOrigin;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b01f6.   v1:= temp  @type object;
#L0b01f8.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie2.setDomain|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie2|] @type virtual;
#L0b01fe.   v1:= 1  @length 4;
#L0b0200.   v1:= new [|int|][v1];
#L0b0204.   v2:= 0  @length 4;
#L0b0206.   call temp:=  [|org:apache:http:cookie:CookieOrigin.getPort|](v7) @signature [|Lorg/apache/http/cookie/CookieOrigin;.getPort:()I|] @classDescriptor [|org:apache:http:cookie:CookieOrigin|] @type virtual;
#L0b020c.   v3:= temp;
#L0b020e.   v1[v2]:= v3;
#L0b0212.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie2.setPorts|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie2;.setPorts:([I)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie2|] @type virtual;
#L0b0218.   return v0  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965Spec.formatCookieAsVer|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v6 @type (this), [|org:apache:http:util:CharArrayBuffer|] v7 @type (object), [|org:apache:http:cookie:Cookie|] v8 @type (object), [|int|] v9) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.formatCookieAsVer:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b022c.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.formatCookieAsVer|](v6, v7, v8, v9) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.formatCookieAsVer:(Lorg/apache/http/util/CharArrayBuffer;Lorg/apache/http/cookie/Cookie;I)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type super;
#L0b0232.   v4:= instanceof @varname v8 @type [|org:apache:http:cookie:ClientCookie|];
#L0b0236.   if v4 == 0 then goto L0b02bc;
#L0b023a.   v4:= v8  @type object;
#L0b023c.   v4:= ([|org:apache:http:cookie:ClientCookie|])v4;
#L0b0240.   v5:= "port" @type (object, string);
#L0b0244.   call temp:=  [|org:apache:http:cookie:ClientCookie.getAttribute|](v4, v5) @signature [|Lorg/apache/http/cookie/ClientCookie;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0b024a.   v3:= temp  @type object;
#L0b024c.   if v3 == 0 then goto L0b02bc;
#L0b0250.   v4:= "; $Port" @type (object, string);
#L0b0254.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b025a.   v4:= "=\"" @type (object, string);
#L0b025e.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b0264.   call temp:=  [|java:lang:String.trim|](v3) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b026a.   v4:= temp  @type object;
#L0b026c.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0272.   v4:= temp;
#L0b0274.   if v4 <= 0 then goto L0b02b2;
#L0b0278.   call temp:=  [|org:apache:http:cookie:Cookie.getPorts|](v8) @signature [|Lorg/apache/http/cookie/Cookie;.getPorts:()[I|] @classDescriptor [|org:apache:http:cookie:Cookie|] @type interface;
#L0b027e.   v2:= temp  @type object;
#L0b0280.   if v2 == 0 then goto L0b02b2;
#L0b0284.   v0:= 0  @length 4;
#L0b0286.   v1:= v2.length;
#L0b0288.   if v0 >= v1 then goto L0b02b2;
#L0b028c.   if v0 <= 0 then goto L0b029a;
#L0b0290.   v4:= "," @type (object, string);
#L0b0294.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b029a.   v4:= v2[v0];
#L0b029e.   call temp:=  [|java:lang:Integer.toString|](v4) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b02a4.   v4:= temp  @type object;
#L0b02a6.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b02ac.   v0:= v0 + 1;
#L0b02b0.   goto L0b0288;
#L0b02b2.   v4:= "\"" @type (object, string);
#L0b02b6.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v7, v4) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b02bc.   return @void ;

   }
    procedure [|int|] [|org:apache:http:impl:cookie:RFC2965Spec.getVersion|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v1 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getVersion:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b02d0.   v0:= 1  @length 4;
#L0b02d2.   return v0;

   }
    procedure [|org:apache:http:Header|] [|org:apache:http:impl:cookie:RFC2965Spec.getVersionHeader|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getVersionHeader:()Lorg/apache/http/Header;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b02e4.   v0:= new [|org:apache:http:util:CharArrayBuffer|];
#L0b02e8.   v1:= 40  @length 16;
#L0b02ec.   call temp:=  [|org:apache:http:util:CharArrayBuffer.<init>|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type direct;
#L0b02f2.   v1:= "Cookie2" @type (object, string);
#L0b02f6.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b02fc.   v1:= ": " @type (object, string);
#L0b0300.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b0306.   v1:= "$Version=" @type (object, string);
#L0b030a.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b0310.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.getVersion|](v2) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.getVersion:()I|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b0316.   v1:= temp;
#L0b0318.   call temp:=  [|java:lang:Integer.toString|](v1) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b031e.   v1:= temp  @type object;
#L0b0320.   call temp:=  [|org:apache:http:util:CharArrayBuffer.append|](v0, v1) @signature [|Lorg/apache/http/util/CharArrayBuffer;.append:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:util:CharArrayBuffer|] @type virtual;
#L0b0326.   v1:= new [|org:apache:http:message:BufferedHeader|];
#L0b032a.   call temp:=  [|org:apache:http:message:BufferedHeader.<init>|](v1, v0) @signature [|Lorg/apache/http/message/BufferedHeader;.<init>:(Lorg/apache/http/util/CharArrayBuffer;)V|] @classDescriptor [|org:apache:http:message:BufferedHeader|] @type direct;
#L0b0330.   return v1  @type object;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965Spec.match|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0344.   if v3 != 0 then goto L0b0358;
#L0b0348.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b034c.   v1:= "Cookie may not be null" @type (object, string);
#L0b0350.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0356.   throw v0;
#L0b0358.   if v4 != 0 then goto L0b036c;
#L0b035c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0360.   v1:= "Cookie origin may not be null" @type (object, string);
#L0b0364.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b036a.   throw v0;
#L0b036c.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.adjustEffectiveHost|](v4) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.adjustEffectiveHost:(Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/cookie/CookieOrigin;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b0372.   v4:= temp  @type object;
#L0b0374.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.match|](v2, v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type super;
#L0b037a.   v0:= temp;
#L0b037c.   return v0;

   }
    procedure [|java:util:List|] [|org:apache:http:impl:cookie:RFC2965Spec.parse|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v24 @type (this), [|org:apache:http:Header|] v25 @type (object), [|org:apache:http:cookie:CookieOrigin|] v26 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.parse:(Lorg/apache/http/Header;Lorg/apache/http/cookie/CookieOrigin;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
      
#L0b0390.   if v25 != 0 then goto L0b03a4;
#L0b0394.   v22:= new [|java:lang:IllegalArgumentException|];
#L0b0398.   v23:= "Header may not be null" @type (object, string);
#L0b039c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b03a2.   throw v22;
#L0b03a4.   if v26 != 0 then goto L0b03b8;
#L0b03a8.   v22:= new [|java:lang:IllegalArgumentException|];
#L0b03ac.   v23:= "Cookie origin may not be null" @type (object, string);
#L0b03b0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v22, v23) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b03b6.   throw v22;
#L0b03b8.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.adjustEffectiveHost|](v26) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.adjustEffectiveHost:(Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/cookie/CookieOrigin;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b03be.   v26:= temp  @type object;
#L0b03c0.   call temp:=  [|org:apache:http:Header.getElements|](v25) @signature [|Lorg/apache/http/Header;.getElements:()[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b03c6.   v10:= temp  @type object;
#L0b03c8.   v9:= new [|java:util:ArrayList|];
#L0b03cc.   v0:= v10.length;
#L0b03ce.   v22:= v0;
#L0b03d2.   v0:= v22;
#L0b03d6.   call temp:=  [|java:util:ArrayList.<init>|](v9, v0) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0b03dc.   v4:= v10  @type object;
#L0b03de.   v0:= v4.length;
#L0b03e0.   v17:= v0;
#L0b03e4.   v14:= 0  @length 4;
#L0b03e6.   v15:= v14;
#L0b03e8.   v0:= v17;
#L0b03ec.   if v15 >= v0 then goto L0b055a;
#L0b03f0.   v13:= v4[v15]  @type object;
#L0b03f4.   call temp:=  [|org:apache:http:HeaderElement.getName|](v13) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0b03fa.   v18:= temp  @type object;
#L0b03fc.   call temp:=  [|org:apache:http:HeaderElement.getValue|](v13) @signature [|Lorg/apache/http/HeaderElement;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0b0402.   v21:= temp  @type object;
#L0b0404.   if v18 == 0 then goto L0b0414;
#L0b0408.   call temp:=  [|java:lang:String.length|](v18) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b040e.   v22:= temp;
#L0b0410.   if v22 != 0 then goto L0b0424;
#L0b0414.   v22:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0b0418.   v23:= "Cookie name may not be empty" @type (object, string);
#L0b041c.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v22, v23) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0b0422.   throw v22;
#L0b0424.   call temp:=  [|org:apache:http:Header.getName|](v25) @signature [|Lorg/apache/http/Header;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b042a.   v22:= temp  @type object;
#L0b042c.   v23:= "Set-Cookie2" @type (object, string);
#L0b0430.   call temp:=  [|java:lang:String.equals|](v22, v23) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0436.   v22:= temp;
#L0b0438.   if v22 == 0 then goto L0b04aa;
#L0b043c.   v0:= v24  @type object;
#L0b0440.   v1:= v18  @type object;
#L0b0444.   v2:= v21  @type object;
#L0b0448.   v3:= v26  @type object;
#L0b044c.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.createCookie2|](v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.createCookie2:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/impl/cookie/BasicClientCookie;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0b0452.   v8:= temp  @type object;
#L0b0454.   call temp:=  [|org:apache:http:HeaderElement.getParameters|](v13) @signature [|Lorg/apache/http/HeaderElement;.getParameters:()[Lorg/apache/http/NameValuePair;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0b045a.   v7:= temp  @type object;
#L0b045c.   v6:= new [|java:util:HashMap|];
#L0b0460.   v0:= v7.length;
#L0b0462.   v22:= v0;
#L0b0466.   v0:= v22;
#L0b046a.   call temp:=  [|java:util:HashMap.<init>|](v6, v0) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0b0470.   v0:= v7.length;
#L0b0472.   v22:= v0;
#L0b0476.   v16:= v22 + -1;
#L0b047a.   if v16 < 0 then goto L0b04c4;
#L0b047e.   v19:= v7[v16]  @type object;
#L0b0482.   call temp:=  [|org:apache:http:NameValuePair.getName|](v19) @signature [|Lorg/apache/http/NameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0b0488.   v22:= temp  @type object;
#L0b048a.   v23:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0b048e.   call temp:=  [|java:lang:String.toLowerCase|](v22, v23) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0494.   v22:= temp  @type object;
#L0b0496.   v0:= v22  @type object;
#L0b049a.   v1:= v19  @type object;
#L0b049e.   call temp:=  [|java:util:Map.put|](v6, v0, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b04a4.   v16:= v16 + -1;
#L0b04a8.   goto L0b047a;
#L0b04aa.   v0:= v24  @type object;
#L0b04ae.   v1:= v18  @type object;
#L0b04b2.   v2:= v21  @type object;
#L0b04b6.   v3:= v26  @type object;
#L0b04ba.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.createCookie|](v0, v1, v2, v3) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.createCookie:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/impl/cookie/BasicClientCookie;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0b04c0.   v8:= temp  @type object;
#L0b04c2.   goto L0b0454;
#L0b04c4.   call temp:=  [|java:util:Map.entrySet|](v6) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b04ca.   v22:= temp  @type object;
#L0b04cc.   call temp:=  [|java:util:Set.iterator|](v22) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0b04d2.   v14:= temp  @type object;
#L0b04d4.   call temp:=  [|java:util:Iterator.hasNext|](v14) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0b04da.   v22:= temp;
#L0b04dc.   if v22 == 0 then goto L0b054a;
#L0b04e0.   call temp:=  [|java:util:Iterator.next|](v14) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0b04e6.   v11:= temp  @type object;
#L0b04e8.   v11:= ([|java:util:Map$Entry|])v11;
#L0b04ec.   call temp:=  [|java:util:Map$Entry.getValue|](v11) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0b04f2.   v5:= temp  @type object;
#L0b04f4.   v5:= ([|org:apache:http:NameValuePair|])v5;
#L0b04f8.   call temp:=  [|org:apache:http:NameValuePair.getName|](v5) @signature [|Lorg/apache/http/NameValuePair;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0b04fe.   v22:= temp  @type object;
#L0b0500.   v23:= @@[|java:util:Locale.ENGLISH|]   @type object;
#L0b0504.   call temp:=  [|java:lang:String.toLowerCase|](v22, v23) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b050a.   v20:= temp  @type object;
#L0b050c.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v5) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0b0512.   v22:= temp  @type object;
#L0b0514.   v0:= v20  @type object;
#L0b0518.   v1:= v22  @type object;
#L0b051c.   call temp:=  [|org:apache:http:impl:cookie:BasicClientCookie.setAttribute|](v8, v0, v1) @signature [|Lorg/apache/http/impl/cookie/BasicClientCookie;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:impl:cookie:BasicClientCookie|] @type virtual;
#L0b0522.   v0:= v24  @type object;
#L0b0526.   v1:= v20  @type object;
#L0b052a.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.findAttribHandler|](v0, v1) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.findAttribHandler:(Ljava/lang/String;)Lorg/apache/http/cookie/CookieAttributeHandler;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type virtual;
#L0b0530.   v12:= temp  @type object;
#L0b0532.   if v12 == 0 then goto L0b04d4;
#L0b0536.   call temp:=  [|org:apache:http:NameValuePair.getValue|](v5) @signature [|Lorg/apache/http/NameValuePair;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:NameValuePair|] @type interface;
#L0b053c.   v22:= temp  @type object;
#L0b053e.   v0:= v22  @type object;
#L0b0542.   call temp:=  [|org:apache:http:cookie:CookieAttributeHandler.parse|](v12, v8, v0) @signature [|Lorg/apache/http/cookie/CookieAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:CookieAttributeHandler|] @type interface;
#L0b0548.   goto L0b04d4;
#L0b054a.   call temp:=  [|java:util:List.add|](v9, v8) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0b0550.   v14:= v15 + 1;
#L0b0554.   v15:= v14;
#L0b0556.   goto L0b03e8;
#L0b055a.   return v9  @type object;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965Spec.validate|] ([|org:apache:http:impl:cookie:RFC2965Spec|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965Spec|] @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b056c.   if v3 != 0 then goto L0b0580;
#L0b0570.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0574.   v1:= "Cookie may not be null" @type (object, string);
#L0b0578.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b057e.   throw v0;
#L0b0580.   if v4 != 0 then goto L0b0594;
#L0b0584.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0588.   v1:= "Cookie origin may not be null" @type (object, string);
#L0b058c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0592.   throw v0;
#L0b0594.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.adjustEffectiveHost|](v4) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.adjustEffectiveHost:(Lorg/apache/http/cookie/CookieOrigin;)Lorg/apache/http/cookie/CookieOrigin;|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type static;
#L0b059a.   v4:= temp  @type object;
#L0b059c.   call temp:=  [|org:apache:http:impl:cookie:RFC2109Spec.validate|](v2, v3, v4) @signature [|Lorg/apache/http/impl/cookie/RFC2109Spec;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2109Spec|] @type super;
#L0b05a2.   return @void ;

   }
record [|org:apache:http:impl:cookie:RFC2965SpecFactory|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieSpecFactory|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965SpecFactory.<init>|] ([|org:apache:http:impl:cookie:RFC2965SpecFactory|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965SpecFactory|] @signature [|Lorg/apache/http/impl/cookie/RFC2965SpecFactory;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b05b4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b05ba.   return @void ;

   }
    procedure [|org:apache:http:cookie:CookieSpec|] [|org:apache:http:impl:cookie:RFC2965SpecFactory.newInstance|] ([|org:apache:http:impl:cookie:RFC2965SpecFactory|] v4 @type (this), [|org:apache:http:params:HttpParams|] v5 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965SpecFactory|] @signature [|Lorg/apache/http/impl/cookie/RFC2965SpecFactory;.newInstance:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/cookie/CookieSpec;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b05cc.   if v5 == 0 then goto L0b0600;
#L0b05d0.   v1:= new [|org:apache:http:impl:cookie:RFC2965Spec|];
#L0b05d4.   v0:= "http.protocol.cookie-datepatterns" @type (object, string);
#L0b05d8.   call temp:=  [|org:apache:http:params:HttpParams.getParameter|](v5, v0) @signature [|Lorg/apache/http/params/HttpParams;.getParameter:(Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0b05de.   v0:= temp  @type object;
#L0b05e0.   v0:= ([|java:lang:String|][])v0;
#L0b05e4.   v0:= ([|java:lang:String|][])v0;
#L0b05e8.   v2:= "http.protocol.single-cookie-header" @type (object, string);
#L0b05ec.   v3:= 0  @length 4;
#L0b05ee.   call temp:=  [|org:apache:http:params:HttpParams.getBooleanParameter|](v5, v2, v3) @signature [|Lorg/apache/http/params/HttpParams;.getBooleanParameter:(Ljava/lang/String;Z)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0b05f4.   v2:= temp;
#L0b05f6.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.<init>|](v1, v0, v2) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:([Ljava/lang/String;Z)V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0b05fc.   v0:= v1  @type object;
#L0b05fe.   return v0  @type object;
#L0b0600.   v0:= new [|org:apache:http:impl:cookie:RFC2965Spec|];
#L0b0604.   call temp:=  [|org:apache:http:impl:cookie:RFC2965Spec.<init>|](v0) @signature [|Lorg/apache/http/impl/cookie/RFC2965Spec;.<init>:()V|] @classDescriptor [|org:apache:http:impl:cookie:RFC2965Spec|] @type direct;
#L0b060a.   goto L0b05fe;

   }
record [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:cookie:CookieAttributeHandler|] {
   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler.<init>|] ([|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] v0 @type (this)) @owner [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965VersionAttributeHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b061c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b0622.   return @void ;

   }
    procedure [|boolean|] [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler.match|] ([|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] v1 @type (this), [|org:apache:http:cookie:Cookie|] v2 @type (object), [|org:apache:http:cookie:CookieOrigin|] v3 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965VersionAttributeHandler;.match:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0634.   v0:= 1  @length 4;
#L0b0636.   return v0;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler.parse|] ([|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] v4 @type (this), [|org:apache:http:cookie:SetCookie|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965VersionAttributeHandler;.parse:(Lorg/apache/http/cookie/SetCookie;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b0648.   if v5 != 0 then goto L0b065c;
#L0b064c.   v2:= new [|java:lang:IllegalArgumentException|];
#L0b0650.   v3:= "Cookie may not be null" @type (object, string);
#L0b0654.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b065a.   throw v2;
#L0b065c.   if v6 != 0 then goto L0b0670;
#L0b0660.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0b0664.   v3:= "Missing value for version attribute" @type (object, string);
#L0b0668.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0b066e.   throw v2;
#L0b0670.   v1:= -1  @length 4;
#L0b0672.   call temp:=  [|java:lang:Integer.parseInt|](v6) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b0678.   v1:= temp;
#L0b067a.   if v1 >= 0 then goto L0b0694;
#L0b067e.   v2:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0b0682.   v3:= "Invalid cookie version." @type (object, string);
#L0b0686.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v2, v3) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0b068c.   throw v2;
#L0b068e.   v0:= Exception  @type object;
#L0b0690.   v1:= -1  @length 4;
#L0b0692.   goto L0b067a;
#L0b0694.   call temp:=  [|org:apache:http:cookie:SetCookie.setVersion|](v5, v1) @signature [|Lorg/apache/http/cookie/SetCookie;.setVersion:(I)V|] @classDescriptor [|org:apache:http:cookie:SetCookie|] @type interface;
#L0b069a.   return @void ;
  catch  [|java:lang:NumberFormatException|] @[L0b0672..L0b0678] goto L0b068e;

   }
    procedure [|void|] [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler.validate|] ([|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] v2 @type (this), [|org:apache:http:cookie:Cookie|] v3 @type (object), [|org:apache:http:cookie:CookieOrigin|] v4 @type (object)) @owner [|org:apache:http:impl:cookie:RFC2965VersionAttributeHandler|] @signature [|Lorg/apache/http/impl/cookie/RFC2965VersionAttributeHandler;.validate:(Lorg/apache/http/cookie/Cookie;Lorg/apache/http/cookie/CookieOrigin;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b06bc.   if v3 != 0 then goto L0b06d0;
#L0b06c0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b06c4.   v1:= "Cookie may not be null" @type (object, string);
#L0b06c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b06ce.   throw v0;
#L0b06d0.   v0:= instanceof @varname v3 @type [|org:apache:http:cookie:SetCookie2|];
#L0b06d4.   if v0 == 0 then goto L0b0704;
#L0b06d8.   v0:= instanceof @varname v3 @type [|org:apache:http:cookie:ClientCookie|];
#L0b06dc.   if v0 == 0 then goto L0b0704;
#L0b06e0.   v3:= ([|org:apache:http:cookie:ClientCookie|])v3;
#L0b06e4.   v0:= "version" @type (object, string);
#L0b06e8.   call temp:=  [|org:apache:http:cookie:ClientCookie.containsAttribute|](v3, v0) @signature [|Lorg/apache/http/cookie/ClientCookie;.containsAttribute:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:cookie:ClientCookie|] @type interface;
#L0b06ee.   v0:= temp;
#L0b06f0.   if v0 != 0 then goto L0b0704;
#L0b06f4.   v0:= new [|org:apache:http:cookie:MalformedCookieException|];
#L0b06f8.   v1:= "Violates RFC 2965. Version attribute is required." @type (object, string);
#L0b06fc.   call temp:=  [|org:apache:http:cookie:MalformedCookieException.<init>|](v0, v1) @signature [|Lorg/apache/http/cookie/MalformedCookieException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:cookie:MalformedCookieException|] @type direct;
#L0b0702.   throw v0;
#L0b0704.   return @void ;

   }
record [|org:apache:http:impl:entity:EntityDeserializer|]  @type class @AccessFlag PUBLIC  {
      [|org:apache:http:entity:ContentLengthStrategy|] [|org:apache:http:impl:entity:EntityDeserializer.lenStrategy|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:entity:EntityDeserializer.<init>|] ([|org:apache:http:impl:entity:EntityDeserializer|] v2 @type (this), [|org:apache:http:entity:ContentLengthStrategy|] v3 @type (object)) @owner [|org:apache:http:impl:entity:EntityDeserializer|] @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b0718.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b071e.   if v3 != 0 then goto L0b0732;
#L0b0722.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0726.   v1:= "Content length strategy may not be null" @type (object, string);
#L0b072a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0730.   throw v0;
#L0b0732.   v2.[|org:apache:http:impl:entity:EntityDeserializer.lenStrategy|]  := v3 @type object;
#L0b0736.   return @void ;

   }
    procedure [|org:apache:http:HttpEntity|] [|org:apache:http:impl:entity:EntityDeserializer.deserialize|] ([|org:apache:http:impl:entity:EntityDeserializer|] v2 @type (this), [|org:apache:http:io:SessionInputBuffer|] v3 @type (object), [|org:apache:http:HttpMessage|] v4 @type (object)) @owner [|org:apache:http:impl:entity:EntityDeserializer|] @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.deserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/HttpEntity;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0748.   if v3 != 0 then goto L0b075c;
#L0b074c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0750.   v1:= "Session input buffer may not be null" @type (object, string);
#L0b0754.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b075a.   throw v0;
#L0b075c.   if v4 != 0 then goto L0b0770;
#L0b0760.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0764.   v1:= "HTTP message may not be null" @type (object, string);
#L0b0768.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b076e.   throw v0;
#L0b0770.   call temp:=  [|org:apache:http:impl:entity:EntityDeserializer.doDeserialize|](v2, v3, v4) @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.doDeserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/entity/BasicHttpEntity;|] @classDescriptor [|org:apache:http:impl:entity:EntityDeserializer|] @type virtual;
#L0b0776.   v0:= temp  @type object;
#L0b0778.   return v0  @type object;

   }
    procedure [|org:apache:http:entity:BasicHttpEntity|] [|org:apache:http:impl:entity:EntityDeserializer.doDeserialize|] ([|org:apache:http:impl:entity:EntityDeserializer|] v10 @type (this), [|org:apache:http:io:SessionInputBuffer|] v11 @type (object), [|org:apache:http:HttpMessage|] v12 @type (object)) @owner [|org:apache:http:impl:entity:EntityDeserializer|] @signature [|Lorg/apache/http/impl/entity/EntityDeserializer;.doDeserialize:(Lorg/apache/http/io/SessionInputBuffer;Lorg/apache/http/HttpMessage;)Lorg/apache/http/entity/BasicHttpEntity;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b078c.   v9:= 0  @length 4;
#L0b078e.   v7:= -1  @length wide16;
#L0b0792.   v2:= new [|org:apache:http:entity:BasicHttpEntity|];
#L0b0796.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.<init>|](v2) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.<init>:()V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type direct;
#L0b079c.   v5:= v10.[|org:apache:http:impl:entity:EntityDeserializer.lenStrategy|]   @type object;
#L0b07a0.   call temp:=  [|org:apache:http:entity:ContentLengthStrategy.determineLength|](v5, v12) @signature [|Lorg/apache/http/entity/ContentLengthStrategy;.determineLength:(Lorg/apache/http/HttpMessage;)J|] @classDescriptor [|org:apache:http:entity:ContentLengthStrategy|] @type interface;
#L0b07a6.   v3:= temp  @type wide;
#L0b07a8.   v5:= -2  @length wide16;
#L0b07ac.   v5:= cmp(v3,v5);
#L0b07b0.   if v5 != 0 then goto L0b0800;
#L0b07b4.   v5:= 1  @length 4;
#L0b07b6.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setChunked|](v2, v5) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setChunked:(Z)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b07bc.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContentLength|](v2, v7, v8) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentLength:(J)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b07c2.   v5:= new [|org:apache:http:impl:io:ChunkedInputStream|];
#L0b07c6.   call temp:=  [|org:apache:http:impl:io:ChunkedInputStream.<init>|](v5, v11) @signature [|Lorg/apache/http/impl/io/ChunkedInputStream;.<init>:(Lorg/apache/http/io/SessionInputBuffer;)V|] @classDescriptor [|org:apache:http:impl:io:ChunkedInputStream|] @type direct;
#L0b07cc.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContent|](v2, v5) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContent:(Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b07d2.   v5:= "Content-Type" @type (object, string);
#L0b07d6.   call temp:=  [|org:apache:http:HttpMessage.getFirstHeader|](v12, v5) @signature [|Lorg/apache/http/HttpMessage;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b07dc.   v1:= temp  @type object;
#L0b07de.   if v1 == 0 then goto L0b07e8;
#L0b07e2.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContentType|](v2, v1) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentType:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b07e8.   v5:= "Content-Encoding" @type (object, string);
#L0b07ec.   call temp:=  [|org:apache:http:HttpMessage.getFirstHeader|](v12, v5) @signature [|Lorg/apache/http/HttpMessage;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b07f2.   v0:= temp  @type object;
#L0b07f4.   if v0 == 0 then goto L0b07fe;
#L0b07f8.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContentEncoding|](v2, v0) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentEncoding:(Lorg/apache/http/Header;)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b07fe.   return v2  @type object;
#L0b0800.   v5:= cmp(v3,v7);
#L0b0804.   if v5 != 0 then goto L0b0826;
#L0b0808.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setChunked|](v2, v9) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setChunked:(Z)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b080e.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContentLength|](v2, v7, v8) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentLength:(J)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b0814.   v5:= new [|org:apache:http:impl:io:IdentityInputStream|];
#L0b0818.   call temp:=  [|org:apache:http:impl:io:IdentityInputStream.<init>|](v5, v11) @signature [|Lorg/apache/http/impl/io/IdentityInputStream;.<init>:(Lorg/apache/http/io/SessionInputBuffer;)V|] @classDescriptor [|org:apache:http:impl:io:IdentityInputStream|] @type direct;
#L0b081e.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContent|](v2, v5) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContent:(Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b0824.   goto L0b07d2;
#L0b0826.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setChunked|](v2, v9) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setChunked:(Z)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b082c.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContentLength|](v2, v3, v4) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContentLength:(J)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b0832.   v5:= new [|org:apache:http:impl:io:ContentLengthInputStream|];
#L0b0836.   call temp:=  [|org:apache:http:impl:io:ContentLengthInputStream.<init>|](v5, v11, v3, v4) @signature [|Lorg/apache/http/impl/io/ContentLengthInputStream;.<init>:(Lorg/apache/http/io/SessionInputBuffer;J)V|] @classDescriptor [|org:apache:http:impl:io:ContentLengthInputStream|] @type direct;
#L0b083c.   call temp:=  [|org:apache:http:entity:BasicHttpEntity.setContent|](v2, v5) @signature [|Lorg/apache/http/entity/BasicHttpEntity;.setContent:(Ljava/io/InputStream;)V|] @classDescriptor [|org:apache:http:entity:BasicHttpEntity|] @type virtual;
#L0b0842.   goto L0b07d2;

   }
record [|org:apache:http:impl:entity:EntitySerializer|]  @type class @AccessFlag PUBLIC  {
      [|org:apache:http:entity:ContentLengthStrategy|] [|org:apache:http:impl:entity:EntitySerializer.lenStrategy|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|org:apache:http:impl:entity:EntitySerializer.<init>|] ([|org:apache:http:impl:entity:EntitySerializer|] v2 @type (this), [|org:apache:http:entity:ContentLengthStrategy|] v3 @type (object)) @owner [|org:apache:http:impl:entity:EntitySerializer|] @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.<init>:(Lorg/apache/http/entity/ContentLengthStrategy;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b0854.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b085a.   if v3 != 0 then goto L0b086e;
#L0b085e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0862.   v1:= "Content length strategy may not be null" @type (object, string);
#L0b0866.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b086c.   throw v0;
#L0b086e.   v2.[|org:apache:http:impl:entity:EntitySerializer.lenStrategy|]  := v3 @type object;
#L0b0872.   return @void ;

   }
    procedure [|java:io:OutputStream|] [|org:apache:http:impl:entity:EntitySerializer.doSerialize|] ([|org:apache:http:impl:entity:EntitySerializer|] v4 @type (this), [|org:apache:http:io:SessionOutputBuffer|] v5 @type (object), [|org:apache:http:HttpMessage|] v6 @type (object)) @owner [|org:apache:http:impl:entity:EntitySerializer|] @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.doSerialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;)Ljava/io/OutputStream;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b0884.   v2:= v4.[|org:apache:http:impl:entity:EntitySerializer.lenStrategy|]   @type object;
#L0b0888.   call temp:=  [|org:apache:http:entity:ContentLengthStrategy.determineLength|](v2, v6) @signature [|Lorg/apache/http/entity/ContentLengthStrategy;.determineLength:(Lorg/apache/http/HttpMessage;)J|] @classDescriptor [|org:apache:http:entity:ContentLengthStrategy|] @type interface;
#L0b088e.   v0:= temp  @type wide;
#L0b0890.   v2:= -2  @length wide16;
#L0b0894.   v2:= cmp(v0,v2);
#L0b0898.   if v2 != 0 then goto L0b08a8;
#L0b089c.   v2:= new [|org:apache:http:impl:io:ChunkedOutputStream|];
#L0b08a0.   call temp:=  [|org:apache:http:impl:io:ChunkedOutputStream.<init>|](v2, v5) @signature [|Lorg/apache/http/impl/io/ChunkedOutputStream;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;)V|] @classDescriptor [|org:apache:http:impl:io:ChunkedOutputStream|] @type direct;
#L0b08a6.   return v2  @type object;
#L0b08a8.   v2:= -1  @length wide16;
#L0b08ac.   v2:= cmp(v0,v2);
#L0b08b0.   if v2 != 0 then goto L0b08c0;
#L0b08b4.   v2:= new [|org:apache:http:impl:io:IdentityOutputStream|];
#L0b08b8.   call temp:=  [|org:apache:http:impl:io:IdentityOutputStream.<init>|](v2, v5) @signature [|Lorg/apache/http/impl/io/IdentityOutputStream;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;)V|] @classDescriptor [|org:apache:http:impl:io:IdentityOutputStream|] @type direct;
#L0b08be.   goto L0b08a6;
#L0b08c0.   v2:= new [|org:apache:http:impl:io:ContentLengthOutputStream|];
#L0b08c4.   call temp:=  [|org:apache:http:impl:io:ContentLengthOutputStream.<init>|](v2, v5, v0, v1) @signature [|Lorg/apache/http/impl/io/ContentLengthOutputStream;.<init>:(Lorg/apache/http/io/SessionOutputBuffer;J)V|] @classDescriptor [|org:apache:http:impl:io:ContentLengthOutputStream|] @type direct;
#L0b08ca.   goto L0b08a6;

   }
    procedure [|void|] [|org:apache:http:impl:entity:EntitySerializer.serialize|] ([|org:apache:http:impl:entity:EntitySerializer|] v3 @type (this), [|org:apache:http:io:SessionOutputBuffer|] v4 @type (object), [|org:apache:http:HttpMessage|] v5 @type (object), [|org:apache:http:HttpEntity|] v6 @type (object)) @owner [|org:apache:http:impl:entity:EntitySerializer|] @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.serialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;Lorg/apache/http/HttpEntity;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b08dc.   if v4 != 0 then goto L0b08f0;
#L0b08e0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0b08e4.   v2:= "Session output buffer may not be null" @type (object, string);
#L0b08e8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b08ee.   throw v1;
#L0b08f0.   if v5 != 0 then goto L0b0904;
#L0b08f4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0b08f8.   v2:= "HTTP message may not be null" @type (object, string);
#L0b08fc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0902.   throw v1;
#L0b0904.   if v6 != 0 then goto L0b0918;
#L0b0908.   v1:= new [|java:lang:IllegalArgumentException|];
#L0b090c.   v2:= "HTTP entity may not be null" @type (object, string);
#L0b0910.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0916.   throw v1;
#L0b0918.   call temp:=  [|org:apache:http:impl:entity:EntitySerializer.doSerialize|](v3, v4, v5) @signature [|Lorg/apache/http/impl/entity/EntitySerializer;.doSerialize:(Lorg/apache/http/io/SessionOutputBuffer;Lorg/apache/http/HttpMessage;)Ljava/io/OutputStream;|] @classDescriptor [|org:apache:http:impl:entity:EntitySerializer|] @type virtual;
#L0b091e.   v0:= temp  @type object;
#L0b0920.   call temp:=  [|org:apache:http:HttpEntity.writeTo|](v6, v0) @signature [|Lorg/apache/http/HttpEntity;.writeTo:(Ljava/io/OutputStream;)V|] @classDescriptor [|org:apache:http:HttpEntity|] @type interface;
#L0b0926.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0b092c.   return @void ;

   }
record [|org:apache:http:impl:entity:LaxContentLengthStrategy|]  @type class @AccessFlag PUBLIC extends  [|org:apache:http:entity:ContentLengthStrategy|] {
   }
    procedure [|void|] [|org:apache:http:impl:entity:LaxContentLengthStrategy.<init>|] ([|org:apache:http:impl:entity:LaxContentLengthStrategy|] v0 @type (this)) @owner [|org:apache:http:impl:entity:LaxContentLengthStrategy|] @signature [|Lorg/apache/http/impl/entity/LaxContentLengthStrategy;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b0940.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b0946.   return @void ;

   }
    procedure [|long|] [|org:apache:http:impl:entity:LaxContentLengthStrategy.determineLength|] ([|org:apache:http:impl:entity:LaxContentLengthStrategy|] v18 @type (this), [|org:apache:http:HttpMessage|] v19 @type (object)) @owner [|org:apache:http:impl:entity:LaxContentLengthStrategy|] @signature [|Lorg/apache/http/impl/entity/LaxContentLengthStrategy;.determineLength:(Lorg/apache/http/HttpMessage;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
      
#L0b0958.   if v19 != 0 then goto L0b096c;
#L0b095c.   v15:= new [|java:lang:IllegalArgumentException|];
#L0b0960.   v16:= "HTTP message may not be null" @type (object, string);
#L0b0964.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v15, v16) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b096a.   throw v15;
#L0b096c.   call temp:=  [|org:apache:http:HttpMessage.getParams|](v19) @signature [|Lorg/apache/http/HttpMessage;.getParams:()Lorg/apache/http/params/HttpParams;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b0972.   v11:= temp  @type object;
#L0b0974.   v15:= "http.protocol.strict-transfer-encoding" @type (object, string);
#L0b0978.   call temp:=  [|org:apache:http:params:HttpParams.isParameterTrue|](v11, v15) @signature [|Lorg/apache/http/params/HttpParams;.isParameterTrue:(Ljava/lang/String;)Z|] @classDescriptor [|org:apache:http:params:HttpParams|] @type interface;
#L0b097e.   v13:= temp;
#L0b0980.   v15:= "Transfer-Encoding" @type (object, string);
#L0b0984.   v0:= v19  @type object;
#L0b0988.   call temp:=  [|org:apache:http:HttpMessage.getFirstHeader|](v0, v15) @signature [|Lorg/apache/http/HttpMessage;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b098e.   v14:= temp  @type object;
#L0b0990.   v15:= "Content-Length" @type (object, string);
#L0b0994.   v0:= v19  @type object;
#L0b0998.   call temp:=  [|org:apache:http:HttpMessage.getFirstHeader|](v0, v15) @signature [|Lorg/apache/http/HttpMessage;.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b099e.   v1:= temp  @type object;
#L0b09a0.   if v14 == 0 then goto L0b0ad2;
#L0b09a4.   v6:= 0  @length 4;
#L0b09a6.   call temp:=  [|org:apache:http:Header.getElements|](v14) @signature [|Lorg/apache/http/Header;.getElements:()[Lorg/apache/http/HeaderElement;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b09ac.   v6:= temp  @type object;
#L0b09ae.   if v13 == 0 then goto L0b0a6e;
#L0b09b2.   v9:= 0  @length 4;
#L0b09b4.   v15:= v6.length;
#L0b09b6.   if v9 >= v15 then goto L0b0a6e;
#L0b09ba.   v15:= v6[v9]  @type object;
#L0b09be.   call temp:=  [|org:apache:http:HeaderElement.getName|](v15) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0b09c4.   v5:= temp  @type object;
#L0b09c6.   if v5 == 0 then goto L0b0a68;
#L0b09ca.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b09d0.   v15:= temp;
#L0b09d2.   if v15 <= 0 then goto L0b0a68;
#L0b09d6.   v15:= "chunked" @type (object, string);
#L0b09da.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v5, v15) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b09e0.   v15:= temp;
#L0b09e2.   if v15 != 0 then goto L0b0a68;
#L0b09e6.   v15:= "identity" @type (object, string);
#L0b09ea.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v5, v15) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b09f0.   v15:= temp;
#L0b09f2.   if v15 != 0 then goto L0b0a68;
#L0b09f6.   v15:= new [|org:apache:http:ProtocolException|];
#L0b09fa.   v16:= new [|java:lang:StringBuilder|];
#L0b09fe.   call temp:=  [|java:lang:StringBuilder.<init>|](v16) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0a04.   v17:= "Unsupported transfer encoding: " @type (object, string);
#L0b0a08.   call temp:=  [|java:lang:StringBuilder.append|](v16, v17) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a0e.   v16:= temp  @type object;
#L0b0a10.   v0:= v16  @type object;
#L0b0a14.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a1a.   v16:= temp  @type object;
#L0b0a1c.   call temp:=  [|java:lang:StringBuilder.toString|](v16) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a22.   v16:= temp  @type object;
#L0b0a24.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v15, v16) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0b0a2a.   throw v15;
#L0b0a2c.   v12:= Exception  @type object;
#L0b0a2e.   v15:= new [|org:apache:http:ProtocolException|];
#L0b0a32.   v16:= new [|java:lang:StringBuilder|];
#L0b0a36.   call temp:=  [|java:lang:StringBuilder.<init>|](v16) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0a3c.   v17:= "Invalid Transfer-Encoding header value: " @type (object, string);
#L0b0a40.   call temp:=  [|java:lang:StringBuilder.append|](v16, v17) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a46.   v16:= temp  @type object;
#L0b0a48.   v0:= v16  @type object;
#L0b0a4c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a52.   v16:= temp  @type object;
#L0b0a54.   call temp:=  [|java:lang:StringBuilder.toString|](v16) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a5a.   v16:= temp  @type object;
#L0b0a5c.   v0:= v16  @type object;
#L0b0a60.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v15, v0, v12) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0b0a66.   throw v15;
#L0b0a68.   v9:= v9 + 1;
#L0b0a6c.   goto L0b09b4;
#L0b0a6e.   v10:= v6.length;
#L0b0a70.   v15:= "identity" @type (object, string);
#L0b0a74.   call temp:=  [|org:apache:http:Header.getValue|](v14) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b0a7a.   v16:= temp  @type object;
#L0b0a7c.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v15, v16) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0a82.   v15:= temp;
#L0b0a84.   if v15 == 0 then goto L0b0a8e;
#L0b0a88.   v2:= -1  @length wide16;
#L0b0a8c.   return v2  @type wide;
#L0b0a8e.   if v10 <= 0 then goto L0b0ab8;
#L0b0a92.   v15:= "chunked" @type (object, string);
#L0b0a96.   v16:= v10 + -1;
#L0b0a9a.   v16:= v6[v16]  @type object;
#L0b0a9e.   call temp:=  [|org:apache:http:HeaderElement.getName|](v16) @signature [|Lorg/apache/http/HeaderElement;.getName:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:HeaderElement|] @type interface;
#L0b0aa4.   v16:= temp  @type object;
#L0b0aa6.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v15, v16) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0aac.   v15:= temp;
#L0b0aae.   if v15 == 0 then goto L0b0ab8;
#L0b0ab2.   v2:= -2  @length wide16;
#L0b0ab6.   goto L0b0a8c;
#L0b0ab8.   if v13 == 0 then goto L0b0acc;
#L0b0abc.   v15:= new [|org:apache:http:ProtocolException|];
#L0b0ac0.   v16:= "Chunk-encoding must be the last one applied" @type (object, string);
#L0b0ac4.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v15, v16) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0b0aca.   throw v15;
#L0b0acc.   v2:= -1  @length wide16;
#L0b0ad0.   goto L0b0a8c;
#L0b0ad2.   if v1 == 0 then goto L0b0b82;
#L0b0ad6.   v2:= -1  @length wide16;
#L0b0ada.   v15:= "Content-Length" @type (object, string);
#L0b0ade.   v0:= v19  @type object;
#L0b0ae2.   call temp:=  [|org:apache:http:HttpMessage.getHeaders|](v0, v15) @signature [|Lorg/apache/http/HttpMessage;.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;|] @classDescriptor [|org:apache:http:HttpMessage|] @type interface;
#L0b0ae8.   v8:= temp  @type object;
#L0b0aea.   if v13 == 0 then goto L0b0b0c;
#L0b0aee.   v15:= v8.length;
#L0b0af0.   v16:= 1  @length 16;
#L0b0af4.   v0:= v16;
#L0b0af8.   if v15 <= v0 then goto L0b0b0c;
#L0b0afc.   v15:= new [|org:apache:http:ProtocolException|];
#L0b0b00.   v16:= "Multiple content length headers" @type (object, string);
#L0b0b04.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v15, v16) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0b0b0a.   throw v15;
#L0b0b0c.   v15:= v8.length;
#L0b0b0e.   v9:= v15 + -1;
#L0b0b12.   if v9 < 0 then goto L0b0b2a;
#L0b0b16.   v7:= v8[v9]  @type object;
#L0b0b1a.   call temp:=  [|org:apache:http:Header.getValue|](v7) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b0b20.   v15:= temp  @type object;
#L0b0b22.   call temp:=  [|java:lang:Long.parseLong|](v15) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J|] @classDescriptor [|java:lang:Long|] @type static;
#L0b0b28.   v2:= temp  @type wide;
#L0b0b2a.   v15:= 0  @length wide16;
#L0b0b2e.   v15:= cmp(v2,v15);
#L0b0b32.   if v15 >= 0 then goto L0b0a8c;
#L0b0b36.   v2:= -1  @length wide16;
#L0b0b3a.   goto L0b0a8c;
#L0b0b3c.   v4:= Exception  @type object;
#L0b0b3e.   if v13 == 0 then goto L0b0b7c;
#L0b0b42.   v15:= new [|org:apache:http:ProtocolException|];
#L0b0b46.   v16:= new [|java:lang:StringBuilder|];
#L0b0b4a.   call temp:=  [|java:lang:StringBuilder.<init>|](v16) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0b50.   v17:= "Invalid content length: " @type (object, string);
#L0b0b54.   call temp:=  [|java:lang:StringBuilder.append|](v16, v17) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0b5a.   v16:= temp  @type object;
#L0b0b5c.   call temp:=  [|org:apache:http:Header.getValue|](v7) @signature [|Lorg/apache/http/Header;.getValue:()Ljava/lang/String;|] @classDescriptor [|org:apache:http:Header|] @type interface;
#L0b0b62.   v17:= temp  @type object;
#L0b0b64.   call temp:=  [|java:lang:StringBuilder.append|](v16, v17) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0b6a.   v16:= temp  @type object;
#L0b0b6c.   call temp:=  [|java:lang:StringBuilder.toString|](v16) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0b72.   v16:= temp  @type object;
#L0b0b74.   call temp:=  [|org:apache:http:ProtocolException.<init>|](v15, v16) @signature [|Lorg/apache/http/ProtocolException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:http:ProtocolException|] @type direct;
#L0b0b7a.   throw v15;
#L0b0b7c.   v9:= v9 + -1;
#L0b0b80.   goto L0b0b12;
#L0b0b82.   v2:= -1  @length wide16;
#L0b0b86.   goto L0b0a8c;
  catch  [|org:apache:http:ParseException|] @[L0b09a6..L0b09ac] goto L0b0a2c;
  catch  [|java:lang:NumberFormatException|] @[L0b0b1a..L0b0b28] goto L0b0b3c;

   }
